typedef unsigned char BYTE;

//So I looked into making these registered types, so that you can use them directly
//as arguments in class modules, UserControls, etc, but unfortunately this means
//oleexp.tlb would have to be present and registered on the system, which is not
//acceptable for this project. If you would like to do this on your own, here's
//how you would define the types:
//typedef [uuid(3A46989E-7BB2-4783-907C-21B0F635DF2F)] struct UUID {
//    LONG Data1;
//    SHORT Data2;
//    SHORT Data3;
//    BYTE Data4[8];
//} UUID;
//typedef [uuid(9F81323C-E851-499F-A2D2-A5BEF4FFFFB0)] struct PROPERTYKEY {
//  UUID fmtid;
//  LONG pid;
//} PROPERTYKEY;


typedef struct UUID {
	LONG Data1;
	SHORT Data2;
	SHORT Data3;
	BYTE Data4[8];
} UUID;
typedef UUID *REFIID;
typedef UUID* REFGUID;
typedef UUID* LPGUID;
typedef UUID * REFCLSID;
typedef UUID GUID;

typedef struct PROPERTYKEY {
	UUID fmtid;
	LONG pid;
} PROPERTYKEY;
typedef PROPERTYKEY *REFPROPERTYKEY;
typedef PROPERTYKEY DEVPROPKEY;

typedef[public] char CHAR;

typedef [public] long   *vbLongPtr;
typedef [public] long   LongPtr;
typedef [public] LONG   BOOL;
typedef [public] LongPtr   LONG_PTR;
typedef LPWSTR          SNB;
typedef wchar_t         WCHAR;
typedef WCHAR           OLECHAR;
typedef LPWSTR          LPCWSTR;
typedef void            *LPVOID;  //1.83 added
typedef void            *LPCVOID;
typedef LPSTR           LPCSTR;
typedef LPSTR           LPOLESTR;
typedef LPSTR           LPCOLESTR;
typedef long            ULONG;
typedef long            UINT;
typedef long            UINT32;
typedef long            HWND;
typedef long            DWORD;
typedef long*           LPDWORD;
typedef long            HKEY;
typedef long            HMENU;
typedef long            HICON;
typedef long            HBITMAP;
typedef long            HIMAGELIST;
typedef long            HINSTANCE;
typedef long			HMODULE;
typedef long            HDC;
typedef long            HACCEL;
typedef long            HTASK;
typedef long            HPALETTE;
typedef long            HMONITOR;
typedef long            HCURSOR;
typedef long            HRGN;
typedef long            HANDLE;
typedef long            COLORREF;
typedef double			REFTIME;
typedef long			HSEMAPHORE;
typedef long			HEVENT;
typedef long			DWORD_PTR;
typedef long            ULONG_PTR;
typedef long            UINT_PTR;
typedef long            LCID;
typedef CURRENCY        ULONGLONG;
typedef CURRENCY        LONGLONG;
typedef CURRENCY        UINT64;
typedef CURRENCY        ULONG64;
typedef CURRENCY        DWORDLONG;
typedef UUID            *REFKNOWNFOLDERID;
typedef UUID            FOLDERTYPEID;
typedef	UUID            CLSID;
typedef UUID            SHELLVIEWID;
typedef short           WORD;
typedef WORD            LANGID;
typedef BOOLEAN         VARIANT_BOOL;
typedef CURRENCY        QWORD;
typedef [public] CURRENCY REFERENCE_TIME;
typedef [public] UUID    KNOWNFOLDERID;
typedef LongPtr            SIZE_T;
typedef short           INT16;
typedef short           UINT16;
typedef short           USHORT;
typedef long            INT32;
typedef CURRENCY        INT64;
typedef unsigned char   UINT8;
typedef unsigned char   UCHAR;
typedef long            WPARAM;
typedef long            LPARAM;
typedef long            LRESULT;
typedef VARIANT         VARIANTARG;

typedef [public] CURRENCY HNSTIME;
typedef struct LARGE_INTEGER {
	LONG lowpart;
	LONG hipart;
} LARGE_INTEGER;

//typedef long            LPCWSTR;



// typedef UNALIGNED ITEMIDLIST * LPITEMIDLIST;
// typedef const UNALIGNED ITEMIDLIST * LPCITEMIDLIST;
typedef LONG LPITEMIDLIST;
typedef LONG LPCITEMIDLIST;
typedef LONG PCIDLIST_ABSOLUTE;
typedef LONG PCIDLIST_CHILD;
typedef LONG PIDLIST_ABSOLUTE;
typedef LONG PIDLIST_CHILD;
typedef LONG PCUITEMID_ABSOLUTE;
typedef LONG PCUITEMID_CHILD;
typedef LONG PITEMID_CHILD;
typedef LONG PUITEMID_CHILD;
typedef LONG PCUIDLIST_RELATIVE;


