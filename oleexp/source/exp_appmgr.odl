//tbShellLib - 100% implemented
//exp_appmgr   tbShellLib - 100% implemented
//published application interfaces from SDK include shappmgr.idl
typedef enum APPINFODATAFLAGS {
    AIM_DISPLAYNAME           = 0x00000001,
    AIM_VERSION               = 0x00000002,
    AIM_PUBLISHER             = 0x00000004,
    AIM_PRODUCTID             = 0x00000008,
    AIM_REGISTEREDOWNER       = 0x00000010,
    AIM_REGISTEREDCOMPANY     = 0x00000020,
    AIM_LANGUAGE              = 0x00000040,
    AIM_SUPPORTURL            = 0x00000080,
    AIM_SUPPORTTELEPHONE      = 0x00000100,
    AIM_HELPLINK              = 0x00000200,
    AIM_INSTALLLOCATION       = 0x00000400,
    AIM_INSTALLSOURCE         = 0x00000800,
    AIM_INSTALLDATE           = 0x00001000,
//        AIM_REQUIREDBYPOLICY      = 0x00002000,  Obsolete. Do not reuse.
    AIM_CONTACT               = 0x00004000,
    AIM_COMMENTS              = 0x00008000,
    AIM_IMAGE                 = 0x00020000,
    AIM_READMEURL             = 0x00040000,
    AIM_UPDATEINFOURL         = 0x00080000
} APPINFODATAFLAGS;

typedef struct APPINFODATA {
    DWORD cbSize;
    DWORD dwMask;                // APPINFODATAFLAGS, IN/OUT
    LONG pszDisplayName;
    LONG pszVersion;
    LONG pszPublisher;
    LONG pszProductID;
    LONG pszRegisteredOwner;
    LONG pszRegisteredCompany;
    LONG pszLanguage;
    LONG pszSupportUrl;
    LONG pszSupportTelephone;
    LONG pszHelpLink;
    LONG pszInstallLocation;
    LONG pszInstallSource;
    LONG pszInstallDate;
    LONG pszContact;
    LONG pszComments;
    LONG pszImage;
    LONG pszReadmeUrl;
    LONG pszUpdateInfoUrl;
} APPINFODATA;
typedef enum APPACTIONFLAGS {
    APPACTION_INSTALL      = 0x00000001,
    APPACTION_UNINSTALL    = 0x00000002,
    APPACTION_MODIFY       = 0x00000004,
    APPACTION_REPAIR       = 0x00000008,
    APPACTION_UPGRADE      = 0x00000010,
    APPACTION_CANGETSIZE   = 0x00000020,
    APPACTION_MODIFYREMOVE = 0x00000080,
    APPACTION_ADDLATER     = 0x00000100,
    APPACTION_UNSCHEDULE   = 0x00000200
} APPACTIONFLAGS;

typedef struct SLOWAPPINFO {
    CURRENCY  ullSize;
    FILETIME  ftLastUsed;
    int       iTimesUsed;
    LONG      pszImage;
} SLOWAPPINFO;
[
	odl,
    uuid(A3E14960-935F-11D1-B8B8-006008059382)
]
interface IShellApp : stdole.IUnknown
{
    HRESULT GetAppInfo([in, out] APPINFODATA *pai);

    HRESULT GetPossibleActions([out] DWORD * pdwActions);
    //
    // Synchronously obtains the slow info for the app. This method call
    // can be very slow.
    
    HRESULT GetSlowAppInfo([out] SLOWAPPINFO *psaid);
    //
    // Obtain the cached slow info for the app, this will be fast.
    //
    HRESULT GetCachedSlowAppInfo([out] SLOWAPPINFO *psaid);
    //
    // Returns S_OK if installed S_FALSE if not installed
    //
    HRESULT IsInstalled(void);
};


typedef enum PUBAPPINFOFLAGS {
    PAI_SOURCE        = 0x00000001,
    PAI_ASSIGNEDTIME  = 0x00000002,
    PAI_PUBLISHEDTIME = 0x00000004,
    PAI_SCHEDULEDTIME = 0x00000008,
    PAI_EXPIRETIME    = 0x00000010
} PUBAPPINFOFLAGS;

typedef struct PUBAPPINFO {
    DWORD cbSize;
    DWORD dwMask;              // PUBAPPINFOFLAGS, IN/OUT
    LongPtr pszSource;
    SYSTEMTIME  stAssigned;
    SYSTEMTIME  stPublished;
    SYSTEMTIME  stScheduled;
    SYSTEMTIME  stExpire;
} PUBAPPINFO;

[
	odl,
    uuid(1BC752E0-9046-11D1-B8B3-006008059382)
]
interface IPublishedApp : IShellApp
{


    HRESULT Install([in] SYSTEMTIME *pstInstall);
    HRESULT GetPublishedAppInfo([in, out] PUBAPPINFO *ppai);
    HRESULT Unschedule(void);
};

[
	odl,
    uuid(12B81347-1B3A-4A04-AA61-3F768B67FD7E)
]
interface IPublishedApp2 : IPublishedApp
{
    HRESULT Install2([in] SYSTEMTIME *pstInstall, [in] HWND hwndParent);
}

//
// IEnumPublishedApps interface
//
[
	odl,
    uuid(0B124F8C-91F0-11D1-B8B5-006008059382)
]
interface IEnumPublishedApps : stdole.IUnknown
{

    HRESULT Next([out] IPublishedApp** pia);
    HRESULT Reset(void);
};

typedef struct APPCATEGORYINFO {
  LONG   Locale;
  LONG   pszDescription;
  UUID   AppCategoryId;
} APPCATEGORYINFO;
typedef struct APPCATEGORYINFOLIST {
  DWORD           cCategory;
  LONG pCategoryInfo;
} APPCATEGORYINFOLIST;
[
	odl,
    uuid(07250A10-9CF9-11D1-9076-006008059382)
]
interface IAppPublisher : stdole.IUnknown
{
    HRESULT GetNumberOfCategories([out] DWORD *pdwCat);
    HRESULT GetCategories([out] APPCATEGORYINFOLIST *pAppCategoryList);
    HRESULT GetNumberOfApps([out] DWORD *pdwApps);
    HRESULT EnumApps([in] UUID *pAppCategoryId, [out] IEnumPublishedApps **ppepa);
}

