'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'Windows Filtering Platform

'Currently basic coverage only

'fwptypes.h - 100% coverage
'iketypes.h - 0%
'ipsectypes.h - 0%
'fwpmtypes.h - 40% coverage

'fwpmu.h - GUID coverage is complete; minimal API/type coverage


Module wdAPIWFP

#Region "fwptypes.h"

Public Enum FWP_DIRECTION
    FWP_DIRECTION_OUTBOUND
    FWP_DIRECTION_INBOUND
    FWP_DIRECTION_MAX
End Enum

Public Enum FWP_IP_VERSION
    FWP_IP_VERSION_V4
    FWP_IP_VERSION_V6
    FWP_IP_VERSION_NONE
    FWP_IP_VERSION_MAX
End Enum

Public Enum FWP_NE_FAMILY
    FWP_AF_INET = FWP_IP_VERSION_V4
    FWP_AF_INET6 = FWP_IP_VERSION_V6
    FWP_AF_ETHER = FWP_IP_VERSION_NONE
    FWP_AF_NONE
End Enum

Public Enum FWP_ETHER_ENCAP_METHOD_
    FWP_ETHER_ENCAP_METHOD_ETHER_V2 = 0
    FWP_ETHER_ENCAP_METHOD_SNAP = 1
    FWP_ETHER_ENCAP_METHOD_SNAP_W_OUI_ZERO = 3
End Enum

Public Enum FWP_DATA_TYPE
   FWP_EMPTY
   FWP_UINT8
   FWP_UINT16
   FWP_UINT32
   FWP_UINT64
   FWP_INT8
   FWP_INT16
   FWP_INT32
   FWP_INT64
   FWP_FLOAT
   FWP_DOUBLE
   FWP_BYTE_ARRAY16_TYPE
   FWP_BYTE_BLOB_TYPE
   FWP_SID
   FWP_SECURITY_DESCRIPTOR_TYPE
   FWP_TOKEN_INFORMATION_TYPE
   FWP_TOKEN_ACCESS_INFORMATION_TYPE
   FWP_UNICODE_STRING_TYPE
   FWP_BYTE_ARRAY6_TYPE
   FWP_SINGLE_DATA_TYPE_MAX = &HFF
   FWP_V4_ADDR_MASK
   FWP_V6_ADDR_MASK
   FWP_RANGE_TYPE
   FWP_DATA_TYPE_MAX
End Enum

Public Const FWP_BYTEMAP_ARRAY64_SIZE = 8

Public Type FWP_BYTE_ARRAY6
    byteArray6(0 To 5) As Byte
End Type

Public Const FWP_BYTE_ARRAY6_SIZE = 6

Public Type FWP_BYTE_ARRAY16
    byteArray16(0 To 15) As Byte
End Type

Public Type FWP_BYTE_BLOB
    size As Long
    data As LongPtr 'UINT8*
End Type

Public Type FWP_TOKEN_INFORMATION_
    sidCount As Long
    sids As LongPtr 'PSID_AND_ATTRIBUTES
    restrictedSidCount As Long
    restrictedSids As LongPtr 'PSID_AND_ATTRIBUTES
End Type

Public Type FWP_VALUE0
    type As FWP_DATA_TYPE
    ' /* [switch_is][switch_type] */ union 
        ' {
        ' /* [case()] */  /* Empty union arm */ 
        ' /* [case()] */ UINT8 uint8;
        ' /* [case()] */ UINT16 uint16;
        ' /* [case()] */ UINT32 uint32;
        ' /* [case()][unique] */ UINT64 *uint64;
        ' /* [case()] */ INT8 int8;
        ' /* [case()] */ INT16 int16;
        ' /* [case()] */ INT32 int32;
        ' /* [case()][unique] */ INT64 *int64;
        ' /* [case()] */ float float32;
        ' /* [case()][unique] */ double *double64;
        ' /* [case()][unique] */ FWP_BYTE_ARRAY16 *byteArray16;
        ' /* [case()][unique] */ FWP_BYTE_BLOB *byteBlob;
        ' /* [case()][unique] */ SID *sid;
        ' /* [case()][unique] */ FWP_BYTE_BLOB *sd;
        ' /* [case()][unique] */ FWP_TOKEN_INFORMATION *tokenInformation;
        ' /* [case()][unique] */ FWP_BYTE_BLOB *tokenAccessInformation;
        ' /* [case()][string] */ LPWSTR unicodeString;
        ' /* [case()][unique] */ FWP_BYTE_ARRAY6 *byteArray6;
        ' }     ;   
    u As LongPtr

End Type

Public Enum FWP_MATCH_TYPE
    FWP_MATCH_EQUAL
    FWP_MATCH_GREATER
    FWP_MATCH_LESS
    FWP_MATCH_GREATER_OR_EQUAL
    FWP_MATCH_LESS_OR_EQUAL
    FWP_MATCH_RANGE
    FWP_MATCH_FLAGS_ALL_SET
    FWP_MATCH_FLAGS_ANY_SET
    FWP_MATCH_FLAGS_NONE_SET
    FWP_MATCH_EQUAL_CASE_INSENSITIVE
    FWP_MATCH_NOT_EQUAL
    FWP_MATCH_PREFIX
    FWP_MATCH_NOT_PREFIX
    FWP_MATCH_TYPE_MAX
End Enum

Public Type FWP_V4_ADDR_AND_MASK
    addr As Long
    mask As Long
End Type

Public Const FWP_V6_ADDR_SIZE = 16

Public Type FWP_V6_ADDR_AND_MASK
    addr(0 To (FWP_V6_ADDR_SIZE - 1)) As Byte
    prefixLength As Byte
End Type

Public Type FWP_RANGE0
    valueLow As FWP_VALUE0
    valueHigh As FWP_VALUE0
End Type

Public Enum FwpAccessRights
    FWP_ACTRL_MATCH_FILTER = &H00000001
End Enum

Public Type FWP_CONDITION_VALUE0
    type As FWP_DATA_TYPE
    ' /* [switch_is][switch_type] */ union 
        ' {
        ' /* [case()] */  /* Empty union arm */ 
        ' /* [case()] */ UINT8 uint8;
        ' /* [case()] */ UINT16 uint16;
        ' /* [case()] */ UINT32 uint32;
        ' /* [case()][unique] */ UINT64 *uint64;
        ' /* [case()] */ INT8 int8;
        ' /* [case()] */ INT16 int16;
        ' /* [case()] */ INT32 int32;
        ' /* [case()][unique] */ INT64 *int64;
        ' /* [case()] */ float float32;
        ' /* [case()][unique] */ double *double64;
        ' /* [case()][unique] */ FWP_BYTE_ARRAY16 *byteArray16;
        ' /* [case()][unique] */ FWP_BYTE_BLOB *byteBlob;
        ' /* [case()][unique] */ SID *sid;
        ' /* [case()][unique] */ FWP_BYTE_BLOB *sd;
        ' /* [case()][unique] */ FWP_TOKEN_INFORMATION *tokenInformation;
        ' /* [case()][unique] */ FWP_BYTE_BLOB *tokenAccessInformation;
        ' /* [case()][string] */ LPWSTR unicodeString;
        ' /* [case()][unique] */ FWP_BYTE_ARRAY6 *byteArray6;
        ' /* [case()][unique] */ FWP_V4_ADDR_AND_MASK *v4AddrMask;
        ' /* [case()][unique] */ FWP_V6_ADDR_AND_MASK *v6AddrMask;
        ' /* [case()][unique] */ FWP_RANGE0 *rangeValue;
        ' }     ;
    u As LongPtr
End Type
    
Public Enum FWP_NETWORK_CONNECTION_POLICY_SETTING_TYPE
    FWP_NETWORK_CONNECTION_POLICY_SOURCE_ADDRESS
    FWP_NETWORK_CONNECTION_POLICY_NEXT_HOP_INTERFACE
    FWP_NETWORK_CONNECTION_POLICY_NEXT_HOP
    FWP_NETWORK_CONNECTION_POLICY_MAX
End Enum

Public Enum FWP_CLASSIFY_OPTION_TYPE
    FWP_CLASSIFY_OPTION_MULTICAST_STATE
    FWP_CLASSIFY_OPTION_LOOSE_SOURCE_MAPPING
    FWP_CLASSIFY_OPTION_UNICAST_LIFETIME
    FWP_CLASSIFY_OPTION_MCAST_BCAST_LIFETIME
    FWP_CLASSIFY_OPTION_SECURE_SOCKET_SECURITY_FLAGS
    FWP_CLASSIFY_OPTION_SECURE_SOCKET_AUTHIP_MM_POLICY_KEY
    FWP_CLASSIFY_OPTION_SECURE_SOCKET_AUTHIP_QM_POLICY_KEY
    FWP_CLASSIFY_OPTION_LOCAL_ONLY_MAPPING
    FWP_CLASSIFY_OPTION_MAX
End Enum

Public Enum FwpOptionValues
    FWP_OPTION_VALUE_ALLOW_MULTICAST_STATE = (&H00000000)
    FWP_OPTION_VALUE_DENY_MULTICAST_STATE = (&H00000001)
    FWP_OPTION_VALUE_ALLOW_GLOBAL_MULTICAST_STATE = (&H00000002)
    FWP_OPTION_VALUE_DISABLE_LOOSE_SOURCE = (&H00000000)
    FWP_OPTION_VALUE_ENABLE_LOOSE_SOURCE = (&H00000001)
' #if (NTDDI_VERSION >= NTDDI_WIN8)
    FWP_OPTION_VALUE_DISABLE_LOCAL_ONLY_MAPPING = (&H00000000)
    FWP_OPTION_VALUE_ENABLE_LOCAL_ONLY_MAPPING = (&H00000001)
End Enum

Public Enum FWP_VSWITCH_NETWORK_TYPE
    FWP_VSWITCH_NETWORK_TYPE_UNKNOWN
    FWP_VSWITCH_NETWORK_TYPE_PRIVATE
    FWP_VSWITCH_NETWORK_TYPE_INTERNAL
    FWP_VSWITCH_NETWORK_TYPE_EXTERNAL
End Enum

Public Enum FwpActionFlags
    FWP_ACTION_FLAG_TERMINATING = (&H00001000)
    FWP_ACTION_FLAG_NON_TERMINATING = (&H00002000)
    FWP_ACTION_FLAG_CALLOUT = (&H00004000)
End Enum

Public Enum FWP_ACTION_TYPE
    FWP_ACTION_BLOCK = (&H00000001 Or FWP_ACTION_FLAG_TERMINATING)
    FWP_ACTION_PERMIT = (&H00000002 Or FWP_ACTION_FLAG_TERMINATING)
    FWP_ACTION_CALLOUT_TERMINATING = (&H00000003 Or FWP_ACTION_FLAG_CALLOUT Or FWP_ACTION_FLAG_TERMINATING)
    FWP_ACTION_CALLOUT_INSPECTION = (&H00000004 Or FWP_ACTION_FLAG_CALLOUT Or FWP_ACTION_FLAG_NON_TERMINATING)
    FWP_ACTION_CALLOUT_UNKNOWN = (&H00000005 Or FWP_ACTION_FLAG_CALLOUT)
    FWP_ACTION_CONTINUE = (&H00000006 Or FWP_ACTION_FLAG_NON_TERMINATING)
    FWP_ACTION_NONE = (&H00000007)
    FWP_ACTION_NONE_NO_MATCH = (&H00000008)
End Enum

Public Enum FwpConditionFlags
    FWP_CONDITION_FLAG_IS_LOOPBACK = (&H00000001)
    FWP_CONDITION_FLAG_IS_IPSEC_SECURED = (&H00000002)
    FWP_CONDITION_FLAG_IS_REAUTHORIZE = (&H00000004)
    FWP_CONDITION_FLAG_IS_WILDCARD_BIND = (&H00000008)
    FWP_CONDITION_FLAG_IS_RAW_ENDPOINT = (&H00000010)
    FWP_CONDITION_FLAG_IS_FRAGMENT = (&H00000020)
    FWP_CONDITION_FLAG_IS_FRAGMENT_GROUP = (&H00000040)
    FWP_CONDITION_FLAG_IS_IPSEC_NATT_RECLASSIFY = (&H00000080)
    FWP_CONDITION_FLAG_REQUIRES_ALE_CLASSIFY = (&H00000100)
    FWP_CONDITION_FLAG_IS_IMPLICIT_BIND = (&H00000200)
' #if (NTDDI_VERSION >= NTDDI_WIN6SP1)
    FWP_CONDITION_FLAG_IS_REASSEMBLED = (&H00000400)
' #if (NTDDI_VERSION >= NTDDI_WIN7)
    FWP_CONDITION_FLAG_IS_NAME_APP_SPECIFIED = (&H00004000)
    FWP_CONDITION_FLAG_IS_PROMISCUOUS = (&H00008000&)
    FWP_CONDITION_FLAG_IS_AUTH_FW = (&H00010000)
    FWP_CONDITION_FLAG_IS_RECLASSIFY = (&H00020000)
    FWP_CONDITION_FLAG_IS_OUTBOUND_PASS_THRU = (&H00040000)
    FWP_CONDITION_FLAG_IS_INBOUND_PASS_THRU = (&H00080000)
    FWP_CONDITION_FLAG_IS_CONNECTION_REDIRECTED = (&H00100000)
' #if (NTDDI_VERSION >= NTDDI_WIN8)
    FWP_CONDITION_FLAG_IS_PROXY_CONNECTION = (&H00200000)
    FWP_CONDITION_FLAG_IS_APPCONTAINER_LOOPBACK = (&H00400000)
    FWP_CONDITION_FLAG_IS_NON_APPCONTAINER_LOOPBACK = (&H00800000)
    FWP_CONDITION_FLAG_IS_RESERVED = (&H01000000)
    FWP_CONDITION_FLAG_IS_HONORING_POLICY_AUTHORIZE = (&H02000000)
End Enum

Public Enum FwpConditionReauthReasons
    FWP_CONDITION_REAUTHORIZE_REASON_POLICY_CHANGE = (&H00000001)
    FWP_CONDITION_REAUTHORIZE_REASON_NEW_ARRIVAL_INTERFACE = (&H00000002)
    FWP_CONDITION_REAUTHORIZE_REASON_NEW_NEXTHOP_INTERFACE = (&H00000004)
    FWP_CONDITION_REAUTHORIZE_REASON_PROFILE_CROSSING = (&H00000008)
    FWP_CONDITION_REAUTHORIZE_REASON_CLASSIFY_COMPLETION = (&H00000010)
    FWP_CONDITION_REAUTHORIZE_REASON_IPSEC_PROPERTIES_CHANGED = (&H00000020)
    FWP_CONDITION_REAUTHORIZE_REASON_MID_STREAM_INSPECTION = (&H00000040)
    FWP_CONDITION_REAUTHORIZE_REASON_SOCKET_PROPERTY_CHANGED = (&H00000080)
    FWP_CONDITION_REAUTHORIZE_REASON_NEW_INBOUND_MCAST_BCAST_PACKET = (&H00000100)
    FWP_CONDITION_REAUTHORIZE_REASON_EDP_POLICY_CHANGED = (&H00000200)
    FWP_CONDITION_REAUTHORIZE_REASON_PROXY_HANDLE_CHANGED = (&H00004000)
    FWP_CONDITION_REAUTHORIZE_REASON_CHECK_OFFLOAD = (&H00010000)
End Enum

Public Enum FwpSocketPropertyFlags
    FWP_CONDITION_SOCKET_PROPERTY_FLAG_IS_SYSTEM_PORT_RPC = (&H00000001)
    FWP_CONDITION_SOCKET_PROPERTY_FLAG_ALLOW_EDGE_TRAFFIC = (&H00000002)
    FWP_CONDITION_SOCKET_PROPERTY_FLAG_DENY_EDGE_TRAFFIC = (&H00000004)
End Enum

Public Enum FwpL2Conditions
    FWP_CONDITION_L2_IS_NATIVE_ETHERNET = (&H00000001)
    FWP_CONDITION_L2_IS_WIFI = (&H00000002)
    FWP_CONDITION_L2_IS_MOBILE_BROADBAND = (&H00000004)
    FWP_CONDITION_L2_IS_WIFI_DIRECT_DATA = (&H00000008)
    FWP_CONDITION_L2_IS_VM2VM = (&H00000010)
    FWP_CONDITION_L2_IS_MALFORMED_PACKET = (&H00000020)
    FWP_CONDITION_L2_IS_IP_FRAGMENT_GROUP = (&H00000040)
    FWP_CONDITION_L2_IF_CONNECTOR_PRESENT = (&H00000080)
End Enum

Public Enum FWP_FILTER_ENUM_TYPE
    '  Return only filters that fully contain the enum conditions.
    FWP_FILTER_ENUM_FULLY_CONTAINED
    '  Return filters that overlap with the enum conditions, including filters
    '  that are fully contained.
    FWP_FILTER_ENUM_OVERLAPPING
    FWP_FILTER_ENUM_TYPE_MAX
End Enum

Public Enum FwpFilterEnumFlags
    FWP_FILTER_ENUM_FLAG_BEST_TERMINATING_MATCH = (&H00000001)
    FWP_FILTER_ENUM_FLAG_SORTED = (&H00000002)
    FWP_FILTER_ENUM_FLAG_BOOTTIME_ONLY = (&H00000004)
    FWP_FILTER_ENUM_FLAG_INCLUDE_BOOTTIME = (&H00000008)
    FWP_FILTER_ENUM_FLAG_INCLUDE_DISABLED = (&H00000010)
    FWP_FILTER_ENUM_VALID_FLAGS = (FWP_FILTER_ENUM_FLAG_BEST_TERMINATING_MATCH Or FWP_FILTER_ENUM_FLAG_SORTED)
' #if (NTDDI_VERSION >= NTDDI_WIN8)
    FWP_FILTER_ENUM_FLAG_RESERVED1 = (&H00000020)
End Enum

Public Enum FwpCalloutFlags
    FWP_CALLOUT_FLAG_CONDITIONAL_ON_FLOW = (&H00000001)
    FWP_CALLOUT_FLAG_ALLOW_OFFLOAD = (&H00000002)
' #if (NTDDI_VERSION >= NTDDI_WIN7)
    FWP_CALLOUT_FLAG_ENABLE_COMMIT_ADD_NOTIFY = (&H00000004)
    FWP_CALLOUT_FLAG_ALLOW_MID_STREAM_INSPECTION = (&H00000008)
    FWP_CALLOUT_FLAG_ALLOW_RECLASSIFY = (&H00000010)
' #if (NTDDI_VERSION >= NTDDI_WIN8)
    FWP_CALLOUT_FLAG_RESERVED1 = (&H00000020)
    FWP_CALLOUT_FLAG_ALLOW_RSC = (&H00000040)
    FWP_CALLOUT_FLAG_ALLOW_L2_BATCH_CLASSIFY = (&H00000080)
' #if (NTDDI_VERSION >= NTDDI_WIN10_19H1)
    FWP_CALLOUT_FLAG_ALLOW_USO = (&H00000100)
' #if (NTDDI_VERSION >= NTDDI_WIN10_VB)
    FWP_CALLOUT_FLAG_ALLOW_URO = (&H00000200)
' #if (NTDDI_VERSION >= NTDDI_WIN10_CO)
    FWP_CALLOUT_FLAG_RESERVED2 = (&H00000400)
End Enum

Public Type FWPM_DISPLAY_DATA0
    name As LongPtr 'wchar_t *
    description As LongPtr 'wchar_t *
End Type

Public Type IPSEC_VIRTUAL_IF_TUNNEL_INFO0
    virtualIfTunnelId As LongLong
    trafficSelectorId As LongLong
End Type

#End Region
    
    
#Region "fwpmtypes.h"

Public Enum DL_ADDRESS_TYPE
    DlUnicast
    DlMulticast
    DlBroadcast
End Enum

Public Enum FWPM_CHANGE_TYPE
    FWPM_CHANGE_ADD = 1
    FWPM_CHANGE_DELETE
    FWPM_CHANGE_TYPE_MAX
End Enum

Public Enum FwpmSubscriptionFlags
    FWPM_SUBSCRIPTION_FLAG_NOTIFY_ON_ADD = (&H00000001)
    FWPM_SUBSCRIPTION_FLAG_NOTIFY_ON_DELETE = (&H00000002)
End Enum

Public Enum FWPM_SERVICE_STATE
    FWPM_SERVICE_STOPPED
    FWPM_SERVICE_START_PENDING
    FWPM_SERVICE_STOP_PENDING
    FWPM_SERVICE_RUNNING
    FWPM_SERVICE_STATE_MAX
End Enum

Public Enum FwpmNetEventKeywords
    FWPM_NET_EVENT_KEYWORD_INBOUND_MCAST = (&H00000001)
    FWPM_NET_EVENT_KEYWORD_INBOUND_BCAST = (&H00000002)
    FWPM_NET_EVENT_KEYWORD_CAPABILITY_DROP = (&H00000004)
    FWPM_NET_EVENT_KEYWORD_CAPABILITY_ALLOW = (&H00000008)
    FWPM_NET_EVENT_KEYWORD_CLASSIFY_ALLOW = (&H00000010)
' #if (NTDDI_VERSION >= NTDDI_WIN10_19H1)
    FWPM_NET_EVENT_KEYWORD_PORT_SCANNING_DROP = (&H00000020)
End Enum

Public Enum FwpmEnginePacketOptions
    FWPM_ENGINE_OPTION_PACKET_QUEUE_NONE = (&H00000000)
    FWPM_ENGINE_OPTION_PACKET_QUEUE_INBOUND = (&H00000001)
    FWPM_ENGINE_OPTION_PACKET_QUEUE_FORWARD = (&H00000002)
    FWPM_ENGINE_OPTION_PACKET_BATCH_INBOUND = (&H00000004)
End Enum

Public Enum FWPM_ENGINE_OPTION
    '  FWP_UINT32 - if non-zero, FWPM_NET_EVENT0s will be collected.
    FWPM_ENGINE_COLLECT_NET_EVENTS
    '  FWP_UINT32 - enables collection of FWPM_NET_EVENT0s with any of the given
    '  keywords.
    FWPM_ENGINE_NET_EVENT_MATCH_ANY_KEYWORDS
    '  FWP_UINT32 - enables name caching
    FWPM_ENGINE_NAME_CACHE
    '  FWP_UINT32 - if non-zero ipsec connections are tracked Returns enabled if
    '  the operational log is enabled.
    FWPM_ENGINE_MONITOR_IPSEC_CONNECTIONS
    '  FWP_UINT32 - flags
    FWPM_ENGINE_PACKET_QUEUING
    '  FWP_UINT32 - transactions lasting longer than this time will trigger a
    '  watchdog event
    FWPM_ENGINE_TXN_WATCHDOG_TIMEOUT_IN_MSEC
    '  Not a valid option -- used for parameter validation only.
    FWPM_ENGINE_OPTION_MAX
End Enum

Public Enum FwpmSessionFlags
    FWPM_SESSION_FLAG_DYNAMIC = (&H00000001)
' #if (NTDDI_VERSION >= NTDDI_WIN7)
    FWPM_SESSION_FLAG_RESERVED = (&H10000000)
End Enum

Public Type FWPM_SESSION0
    sessionKey As UUID
    displayData As FWPM_DISPLAY_DATA0
    flags As FwpmSessionFlags
    txnWaitTimeoutInMSec As Long
    processId As Long
    sid As LongPtr 'SID*
    username As LongPtr 'wchar_t *
    kernelMode As BOOL
End Type

Public Type FWPM_SESSION_ENUM_TEMPLATE0
    reserved As LongLong
End Type

Public Enum FwpmProviderFlags
    FWPM_PROVIDER_FLAG_PERSISTENT = (&H00000001)
    FWPM_PROVIDER_FLAG_DISABLED = (&H00000010)
End Enum
Public Type FWPM_PROVIDER0
    providerKey As UUID
    displayData As FWPM_DISPLAY_DATA0
    flags As FwpmProviderFlags
    providerData As FWP_BYTE_BLOB
    serviceName As LongPtr 'wchar_t 
End Type

Public Type FWPM_PROVIDER_ENUM_TEMPLATE0
    reserved As LongLong
End Type

Public Type FWPM_PROVIDER_CHANGE0
    changeType As FWPM_CHANGE_TYPE
    providerKey As UUID
End Type

Public Type FWPM_PROVIDER_SUBSCRIPTION0
    enumTemplate As LongPtr 'FWPM_PROVIDER_ENUM_TEMPLATE0*
    flags As FwpmSubscriptionFlags
    sessionKey As UUID
End Type

Public Enum FwpmProviderContextFlags
    FWPM_PROVIDER_CONTEXT_FLAG_PERSISTENT = (&H00000001)
' #if (NTDDI_VERSION >= NTDDI_WIN8)
    FWPM_PROVIDER_CONTEXT_FLAG_DOWNLEVEL = (&H00000002)
End Enum

Public Type FWPM_CLASSIFY_OPTION0
    type As FWP_CLASSIFY_OPTION_TYPE
    value As FWP_VALUE0
End Type

Public Type FWPM_CLASSIFY_OPTIONS0
    numOptions As Long
    options As LongPtr 'FWPM_CLASSIFY_OPTION0 *
End Type

Public Type FWPM_NETWORK_CONNECTION_POLICY_SETTING0
    type As FWP_NETWORK_CONNECTION_POLICY_SETTING_TYPE
    value As FWP_VALUE0
End Type

Public Type FWPM_NETWORK_CONNECTION_POLICY_SETTINGS0
    numSettings As Long
    settings As LongPtr 'FWPM_NETWORK_CONNECTION_POLICY_SETTING0 *
End Type

Public Enum FWPM_PROVIDER_CONTEXT_TYPE
    FWPM_IPSEC_KEYING_CONTEXT
    FWPM_IPSEC_IKE_QM_TRANSPORT_CONTEXT
    FWPM_IPSEC_IKE_QM_TUNNEL_CONTEXT
    FWPM_IPSEC_AUTHIP_QM_TRANSPORT_CONTEXT
    FWPM_IPSEC_AUTHIP_QM_TUNNEL_CONTEXT
    FWPM_IPSEC_IKE_MM_CONTEXT
    FWPM_IPSEC_AUTHIP_MM_CONTEXT
    FWPM_CLASSIFY_OPTIONS_CONTEXT
    FWPM_GENERAL_CONTEXT
    FWPM_IPSEC_IKEV2_QM_TUNNEL_CONTEXT
    FWPM_IPSEC_IKEV2_MM_CONTEXT
    FWPM_IPSEC_DOSP_CONTEXT
    FWPM_IPSEC_IKEV2_QM_TRANSPORT_CONTEXT
    FWPM_NETWORK_CONNECTION_POLICY_CONTEXT
    FWPM_PROVIDER_CONTEXT_TYPE_MAX
End Enum
Public Type FWPM_PROVIDER_CONTEXT0
    ' Information supplied when adding objects.
    ' Uniquely identifies the provider context. If the GUID is zero-initialized
    ' in the call to Add, BFE will generate one.
    providerContextKey As UUID
    ' Allows provider contexts to be annotated in a human-readable form.
    displayData As FWPM_DISPLAY_DATA0
    ' Flags
    flags As FwpmProviderContextFlags
    ' Optional GUID of the policy provider that manages this object.
    providerKey As LongPtr 'GUID *
    ' Optional provider-specific data; allows providers to store additional
    ' context info with the object.
    providerData As FWP_BYTE_BLOB
    type As FWPM_PROVIDER_CONTEXT_TYPE
    ' [switch_type(FWPM_PROVIDER_CONTEXT_TYPE), switch_is(type)]
    ' union
    ' {
       ' [case(FWPM_IPSEC_KEYING_CONTEXT)]
          ' [unique] IPSEC_KEYING_POLICY0* keyingPolicy;
       ' [case(FWPM_IPSEC_IKE_QM_TRANSPORT_CONTEXT)]
          ' [unique] IPSEC_TRANSPORT_POLICY0* ikeQmTransportPolicy;
       ' [case(FWPM_IPSEC_IKE_QM_TUNNEL_CONTEXT)]
          ' [unique] IPSEC_TUNNEL_POLICY0* ikeQmTunnelPolicy;
       ' [case(FWPM_IPSEC_AUTHIP_QM_TRANSPORT_CONTEXT)]
          ' [unique] IPSEC_TRANSPORT_POLICY0* authipQmTransportPolicy;
       ' [case(FWPM_IPSEC_AUTHIP_QM_TUNNEL_CONTEXT)]
          ' [unique] IPSEC_TUNNEL_POLICY0* authipQmTunnelPolicy;
       ' [case(FWPM_IPSEC_IKE_MM_CONTEXT)]
          ' [unique] IKEEXT_POLICY0* ikeMmPolicy;
       ' [case(FWPM_IPSEC_AUTHIP_MM_CONTEXT)]
          ' [unique] IKEEXT_POLICY0* authIpMmPolicy;
       ' [case(FWPM_GENERAL_CONTEXT)]
          ' [unique] FWP_BYTE_BLOB* dataBuffer;
       ' [case(FWPM_CLASSIFY_OPTIONS_CONTEXT)]
          ' [unique] FWPM_CLASSIFY_OPTIONS0* classifyOptions;
       ' [default];
    ' };
    u As LongPtr
    providerContextId As LongLong
End Type

Public Type FWPM_PROVIDER_CONTEXT1
    ' Information supplied when adding objects.
    ' Uniquely identifies the provider context. If the GUID is zero-initialized
    ' in the call to Add, BFE will generate one.
    providerContextKey As UUID
    ' Allows provider contexts to be annotated in a human-readable form.
    displayData As FWPM_DISPLAY_DATA0
    ' Flags
    flags As FwpmProviderContextFlags
    ' Optional GUID of the policy provider that manages this object.
    providerKey As LongPtr 'GUID *
    ' Optional provider-specific data; allows providers to store additional
    ' context info with the object.
    providerData As FWP_BYTE_BLOB
    type As FWPM_PROVIDER_CONTEXT_TYPE
    ' [switch_type(FWPM_PROVIDER_CONTEXT_TYPE), switch_is(type)]
    ' union
    ' {
       ' [case(FWPM_IPSEC_KEYING_CONTEXT)]
          ' [unique] IPSEC_KEYING_POLICY0* keyingPolicy;
       ' [case(FWPM_IPSEC_IKE_QM_TRANSPORT_CONTEXT)]
          ' [unique] IPSEC_TRANSPORT_POLICY1* ikeQmTransportPolicy;
       ' [case(FWPM_IPSEC_IKE_QM_TUNNEL_CONTEXT)]
          ' [unique] IPSEC_TUNNEL_POLICY1* ikeQmTunnelPolicy;
       ' [case(FWPM_IPSEC_AUTHIP_QM_TRANSPORT_CONTEXT)]
          ' [unique] IPSEC_TRANSPORT_POLICY1* authipQmTransportPolicy;
       ' [case(FWPM_IPSEC_AUTHIP_QM_TUNNEL_CONTEXT)]
          ' [unique] IPSEC_TUNNEL_POLICY1* authipQmTunnelPolicy;
       ' [case(FWPM_IPSEC_IKE_MM_CONTEXT)]
          ' [unique] IKEEXT_POLICY1* ikeMmPolicy;
       ' [case(FWPM_IPSEC_AUTHIP_MM_CONTEXT)]
          ' [unique] IKEEXT_POLICY1* authIpMmPolicy;
       ' [case(FWPM_GENERAL_CONTEXT)]
          ' [unique] FWP_BYTE_BLOB* dataBuffer;
       ' [case(FWPM_CLASSIFY_OPTIONS_CONTEXT)]
          ' [unique] FWPM_CLASSIFY_OPTIONS0* classifyOptions;
       ' [case(FWPM_IPSEC_IKEV2_QM_TUNNEL_CONTEXT)]
          ' [unique] IPSEC_TUNNEL_POLICY1* ikeV2QmTunnelPolicy;
       ' [case(FWPM_IPSEC_IKEV2_MM_CONTEXT)]
          ' [unique] IKEEXT_POLICY1* ikeV2MmPolicy;
       ' [case(FWPM_IPSEC_DOSP_CONTEXT)]
          ' [unique] IPSEC_DOSP_OPTIONS0* idpOptions;
    ' };
    u As LongPtr
    providerContextId As LongLong
End Type

Public Type FWPM_PROVIDER_CONTEXT2
    ' Information supplied when adding objects.
    ' Uniquely identifies the provider context. If the GUID is zero-initialized
    ' in the call to Add, BFE will generate one.
    providerContextKey As UUID
    ' Allows provider contexts to be annotated in a human-readable form.
    displayData As FWPM_DISPLAY_DATA0
    ' Flags
    flags As FwpmProviderContextFlags
    ' Optional GUID of the policy provider that manages this object.
    providerKey As LongPtr 'GUID *
    ' Optional provider-specific data; allows providers to store additional
    ' context info with the object.
    providerData As FWP_BYTE_BLOB
    type As FWPM_PROVIDER_CONTEXT_TYPE
    ' [switch_type(FWPM_PROVIDER_CONTEXT_TYPE), switch_is(type)]
    ' union
    ' {
       ' [case(FWPM_IPSEC_KEYING_CONTEXT)]
          ' [unique] IPSEC_KEYING_POLICY1* keyingPolicy;
       ' [case(FWPM_IPSEC_IKE_QM_TRANSPORT_CONTEXT)]
          ' [unique] IPSEC_TRANSPORT_POLICY2* ikeQmTransportPolicy;
       ' [case(FWPM_IPSEC_IKE_QM_TUNNEL_CONTEXT)]
          ' [unique] IPSEC_TUNNEL_POLICY2* ikeQmTunnelPolicy;
       ' [case(FWPM_IPSEC_AUTHIP_QM_TRANSPORT_CONTEXT)]
          ' [unique] IPSEC_TRANSPORT_POLICY2* authipQmTransportPolicy;
       ' [case(FWPM_IPSEC_AUTHIP_QM_TUNNEL_CONTEXT)]
          ' [unique] IPSEC_TUNNEL_POLICY2* authipQmTunnelPolicy;
       ' [case(FWPM_IPSEC_IKE_MM_CONTEXT)]
          ' [unique] IKEEXT_POLICY2* ikeMmPolicy;
       ' [case(FWPM_IPSEC_AUTHIP_MM_CONTEXT)]
          ' [unique] IKEEXT_POLICY2* authIpMmPolicy;
       ' [case(FWPM_GENERAL_CONTEXT)]
          ' [unique] FWP_BYTE_BLOB* dataBuffer;
       ' [case(FWPM_CLASSIFY_OPTIONS_CONTEXT)]
          ' [unique] FWPM_CLASSIFY_OPTIONS0* classifyOptions;
       ' [case(FWPM_IPSEC_IKEV2_QM_TUNNEL_CONTEXT)]
          ' [unique] IPSEC_TUNNEL_POLICY2* ikeV2QmTunnelPolicy;
       ' [case(FWPM_IPSEC_IKEV2_QM_TRANSPORT_CONTEXT)]
          ' [unique] IPSEC_TRANSPORT_POLICY2* ikeV2QmTransportPolicy;
       ' [case(FWPM_IPSEC_IKEV2_MM_CONTEXT)]
          ' [unique] IKEEXT_POLICY2* ikeV2MmPolicy;
       ' [case(FWPM_IPSEC_DOSP_CONTEXT)]
          ' [unique] IPSEC_DOSP_OPTIONS0* idpOptions;
    ' };
    u As LongPtr
    providerContextId As LongLong
End Type

Public Type FWPM_PROVIDER_CONTEXT3
    ' Information supplied when adding objects.
    ' Uniquely identifies the provider context. If the GUID is zero-initialized
    ' in the call to Add, BFE will generate one.
    providerContextKey As UUID
    ' Allows provider contexts to be annotated in a human-readable form.
    displayData As FWPM_DISPLAY_DATA0
    ' Flags
    flags As FwpmProviderContextFlags
    ' Optional GUID of the policy provider that manages this object.
    providerKey As LongPtr 'GUID *
    ' Optional provider-specific data; allows providers to store additional
    ' context info with the object.
    providerData As FWP_BYTE_BLOB
    type As FWPM_PROVIDER_CONTEXT_TYPE
    ' [switch_type(FWPM_PROVIDER_CONTEXT_TYPE), switch_is(type)]
    ' union
    ' {
       ' [case(FWPM_IPSEC_KEYING_CONTEXT)]
          ' [unique] IPSEC_KEYING_POLICY1* keyingPolicy;
       ' [case(FWPM_IPSEC_IKE_QM_TRANSPORT_CONTEXT)]
          ' [unique] IPSEC_TRANSPORT_POLICY2* ikeQmTransportPolicy;
       ' [case(FWPM_IPSEC_IKE_QM_TUNNEL_CONTEXT)]
          ' [unique] IPSEC_TUNNEL_POLICY3* ikeQmTunnelPolicy;
       ' [case(FWPM_IPSEC_AUTHIP_QM_TRANSPORT_CONTEXT)]
          ' [unique] IPSEC_TRANSPORT_POLICY2* authipQmTransportPolicy;
       ' [case(FWPM_IPSEC_AUTHIP_QM_TUNNEL_CONTEXT)]
          ' [unique] IPSEC_TUNNEL_POLICY3* authipQmTunnelPolicy;
       ' [case(FWPM_IPSEC_IKE_MM_CONTEXT)]
          ' [unique] IKEEXT_POLICY2* ikeMmPolicy;
       ' [case(FWPM_IPSEC_AUTHIP_MM_CONTEXT)]
          ' [unique] IKEEXT_POLICY2* authIpMmPolicy;
       ' [case(FWPM_GENERAL_CONTEXT)]
          ' [unique] FWP_BYTE_BLOB* dataBuffer;
       ' [case(FWPM_CLASSIFY_OPTIONS_CONTEXT)]
          ' [unique] FWPM_CLASSIFY_OPTIONS0* classifyOptions;
       ' [case(FWPM_IPSEC_IKEV2_QM_TUNNEL_CONTEXT)]
          ' [unique] IPSEC_TUNNEL_POLICY3* ikeV2QmTunnelPolicy;
       ' [case(FWPM_IPSEC_IKEV2_QM_TRANSPORT_CONTEXT)]
          ' [unique] IPSEC_TRANSPORT_POLICY2* ikeV2QmTransportPolicy;
       ' [case(FWPM_IPSEC_IKEV2_MM_CONTEXT)]
          ' [unique] IKEEXT_POLICY2* ikeV2MmPolicy;
       ' [case(FWPM_IPSEC_DOSP_CONTEXT)]
          ' [unique] IPSEC_DOSP_OPTIONS0* idpOptions;
       ' [case(FWPM_NETWORK_CONNECTION_POLICY_CONTEXT)]
          ' [unique] FWPM_NETWORK_CONNECTION_POLICY_SETTINGS0* networkConnectionPolicy;
    ' };
    u As LongPtr
    providerContextId As LongLong
End Type

Public Type FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0
    ' If non-null, only objects associated with the specified provider will be
    ' returned.
    providerKey As LongPtr 'GUID *
    ' Only return provider contexts of the specified type.
    providerContextType As FWPM_PROVIDER_CONTEXT_TYPE
End Type

Public Type FWPM_PROVIDER_CONTEXT_CHANGE0
    changeType As FWPM_CHANGE_TYPE
    providerContextKey As UUID
    providerContextId As LongLong
End Type

Public Type FWPM_PROVIDER_CONTEXT_SUBSCRIPTION0
    enumTemplate As LongPtr 'FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0 *
    flags As FwpmSubscriptionFlags
    sessionKey As UUID
End Type

Public Enum FwpmSublayerFlags
    FWPM_SUBLAYER_FLAG_PERSISTENT = &H00000001
End Enum
Public Type FWPM_SUBLAYER0
    subLayerKey As UUID
    displayData As FWPM_DISPLAY_DATA0
    flags As FwpmSublayerFlags
    providerKey As LongPtr 'GUID *
    providerData As FWP_BYTE_BLOB
    weight As Integer
End Type

Public Type FWPM_SUBLAYER_ENUM_TEMPLATE0
    providerKey As LongPtr 'GUID *
End Type

Public Type FWPM_SUBLAYER_CHANGE0
    changeType As FWPM_CHANGE_TYPE
    subLayerKey As UUID
End Type

Public Type FWPM_SUBLAYER_SUBSCRIPTION0
    enumTemplate As LongPtr 'FWPM_SUBLAYER_ENUM_TEMPLATE0 *
    flags As FwpmSubscriptionFlags
    sessionKey As UUID
End Type

Public Enum FwpmLayerFlags
    FWPM_LAYER_FLAG_KERNEL = (&H00000001)
    FWPM_LAYER_FLAG_BUILTIN = (&H00000002)
    FWPM_LAYER_FLAG_CLASSIFY_MOSTLY = (&H00000004)
    FWPM_LAYER_FLAG_BUFFERED = (&H00000008)
End Enum

Public Enum FWPM_FIELD_TYPE
    '  Value contains plain old data.
    FWPM_FIELD_RAW_DATA
    '  Value contains an IP address.
    FWPM_FIELD_IP_ADDRESS
    '  Value contains flags.
    FWPM_FIELD_FLAGS
    FWPM_FIELD_TYPE_MAX
End Enum
Public Type FWPM_FIELD0
    ' Uniquely identifies the field.
    fieldKey As LongPtr 'GUID *
    ' Determines how dataType is interpreted.
    type As FWPM_FIELD_TYPE
    ' Data type passed to classify.
    dataType As FWP_DATA_TYPE
End Type
Public Type FWPM_LAYER0
    ' Uniquely identifies the layer.
    layerKey As UUID
    ' Allows layers to be annotated in a human-readable form.
    displayData As FWPM_DISPLAY_DATA0
    ' Flags
    flags As FwpmLayerFlags
    ' Number of fields in the layer.
    numFields As Long
    ' Schema information for the layer's fields.
    field As LongPtr 'FWPM_FIELD0 *
    ' Sub-layer used when a filter is added with a null sublayer.
    defaultSubLayerKey As UUID
    ' LUID identifying the layer.
    layerId As Integer
End Type

Public Type FWPM_LAYER_ENUM_TEMPLATE0
    ' Reserved for system use.
    reserved As LongLong
End Type

Public Enum FwpmCalloutFlags
    FWPM_CALLOUT_FLAG_PERSISTENT = (&H00010000)
    FWPM_CALLOUT_FLAG_USES_PROVIDER_CONTEXT = (&H00020000)
    FWPM_CALLOUT_FLAG_REGISTERED = (&H00040000)
End Enum

Public Type FWPM_CALLOUT0
    calloutKey As UUID
    displayData As FWPM_DISPLAY_DATA0
    flags As FwpmCalloutFlags
    providerKey As LongPtr 'GUID *
    providerData As FWP_BYTE_BLOB
    applicableLayer As UUID
    calloutId As Long
End Type

Public Type FWPM_CALLOUT_ENUM_TEMPLATE0
    providerKey As LongPtr 'GUID *
    layerKey As UUID
End Type

Public Type FWPM_CALLOUT_CHANGE0
    changeType As FWPM_CHANGE_TYPE
    calloutKey As UUID
    calloutId As Long
End Type

Public Type FWPM_CALLOUT_SUBSCRIPTION0
    enumTemplate As LongPtr 'FWPM_CALLOUT_ENUM_TEMPLATE0 *
    flags As FwpmSubscriptionFlags
    sessionKey As UUID
End Type

Public Type FWPM_ACTION0
    type As FWP_ACTION_TYPE
    '    /* [switch_is] */ /* [switch_type] */ union
    '       {
    '        /* [case()] */ GUID filterType;
    '        /* [case()] */ GUID calloutKey;
    '        }     ;
    filterTypeOrCalloutKey As UUID
End Type

Public Type FWPM_FILTER_CONDITION0
    fieldKey As UUID
    matchType As FWP_MATCH_TYPE
    conditionValue As FWP_CONDITION_VALUE0
End Type

Public Enum FwpmFilterFlags
    FWPM_FILTER_FLAG_NONE = (&H00000000)
    FWPM_FILTER_FLAG_PERSISTENT = (&H00000001)
    FWPM_FILTER_FLAG_BOOTTIME = (&H00000002)
    FWPM_FILTER_FLAG_HAS_PROVIDER_CONTEXT = (&H00000004)
    FWPM_FILTER_FLAG_CLEAR_ACTION_RIGHT = (&H00000008)
    FWPM_FILTER_FLAG_PERMIT_IF_CALLOUT_UNREGISTERED = (&H00000010)
    FWPM_FILTER_FLAG_DISABLED = (&H00000020)
    FWPM_FILTER_FLAG_INDEXED = (&H00000040)
    FWPM_FILTER_FLAG_HAS_SECURITY_REALM_PROVIDER_CONTEXT = (&H00000080)
    FWPM_FILTER_FLAG_SYSTEMOS_ONLY = (&H00000100)
    FWPM_FILTER_FLAG_GAMEOS_ONLY = (&H00000200)
    FWPM_FILTER_FLAG_SILENT_MODE = (&H00000400)
    FWPM_FILTER_FLAG_IPSEC_NO_ACQUIRE_INITIATE = (&H00000800)
    FWPM_FILTER_FLAG_RESERVED0 = (&H00001000)
    FWPM_FILTER_FLAG_RESERVED1 = (&H00002000)
    FWPM_FILTER_FLAG_RESERVED2 = (&H00004000)
End Enum

Public Type FWPM_FILTER0
    filterKey As UUID
    displayData As FWPM_DISPLAY_DATA0
    flags As FwpmFilterFlags
    providerKey As UUID
    providerData As FWP_BYTE_BLOB
    layerKey As UUID
    subLayerKey As UUID
    weight As FWP_VALUE0
    numFilterConditions As Long
    filterCondition As LongPtr 'FWPM_FILTER_CONDITION0 *
    action As FWPM_ACTION0
    '   /* [switch_is] */ /* [switch_type] */ union
    '       {
    '       /* [case()] */ UINT64 rawContext;
    providerContextKey As UUID
    '       }     ;
    reserved As LongPtr 'GUID *
    filterId As LongLong
    effectiveWeight As FWP_VALUE0
End Type

Public Type FWPM_FILTER_ENUM_TEMPLATE0
    providerKey As LongPtr 'GUID *
    layerKey As UUID
    enumType As FWP_FILTER_ENUM_TYPE
    flags As FwpFilterEnumFlags
    providerContextTemplate As LongPtr 'FWPM_PROVIDER_CONTEXT_ENUM_TEMPLATE0 *
    numFilterConditions As Long
    filterCondition As LongPtr 'FWPM_FILTER_CONDITION0 *
    actionMask As FWP_ACTION_TYPE
    calloutKey As LongPtr 'GUID *
End Type

Public Type FWPM_FILTER_CHANGE0
    changeType As FWPM_CHANGE_TYPE
    filterKey As UUID
    filterId As LongLong
End Type

Public Type FWPM_FILTER_SUBSCRIPTION0
    enumTemplate As LongPtr 'FWPM_FILTER_ENUM_TEMPLATE0 *
    flags As FwpmSubscriptionFlags
    sessionKey As UUID
End Type

Public Type FWPM_LAYER_STATISTICS0
    layerId As UUID
    classifyPermitCount As Long
    classifyBlockCount As Long
    classifyVetoCount As Long
    numCacheEntries As Long
End Type

Public Type FWPM_STATISTICS0
    numLayerStatistics As Long
    layerStatistics As LongPtr 'FWPM_LAYER_STATISTICS0 *
    inboundAllowedConnectionsV4 As Long
    inboundBlockedConnectionsV4 As Long
    outboundAllowedConnectionsV4 As Long
    outboundBlockedConnectionsV4 As Long
    inboundAllowedConnectionsV6 As Long
    inboundBlockedConnectionsV6 As Long
    outboundAllowedConnectionsV6 As Long
    outboundBlockedConnectionsV6 As Long
    inboundActiveConnectionsV4 As Long
    outboundActiveConnectionsV4 As Long
    inboundActiveConnectionsV6 As Long
    outboundActiveConnectionsV6 As Long
    reauthDirInbound As LongLong
    reauthDirOutbound As LongLong
    reauthFamilyV4 As LongLong
    reauthFamilyV6 As LongLong
    reauthProtoOther As LongLong
    reauthProtoIPv4 As LongLong
    reauthProtoIPv6 As LongLong
    reauthProtoICMP As LongLong
    reauthProtoICMP6 As LongLong
    reauthProtoUDP As LongLong
    reauthProtoTCP As LongLong
    reauthReasonPolicyChange As LongLong
    reauthReasonNewArrivalInterface As LongLong
    reauthReasonNewNextHopInterface As LongLong
    reauthReasonProfileCrossing As LongLong
    reauthReasonClassifyCompletion As LongLong
    reauthReasonIPSecPropertiesChanged As LongLong
    reauthReasonMidStreamInspection As LongLong
    reauthReasonSocketPropertyChanged As LongLong
    reauthReasonNewInboundMCastBCastPacket As LongLong
    reauthReasonEDPPolicyChanged As LongLong
    reauthReasonProxyHandleChanged As LongLong
End Type


'BREAK LINE 582

#End Region
    
#Region "fwpsk.h"
'KM

Public Enum FWPS_BUILTIN_LAYERS
    '  Kernel-mode layers
    FWPS_LAYER_INBOUND_IPPACKET_V4 = 0 ' 0
    FWPS_LAYER_INBOUND_IPPACKET_V4_DISCARD = 1
    FWPS_LAYER_INBOUND_IPPACKET_V6 = 2
    FWPS_LAYER_INBOUND_IPPACKET_V6_DISCARD = 3
    FWPS_LAYER_OUTBOUND_IPPACKET_V4 = 4
    FWPS_LAYER_OUTBOUND_IPPACKET_V4_DISCARD = 5 ' 5
    FWPS_LAYER_OUTBOUND_IPPACKET_V6 = 6
    FWPS_LAYER_OUTBOUND_IPPACKET_V6_DISCARD = 7
    FWPS_LAYER_IPFORWARD_V4 = 8
    FWPS_LAYER_IPFORWARD_V4_DISCARD = 9
    FWPS_LAYER_IPFORWARD_V6 = 10 ' 10
    FWPS_LAYER_IPFORWARD_V6_DISCARD = 11
    FWPS_LAYER_INBOUND_TRANSPORT_V4 = 12
    FWPS_LAYER_INBOUND_TRANSPORT_V4_DISCARD = 13
    FWPS_LAYER_INBOUND_TRANSPORT_V6 = 14
    FWPS_LAYER_INBOUND_TRANSPORT_V6_DISCARD = 15 ' 15
    FWPS_LAYER_OUTBOUND_TRANSPORT_V4 = 16
    FWPS_LAYER_OUTBOUND_TRANSPORT_V4_DISCARD = 17
    FWPS_LAYER_OUTBOUND_TRANSPORT_V6 = 18
    FWPS_LAYER_OUTBOUND_TRANSPORT_V6_DISCARD = 19
    FWPS_LAYER_STREAM_V4 = 20 ' 20
    FWPS_LAYER_STREAM_V4_DISCARD = 21
    FWPS_LAYER_STREAM_V6 = 22
    FWPS_LAYER_STREAM_V6_DISCARD = 23
    FWPS_LAYER_DATAGRAM_DATA_V4 = 24
    FWPS_LAYER_DATAGRAM_DATA_V4_DISCARD = 25 ' 25
    FWPS_LAYER_DATAGRAM_DATA_V6 = 26
    FWPS_LAYER_DATAGRAM_DATA_V6_DISCARD = 27
    FWPS_LAYER_INBOUND_ICMP_ERROR_V4 = 28
    FWPS_LAYER_INBOUND_ICMP_ERROR_V4_DISCARD = 29
    FWPS_LAYER_INBOUND_ICMP_ERROR_V6 = 30 ' 30
    FWPS_LAYER_INBOUND_ICMP_ERROR_V6_DISCARD = 31
    FWPS_LAYER_OUTBOUND_ICMP_ERROR_V4 = 32
    FWPS_LAYER_OUTBOUND_ICMP_ERROR_V4_DISCARD = 33
    FWPS_LAYER_OUTBOUND_ICMP_ERROR_V6 = 34
    FWPS_LAYER_OUTBOUND_ICMP_ERROR_V6_DISCARD = 35 ' 35
    FWPS_LAYER_ALE_RESOURCE_ASSIGNMENT_V4 = 36
    FWPS_LAYER_ALE_RESOURCE_ASSIGNMENT_V4_DISCARD = 37
    FWPS_LAYER_ALE_RESOURCE_ASSIGNMENT_V6 = 38
    FWPS_LAYER_ALE_RESOURCE_ASSIGNMENT_V6_DISCARD = 39
    FWPS_LAYER_ALE_AUTH_LISTEN_V4 = 40 ' 40
    FWPS_LAYER_ALE_AUTH_LISTEN_V4_DISCARD = 41
    FWPS_LAYER_ALE_AUTH_LISTEN_V6 = 42
    FWPS_LAYER_ALE_AUTH_LISTEN_V6_DISCARD = 43
    FWPS_LAYER_ALE_AUTH_RECV_ACCEPT_V4 = 44
    FWPS_LAYER_ALE_AUTH_RECV_ACCEPT_V4_DISCARD = 45 ' 45
    FWPS_LAYER_ALE_AUTH_RECV_ACCEPT_V6 = 46
    FWPS_LAYER_ALE_AUTH_RECV_ACCEPT_V6_DISCARD = 47
    FWPS_LAYER_ALE_AUTH_CONNECT_V4 = 48
    FWPS_LAYER_ALE_AUTH_CONNECT_V4_DISCARD = 49
    FWPS_LAYER_ALE_AUTH_CONNECT_V6 = 50 ' 50
    FWPS_LAYER_ALE_AUTH_CONNECT_V6_DISCARD = 51
    FWPS_LAYER_ALE_FLOW_ESTABLISHED_V4 = 52
    FWPS_LAYER_ALE_FLOW_ESTABLISHED_V4_DISCARD = 53
    FWPS_LAYER_ALE_FLOW_ESTABLISHED_V6 = 54
    FWPS_LAYER_ALE_FLOW_ESTABLISHED_V6_DISCARD = 55 ' 55
    ' #if (NTDDI_VERSION >= NTDDI_WIN7)
    FWPS_LAYER_INBOUND_MAC_FRAME_ETHERNET = 56
    FWPS_LAYER_OUTBOUND_MAC_FRAME_ETHERNET = 57
    ' #if (NTDDI_VERSION == NTDDI_WIN7)
    '    FWPS_LAYER_RESERVED1_V4,
    '    FWPS_LAYER_RESERVED1_V6,
    ' #else
    FWPS_LAYER_INBOUND_MAC_FRAME_NATIVE = 58
    FWPS_LAYER_OUTBOUND_MAC_FRAME_NATIVE = 59
    ' #endif
    FWPS_LAYER_NAME_RESOLUTION_CACHE_V4 = 60 ' 60
    FWPS_LAYER_NAME_RESOLUTION_CACHE_V6 = 61
    FWPS_LAYER_ALE_RESOURCE_RELEASE_V4 = 62
    FWPS_LAYER_ALE_RESOURCE_RELEASE_V6 = 63
    FWPS_LAYER_ALE_ENDPOINT_CLOSURE_V4 = 64
    FWPS_LAYER_ALE_ENDPOINT_CLOSURE_V6 = 65 ' 65
    FWPS_LAYER_ALE_CONNECT_REDIRECT_V4 = 66
    FWPS_LAYER_ALE_CONNECT_REDIRECT_V6 = 67
    FWPS_LAYER_ALE_BIND_REDIRECT_V4 = 68
    FWPS_LAYER_ALE_BIND_REDIRECT_V6 = 69
    FWPS_LAYER_STREAM_PACKET_V4 = 70 ' 70
    FWPS_LAYER_STREAM_PACKET_V6 = 71
    ' #if (NTDDI_VERSION >= NTDDI_WIN8)
    FWPS_LAYER_INGRESS_VSWITCH_ETHERNET = 72
    FWPS_LAYER_EGRESS_VSWITCH_ETHERNET = 73
    FWPS_LAYER_INGRESS_VSWITCH_TRANSPORT_V4 = 74
    FWPS_LAYER_INGRESS_VSWITCH_TRANSPORT_V6 = 75 ' 75
    FWPS_LAYER_EGRESS_VSWITCH_TRANSPORT_V4 = 76
    FWPS_LAYER_EGRESS_VSWITCH_TRANSPORT_V6 = 77
    ' #if (NTDDI_VERSION >= NTDDI_WINBLUE)
    FWPS_LAYER_INBOUND_TRANSPORT_FAST = 78
    FWPS_LAYER_OUTBOUND_TRANSPORT_FAST = 79
    FWPS_LAYER_INBOUND_MAC_FRAME_NATIVE_FAST = 80 ' 80
    FWPS_LAYER_OUTBOUND_MAC_FRAME_NATIVE_FAST = 81
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_RS3)
    FWPS_LAYER_INBOUND_RESERVED2 = 82
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_FE)
    FWPS_LAYER_RESERVED_LAYER_9 = 83
    FWPS_LAYER_RESERVED_LAYER_10 = 84
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_NI)
    FWPS_LAYER_OUTBOUND_NETWORK_CONNECTION_POLICY_V4 = 85 ' 85
    FWPS_LAYER_OUTBOUND_NETWORK_CONNECTION_POLICY_V6 = 86
    ' #endif // (NTDDI_VERSION >= NTDDI_WIN10_NI)
    ' #endif // (NTDDI_VERSION >= NTDDI_WIN10_FE)
    ' #endif // (NTDDI_VERSION >= NTDDI_WIN10_RS3)
    ' #endif // (NTDDI_VERSION >= NTDDI_WINBLUE)
    ' #endif // (NTDDI_VERSION >= NTDDI_WIN8)
    ' #endif // (NTDDI_VERSION >= NTDDI_WIN7)
    '  User-mode layers
    FWPS_LAYER_IPSEC_KM_DEMUX_V4 = 87 ' 87
    FWPS_LAYER_IPSEC_KM_DEMUX_V6 = 88
    FWPS_LAYER_IPSEC_V4 = 89
    FWPS_LAYER_IPSEC_V6 = 90 ' 90
    FWPS_LAYER_IKEEXT_V4 = 91
    FWPS_LAYER_IKEEXT_V6 = 92
    FWPS_LAYER_RPC_UM = 93
    FWPS_LAYER_RPC_EPMAP = 94
    FWPS_LAYER_RPC_EP_ADD = 95 ' 95
    FWPS_LAYER_RPC_PROXY_CONN = 96
    FWPS_LAYER_RPC_PROXY_IF = 97
    ' #if (NTDDI_VERSION >= NTDDI_WIN7)
    FWPS_LAYER_KM_AUTHORIZATION = 98
    ' #endif // (NTDDI_VERSION >= NTDDI_WIN7)
    FWPS_BUILTIN_LAYER_MAX = 99 ' 99
End Enum

#End Region

#Region "fwpmu.h"

'The first 3077 lines are GUIDs; these have been moved to the bottom of this region, in subregion "fwpmu.h-GUID"

Public Const FWPM_AUTO_WEIGHT_BITS  = (60)
'  Maximum auto-generated weight.
Public Const FWPM_AUTO_WEIGHT_MAX  = (MAXUINT64 >> (64 - FWPM_AUTO_WEIGHT_BITS))
'  Maximum allowed weight range.
Public Const FWPM_WEIGHT_RANGE_MAX  = (MAXUINT64 >> FWPM_AUTO_WEIGHT_BITS)
'  IPsec policy
Public Const FWPM_WEIGHT_RANGE_IPSEC  = (&H0)
'  Filters to exempt IKE traffic from IPsec.
Public Const FWPM_WEIGHT_RANGE_IKE_EXEMPTIONS  = (&Hc)
'BREAK LINE 3107

'RESUME 3269
Public Enum FwpmAccessRights
    FWPM_ACTRL_ADD = (&H00000001)
    FWPM_ACTRL_ADD_LINK = (&H00000002)
    FWPM_ACTRL_BEGIN_READ_TXN = (&H00000004)
    FWPM_ACTRL_BEGIN_WRITE_TXN = (&H00000008)
    FWPM_ACTRL_CLASSIFY = (&H00000010)
    FWPM_ACTRL_ENUM = (&H00000020)
    FWPM_ACTRL_OPEN = (&H00000040)
    FWPM_ACTRL_READ = (&H00000080)
    FWPM_ACTRL_READ_STATS = (&H00000100)
    FWPM_ACTRL_SUBSCRIBE = (&H00000200)
    FWPM_ACTRL_WRITE = (&H00000400)
    FWPM_GENERIC_READ = (STANDARD_RIGHTS_READ Or FWPM_ACTRL_BEGIN_READ_TXN Or FWPM_ACTRL_CLASSIFY Or FWPM_ACTRL_OPEN Or FWPM_ACTRL_READ Or FWPM_ACTRL_READ_STATS)
    FWPM_GENERIC_EXECUTE = (STANDARD_RIGHTS_EXECUTE Or FWPM_ACTRL_ENUM Or FWPM_ACTRL_SUBSCRIBE)
    FWPM_GENERIC_WRITE = (STANDARD_RIGHTS_WRITE Or DELETE Or FWPM_ACTRL_ADD Or FWPM_ACTRL_ADD_LINK Or FWPM_ACTRL_BEGIN_WRITE_TXN Or FWPM_ACTRL_WRITE)
    FWPM_GENERIC_ALL = (STANDARD_RIGHTS_REQUIRED Or FWPM_ACTRL_ADD Or FWPM_ACTRL_ADD_LINK Or FWPM_ACTRL_BEGIN_READ_TXN Or FWPM_ACTRL_BEGIN_WRITE_TXN Or FWPM_ACTRL_CLASSIFY Or FWPM_ACTRL_ENUM Or FWPM_ACTRL_OPEN Or FWPM_ACTRL_READ Or FWPM_ACTRL_READ_STATS Or FWPM_ACTRL_SUBSCRIBE Or FWPM_ACTRL_WRITE)
End Enum

Public Declare PtrSafe Sub FwpmFreeMemory0 Lib "Fwpuclnt.dll" (p As Any)
Public Declare PtrSafe Function FwpmEngineOpen0 Lib "Fwpuclnt.dll" (ByVal serverName As LongPtr, ByVal authnService As RPC_AUTHN, authIdentity As SEC_WINNT_AUTH_IDENTITY_W, session As FWPM_SESSION0, engineHandle As LongPtr) As Long
Public Declare PtrSafe Function FwpmEngineClose0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr) As Long
Public Declare PtrSafe Function FwpmEngineGetOption0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal option As FWPM_ENGINE_OPTION, value As LongPtr) As Long
Public Declare PtrSafe Function FwpmEngineSetOption0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal option As FWPM_ENGINE_OPTION, newValue As FWP_VALUE0) As Long
Public Declare PtrSafe Function FwpmEngineGetSecurityInfo0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal securityInfo As SECURITY_INFORMATION, sidOwner As LongPtr, sidGroup As LongPtr, dacl As LongPtr, sacl As LongPtr, securityDescriptor As LongPtr) As Long
Public Declare PtrSafe Function FwpmEngineSetSecurityInfo0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal securityInfo As SECURITY_INFORMATION, ByVal sidOwner As LongPtr, ByVal sidGroup As LongPtr, ByVal dacl As LongPtr, ByVal sacl As LongPtr) As Long
Public Declare PtrSafe Function FwpmSessionCreateEnumHandle0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, enumTemplate As FWPM_SESSION_ENUM_TEMPLATE0, enumHandle As LongPtr) As Long
Public Declare PtrSafe Function FwpmSessionEnum0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal enumHandle As LongPtr, ByVal numEntriesRequested As Long, entries As LongPtr, numEntriesReturned As Long) As Long
Public Declare PtrSafe Function FwpmSessionDestroyEnumHandle0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal enumHandle As LongPtr) As Long

Public Enum FwpmTxnFlags
    FWPM_TXN_READ_ONLY = &H00000001
End Enum
Public Declare PtrSafe Function FwpmTransactionBegin0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal flags As FwpmTxnFlags) As Long
Public Declare PtrSafe Function FwpmTransactionCommit0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr) As Long
Public Declare PtrSafe Function FwpmTransactionAbort0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr) As Long
Public Declare PtrSafe Function FwpmProviderAdd0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, provider As FWPM_PROVIDER0, sd As SECURITY_DESCRIPTOR) As Long
Public Declare PtrSafe Function FwpmProviderDeleteByKey0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, key As UUID) As Long
Public Declare PtrSafe Function FwpmProviderGetByKey0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, key As UUID, provider As LongPtr) As Long
Public Declare PtrSafe Function FwpmProviderCreateEnumHandle0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, enumTemplate As FWPM_PROVIDER_ENUM_TEMPLATE0, enumHandle As LongPtr) As Long
Public Declare PtrSafe Function FwpmProviderEnum0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal enumHandle As LongPtr, ByVal numEntriesRequested As Long, entries As LongPtr, numEntriesReturned As Long) As Long
Public Declare PtrSafe Function FwpmProviderDestroyEnumHandle0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal enumHandle As LongPtr) As Long
Public Declare PtrSafe Function FwpmProviderGetSecurityInfoByKey0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, key As UUID, ByVal securityInfo As SECURITY_INFORMATION, sidOwner As LongPtr, sidGroup As LongPtr, dacl As LongPtr, sacl As LongPtr, securityDescriptor As LongPtr) As Long
Public Declare PtrSafe Function FwpmProviderSetSecurityInfoByKey0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, key As UUID, ByVal securityInfo As SECURITY_INFORMATION, ByVal sidOwner As LongPtr, ByVal sidGroup As LongPtr, ByVal dacl As LongPtr, ByVal sacl As LongPtr) As Long
'BREAK LINE 3513



'RESUME LINE 3816
Public Declare PtrSafe Function FwpmSubLayerAdd0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, subLayer As FWPM_SUBLAYER0, sd As SECURITY_DESCRIPTOR) As Long
Public Declare PtrSafe Function FwpmSubLayerDeleteByKey0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, key As UUID) As Long
Public Declare PtrSafe Function FwpmSubLayerGetByKey0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, key As UUID, subLayer As LongPtr) As Long
Public Declare PtrSafe Function FwpmSubLayerCreateEnumHandle0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, enumTemplate As FWPM_SUBLAYER_ENUM_TEMPLATE0, enumHandle As LongPtr) As Long
Public Declare PtrSafe Function FwpmSubLayerEnum0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal enumHandle As LongPtr, ByVal numEntriesRequested As Long, entries As LongPtr, numEntriesReturned As Long) As Long
Public Declare PtrSafe Function FwpmSubLayerDestroyEnumHandle0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal enumHandle As LongPtr) As Long
Public Declare PtrSafe Function FwpmSubLayerGetSecurityInfoByKey0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, key As UUID, ByVal securityInfo As SECURITY_INFORMATION, sidOwner As LongPtr, sidGroup As LongPtr, dacl As LongPtr, sacl As LongPtr, securityDescriptor As LongPtr) As Long
Public Declare PtrSafe Function FwpmSubLayerSetSecurityInfoByKey0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, key As UUID, ByVal securityInfo As SECURITY_INFORMATION, ByVal sidOwner As LongPtr, ByVal sidGroup As LongPtr, ByVal dacl As LongPtr, ByVal sacl As LongPtr) As Long
' typedef void (CALLBACK *FWPM_SUBLAYER_CHANGE_CALLBACK0)(
' _Inout_ void* context,
' _In_ const FWPM_SUBLAYER_CHANGE0* change
' );
Public Declare PtrSafe Function FwpmSubLayerSubscribeChanges0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, subscription As FWPM_SUBLAYER_SUBSCRIPTION0, ByVal callback As LongPtr, ByVal context As LongPtr, changeHandle As LongPtr) As Long
Public Declare PtrSafe Function FwpmSubLayerUnsubscribeChanges0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal changeHandle As LongPtr) As Long
Public Declare PtrSafe Function FwpmSubLayerSubscriptionsGet0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, entries As LongPtr, numEntries As Long) As Long

Public Declare PtrSafe Function FwpmLayerGetById0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, [TypeHint(FWPS_BUILTIN_LAYERS)] ByVal id As Integer, layer As LongPtr) As Long
Public Declare PtrSafe Function FwpmLayerGetByKey0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, key As UUID, layer As LongPtr) As Long
Public Declare PtrSafe Function FwpmLayerCreateEnumHandle0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, enumTemplate As FWPM_LAYER_ENUM_TEMPLATE0, enumHandle As LongPtr) As Long
Public Declare PtrSafe Function FwpmLayerEnum0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal enumHandle As LongPtr, ByVal numEntriesRequested As Long, entries As LongPtr, numEntriesReturned As Long) As Long
Public Declare PtrSafe Function FwpmLayerDestroyEnumHandle0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal enumHandle As LongPtr) As Long
Public Declare PtrSafe Function FwpmLayerGetSecurityInfoByKey0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, key As UUID, ByVal securityInfo As SECURITY_INFORMATION, sidOwner As LongPtr, sidGroup As LongPtr, dacl As LongPtr, sacl As LongPtr, securityDescriptor As LongPtr) As Long
Public Declare PtrSafe Function FwpmLayerSetSecurityInfoByKey0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, key As UUID, ByVal securityInfo As SECURITY_INFORMATION, ByVal sidOwner As LongPtr, ByVal sidGroup As LongPtr, ByVal dacl As LongPtr, ByVal sacl As LongPtr) As Long
'BREAK LINE 4000



'RESUME LINE 4129
Public Declare PtrSafe Function FwpmFilterAdd0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, filter As FWPM_FILTER0, sd As SECURITY_DESCRIPTOR, Optional id As LongLong) As Long
Public Declare PtrSafe Function FwpmFilterDeleteById0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal id As LongLong) As Long
Public Declare PtrSafe Function FwpmFilterDeleteByKey0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, key As UUID) As Long
Public Declare PtrSafe Function FwpmFilterGetById0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal id As LongLong, filter As LongPtr) As Long
Public Declare PtrSafe Function FwpmFilterGetByKey0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, key As UUID, filter As LongPtr) As Long
Public Declare PtrSafe Function FwpmFilterCreateEnumHandle0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, enumTemplate As FWPM_FILTER_ENUM_TEMPLATE0, enumHandle As LongPtr) As Long
Public Declare PtrSafe Function FwpmFilterEnum0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal enumHandle As LongPtr, ByVal numEntriesRequested As Long, entries As LongPtr, numEntriesReturned As Long) As Long
Public Declare PtrSafe Function FwpmFilterDestroyEnumHandle0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal enumHandle As LongPtr) As Long
Public Declare PtrSafe Function FwpmFilterGetSecurityInfoByKey0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, key As UUID, ByVal securityInfo As SECURITY_INFORMATION, sidOwner As LongPtr, sidGroup As LongPtr, dacl As LongPtr, sacl As LongPtr, securityDescriptor As LongPtr) As Long
Public Declare PtrSafe Function FwpmFilterSetSecurityInfoByKey0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, key As UUID, ByVal securityInfo As SECURITY_INFORMATION, ByVal sidOwner As LongPtr, ByVal sidGroup As LongPtr, ByVal dacl As LongPtr, ByVal sacl As LongPtr) As Long
' typedef void (CALLBACK *FWPM_FILTER_CHANGE_CALLBACK0)(
' _Inout_ void* context,
' _In_ const FWPM_FILTER_CHANGE0* change
' );
Public Declare PtrSafe Function FwpmFilterSubscribeChanges0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, subscription As FWPM_FILTER_SUBSCRIPTION0, ByVal callback As LongPtr, ByVal context As LongPtr, changeHandle As LongPtr) As Long
Public Declare PtrSafe Function FwpmFilterUnsubscribeChanges0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, ByVal changeHandle As LongPtr) As Long
Public Declare PtrSafe Function FwpmFilterSubscriptionsGet0 Lib "Fwpuclnt.dll" (ByVal engineHandle As LongPtr, entries As LongPtr, numEntries As Long) As Long
Public DeclareWide PtrSafe Function FwpmGetAppIdFromFileName0 Lib "Fwpuclnt.dll" (ByVal filename As String, appId As LongPtr) As Long
Public DeclareWide PtrSafe Function FwpmGetAppIdFromFileName0 Lib "Fwpuclnt.dll" (ByVal filename As LongPtr, appId As LongPtr) As Long
'BREAK LINE 4252


#Region "fwpmu.h-GUID"
 Public Function FWPM_LAYER_INBOUND_IPPACKET_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hc86fd1bf, &H21cd, &H497e, &Ha0, &Hbb, &H17, &H42, &H5c, &H88, &H5c, &H58)
 FWPM_LAYER_INBOUND_IPPACKET_V4 = iid
 End Function
 Public Function FWPM_LAYER_INBOUND_IPPACKET_V4_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb5a230d0, &Ha8c0, &H44f2, &H91, &H6e, &H99, &H1b, &H53, &Hde, &Hd1, &Hf7)
 FWPM_LAYER_INBOUND_IPPACKET_V4_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_INBOUND_IPPACKET_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hf52032cb, &H991c, &H46e7, &H97, &H1d, &H26, &H01, &H45, &H9a, &H91, &Hca)
 FWPM_LAYER_INBOUND_IPPACKET_V6 = iid
 End Function
 Public Function FWPM_LAYER_INBOUND_IPPACKET_V6_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hbb24c279, &H93b4, &H47a2, &H83, &Had, &Hae, &H16, &H98, &Hb5, &H08, &H85)
 FWPM_LAYER_INBOUND_IPPACKET_V6_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_IPPACKET_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1e5c9fae, &H8a84, &H4135, &Ha3, &H31, &H95, &H0b, &H54, &H22, &H9e, &Hcd)
 FWPM_LAYER_OUTBOUND_IPPACKET_V4 = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_IPPACKET_V4_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H08e4bcb5, &Hb647, &H48f3, &H95, &H3c, &He5, &Hdd, &Hbd, &H03, &H93, &H7e)
 FWPM_LAYER_OUTBOUND_IPPACKET_V4_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_IPPACKET_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Ha3b3ab6b, &H3564, &H488c, &H91, &H17, &Hf3, &H4e, &H82, &H14, &H27, &H63)
 FWPM_LAYER_OUTBOUND_IPPACKET_V6 = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_IPPACKET_V6_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9513d7c4, &Ha934, &H49dc, &H91, &Ha7, &H6c, &Hcb, &H80, &Hcc, &H02, &He3)
 FWPM_LAYER_OUTBOUND_IPPACKET_V6_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_IPFORWARD_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Ha82acc24, &H4ee1, &H4ee1, &Hb4, &H65, &Hfd, &H1d, &H25, &Hcb, &H10, &Ha4)
 FWPM_LAYER_IPFORWARD_V4 = iid
 End Function
 Public Function FWPM_LAYER_IPFORWARD_V4_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9e9ea773, &H2fae, &H4210, &H8f, &H17, &H34, &H12, &H9e, &Hf3, &H69, &Heb)
 FWPM_LAYER_IPFORWARD_V4_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_IPFORWARD_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7b964818, &H19c7, &H493a, &Hb7, &H1f, &H83, &H2c, &H36, &H84, &Hd2, &H8c)
 FWPM_LAYER_IPFORWARD_V6 = iid
 End Function
 Public Function FWPM_LAYER_IPFORWARD_V6_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H31524a5d, &H1dfe, &H472f, &Hbb, &H93, &H51, &H8e, &He9, &H45, &Hd8, &Ha2)
 FWPM_LAYER_IPFORWARD_V6_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_INBOUND_TRANSPORT_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H5926dfc8, &He3cf, &H4426, &Ha2, &H83, &Hdc, &H39, &H3f, &H5d, &H0f, &H9d)
 FWPM_LAYER_INBOUND_TRANSPORT_V4 = iid
 End Function
 Public Function FWPM_LAYER_INBOUND_TRANSPORT_V4_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hac4a9833, &Hf69d, &H4648, &Hb2, &H61, &H6d, &Hc8, &H48, &H35, &Hef, &H39)
 FWPM_LAYER_INBOUND_TRANSPORT_V4_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_INBOUND_TRANSPORT_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H634a869f, &Hfc23, &H4b90, &Hb0, &Hc1, &Hbf, &H62, &H0a, &H36, &Hae, &H6f)
 FWPM_LAYER_INBOUND_TRANSPORT_V6 = iid
 End Function
 Public Function FWPM_LAYER_INBOUND_TRANSPORT_V6_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2a6ff955, &H3b2b, &H49d2, &H98, &H48, &Had, &H9d, &H72, &Hdc, &Haa, &Hb7)
 FWPM_LAYER_INBOUND_TRANSPORT_V6_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_TRANSPORT_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H09e61aea, &Hd214, &H46e2, &H9b, &H21, &Hb2, &H6b, &H0b, &H2f, &H28, &Hc8)
 FWPM_LAYER_OUTBOUND_TRANSPORT_V4 = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_TRANSPORT_V4_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hc5f10551, &Hbdb0, &H43d7, &Ha3, &H13, &H50, &He2, &H11, &Hf4, &Hd6, &H8a)
 FWPM_LAYER_OUTBOUND_TRANSPORT_V4_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_TRANSPORT_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &He1735bde, &H013f, &H4655, &Hb3, &H51, &Ha4, &H9e, &H15, &H76, &H2d, &Hf0)
 FWPM_LAYER_OUTBOUND_TRANSPORT_V6 = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_TRANSPORT_V6_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hf433df69, &Hccbd, &H482e, &Hb9, &Hb2, &H57, &H16, &H56, &H58, &Hc3, &Hb3)
 FWPM_LAYER_OUTBOUND_TRANSPORT_V6_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_STREAM_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3b89653c, &Hc170, &H49e4, &Hb1, &Hcd, &He0, &Hee, &Hee, &He1, &H9a, &H3e)
 FWPM_LAYER_STREAM_V4 = iid
 End Function
 Public Function FWPM_LAYER_STREAM_V4_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H25c4c2c2, &H25ff, &H4352, &H82, &Hf9, &Hc5, &H4a, &H4a, &H47, &H26, &Hdc)
 FWPM_LAYER_STREAM_V4_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_STREAM_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H47c9137a, &H7ec4, &H46b3, &Hb6, &He4, &H48, &He9, &H26, &Hb1, &Hed, &Ha4)
 FWPM_LAYER_STREAM_V6 = iid
 End Function
 Public Function FWPM_LAYER_STREAM_V6_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H10a59fc7, &Hb628, &H4c41, &H9e, &Hb8, &Hcf, &H37, &Hd5, &H51, &H03, &Hcf)
 FWPM_LAYER_STREAM_V6_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_DATAGRAM_DATA_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3d08bf4e, &H45f6, &H4930, &Ha9, &H22, &H41, &H70, &H98, &He2, &H00, &H27)
 FWPM_LAYER_DATAGRAM_DATA_V4 = iid
 End Function
 Public Function FWPM_LAYER_DATAGRAM_DATA_V4_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H18e330c6, &H7248, &H4e52, &Haa, &Hab, &H47, &H2e, &Hd6, &H77, &H04, &Hfd)
 FWPM_LAYER_DATAGRAM_DATA_V4_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_DATAGRAM_DATA_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hfa45fe2f, &H3cba, &H4427, &H87, &Hfc, &H57, &Hb9, &Ha4, &Hb1, &H0d, &H00)
 FWPM_LAYER_DATAGRAM_DATA_V6 = iid
 End Function
 Public Function FWPM_LAYER_DATAGRAM_DATA_V6_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H09d1dfe1, &H9b86, &H4a42, &Hbe, &H9d, &H8c, &H31, &H5b, &H92, &Ha5, &Hd0)
 FWPM_LAYER_DATAGRAM_DATA_V6_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_INBOUND_ICMP_ERROR_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H61499990, &H3cb6, &H4e84, &Hb9, &H50, &H53, &Hb9, &H4b, &H69, &H64, &Hf3)
 FWPM_LAYER_INBOUND_ICMP_ERROR_V4 = iid
 End Function
 Public Function FWPM_LAYER_INBOUND_ICMP_ERROR_V4_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Ha6b17075, &Hebaf, &H4053, &Ha4, &He7, &H21, &H3c, &H81, &H21, &Hed, &He5)
 FWPM_LAYER_INBOUND_ICMP_ERROR_V4_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_INBOUND_ICMP_ERROR_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H65f9bdff, &H3b2d, &H4e5d, &Hb8, &Hc6, &Hc7, &H20, &H65, &H1f, &He8, &H98)
 FWPM_LAYER_INBOUND_ICMP_ERROR_V6 = iid
 End Function
 Public Function FWPM_LAYER_INBOUND_ICMP_ERROR_V6_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Ha6e7ccc0, &H08fb, &H468d, &Ha4, &H72, &H97, &H71, &Hd5, &H59, &H5e, &H09)
 FWPM_LAYER_INBOUND_ICMP_ERROR_V6_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_ICMP_ERROR_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H41390100, &H564c, &H4b32, &Hbc, &H1d, &H71, &H80, &H48, &H35, &H4d, &H7c)
 FWPM_LAYER_OUTBOUND_ICMP_ERROR_V4 = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_ICMP_ERROR_V4_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb3598d36, &H0561, &H4588, &Ha6, &Hbf, &He9, &H55, &He3, &Hf6, &H26, &H4b)
 FWPM_LAYER_OUTBOUND_ICMP_ERROR_V4_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_ICMP_ERROR_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7fb03b60, &H7b8d, &H4dfa, &Hba, &Hdd, &H98, &H01, &H76, &Hfc, &H4e, &H12)
 FWPM_LAYER_OUTBOUND_ICMP_ERROR_V6 = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_ICMP_ERROR_V6_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H65f2e647, &H8d0c, &H4f47, &Hb1, &H9b, &H33, &Ha4, &Hd3, &Hf1, &H35, &H7c)
 FWPM_LAYER_OUTBOUND_ICMP_ERROR_V6_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1247d66d, &H0b60, &H4a15, &H8d, &H44, &H71, &H55, &Hd0, &Hf5, &H3a, &H0c)
 FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V4 = iid
 End Function
 Public Function FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V4_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0b5812a2, &Hc3ff, &H4eca, &Hb8, &H8d, &Hc7, &H9e, &H20, &Hac, &H63, &H22)
 FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V4_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H55a650e1, &H5f0a, &H4eca, &Ha6, &H53, &H88, &Hf5, &H3b, &H26, &Haa, &H8c)
 FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V6 = iid
 End Function
 Public Function FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V6_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hcbc998bb, &Hc51f, &H4c1a, &Hbb, &H4f, &H97, &H75, &Hfc, &Hac, &Hab, &H2f)
 FWPM_LAYER_ALE_RESOURCE_ASSIGNMENT_V6_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_ALE_AUTH_LISTEN_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H88bb5dad, &H76d7, &H4227, &H9c, &H71, &Hdf, &H0a, &H3e, &Hd7, &Hbe, &H7e)
 FWPM_LAYER_ALE_AUTH_LISTEN_V4 = iid
 End Function
 Public Function FWPM_LAYER_ALE_AUTH_LISTEN_V4_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H371dfada, &H9f26, &H45fd, &Hb4, &Heb, &Hc2, &H9e, &Hb2, &H12, &H89, &H3f)
 FWPM_LAYER_ALE_AUTH_LISTEN_V4_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_ALE_AUTH_LISTEN_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7ac9de24, &H17dd, &H4814, &Hb4, &Hbd, &Ha9, &Hfb, &Hc9, &H5a, &H32, &H1b)
 FWPM_LAYER_ALE_AUTH_LISTEN_V6 = iid
 End Function
 Public Function FWPM_LAYER_ALE_AUTH_LISTEN_V6_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H60703b07, &H63c8, &H48e9, &Had, &Ha3, &H12, &Hb1, &Haf, &H40, &Ha6, &H17)
 FWPM_LAYER_ALE_AUTH_LISTEN_V6_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &He1cd9fe7, &Hf4b5, &H4273, &H96, &Hc0, &H59, &H2e, &H48, &H7b, &H86, &H50)
 FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4 = iid
 End Function
 Public Function FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9eeaa99b, &Hbd22, &H4227, &H91, &H9f, &H00, &H73, &Hc6, &H33, &H57, &Hb1)
 FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V4_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Ha3b42c97, &H9f04, &H4672, &Hb8, &H7e, &Hce, &He9, &Hc4, &H83, &H25, &H7f)
 FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V6 = iid
 End Function
 Public Function FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V6_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H89455b97, &Hdbe1, &H453f, &Ha2, &H24, &H13, &Hda, &H89, &H5a, &Hf3, &H96)
 FWPM_LAYER_ALE_AUTH_RECV_ACCEPT_V6_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_ALE_AUTH_CONNECT_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hc38d57d1, &H05a7, &H4c33, &H90, &H4f, &H7f, &Hbc, &Hee, &He6, &H0e, &H82)
 FWPM_LAYER_ALE_AUTH_CONNECT_V4 = iid
 End Function
 Public Function FWPM_LAYER_ALE_AUTH_CONNECT_V4_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hd632a801, &Hf5ba, &H4ad6, &H96, &He3, &H60, &H70, &H17, &Hd9, &H83, &H6a)
 FWPM_LAYER_ALE_AUTH_CONNECT_V4_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_ALE_AUTH_CONNECT_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4a72393b, &H319f, &H44bc, &H84, &Hc3, &Hba, &H54, &Hdc, &Hb3, &Hb6, &Hb4)
 FWPM_LAYER_ALE_AUTH_CONNECT_V6 = iid
 End Function
 Public Function FWPM_LAYER_ALE_AUTH_CONNECT_V6_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hc97bc3b8, &Hc9a3, &H4e33, &H86, &H95, &H8e, &H17, &Haa, &Hd4, &Hde, &H09)
 FWPM_LAYER_ALE_AUTH_CONNECT_V6_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Haf80470a, &H5596, &H4c13, &H99, &H92, &H53, &H9e, &H6f, &He5, &H79, &H67)
 FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4 = iid
 End Function
 Public Function FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H146ae4a9, &Ha1d2, &H4d43, &Ha3, &H1a, &H4c, &H42, &H68, &H2b, &H8e, &H4f)
 FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_ALE_FLOW_ESTABLISHED_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7021d2b3, &Hdfa4, &H406e, &Haf, &Heb, &H6a, &Hfa, &Hf7, &He7, &H0e, &Hfd)
 FWPM_LAYER_ALE_FLOW_ESTABLISHED_V6 = iid
 End Function
 Public Function FWPM_LAYER_ALE_FLOW_ESTABLISHED_V6_DISCARD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H46928636, &Hbbca, &H4b76, &H94, &H1d, &H0f, &Ha7, &Hf5, &Hd7, &Hd3, &H72)
 FWPM_LAYER_ALE_FLOW_ESTABLISHED_V6_DISCARD = iid
 End Function
 Public Function FWPM_LAYER_INBOUND_MAC_FRAME_ETHERNET() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Heffb7edb, &H0055, &H4f9a, &Ha2, &H31, &H4f, &Hf8, &H13, &H1a, &Hd1, &H91)
 FWPM_LAYER_INBOUND_MAC_FRAME_ETHERNET = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_MAC_FRAME_ETHERNET() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H694673bc, &Hd6db, &H4870, &Had, &Hee, &H0a, &Hcd, &Hbd, &Hb7, &Hf4, &Hb2)
 FWPM_LAYER_OUTBOUND_MAC_FRAME_ETHERNET = iid
 End Function
 Public Function FWPM_LAYER_INBOUND_MAC_FRAME_NATIVE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hd4220bd3, &H62ce, &H4f08, &Hae, &H88, &Hb5, &H6e, &H85, &H26, &Hdf, &H50)
 FWPM_LAYER_INBOUND_MAC_FRAME_NATIVE = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_MAC_FRAME_NATIVE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H94c44912, &H9d6f, &H4ebf, &Hb9, &H95, &H05, &Hab, &H8a, &H08, &H8d, &H1b)
 FWPM_LAYER_OUTBOUND_MAC_FRAME_NATIVE = iid
 End Function
 Public Function FWPM_LAYER_INGRESS_VSWITCH_ETHERNET() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7d98577a, &H9a87, &H41ec, &H97, &H18, &H7c, &Hf5, &H89, &Hc9, &Hf3, &H2d)
 FWPM_LAYER_INGRESS_VSWITCH_ETHERNET = iid
 End Function
 Public Function FWPM_LAYER_EGRESS_VSWITCH_ETHERNET() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H86c872b0, &H76fa, &H4b79, &H93, &Ha4, &H07, &H50, &H53, &H0a, &He2, &H92)
 FWPM_LAYER_EGRESS_VSWITCH_ETHERNET = iid
 End Function
 Public Function FWPM_LAYER_INGRESS_VSWITCH_TRANSPORT_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb2696ff6, &H774f, &H4554, &H9f, &H7d, &H3d, &Ha3, &H94, &H5f, &H8e, &H85)
 FWPM_LAYER_INGRESS_VSWITCH_TRANSPORT_V4 = iid
 End Function
 Public Function FWPM_LAYER_INGRESS_VSWITCH_TRANSPORT_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H5ee314fc, &H7d8a, &H47f4, &Hb7, &He3, &H29, &H1a, &H36, &Hda, &H4e, &H12)
 FWPM_LAYER_INGRESS_VSWITCH_TRANSPORT_V6 = iid
 End Function
 Public Function FWPM_LAYER_EGRESS_VSWITCH_TRANSPORT_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb92350b6, &H91f0, &H46b6, &Hbd, &Hc4, &H87, &H1d, &Hfd, &H4a, &H7c, &H98)
 FWPM_LAYER_EGRESS_VSWITCH_TRANSPORT_V4 = iid
 End Function
 Public Function FWPM_LAYER_EGRESS_VSWITCH_TRANSPORT_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1b2def23, &H1881, &H40bd, &H82, &Hf4, &H42, &H54, &He6, &H31, &H41, &Hcb)
 FWPM_LAYER_EGRESS_VSWITCH_TRANSPORT_V6 = iid
 End Function
 Public Function FWPM_LAYER_INBOUND_TRANSPORT_FAST() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &He41d2719, &H05c7, &H40f0, &H89, &H83, &Hea, &H8d, &H17, &Hbb, &Hc2, &Hf6)
 FWPM_LAYER_INBOUND_TRANSPORT_FAST = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_TRANSPORT_FAST() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H13ed4388, &Ha070, &H4815, &H99, &H35, &H7a, &H9b, &He6, &H40, &H8b, &H78)
 FWPM_LAYER_OUTBOUND_TRANSPORT_FAST = iid
 End Function
 Public Function FWPM_LAYER_INBOUND_MAC_FRAME_NATIVE_FAST() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H853aaa8e, &H2b78, &H4d24, &Ha8, &H04, &H36, &Hdb, &H08, &Hb2, &H97, &H11)
 FWPM_LAYER_INBOUND_MAC_FRAME_NATIVE_FAST = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_MAC_FRAME_NATIVE_FAST() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H470df946, &Hc962, &H486f, &H94, &H46, &H82, &H93, &Hcb, &Hc7, &H5e, &Hb8)
 FWPM_LAYER_OUTBOUND_MAC_FRAME_NATIVE_FAST = iid
 End Function
 Public Function FWPM_LAYER_IPSEC_KM_DEMUX_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hf02b1526, &Ha459, &H4a51, &Hb9, &He3, &H75, &H9d, &He5, &H2b, &H9d, &H2c)
 FWPM_LAYER_IPSEC_KM_DEMUX_V4 = iid
 End Function
 Public Function FWPM_LAYER_IPSEC_KM_DEMUX_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2f755cf6, &H2fd4, &H4e88, &Hb3, &He4, &Ha9, &H1b, &Hca, &H49, &H52, &H35)
 FWPM_LAYER_IPSEC_KM_DEMUX_V6 = iid
 End Function
 Public Function FWPM_LAYER_IPSEC_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Heda65c74, &H610d, &H4bc5, &H94, &H8f, &H3c, &H4f, &H89, &H55, &H68, &H67)
 FWPM_LAYER_IPSEC_V4 = iid
 End Function
 Public Function FWPM_LAYER_IPSEC_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H13c48442, &H8d87, &H4261, &H9a, &H29, &H59, &Hd2, &Hab, &Hc3, &H48, &Hb4)
 FWPM_LAYER_IPSEC_V6 = iid
 End Function
 Public Function FWPM_LAYER_IKEEXT_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb14b7bdb, &Hdbbd, &H473e, &Hbe, &Hd4, &H8b, &H47, &H08, &Hd4, &Hf2, &H70)
 FWPM_LAYER_IKEEXT_V4 = iid
 End Function
 Public Function FWPM_LAYER_IKEEXT_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb64786b3, &Hf687, &H4eb9, &H89, &Hd2, &H8e, &Hf3, &H2a, &Hcd, &Hab, &He2)
 FWPM_LAYER_IKEEXT_V6 = iid
 End Function
 Public Function FWPM_LAYER_RPC_UM() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H75a89dda, &H95e4, &H40f3, &Had, &Hc7, &H76, &H88, &Ha9, &Hc8, &H47, &He1)
 FWPM_LAYER_RPC_UM = iid
 End Function
 Public Function FWPM_LAYER_RPC_EPMAP() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9247bc61, &Heb07, &H47ee, &H87, &H2c, &Hbf, &Hd7, &H8b, &Hfd, &H16, &H16)
 FWPM_LAYER_RPC_EPMAP = iid
 End Function
 Public Function FWPM_LAYER_RPC_EP_ADD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H618dffc7, &Hc450, &H4943, &H95, &Hdb, &H99, &Hb4, &Hc1, &H6a, &H55, &Hd4)
 FWPM_LAYER_RPC_EP_ADD = iid
 End Function
 Public Function FWPM_LAYER_RPC_PROXY_CONN() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H94a4b50b, &Hba5c, &H4f27, &H90, &H7a, &H22, &H9f, &Hac, &H0c, &H2a, &H7a)
 FWPM_LAYER_RPC_PROXY_CONN = iid
 End Function
 Public Function FWPM_LAYER_RPC_PROXY_IF() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hf8a38615, &He12c, &H41ac, &H98, &Hdf, &H12, &H1a, &Hd9, &H81, &Haa, &Hde)
 FWPM_LAYER_RPC_PROXY_IF = iid
 End Function
 Public Function FWPM_LAYER_KM_AUTHORIZATION() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4aa226e9, &H9020, &H45fb, &H95, &H6a, &Hc0, &H24, &H9d, &H84, &H11, &H95)
 FWPM_LAYER_KM_AUTHORIZATION = iid
 End Function
 Public Function FWPM_LAYER_NAME_RESOLUTION_CACHE_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0c2aa681, &H905b, &H4ccd, &Ha4, &H67, &H4d, &Hd8, &H11, &Hd0, &H7b, &H7b)
 FWPM_LAYER_NAME_RESOLUTION_CACHE_V4 = iid
 End Function
 Public Function FWPM_LAYER_NAME_RESOLUTION_CACHE_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H92d592fa, &H6b01, &H434a, &H9d, &Hea, &Hd1, &He9, &H6e, &Ha9, &H7d, &Ha9)
 FWPM_LAYER_NAME_RESOLUTION_CACHE_V6 = iid
 End Function
 Public Function FWPM_LAYER_ALE_RESOURCE_RELEASE_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H74365cce, &Hccb0, &H401a, &Hbf, &Hc1, &Hb8, &H99, &H34, &Had, &H7e, &H15)
 FWPM_LAYER_ALE_RESOURCE_RELEASE_V4 = iid
 End Function
 Public Function FWPM_LAYER_ALE_RESOURCE_RELEASE_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hf4e5ce80, &Hedcc, &H4e13, &H8a, &H2f, &Hb9, &H14, &H54, &Hbb, &H05, &H7b)
 FWPM_LAYER_ALE_RESOURCE_RELEASE_V6 = iid
 End Function
 Public Function FWPM_LAYER_ALE_ENDPOINT_CLOSURE_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb4766427, &He2a2, &H467a, &Hbd, &H7e, &Hdb, &Hcd, &H1b, &Hd8, &H5a, &H09)
 FWPM_LAYER_ALE_ENDPOINT_CLOSURE_V4 = iid
 End Function
 Public Function FWPM_LAYER_ALE_ENDPOINT_CLOSURE_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hbb536ccd, &H4755, &H4ba9, &H9f, &Hf7, &Hf9, &Hed, &Hf8, &H69, &H9c, &H7b)
 FWPM_LAYER_ALE_ENDPOINT_CLOSURE_V6 = iid
 End Function
 Public Function FWPM_LAYER_ALE_CONNECT_REDIRECT_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hc6e63c8c, &Hb784, &H4562, &Haa, &H7d, &H0a, &H67, &Hcf, &Hca, &Hf9, &Ha3)
 FWPM_LAYER_ALE_CONNECT_REDIRECT_V4 = iid
 End Function
 Public Function FWPM_LAYER_ALE_CONNECT_REDIRECT_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H587e54a7, &H8046, &H42ba, &Ha0, &Haa, &Hb7, &H16, &H25, &H0f, &Hc7, &Hfd)
 FWPM_LAYER_ALE_CONNECT_REDIRECT_V6 = iid
 End Function
 Public Function FWPM_LAYER_ALE_BIND_REDIRECT_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H66978cad, &Hc704, &H42ac, &H86, &Hac, &H7c, &H1a, &H23, &H1b, &Hd2, &H53)
 FWPM_LAYER_ALE_BIND_REDIRECT_V4 = iid
 End Function
 Public Function FWPM_LAYER_ALE_BIND_REDIRECT_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hbef02c9c, &H606b, &H4536, &H8c, &H26, &H1c, &H2f, &Hc7, &Hb6, &H31, &Hd4)
 FWPM_LAYER_ALE_BIND_REDIRECT_V6 = iid
 End Function
 Public Function FWPM_LAYER_STREAM_PACKET_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Haf52d8ec, &Hcb2d, &H44e5, &Had, &H92, &Hf8, &Hdc, &H38, &Hd2, &Heb, &H29)
 FWPM_LAYER_STREAM_PACKET_V4 = iid
 End Function
 Public Function FWPM_LAYER_STREAM_PACKET_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H779a8ca3, &Hf099, &H468f, &Hb5, &Hd4, &H83, &H53, &H5c, &H46, &H1c, &H02)
 FWPM_LAYER_STREAM_PACKET_V6 = iid
 End Function
 Public Function FWPM_LAYER_INBOUND_RESERVED2() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hf4fb8d55, &Hc076, &H46d8, &Ha2, &Hc7, &H6a, &H4c, &H72, &H2c, &Ha4, &Hed)
 FWPM_LAYER_INBOUND_RESERVED2 = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_NETWORK_CONNECTION_POLICY_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H037f317a, &Hd696, &H494a, &Hbb, &Ha5, &Hbf, &Hfc, &H26, &H5e, &H60, &H52)
 FWPM_LAYER_OUTBOUND_NETWORK_CONNECTION_POLICY_V4 = iid
 End Function
 Public Function FWPM_LAYER_OUTBOUND_NETWORK_CONNECTION_POLICY_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H22a4fdb1, &H6d7e, &H48ae, &Hae, &H77, &H37, &H42, &H52, &H5c, &H31, &H19)
 FWPM_LAYER_OUTBOUND_NETWORK_CONNECTION_POLICY_V6 = iid
 End Function
 Public Function FWPM_SUBLAYER_RPC_AUDIT() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H758c84f4, &Hfb48, &H4de9, &H9a, &Heb, &H3e, &Hd9, &H55, &H1a, &Hb1, &Hfd)
 FWPM_SUBLAYER_RPC_AUDIT = iid
 End Function
 Public Function FWPM_SUBLAYER_IPSEC_TUNNEL() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H83f299ed, &H9ff4, &H4967, &Haf, &Hf4, &Hc3, &H09, &Hf4, &Hda, &Hb8, &H27)
 FWPM_SUBLAYER_IPSEC_TUNNEL = iid
 End Function
 Public Function FWPM_SUBLAYER_UNIVERSAL() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Heebecc03, &Hced4, &H4380, &H81, &H9a, &H27, &H34, &H39, &H7b, &H2b, &H74)
 FWPM_SUBLAYER_UNIVERSAL = iid
 End Function
 Public Function FWPM_SUBLAYER_LIPS() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1b75c0ce, &Hff60, &H4711, &Ha7, &H0f, &Hb4, &H95, &H8c, &Hc3, &Hb2, &Hd0)
 FWPM_SUBLAYER_LIPS = iid
 End Function
 Public Function FWPM_SUBLAYER_SECURE_SOCKET() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H15a66e17, &H3f3c, &H4f7b, &Haa, &H6c, &H81, &H2a, &Ha6, &H13, &Hdd, &H82)
 FWPM_SUBLAYER_SECURE_SOCKET = iid
 End Function
 Public Function FWPM_SUBLAYER_TCP_CHIMNEY_OFFLOAD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H337608b9, &Hb7d5, &H4d5f, &H82, &Hf9, &H36, &H18, &H61, &H8b, &Hc0, &H58)
 FWPM_SUBLAYER_TCP_CHIMNEY_OFFLOAD = iid
 End Function
 Public Function FWPM_SUBLAYER_INSPECTION() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H877519e1, &He6a9, &H41a5, &H81, &Hb4, &H8c, &H4f, &H11, &H8e, &H4a, &H60)
 FWPM_SUBLAYER_INSPECTION = iid
 End Function
 Public Function FWPM_SUBLAYER_TEREDO() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hba69dc66, &H5176, &H4979, &H9c, &H89, &H26, &Ha7, &Hb4, &H6a, &H83, &H27)
 FWPM_SUBLAYER_TEREDO = iid
 End Function
 Public Function FWPM_SUBLAYER_EDGE_TRAVERSAL() As UUID
   FWPM_SUBLAYER_EDGE_TRAVERSAL = FWPM_SUBLAYER_TEREDO
 End Function
 Public Function FWPM_SUBLAYER_IPSEC_FORWARD_OUTBOUND_TUNNEL() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Ha5082e73, &H8f71, &H4559, &H8a, &H9a, &H10, &H1c, &Hea, &H04, &Hef, &H87)
 FWPM_SUBLAYER_IPSEC_FORWARD_OUTBOUND_TUNNEL = iid
 End Function
 Public Function FWPM_SUBLAYER_IPSEC_DOSP() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &He076d572, &H5d3d, &H48ef, &H80, &H2b, &H90, &H9e, &Hdd, &Hb0, &H98, &Hbd)
 FWPM_SUBLAYER_IPSEC_DOSP = iid
 End Function
 Public Function FWPM_SUBLAYER_TCP_TEMPLATES() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H24421dcf, &H0ac5, &H4caa, &H9e, &H14, &H50, &Hf6, &He3, &H63, &H6a, &Hf0)
 FWPM_SUBLAYER_TCP_TEMPLATES = iid
 End Function
 Public Function FWPM_SUBLAYER_IPSEC_SECURITY_REALM() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H37a57701, &H5884, &H4964, &H92, &Hb8, &H3e, &H70, &H46, &H88, &Hb0, &Had)
 FWPM_SUBLAYER_IPSEC_SECURITY_REALM = iid
 End Function
 Public Function FWPM_SUBLAYER_MPSSVC_WSH() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb3cdd441, &Haf90, &H41ba, &Ha7, &H45, &H7c, &H60, &H08, &Hff, &H23, &H00)
 FWPM_SUBLAYER_MPSSVC_WSH = iid
 End Function
 Public Function FWPM_SUBLAYER_MPSSVC_WF() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb3cdd441, &Haf90, &H41ba, &Ha7, &H45, &H7c, &H60, &H08, &Hff, &H23, &H01)
 FWPM_SUBLAYER_MPSSVC_WF = iid
 End Function
 Public Function FWPM_SUBLAYER_MPSSVC_QUARANTINE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb3cdd441, &Haf90, &H41ba, &Ha7, &H45, &H7c, &H60, &H08, &Hff, &H23, &H02)
 FWPM_SUBLAYER_MPSSVC_QUARANTINE = iid
 End Function
 Public Function FWPM_SUBLAYER_MPSSVC_EDP() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H09a47e38, &Hfa97, &H471b, &Hb1, &H23, &H18, &Hbc, &Hd7, &He6, &H50, &H71)
 FWPM_SUBLAYER_MPSSVC_EDP = iid
 End Function
 Public Function FWPM_SUBLAYER_MPSSVC_TENANT_RESTRICTIONS() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1ec6c7e1, &Hfdd9, &H478a, &Hb5, &H5f, &Hff, &H8b, &Ha1, &Hd2, &Hc1, &H7d)
 FWPM_SUBLAYER_MPSSVC_TENANT_RESTRICTIONS = iid
 End Function
 Public Function FWPM_SUBLAYER_MPSSVC_APP_ISOLATION() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hffe221c3, &H92a8, &H4564, &Ha5, &H9f, &Hda, &Hfb, &H70, &H75, &H60, &H20)
 FWPM_SUBLAYER_MPSSVC_APP_ISOLATION = iid
 End Function
 Public Function FWPM_CONDITION_ALE_PACKAGE_FAMILY_NAME() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H81bc78fb, &Hf28d, &H4886, &Ha6, &H4, &H6a, &Hcc, &H26, &H1f, &H26, &H1B)
 FWPM_CONDITION_ALE_PACKAGE_FAMILY_NAME = iid
 End Function
 Public Function FWPM_CONDITION_INTERFACE_MAC_ADDRESS() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hf6e63dce, &H1f4b, &H4c6b, &Hb6, &Hef, &H11, &H65, &He7, &H1f, &H8e, &He7)
 FWPM_CONDITION_INTERFACE_MAC_ADDRESS = iid
 End Function
 Public Function FWPM_CONDITION_MAC_LOCAL_ADDRESS() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hd999e981, &H7948, &H4c83, &Hb7, &H42, &Hc8, &H4e, &H3b, &H67, &H8f, &H8f)
 FWPM_CONDITION_MAC_LOCAL_ADDRESS = iid
 End Function
 Public Function FWPM_CONDITION_MAC_REMOTE_ADDRESS() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H408f2ed4, &H3a70, &H4b4d, &H92, &Ha6, &H41, &H5a, &Hc2, &H0e, &H2f, &H12)
 FWPM_CONDITION_MAC_REMOTE_ADDRESS = iid
 End Function
 Public Function FWPM_CONDITION_ETHER_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hfd08948d, &Ha219, &H4d52, &Hbb, &H98, &H1a, &H55, &H40, &Hee, &H7b, &H4e)
 FWPM_CONDITION_ETHER_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_VLAN_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H938eab21, &H3618, &H4e64, &H9c, &Ha5, &H21, &H41, &Heb, &Hda, &H1c, &Ha2)
 FWPM_CONDITION_VLAN_ID = iid
 End Function
 Public Function FWPM_CONDITION_VSWITCH_TENANT_NETWORK_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hdc04843c, &H79e6, &H4e44, &Ha0, &H25, &H65, &Hb9, &Hbb, &H0f, &H9f, &H94)
 FWPM_CONDITION_VSWITCH_TENANT_NETWORK_ID = iid
 End Function
 Public Function FWPM_CONDITION_NDIS_PORT() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hdb7bb42b, &H2dac, &H4cd4, &Ha5, &H9a, &He0, &Hbd, &Hce, &H1e, &H68, &H34)
 FWPM_CONDITION_NDIS_PORT = iid
 End Function
 Public Function FWPM_CONDITION_NDIS_MEDIA_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hcb31cef1, &H791d, &H473b, &H89, &Hd1, &H61, &Hc5, &H98, &H43, &H04, &Ha0)
 FWPM_CONDITION_NDIS_MEDIA_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_NDIS_PHYSICAL_MEDIA_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H34c79823, &Hc229, &H44f2, &Hb8, &H3c, &H74, &H02, &H08, &H82, &Hae, &H77)
 FWPM_CONDITION_NDIS_PHYSICAL_MEDIA_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_L2_FLAGS() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7bc43cbf, &H37ba, &H45f1, &Hb7, &H4a, &H82, &Hff, &H51, &H8e, &Heb, &H10)
 FWPM_CONDITION_L2_FLAGS = iid
 End Function
 Public Function FWPM_CONDITION_MAC_LOCAL_ADDRESS_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hcc31355c, &H3073, &H4ffb, &Ha1, &H4f, &H79, &H41, &H5c, &Hb1, &Hea, &Hd1)
 FWPM_CONDITION_MAC_LOCAL_ADDRESS_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_MAC_REMOTE_ADDRESS_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H027fedb4, &Hf1c1, &H4030, &Hb5, &H64, &Hee, &H77, &H7f, &Hd8, &H67, &Hea)
 FWPM_CONDITION_MAC_REMOTE_ADDRESS_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_INTERFACE() As UUID
 FWPM_CONDITION_INTERFACE = FWPM_CONDITION_IP_LOCAL_INTERFACE
 End Function
 Public Function FWPM_CONDITION_ALE_PACKAGE_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H71bc78fa, &Hf17c, &H4997, &Ha6, &H2, &H6a, &Hbb, &H26, &H1f, &H35, &H1c)
 FWPM_CONDITION_ALE_PACKAGE_ID = iid
 End Function
 Public Function FWPM_CONDITION_MAC_SOURCE_ADDRESS() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7b795451, &Hf1f6, &H4d05, &Hb7, &Hcb, &H21, &H77, &H9d, &H80, &H23, &H36)
 FWPM_CONDITION_MAC_SOURCE_ADDRESS = iid
 End Function
 Public Function FWPM_CONDITION_MAC_DESTINATION_ADDRESS() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H04ea2a93, &H858c, &H4027, &Hb6, &H13, &Hb4, &H31, &H80, &Hc7, &H85, &H9e)
 FWPM_CONDITION_MAC_DESTINATION_ADDRESS = iid
 End Function
 Public Function FWPM_CONDITION_MAC_SOURCE_ADDRESS_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H5c1b72e4, &H299e, &H4437, &Ha2, &H98, &Hbc, &H3f, &H01, &H4b, &H3d, &Hc2)
 FWPM_CONDITION_MAC_SOURCE_ADDRESS_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_MAC_DESTINATION_ADDRESS_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hae052932, &Hef42, &H4e99, &Hb1, &H29, &Hf3, &Hb3, &H13, &H9e, &H34, &Hf7)
 FWPM_CONDITION_MAC_DESTINATION_ADDRESS_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_IP_SOURCE_PORT() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Ha6afef91, &H3df4, &H4730, &Ha2, &H14, &Hf5, &H42, &H6a, &Heb, &Hf8, &H21)
 FWPM_CONDITION_IP_SOURCE_PORT = iid
 End Function
 Public Function FWPM_CONDITION_VSWITCH_ICMP_TYPE() As UUID
  FWPM_CONDITION_VSWITCH_ICMP_TYPE = FWPM_CONDITION_IP_SOURCE_PORT
 End Function
 Public Function FWPM_CONDITION_IP_DESTINATION_PORT() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hce6def45, &H60fb, &H4a7b, &Ha3, &H04, &Haf, &H30, &Ha1, &H17, &H00, &H0e)
 FWPM_CONDITION_IP_DESTINATION_PORT = iid
 End Function
 Public Function FWPM_CONDITION_VSWITCH_ICMP_CODE() As UUID
   FWPM_CONDITION_VSWITCH_ICMP_CODE = FWPM_CONDITION_IP_DESTINATION_PORT
 End Function
 Public Function FWPM_CONDITION_VSWITCH_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hc4a414ba, &H437b, &H4de6, &H99, &H46, &Hd9, &H9c, &H1b, &H95, &Hb3, &H12)
 FWPM_CONDITION_VSWITCH_ID = iid
 End Function
 Public Function FWPM_CONDITION_VSWITCH_NETWORK_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H11d48b4b, &He77a, &H40b4, &H91, &H55, &H39, &H2c, &H90, &H6c, &H26, &H08)
 FWPM_CONDITION_VSWITCH_NETWORK_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_VSWITCH_SOURCE_INTERFACE_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7f4ef24b, &Hb2c1, &H4938, &Hba, &H33, &Ha1, &Hec, &Hbe, &Hd5, &H12, &Hba)
 FWPM_CONDITION_VSWITCH_SOURCE_INTERFACE_ID = iid
 End Function
 Public Function FWPM_CONDITION_VSWITCH_DESTINATION_INTERFACE_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H8ed48be4, &Hc926, &H49f6, &Ha4, &Hf6, &Hef, &H30, &H30, &He3, &Hfc, &H16)
 FWPM_CONDITION_VSWITCH_DESTINATION_INTERFACE_ID = iid
 End Function
 Public Function FWPM_CONDITION_VSWITCH_SOURCE_VM_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9c2a9ec2, &H9fc6, &H42bc, &Hbd, &Hd8, &H40, &H6d, &H4d, &Ha0, &Hbe, &H64)
 FWPM_CONDITION_VSWITCH_SOURCE_VM_ID = iid
 End Function
 Public Function FWPM_CONDITION_VSWITCH_DESTINATION_VM_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6106aace, &H4de1, &H4c84, &H96, &H71, &H36, &H37, &Hf8, &Hbc, &Hf7, &H31)
 FWPM_CONDITION_VSWITCH_DESTINATION_VM_ID = iid
 End Function
 Public Function FWPM_CONDITION_VSWITCH_SOURCE_INTERFACE_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &He6b040a2, &Hedaf, &H4c36, &H90, &H8b, &Hf2, &Hf5, &H8a, &He4, &H38, &H07)
 FWPM_CONDITION_VSWITCH_SOURCE_INTERFACE_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_VSWITCH_DESTINATION_INTERFACE_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hfa9b3f06, &H2f1a, &H4c57, &H9e, &H68, &Ha7, &H09, &H8b, &H28, &Hdb, &Hfe)
 FWPM_CONDITION_VSWITCH_DESTINATION_INTERFACE_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_ALE_SECURITY_ATTRIBUTE_FQBN_VALUE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H37a57699, &H5883, &H4963, &H92, &Hb8, &H3e, &H70, &H46, &H88, &Hb0, &Had)
 FWPM_CONDITION_ALE_SECURITY_ATTRIBUTE_FQBN_VALUE = iid
 End Function
 Public Function FWPM_CONDITION_IPSEC_SECURITY_REALM_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H37a57700, &H5884, &H4964, &H92, &Hb8, &H3e, &H70, &H46, &H88, &Hb0, &Had)
 FWPM_CONDITION_IPSEC_SECURITY_REALM_ID = iid
 End Function
 Public Function FWPM_CONDITION_ALE_EFFECTIVE_NAME() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb1277b9a, &Hb781, &H40fc, &H96, &H71, &He5, &Hf1, &Hb9, &H89, &Hf3, &H4e)
  FWPM_CONDITION_ALE_EFFECTIVE_NAME = iid
 End Function
 Public Function FWPM_CONDITION_IP_LOCAL_ADDRESS() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hd9ee00de, &Hc1ef, &H4617, &Hbf, &He3, &Hff, &Hd8, &Hf5, &Ha0, &H89, &H57)
 FWPM_CONDITION_IP_LOCAL_ADDRESS = iid
 End Function
 Public Function FWPM_CONDITION_IP_REMOTE_ADDRESS() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb235ae9a, &H1d64, &H49b8, &Ha4, &H4c, &H5f, &Hf3, &Hd9, &H09, &H50, &H45)
 FWPM_CONDITION_IP_REMOTE_ADDRESS = iid
 End Function
 Public Function FWPM_CONDITION_IP_SOURCE_ADDRESS() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hae96897e, &H2e94, &H4bc9, &Hb3, &H13, &Hb2, &H7e, &He8, &H0e, &H57, &H4d)
 FWPM_CONDITION_IP_SOURCE_ADDRESS = iid
 End Function
 Public Function FWPM_CONDITION_IP_DESTINATION_ADDRESS() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2d79133b, &Hb390, &H45c6, &H86, &H99, &Hac, &Hac, &Hea, &Haf, &Hed, &H33)
 FWPM_CONDITION_IP_DESTINATION_ADDRESS = iid
 End Function
 Public Function FWPM_CONDITION_IP_LOCAL_ADDRESS_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6ec7f6c4, &H376b, &H45d7, &H9e, &H9c, &Hd3, &H37, &Hce, &Hdc, &Hd2, &H37)
 FWPM_CONDITION_IP_LOCAL_ADDRESS_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_IP_DESTINATION_ADDRESS_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1ec1b7c9, &H4eea, &H4f5e, &Hb9, &Hef, &H76, &Hbe, &Haa, &Haf, &H17, &Hee)
 FWPM_CONDITION_IP_DESTINATION_ADDRESS_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_IP_NEXTHOP_ADDRESS() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Heabe448a, &Ha711, &H4d64, &H85, &Hb7, &H3f, &H76, &Hb6, &H52, &H99, &Hc7)
 FWPM_CONDITION_IP_NEXTHOP_ADDRESS = iid
 End Function
 Public Function FWPM_CONDITION_IP_LOCAL_INTERFACE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4cd62a49, &H59c3, &H4969, &Hb7, &Hf3, &Hbd, &Ha5, &Hd3, &H28, &H90, &Ha4)
 FWPM_CONDITION_IP_LOCAL_INTERFACE = iid
 End Function
 Public Function FWPM_CONDITION_IP_ARRIVAL_INTERFACE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H618a9b6d, &H386b, &H4136, &Had, &H6e, &Hb5, &H15, &H87, &Hcf, &Hb1, &Hcd)
 FWPM_CONDITION_IP_ARRIVAL_INTERFACE = iid
 End Function
 Public Function FWPM_CONDITION_ARRIVAL_INTERFACE_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H89f990de, &He798, &H4e6d, &Hab, &H76, &H7c, &H95, &H58, &H29, &H2e, &H6f)
 FWPM_CONDITION_ARRIVAL_INTERFACE_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_ARRIVAL_TUNNEL_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H511166dc, &H7a8c, &H4aa7, &Hb5, &H33, &H95, &Hab, &H59, &Hfb, &H03, &H40)
 FWPM_CONDITION_ARRIVAL_TUNNEL_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_ARRIVAL_INTERFACE_INDEX() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hcc088db3, &H1792, &H4a71, &Hb0, &Hf9, &H03, &H7d, &H21, &Hcd, &H82, &H8b)
 FWPM_CONDITION_ARRIVAL_INTERFACE_INDEX = iid
 End Function
 Public Function FWPM_CONDITION_NEXTHOP_SUB_INTERFACE_INDEX() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hef8a6122, &H0577, &H45a7, &H9a, &Haf, &H82, &H5f, &Hbe, &Hb4, &Hfb, &H95)
 FWPM_CONDITION_NEXTHOP_SUB_INTERFACE_INDEX = iid
 End Function
 Public Function FWPM_CONDITION_IP_NEXTHOP_INTERFACE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H93ae8f5b, &H7f6f, &H4719, &H98, &Hc8, &H14, &He9, &H74, &H29, &Hef, &H04)
 FWPM_CONDITION_IP_NEXTHOP_INTERFACE = iid
 End Function
 Public Function FWPM_CONDITION_NEXTHOP_INTERFACE_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H97537c6c, &Hd9a3, &H4767, &Ha3, &H81, &He9, &H42, &H67, &H5c, &Hd9, &H20)
 FWPM_CONDITION_NEXTHOP_INTERFACE_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_NEXTHOP_TUNNEL_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H72b1a111, &H987b, &H4720, &H99, &Hdd, &Hc7, &Hc5, &H76, &Hfa, &H2d, &H4c)
 FWPM_CONDITION_NEXTHOP_TUNNEL_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_NEXTHOP_INTERFACE_INDEX() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H138e6888, &H7ab8, &H4d65, &H9e, &He8, &H05, &H91, &Hbc, &Hf6, &Ha4, &H94)
 FWPM_CONDITION_NEXTHOP_INTERFACE_INDEX = iid
 End Function
 Public Function FWPM_CONDITION_ORIGINAL_PROFILE_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H46ea1551, &H2255, &H492b, &H80, &H19, &Haa, &Hbe, &Hee, &H34, &H9f, &H40)
 FWPM_CONDITION_ORIGINAL_PROFILE_ID = iid
 End Function
 Public Function FWPM_CONDITION_CURRENT_PROFILE_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hab3033c9, &Hc0e3, &H4759, &H93, &H7d, &H57, &H58, &Hc6, &H5d, &H4a, &He3)
 FWPM_CONDITION_CURRENT_PROFILE_ID = iid
 End Function
 Public Function FWPM_CONDITION_LOCAL_INTERFACE_PROFILE_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4ebf7562, &H9f18, &H4d06, &H99, &H41, &Ha7, &Ha6, &H25, &H74, &H4d, &H71)
 FWPM_CONDITION_LOCAL_INTERFACE_PROFILE_ID = iid
 End Function
 Public Function FWPM_CONDITION_ARRIVAL_INTERFACE_PROFILE_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hcdfe6aab, &Hc083, &H4142, &H86, &H79, &Hc0, &H8f, &H95, &H32, &H9c, &H61)
 FWPM_CONDITION_ARRIVAL_INTERFACE_PROFILE_ID = iid
 End Function
 Public Function FWPM_CONDITION_NEXTHOP_INTERFACE_PROFILE_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hd7ff9a56, &Hcdaa, &H472b, &H84, &Hdb, &Hd2, &H39, &H63, &Hc1, &Hd1, &Hbf)
 FWPM_CONDITION_NEXTHOP_INTERFACE_PROFILE_ID = iid
 End Function
 Public Function FWPM_CONDITION_REAUTHORIZE_REASON() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H11205e8c, &H11ae, &H457a, &H8a, &H44, &H47, &H70, &H26, &Hdd, &H76, &H4a)
 FWPM_CONDITION_REAUTHORIZE_REASON = iid
 End Function
 Public Function FWPM_CONDITION_ORIGINAL_ICMP_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H076dfdbe, &Hc56c, &H4f72, &Hae, &H8a, &H2c, &Hfe, &H7e, &H5c, &H82, &H86)
 FWPM_CONDITION_ORIGINAL_ICMP_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_IP_PHYSICAL_ARRIVAL_INTERFACE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hda50d5c8, &Hfa0d, &H4c89, &Hb0, &H32, &H6e, &H62, &H13, &H6d, &H1e, &H96)
 FWPM_CONDITION_IP_PHYSICAL_ARRIVAL_INTERFACE = iid
 End Function
 Public Function FWPM_CONDITION_IP_PHYSICAL_NEXTHOP_INTERFACE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hf09bd5ce, &H5150, &H48be, &Hb0, &H98, &Hc2, &H51, &H52, &Hfb, &H1f, &H92)
 FWPM_CONDITION_IP_PHYSICAL_NEXTHOP_INTERFACE = iid
 End Function
 Public Function FWPM_CONDITION_INTERFACE_QUARANTINE_EPOCH() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hcce68d5e, &H053b, &H43a8, &H9a, &H6f, &H33, &H38, &H4c, &H28, &He4, &Hf6)
 FWPM_CONDITION_INTERFACE_QUARANTINE_EPOCH = iid
 End Function
 Public Function FWPM_CONDITION_INTERFACE_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hdaf8cd14, &He09e, &H4c93, &Ha5, &Hae, &Hc5, &Hc1, &H3b, &H73, &Hff, &Hca)
 FWPM_CONDITION_INTERFACE_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_LOCAL_INTERFACE_TYPE() As UUID
   FWPM_CONDITION_LOCAL_INTERFACE_TYPE = FWPM_CONDITION_INTERFACE_TYPE
 End Function
 Public Function FWPM_CONDITION_TUNNEL_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H77a40437, &H8779, &H4868, &Ha2, &H61, &Hf5, &Ha9, &H02, &Hf1, &Hc0, &Hcd)
 FWPM_CONDITION_TUNNEL_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_LOCAL_TUNNEL_TYPE() As UUID
  FWPM_CONDITION_LOCAL_TUNNEL_TYPE = FWPM_CONDITION_TUNNEL_TYPE
 End Function
 Public Function FWPM_CONDITION_IP_FORWARD_INTERFACE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1076b8a5, &H6323, &H4c5e, &H98, &H10, &He8, &Hd3, &Hfc, &H9e, &H61, &H36)
 FWPM_CONDITION_IP_FORWARD_INTERFACE = iid
 End Function
 Public Function FWPM_CONDITION_IP_PROTOCOL() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3971ef2b, &H623e, &H4f9a, &H8c, &Hb1, &H6e, &H79, &Hb8, &H06, &Hb9, &Ha7)
 FWPM_CONDITION_IP_PROTOCOL = iid
 End Function
 Public Function FWPM_CONDITION_IP_LOCAL_PORT() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0c1ba1af, &H5765, &H453f, &Haf, &H22, &Ha8, &Hf7, &H91, &Hac, &H77, &H5b)
 FWPM_CONDITION_IP_LOCAL_PORT = iid
 End Function
 Public Function FWPM_CONDITION_ICMP_TYPE() As UUID
  FWPM_CONDITION_ICMP_TYPE = FWPM_CONDITION_IP_LOCAL_PORT
 End Function
 Public Function FWPM_CONDITION_IP_REMOTE_PORT() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hc35a604d, &Hd22b, &H4e1a, &H91, &Hb4, &H68, &Hf6, &H74, &Hee, &H67, &H4b)
 FWPM_CONDITION_IP_REMOTE_PORT = iid
 End Function
 Public Function FWPM_CONDITION_ICMP_CODE() As UUID
  FWPM_CONDITION_ICMP_CODE = FWPM_CONDITION_IP_REMOTE_PORT
 End Function
 Public Function FWPM_CONDITION_EMBEDDED_LOCAL_ADDRESS_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4672a468, &H8a0a, &H4202, &Hab, &Hb4, &H84, &H9e, &H92, &He6, &H68, &H09)
 FWPM_CONDITION_EMBEDDED_LOCAL_ADDRESS_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_EMBEDDED_REMOTE_ADDRESS() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H77ee4b39, &H3273, &H4671, &Hb6, &H3b, &Hab, &H6f, &Heb, &H66, &Hee, &Hb6)
 FWPM_CONDITION_EMBEDDED_REMOTE_ADDRESS = iid
 End Function
 Public Function FWPM_CONDITION_EMBEDDED_PROTOCOL() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H07784107, &Ha29e, &H4c7b, &H9e, &Hc7, &H29, &Hc4, &H4a, &Hfa, &Hfd, &Hbc)
 FWPM_CONDITION_EMBEDDED_PROTOCOL = iid
 End Function
 Public Function FWPM_CONDITION_EMBEDDED_LOCAL_PORT() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hbfca394d, &Hacdb, &H484e, &Hb8, &He6, &H2a, &Hff, &H79, &H75, &H73, &H45)
 FWPM_CONDITION_EMBEDDED_LOCAL_PORT = iid
 End Function
 Public Function FWPM_CONDITION_EMBEDDED_REMOTE_PORT() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hcae4d6a1, &H2968, &H40ed, &Ha4, &Hce, &H54, &H71, &H60, &Hdd, &Ha8, &H8d)
 FWPM_CONDITION_EMBEDDED_REMOTE_PORT = iid
 End Function
 Public Function FWPM_CONDITION_FLAGS() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H632ce23b, &H5167, &H435c, &H86, &Hd7, &He9, &H03, &H68, &H4a, &Ha8, &H0c)
 FWPM_CONDITION_FLAGS = iid
 End Function
 Public Function FWPM_CONDITION_DIRECTION() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H8784c146, &Hca97, &H44d6, &H9f, &Hd1, &H19, &Hfb, &H18, &H40, &Hcb, &Hf7)
 FWPM_CONDITION_DIRECTION = iid
 End Function
 Public Function FWPM_CONDITION_INTERFACE_INDEX() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H667fd755, &Hd695, &H434a, &H8a, &Hf5, &Hd3, &H83, &H5a, &H12, &H59, &Hbc)
 FWPM_CONDITION_INTERFACE_INDEX = iid
 End Function
 Public Function FWPM_CONDITION_LOCAL_INTERFACE_INDEX() As UUID
  FWPM_CONDITION_LOCAL_INTERFACE_INDEX = FWPM_CONDITION_INTERFACE_INDEX
 End Function
 Public Function FWPM_CONDITION_SUB_INTERFACE_INDEX() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0cd42473, &Hd621, &H4be3, &Hae, &H8c, &H72, &Ha3, &H48, &Hd2, &H83, &He1)
 FWPM_CONDITION_SUB_INTERFACE_INDEX = iid
 End Function
 Public Function FWPM_CONDITION_ARRIVAL_SUB_INTERFACE_INDEX() As UUID
  FWPM_CONDITION_ARRIVAL_SUB_INTERFACE_INDEX = FWPM_CONDITION_SUB_INTERFACE_INDEX
 End Function
 Public Function FWPM_CONDITION_SOURCE_INTERFACE_INDEX() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2311334d, &Hc92d, &H45bf, &H94, &H96, &Hed, &Hf4, &H47, &H82, &H0e, &H2d)
 FWPM_CONDITION_SOURCE_INTERFACE_INDEX = iid
 End Function
 Public Function FWPM_CONDITION_SOURCE_SUB_INTERFACE_INDEX() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H055edd9d, &Hacd2, &H4361, &H8d, &Hab, &Hf9, &H52, &H5d, &H97, &H66, &H2f)
 FWPM_CONDITION_SOURCE_SUB_INTERFACE_INDEX = iid
 End Function
 Public Function FWPM_CONDITION_DESTINATION_INTERFACE_INDEX() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H35cf6522, &H4139, &H45ee, &Ha0, &Hd5, &H67, &Hb8, &H09, &H49, &Hd8, &H79)
 FWPM_CONDITION_DESTINATION_INTERFACE_INDEX = iid
 End Function
 Public Function FWPM_CONDITION_DESTINATION_SUB_INTERFACE_INDEX() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2b7d4399, &Hd4c7, &H4738, &Ha2, &Hf5, &He9, &H94, &Hb4, &H3d, &Ha3, &H88)
 FWPM_CONDITION_DESTINATION_SUB_INTERFACE_INDEX = iid
 End Function
 Public Function FWPM_CONDITION_ALE_APP_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hd78e1e87, &H8644, &H4ea5, &H94, &H37, &Hd8, &H09, &Hec, &Hef, &Hc9, &H71)
 FWPM_CONDITION_ALE_APP_ID = iid
 End Function
 Public Function FWPM_CONDITION_ALE_ORIGINAL_APP_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0e6cd086, &He1fb, &H4212, &H84, &H2f, &H8a, &H9f, &H99, &H3f, &Hb3, &Hf6)
 FWPM_CONDITION_ALE_ORIGINAL_APP_ID = iid
 End Function
 Public Function FWPM_CONDITION_ALE_USER_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Haf043a0a, &Hb34d, &H4f86, &H97, &H9c, &Hc9, &H03, &H71, &Haf, &H6e, &H66)
 FWPM_CONDITION_ALE_USER_ID = iid
 End Function
 Public Function FWPM_CONDITION_ALE_REMOTE_USER_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hf63073b7, &H0189, &H4ab0, &H95, &Ha4, &H61, &H23, &Hcb, &Hfa, &Hb8, &H62)
 FWPM_CONDITION_ALE_REMOTE_USER_ID = iid
 End Function
 Public Function FWPM_CONDITION_ALE_REMOTE_MACHINE_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1aa47f51, &H7f93, &H4508, &Ha2, &H71, &H81, &Hab, &Hb0, &H0c, &H9c, &Hab)
 FWPM_CONDITION_ALE_REMOTE_MACHINE_ID = iid
 End Function
 Public Function FWPM_CONDITION_ALE_PROMISCUOUS_MODE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1c974776, &H7182, &H46e9, &Haf, &Hd3, &Hb0, &H29, &H10, &He3, &H03, &H34)
 FWPM_CONDITION_ALE_PROMISCUOUS_MODE = iid
 End Function
 Public Function FWPM_CONDITION_ALE_SIO_FIREWALL_SYSTEM_PORT() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb9f4e088, &Hcb98, &H4efb, &Ha2, &Hc7, &Had, &H07, &H33, &H26, &H43, &Hdb)
 FWPM_CONDITION_ALE_SIO_FIREWALL_SYSTEM_PORT = iid
 End Function
 Public Function FWPM_CONDITION_ALE_SIO_FIREWALL_SOCKET_PROPERTY() As UUID
  FWPM_CONDITION_ALE_SIO_FIREWALL_SOCKET_PROPERTY = FWPM_CONDITION_ALE_SIO_FIREWALL_SYSTEM_PORT
 End Function
 Public Function FWPM_CONDITION_ALE_REAUTH_REASON() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb482d227, &H1979, &H4a98, &H80, &H44, &H18, &Hbb, &He6, &H23, &H75, &H42)
 FWPM_CONDITION_ALE_REAUTH_REASON = iid
 End Function
 Public Function FWPM_CONDITION_ALE_NAP_CONTEXT() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H46275a9d, &Hc03f, &H4d77, &Hb7, &H84, &H1c, &H57, &Hf4, &Hd0, &H27, &H53)
 FWPM_CONDITION_ALE_NAP_CONTEXT = iid
 End Function
 Public Function FWPM_CONDITION_KM_AUTH_NAP_CONTEXT() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H35d0ea0e, &H15ca, &H492b, &H90, &H0e, &H97, &Hfd, &H46, &H35, &H2c, &Hce)
 FWPM_CONDITION_KM_AUTH_NAP_CONTEXT = iid
 End Function
 Public Function FWPM_CONDITION_REMOTE_USER_TOKEN() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9bf0ee66, &H06c9, &H41b9, &H84, &Hda, &H28, &H8c, &Hb4, &H3a, &Hf5, &H1f)
  FWPM_CONDITION_REMOTE_USER_TOKEN = iid
 End Function
 Public Function FWPM_CONDITION_RPC_IF_UUID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7c9c7d9f, &H0075, &H4d35, &Ha0, &Hd1, &H83, &H11, &Hc4, &Hcf, &H6a, &Hf1)
 FWPM_CONDITION_RPC_IF_UUID = iid
 End Function
 Public Function FWPM_CONDITION_RPC_IF_VERSION() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Heabfd9b7, &H1262, &H4a2e, &Had, &Haa, &H5f, &H96, &Hf6, &Hfe, &H32, &H6d)
 FWPM_CONDITION_RPC_IF_VERSION = iid
 End Function
 Public Function FWPM_CONDITION_RPC_IF_FLAG() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H238a8a32, &H3199, &H467d, &H87, &H1c, &H27, &H26, &H21, &Hab, &H38, &H96)
  FWPM_CONDITION_RPC_IF_FLAG = iid
 End Function
 Public Function FWPM_CONDITION_DCOM_APP_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hff2e7b4d, &H3112, &H4770, &Hb6, &H36, &H4d, &H24, &Hae, &H3a, &H6a, &Hf2)
  FWPM_CONDITION_DCOM_APP_ID = iid
 End Function
 Public Function FWPM_CONDITION_IMAGE_NAME() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hd024de4d, &Hdeaa, &H4317, &H9c, &H85, &He4, &H0e, &Hf6, &He1, &H40, &Hc3)
  FWPM_CONDITION_IMAGE_NAME = iid
 End Function
 Public Function FWPM_CONDITION_RPC_PROTOCOL() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2717bc74, &H3a35, &H4ce7, &Hb7, &Hef, &Hc8, &H38, &Hfa, &Hbd, &Hec, &H45)
  FWPM_CONDITION_RPC_PROTOCOL = iid
 End Function
 Public Function FWPM_CONDITION_RPC_AUTH_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hdaba74ab, &H0d67, &H43e7, &H98, &H6e, &H75, &Hb8, &H4f, &H82, &Hf5, &H94)
 FWPM_CONDITION_RPC_AUTH_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_RPC_AUTH_LEVEL() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &He5a0aed5, &H59ac, &H46ea, &Hbe, &H05, &Ha5, &Hf0, &H5e, &Hcf, &H44, &H6e)
 FWPM_CONDITION_RPC_AUTH_LEVEL = iid
 End Function
 Public Function FWPM_CONDITION_SEC_ENCRYPT_ALGORITHM() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0d306ef0, &He974, &H4f74, &Hb5, &Hc7, &H59, &H1b, &H0d, &Ha7, &Hd5, &H62)
 FWPM_CONDITION_SEC_ENCRYPT_ALGORITHM = iid
 End Function
 Public Function FWPM_CONDITION_SEC_KEY_SIZE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4772183b, &Hccf8, &H4aeb, &Hbc, &He1, &Hc6, &Hc6, &H16, &H1c, &H8f, &He4)
  FWPM_CONDITION_SEC_KEY_SIZE = iid
 End Function
 Public Function FWPM_CONDITION_IP_LOCAL_ADDRESS_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H03a629cb, &H6e52, &H49f8, &H9c, &H41, &H57, &H09, &H63, &H3c, &H09, &Hcf)
 FWPM_CONDITION_IP_LOCAL_ADDRESS_V4 = iid
 End Function
 Public Function FWPM_CONDITION_IP_LOCAL_ADDRESS_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2381be84, &H7524, &H45b3, &Ha0, &H5b, &H1e, &H63, &H7d, &H9c, &H7a, &H6a)
 FWPM_CONDITION_IP_LOCAL_ADDRESS_V6 = iid
 End Function
 Public Function FWPM_CONDITION_PIPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1bd0741d, &He3df, &H4e24, &H86, &H34, &H76, &H20, &H46, &Hee, &Hf6, &Heb)
  FWPM_CONDITION_PIPE = iid
 End Function
 Public Function FWPM_CONDITION_IP_REMOTE_ADDRESS_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1febb610, &H3bcc, &H45e1, &Hbc, &H36, &H2e, &H06, &H7e, &H2c, &Hb1, &H86)
 FWPM_CONDITION_IP_REMOTE_ADDRESS_V4 = iid
 End Function
 Public Function FWPM_CONDITION_IP_REMOTE_ADDRESS_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H246e1d8c, &H8bee, &H4018, &H9b, &H98, &H31, &Hd4, &H58, &H2f, &H33, &H61)
 FWPM_CONDITION_IP_REMOTE_ADDRESS_V6 = iid
 End Function
 Public Function FWPM_CONDITION_RPC_OPNUM() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hd58efb76, CInt(&Haab7), CInt(&H4148), &Ha8, &H7e, &H95, &H81, &H13, &H41, &H29, &Hb9)
  FWPM_CONDITION_RPC_OPNUM = iid
 End Function
 Public Function FWPM_CONDITION_PROCESS_WITH_RPC_IF_UUID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &He31180a8, &Hbbbd, &H4d14, &Ha6, &H5e, &H71, &H57, &Hb0, &H62, &H33, &Hbb)
  FWPM_CONDITION_PROCESS_WITH_RPC_IF_UUID = iid
 End Function
 Public Function FWPM_CONDITION_RPC_EP_VALUE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hdccea0b9, &H0886, &H4360, &H9c, &H6a, &Hab, &H04, &H3a, &H24, &Hfb, &Ha9)
  FWPM_CONDITION_RPC_EP_VALUE = iid
 End Function
 Public Function FWPM_CONDITION_RPC_EP_FLAGS() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H218b814a, &H0a39, &H49b8, &H8e, &H71, &Hc2, &H0c, &H39, &Hc7, &Hdd, &H2e)
  FWPM_CONDITION_RPC_EP_FLAGS = iid
 End Function
 Public Function FWPM_CONDITION_CLIENT_TOKEN() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hc228fc1e, &H403a, &H4478, &Hbe, &H05, &Hc9, &Hba, &Ha4, &Hc0, &H5a, &Hce)
  FWPM_CONDITION_CLIENT_TOKEN = iid
 End Function
 Public Function FWPM_CONDITION_RPC_SERVER_NAME() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb605a225, &Hc3b3, &H48c7, &H98, &H33, &H7a, &Hef, &Ha9, &H52, &H75, &H46)
  FWPM_CONDITION_RPC_SERVER_NAME = iid
 End Function
 Public Function FWPM_CONDITION_RPC_SERVER_PORT() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H8090f645, &H9ad5, &H4e3b, &H9f, &H9f, &H80, &H23, &Hca, &H09, &H79, &H09)
  FWPM_CONDITION_RPC_SERVER_PORT = iid
 End Function
 Public Function FWPM_CONDITION_RPC_PROXY_AUTH_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H40953fe2, &H8565, &H4759, &H84, &H88, &H17, &H71, &Hb4, &Hb4, &Hb5, &Hdb)
  FWPM_CONDITION_RPC_PROXY_AUTH_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_CLIENT_CERT_KEY_LENGTH() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Ha3ec00c7, &H05f4, &H4df7, &H91, &Hf2, &H5f, &H60, &Hd9, &H1f, &Hf4, &H43)
  FWPM_CONDITION_CLIENT_CERT_KEY_LENGTH = iid
 End Function
 Public Function FWPM_CONDITION_CLIENT_CERT_OID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hc491ad5e, &Hf882, &H4283, &Hb9, &H16, &H43, &H6b, &H10, &H3f, &Hf4, &Had)
  FWPM_CONDITION_CLIENT_CERT_OID = iid
 End Function
 Public Function FWPM_CONDITION_NET_EVENT_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H206e9996, &H490e, &H40cf, &Hb8, &H31, &Hb3, &H86, &H41, &Heb, &H6f, &Hcb)
 FWPM_CONDITION_NET_EVENT_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_PEER_NAME() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9b539082, &Heb90, &H4186, &Ha6, &Hcc, &Hde, &H5b, &H63, &H23, &H50, &H16)
 FWPM_CONDITION_PEER_NAME = iid
 End Function
 Public Function FWPM_CONDITION_REMOTE_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hf68166fd, &H0682, &H4c89, &Hb8, &Hf5, &H86, &H43, &H6c, &H7e, &Hf9, &Hb7)
 FWPM_CONDITION_REMOTE_ID = iid
 End Function
 Public Function FWPM_CONDITION_AUTHENTICATION_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Heb458cd5, &Hda7b, &H4ef9, &H8d, &H43, &H7b, &H0a, &H84, &H03, &H32, &Hf2)
 FWPM_CONDITION_AUTHENTICATION_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_KM_TYPE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hff0f5f49, &H0ceb, &H481b, &H86, &H38, &H14, &H79, &H79, &H1f, &H3f, &H2c)
 FWPM_CONDITION_KM_TYPE = iid
 End Function
 Public Function FWPM_CONDITION_KM_MODE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hfeef4582, &Hef8f, &H4f7b, &H85, &H8b, &H90, &H77, &Hd1, &H22, &Hde, &H47)
 FWPM_CONDITION_KM_MODE = iid
 End Function
 Public Function FWPM_CONDITION_IPSEC_POLICY_KEY() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Had37dee3, &H722f, &H45cc, &Ha4, &He3, &H06, &H80, &H48, &H12, &H44, &H52)
 FWPM_CONDITION_IPSEC_POLICY_KEY = iid
 End Function
 Public Function FWPM_CONDITION_QM_MODE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hf64fc6d1, &Hf9cb, &H43d2, &H8a, &H5f, &He1, &H3b, &Hc8, &H94, &Hf2, &H65)
 FWPM_CONDITION_QM_MODE = iid
 End Function
 Public Function FWPM_CONDITION_COMPARTMENT_ID() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H35a791ab, &H4ac, &H4ff2, &Ha6, &Hbb, &Hda, &H6c, &Hfa, &Hc7, &H18, &H6)
  FWPM_CONDITION_COMPARTMENT_ID = iid
 End Function
 Public Function FWPM_CONDITION_RESERVED0() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H678f4deb, &H45af, &H4882, &H93, &Hfe, &H19, &Hd4, &H72, &H9d, &H98, &H34)
 FWPM_CONDITION_RESERVED0 = iid
 End Function
 Public Function FWPM_CONDITION_RESERVED1() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hd818f827, &H5c69, &H48eb, &Hbf, &H80, &Hd8, &H6b, &H17, &H75, &H5f, &H97)
 FWPM_CONDITION_RESERVED1 = iid
 End Function
 Public Function FWPM_CONDITION_RESERVED2() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H53d4123d, &He15b, &H4e84, &Hb7, &Ha8, &Hdc, &He1, &H6f, &H7b, &H62, &Hd9)
 FWPM_CONDITION_RESERVED2 = iid
 End Function
 Public Function FWPM_CONDITION_RESERVED3() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7f6e8ca3, &H6606, &H4932, &H97, &Hc7, &He1, &Hf2, &H07, &H10, &Haf, &H3b)
 FWPM_CONDITION_RESERVED3 = iid
 End Function
 Public Function FWPM_CONDITION_RESERVED4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H5f58e642, &Hb937, &H495e, &Ha9, &H4b, &Hf6, &Hb0, &H51, &Ha4, &H92, &H50)
 FWPM_CONDITION_RESERVED4 = iid
 End Function
 Public Function FWPM_CONDITION_RESERVED5() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9ba8f6cd, &Hf77c, &H43e6, &H88, &H47, &H11, &H93, &H9d, &Hc5, &Hdb, &H5a)
 FWPM_CONDITION_RESERVED5 = iid
 End Function
 Public Function FWPM_CONDITION_RESERVED6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hf13d84bd, &H59d5, &H44c4, &H88, &H17, &H5e, &Hcd, &Hae, &H18, &H05, &Hbd)
  FWPM_CONDITION_RESERVED6 = iid
 End Function
 Public Function FWPM_CONDITION_RESERVED7() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H65a0f930, &H45dd, &H4983, &Haa, &H33, &Hef, &Hc7, &Hb6, &H11, &Haf, &H08)
  FWPM_CONDITION_RESERVED7 = iid
 End Function
 Public Function FWPM_CONDITION_RESERVED8() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4f424974, &H0c12, &H4816, &H9b, &H47, &H9a, &H54, &H7d, &Hb3, &H9a, &H32)
  FWPM_CONDITION_RESERVED8 = iid
 End Function
 Public Function FWPM_CONDITION_RESERVED9() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hce78e10f, &H13ff, &H4c70, &H86, &H43, &H36, &Had, &H18, &H79, &Haf, &Ha3)
  FWPM_CONDITION_RESERVED9 = iid
 End Function
 Public Function FWPM_CONDITION_RESERVED10() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb979e282, &Hd621, &H4c8c, &Hb1, &H84, &Hb1, &H05, &Ha6, &H1c, &H36, &Hce)
  FWPM_CONDITION_RESERVED10 = iid
 End Function
 Public Function FWPM_CONDITION_RESERVED11() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2d62ee4d, &H023d, &H411f, &H95, &H82, &H43, &Hac, &Hbb, &H79, &H59, &H75)
  FWPM_CONDITION_RESERVED11 = iid
 End Function
 Public Function FWPM_CONDITION_RESERVED12() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Ha3677c32, &H7e35, &H4ddc, &H93, &Hda, &He8, &Hc3, &H3f, &Hc9, &H23, &Hc7)
  FWPM_CONDITION_RESERVED12 = iid
 End Function
 Public Function FWPM_CONDITION_RESERVED13() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H335a3e90, &H84aa, &H42f5, &H9e, &H6f, &H59, &H30, &H95, &H36, &Ha4, &H4c)
  FWPM_CONDITION_RESERVED13 = iid
 End Function
 Public Function FWPM_CONDITION_RESERVED14() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H30e44da2, &H2f1a, &H4116, &Ha5, &H59, &Hf9, &H07, &Hde, &H83, &H60, &H4a)
  FWPM_CONDITION_RESERVED14 = iid
 End Function
 Public Function FWPM_CONDITION_RESERVED15() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hbab8340f, &Hafe0, &H43d1, &H80, &Hd8, &H5c, &Ha4, &H56, &H96, &H2d, &He3)
  FWPM_CONDITION_RESERVED15 = iid
 End Function
 Public Function FWPM_PROVIDER_IKEEXT() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H10ad9216, &Hccde, &H456c, &H8b, &H16, &He9, &Hf0, &H4e, &H60, &Ha9, &H0b)
 FWPM_PROVIDER_IKEEXT = iid
 End Function
 Public Function FWPM_PROVIDER_IPSEC_DOSP_CONFIG() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3c6c05a9, &Hc05c, &H4bb9, &H83, &H38, &H23, &H27, &H81, &H4c, &He8, &Hbf)
 FWPM_PROVIDER_IPSEC_DOSP_CONFIG = iid
 End Function
 Public Function FWPM_PROVIDER_TCP_CHIMNEY_OFFLOAD() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H896aa19e, &H9a34, &H4bcb, &Hae, &H79, &Hbe, &Hb9, &H12, &H7c, &H84, &Hb9)
 FWPM_PROVIDER_TCP_CHIMNEY_OFFLOAD = iid
 End Function
 Public Function FWPM_PROVIDER_TCP_TEMPLATES() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H76cfcd30, &H3394, &H432d, &Hbe, &Hd3, &H44, &H1a, &He5, &H0e, &H63, &Hc3)
 FWPM_PROVIDER_TCP_TEMPLATES = iid
 End Function
 Public Function FWPM_PROVIDER_MPSSVC_WSH() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4b153735, &H1049, &H4480, &Haa, &Hb4, &Hd1, &Hb9, &Hbd, &Hc0, &H37, &H10)
 FWPM_PROVIDER_MPSSVC_WSH = iid
 End Function
 Public Function FWPM_PROVIDER_MPSSVC_WF() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hdecc16ca, &H3f33, &H4346, &Hbe, &H1e, &H8f, &Hb4, &Hae, &H0f, &H3d, &H62)
 FWPM_PROVIDER_MPSSVC_WF = iid
 End Function
 Public Function FWPM_PROVIDER_MPSSVC_EDP() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Ha90296f7, &H46b8, &H4457, &H8f, &H84, &Hb0, &H5e, &H05, &Hd3, &Hc6, &H22)
 FWPM_PROVIDER_MPSSVC_EDP = iid
 End Function
 Public Function FWPM_PROVIDER_MPSSVC_TENANT_RESTRICTIONS() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hd0718ff9, &H44da, &H4f50, &H9d, &Hc2, &Hc9, &H63, &Ha4, &H24, &H76, &H13)
 FWPM_PROVIDER_MPSSVC_TENANT_RESTRICTIONS = iid
 End Function
 Public Function FWPM_PROVIDER_MPSSVC_APP_ISOLATION() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3cc2631f, &H2d5d, &H43a0, &Hb1, &H74, &H61, &H48, &H37, &Hd8, &H63, &Ha1)
 FWPM_PROVIDER_MPSSVC_APP_ISOLATION = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_INBOUND_TRANSPORT_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H5132900d, &H5e84, &H4b5f, &H80, &He4, &H01, &H74, &H1e, &H81, &Hff, &H10)
 FWPM_CALLOUT_IPSEC_INBOUND_TRANSPORT_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_INBOUND_TRANSPORT_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H49d3ac92, &H2a6c, &H4dcf, &H95, &H5f, &H1c, &H3b, &He0, &H09, &Hdd, &H99)
 FWPM_CALLOUT_IPSEC_INBOUND_TRANSPORT_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_OUTBOUND_TRANSPORT_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4b46bf0a, &H4523, &H4e57, &Haa, &H38, &Ha8, &H79, &H87, &Hc9, &H10, &Hd9)
 FWPM_CALLOUT_IPSEC_OUTBOUND_TRANSPORT_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_OUTBOUND_TRANSPORT_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H38d87722, &Had83, &H4f11, &Ha9, &H1f, &Hdf, &H0f, &Hb0, &H77, &H22, &H5b)
 FWPM_CALLOUT_IPSEC_OUTBOUND_TRANSPORT_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H191a8a46, &H0bf8, &H46cf, &Hb0, &H45, &H4b, &H45, &Hdf, &Ha6, &Ha3, &H24)
 FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H80c342e3, &H1e53, &H4d6f, &H9b, &H44, &H03, &Hdf, &H5a, &Hee, &He1, &H54)
 FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_OUTBOUND_TUNNEL_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H70a4196c, &H835b, &H4fb0, &H98, &He8, &H07, &H5f, &H4d, &H97, &H7d, &H46)
 FWPM_CALLOUT_IPSEC_OUTBOUND_TUNNEL_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_OUTBOUND_TUNNEL_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hf1835363, &Ha6a5, &H4e62, &Hb1, &H80, &H23, &Hdb, &H78, &H9d, &H8d, &Ha6)
 FWPM_CALLOUT_IPSEC_OUTBOUND_TUNNEL_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_FORWARD_INBOUND_TUNNEL_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H28829633, &Hc4f0, &H4e66, &H87, &H3f, &H84, &H4d, &Hb2, &Ha8, &H99, &Hc7)
 FWPM_CALLOUT_IPSEC_FORWARD_INBOUND_TUNNEL_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_FORWARD_INBOUND_TUNNEL_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Haf50bec2, &Hc686, &H429a, &H88, &H4d, &Hb7, &H44, &H43, &He7, &Hb0, &Hb4)
 FWPM_CALLOUT_IPSEC_FORWARD_INBOUND_TUNNEL_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_FORWARD_OUTBOUND_TUNNEL_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hfb532136, &H15cb, &H440b, &H93, &H7c, &H17, &H17, &Hca, &H32, &H0c, &H40)
 FWPM_CALLOUT_IPSEC_FORWARD_OUTBOUND_TUNNEL_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_FORWARD_OUTBOUND_TUNNEL_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hdae640cc, &He021, &H4bee, &H9e, &Hb6, &Ha4, &H8b, &H27, &H5c, &H8c, &H1d)
 FWPM_CALLOUT_IPSEC_FORWARD_OUTBOUND_TUNNEL_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_INBOUND_INITIATE_SECURE_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7dff309b, &Hba7d, &H4aba, &H91, &Haa, &Hae, &H5c, &H66, &H40, &Hc9, &H44)
 FWPM_CALLOUT_IPSEC_INBOUND_INITIATE_SECURE_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_INBOUND_INITIATE_SECURE_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Ha9a0d6d9, &Hc58c, &H474e, &H8a, &Heb, &H3c, &Hfe, &H99, &Hd6, &Hd5, &H3d)
 FWPM_CALLOUT_IPSEC_INBOUND_INITIATE_SECURE_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_ALE_ACCEPT_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3df6e7de, &Hfd20, &H48f2, &H9f, &H26, &Hf8, &H54, &H44, &H4c, &Hba, &H79)
 FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_ALE_ACCEPT_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_ALE_ACCEPT_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Ha1e392d3, &H72ac, &H47bb, &H87, &Ha7, &H01, &H22, &Hc6, &H94, &H34, &Hab)
 FWPM_CALLOUT_IPSEC_INBOUND_TUNNEL_ALE_ACCEPT_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_ALE_CONNECT_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6ac141fc, &Hf75d, &H4203, &Hb9, &Hc8, &H48, &He6, &H14, &H9c, &H27, &H12)
 FWPM_CALLOUT_IPSEC_ALE_CONNECT_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_ALE_CONNECT_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4c0dda05, &He31f, &H4666, &H90, &Hb0, &Hb3, &Hdf, &Had, &H34, &H12, &H9a)
 FWPM_CALLOUT_IPSEC_ALE_CONNECT_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_DOSP_FORWARD_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6d08a342, &Hdb9e, &H4fbe, &H9e, &Hd2, &H57, &H37, &H4c, &He8, &H9f, &H79)
 FWPM_CALLOUT_IPSEC_DOSP_FORWARD_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_IPSEC_DOSP_FORWARD_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2fcb56ec, &Hcd37, &H4b4f, &Hb1, &H08, &H62, &Hc2, &Hb1, &H85, &H0a, &H0c)
 FWPM_CALLOUT_IPSEC_DOSP_FORWARD_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_WFP_TRANSPORT_LAYER_V4_SILENT_DROP() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Heda08606, &H2494, &H4d78, &H89, &Hbc, &H67, &H83, &H7c, &H03, &Hb9, &H69)
 FWPM_CALLOUT_WFP_TRANSPORT_LAYER_V4_SILENT_DROP = iid
 End Function
 Public Function FWPM_CALLOUT_WFP_TRANSPORT_LAYER_V6_SILENT_DROP() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H8693cc74, &Ha075, &H4156, &Hb4, &H76, &H92, &H86, &Hee, &Hce, &H81, &H4e)
 FWPM_CALLOUT_WFP_TRANSPORT_LAYER_V6_SILENT_DROP = iid
 End Function
 Public Function FWPM_CALLOUT_TCP_CHIMNEY_CONNECT_LAYER_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hf3e10ab3, &H2c25, &H4279, &Hac, &H36, &Hc3, &H0f, &Hc1, &H81, &Hbe, &Hc4)
 FWPM_CALLOUT_TCP_CHIMNEY_CONNECT_LAYER_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_TCP_CHIMNEY_CONNECT_LAYER_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H39e22085, &Ha341, &H42fc, &Ha2, &H79, &Hae, &Hc9, &H4e, &H68, &H9c, &H56)
 FWPM_CALLOUT_TCP_CHIMNEY_CONNECT_LAYER_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_TCP_CHIMNEY_ACCEPT_LAYER_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &He183ecb2, &H3a7f, &H4b54, &H8a, &Hd9, &H76, &H05, &H0e, &Hd8, &H80, &Hca)
 FWPM_CALLOUT_TCP_CHIMNEY_ACCEPT_LAYER_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_TCP_CHIMNEY_ACCEPT_LAYER_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0378cf41, &Hbf98, &H4603, &H81, &Hf2, &H7f, &H12, &H58, &H60, &H79, &Hf6)
 FWPM_CALLOUT_TCP_CHIMNEY_ACCEPT_LAYER_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_SET_OPTIONS_AUTH_CONNECT_LAYER_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hbc582280, &H1677, &H41e9, &H94, &Hab, &Hc2, &Hfc, &Hb1, &H5c, &H2e, &Heb)
 FWPM_CALLOUT_SET_OPTIONS_AUTH_CONNECT_LAYER_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_SET_OPTIONS_AUTH_CONNECT_LAYER_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H98e5373c, &Hb884, &H490f, &Hb6, &H5f, &H2f, &H6a, &H4a, &H57, &H51, &H95)
 FWPM_CALLOUT_SET_OPTIONS_AUTH_CONNECT_LAYER_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_SET_OPTIONS_AUTH_RECV_ACCEPT_LAYER_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2d55f008, &H0c01, &H4f92, &Hb2, &H6e, &Ha0, &H8a, &H94, &H56, &H9b, &H8d)
 FWPM_CALLOUT_SET_OPTIONS_AUTH_RECV_ACCEPT_LAYER_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_SET_OPTIONS_AUTH_RECV_ACCEPT_LAYER_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H63018537, &Hf281, &H4dc4, &H83, &Hd3, &H8d, &Hec, &H18, &Hb7, &Had, &He2)
 FWPM_CALLOUT_SET_OPTIONS_AUTH_RECV_ACCEPT_LAYER_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_RESERVED_AUTH_CONNECT_LAYER_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H288b524d, &H566, &H4e19, &Hb6, &H12, &H8f, &H44, &H1a, &H2e, &H59, &H49)
 FWPM_CALLOUT_RESERVED_AUTH_CONNECT_LAYER_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_RESERVED_AUTH_CONNECT_LAYER_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb84b92, &H2b5e, &H4b71, &Hab, &He, &Haa, &Hca, &H43, &He3, &H87, &He6)
 FWPM_CALLOUT_RESERVED_AUTH_CONNECT_LAYER_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_TEREDO_ALE_RESOURCE_ASSIGNMENT_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H31b95392, &H066e, &H42a2, &Hb7, &Hdb, &H92, &Hf8, &Hac, &Hdd, &H56, &Hf9)
 FWPM_CALLOUT_TEREDO_ALE_RESOURCE_ASSIGNMENT_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_EDGE_TRAVERSAL_ALE_RESOURCE_ASSIGNMENT_V6() As UUID
  FWPM_CALLOUT_EDGE_TRAVERSAL_ALE_RESOURCE_ASSIGNMENT_V6 = FWPM_CALLOUT_TEREDO_ALE_RESOURCE_ASSIGNMENT_V6
 End Function
 Public Function FWPM_CALLOUT_EDGE_TRAVERSAL_ALE_RESOURCE_ASSIGNMENT_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H079b1010, &Hf1c5, &H4fcd, &Hae, &H05, &Hda, &H41, &H10, &H7a, &Hbd, &H0b)
  FWPM_CALLOUT_EDGE_TRAVERSAL_ALE_RESOURCE_ASSIGNMENT_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_TEREDO_ALE_LISTEN_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H81a434e7, &Hf60c, &H4378, &Hba, &Hb8, &Hc6, &H25, &Ha3, &H0f, &H01, &H97)
 FWPM_CALLOUT_TEREDO_ALE_LISTEN_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_EDGE_TRAVERSAL_ALE_LISTEN_V6() As UUID
  FWPM_CALLOUT_EDGE_TRAVERSAL_ALE_LISTEN_V6 = FWPM_CALLOUT_TEREDO_ALE_LISTEN_V6
 End Function
 Public Function FWPM_CALLOUT_EDGE_TRAVERSAL_ALE_LISTEN_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H33486ab5, &H6d5e, &H4e65, &Ha0, &H0b, &Ha7, &Haf, &Hed, &H0b, &Ha9, &Ha1)
  FWPM_CALLOUT_EDGE_TRAVERSAL_ALE_LISTEN_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_TCP_TEMPLATES_CONNECT_LAYER_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H215a0b39, &H4b7e, &H4eda, &H8c, &He4, &H17, &H96, &H79, &Hdf, &H62, &H24)
 FWPM_CALLOUT_TCP_TEMPLATES_CONNECT_LAYER_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_TCP_TEMPLATES_CONNECT_LAYER_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H838b37a1, &H5c12, &H4d34, &H8b, &H38, &H07, &H87, &H28, &Hb2, &Hd2, &H5c)
 FWPM_CALLOUT_TCP_TEMPLATES_CONNECT_LAYER_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_TCP_TEMPLATES_ACCEPT_LAYER_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2f23f5d0, &H40c4, &H4c41, &Ha2, &H54, &H46, &Hd8, &Hdb, &Ha8, &H95, &H7c)
 FWPM_CALLOUT_TCP_TEMPLATES_ACCEPT_LAYER_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_TCP_TEMPLATES_ACCEPT_LAYER_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb25152f0, &H991c, &H4f53, &Hbb, &He7, &Hd2, &H4b, &H45, &Hfe, &H63, &H2c)
 FWPM_CALLOUT_TCP_TEMPLATES_ACCEPT_LAYER_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_CONNECT_LAYER_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H5fbfc31d, &Ha51c, &H44dc, &Hac, &Hb6, &H6, &H24, &Ha0, &H30, &Ha7, &H00)
  FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_CONNECT_LAYER_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_CONNECT_LAYER_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H5fbfc31d, &Ha51c, &H44dc, &Hac, &Hb6, &H6, &H24, &Ha0, &H30, &Ha7, &H01)
  FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_CONNECT_LAYER_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_RECV_ACCEPT_LAYER_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H5fbfc31d, &Ha51c, &H44dc, &Hac, &Hb6, &H6, &H24, &Ha0, &H30, &Ha7, &H02)
  FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_RECV_ACCEPT_LAYER_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_RECV_ACCEPT_LAYER_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H5fbfc31d, &Ha51c, &H44dc, &Hac, &Hb6, &H6, &H24, &Ha0, &H30, &Ha7, &H03)
  FWPM_CALLOUT_POLICY_SILENT_MODE_AUTH_RECV_ACCEPT_LAYER_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_HTTP_TEMPLATE_SSL_HANDSHAKE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb3423249, &H8d09, &H4858, &H92, &H10, &H95, &Hc7, &Hfd, &Ha8, &He3, &H0f)
  FWPM_CALLOUT_HTTP_TEMPLATE_SSL_HANDSHAKE = iid
 End Function
 Public Function FWPM_CALLOUT_OUTBOUND_NETWORK_CONNECTION_POLICY_LAYER_V4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H103090d4, &H8e28, &H4fd6, &H98, &H94, &Hd1, &Hd6, &H7d, &H6b, &H10, &Hc9)
  FWPM_CALLOUT_OUTBOUND_NETWORK_CONNECTION_POLICY_LAYER_V4 = iid
 End Function
 Public Function FWPM_CALLOUT_OUTBOUND_NETWORK_CONNECTION_POLICY_LAYER_V6() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4ed3446d, &H8dc7, &H459b, &Hb0, &H9f, &Hc1, &Hcb, &H7a, &H8f, &H86, &H89)
  FWPM_CALLOUT_OUTBOUND_NETWORK_CONNECTION_POLICY_LAYER_V6 = iid
 End Function
 Public Function FWPM_CALLOUT_BUILT_IN_RESERVED_1() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H779719a4, &He695, &H47b6, &Ha1, &H99, &H79, &H99, &Hfe, &Hc9, &H16, &H3b)
 FWPM_CALLOUT_BUILT_IN_RESERVED_1 = iid
 End Function
 Public Function FWPM_CALLOUT_BUILT_IN_RESERVED_2() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hef9661b6, &H7c5e, &H48fd, &Ha1, &H30, &H96, &H67, &H8c, &Hea, &Hcc, &H41)
 FWPM_CALLOUT_BUILT_IN_RESERVED_2 = iid
 End Function
 Public Function FWPM_CALLOUT_BUILT_IN_RESERVED_3() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H18729c7a, &H2f62, &H4be0, &H96, &H6f, &H97, &H4b, &H21, &Hb8, &H6d, &Hf1)
 FWPM_CALLOUT_BUILT_IN_RESERVED_3 = iid
 End Function
 Public Function FWPM_CALLOUT_BUILT_IN_RESERVED_4() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6c3fb801, &Hdaff, &H40e9, &H91, &He6, &Hf7, &Hff, &H7e, &H52, &Hf7, &Hd9)
 FWPM_CALLOUT_BUILT_IN_RESERVED_4 = iid
 End Function
 Public Function FWPM_PROVIDER_CONTEXT_SECURE_SOCKET_AUTHIP() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb25ea800, &H0d02, &H46ed, &H92, &Hbd, &H7f, &Ha8, &H4b, &Hb7, &H3e, &H9d)
 FWPM_PROVIDER_CONTEXT_SECURE_SOCKET_AUTHIP = iid
 End Function
 Public Function FWPM_PROVIDER_CONTEXT_SECURE_SOCKET_IPSEC() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H8c2d4144, &Hf8e0, &H42c0, &H94, &Hce, &H7c, &Hcf, &Hc6, &H3b, &H2f, &H9b)
 FWPM_PROVIDER_CONTEXT_SECURE_SOCKET_IPSEC = iid
 End Function
 Public Function FWPM_KEYING_MODULE_IKE() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Ha9bbf787, &H82a8, &H45bb, &Ha4, &H00, &H5d, &H7e, &H59, &H52, &Hc7, &Ha9)
 FWPM_KEYING_MODULE_IKE = iid
 End Function
 Public Function FWPM_KEYING_MODULE_AUTHIP() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H11e3dae0, &Hdd26, &H4590, &H85, &H7d, &Hab, &H4b, &H28, &Hd1, &Ha0, &H95)
 FWPM_KEYING_MODULE_AUTHIP = iid
 End Function
 Public Function FWPM_KEYING_MODULE_IKEV2() As UUID
 Static iid As UUID
  If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H041792cc, &H8f07, &H419d, &Ha3, &H94, &H71, &H69, &H68, &Hcb, &H16, &H47)
 FWPM_KEYING_MODULE_IKEV2 = iid
 End Function
 #End Region
 #End Region
End Module