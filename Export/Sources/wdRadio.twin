'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'RadioMgr.idl

[InterfaceId("6CFDCAB5-FC47-42A5-9241-074B58830E73")]
[OleAutomation(False)]
Interface IMediaRadioManager Extends IUnknown
	Sub GetRadioInstances(ppCollection As IRadioInstanceCollection)
	Sub OnSystemRadioStateChange(ByVal sysRadioState As SYSTEM_RADIO_STATE, ByVal uTimeoutSec As Long)
End Interface

[InterfaceId("E5791FAE-5665-4E0C-95BE-5FDE31644185")]
[OleAutomation(False)]
Interface IRadioInstanceCollection Extends IUnknown
	Sub GetCount(pcInstance As Long)
	Sub GetAt(ByVal uIndex As Long, ppRadioInstance As IRadioInstance)
End Interface

[InterfaceId("70AA1C9E-F2B4-4C61-86D3-6B9FB75FD1A2")]
[OleAutomation(False)]
Interface IRadioInstance Extends IUnknown
	Sub GetRadioManagerSignature(pguidSignature As UUID)
	Sub GetInstanceSignature(pbstrId As String)
	Sub GetFriendlyName(ByVal lcid As Long, pbstrName As String)
	Sub GetRadioState(pRadioState As DEVICE_RADIO_STATE)
    Sub SetRadioState(ByVal radioState As DEVICE_RADIO_STATE, ByVal uTimeoutSec As Long)
	[PreserveSig] Function IsMultiComm() As BOOL
    [PreserveSig] Function IsAssociatingDevice() As BOOL
End Interface

[InterfaceId("89D81F5F-C147-49ED-A11C-77B20C31E7C9")]
[OleAutomation(False)]
Interface IMediaRadioManagerNotifySink Extends IUnknown
	Sub OnInstanceAdd(ByVal pRadioInstance As IRadioInstance)
    Sub OnInstanceRemove(ByVal bstrRadioInstanceId As String)
	Sub OnInstanceRadioChange(ByVal bstrRadioInstanceId As String, ByVal radioState As DEVICE_RADIO_STATE)
End Interface

[InterfaceId("db3afbfb-08e6-46c6-aa70-bf9a34c30ab7")]
[OleAutomation(False)]
Interface IRadioManager Extends IUnknown
	Sub IsRMSupported(pdwState As Long) 'Always 1
	Sub GetUIRadioInstances(ppInstances As IUnknown) 'IUIRadioInstanceCollection
	Sub GetSystemRadioState(pbEnabled As BOOL, param2 As Long, param3 As RADIO_CHANGE_REASON)
	Sub SetSystemRadioState(ByVal bEnabled As BOOL)
	Sub Refresh()
	Sub OnHardwareSliderChange(ByVal param1 As Long, ByVal param2 As Long)
End Interface

[CoClassId("1910E202-236A-43E6-9469-FE0B3149F3D9")]
CoClass WwanRadioManager
	[Default] Interface IMediaRadioManager
End CoClass
[CoClassId("3F9FF9AB-AC3E-40BB-BBC9-27B648AD1FB2")]
CoClass XboxGIPRadioManager
    [Default] Interface IMediaRadioManager
End CoClass
[CoClassId("833A69FB-5E17-4893-85A5-1EF469217372")]
CoClass WlanRadioManager
    [Default] Interface IMediaRadioManager
End CoClass
[CoClassId("afd198ac-5f30-4e89-a789-5ddf60a69366")]
CoClass BluetoothRadioManager
    [Default] Interface IMediaRadioManager
End CoClass
[CoClassId("581333f6-28db-41be-bc7a-ff201f12f3f6")]
CoClass RadioManagementAPI
	[Default] Interface IRadioManager
End CoClass


#If WDL_QUALIFY Then
[MustBeQualified]
#End If
Module wdRadio
    Public Function CLSID_RadioManagementAPI() As UUID
    '{581333f6-28db-41be-bc7a-ff201f12f3f6}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H581333f6, CInt(&H28db), CInt(&H41be), &Hbc, &H7a, &Hff, &H20, &H1f, &H12, &Hf3, &Hf6)
     CLSID_RadioManagementAPI = iid
    End Function
    
    Public Enum DEVICE_RADIO_STATE
        DRS_RADIO_ON = 0
        DRS_SW_RADIO_OFF = 1
        DRS_HW_RADIO_OFF = 2
        DRS_SW_HW_RADIO_OFF = 3
        DRS_HW_RADIO_ON_UNCONTROLLABLE = 4
        DRS_RADIO_INVALID = 5
        DRS_HW_RADIO_OFF_UNCONTROLLABLE = 6
        DRS_RADIO_MAX = DRS_HW_RADIO_OFF_UNCONTROLLABLE
    End Enum
	
    Public Enum SYSTEM_RADIO_STATE
        SRS_RADIO_ENABLED = 0
        SRS_RADIO_DISABLED = 1
    End Enum
	
	Public Enum RADIO_CHANGE_REASON
		[_]
	End Enum

End Module