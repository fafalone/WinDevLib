'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'sdkddkver.h
'VersionHelpers.h

Module wdAPISdkddkver

    Public Const _WIN32_WINNT_NT4  = &H0400
    Public Const _WIN32_WINNT_WIN2K  = &H0500
    Public Const _WIN32_WINNT_WINXP  = &H0501
    Public Const _WIN32_WINNT_WS03  = &H0502
    Public Const _WIN32_WINNT_WIN6  = &H0600
    Public Const _WIN32_WINNT_VISTA  = &H0600
    Public Const _WIN32_WINNT_WS08  = &H0600
    Public Const _WIN32_WINNT_LONGHORN  = &H0600
    Public Const _WIN32_WINNT_WIN7  = &H0601
    Public Const _WIN32_WINNT_WIN8  = &H0602
    Public Const _WIN32_WINNT_WINBLUE  = &H0603
    Public Const _WIN32_WINNT_WINTHRESHOLD  = &H0A00
    Public Const _WIN32_WINNT_WIN10  = &H0A00
    '  _WIN32_IE_ version constants
    Public Const _WIN32_IE_IE20  = &H0200
    Public Const _WIN32_IE_IE30  = &H0300
    Public Const _WIN32_IE_IE302  = &H0302
    Public Const _WIN32_IE_IE40  = &H0400
    Public Const _WIN32_IE_IE401  = &H0401
    Public Const _WIN32_IE_IE50  = &H0500
    Public Const _WIN32_IE_IE501  = &H0501
    Public Const _WIN32_IE_IE55  = &H0550
    Public Const _WIN32_IE_IE60  = &H0600
    Public Const _WIN32_IE_IE60SP1  = &H0601
    Public Const _WIN32_IE_IE60SP2  = &H0603
    Public Const _WIN32_IE_IE70  = &H0700
    Public Const _WIN32_IE_IE80  = &H0800
    Public Const _WIN32_IE_IE90  = &H0900
    Public Const _WIN32_IE_IE100  = &H0A00
    Public Const _WIN32_IE_IE110  = &H0A00
    '  IE <-> OS version mapping
    '  NT4 supports IE versions 2.0 -> 6.0 SP1
    Public Const _WIN32_IE_NT4  = _WIN32_IE_IE20
    Public Const _WIN32_IE_NT4SP1  = _WIN32_IE_IE20
    Public Const _WIN32_IE_NT4SP2  = _WIN32_IE_IE20
    Public Const _WIN32_IE_NT4SP3  = _WIN32_IE_IE302
    Public Const _WIN32_IE_NT4SP4  = _WIN32_IE_IE401
    Public Const _WIN32_IE_NT4SP5  = _WIN32_IE_IE401
    Public Const _WIN32_IE_NT4SP6  = _WIN32_IE_IE50
    '  Win98 supports IE versions 4.01 -> 6.0 SP1
    Public Const _WIN32_IE_WIN98  = _WIN32_IE_IE401
    '  Win98SE supports IE versions 5.0 -> 6.0 SP1
    Public Const _WIN32_IE_WIN98SE  = _WIN32_IE_IE50
    '  WinME supports IE versions 5.5 -> 6.0 SP1
    Public Const _WIN32_IE_WINME  = _WIN32_IE_IE55
    '  Win2k supports IE versions 5.01 -> 6.0 SP1
    Public Const _WIN32_IE_WIN2K  = _WIN32_IE_IE501
    Public Const _WIN32_IE_WIN2KSP1  = _WIN32_IE_IE501
    Public Const _WIN32_IE_WIN2KSP2  = _WIN32_IE_IE501
    Public Const _WIN32_IE_WIN2KSP3  = _WIN32_IE_IE501
    Public Const _WIN32_IE_WIN2KSP4  = _WIN32_IE_IE501
    Public Const _WIN32_IE_XP  = _WIN32_IE_IE60
    Public Const _WIN32_IE_XPSP1  = _WIN32_IE_IE60SP1
    Public Const _WIN32_IE_XPSP2  = _WIN32_IE_IE60SP2
    Public Const _WIN32_IE_WS03  = &H0602
    Public Const _WIN32_IE_WS03SP1  = _WIN32_IE_IE60SP2
    Public Const _WIN32_IE_WIN6  = _WIN32_IE_IE70
    Public Const _WIN32_IE_LONGHORN  = _WIN32_IE_IE70
    Public Const _WIN32_IE_WIN7  = _WIN32_IE_IE80
    Public Const _WIN32_IE_WIN8  = _WIN32_IE_IE100
    Public Const _WIN32_IE_WINBLUE  = _WIN32_IE_IE100
    Public Const _WIN32_IE_WINTHRESHOLD  = _WIN32_IE_IE110
    Public Const _WIN32_IE_WIN10  = _WIN32_IE_IE110
        
    
    Public Const NTDDI_WIN4  = &H04000000
    Public Const NTDDI_WIN2K  = &H05000000
    Public Const NTDDI_WIN2KSP1  = &H05000100
    Public Const NTDDI_WIN2KSP2  = &H05000200
    Public Const NTDDI_WIN2KSP3  = &H05000300
    Public Const NTDDI_WIN2KSP4  = &H05000400
    Public Const NTDDI_WINXP  = &H05010000
    Public Const NTDDI_WINXPSP1  = &H05010100
    Public Const NTDDI_WINXPSP2  = &H05010200
    Public Const NTDDI_WINXPSP3  = &H05010300
    Public Const NTDDI_WINXPSP4  = &H05010400
    Public Const NTDDI_WS03  = &H05020000
    Public Const NTDDI_WS03SP1  = &H05020100
    Public Const NTDDI_WS03SP2  = &H05020200
    Public Const NTDDI_WS03SP3  = &H05020300
    Public Const NTDDI_WS03SP4  = &H05020400
    
    [Description("Windows Vista")] Public Const NTDDI_WIN6  = &H06000000
    [Description("Windows Vista SP1")] Public Const NTDDI_WIN6SP1  = &H06000100
    [Description("Windows Vista SP2")] Public Const NTDDI_WIN6SP2  = &H06000200
    [Description("Windows Vista SP3")] Public Const NTDDI_WIN6SP3  = &H06000300
    [Description("Windows Vista SP4")] Public Const NTDDI_WIN6SP4  = &H06000400
    Public Const NTDDI_VISTA  = NTDDI_WIN6
    Public Const NTDDI_VISTASP1  = NTDDI_WIN6SP1
    Public Const NTDDI_VISTASP2  = NTDDI_WIN6SP2
    Public Const NTDDI_VISTASP3  = NTDDI_WIN6SP3
    Public Const NTDDI_VISTASP4  = NTDDI_WIN6SP4
    [Description("Windows Vista")] Public Const NTDDI_LONGHORN  = NTDDI_VISTA
    [Description("Windows Server 2008")] Public Const NTDDI_WS08  = NTDDI_WIN6SP1
    [Description("Windows Server 2008 SP2")] Public Const NTDDI_WS08SP2  = NTDDI_WIN6SP2
    [Description("Windows Server 2008 SP3")] Public Const NTDDI_WS08SP3  = NTDDI_WIN6SP3
    [Description("Windows Server 2008 SP4")] Public Const NTDDI_WS08SP4  = NTDDI_WIN6SP4
    [Description("Windows 7")] Public Const NTDDI_WIN7  = &H06010000
    [Description("Windows 8")] Public Const NTDDI_WIN8  = &H06020000
    [Description("Windows 8.1")] Public Const NTDDI_WINBLUE  = &H06030000
    [Description("Windows 10.0.10240 / 1507 / Threshold 1")] Public Const NTDDI_WINTHRESHOLD  = &H0A000000
    Public Const NTDDI_WIN10  = &H0A000000
    [Description("Windows 10.0.10586 / 1511 / Threshold 2")] Public Const NTDDI_WIN10_TH2  = &H0A000001
    [Description("Windows 10.0.14393 / 1607 / Redstone 1")] Public Const NTDDI_WIN10_RS1  = &H0A000002
    [Description("Windows 10.0.15063 / 1703 / Redstone 2")] Public Const NTDDI_WIN10_RS2  = &H0A000003
    [Description("Windows 10.0.16299 / 1709 / Redstone 3")] Public Const NTDDI_WIN10_RS3  = &H0A000004
    [Description("Windows 10.0.17134 / 1803 / Redstone 4")] Public Const NTDDI_WIN10_RS4  = &H0A000005
    [Description("Windows 10.0.17763 / 1809 / Redstone 5")] Public Const NTDDI_WIN10_RS5  = &H0A000006
    [Description("Windows 10.0.18362 / 1903 / Titanium - 19H1" & vbCrLf & "Windows 10.0.18363 / 1909 / Titanium - 19H2")] Public Const NTDDI_WIN10_19H1  = &H0A000007
 
    [Description("Windows 10.0.19041 / 2004 / Vibranium")] Public Const NTDDI_WIN10_VB  = &H0A000008
    [Description("Windows 10.0.19042 / 20H2 / Manganese")] Public Const NTDDI_WIN10_MN  = &H0A000009
    [Description("Windows 10.0.19043 / 21H1 / Ferrum")] Public Const NTDDI_WIN10_FE  = &H0A00000A
    [Description("Windows 10.0.19044 / 21H2 / Cobalt" & vbCrLf & "Windows 10.0.19045 / 22H2")] Public Const NTDDI_WIN10_CO  = &H0A00000B
    [Description("Windows 10.0.22000 / 21H2 / Cobalt")] Public Const NTDDI_WIN11_CO  = NTDDI_WIN10_CO
    Public Const NTDDI_WIN11  = NTDDI_WIN11_CO
    [Description("Windows 10.0.22621 / 22H2 / Nickel")] Public Const NTDDI_WIN10_NI  = &H0A00000C
    [Description("Windows 10.0.22621 / 22H2 / Nickel")] Public Const NTDDI_WIN11_NI  = NTDDI_WIN10_NI
    [Description("Windows 10.0.22631 / 22H2 / Copper")] Public Const NTDDI_WIN10_CU  = &H0A00000D
    [Description("Windows 10.0.22631 / 23H2 / Copper")] Public Const NTDDI_WIN11_CU  = NTDDI_WIN10_CU
    Public Const NTDDI_WIN11_ZN  = &H0A00000E
    Public Const NTDDI_WIN11_GA  = &H0A00000F
    [Description("Windows 10.0.26100 / 24H2")] Public Const NTDDI_WIN11_GE  = &H0A000010
        
    Public Const WDK_NTDDI_VERSION  = NTDDI_WIN11_GE
    '  masks for version macros
    Public Const OSVERSION_MASK  = &HFFFF0000
    Public Const SPVERSION_MASK  = &H0000FF00
    Public Const SUBVERSION_MASK  = &H000000FF
    
    
End Module

#If WINDEVLIB_LITE = 0 Then
Module VersionHelpers

Public Function IsWindowsVersionOrGreater(wMajorVersion As Integer, wMinorVersion As Integer, wServicePackMajor As Integer, Optional ByVal NoVersionLie As Boolean = False) As Boolean
    Dim osvi As OSVERSIONINFOEXW
    osvi.dwOSVersionInfoSize = LenB(osvi)
    If NoVersionLie Then
        RtlGetVersion osvi
        If osvi.dwMajorVersion >= wMajorVersion Then
            If osvi.dwMinorVersion >= wMinorVersion Then
                If osvi.wServicePackMajor >= wServicePackMajor Then
                    Return True
                End If
            End If
        End If
        Return False
    Else
        Dim dwlConditionMask As LongLong = VerSetConditionMask( _
            VerSetConditionMask( _
            VerSetConditionMask( _
                0, VER_MAJORVERSION, CByte(VER_GREATER_EQUAL)), _
                   VER_MINORVERSION, CByte(VER_GREATER_EQUAL)), _
                   VER_SERVICEPACKMAJOR, CByte(VER_GREATER_EQUAL))

        osvi.dwMajorVersion = wMajorVersion
        osvi.dwMinorVersion = wMinorVersion
        osvi.wServicePackMajor = wServicePackMajor

        Return VerifyVersionInfoW(osvi, VER_MAJORVERSION Or VER_MINORVERSION Or VER_SERVICEPACKMAJOR, dwlConditionMask) <> 0
    End If
End Function

Public Function IsWindowsXPOrGreater() As Boolean
    Return IsWindowsVersionOrGreater(HIBYTE(_WIN32_WINNT_WINXP), LOBYTE(_WIN32_WINNT_WINXP), 0)
End Function

Public Function IsWindowsXPSP1OrGreater() As Boolean

    Return IsWindowsVersionOrGreater(HIBYTE(_WIN32_WINNT_WINXP), LOBYTE(_WIN32_WINNT_WINXP), 1)
End Function

Public Function IsWindowsXPSP2OrGreater() As Boolean
    Return IsWindowsVersionOrGreater(HIBYTE(_WIN32_WINNT_WINXP), LOBYTE(_WIN32_WINNT_WINXP), 2)
End Function

Public Function IsWindowsXPSP3OrGreater() As Boolean
    Return IsWindowsVersionOrGreater(HIBYTE(_WIN32_WINNT_WINXP), LOBYTE(_WIN32_WINNT_WINXP), 3)
End Function

Public Function IsWindowsVistaOrGreater() As Boolean
    Return IsWindowsVersionOrGreater(HIBYTE(_WIN32_WINNT_VISTA), LOBYTE(_WIN32_WINNT_VISTA), 0)
End Function

Public Function IsWindowsVistaSP1OrGreater() As Boolean
    Return IsWindowsVersionOrGreater(HIBYTE(_WIN32_WINNT_VISTA), LOBYTE(_WIN32_WINNT_VISTA), 1)
End Function

Public Function IsWindowsVistaSP2OrGreater() As Boolean
    Return IsWindowsVersionOrGreater(HIBYTE(_WIN32_WINNT_VISTA), LOBYTE(_WIN32_WINNT_VISTA), 2)
End Function

Public Function IsWindows7OrGreater() As Boolean
    Return IsWindowsVersionOrGreater(HIBYTE(_WIN32_WINNT_WIN7), LOBYTE(_WIN32_WINNT_WIN7), 0)
End Function

Public Function IsWindows7SP1OrGreater() As Boolean
    Return IsWindowsVersionOrGreater(HIBYTE(_WIN32_WINNT_WIN7), LOBYTE(_WIN32_WINNT_WIN7), 1)
End Function

Public Function IsWindows8OrGreater() As Boolean
    Return IsWindowsVersionOrGreater(HIBYTE(_WIN32_WINNT_WIN8), LOBYTE(_WIN32_WINNT_WIN8), 0)
End Function

Public Function IsWindows8Point1OrGreater() As Boolean
    Return IsWindowsVersionOrGreater(HIBYTE(_WIN32_WINNT_WINBLUE), LOBYTE(_WIN32_WINNT_WINBLUE), 0)
End Function

Public Function IsWindowsThresholdOrGreater() As Boolean
    Return IsWindowsVersionOrGreater(HIBYTE(_WIN32_WINNT_WINTHRESHOLD), LOBYTE(_WIN32_WINNT_WINTHRESHOLD), 0)
End Function

Public Function IsWindows10OrGreater() As Boolean
    Return IsWindowsVersionOrGreater(HIBYTE(_WIN32_WINNT_WINTHRESHOLD), LOBYTE(_WIN32_WINNT_WINTHRESHOLD), 0)
End Function

Public Function IsWindowsServer() As Boolean

    Dim osvi As OSVERSIONINFOEXW
    osvi.dwOSVersionInfoSize = LenB(osvi)
    osvi.wProductType = CByte(VER_NT_WORKSTATION)
    Dim dwlConditionMask As LongLong = VerSetConditionMask(0, VER_PRODUCT_TYPE, CByte(VER_EQUAL))

    Return VerifyVersionInfoW(osvi, VER_PRODUCT_TYPE, dwlConditionMask) <> 0
End Function

Public Function IsActiveSessionCountLimited() As Boolean

    Dim fActiveSessionCountLimited As BOOL
    Dim dwlConditionMask As LongLong
    Dim VersionInfo  As OSVERSIONINFOEXW

    VER_SET_CONDITION(dwlConditionMask, VER_SUITENAME, CByte(VER_AND))
    VersionInfo.dwOSVersionInfoSize = LenB(Of OSVERSIONINFOEX)

    VersionInfo.wSuiteMask = CInt(VER_SUITE_TERMINAL)
    Dim fSuiteTerminal As BOOL = VerifyVersionInfo(VersionInfo, VER_SUITENAME, dwlConditionMask)

    VersionInfo.wSuiteMask = CInt(VER_SUITE_SINGLEUSERTS)
    Dim fSuiteSingleUserTS As BOOL = VerifyVersionInfo(VersionInfo, VER_SUITENAME, dwlConditionMask)

    fActiveSessionCountLimited = If(((fSuiteTerminal And (fSuiteSingleUserTS <> 0)) <> 0), CTRUE, CFALSE)

    Return fActiveSessionCountLimited <> 0
End Function
End Module
#End If