'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'WMI non-scripting client interfaces
'WbemCli.h/.idl

'Note: WDL does not duplicate the WMI Scripting Library, and in most cases you should use that.


[InterfaceId("dc12a681-737f-11cf-884d-00aa004b2e24")]
[OleAutomation(False)]
Interface IWbemClassObject Extends IUnknown
    Sub GetQualifierSet(ByRef ppQualSet As IWbemQualifierSet)
    Sub Get(ByVal wszName As LongPtr, ByVal lFlags As Long, ByRef pVal As Variant, ByRef pType As CIMTYPE, ByRef plFlavor As WBEM_FLAVOR_TYPE)
    Sub Put(ByVal wszName As LongPtr, ByVal lFlags As Long, ByRef pVal As Variant, ByVal Type As CIMTYPE)
    Sub Delete(ByVal wszName As LongPtr)
    Sub GetNames(ByVal wszQualifierName As LongPtr, ByVal lFlags As WBEM_CONDITION_FLAG_TYPE, ByRef pQualifierVal As Variant, ByRef pNames() As String)
    Sub BeginEnumeration(ByVal lEnumFlags As WBEM_CONDITION_FLAG_TYPE)
    Sub Next(ByVal lFlags As Long, ByRef strName As String, ByRef pVal As Variant, ByRef pType As CIMTYPE, ByRef plFlavor As WBEM_FLAVOR_TYPE)
    Sub EndEnumeration()
    Sub GetPropertyQualifierSet(ByVal wszProperty As LongPtr, ByRef ppQualSet As IWbemQualifierSet)
    Sub Clone(ByRef ppCopy As IWbemClassObject)
    Sub GetObjectText(ByVal lFlags As WBEM_TEXT_FLAG_TYPE, ByRef pstrObjectText As String)
    Sub SpawnDerivedClass(ByVal lFlags As Long, ByRef ppNewClass As IWbemClassObject)
    Sub SpawnInstance(ByVal lFlags As Long, ByRef ppNewInstance As IWbemClassObject)
    Sub CompareTo(ByVal lFlags As WBEM_COMPARISON_FLAG, ByVal pCompareTo As IWbemClassObject)
    Sub GetPropertyOrigin(ByVal wszName As LongPtr, ByRef pstrClassName As String)
    Sub InheritsFrom(ByVal strAncestor As LongPtr)
    [Description("Method manipulation.")]
    Sub GetMethod(ByVal wszName As LongPtr, ByVal lFlags As Long, ByRef ppInSignature As IWbemClassObject, ByRef ppOutSignature As IWbemClassObject)
    Sub PutMethod(ByVal wszName As LongPtr, ByVal lFlags As Long, ByVal pInSignature As IWbemClassObject, ByVal pOutSignature As IWbemClassObject)
    Sub DeleteMethod(ByVal wszName As LongPtr)
    Sub BeginMethodEnumeration(ByVal lEnumFlags As WBEM_CONDITION_FLAG_TYPE)
    Sub NextMethod(ByVal lFlags As Long, ByRef pstrName As String, ByRef ppInSignature As IWbemClassObject, ByRef ppOutSignature As IWbemClassObject)
    Sub EndMethodEnumeration()
    Sub GetMethodQualifierSet(ByVal wszMethod As LongPtr, ByRef ppQualSet As IWbemQualifierSet)
    Sub GetMethodOrigin(ByVal wszMethodName As LongPtr, ByRef pstrClassName As String)
End Interface

[InterfaceId("dc12a680-737f-11cf-884d-00aa004b2e24")]
[OleAutomation(False)]
Interface IWbemQualifierSet Extends IUnknown
    Sub Get(ByVal wszName As LongPtr, ByVal lFlags As Long, ByRef pVal As Variant, ByRef plFlavor As WBEM_FLAVOR_TYPE)
    Sub Put(ByVal wszName As LongPtr, ByRef pVal As Variant, ByVal lFlavor As WBEM_FLAVOR_TYPE)
    Sub Delete(ByVal wszName As LongPtr)
    Sub GetNames(ByVal lFlags As WBEM_CONDITION_FLAG_TYPE, ByRef pNames() As String)
    Sub BeginEnumeration(ByVal lFlags As WBEM_CONDITION_FLAG_TYPE)
    Sub Next(ByVal lFlags As Long, ByRef pstrName As String, ByRef pVal As Variant, ByRef plFlavor As WBEM_FLAVOR_TYPE)
    Sub EndEnumeration()
End Interface

[InterfaceId("dc12a687-737f-11cf-884d-00aa004b2e24")]
[OleAutomation(False)]
Interface IWbemLocator Extends IUnknown
    Sub ConnectServer(ByVal strNetworkResource As String, ByVal strUser As String, ByVal strPassword As String, ByVal strLocale As String, ByVal lSecurityFlags As WBEM_CONNECT_OPTIONS, ByVal strAuthority As String, ByVal pCtx As IWbemContext, ByRef ppNamespace As IWbemServices)
End Interface

[InterfaceId("7c857801-7381-11cf-884d-00aa004b2e24")]
[OleAutomation(False)]
Interface IWbemObjectSink Extends IUnknown
    Sub Indicate(ByVal lObjectCount As Long, ByVal apObjArray As LongPtr)
    Sub SetStatus(ByVal lFlags As WBEM_STATUS_TYPE, ByVal hResult As Long, ByVal strParam As String, ByVal pObjParam As IWbemClassObject)
End Interface

[InterfaceId("e7d35cfa-348b-485e-b524-252725d697ca")]
[OleAutomation(False)]
Interface IWbemObjectSinkEx Extends IWbemObjectSink
    Sub WriteMessage(ByVal uChannel As Long, ByVal strMessage As String)
    Sub WriteError(ByVal pObjError As IWbemClassObject, ByRef puReturned As Byte)
    Sub PromptUser(ByVal strMessage As String, ByVal uPromptType As Byte, ByRef puReturned As Byte)
    Sub WriteProgress(ByVal strActivity As String, ByVal strCurrentOperation As String, ByVal strStatusDescription As String, ByVal uPercentComplete As Long, ByVal uSecondsRemaining As Long)
    Sub WriteStreamParameter(ByVal strName As String, ByRef vtValue As Variant, ByVal ulType As Long, ByVal ulFlags As Long)
End Interface

[InterfaceId("027947e1-d731-11ce-a357-000000000001")]
[OleAutomation(False)]
Interface IEnumWbemClassObject Extends IUnknown
    Sub Reset()
    Sub Next(ByVal lTimeout As Long, ByVal uCount As Long, ByVal apObjects As LongPtr, ByRef puReturned As Long)
    Sub NextAsync(ByVal uCount As Long, ByVal pSink As IWbemObjectSink)
    Sub Clone(ByRef ppEnum As IEnumWbemClassObject)
    Sub Skip(ByVal lTimeout As Long, ByVal nCount As Long)
End Interface

[InterfaceId("44aca674-e8fc-11d0-a07c-00c04fb68820")]
[OleAutomation(False)]
Interface IWbemContext Extends IUnknown
    Sub Clone(ByRef ppNewCopy As IWbemContext)
    Sub GetNames(ByVal lFlags As Long, ByRef pNames As LongPtr)
    Sub BeginEnumeration(ByVal lFlags As Long)
    Sub Next(ByVal lFlags As Long, ByRef pstrName As String, ByRef pValue As Variant)
    Sub EndEnumeration()
    Sub SetValue(ByVal wszName As LongPtr, ByVal lFlags As Long, ByRef pValue As Variant)
    Sub GetValue(ByVal wszName As LongPtr, ByVal lFlags As Long, ByRef pValue As Variant)
    Sub DeleteValue(ByVal wszName As LongPtr, ByVal lFlags As Long)
    Sub DeleteAll()
End Interface

[InterfaceId("44aca675-e8fc-11d0-a07c-00c04fb68820")]
[OleAutomation(False)]
Interface IWbemCallResult Extends IUnknown
    Sub GetResultObject(ByVal lTimeout As Long, ByRef ppResultObject As IWbemClassObject)
    Sub GetResultString(ByVal lTimeout As Long, ByRef pstrResultString As String)
    Sub GetResultServices(ByVal lTimeout As Long, ByRef ppServices As IWbemServices)
    Sub GetCallStatus(ByVal lTimeout As Long, ByRef plStatus As Long)
End Interface

[InterfaceId("9556dc99-828c-11cf-a37e-00aa003240c7")]
[OleAutomation(False)]
Interface IWbemServices Extends IUnknown
    Sub OpenNamespace(ByVal strNamespace As String, ByVal lFlags As WBEM_GENERIC_FLAG_TYPE, ByVal pCtx As IWbemContext, ByRef ppWorkingNamespace As IWbemServices, ByRef ppResult As IWbemCallResult)
    Sub CancelAsyncCall(ByVal pSink As IWbemObjectSink)
    Sub QueryObjectSink(ByVal lFlags As Long, ByRef ppResponseHandler As IWbemObjectSink)
    Sub GetObject(ByVal strObjectPath As String, ByVal lFlags As WBEM_GENERIC_FLAG_TYPE, ByVal pCtx As IWbemContext, ByRef ppObject As IWbemClassObject, ByRef ppCallResult As IWbemCallResult)
    Sub GetObjectAsync(ByVal strObjectPath As String, ByVal lFlags As WBEM_GENERIC_FLAG_TYPE, ByVal pCtx As IWbemContext, ByVal pResponseHandler As IWbemObjectSink)
    Sub PutClass(ByVal pObject As IWbemClassObject, ByVal lFlags As WBEM_GENERIC_FLAG_TYPE, ByVal pCtx As IWbemContext, ByRef ppCallResult As IWbemCallResult)
    Sub PutClassAsync(ByVal pObject As IWbemClassObject, ByVal lFlags As WBEM_GENERIC_FLAG_TYPE, ByVal pCtx As IWbemContext, ByVal pResponseHandler As IWbemObjectSink)
    Sub DeleteClass(ByVal strClass As String, ByVal lFlags As WBEM_GENERIC_FLAG_TYPE, ByVal pCtx As IWbemContext, ByRef ppCallResult As IWbemCallResult)
    Sub DeleteClassAsync(ByVal strClass As String, ByVal lFlags As WBEM_GENERIC_FLAG_TYPE, ByVal pCtx As IWbemContext, ByVal pResponseHandler As IWbemObjectSink)
    Sub CreateClassEnum(ByVal strSuperclass As String, [TypeHint(WBEM_GENERIC_FLAG_TYPE, WBEM_QUERY_FLAG_TYPE)] ByVal lFlags As Long, ByVal pCtx As IWbemContext, ByRef ppEnum As IEnumWbemClassObject)
    Sub CreateClassEnumAsync(ByVal strSuperclass As String, [TypeHint(WBEM_GENERIC_FLAG_TYPE, WBEM_QUERY_FLAG_TYPE)] ByVal lFlags As Long, ByVal pCtx As IWbemContext, ByVal pResponseHandler As IWbemObjectSink)
    Sub PutInstance(ByVal pInst As IWbemClassObject, [TypeHint(WBEM_GENERIC_FLAG_TYPE, WBEM_CHANGE_FLAG_TYPE)] ByVal lFlags As Long, ByVal pCtx As IWbemContext, ByRef ppCallResult As IWbemCallResult)
    Sub PutInstanceAsync(ByVal pInst As IWbemClassObject, [TypeHint(WBEM_GENERIC_FLAG_TYPE, WBEM_CHANGE_FLAG_TYPE)] ByVal lFlags As Long, ByVal pCtx As IWbemContext, ByVal pResponseHandler As IWbemObjectSink)
    Sub DeleteInstance(ByVal strObjectPath As String, ByVal lFlags As WBEM_GENERIC_FLAG_TYPE, ByVal pCtx As IWbemContext, ByRef ppCallResult As IWbemCallResult)
    Sub DeleteInstanceAsync(ByVal strObjectPath As String, ByVal lFlags As WBEM_GENERIC_FLAG_TYPE, ByVal pCtx As IWbemContext, ByVal pResponseHandler As IWbemObjectSink)
    Sub CreateInstanceEnum(ByVal strFilter As String, [TypeHint(WBEM_GENERIC_FLAG_TYPE, WBEM_QUERY_FLAG_TYPE)] ByVal lFlags As Long, ByVal pCtx As IWbemContext, ByRef ppEnum As IEnumWbemClassObject)
    Sub CreateInstanceEnumAsync(ByVal strFilter As String, [TypeHint(WBEM_GENERIC_FLAG_TYPE, WBEM_QUERY_FLAG_TYPE)] ByVal lFlags As Long, ByVal pCtx As IWbemContext, ByVal pResponseHandler As IWbemObjectSink)
    Sub ExecQuery(ByVal strQueryLanguage As String, ByVal strQuery As String, [TypeHint(WBEM_GENERIC_FLAG_TYPE, WBEM_QUERY_FLAG_TYPE)] ByVal lFlags As Long, ByVal pCtx As IWbemContext, ByRef ppEnum As IEnumWbemClassObject)
    Sub ExecQueryAsync(ByVal strQueryLanguage As String, ByVal strQuery As String, [TypeHint(WBEM_GENERIC_FLAG_TYPE, WBEM_QUERY_FLAG_TYPE)] ByVal lFlags As Long, ByVal pCtx As IWbemContext, ByVal pResponseHandler As IWbemObjectSink)
    Sub ExecNotificationQuery(ByVal strQueryLanguage As String, ByVal strQuery As String, ByVal lFlags As WBEM_GENERIC_FLAG_TYPE, ByVal pCtx As IWbemContext, ByRef ppEnum As IEnumWbemClassObject)
    Sub ExecNotificationQueryAsync(ByVal strQueryLanguage As String, ByVal strQuery As String, ByVal lFlags As WBEM_GENERIC_FLAG_TYPE, ByVal pCtx As IWbemContext, ByVal pResponseHandler As IWbemObjectSink)
    Sub ExecMethod(ByVal strObjectPath As String, ByVal strMethodName As String, ByVal lFlags As WBEM_GENERIC_FLAG_TYPE, ByVal pCtx As IWbemContext, ByVal pInParams As IWbemClassObject, ByRef ppOutParams As IWbemClassObject, ByRef ppCallResult As IWbemCallResult)
    Sub ExecMethodAsync(ByVal strObjectPath As String, ByVal strMethodName As String, ByVal lFlags As WBEM_GENERIC_FLAG_TYPE, ByVal pCtx As IWbemContext, ByVal pInParams As IWbemClassObject, ByVal pResponseHandler As IWbemObjectSink)
End Interface

[InterfaceId("b7b31df9-d515-11d3-a11c-00105a1f515a")]
[OleAutomation(False)]
Interface IWbemShutdown Extends IUnknown
    Sub Shutdown(ByVal uReason As Long, ByVal uMaxMilliseconds As Long, ByVal pCtx As IWbemContext)
End Interface

[InterfaceId("bfbf883a-cad7-11d3-a11b-00105a1f515a")]
[OleAutomation(False)]
Interface IWbemObjectTextSrc Extends IUnknown
    Sub GetText(ByVal lFlags As Long, ByVal pObj As IWbemClassObject, ByVal uObjTextFormat As WMI_OBJ_TEXT, ByVal pCtx As IWbemContext, ByRef strText As String)
    [Description("Resets the object entirely based on the text.")]
    Sub CreateFromText(ByVal lFlags As Long, ByVal strText As String, ByVal uObjTextFormat As WMI_OBJ_TEXT, ByVal pCtx As IWbemContext, ByRef pNewObj As IWbemClassObject)
End Interface

[InterfaceId("49353c9a-516b-11d1-aea6-00c04fb68820")]
[OleAutomation(False)]
Interface IWbemObjectAccess Extends IWbemClassObject
    Sub GetPropertyHandle(ByVal wszPropertyName As LongPtr, ByRef pType As CIMTYPE, ByRef plHandle As Long)
    Sub WritePropertyValue(ByVal lHandle As Long, ByVal lNumBytes As Long, aData As Any)
    Sub ReadPropertyValue(ByVal lHandle As Long, ByVal lBufferSize As Long, ByRef plNumBytes As Long, aData As Any)
    Sub ReadDWORD(ByVal lHandle As Long, ByRef pdw As Long)
    Sub WriteDWORD(ByVal lHandle As Long, ByVal dw As Long)
    Sub ReadQWORD(ByVal lHandle As Long, ByRef pqw As LongLong)
    Sub WriteQWORD(ByVal lHandle As Long, ByVal pw As LongLong)
    Sub GetPropertyInfoByHandle(ByVal lHandle As Long, ByRef pstrName As String, ByRef pType As CIMTYPE)
    Sub Lock(ByVal lFlags As Long)
    Sub Unlock(ByVal lFlags As Long)
End Interface

[InterfaceId("6daf974e-2e37-11d2-aec9-00c04fb68820")]
[OleAutomation(False)]
Interface IMofCompiler Extends IUnknown
    [Description("lFlags correspond to all the available command-line flags.")]
    Sub CompileFile(ByVal FileName As LongPtr, ByVal ServerAndNamespace As LongPtr, ByVal User As LongPtr, ByVal Authority As LongPtr, ByVal Password As LongPtr, ByVal lOptionFlags As WBEM_CHANGE_FLAG_TYPE, ByVal lClassFlags As WBEM_CHANGE_FLAG_TYPE, ByVal lInstanceFlags As WBEM_CHANGE_FLAG_TYPE, ByRef pInfo As WBEM_COMPILE_STATUS_INFO)
    Sub CompileBuffer(ByVal BuffSize As Long, ByVal pBuffer As LongPtr, ByVal ServerAndNamespace As LongPtr, ByVal User As LongPtr, ByVal Authority As LongPtr, ByVal Password As LongPtr, ByVal lOptionFlags As WBEM_CHANGE_FLAG_TYPE, ByVal lClassFlags As WBEM_CHANGE_FLAG_TYPE, ByVal lInstanceFlags As WBEM_CHANGE_FLAG_TYPE, ByRef pInfo As WBEM_COMPILE_STATUS_INFO)
    [Description("lFlags correspond to all the available command-line flags.")]
    Sub CreateBMOF(ByVal TextFileName As LongPtr, ByVal BMOFFileName As LongPtr, ByVal ServerAndNamespace As LongPtr, ByVal lOptionFlags As WBEM_COMPILER_OPTIONS, ByVal lClassFlags As WBEM_CHANGE_FLAG_TYPE, ByVal lInstanceFlags As WBEM_CHANGE_FLAG_TYPE, ByRef pInfo As WBEM_COMPILE_STATUS_INFO)
End Interface

[InterfaceId("1cfaba8c-1523-11d1-ad79-00c04fd8fdff")]
[OleAutomation(False)]
Interface IUnsecuredApartment Extends IUnknown
    Sub CreateObjectStub(ByVal pObject As IUnknown, ByRef ppStub As IUnknown)
End Interface

[InterfaceId("31739d04-3471-4cf4-9a7c-57a44ae71956")]
[OleAutomation(False)]
Interface IWbemUnsecuredApartment Extends IUnsecuredApartment
    Sub CreateSinkStub(ByVal pSink As IWbemObjectSink, ByVal dwFlags As WBEM_UNSECAPP_FLAG_TYPE, ByVal wszReserved As LongPtr, ByRef ppStub As IWbemObjectSink)
End Interface

[InterfaceId("eb87e1bc-3233-11d2-aec9-00c04fb68820")]
[OleAutomation(False)]
Interface IWbemStatusCodeText Extends IUnknown
    Sub GetErrorCodeText(ByVal hRes As Long, ByVal LocaleId As Long, ByVal lFlags As Long, ByRef MessageText As String)
    Sub GetFacilityCodeText(ByVal hRes As Long, ByVal LocaleId As Long, ByVal lFlags As Long, ByRef MessageText As String)
End Interface

[InterfaceId("C49E32C7-BC8B-11d2-85D4-00105A1F8304")]
[OleAutomation(False)]
Interface IWbemBackupRestore Extends IUnknown
    Sub Backup(ByVal strBackupToFile As LongPtr, ByVal lFlags As Long)
    Sub Restore(ByVal strRestoreFromFile As LongPtr, ByVal lFlags As WBEM_BACKUP_RESTORE_FLAGS)
End Interface

[InterfaceId("A359DEC5-E813-4834-8A2A-BA7F1D777D76")]
[OleAutomation(False)]
Interface IWbemBackupRestoreEx Extends IWbemBackupRestore
    Sub Pause()
    Sub Resume()
End Interface

[InterfaceId("49353c99-516b-11d1-aea6-00c04fb68820")]
[OleAutomation(False)]
Interface IWbemRefresher Extends IUnknown
    Sub Refresh(ByVal lFlags As WBEM_REFRESHER_FLAGS)
End Interface

[InterfaceId("2705C288-79AE-11d2-B348-00105A1F8177")]
[OleAutomation(False)]
Interface IWbemHiPerfEnum Extends IUnknown
    [Description("Add Objects, with assigned ids")]
    Sub AddObjects(ByVal lFlags As Long, ByVal uNumObjects As Long, apIds As Long, apObj As IWbemObjectAccess)
    [Description("Remove objects by id")]
    Sub RemoveObjects(ByVal lFlags As Long, ByVal uNumObjects As Long, apIds As Long)
    Sub GetObjects(ByVal lFlags As Long, ByVal uNumObjects As Long, apObj As IWbemObjectAccess, ByRef puReturned As Long)
    Sub RemoveAll(ByVal lFlags As Long)
End Interface

[InterfaceId("49353c92-516b-11d1-aea6-00c04fb68820")]
[OleAutomation(False)]
Interface IWbemConfigureRefresher Extends IUnknown
    Sub AddObjectByPath(ByVal pNamespace As IWbemServices, ByVal wszPath As LongPtr, ByVal lFlags As Long, ByVal pContext As IWbemContext, ByRef ppRefreshable As IWbemClassObject, ByRef plId As Long)
    Sub AddObjectByTemplate(ByVal pNamespace As IWbemServices, ByVal pTemplate As IWbemClassObject, ByVal lFlags As Long, ByVal pContext As IWbemContext, ByRef ppRefreshable As IWbemClassObject, ByRef plId As Long)
    Sub AddRefresher(ByVal pRefresher As IWbemRefresher, ByVal lFlags As Long, ByRef plId As Long)
    Sub Remove(ByVal lId As Long, ByVal lFlags As Long)
    Sub AddEnum(ByVal pNamespace As IWbemServices, ByVal wszClassName As LongPtr, ByVal lFlags As Long, ByVal pContext As IWbemContext, ByRef ppEnum As IWbemHiPerfEnum, ByRef plId As Long)
End Interface


[Description("CLSID_WbemLocator")]
[CoClassId("4590f811-1d3a-11d0-891f-00aa004b2e24")]
CoClass WbemLocator
    [Default] Interface IWbemLocator
End CoClass
[Description("CLSID_WbemContext")]
[CoClassId("674B6698-EE92-11d0-AD71-00C04FD8FDFF")]
CoClass WbemContext
    [Default] Interface IWbemContext
End CoClass
[Description("CLSID_UnsecuredApartment")]
[CoClassId("49bd2028-1523-11d1-ad79-00c04fd8fdff")]
CoClass UnsecuredApartment
    [Default] Interface IUnsecuredApartment
    Interface IWbemUnsecuredApartment
End CoClass
[Description("CLSID_WbemClassObject")]
[CoClassId("9A653086-174F-11d2-B5F9-00104B703EFD")]
CoClass WbemClassObject
    [Default] Interface IWbemClassObject
End CoClass
[Description("CLSID_MofCompiler")]
[CoClassId("6daf9757-2e37-11d2-aec9-00c04fb68820")]
CoClass MofCompiler
    [Default] Interface IMofCompiler
End CoClass
[Description("CLSID_WbemStatusCodeText")]
[CoClassId("eb87e1bd-3233-11d2-aec9-00c04fb68820")]
CoClass WbemStatusCodeText
    [Default] Interface IWbemStatusCodeText
End CoClass
[Description("CLSID_WbemBackupRestore")]
[CoClassId("C49E32C6-BC8B-11d2-85D4-00105A1F8304")]
CoClass WbemBackupRestore
    [Default] Interface IWbemBackupRestore
End CoClass
[Description("CLSID_WbemRefresher")]
[CoClassId("c71566f2-561e-11d1-ad87-00c04fd8fdff")]
CoClass WbemRefresher
    [Default] Interface IWbemRefresher
    Interface IWbemConfigureRefresher
 	Interface IMarshal
End CoClass
[Description("CLSID_WbemObjectTextSrc")]
[CoClassId("8D1C559D-84F0-4bb3-A7D5-56A7435A9BA6")]
CoClass WbemObjectTextSrc
    [Default] Interface IWbemObjectTextSrc
End CoClass



Module wdWBEM

Public Enum WBEM_GENUS_TYPE
	WBEM_GENUS_CLASS = 1
	WBEM_GENUS_INSTANCE = 2
End Enum

Public Enum WBEM_CHANGE_FLAG_TYPE
    WBEM_FLAG_CREATE_OR_UPDATE = 0
    WBEM_FLAG_UPDATE_ONLY = &H1
    WBEM_FLAG_CREATE_ONLY = &H2
    WBEM_FLAG_UPDATE_COMPATIBLE = &H0
    WBEM_FLAG_UPDATE_SAFE_MODE = &H20
    WBEM_FLAG_UPDATE_FORCE_MODE = &H40
    WBEM_MASK_UPDATE_MODE = &H60
    WBEM_FLAG_ADVISORY = &H000010000
End Enum

Public Enum WBEM_GENERIC_FLAG_TYPE
    WBEM_FLAG_RETURN_IMMEDIATELY = &H10
    WBEM_FLAG_RETURN_WBEM_COMPLETE = 0
    WBEM_FLAG_BIDIRECTIONAL = 0
    WBEM_FLAG_FORWARD_ONLY = &H20
    WBEM_FLAG_NO_ERROR_OBJECT = &H40
    WBEM_FLAG_RETURN_ERROR_OBJECT = 0
    WBEM_FLAG_SEND_STATUS = &H80
    WBEM_FLAG_DONT_SEND_STATUS = 0
    WBEM_FLAG_ENSURE_LOCATABLE = &H100
    WBEM_FLAG_DIRECT_READ = &H200
    WBEM_FLAG_SEND_ONLY_SELECTED = 0
    '  backward-compatibility
    WBEM_RETURN_WHEN_COMPLETE = 0
    WBEM_RETURN_IMMEDIATELY = &H10
    '  these bits are reserved!!
    WBEM_MASK_RESERVED_FLAGS = &H1F000
    WBEM_FLAG_USE_AMENDED_QUALIFIERS = &H20000
    '  If used, the context object must have one or more of the following
    '   BOOL "INCLUDE_OWNER"
    '   BOOL "INCLUDE_DACL"
    '   BOOL "INCLUDE_SACL"
    '   BOOL "INCLUDE_GROUP"
    WBEM_FLAG_STRONG_VALIDATION = &H100000
End Enum

Public Enum WBEM_STATUS_TYPE
    WBEM_STATUS_COMPLETE = 0
    WBEM_STATUS_REQUIREMENTS = 1
    WBEM_STATUS_PROGRESS = 2
    WBEM_STATUS_LOGGING_INFORMATION = &H100 'Local flag only. This is removed by WMI server before sending the result back to client.
    WBEM_STATUS_LOGGING_INFORMATION_PROVIDER = &H200 'Local flag only. This is removed by WMI server before sending the result back to client.
    WBEM_STATUS_LOGGING_INFORMATION_HOST = &H400 'Local flag only. This is removed by WMI server before sending the result back to client.
    WBEM_STATUS_LOGGING_INFORMATION_REPOSITORY = &H800 'Local flag only. This is removed by WMI server before sending the result back to client.
    WBEM_STATUS_LOGGING_INFORMATION_ESS = &H1000 'Local flag only. This is removed by WMI server before sending the result back to client.
End Enum

Public Enum WBEM_TIMEOUT_TYPE
    WBEM_NO_WAIT = 0
    WBEM_INFINITE = &HFFFFFFFF
End Enum

Public Enum WBEM_CONDITION_FLAG_TYPE
    WBEM_FLAG_ALWAYS = 0
    WBEM_FLAG_ONLY_IF_TRUE = &H1
    WBEM_FLAG_ONLY_IF_FALSE = &H2
    WBEM_FLAG_ONLY_IF_IDENTICAL = &H3
    WBEM_MASK_PRIMARY_CONDITION = &H3
    WBEM_FLAG_KEYS_ONLY = &H4
    WBEM_FLAG_REFS_ONLY = &H8
    WBEM_FLAG_LOCAL_ONLY = &H10
    WBEM_FLAG_PROPAGATED_ONLY = &H20
    WBEM_FLAG_SYSTEM_ONLY = &H30
    WBEM_FLAG_NONSYSTEM_ONLY = &H40
    WBEM_MASK_CONDITION_ORIGIN = &H70
    WBEM_FLAG_CLASS_OVERRIDES_ONLY = &H100
    WBEM_FLAG_CLASS_LOCAL_AND_OVERRIDES = &H200
    WBEM_MASK_CLASS_CONDITION = &H300
End Enum

Public Enum WBEM_FLAVOR_TYPE
    WBEM_FLAVOR_DONT_PROPAGATE = 0
    WBEM_FLAVOR_FLAG_PROPAGATE_TO_INSTANCE = &H1
    WBEM_FLAVOR_FLAG_PROPAGATE_TO_DERIVED_CLASS = &H2
    WBEM_FLAVOR_MASK_PROPAGATION = &H0F
    WBEM_FLAVOR_OVERRIDABLE = 0
    WBEM_FLAVOR_NOT_OVERRIDABLE = &H10
    WBEM_FLAVOR_MASK_PERMISSIONS = &H10
    WBEM_FLAVOR_ORIGIN_LOCAL = 0
    WBEM_FLAVOR_ORIGIN_PROPAGATED = &H20
    WBEM_FLAVOR_ORIGIN_SYSTEM = &H40
    WBEM_FLAVOR_MASK_ORIGIN = &H60
    WBEM_FLAVOR_NOT_AMENDED = 0
    WBEM_FLAVOR_AMENDED = &H80
    WBEM_FLAVOR_MASK_AMENDED = &H80
End Enum

Public Enum WBEM_QUERY_FLAG_TYPE
    WBEM_FLAG_DEEP = 0
    WBEM_FLAG_SHALLOW = 1
    WBEM_FLAG_PROTOTYPE = 2
End Enum

Public Enum WBEM_SECURITY_FLAGS
    WBEM_ENABLE = 1
    WBEM_METHOD_EXECUTE = 2
    WBEM_FULL_WRITE_REP = 4
    WBEM_PARTIAL_WRITE_REP = 8
    WBEM_WRITE_PROVIDER = &H10
    WBEM_REMOTE_ACCESS = &H20
    WBEM_RIGHT_SUBSCRIBE = &H40
    WBEM_RIGHT_PUBLISH = &H80
End Enum

Public Enum WBEM_LIMITATION_FLAG_TYPE
    WBEM_FLAG_EXCLUDE_OBJECT_QUALIFIERS = &H10
    WBEM_FLAG_EXCLUDE_PROPERTY_QUALIFIERS = &H20
End Enum

Public Enum WBEM_TEXT_FLAG_TYPE
    WBEM_FLAG_NO_FLAVORS = &H1
    WBEM_FLAG_NO_SEPARATOR = &H80000000
End Enum

Public Enum WBEM_COMPARISON_FLAG
    WBEM_COMPARISON_INCLUDE_ALL = 0
    WBEM_FLAG_IGNORE_QUALIFIERS = &H1
    WBEM_FLAG_IGNORE_OBJECT_SOURCE = &H2
    WBEM_FLAG_IGNORE_DEFAULT_VALUES = &H4
    WBEM_FLAG_IGNORE_CLASS = &H8
    WBEM_FLAG_IGNORE_CASE = &H10
    WBEM_FLAG_IGNORE_FLAVOR = &H20
End Enum

Public Enum WBEM_LOCKING
    WBEM_FLAG_ALLOW_READ = &H1
End Enum

Public Enum CIMTYPE
    CIM_ILLEGAL = &Hfff
    CIM_EMPTY = 0
    CIM_SINT8 = 16
    CIM_UINT8 = 17
    CIM_SINT16 = 2
    CIM_UINT16 = 18
    CIM_SINT32 = 3
    CIM_UINT32 = 19
    CIM_SINT64 = 20
    CIM_UINT64 = 21
    CIM_REAL32 = 4
    CIM_REAL64 = 5
    CIM_BOOLEAN = 11
    CIM_STRING = 8
    CIM_DATETIME = 101
    CIM_REFERENCE = 102
    CIM_CHAR16 = 103
    CIM_OBJECT = 13
    CIM_FLAG_ARRAY = &H2000
End Enum

Public Enum WBEM_BACKUP_RESTORE_FLAGS
    WBEM_FLAG_BACKUP_RESTORE_DEFAULT = 0
    WBEM_FLAG_BACKUP_RESTORE_FORCE_SHUTDOWN = 1
End Enum

Public Enum WBEM_REFRESHER_FLAGS
    WBEM_FLAG_REFRESH_AUTO_RECONNECT = 0
    WBEM_FLAG_REFRESH_NO_AUTO_RECONNECT = 1
End Enum

Public Enum WBEM_SHUTDOWN_FLAGS
    WBEM_SHUTDOWN_UNLOAD_COMPONENT = 1 ' Component receiving this is being notified it is no longer required
    WBEM_SHUTDOWN_WMI = 2 ' WMI itself is shutting down
    WBEM_SHUTDOWN_OS = 3 ' OS is being shut down
End Enum

'Alias CIMTYPE As CIMTYPE_ENUMERATION
[Description("This enum uses the CIMTYPE name as that's found in actual methods.")]
Public Enum CIMTYPE_ENUMERATION: [_]: End Enum

Public Enum WBEMSTATUS_FORMAT
	WBEMSTATUS_FORMAT_NEWLINE = 0 ' Newline appended to textual representation of status code
	WBEMSTATUS_FORMAT_NO_NEWLINE = 1 ' No Newline appended to textual representation of status code
End Enum

Public Enum WBEM_LIMITS
    WBEM_MAX_IDENTIFIER = &H1000 ' Max property, qualifier, class name (4K)
    WBEM_MAX_QUERY = &H4000 ' Max query size  (16K)
    WBEM_MAX_PATH = &H2000 ' Max object path (8K)
    WBEM_MAX_OBJECT_NESTING = 64 ' Max embedded object nesting
    WBEM_MAX_USER_PROPERTIES = 1024 ' Max user-defined properties in class
End Enum

Public Enum WBEMSTATUS
    WBEM_NO_ERROR = 0
    WBEM_S_NO_ERROR = 0
    WBEM_S_SAME = 0
    '  Non-error status codes.
    '  =======================
    WBEM_S_FALSE = 1
    WBEM_S_ALREADY_EXISTS = &H40001
    WBEM_S_RESET_TO_DEFAULT = &H40002
    WBEM_S_DIFFERENT = &H40003
    WBEM_S_TIMEDOUT = &H40004
    WBEM_S_NO_MORE_DATA = &H40005
    WBEM_S_OPERATION_CANCELLED = &H40006
    WBEM_S_PENDING = &H40007
    WBEM_S_DUPLICATE_OBJECTS = &H40008
    WBEM_S_ACCESS_DENIED = &H40009
    WBEM_S_PARTIAL_RESULTS = &H40010
    '  Hook status enum values have been moved to wbemint.idl (RAID 278480).
    '  They remain here for reference.
    '  WBEM_S_NO_POSTHOOK              = 0x40011,
    '  WBEM_S_POSTHOOK_WITH_BOTH       = 0x40012,
    '  WBEM_S_POSTHOOK_WITH_NEW        = 0x40013,
    '  WBEM_S_POSTHOOK_WITH_STATUS     = 0x40014,
    '  WBEM_S_POSTHOOK_WITH_OLD        = 0x40015,
    '  WBEM_S_REDO_PREHOOK_WITH_ORIGINAL_OBJECT = 0x40016,
    WBEM_S_SOURCE_NOT_AVAILABLE = &H40017
    '  Errors.
    '  =======
    WBEM_E_FAILED = &H80041001
    WBEM_E_NOT_FOUND = &H80041002
    WBEM_E_ACCESS_DENIED = &H80041003
    WBEM_E_PROVIDER_FAILURE = &H80041004
    WBEM_E_TYPE_MISMATCH = &H80041005
    WBEM_E_OUT_OF_MEMORY = &H80041006
    WBEM_E_INVALID_CONTEXT = &H80041007
    WBEM_E_INVALID_PARAMETER = &H80041008
    WBEM_E_NOT_AVAILABLE = &H80041009
    WBEM_E_CRITICAL_ERROR = &H8004100A
    WBEM_E_INVALID_STREAM = &H8004100B
    WBEM_E_NOT_SUPPORTED = &H8004100C
    WBEM_E_INVALID_SUPERCLASS = &H8004100D
    WBEM_E_INVALID_NAMESPACE = &H8004100E
    WBEM_E_INVALID_OBJECT = &H8004100F
    WBEM_E_INVALID_CLASS = &H80041010
    WBEM_E_PROVIDER_NOT_FOUND = &H80041011
    WBEM_E_INVALID_PROVIDER_REGISTRATION = &H80041012
    WBEM_E_PROVIDER_LOAD_FAILURE = &H80041013
    WBEM_E_INITIALIZATION_FAILURE = &H80041014
    WBEM_E_TRANSPORT_FAILURE = &H80041015
    WBEM_E_INVALID_OPERATION = &H80041016
    WBEM_E_INVALID_QUERY = &H80041017
    WBEM_E_INVALID_QUERY_TYPE = &H80041018
    WBEM_E_ALREADY_EXISTS = &H80041019
    WBEM_E_OVERRIDE_NOT_ALLOWED = &H8004101A
    WBEM_E_PROPAGATED_QUALIFIER = &H8004101B
    WBEM_E_PROPAGATED_PROPERTY = &H8004101C
    WBEM_E_UNEXPECTED = &H8004101D
    WBEM_E_ILLEGAL_OPERATION = &H8004101E
    WBEM_E_CANNOT_BE_KEY = &H8004101F
    WBEM_E_INCOMPLETE_CLASS = &H80041020
    WBEM_E_INVALID_SYNTAX = &H80041021
    WBEM_E_NONDECORATED_OBJECT = &H80041022
    WBEM_E_READ_ONLY = &H80041023
    WBEM_E_PROVIDER_NOT_CAPABLE = &H80041024
    WBEM_E_CLASS_HAS_CHILDREN = &H80041025
    WBEM_E_CLASS_HAS_INSTANCES = &H80041026
    WBEM_E_QUERY_NOT_IMPLEMENTED = &H80041027
    WBEM_E_ILLEGAL_NULL = &H80041028
    WBEM_E_INVALID_QUALIFIER_TYPE = &H80041029
    WBEM_E_INVALID_PROPERTY_TYPE = &H8004102A
    WBEM_E_VALUE_OUT_OF_RANGE = &H8004102B
    WBEM_E_CANNOT_BE_SINGLETON = &H8004102C
    WBEM_E_INVALID_CIM_TYPE = &H8004102D
    WBEM_E_INVALID_METHOD = &H8004102E
    WBEM_E_INVALID_METHOD_PARAMETERS = &H8004102F
    WBEM_E_SYSTEM_PROPERTY = &H80041030
    WBEM_E_INVALID_PROPERTY = &H80041031
    WBEM_E_CALL_CANCELLED = &H80041032
    WBEM_E_SHUTTING_DOWN = &H80041033
    WBEM_E_PROPAGATED_METHOD = &H80041034
    WBEM_E_UNSUPPORTED_PARAMETER = &H80041035
    WBEM_E_MISSING_PARAMETER_ID = &H80041036
    WBEM_E_INVALID_PARAMETER_ID = &H80041037
    WBEM_E_NONCONSECUTIVE_PARAMETER_IDS = &H80041038
    WBEM_E_PARAMETER_ID_ON_RETVAL = &H80041039
    WBEM_E_INVALID_OBJECT_PATH = &H8004103A
    WBEM_E_OUT_OF_DISK_SPACE = &H8004103B
    WBEM_E_BUFFER_TOO_SMALL = &H8004103C
    WBEM_E_UNSUPPORTED_PUT_EXTENSION = &H8004103D
    WBEM_E_UNKNOWN_OBJECT_TYPE = &H8004103E
    WBEM_E_UNKNOWN_PACKET_TYPE = &H8004103F
    WBEM_E_MARSHAL_VERSION_MISMATCH = &H80041040
    WBEM_E_MARSHAL_INVALID_SIGNATURE = &H80041041
    WBEM_E_INVALID_QUALIFIER = &H80041042
    WBEM_E_INVALID_DUPLICATE_PARAMETER = &H80041043
    WBEM_E_TOO_MUCH_DATA = &H80041044
    WBEM_E_SERVER_TOO_BUSY = &H80041045
    WBEM_E_INVALID_FLAVOR = &H80041046
    WBEM_E_CIRCULAR_REFERENCE = &H80041047
    WBEM_E_UNSUPPORTED_CLASS_UPDATE = &H80041048
    WBEM_E_CANNOT_CHANGE_KEY_INHERITANCE = &H80041049
    WBEM_E_CANNOT_CHANGE_INDEX_INHERITANCE = &H80041050
    WBEM_E_TOO_MANY_PROPERTIES = &H80041051
    WBEM_E_UPDATE_TYPE_MISMATCH = &H80041052
    WBEM_E_UPDATE_OVERRIDE_NOT_ALLOWED = &H80041053
    WBEM_E_UPDATE_PROPAGATED_METHOD = &H80041054
    WBEM_E_METHOD_NOT_IMPLEMENTED = &H80041055
    WBEM_E_METHOD_DISABLED = &H80041056
    WBEM_E_REFRESHER_BUSY = &H80041057
    WBEM_E_UNPARSABLE_QUERY = &H80041058
    WBEM_E_NOT_EVENT_CLASS = &H80041059
    WBEM_E_MISSING_GROUP_WITHIN = &H8004105A
    WBEM_E_MISSING_AGGREGATION_LIST = &H8004105B
    WBEM_E_PROPERTY_NOT_AN_OBJECT = &H8004105C
    WBEM_E_AGGREGATING_BY_OBJECT = &H8004105D
    WBEM_E_UNINTERPRETABLE_PROVIDER_QUERY = &H8004105F
    WBEM_E_BACKUP_RESTORE_WINMGMT_RUNNING = &H80041060
    WBEM_E_QUEUE_OVERFLOW = &H80041061
    WBEM_E_PRIVILEGE_NOT_HELD = &H80041062
    WBEM_E_INVALID_OPERATOR = &H80041063
    WBEM_E_LOCAL_CREDENTIALS = &H80041064
    WBEM_E_CANNOT_BE_ABSTRACT = &H80041065
    WBEM_E_AMENDED_OBJECT = &H80041066
    WBEM_E_CLIENT_TOO_SLOW = &H80041067
    WBEM_E_NULL_SECURITY_DESCRIPTOR = &H80041068
    WBEM_E_TIMED_OUT = &H80041069
    WBEM_E_INVALID_ASSOCIATION = &H8004106A
    WBEM_E_AMBIGUOUS_OPERATION = &H8004106B
    WBEM_E_QUOTA_VIOLATION = &H8004106C
    WBEM_E_RESERVED_001 = &H8004106D
    WBEM_E_RESERVED_002 = &H8004106E
    WBEM_E_UNSUPPORTED_LOCALE = &H8004106F
    WBEM_E_HANDLE_OUT_OF_DATE = &H80041070
    WBEM_E_CONNECTION_FAILED = &H80041071
    WBEM_E_INVALID_HANDLE_REQUEST = &H80041072
    WBEM_E_PROPERTY_NAME_TOO_WIDE = &H80041073
    WBEM_E_CLASS_NAME_TOO_WIDE = &H80041074
    WBEM_E_METHOD_NAME_TOO_WIDE = &H80041075
    WBEM_E_QUALIFIER_NAME_TOO_WIDE = &H80041076
    WBEM_E_RERUN_COMMAND = &H80041077
    WBEM_E_DATABASE_VER_MISMATCH = &H80041078
    WBEM_E_VETO_DELETE = &H80041079
    WBEM_E_VETO_PUT = &H8004107A
    WBEM_E_INVALID_LOCALE = &H80041080
    WBEM_E_PROVIDER_SUSPENDED = &H80041081
    WBEM_E_SYNCHRONIZATION_REQUIRED = &H80041082
    WBEM_E_NO_SCHEMA = &H80041083
    WBEM_E_PROVIDER_ALREADY_REGISTERED = &H80041084
    WBEM_E_PROVIDER_NOT_REGISTERED = &H80041085
    WBEM_E_FATAL_TRANSPORT_ERROR = &H80041086
    WBEM_E_ENCRYPTED_CONNECTION_REQUIRED = &H80041087
    WBEM_E_PROVIDER_TIMED_OUT = &H80041088
    WBEM_E_NO_KEY = &H80041089
    WBEM_E_PROVIDER_DISABLED = &H8004108a
    WBEMESS_E_REGISTRATION_TOO_BROAD = &H80042001
    WBEMESS_E_REGISTRATION_TOO_PRECISE = &H80042002
    WBEMESS_E_AUTHZ_NOT_PRIVILEGED = &H80042003
    WBEMMOF_E_EXPECTED_QUALIFIER_NAME = &H80044001
    WBEMMOF_E_EXPECTED_SEMI = &H80044002
    WBEMMOF_E_EXPECTED_OPEN_BRACE = &H80044003
    WBEMMOF_E_EXPECTED_CLOSE_BRACE = &H80044004
    WBEMMOF_E_EXPECTED_CLOSE_BRACKET = &H80044005
    WBEMMOF_E_EXPECTED_CLOSE_PAREN = &H80044006
    WBEMMOF_E_ILLEGAL_CONSTANT_VALUE = &H80044007
    WBEMMOF_E_EXPECTED_TYPE_IDENTIFIER = &H80044008
    WBEMMOF_E_EXPECTED_OPEN_PAREN = &H80044009
    WBEMMOF_E_UNRECOGNIZED_TOKEN = &H8004400A
    WBEMMOF_E_UNRECOGNIZED_TYPE = &H8004400B
    WBEMMOF_E_EXPECTED_PROPERTY_NAME = &H8004400C
    WBEMMOF_E_TYPEDEF_NOT_SUPPORTED = &H8004400D
    WBEMMOF_E_UNEXPECTED_ALIAS = &H8004400E
    WBEMMOF_E_UNEXPECTED_ARRAY_INIT = &H8004400F
    WBEMMOF_E_INVALID_AMENDMENT_SYNTAX = &H80044010
    WBEMMOF_E_INVALID_DUPLICATE_AMENDMENT = &H80044011
    WBEMMOF_E_INVALID_PRAGMA = &H80044012
    WBEMMOF_E_INVALID_NAMESPACE_SYNTAX = &H80044013
    WBEMMOF_E_EXPECTED_CLASS_NAME = &H80044014
    WBEMMOF_E_TYPE_MISMATCH = &H80044015
    WBEMMOF_E_EXPECTED_ALIAS_NAME = &H80044016
    WBEMMOF_E_INVALID_CLASS_DECLARATION = &H80044017
    WBEMMOF_E_INVALID_INSTANCE_DECLARATION = &H80044018
    WBEMMOF_E_EXPECTED_DOLLAR = &H80044019
    WBEMMOF_E_CIMTYPE_QUALIFIER = &H8004401A
    WBEMMOF_E_DUPLICATE_PROPERTY = &H8004401B
    WBEMMOF_E_INVALID_NAMESPACE_SPECIFICATION = &H8004401C
    WBEMMOF_E_OUT_OF_RANGE = &H8004401D
    WBEMMOF_E_INVALID_FILE = &H8004401E
    WBEMMOF_E_ALIASES_IN_EMBEDDED = &H8004401F
    WBEMMOF_E_NULL_ARRAY_ELEM = &H80044020
    WBEMMOF_E_DUPLICATE_QUALIFIER = &H80044021
    WBEMMOF_E_EXPECTED_FLAVOR_TYPE = &H80044022
    WBEMMOF_E_INCOMPATIBLE_FLAVOR_TYPES = &H80044023
    WBEMMOF_E_MULTIPLE_ALIASES = &H80044024
    WBEMMOF_E_INCOMPATIBLE_FLAVOR_TYPES2 = &H80044025
    WBEMMOF_E_NO_ARRAYS_RETURNED = &H80044026
    WBEMMOF_E_MUST_BE_IN_OR_OUT = &H80044027
    WBEMMOF_E_INVALID_FLAGS_SYNTAX = &H80044028
    WBEMMOF_E_EXPECTED_BRACE_OR_BAD_TYPE = &H80044029
    WBEMMOF_E_UNSUPPORTED_CIMV22_QUAL_VALUE = &H8004402A
    WBEMMOF_E_UNSUPPORTED_CIMV22_DATA_TYPE = &H8004402B
    WBEMMOF_E_INVALID_DELETEINSTANCE_SYNTAX = &H8004402C
    WBEMMOF_E_INVALID_QUALIFIER_SYNTAX = &H8004402D
    WBEMMOF_E_QUALIFIER_USED_OUTSIDE_SCOPE = &H8004402E
    WBEMMOF_E_ERROR_CREATING_TEMP_FILE = &H8004402F
    WBEMMOF_E_ERROR_INVALID_INCLUDE_FILE = &H80044030
    WBEMMOF_E_INVALID_DELETECLASS_SYNTAX = &H80044031
End Enum

Public Enum WMI_OBJ_TEXT
    WMI_OBJ_TEXT_CIM_DTD_2_0 = 1 ' The DTD that corresponds to CIM DTD Version 2.0
    WMI_OBJ_TEXT_WMI_DTD_2_0 = 2 ' The WMI DTD that corresponds to CIM DTD Version 2.0
    WMI_OBJ_TEXT_WMI_EXT1 = 3 ' Reserved for WMI future use
    WMI_OBJ_TEXT_WMI_EXT2 = 4 ' Reserved for WMI future use
    WMI_OBJ_TEXT_WMI_EXT3 = 5 ' Reserved for WMI future use
    WMI_OBJ_TEXT_WMI_EXT4 = 6 ' Reserved for WMI future use
    WMI_OBJ_TEXT_WMI_EXT5 = 7 ' Reserved for WMI future use
    WMI_OBJ_TEXT_WMI_EXT6 = 8 ' Reserved for WMI future use
    WMI_OBJ_TEXT_WMI_EXT7 = 9 ' Reserved for WMI future use
    WMI_OBJ_TEXT_WMI_EXT8 = 10 ' Reserved for WMI future use
    WMI_OBJ_TEXT_WMI_EXT9 = 11 ' Reserved for WMI future use
    WMI_OBJ_TEXT_WMI_EXT10 = 12 ' Reserved for WMI future use
    WMI_OBJ_TEXT_LAST = 13
End Enum

Public Type WBEM_COMPILE_STATUS_INFO
    lPhaseError As Long ' 0, 1, 2, or 3 matching current return value
    hRes As Long ' Actual error
    ObjectNum As Long
    FirstLine As Long
    LastLine As Long
    dwOutFlags As Long
End Type

Public Enum WBEM_COMPILER_OPTIONS
    WBEM_FLAG_CHECK_ONLY = &H1
    WBEM_FLAG_AUTORECOVER = &H2
    WBEM_FLAG_WMI_CHECK = &H4
    WBEM_FLAG_CONSOLE_PRINT = &H8
    WBEM_FLAG_DONT_ADD_TO_LIST = &H10
    WBEM_FLAG_SPLIT_FILES = &H20
    WBEM_FLAG_STORE_FILE = &H100
End Enum

Public Enum WBEM_CONNECT_OPTIONS
    WBEM_FLAG_CONNECT_REPOSITORY_ONLY = &H40
    WBEM_FLAG_CONNECT_USE_MAX_WAIT = &H80
    WBEM_FLAG_CONNECT_PROVIDERS = &H100
End Enum

Public Enum WBEM_UNSECAPP_FLAG_TYPE
    WBEM_FLAG_UNSECAPP_DEFAULT_CHECK_ACCESS = 0
    WBEM_FLAG_UNSECAPP_CHECK_ACCESS = 1
    WBEM_FLAG_UNSECAPP_DONT_CHECK_ACCESS = 2
End Enum

Public Enum WBEM_INFORMATION_FLAG_TYPE
    WBEM_FLAG_SHORT_NAME = &H1
    WBEM_FLAG_LONG_NAME = &H2
End Enum


Public Function CLSID_WbemLocator() As UUID
'{4590f811-1d3a-11d0-891f-00aa004b2e24}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4590f811, CInt(&H1d3a), CInt(&H11d0), &H89, &H1f, &H00, &Haa, &H00, &H4b, &H2e, &H24)
 CLSID_WbemLocator = iid
End Function
Public Function CLSID_WbemContext() As UUID
'{674B6698-EE92-11d0-AD71-00C04FD8FDFF}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H674B6698, CInt(&HEE92), CInt(&H11d0), &HAD, &H71, &H00, &HC0, &H4F, &HD8, &HFD, &HFF)
 CLSID_WbemContext = iid
End Function
Public Function CLSID_UnsecuredApartment() As UUID
'{49bd2028-1523-11d1-ad79-00c04fd8fdff}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H49bd2028, CInt(&H1523), CInt(&H11d1), &Had, &H79, &H00, &Hc0, &H4f, &Hd8, &Hfd, &Hff)
 CLSID_UnsecuredApartment = iid
End Function
Public Function CLSID_WbemClassObject() As UUID
'{9A653086-174F-11d2-B5F9-00104B703EFD}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9A653086, CInt(&H174F), CInt(&H11d2), &HB5, &HF9, &H00, &H10, &H4B, &H70, &H3E, &HFD)
 CLSID_WbemClassObject = iid
End Function
Public Function CLSID_MofCompiler() As UUID
'{6daf9757-2e37-11d2-aec9-00c04fb68820}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6daf9757, CInt(&H2e37), CInt(&H11d2), &Hae, &Hc9, &H00, &Hc0, &H4f, &Hb6, &H88, &H20)
 CLSID_MofCompiler = iid
End Function
Public Function CLSID_WbemStatusCodeText() As UUID
'{eb87e1bd-3233-11d2-aec9-00c04fb68820}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Heb87e1bd, CInt(&H3233), CInt(&H11d2), &Hae, &Hc9, &H00, &Hc0, &H4f, &Hb6, &H88, &H20)
 CLSID_WbemStatusCodeText = iid
End Function
Public Function CLSID_WbemBackupRestore() As UUID
'{C49E32C6-BC8B-11d2-85D4-00105A1F8304}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HC49E32C6, CInt(&HBC8B), CInt(&H11d2), &H85, &HD4, &H00, &H10, &H5A, &H1F, &H83, &H04)
 CLSID_WbemBackupRestore = iid
End Function
Public Function CLSID_WbemRefresher() As UUID
'{c71566f2-561e-11d1-ad87-00c04fd8fdff}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hc71566f2, CInt(&H561e), CInt(&H11d1), &Had, &H87, &H00, &Hc0, &H4f, &Hd8, &Hfd, &Hff)
 CLSID_WbemRefresher = iid
End Function
Public Function CLSID_WbemObjectTextSrc() As UUID
'{8D1C559D-84F0-4bb3-A7D5-56A7435A9BA6}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H8D1C559D, CInt(&H84F0), CInt(&H4bb3), &HA7, &HD5, &H56, &HA7, &H43, &H5A, &H9B, &HA6)
 CLSID_WbemObjectTextSrc = iid
End Function


Public Function IID_IWbemClassObject() As UUID
'{dc12a681-737f-11cf-884d-00aa004b2e24}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hdc12a681, CInt(&H737f), CInt(&H11cf), &H88, &H4d, &H00, &Haa, &H00, &H4b, &H2e, &H24)
 IID_IWbemClassObject = iid
End Function
Public Function IID_IWbemQualifierSet() As UUID
'{dc12a680-737f-11cf-884d-00aa004b2e24}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hdc12a680, CInt(&H737f), CInt(&H11cf), &H88, &H4d, &H00, &Haa, &H00, &H4b, &H2e, &H24)
 IID_IWbemQualifierSet = iid
End Function
Public Function IID_IWbemLocator() As UUID
'{dc12a687-737f-11cf-884d-00aa004b2e24}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hdc12a687, CInt(&H737f), CInt(&H11cf), &H88, &H4d, &H00, &Haa, &H00, &H4b, &H2e, &H24)
 IID_IWbemLocator = iid
End Function
Public Function IID_IWbemObjectSink() As UUID
'{7c857801-7381-11cf-884d-00aa004b2e24}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7c857801, CInt(&H7381), CInt(&H11cf), &H88, &H4d, &H00, &Haa, &H00, &H4b, &H2e, &H24)
 IID_IWbemObjectSink = iid
End Function
Public Function IID_IWbemObjectSinkEx() As UUID
'{e7d35cfa-348b-485e-b524-252725d697ca}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &He7d35cfa, CInt(&H348b), CInt(&H485e), &Hb5, &H24, &H25, &H27, &H25, &Hd6, &H97, &Hca)
 IID_IWbemObjectSinkEx = iid
End Function
Public Function IID_IEnumWbemClassObject() As UUID
'{027947e1-d731-11ce-a357-000000000001}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H027947e1, CInt(&Hd731), CInt(&H11ce), &Ha3, &H57, &H00, &H00, &H00, &H00, &H00, &H01)
 IID_IEnumWbemClassObject = iid
End Function
Public Function IID_IWbemContext() As UUID
'{44aca674-e8fc-11d0-a07c-00c04fb68820}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H44aca674, CInt(&He8fc), CInt(&H11d0), &Ha0, &H7c, &H00, &Hc0, &H4f, &Hb6, &H88, &H20)
 IID_IWbemContext = iid
End Function
Public Function IID_IWbemCallResult() As UUID
'{44aca675-e8fc-11d0-a07c-00c04fb68820}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H44aca675, CInt(&He8fc), CInt(&H11d0), &Ha0, &H7c, &H00, &Hc0, &H4f, &Hb6, &H88, &H20)
 IID_IWbemCallResult = iid
End Function
Public Function IID_IWbemServices() As UUID
'{9556dc99-828c-11cf-a37e-00aa003240c7}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9556dc99, CInt(&H828c), CInt(&H11cf), &Ha3, &H7e, &H00, &Haa, &H00, &H32, &H40, &Hc7)
 IID_IWbemServices = iid
End Function
Public Function IID_IWbemShutdown() As UUID
'{b7b31df9-d515-11d3-a11c-00105a1f515a}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb7b31df9, CInt(&Hd515), CInt(&H11d3), &Ha1, &H1c, &H00, &H10, &H5a, &H1f, &H51, &H5a)
 IID_IWbemShutdown = iid
End Function
Public Function IID_IWbemObjectTextSrc() As UUID
'{bfbf883a-cad7-11d3-a11b-00105a1f515a}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hbfbf883a, CInt(&Hcad7), CInt(&H11d3), &Ha1, &H1b, &H00, &H10, &H5a, &H1f, &H51, &H5a)
 IID_IWbemObjectTextSrc = iid
End Function
Public Function IID_IWbemObjectAccess() As UUID
'{49353c9a-516b-11d1-aea6-00c04fb68820}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H49353c9a, CInt(&H516b), CInt(&H11d1), &Hae, &Ha6, &H00, &Hc0, &H4f, &Hb6, &H88, &H20)
 IID_IWbemObjectAccess = iid
End Function
Public Function IID_IMofCompiler() As UUID
'{6daf974e-2e37-11d2-aec9-00c04fb68820}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6daf974e, CInt(&H2e37), CInt(&H11d2), &Hae, &Hc9, &H00, &Hc0, &H4f, &Hb6, &H88, &H20)
 IID_IMofCompiler = iid
End Function
Public Function IID_IUnsecuredApartment() As UUID
'{1cfaba8c-1523-11d1-ad79-00c04fd8fdff}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1cfaba8c, CInt(&H1523), CInt(&H11d1), &Had, &H79, &H00, &Hc0, &H4f, &Hd8, &Hfd, &Hff)
 IID_IUnsecuredApartment = iid
End Function
Public Function IID_IWbemUnsecuredApartment() As UUID
'{31739d04-3471-4cf4-9a7c-57a44ae71956}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H31739d04, CInt(&H3471), CInt(&H4cf4), &H9a, &H7c, &H57, &Ha4, &H4a, &He7, &H19, &H56)
 IID_IWbemUnsecuredApartment = iid
End Function
Public Function IID_IWbemStatusCodeText() As UUID
'{eb87e1bc-3233-11d2-aec9-00c04fb68820}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Heb87e1bc, CInt(&H3233), CInt(&H11d2), &Hae, &Hc9, &H00, &Hc0, &H4f, &Hb6, &H88, &H20)
 IID_IWbemStatusCodeText = iid
End Function
Public Function IID_IWbemBackupRestore() As UUID
'{C49E32C7-BC8B-11d2-85D4-00105A1F8304}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HC49E32C7, CInt(&HBC8B), CInt(&H11d2), &H85, &HD4, &H00, &H10, &H5A, &H1F, &H83, &H04)
 IID_IWbemBackupRestore = iid
End Function
Public Function IID_IWbemBackupRestoreEx() As UUID
'{A359DEC5-E813-4834-8A2A-BA7F1D777D76}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HA359DEC5, CInt(&HE813), CInt(&H4834), &H8A, &H2A, &HBA, &H7F, &H1D, &H77, &H7D, &H76)
 IID_IWbemBackupRestoreEx = iid
End Function
Public Function IID_IWbemRefresher() As UUID
'{49353c99-516b-11d1-aea6-00c04fb68820}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H49353c99, CInt(&H516b), CInt(&H11d1), &Hae, &Ha6, &H00, &Hc0, &H4f, &Hb6, &H88, &H20)
 IID_IWbemRefresher = iid
End Function
Public Function IID_IWbemHiPerfEnum() As UUID
'{2705C288-79AE-11d2-B348-00105A1F8177}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2705C288, CInt(&H79AE), CInt(&H11d2), &HB3, &H48, &H00, &H10, &H5A, &H1F, &H81, &H77)
 IID_IWbemHiPerfEnum = iid
End Function
Public Function IID_IWbemConfigureRefresher() As UUID
'{49353c92-516b-11d1-aea6-00c04fb68820}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H49353c92, CInt(&H516b), CInt(&H11d1), &Hae, &Ha6, &H00, &Hc0, &H4f, &Hb6, &H88, &H20)
 IID_IWbemConfigureRefresher = iid
End Function



End Module