
'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

/*
DirectSound :: Ported from:

//annot. mossSOFT: I removed any helpstrings!

//[
//    uuid(93E767C8-1E6B-46CC-B452-3531146574EA),
//    version(1.0),
//    //helpstring("DirectSound8 for Visual Basic 6.0 type library by The trick v1.00"), 
//    helpstring("DirectSound8 for VB6 type library by The trick/mossSOFT v1.1"),
//]
//library DSVBLib {
//
//    importlib("stdole2.tlb");


*/



[InterfaceId("D616F352-D622-11CE-AAC5-0020AF0B99A3")]
[OleAutomation(False)]
Interface IDirectSoundFXGargle Extends stdole.IUnknown
    Sub SetAllParameters(ByRef pDsGargle As DSFXGargle)
    Sub GetAllParameters(ByRef pDsGargle As DSFXGargle)
End Interface

[InterfaceId("C03CA9FE-FE90-4204-8078-82334CD177DA")]
[OleAutomation(False)]
Interface IDirectSoundFXParamEq Extends stdole.IUnknown
    Sub SetAllParameters(ByRef pDsParamEq As DSFXParamEq)
    Sub GetAllParameters(ByRef pDsParamEq As DSFXParamEq)
End Interface

[InterfaceId("4B166A6A-0D66-43F3-80E3-EE6280DEE1A4")]
[OleAutomation(False)]
Interface IDirectSoundFXI3DL2Reverb Extends stdole.IUnknown
    Sub SetAllParameters(ByRef pDsI3DL2Reverb As DSFXI3DL2Reverb)
    Sub GetAllParameters(ByRef pDsI3DL2Reverb As DSFXI3DL2Reverb)
    Sub SetPreset(ByVal Preset As DSFX_I3DL2_ROOM)
    Function GetPreset() As DSFX_I3DL2_ROOM
    Sub SetQuality(ByVal lQuality As Long)
    Function GetQuality() As Long
End Interface

[InterfaceId("46858C3A-0DC6-45E3-B760-D4EEF16CB325")]
[OleAutomation(False)]
Interface IDirectSoundFXWavesReverb Extends stdole.IUnknown
    Sub SetAllParameters(ByRef pDsWavesReverb As DSFXWavesReverb)
    Sub GetAllParameters(ByRef pDsWavesReverb As DSFXWavesReverb)
End Interface

[InterfaceId("4BBD1154-62F6-4E2C-A15C-D3B6C417F7A0")]
[OleAutomation(False)]
Interface IDirectSoundFXCompressor Extends stdole.IUnknown
    Sub SetAllParameters(ByRef pDsCompressor As DSFXCompressor)
    Sub GetAllParameters(ByRef pDsCompressor As DSFXCompressor)
End Interface

[InterfaceId("8ECF4326-455F-4D8B-BDA9-8D5D3E9E3E0B")]
[OleAutomation(False)]
Interface IDirectSoundFXDistortion Extends stdole.IUnknown
    Sub SetAllParameters(ByRef pDsDistortion As DSFXDistortion)
    Sub GetAllParameters(ByRef pDsDistortion As DSFXDistortion)
End Interface

[InterfaceId("8BD28EDF-50DB-4E92-A2BD-445488D1ED42")]
[OleAutomation(False)]
Interface IDirectSoundFXEcho Extends stdole.IUnknown
    Sub SetAllParameters(ByRef pDsEcho As DSFXEcho)
    Sub GetAllParameters(ByRef pDsEcho As DSFXEcho)
End Interface

[InterfaceId("903E9878-2C92-4072-9B2C-EA68F5396783")]
[OleAutomation(False)]
Interface IDirectSoundFXFlanger Extends stdole.IUnknown
    Sub SetAllParameters(ByRef pDsFlanger As DSFXFlanger)
    Sub GetAllParameters(ByRef pDsFlanger As DSFXFlanger)
End Interface

[InterfaceId("880842E3-145F-43E6-A934-A71806E50547")]
[OleAutomation(False)]
Interface IDirectSoundFXChorus Extends stdole.IUnknown
    Sub SetAllParameters(ByRef pFxChorus As DSFXChorus)
    Sub GetAllParameters(ByRef pFxChorus As DSFXChorus)
End Interface

[InterfaceId("279AFA83-4981-11CE-A521-0020AF0BE560")]
[OleAutomation(False)]
Interface IDirectSound Extends stdole.IUnknown
    Sub CreateSoundBuffer(ByRef lpcDSBufferDesc As DSBUFFERDESC, ByRef lplpDirectSoundBuffer As IDirectSoundBuffer, ByRef pUnkOuter As Any)
    Sub GetCaps(ByRef pDSCaps As DSCAPS)
    Function DuplicateSoundBuffer(ByVal pDSBufferOriginal As IDirectSoundBuffer) As IDirectSoundBuffer
    Sub SetCooperativeLevel(ByVal hwnd As LongPtr, ByVal dwLevel As DSSCL_CONST)
    Sub Compact()
    Sub GetSpeakerConfig(ByRef pdwSpeakerConfig As DSSPEAKER_CONST)
    Sub SetSpeakerConfig(ByVal dwSpeakerConfig As DSSPEAKER_CONST)
    Sub Initialize(ByRef pcGuidDevice As Any)
End Interface

[InterfaceId("279AFA85-4981-11CE-A521-0020AF0BE560")]
[OleAutomation(False)]
[Description("Applications use the methods of the IDirectSoundBuffer interface to create DirectSoundBuffer objects and set up the environment.")]
Interface IDirectSoundBuffer Extends stdole.IUnknown
    Sub GetCaps(ByRef pDSBufferCaps As DSBCAPS)
    Sub GetCurrentPosition(ByRef pdwCurrentPlayCursor As Long, ByRef pdwCurrentWriteCursor As Long)
    Sub GetFormat(ByRef pwfxFormat As Any, ByVal dwSizeAllocated As Long, ByRef pdwSizeWritten As Long)
    Function GetVolume() As Long
    Function GetPan() As Long
    Function GetFrequency() As Long
    Function GetStatus() As DSBSTATUS_CONST
    Sub Initialize(ByVal DirectSound As IDirectSound, ByRef BufferDesc As DSBUFFERDESC)
    Sub Lock(ByVal dwOffset As Long, ByVal dwBytes As Long, ByRef ppvAudioPtr1 As Any, ByRef pdwAudioBytes1 As Long, ByRef ppvAudioPtr2 As Any, ByRef pdwAudioBytes2 As Long, ByVal dwFlags As DSBLOCK_CONST)
    Sub Play(ByVal dwReserved1 As Long, ByVal dwPriority As Long, ByVal dwFlags As DSBPLAY_CONST)
    Sub SetCurrentPosition(ByVal dwNewPosition As Long)
    Sub SetFormat(ByRef pcfxFormat As WAVEFORMATEX)
    Sub SetVolume(ByVal lVolume As Long)
    Sub SetPan(ByVal lPan As Long)
    Sub SetFrequency(ByVal dwFrequency As Long)
    Sub Stop()
    Sub Unlock(ByVal pvAudioPtr1 As Long, ByVal dwAudioBytes1 As Long, ByVal pvAudioPtr2 As Long, ByVal dwAudioBytes2 As Long)
    Sub Restore()
End Interface

[InterfaceId("C50A7E93-F395-4834-9EF6-7FA99DE50966")]
[OleAutomation(False)]
Interface IDirectSound8 Extends IDirectSound
    Sub VerifyCertification(ByRef pdwCertified As DSCERTIFICATION_CONST)
End Interface

[InterfaceId("6825A449-7524-4D82-920F-50E36AB3AB1E")]
[OleAutomation(False)]
Interface IDirectSoundBuffer8 Extends IDirectSoundBuffer
    Sub SetFX(ByVal dwEffectsCount As Long, ByRef pDSFXDesc As Any, ByRef pdwResultCodes As Any)
    Sub AcquireResources(ByVal dwFlags As DSBPLAY_CONST, ByVal dwEffectsCount As Long, ByRef pdwResultCodes As Any)
    Function GetObjectInPath(ByRef rguidObject As UUID, ByVal dwIndex As Long, ByRef rguidInterface As UUID) As IUnknown
End Interface

[InterfaceId("279AFA86-4981-11CE-A521-0020AF0BE560")]
[OleAutomation(False)]
Interface IDirectSound3DBuffer Extends stdole.IUnknown
    Sub GetAllParameters(ByRef pDs3dBuffer As DS3DBUFFER)
    Sub GetConeAngles(ByRef pdwInsideConeAngle As Long, ByRef pdwOutsideConeAngle As Long)
    Sub GetConeOrientation(ByRef pvOrientation As D3DVECTOR)
    Function GetConeOutsideVolume() As Long
    Function GetMaxDistance() As Single
    Function GetMinDistance() As Single
    Function GetMode() As DS3DMODE_CONST
    Sub GetPosition(ByRef pvPosition As D3DVECTOR)
    Sub GetVelocity(ByRef pvVelocity As D3DVECTOR)
    Sub SetAllParameters(ByRef pcDs3dBuffer As DS3DBUFFER, ByVal dwApply As DS3DAPPLY_CONST)
    Sub SetConeAngles(ByVal pdwInsideConeAngle As Long, ByVal pdwOutsideConeAngle As Long, ByVal dwApply As DS3DAPPLY_CONST)
    Sub SetConeOrientation(ByVal x As Single, ByVal y As Single, ByVal z As Single, ByVal dwApply As DS3DAPPLY_CONST)
    Sub SetConeOutsideVolume(ByVal lConeOutsideVolume As Long, ByVal dwApply As DS3DAPPLY_CONST)
    Sub SetMaxDistance(ByVal flMaxDistance As Single, ByVal dwApply As DS3DAPPLY_CONST)
    Sub SetMinDistance(ByVal flMinDistance As Single, ByVal dwApply As DS3DAPPLY_CONST)
    Sub SetMode(ByVal dwMode As DS3DMODE_CONST, ByVal dwApply As DS3DAPPLY_CONST)
    Sub SetPosition(ByVal x As Single, ByVal y As Single, ByVal z As Single, ByVal dwApply As DS3DAPPLY_CONST)
    Sub SetVelocity(ByVal x As Single, ByVal y As Single, ByVal z As Single, ByVal dwApply As DS3DAPPLY_CONST)
End Interface

[InterfaceId("279AFA84-4981-11CE-A521-0020AF0BE560")]
[OleAutomation(False)]
Interface IDirectSound3DListener Extends stdole.IUnknown
    Sub GetAllParameters(ByRef pListener As DS3DLISTENER)
    Function GetDistanceFactor() As Single
    Function GetDopplerFactor() As Single
    Sub GetOrientation(ByRef pvOrientFront As D3DVECTOR, ByRef pvOrientTop As D3DVECTOR)
    Sub GetPosition(ByRef pvPosition As D3DVECTOR)
    Sub GetRolloffFactor(ByRef pflRolloffFactor As D3DVECTOR)
    Sub GetVelocity(ByRef pflRolloffFactor As D3DVECTOR)
    Sub SetAllParameters(ByRef pcDs3dBuffer As DS3DLISTENER, ByVal dwApply As DS3DAPPLY_CONST)
    Sub SetDistanceFactor(ByVal flDistanceFactor As Single, ByVal dwApply As DS3DAPPLY_CONST)
    Sub SetDopplerFactor(ByVal flDopplerFactor As Single, ByVal dwApply As DS3DAPPLY_CONST)
    Sub SetOrientation(ByVal xFront As Single, ByVal yFront As Single, ByVal zFront As Single, ByVal xTop As Single, ByVal yTop As Single, ByVal zTop As Single, ByVal dwApply As DS3DAPPLY_CONST)
    Sub SetPosition(ByVal x As Single, ByVal y As Single, ByVal z As Single, ByVal dwApply As DS3DAPPLY_CONST)
    Sub SetRolloffFactor(ByVal flRolloffFactor As Single, ByVal dwApply As DS3DAPPLY_CONST)
    Sub SetVelocity(ByVal x As Single, ByVal y As Single, ByVal z As Single, ByVal dwApply As DS3DAPPLY_CONST)
    Sub CommitDeferredSettings()
End Interface

[InterfaceId("B0210781-89CD-11D0-AF08-00A0C925CD16")]
[OleAutomation(False)]
Interface IDirectSoundCapture Extends stdole.IUnknown
    Sub CreateCaptureBuffer(ByRef pcDSCBufferDesc As DSCBUFFERDESC, ByRef ppDSCBuffer As IDirectSoundCaptureBuffer, ByVal pUnkOuter As IUnknown)
    Sub GetCaps(ByRef pDSCCaps As DSCCAPS)
    Sub Initialize(ByRef pcGuidDevice As Any)
End Interface

[InterfaceId("B0210782-89CD-11D0-AF08-00A0C925CD16")]
[OleAutomation(False)]
Interface IDirectSoundCaptureBuffer Extends stdole.IUnknown
    Sub GetCaps(ByRef pDSCBCaps As DSCCAPS)
    Sub GetCurrentPosition(ByRef pdwCapturePosition As Any, ByRef pdwReadPosition As Long)
    Sub GetFormat(ByRef pwfxFormat As Any, ByVal dwSizeAllocated As Long, ByRef pdwSizeWritten As Long)
    Function GetStatus() As DSCBSTATUS_CONST
    Sub Initialize(ByVal pDirectSoundCapture As IDirectSoundCapture, ByRef pcDSCBufferDesc As DSCBUFFERDESC)
    Sub Lock(ByVal dwOffset As Long, ByVal dwBytes As Long, ByRef ppvAudioPtr1 As LongPtr, ByRef pdwAudioBytes1 As Long, ByRef ppvAudioPtr2 As LongPtr, ByRef pdwAudioBytes2 As Long, ByVal dwFlags As DSCBLOCK_CONST)
    Sub Start(ByVal dwOffset As DSCBSTART_CONST)
    Sub Stop()
    Sub Unlock(ByVal ppvAudioPtr1 As LongPtr, ByVal pdwAudioBytes1 As Long, ByVal ppvAudioPtr2 As LongPtr, ByVal pdwAudioBytes2 As Long)
End Interface

[InterfaceId("00990DF4-0DBB-4872-833E-6D303E80AEB6")]
[OleAutomation(False)]
Interface IDirectSoundCaptureBuffer8 Extends IDirectSoundCaptureBuffer
    Function GetObjectInPath(rguidObject As UUID, ByVal dwIndex As Long, rguidInterface As UUID) As IUnknown
    Sub GetFXStatus(ByVal dwFXCount As Long, ByRef pdwFXStatus As DSCFXR_CONST)
End Interface

[InterfaceId("B0210783-89CD-11D0-AF08-00A0C925CD16")]
[OleAutomation(False)]
Interface IDirectSoundNotify Extends stdole.IUnknown
    Sub SetNotificationPositions(ByVal dwPositionNotifies As Long, ByRef pcPositionNotifies As DSBPOSITIONNOTIFY)
End Interface

[CoClassId("47D4D946-62E8-11CF-93BC-444553540000")]
[COMCreatable]
CoClass DirectSound
    [Default] Interface IDirectSound
End CoClass

[CoClassId("3901CC3F-84B5-4FA4-BA35-AA8172B8A09B")]
[COMCreatable]
CoClass DirectSound8
    [Default] Interface IDirectSound8
End CoClass

[CoClassId("B0210780-89CD-11D0-AF08-00A0C925CD16")]
[COMCreatable]
CoClass DirectSoundCapture
    [Default] Interface IDirectSoundCapture
End CoClass

[CoClassId("E4BCAC13-7F99-4908-9A8E-74E3BF24B6E1")]
[COMCreatable]
CoClass DirectSoundCapture8
    [Default] Interface IDirectSoundCapture
End CoClass


Module wdDSound



    Public Enum DSBCAPS_CONST
        DSBCAPS_PRIMARYBUFFER = &H1
        DSBCAPS_STATIC = &H2
        DSBCAPS_LOCHARDWARE = &H4
        DSBCAPS_LOCSOFTWARE = &H8
        DSBCAPS_CTRL3D = &H10
        DSBCAPS_CTRLFREQUENCY = &H20
        DSBCAPS_CTRLPAN = &H40
        DSBCAPS_CTRLVOLUME = &H80
        DSBCAPS_CTRLPOSITIONNOTIFY = &H100
        DSBCAPS_CTRLFX = &H200
        DSBCAPS_STICKYFOCUS = &H4000
        DSBCAPS_GLOBALFOCUS = &H8000&
        DSBCAPS_GETCURRENTPOSITION2 = &H10000
        DSBCAPS_MUTE3DATMAXDISTANCE = &H20000
        DSBCAPS_LOCDEFER = &H40000
        DSBCAPS_TRUEPLAYPOSITION = &H80000
    End Enum

    Public Enum DSBSTATUS_CONST
        DSBSTATUS_PLAYING = &H1
        DSBSTATUS_BUFFERLOST = &H2
        DSBSTATUS_LOOPING = &H4
        DSBSTATUS_LOCHARDWARE = &H8
        DSBSTATUS_LOCSOFTWARE = &H10
        DSBSTATUS_TERMINATED = &H20
    End Enum
		
    Public Enum DSBLOCK_CONST
        DSBLOCK_FROMWRITECURSOR = &H1
        DSBLOCK_ENTIREBUFFER = &H2
    End Enum
	
    Public Enum DSBPLAY_CONST
        DSBPLAY_LOOPING = &H1
        DSBPLAY_LOCHARDWARE = &H2
        DSBPLAY_LOCSOFTWARE = &H4
        DSBPLAY_TERMINATEBY_TIME = &H8
        DSBPLAY_TERMINATEBY_DISTANCE = &H10
        DSBPLAY_TERMINATEBY_PRIORITY = &H20
    End Enum
	
    Public Enum DSCAPS_CONST
        DSCAPS_PRIMARYMONO = &H1
        DSCAPS_PRIMARYSTEREO = &H2
        DSCAPS_PRIMARY8BIT = &H4
        DSCAPS_PRIMARY16BIT = &H8
        DSCAPS_CONTINUOUSRATE = &H10
        DSCAPS_EMULDRIVER = &H20
        DSCAPS_CERTIFIED = &H40
        DSCAPS_SECONDARYMONO = &H100
        DSCAPS_SECONDARYSTEREO = &H200
        DSCAPS_SECONDARY8BIT = &H400
        DSCAPS_SECONDARY16BIT = &H800
    End Enum
	
    Public Enum DSSCL_CONST
        DSSCL_NORMAL = &H1
        DSSCL_PRIORITY = &H2
        DSSCL_EXCLUSIVE = &H3
        DSSCL_WRITEPRIMARY = &H4
    End Enum
	
    Public Enum DSSPEAKER_CONST
        DSSPEAKER_DIRECTOUT = &H0
        DSSPEAKER_HEADPHONE = &H1
        DSSPEAKER_MONO = &H2
        DSSPEAKER_QUAD = &H3
        DSSPEAKER_STEREO = &H4
        DSSPEAKER_SURROUND = &H5
        DSSPEAKER_5POINT1 = &H6
        DSSPEAKER_7POINT1 = &H7
        DSSPEAKER_7POINT1_SURROUND = &H8
        DSSPEAKER_5POINT1_SURROUND = &H9
        DSSPEAKER_7POINT1_WIDE = &H7
        DSSPEAKER_5POINT1_BACK = &H6
        DSSPEAKER_GEOMETRY_MIN = &H5
        DSSPEAKER_GEOMETRY_NARROW = &HA
        DSSPEAKER_GEOMETRY_WIDE = &H14
        DSSPEAKER_GEOMETRY_MAX = &HB4
    End Enum
	
    Public Enum DSCERTIFICATION_CONST
        DS_CERTIFIED = &H0
        DS_UNCERTIFIED = &H1
    End Enum
	
    Public Enum DS3DMODE_CONST
        DS3DMODE_NORMAL = &H0
        DS3DMODE_HEADRELATIVE = &H1
        DS3DMODE_DISABLE = &H2
    End Enum
	
    Public Enum DS3DAPPLY_CONST
        DS3D_IMMEDIATE = &H0
        DS3D_DEFERRE = &H1
    End Enum
	
    Public Enum DSCFXR_CONST
        DSCFXR_LOCHARDWARE = &H10
        DSCFXR_LOCSOFTWARE = &H20
    End Enum
	
    Public Enum DSCBCAPS_CONST
        DSCBCAPS_CTRLFX = &H200
        DSCBCAPS_WAVEMAPPED = &H80000000
    End Enum
	
    Public Enum DSCCAPS_CONST
        DSCCAPS_EMULDRIVER = &H20
        DSCCAPS_CERTIFIED = &H40
        DSCCAPS_MULTIPLECAPTURE = &H1
    End Enum
	
    Public Enum DSCBSTATUS_CONST
        DSCBSTATUS_CAPTURING = &H1
        DSCBSTATUS_LOOPING = &H2
    End Enum

    Public Enum WAVECAPS_FMT_FLAGS
        WAVE_INVALIDFORMAT = &H00000000 /* invalid format */
        WAVE_FORMAT_1M08 = &H00000001 /* 11.025 kHz, Mono, 8-bit */
        WAVE_FORMAT_1S08 = &H00000002 /* 11.025 kHz, Stereo, 8-bit */
        WAVE_FORMAT_1M16 = &H00000004 /* 11.025 kHz, Mono, 16-bit */
        WAVE_FORMAT_1S16 = &H00000008 /* 11.025 kHz, Stereo, 16-bit */
        WAVE_FORMAT_2M08 = &H00000010 /* 22.05 kHz, Mono, 8-bit */
        WAVE_FORMAT_2S08 = &H00000020 /* 22.05 kHz, Stereo, 8-bit */
        WAVE_FORMAT_2M16 = &H00000040 /* 22.05 kHz, Mono, 16-bit */
        WAVE_FORMAT_2S16 = &H00000080 /* 22.05 kHz, Stereo, 16-bit */
        WAVE_FORMAT_4M08 = &H00000100 /* 44.1 kHz, Mono, 8-bit */
        WAVE_FORMAT_4S08 = &H00000200 /* 44.1 kHz, Stereo, 8-bit */
        WAVE_FORMAT_4M16 = &H00000400 /* 44.1 kHz, Mono, 16-bit */
        WAVE_FORMAT_4S16 = &H00000800 /* 44.1 kHz, Stereo, 16-bit */
        WAVE_FORMAT_44M08 = &H00000100 /* 44.1 kHz, Mono, 8-bit */
        WAVE_FORMAT_44S08 = &H00000200 /* 44.1 kHz, Stereo, 8-bit */
        WAVE_FORMAT_44M16 = &H00000400 /* 44.1 kHz, Mono, 16-bit */
        WAVE_FORMAT_44S16 = &H00000800 /* 44.1 kHz, Stereo, 16-bit */
        WAVE_FORMAT_48M08 = &H00001000 /* 48 kHz, Mono, 8-bit */
        WAVE_FORMAT_48S08 = &H00002000 /* 48 kHz, Stereo, 8-bit */
        WAVE_FORMAT_48M16 = &H00004000 /* 48 kHz, Mono, 16-bit */
        WAVE_FORMAT_48S16 = &H00008000& /* 48 kHz, Stereo, 16-bit */
        WAVE_FORMAT_96M08 = &H00010000 /* 96 kHz, Mono, 8-bit */
        WAVE_FORMAT_96S08 = &H00020000 /* 96 kHz, Stereo, 8-bit */
        WAVE_FORMAT_96M16 = &H00040000 /* 96 kHz, Mono, 16-bit */
        WAVE_FORMAT_96S16 = &H00080000 /* 96 kHz, Stereo, 16-bit */
    End Enum

    Public Enum DSCBLOCK_CONST
        DSCBLOCK_ENTIREBUFFER = &H1
    End Enum
	
    Public Enum DSCBSTART_CONST
        DSCBSTART_LOOPING = &H1
    End Enum
	
    Public Enum DSFX_CONST
        DSFX_LOCHARDWARE = &H1
        DSFX_LOCSOFTWARE = &H2
    End Enum
	
    Public Enum DSFXR_CONST
        DSFXR_PRESENT = &H0
        DSFXR_LOCHARDWARE = &H1
        DSFXR_LOCSOFTWARE = &H2
        DSFXR_UNALLOCATED = &H3
        DSFXR_FAILED = &H4
        DSFXR_UNKNOWN = &H5
        DSFXR_SENDLOOP = &H6
    End Enum
	
    Public Enum DSCFX_CONST
        DSCFX_LOCHARDWARE = &H1
        DSCFX_LOCSOFTWARE = &H2
    End Enum
	
    Public Enum eGARGLE_WAVE
        DSFXGARGLE_WAVE_TRIANGLE = &H0
        DSFXGARGLE_WAVE_SQUARE = &H1
    End Enum
	
    Public Enum eCHORUS_WAVE
        DSFXCHORUS_WAVE_TRIANGLE = &H0
        DSFXCHORUS_WAVE_SIN = &H1
    End Enum
	
    Public Enum eFLANGER_WAVE
        DSFXFLANGER_WAVE_TRIANGLE = &H0
        DSFXFLANGER_WAVE_SIN = &H1
    End Enum
	
    Public Enum eGARGLE_FREQ
        DSFXGARGLE_RATEHZ_MIN = 1
        DSFXGARGLE_RATEHZ_MAX = 1000
    End Enum
	
    Public Enum eCHORUS_PHASE
        DSFXCHORUS_PHASE_NEG_180 = &H0
        DSFXCHORUS_PHASE_NEG_90 = &H1
        DSFXCHORUS_PHASE_ZERO = &H2
        DSFXCHORUS_PHASE_90 = &H3
        DSFXCHORUS_PHASE_180 = &H4
    End Enum
	
    Public Enum eFLANGER_PHASE
        DSFXFLANGER_PHASE_NEG_180 = &H0
        DSFXFLANGER_PHASE_NEG_90 = &H1
        DSFXFLANGER_PHASE_ZERO = &H2
        DSFXFLANGER_PHASE_90 = &H3
        DSFXFLANGER_PHASE_180 = &H4
    End Enum
	
    Public Enum DSFX_I3DL2_MATERIAL
        DSFX_I3DL2_MATERIAL_PRESET_SINGLEWINDOW = 0
        DSFX_I3DL2_MATERIAL_PRESET_DOUBLEWINDOW = 1
        DSFX_I3DL2_MATERIAL_PRESET_THINDOOR = 2
        DSFX_I3DL2_MATERIAL_PRESET_THICKDOOR = 3
        DSFX_I3DL2_MATERIAL_PRESET_WOODWALL = 4
        DSFX_I3DL2_MATERIAL_PRESET_BRICKWALL = 5
        DSFX_I3DL2_MATERIAL_PRESET_STONEWALL = 6
        DSFX_I3DL2_MATERIAL_PRESET_CURTAIN = 7
    End Enum
	
    Public Enum DSFX_I3DL2_ROOM
        DSFX_I3DL2_ENVIRONMENT_PRESET_DEFAULT = 0
        DSFX_I3DL2_ENVIRONMENT_PRESET_GENERIC = 1
        DSFX_I3DL2_ENVIRONMENT_PRESET_PADDEDCELL = 2
        DSFX_I3DL2_ENVIRONMENT_PRESET_ROOM = 3
        DSFX_I3DL2_ENVIRONMENT_PRESET_BATHROOM = 4
        DSFX_I3DL2_ENVIRONMENT_PRESET_LIVINGROOM = 5
        DSFX_I3DL2_ENVIRONMENT_PRESET_STONEROOM = 6
        DSFX_I3DL2_ENVIRONMENT_PRESET_AUDITORIUM = 7
        DSFX_I3DL2_ENVIRONMENT_PRESET_CONCERTHALL = 8
        DSFX_I3DL2_ENVIRONMENT_PRESET_CAVE = 9
        DSFX_I3DL2_ENVIRONMENT_PRESET_ARENA = 10
        DSFX_I3DL2_ENVIRONMENT_PRESET_HANGAR = 11
        DSFX_I3DL2_ENVIRONMENT_PRESET_CARPETEDHALLWAY = 12
        DSFX_I3DL2_ENVIRONMENT_PRESET_HALLWAY = 13
        DSFX_I3DL2_ENVIRONMENT_PRESET_STONECORRIDOR = 14
        DSFX_I3DL2_ENVIRONMENT_PRESET_ALLEY = 15
        DSFX_I3DL2_ENVIRONMENT_PRESET_FOREST = 16
        DSFX_I3DL2_ENVIRONMENT_PRESET_CITY = 17
        DSFX_I3DL2_ENVIRONMENT_PRESET_MOUNTAINS = 18
        DSFX_I3DL2_ENVIRONMENT_PRESET_QUARRY = 19
        DSFX_I3DL2_ENVIRONMENT_PRESET_PLAIN = 20
        DSFX_I3DL2_ENVIRONMENT_PRESET_PARKINGLOT = 21
        DSFX_I3DL2_ENVIRONMENT_PRESET_SEWERPIPE = 22
        DSFX_I3DL2_ENVIRONMENT_PRESET_UNDERWATER = 23
        DSFX_I3DL2_ENVIRONMENT_PRESET_SMALLROOM = 24
        DSFX_I3DL2_ENVIRONMENT_PRESET_MEDIUMROOM = 25
        DSFX_I3DL2_ENVIRONMENT_PRESET_LARGEROOM = 26
        DSFX_I3DL2_ENVIRONMENT_PRESET_MEDIUMHALL = 27
        DSFX_I3DL2_ENVIRONMENT_PRESET_LARGEHALL = 28
        DSFX_I3DL2_ENVIRONMENT_PRESET_PLATE = 29
    End Enum
	
	
    Public Enum DS_ERR
        DS_OK = &H0
        DSERR_OUTOFMEMORY = &H7
        DSERR_NOINTERFACE = &H1AE
        DS_NO_VIRTUALIZATION = &H0878000A
        DS_INCOMPLETE = &H08780014
        DSERR_UNSUPPORTED = &H80004001
        DSERR_GENERIC = &H80004005
        DSERR_ACCESSDENIED = &H80070005
        DSERR_INVALIDPARAM = &H80070057
        DSERR_ALLOCATED = &H8878000A
        DSERR_CONTROLUNAVAIL = &H8878001E
        DSERR_INVALIDCALL = &H88780032
        DSERR_PRIOLEVELNEEDED = &H88780046
        DSERR_BADFORMAT = &H88780064
        DSERR_NODRIVER = &H88780078
        DSERR_ALREADYINITIALIZED = &H88780082
        DSERR_BUFFERLOST = &H88780096
        DSERR_OTHERAPPHASPRIO = &H887800A0
        DSERR_UNINITIALIZED = &H887800AA
        DSERR_BUFFERTOOSMALL = &H887810B4
        DSERR_DS8_REQUIRED = &H887810BE
        DSERR_SENDLOOP = &H887810C8
        DSERR_BADSENDBUFFERGUID = &H887810D2
        DSERR_FXUNAVAILABLE = &H887810DC
        DSERR_OBJECTNOTFOUND = &H88781161
    End Enum
	
	
	Public Type DSBUFFERDESC
		dwSize As Long
		dwFlags As DSBCAPS_CONST
		dwBufferBytes As Long
		dwReserved As Long
		lpwfxFormat As LongPtr
		guid3DAlgorithm As UUID
	End Type

	Public Type DSBCAPS
		dwSize As Long
		dwFlags As DSBCAPS_CONST
		dwBufferBytes As Long
		dwUnlockTransferRate As Long
		dwPlayCpuOverhead As Long
	End Type

	Public Type DSCAPS
		dwSize As Long
		dwFlags As DSCAPS_CONST
		dwMinSecondarySampleRate As Long
		dwMaxSecondarySampleRate As Long
		dwPrimaryBuffers As Long
		dwMaxHwMixingAllBuffers As Long
		dwMaxHwMixingStaticBuffers As Long
		dwMaxHwMixingStreamingBuffers As Long
		dwFreeHwMixingAllBuffers As Long
		dwFreeHwMixingStaticBuffers As Long
		dwFreeHwMixingStreamingBuffers As Long
		dwMaxHw3DAllBuffers As Long
		dwMaxHw3DStaticBuffers As Long
		dwMaxHw3DStreamingBuffers As Long
		dwFreeHw3DAllBuffers As Long
		dwFreeHw3DStaticBuffers As Long
		dwFreeHw3DStreamingBuffers As Long
		dwTotalHwMemBytes As Long
		dwFreeHwMemBytes As Long
		dwMaxContigFreeHwMemBytes As Long
		dwUnlockTransferRateHwBuffers As Long
		dwPlayCpuOverheadSwBuffers As Long
		dwReserved1 As Long
		dwReserved2 As Long
	End Type

	Public Type D3DVECTOR
		x As Single
		y As Single
		z As Single
	End Type

	Public Type DS3DBUFFER
		dwSize As Long
		vPosition As D3DVECTOR
		vVelocity As D3DVECTOR
		dwInsideConeAngle As Long
		dwOutsideConeAngle As Long
		vConeOrientation As D3DVECTOR
		lConeOutsideVolume As Long
		flMinDistance As Single
		flMaxDistance As Single
		dwMode As DS3DMODE_CONST
	End Type

	Public Type DS3DLISTENER
		dwSize As Long
		vPosition As D3DVECTOR
		vVelocity As D3DVECTOR
		vOrientFront As D3DVECTOR
		vOrientTop As D3DVECTOR
		flDistanceFactor As Single
		flRolloffFactor As Single
		flDopplerFactor As Single
	End Type

	Public Type DSCBUFFERDESC
		dwSize As Long
		dwFlags As DSCBCAPS_CONST
		dwBufferBytes As Long
		dwReserved As Long
		lpwfxFormat As LongPtr
		dwFXCount As Long
		lpDSCFXDesc As LongPtr
	End Type

	Public Type DSCCAPS
		dwSize As Long
		dwFlags As DSCCAPS_CONST
		dwFormats As WAVECAPS_FMT_FLAGS
		dwChannels As Long
	End Type

	Public Type DSBPOSITIONNOTIFY
		dwOffset As Long
		hEventNotify As LongPtr
	End Type

	Public Type DSEFFECTDESC
		dwSize As Long
		dwFlags As DSFX_CONST
		guidDSFXClass As UUID
		dwReserved1 As LongPtr
		dwReserved2 As LongPtr
	End Type

	Public Type DSCEFFECTDESC
		dwSize As Long
		dwFlags As DSCFX_CONST
		guidDSCFXClass As UUID
		guidDSCFXInstance As UUID
		dwReserved1 As Long
		dwReserved2 As Long
	End Type

	Public Type DSFXGargle
		dwRateHz As eGARGLE_FREQ
		WaveShape As eGARGLE_WAVE
	End Type

	Public Type DSFXChorus
		fWetDryMix As Single
		fDepth As Single
		fFeedback As Single
		fFrequency As Single
		Waveform As eCHORUS_WAVE
		fDelay As Single
		phase As eCHORUS_PHASE
	End Type

	Public Type DSFXFlanger
		fWetDryMix As Single
		fDepth As Single
		fFeedback As Single
		fFrequency As Single
		Waveform As eFLANGER_WAVE
		fDelay As Single
		phase As eFLANGER_PHASE
	End Type

	Public Type DSFXEcho
		fWetDryMix As Single
		fFeedback As Single
		fLeftDelay As Single
		fRightDelay As Single
		lPanDelay As Long
	End Type

	Public Type DSFXDistortion
		fGain As Single
		fEdge As Single
		fPostEQCenterFrequency As Single
		fPostEQBandwidth As Single
		fPreLowpassCutoff As Single
	End Type

	Public Type DSFXCompressor
		fGain As Single
		fAttack As Single
		fRelease As Single
		fThreshold As Single
		fRatio As Single
		fPredelay As Single
	End Type

	Public Type DSFXParamEq
		fCenter As Single
		fBandwidth As Single
		fGain As Single
	End Type

	Public Type DSFXI3DL2Reverb
		lRoom As Long
		lRoomHF As Long
		flRoomRolloffFactor As Single
		flDecayTime As Single
		flDecayHFRatio As Single
		lReflections As Long
		flReflectionsDelay As Single
		lReverb As Long
		flReverbDelay As Single
		flDiffusion As Single
		flDensity As Single
		flHFReference As Single
	End Type

	Public Type DSFXWavesReverb
		fInGain As Single
		fReverbMix As Single
		fReverbTime As Single
		fHighFreqRTRatio As Single
	End Type

    Public Const DS3DALG_DEFAULT As String = "{00000000-0000-0000-0000-000000000000}"
    Public Const DS3DALG_NO_VIRTUALIZATION As String = "{C241333F-1C1B-11d2-94F5-00C04FC28ACA}"
    Public Const DS3DALG_HRTF_FULL As String = "{C2413340-1C1B-11d2-94F5-00C04FC28ACA}"
    Public Const DS3DALG_HRTF_LIGHT As String = "{C2413342-1C1B-11d2-94F5-00C04FC28ACA}"
    Public Const GUID_DSCFX_CLASS_AEC As String = "{BF963D80-C559-11D0-8A2B-00A0C9255AC1}"
    Public Const GUID_DSCFX_MS_AEC As String = "{CDEBB919-379A-488a-8765-F53CFD36DE40}"
    Public Const GUID_DSCFX_SYSTEM_AEC As String = "{1C22C56D-9879-4f5b-A389-27996DDC2810}"
    Public Const GUID_DSCFX_CLASS_NS As String = "{E07F903F-62FD-4e60-8CDD-DEA7236665B5}"
    Public Const GUID_DSCFX_MS_NS As String = "{11C5C73B-66E9-4ba1-A0BA-E814C6EED92D}"
    Public Const GUID_DSCFX_SYSTEM_NS As String = "{5AB0882E-7274-4516-877D-4EEE99BA4FD0}"

    Public Const CLSID_DSFX_STANDARD_GARGLE As String = "{DAFD8210-5711-4B91-9FE3-F75B7AE279BF}"
    Public Const CLSID_DSFX_STANDARD_CHORUS As String = "{EFE6629C-81F7-4281-BD91-C9D604A95AF6}"
    Public Const CLSID_DSFX_STANDARD_FLANGER As String = "{EFCA3D92-DFD8-4672-A603-7420894BAD98}"
    Public Const CLSID_DSFX_STANDARD_ECHO As String = "{EF3E932C-D40B-4F51-8CCF-3F98F1B29D5D}"
    Public Const CLSID_DSFX_STANDARD_DISTORTION As String = "{EF114C90-CD1D-484E-96E5-09CFAF912A21}"
    Public Const CLSID_DSFX_STANDARD_COMPRESSOR As String = "{EF011F79-4000-406D-87AF-BFFB3FC39D57}"
    Public Const CLSID_DSFX_STANDARD_PARAMEQ As String = "{120CED89-3BF4-4173-A132-3CB406CF3231}"
    Public Const CLSID_DSFX_STANDARD_I3DL2REVERB As String = "{EF985E71-D5C7-42D4-BA4D-2D073E2E96F4}"
    Public Const CLSID_DSFX_WAVES_REVERB As String = "{87FC0268-9A55-4360-95AA-004A1D9DE26C}"
	
	Public Const STR_PRESET_DEFAULT = "-1000,-100,0.0,1.49,0.83,-2602,0.007,200,0.011,100.0,100.0,5000.0"
	Public Const STR_PRESET_GENERIC = "-1000,-100,0.0,1.49,0.83,-2602,0.007,200,0.011,100.0,100.0,5000.0"
	Public Const STR_PRESET_PADDEDCELL = "-1000,-6000,0.0,0.17,0.10,-1204,0.001,207,0.002,100.0,100.0,5000.0"
	Public Const STR_PRESET_ROOM = "-1000,-454,0.0,0.40,0.83,-1646,0.002,53,0.003,100.0,100.0,5000.0"
	Public Const STR_PRESET_BATHROOM = "-1000,-1200,0.0,1.49,0.54,-370,0.007,1030,0.011,100.0,60.0,5000.0"
	Public Const STR_PRESET_LIVINGROOM = "-1000,-6000,0.0,0.50,0.10,-1376,0.003,-1104,0.004,100.0,100.0,5000.0"
	Public Const STR_PRESET_STONEROOM = "-1000,-300,0.0,2.31,0.64,-711,0.012,83,0.017,100.0,100.0,5000.0"
	Public Const STR_PRESET_AUDITORIUM = "-1000,-476,0.0,4.32,0.59,-789,0.020,-289,0.030,100.0,100.0,5000.0"
	Public Const STR_PRESET_CONCERTHALL = "-1000,-500,0.0,3.92,0.70,-1230,0.020,-2,0.029,100.0,100.0,5000.0"
	Public Const STR_PRESET_CAVE = "-1000,0,0.0,2.91,1.30,-602,0.015,-302,0.022,100.0,100.0,5000.0"
	Public Const STR_PRESET_ARENA = "-1000,-698,0.0,7.24,0.33,-1166,0.020,16,0.030,100.0,100.0,5000.0"
	Public Const STR_PRESET_HANGAR = "-1000,-1000,0.0,10.05,0.23,-602,0.020,198,0.030,100.0,100.0,5000.0"
	Public Const STR_PRESET_CARPETEDHALLWAY = "-1000,-4000,0.0,0.30,0.10,-1831,0.002,-1630,0.030,100.0,100.0,5000.0"
	Public Const STR_PRESET_HALLWAY = "-1000,-300,0.0,1.49,0.59,-1219,0.007,441,0.011,100.0,100.0,5000.0"
	Public Const STR_PRESET_STONECORRIDOR = "-1000,-237,0.0,2.70,0.79,-1214,0.013,395,0.020,100.0,100.0,5000.0"
	Public Const STR_PRESET_ALLEY = "-1000,-270,0.0,1.49,0.86,-1204,0.007,-4,0.011,100.0,100.0,5000.0"
	Public Const STR_PRESET_FOREST = "-1000,-3300,0.0,1.49,0.54,-2560,0.162,-613,0.088,79.0,100.0,5000.0"
	Public Const STR_PRESET_CITY = "-1000,-800,0.0,1.49,0.67,-2273,0.007,-2217,0.011,50.0,100.0,5000.0"
	Public Const STR_PRESET_MOUNTAINS = "-1000,-2500,0.0,1.49,0.21,-2780,0.300,-2014,0.100,27.0,100.0,5000.0"
	Public Const STR_PRESET_QUARRY = "-1000,-1000,0.0,1.49,0.83,-10000,0.061,500,0.025,100.0,100.0,5000.0"
	Public Const STR_PRESET_PLAIN = "-1000,-2000,0.0,1.49,0.50,-2466,0.179,-2514,0.100,21.0,100.0,5000.0"
	Public Const STR_PRESET_PARKINGLOT = "-1000,0,0.0,1.65,1.50,-1363,0.008,-1153,0.012,100.0,100.0,5000.0"
	Public Const STR_PRESET_SEWERPIPE = "-1000,-1000,0.0,2.81,0.14,429,0.014,648,0.021,80.0,60.0,5000.0"
	Public Const STR_PRESET_UNDERWATER = "-1000,-4000,0.0,1.49,0.10,-449,0.007,1700,0.011,100.0,100.0,5000.0"
	Public Const STR_PRESET_SMALLROOM = "-1000,-600,0.0,1.10,0.83,-400,0.005,500,0.010,100.0,100.0,5000.0"
	Public Const STR_PRESET_MEDIUMROOM = "-1000,-600,0.0,1.30,0.83,-1000,0.010,-200,0.020,100.0,100.0,5000.0"
	Public Const STR_PRESET_LARGEROOM = "-1000,-600,0.0,1.50,0.83,-1600,0.020,-1000,0.040,100.0,100.0,5000.0"
	Public Const STR_PRESET_MEDIUMHALL = "-1000,-600,0.0,1.80,0.70,-1300,0.015,-800,0.030,100.0,100.0,5000.0"
	Public Const STR_PRESET_LARGEHALL = "-1000,-600,0.0,1.80,0.70,-2000,0.030,-1400,0.060,100.0,100.0,5000.0"
	Public Const STR_PRESET_PLATE = "-1000,-200,0.0,1.30,0.90,0,0.002,0,0.010,100.0,75.0,5000.0"

    Public DeclareWide PtrSafe Function DirectSoundCreate Lib "dsound" (pcGuidDevice As UUID, ppDS8 As IDirectSound, ByVal pUnkOuter As IUnknown) As DS_ERR
    Public Declare PtrSafe Function DirectSoundEnumerateA Lib "dsound" (ByVal pDSEnumCallback As LongPtr, pContext As Any) As DS_ERR
    Public DeclareWide PtrSafe Function DirectSoundEnumerateW Lib "dsound" (ByVal pDSEnumCallback As LongPtr, pContext As Any) As DS_ERR
    Public DeclareWide PtrSafe Function DirectSoundEnumerate Lib "dsound" Alias "DirectSoundEnumerateW" (ByVal pDSEnumCallback As LongPtr, pContext As Any) As DS_ERR
    Public DeclareWide PtrSafe Function DirectSoundCaptureCreate Lib "dsound" (pcGuidDevice As UUID, ppDS8 As IDirectSoundCapture, ByVal pUnkOuter As IUnknown) As DS_ERR
    Public Declare PtrSafe Function DirectSoundCaptureEnumerateA Lib "dsound" (ByVal pDSEnumCallback As LongPtr, pContext As Any) As DS_ERR
    Public DeclareWide PtrSafe Function DirectSoundCaptureEnumerateW Lib "dsound" (ByVal pDSEnumCallback As LongPtr, pContext As Any) As DS_ERR
    Public DeclareWide PtrSafe Function DirectSoundCaptureEnumerate Lib "dsound" Alias "DirectSoundCaptureEnumerateW" (ByVal pDSEnumCallback As LongPtr, pContext As Any) As DS_ERR
          	
	Public DeclareWide PtrSafe Function DirectSoundCreate8 Lib "dsound" (pcGuidDevice As UUID, ppDS8 As IDirectSound8, ByVal pUnkOuter As IUnknown) As DS_ERR
    Public DeclareWide PtrSafe Function DirectSoundCaptureCreate8 Lib "dsound" (pcGuidDevice As UUID, ppDS8 As IDirectSoundCapture, ByVal pUnkOuter As IUnknown) As DS_ERR
    
    Public DeclareWide PtrSafe Function DirectSoundGetDeviceId Lib "dsound" Alias "GetDeviceId" (pGuidSrc As UUID, pGuidDest As UUID) As Long
	



    Public Function IID_IDirectSound() As UUID
    '{279AFA83-4981-11CE-A521-0020AF0BE560}
    Static iid As UUID
     If (iid.Data1 = 0&) Then Call DEFINE_UUID(iid, &H279AFA83, CInt(&H4981), CInt(&H11CE), &HA5, &H21, &H00, &H20, &HAF, &H0B, &HE5, &H60)
    IID_IDirectSound = iid
    End Function
    Public Function IID_IDirectSoundBuffer() As UUID
    '{279AFA85-4981-11CE-A521-0020AF0BE560}
    Static iid As UUID
     If (iid.Data1 = 0&) Then Call DEFINE_UUID(iid, &H279AFA85, CInt(&H4981), CInt(&H11CE), &HA5, &H21, &H00, &H20, &HAF, &H0B, &HE5, &H60)
    IID_IDirectSoundBuffer = iid
    End Function
    Public Function IID_IDirectSound8() As UUID
    '{C50A7E93-F395-4834-9EF6-7FA99DE50966}
    Static iid As UUID
     If (iid.Data1 = 0&) Then Call DEFINE_UUID(iid, &HC50A7E93, CInt(&HF395), CInt(&H4834), &H9E, &HF6, &H7F, &HA9, &H9D, &HE5, &H09, &H66)
    IID_IDirectSound8 = iid
    End Function
    Public Function IID_IDirectSoundBuffer8() As UUID
    '{6825A449-7524-4D82-920F-50E36AB3AB1E}
    Static iid As UUID
     If (iid.Data1 = 0&) Then Call DEFINE_UUID(iid, &H6825A449, CInt(&H7524), CInt(&H4D82), &H92, &H0F, &H50, &HE3, &H6A, &HB3, &HAB, &H1E)
    IID_IDirectSoundBuffer8 = iid
    End Function
    Public Function IID_IDirectSound3DBuffer() As UUID
    '{279AFA86-4981-11CE-A521-0020AF0BE560}
    Static iid As UUID
     If (iid.Data1 = 0&) Then Call DEFINE_UUID(iid, &H279AFA86, CInt(&H4981), CInt(&H11CE), &HA5, &H21, &H00, &H20, &HAF, &H0B, &HE5, &H60)
    IID_IDirectSound3DBuffer = iid
    End Function
    Public Function IID_IDirectSound3DListener() As UUID
    '{279AFA84-4981-11CE-A521-0020AF0BE560}
    Static iid As UUID
     If (iid.Data1 = 0&) Then Call DEFINE_UUID(iid, &H279AFA84, CInt(&H4981), CInt(&H11CE), &HA5, &H21, &H00, &H20, &HAF, &H0B, &HE5, &H60)
    IID_IDirectSound3DListener = iid
    End Function
    Public Function IID_IDirectSoundCapture() As UUID
    '{B0210781-89CD-11D0-AF08-00A0C925CD16}
    Static iid As UUID
     If (iid.Data1 = 0&) Then Call DEFINE_UUID(iid, &HB0210781, CInt(&H89CD), CInt(&H11D0), &HAF, &H08, &H00, &HA0, &HC9, &H25, &HCD, &H16)
    IID_IDirectSoundCapture = iid
    End Function
    Public Function IID_IDirectSoundCaptureBuffer() As UUID
    '{B0210782-89CD-11D0-AF08-00A0C925CD16}
    Static iid As UUID
     If (iid.Data1 = 0&) Then Call DEFINE_UUID(iid, &HB0210782, CInt(&H89CD), CInt(&H11D0), &HAF, &H08, &H00, &HA0, &HC9, &H25, &HCD, &H16)
    IID_IDirectSoundCaptureBuffer = iid
    End Function
    Public Function IID_IDirectSoundCaptureBuffer8() As UUID
    '{00990DF4-0DBB-4872-833E-6D303E80AEB6}
    Static iid As UUID
     If (iid.Data1 = 0&) Then Call DEFINE_UUID(iid, &H00990DF4, CInt(&H0DBB), CInt(&H4872), &H83, &H3E, &H6D, &H30, &H3E, &H80, &HAE, &HB6)
    IID_IDirectSoundCaptureBuffer8 = iid
    End Function
    Public Function IID_IDirectSoundNotify() As UUID
    '{B0210783-89CD-11D0-AF08-00A0C925CD16}
    Static iid As UUID
     If (iid.Data1 = 0&) Then Call DEFINE_UUID(iid, &HB0210783, CInt(&H89CD), CInt(&H11D0), &HAF, &H08, &H00, &HA0, &HC9, &H25, &HCD, &H16)
    IID_IDirectSoundNotify = iid
    End Function
End Module