
'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'WinDevLib - wdCOM :: Misc COM component stuff

[InterfaceId("75121952-E0D0-43E5-9380-1D80483ACF72")]
[OleAutomation(False)]
Interface ICreateObject Extends stdole.IUnknown
    Sub CreateObject(ByRef clsid As UUID, ByVal pUnkOuter As IUnknown, ByRef riid As UUID, ByRef ppv As Any)
End Interface

[InterfaceId("00000002-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IMalloc Extends stdole.IUnknown
    [PreserveSig]
    Function Alloc(ByVal cb As LongPtr) As LongPtr
    [PreserveSig]
    Function Realloc(ByRef pv As Any, ByVal cb As LongPtr) As LongPtr
    [PreserveSig]
    Sub Free(ByVal pv As LongPtr) 'As Long
    [PreserveSig]
    Function GetSize(ByVal pv As LongPtr) As LongPtr
    [PreserveSig]
    Function DidAlloc(ByVal pv As LongPtr) As Long
    [PreserveSig]
    Sub HeapMinimize()
End Interface

[InterfaceId("00000003-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IMarshal Extends stdole.IUnknown
        Sub GetUnmarshalClass(ByRef riid As UUID, ByRef pv As Any, ByVal dwDestContext As MSHCTX, ByRef pvDestContext As Any, ByVal MSHLFLAGS As MSHLFLAGS, ByRef pCid As UUID)
        Function GetMarshalSizeMax(ByRef riid As UUID, ByRef pv As Any, ByVal dwDestContext As MSHCTX, ByRef pvDestContext As Any, ByVal MSHLFLAGS As MSHLFLAGS) As Long
        Sub MarshalInterface(ByVal pStm As IStream, ByRef riid As UUID, ByRef pv As Any, ByVal dwDestContext As MSHCTX, ByRef pvDestContext As Any, ByVal MSHLFLAGS As MSHLFLAGS)
        Sub UnmarshalInterface(ByVal pStm As IStream, ByRef riid As UUID, ByRef ppv As Any)
        Sub ReleaseMarshalData(ByVal pStm As IStream)
        Sub DisconnectObject(ByVal dwReserved As Long)
End Interface


[InterfaceId("0000000A-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface ILockBytes Extends stdole.IUnknown
        Function ReadAt(ByVal ulOffset As LongLong, ByRef pv As Any, ByVal cb As Long) As Long
        Function WriteAt(ByVal ulOffset As LongLong, ByRef pv As Any, ByVal cb As Long) As Long
        Sub Flush()
        Sub SetSize(ByVal cb As LongLong)
        Sub LockRegion(ByVal libOffset As LongLong, ByVal cb As LongLong, ByVal dwLockType As Long)
        Sub UnlockRegion(ByVal libOffset As LongLong, ByVal cb As LongLong, ByVal dwLockType As Long)
        Sub Stat(ByRef pstatstg As STATSTG, Optional ByVal grfStatFlag As STATFLAG = 0)
End Interface

[InterfaceId("99CAF010-415E-11CF-8814-00AA00B569F5")]
[OleAutomation(False)]
Interface IFillLockBytes Extends stdole.IUnknown
        Function FillAppend(ByRef pv As Any, ByVal cb As Long) As Long
        Function FillAt(ByVal ulOffset As LongLong, ByRef pv As Any, ByVal cb As Long) As Long
        Sub SetFillSize(ByVal ulSize As LongLong)
        Sub Terminate(ByVal bCanceled As BOOL)
End Interface
    
[InterfaceId("0E6D4D90-6738-11CF-9608-00AA00680DB4")]
[OleAutomation(False)]
Interface ILayoutStorage Extends stdole.IUnknown
        Sub LayoutScript(ByRef pStorageLayout As StorageLayout, ByVal nEntries As Long, ByVal glfInterleavedFlag As Long)
        Sub BeginMonitor()
        Sub EndMonitor()
        Sub ReLayoutDocfile(ByVal pwcsNewDfName As String)
        Sub ReLayoutDocfileOnILockBytes(ByVal pILockBytes As ILockBytes)
End Interface

[InterfaceId("1CF2B120-547D-101B-8E65-08002B2BD119")]
[OleAutomation(False)]
Interface IErrorInfo Extends stdole.IUnknown
    Sub GetGUID(ByRef pGUID As UUID)
    Function GetSource() As String
    Function GetDescription() As String
    Function GetHelpFile() As String
    Function GetHelpContext() As Long
End Interface

[InterfaceId("22F03340-547D-101B-8E65-08002B2BD119")]
[OleAutomation(False)]
Interface ICreateErrorInfo Extends stdole.IUnknown
    Sub SetGuid(ByRef rguid As UUID)
    Sub SetSource(ByVal szSource As String)
    Sub SetDescription(ByVal szDescription As String)
    Sub SetHelpFile(ByVal szHelpFile As String)
    Sub SetHelpContext(ByVal dwHelpContext As Long)
End Interface

[InterfaceId("DF0B3D60-548F-101B-8E65-08002B2BD119")]
[OleAutomation(False)]
Interface ISupportErrorInfo Extends stdole.IUnknown
    Sub InterfaceSupportsErrorInfo(ByRef riid As UUID)
End Interface

[InterfaceId("0000002F-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IRecordInfo Extends stdole.IUnknown
    Sub RecordInit(ByRef pvNew As Any)
    Sub RecordClear(ByRef pvExisting As Any)
    Sub RecordCopy(ByRef pvExisting As Any, ByRef pvNew As Any)
    Sub GetGUID(ByRef pGUID As UUID)
    Function GetName() As String
    Function GetSize() As Long
    Function GetTypeInfo() As ITypeInfo
    Function GetField(ByRef pvData As Any, ByVal szFieldName As String) As Variant
    Sub GetFieldNoCopy(ByRef pvData As Any, ByVal szFieldName As String, ByRef pvarField As Variant, ByRef ppvDataCArray As Any)
    Sub PutField(ByVal wFlags As INVOKEKIND, ByRef pvData As Any, ByVal szFieldName As String, ByRef pvarField As Variant)
    Sub PutFieldNoCopy(ByVal wFlags As INVOKEKIND, ByRef pvData As Any, ByVal szFieldName As String, ByRef pvarField As Variant)
    Sub GetFieldNames(ByRef pcNames As Long, ByRef rgBstrNames As String)
    [PreserveSig]
    Function IsMatchingType(ByVal pRecordInfo As IRecordInfo) As Long
    [PreserveSig]
    Function RecordCreate() As Long
    Sub RecordCreateCopy(ByRef pvSource As Any, ByRef ppvDest As Any)
    Sub RecordDestroy(ByRef pvRecord As Any)
End Interface

[InterfaceId("0000010D-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IViewObject Extends stdole.IUnknown
    Sub Draw(ByVal dwDrawAspect As DVASPECT, ByVal lindex As Long, ByRef pvAspect As Any, ByRef ptd As Any, ByVal hdcTargetDev As LongPtr, ByVal hdcDraw As LongPtr, ByRef lprcBounds As RECT, ByRef lprcWBounds As RECT, ByVal pfnContinue As LongPtr, ByVal dwContinue As Long)
    Sub GetColorSet(ByVal dwDrawAspect As DVASPECT, ByVal lindex As Long, ByRef pvAspect As Any, ByRef ptd As Any, ByVal hicTargetDev As LongPtr, ByRef ppColorSet As LongPtr)
    Function Freeze(ByVal dwDrawAspect As DVASPECT, ByVal lindex As Long, ByRef pvAspect As Any) As Long
    Sub Unfreeze(ByVal dwFreeze As Long)
    Sub SetAdvise(ByVal aspects As DVASPECT, ByVal ADVF As ADVF, ByVal pIAdviseSink As LongPtr)
    Sub GetAdvise(ByRef pAspects As DVASPECT, ByRef pAdvf As ADVF, ByRef pIAdviseSink As LongPtr)
End Interface
[InterfaceId("00000127-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IViewObject2 Extends IViewObject
    Sub GetExtent(ByVal dwDrawAspect As DVASPECT, ByVal lindex As Long, ByRef ptd As DVTARGETDEVICE, ByRef lpSIZE As SIZE)
End Interface
[InterfaceId("3AF24292-0C96-11CE-A0CF-00AA00600AB8")]
[OleAutomation(False)]
Interface IViewObjectEx Extends IViewObject2
    Sub GetRect(ByVal dwAspect As DVASPECT, pRect As RECT)
    Sub GetViewStatus(pdwStatus As VIEWSTATUS)
    Sub QueryHitPoint(ByVal dwAspect As DVASPECT, pRectBounds As RECT, ByVal ptlLoc As LongLong, ByVal lCloseHint As Long, pHitResult As HITRESULT)
    Sub QueryHitRect(ByVal dwAspect As DVASPECT, pRectBounds As RECT, pRectLoc As RECT, ByVal lCloseHint As Long, pHitResult As HITRESULT)
    Sub GetNaturalExtent(ByVal dwAspect As DVASPECT, ByVal lindex As Long, ptd As DVTARGETDEVICE, ByVal hicTargetDev As LongPtr, pExtentInfo As DVEXTENTINFO, pSizel As SIZE)
End Interface


[InterfaceId("CB728B20-F786-11CE-92AD-00AA00A74CD0")]
[Description("IProfferService")]
[OleAutomation(False)]
Interface IProfferService Extends stdole.IUnknown
    Function ProfferService(ByRef rguidService As UUID, ByVal pSP As IServiceProvider) As Long
    Sub RevokeService(ByVal dwCookie As Long)
End Interface

[InterfaceId("4A073526-6103-4E21-B7BC-F519D1524E5D")]
[Description("IProfferService")]
[OleAutomation(False)]
Interface IGetServiceIds Extends IUnknown
    Sub GetServiceIds(serviceIdCount As Long, serviceIds As LongPtr)
End Interface
    
    
[InterfaceId("0000013D-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IClientSecurity Extends stdole.IUnknown
    Sub QueryBlanket(ByVal pProxy As stdole.IUnknown, pAuthnSvc As RPC_AUTHN, pAuthzSvc As RPC_AUTHZ, pServerPrincName As LongPtr, pAuthnLevel As RPC_AUTHN_LVL, pImpLevel As RPC_IMP_LVL, pAuthInfo As Any, pCapabilities As EOLE_AUTHENTICATION_CAPABILITIES)
    Sub SetBlanket(ByVal pProxy As stdole.IUnknown, ByVal AuthnSvc As RPC_AUTHN, ByVal AuthzSvc As RPC_AUTHZ, ByVal pServerPrincName As LongPtr, ByVal AuthnLevel As RPC_AUTHN_LVL, ByVal ImpLevel As RPC_IMP_LVL, pAuthInfo As Any, ByVal Capabilities As EOLE_AUTHENTICATION_CAPABILITIES)
    Function CopyProxy(ByVal pProxy As stdole.IUnknown) As stdole.IUnknown
End Interface

[InterfaceId("0000013E-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IServerSecurity Extends stdole.IUnknown
    Sub QueryBlanket(pAuthnSvc As RPC_AUTHN, pAuthzSvc As RPC_AUTHZ, pServerPrincName As LongPtr, pAuthnLevel As RPC_AUTHN_LVL, pImpLevel As RPC_IMP_LVL, pPrivs As LongPtr, pCapabilities As EOLE_AUTHENTICATION_CAPABILITIES)
    Sub ImpersonateClient()
    Sub RevertToSelf()
    Sub IsImpersonating() 'BOOL [ PreserveSig ] when Implements-compat
End Interface

[InterfaceId("00000140-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IClassActivator Extends stdole.IUnknown
    Sub GetClassObject(rclsid As UUID, ByVal dwClassContext As Long, ByVal locale As Long, riid As UUID, ppv As Any)
End Interface

[InterfaceId("a9d758a0-4617-11cf-95fc-00aa00680db4")]
[OleAutomation(False)]
Interface IProgressNotify Extends stdole.IUnknown
    Sub OnProgress(ByVal dwProgressCurrent As Long, ByVal dwProgressMaximum As Long, ByVal fAccurate As BOOL, ByVal fOwner As BOOL)
End Interface

[InterfaceId("0000001d-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IMallocSpy Extends stdole.IUnknown
    [PreserveSig] Function PreAlloc(ByVal cbRequest As LongPtr) As LongPtr
    [PreserveSig] Function PostAlloc(pActual As Any) As LongPtr
    [PreserveSig] Function PreFree(pRequest As Any, ByVal fSpyed As BOOL) As LongPtr
    [PreserveSig] Sub PostFree(ByVal fSpyed As BOOL)
    [PreserveSig] Function PreRealloc(pRequest As Any, ByVal cbRequest As LongPtr, ppNewRequest As LongPtr, ByVal fSpyed As BOOL) As LongPtr
    [PreserveSig] Function PostRealloc(pActual As Any, ByVal fSpyed As BOOL) As LongPtr
    [PreserveSig] Function PreGetSize(pRequest As Any, ByVal fSpyed As BOOL) As LongPtr
    [PreserveSig] Function PostGetSize(ByVal cbActual As LongPtr, ByVal fSpyed As BOOL) As LongPtr
    [PreserveSig] Function PreDidAlloc(pRequest As Any, ByVal fSpyed As BOOL) As LongPtr
    [PreserveSig] Function PostDidAlloc(pRequest As Any, ByVal fSpyed As BOOL, ByVal fActual As Long) As Long
    [PreserveSig] Sub PreHeapMinimize()
    [PreserveSig] Sub PostHeapMinimize()
End Interface

[InterfaceId("00000018-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IStdMarshalInfo Extends stdole.IUnknown
    Sub GetClassForHandler(ByVal dwDestContext As Long, pvDestContext As Any, pClsid As UUID)
End Interface

[InterfaceId("00000019-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IExternalConnection Extends stdole.IUnknown
    Sub AddConnection(ByVal extconn As Long, ByVal reserved As Long)
    Sub ReleaseConnection(ByVal extconn As Long, ByVal reserved As Long, ByVal fLastReleaseCloses As Long)
End Interface

[InterfaceId("969dc708-5c76-11d1-8d86-0000f804b057")]
[OleAutomation(False)]
Interface IThumbnailExtractor Extends stdole.IUnknown
    Sub ExtractThumbnail(ByVal pStg As IStorage, ByVal ulLength As Long, ByVal ulHeight As Long, pulOutputLength As Long, pulOutputHeight As Long, phOutputBitmap As LongPtr)
    Sub OnFileUpdated(ByVal pStg As IStorage)
End Interface

[InterfaceId("000001da-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IContextCallback Extends stdole.IUnknown
    Sub ContextCallback(pParam As ComCallData, riid As UUID, ByVal iMethod As Long, ByVal pUnk As IUnknown)
End Interface

[InterfaceId("8FA7728F-B69B-4EE5-99F2-E2AA021BEF28")]
[OleAutomation(False)]
'[ DualInterface ]
Interface IActCtx Extends IDispatch
    [DispId(1)] Property Get Manifest() As LongPtr
    [DispId(1)] Property Let Manifest(ByVal newVal As LongPtr)
    [DispId(2)] Property Get ManifestText() As LongPtr
    [DispId(2)] Property Let ManifestText(ByVal bstrTextualManifest As LongPtr)
    [DispId(3)] Property Get ManifestURL() As LongPtr
    [DispId(3)] Property Let ManifestURL(ByVal bstrURL As LongPtr)
    [DispId(4)] Function CreateObject(ByVal ObjectReference As LongPtr, Optional pvarLocation As Variant) As IDispatch
    [DispId(5)] Function GetObject(Optional pvarMoniker As Variant, Optional pvarProgID As Variant) As IDispatch
End Interface

[CoClassId("8143C9AA-38F8-4729-B935-DF6823C616C6")]
CoClass CActCtx
    [Default] Interface IActCtx
End CoClass

[CoClassId("0000034e-0000-0000-c000-000000000046")]
CoClass ContextSwitcher
    [Default] Interface IContextCallback
End CoClass

[CoClassId("cefc65d8-66d8-11d1-8d8c-0000f804b057")]
CoClass ThumbnailFCNHandler
    [Default] Interface IThumbnailExtractor
End CoClass



Module wdCOM

Public Type ComCallData
	dwDispid As Long
	dwReserved As Long
	pUserDefined As LongPtr
End Type


Public Enum VIEWSTATUS
    VIEWSTATUS_OPAQUE = 1
    VIEWSTATUS_SOLIDBKGND = 2
    VIEWSTATUS_DVASPECTOPAQUE = 4
    VIEWSTATUS_DVASPECTTRANSPARENT = 8
    VIEWSTATUS_SURFACE = 16
    VIEWSTATUS_3DSURFACE = 32
End Enum

Public Enum HITRESULT
    HITRESULT_OUTSIDE = 0
    HITRESULT_TRANSPARENT = 1
    HITRESULT_CLOSE = 2
    HITRESULT_HIT = 3
End Enum

Public Enum DVEXTENTMODE
    DVEXTENT_CONTENT = 0
    DVEXTENT_INTEGRAL = 1
End Enum

Public Type DVEXTENTINFO
    cb As Long
    dwExtentMode As DVEXTENTMODE
    sizelProposed As SIZE
End Type

Public Enum DVASPECTINFOFLAG
    DVASPECTINFOFLAG_CANOPTIMIZE = 1
End Enum

Public Type DVASPECTINFO
    cb As Long
    dwFlags As DVASPECTINFOFLAG
End Type

Public Enum EXTCONN
	EXTCONN_STRONG = &H0001 ' strong connection
	EXTCONN_WEAK = &H0002 ' weak connection (table, container)
	EXTCONN_CALLABLE = &H0004 ' table .vs. callable
End Enum


Public Enum MSHCTX
    MSHCTX_LOCAL = 0
    MSHCTX_NOSHAREDMEM = 1
    MSHCTX_DIFFERENTMACHINE = 2
    MSHCTX_INPROC = 3
    MSHCTX_CROSSCTX = 4
End Enum

Public Enum MSHLFLAGS
    MSHLFLAGS_NORMAL = 0
    MSHLFLAGS_TABLESTRONG = 1
    MSHLFLAGS_TABLEWEAK = 2
    MSHLFLAGS_NOPING = 3
End Enum

Public Type StorageLayout
    LayoutType As STGTY
    pwcsElementName As LongPtr
    cOffset As LongLong
    cBytes As LongLong
End Type

Public Enum RPC_AUTHN
	RPC_C_AUTHN_NONE = 0
	RPC_C_AUTHN_DCE_PRIVATE = 1
	RPC_C_AUTHN_DCE_PUBLIC = 2
	RPC_C_AUTHN_DEC_PUBLIC = 4
	RPC_C_AUTHN_GSS_NEGOTIATE = 9
	RPC_C_AUTHN_WINNT = 10
	RPC_C_AUTHN_GSS_SCHANNEL = 14
	RPC_C_AUTHN_GSS_KERBEROS = 16
	RPC_C_AUTHN_DPA = 17
	RPC_C_AUTHN_MSN = 18
	RPC_C_AUTHN_DIGEST = 21
	RPC_C_AUTHN_KERNEL = 20
	RPC_C_AUTHN_NEGO_EXTENDER = 30
	RPC_C_AUTHN_PKU2U = 31
	RPC_C_AUTHN_LIVE_SSP = 32
	RPC_C_AUTHN_LIVEXP_SSP = 35
	RPC_C_AUTHN_CLOUD_AP = 36
	RPC_C_AUTHN_MSONLINE = 82
	RPC_C_AUTHN_MQ = 100
	RPC_C_AUTHN_DEFAULT = &HFFFFFFFF
End Enum

Public Enum RPC_AUTHZ
	RPC_C_AUTHZ_NONE = 0
	RPC_C_AUTHZ_NAME = 1
	RPC_C_AUTHZ_DCE = 2
	RPC_C_AUTHZ_DEFAULT = &Hffffffff
End Enum

Public Enum RPC_AUTHN_LVL
	RPC_C_AUTHN_LEVEL_DEFAULT = 0
	RPC_C_AUTHN_LEVEL_NONE = 1
	RPC_C_AUTHN_LEVEL_CONNECT = 2
	RPC_C_AUTHN_LEVEL_CALL = 3
	RPC_C_AUTHN_LEVEL_PKT = 4
	RPC_C_AUTHN_LEVEL_PKT_INTEGRITY = 5
	RPC_C_AUTHN_LEVEL_PKT_PRIVACY = 6
End Enum

Public Enum EOLE_AUTHENTICATION_CAPABILITIES
	EOAC_NONE = 0
	EOAC_MUTUAL_AUTH = &H1
	EOAC_STATIC_CLOAKING = &H20
	EOAC_DYNAMIC_CLOAKING = &H40
	EOAC_ANY_AUTHORITY = &H80
	EOAC_MAKE_FULLSIC = &H100
	EOAC_DEFAULT = &H800
	EOAC_SECURE_REFS = &H2
	EOAC_ACCESS_CONTROL = &H4
	EOAC_APPID = &H8
	EOAC_DYNAMIC = &H10
	EOAC_REQUIRE_FULLSIC = &H200
	EOAC_AUTO_IMPERSONATE = &H400
	EOAC_DISABLE_AAA = &H1000
	EOAC_NO_CUSTOM_MARSHAL = &H2000
	EOAC_RESERVED1 = &H4000
End Enum

Public Enum RPC_IMP_LVL
	RPC_C_IMP_LEVEL_ANONYMOUS = 1
	RPC_C_IMP_LEVEL_IDENTIFY = 2
	RPC_C_IMP_LEVEL_IMPERSONATE = 3
	RPC_C_IMP_LEVEL_DELEGATE = 4
End Enum
    
End Module