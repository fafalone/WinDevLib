'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

' APIs from ntdll and kernel32

#If WINDEVLIB_LITE = 0 Then
Module wdAPINTKernel

#Region "kernel32"
'********************************************************************************
'kernel32.dll, kernelbase.dll and ktmw32.dll
Public Type MEMORYSTATUSEX
    dwLength As Long
    dwMemoryLoad As Long
    ullTotalPhys As LongLong
    ullAvailPhys As LongLong
    ullTotalPageFile As LongLong
    ullAvailPageFile As LongLong
    ullTotalVirtual As LongLong
    ullAvailVirtual As LongLong
    ullAvailExtendedVirtual As LongLong
End Type

Public Type MEMORYSTATUS
    dwLength As Long
    dwMemoryLoad As Long
    dwTotalPhys As LongPtr
    dwAvailPhys As LongPtr
    dwTotalPageFile As LongPtr
    dwAvailPageFile As LongPtr
    dwTotalVirtual As LongPtr
    dwAvailVirtual As LongPtr
End Type

Public Type CRITICAL_SECTION
    DebugInfo      As LongPtr
    LockCount       As Long
    RecursionCount  As Long
    OwningThread    As LongPtr
    LockSemaphore   As LongPtr
    SpinCount       As LongPtr
End Type

Public Enum ThreadAccessRights
    THREAD_TERMINATE = &H1
    THREAD_SUSPEND_RESUME = &H2
    THREAD_GET_CONTEXT = &H8
    THREAD_SET_CONTEXT = &H10
    THREAD_SET_INFORMATION = &H20
    THREAD_QUERY_INFORMATION = &H40
    THREAD_SET_THREAD_TOKEN = &H80
    THREAD_IMPERSONATE = &H100
    THREAD_DIRECT_IMPERSONATION = &H200
    THREAD_SET_LIMITED_INFORMATION = &H400
    THREAD_QUERY_LIMITED_INFORMATION = &H800
    THREAD_RESUME = &H1000
    THREAD_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or SYNCHRONIZE Or &HFFFF&)
End Enum

Public Enum FormatMessageFlags
    FORMAT_MESSAGE_ALLOCATE_BUFFER = &H100
    FORMAT_MESSAGE_ARGUMENT_ARRAY = &H2000
    FORMAT_MESSAGE_FROM_HMODULE = &H800
    FORMAT_MESSAGE_FROM_STRING = &H400
    FORMAT_MESSAGE_FROM_SYSTEM = &H1000
    FORMAT_MESSAGE_IGNORE_INSERTS = &H200
    FORMAT_MESSAGE_MAX_WIDTH_MASK = &HFF
    FORMAT_MESSAGE_TEXT_LEN = 160 ' from ERRORS.H C++ include file.    
End Enum

Public Enum MemProtectFlags
    PAGE_NOACCESS = &H1
    PAGE_READONLY = &H2
    PAGE_READWRITE = &H4
    PAGE_WRITECOPY = &H8
    PAGE_EXECUTE = &H10
    PAGE_EXECUTE_READ = &H20
    PAGE_EXECUTE_READWRITE = &H40
    PAGE_EXECUTE_WRITECOPY = &H80
    PAGE_GUARD = &H100
    PAGE_NOCACHE = &H200
    PAGE_WRITECOMBINE = &H400
    PAGE_TARGETS_INVALID = &H40000000
    PAGE_TARGETS_NO_UPDATE = &H40000000
End Enum
Public Enum MemProtectGraphics
    PAGE_GRAPHICS_NOACCESS = &H0800
    PAGE_GRAPHICS_READONLY = &H1000
    PAGE_GRAPHICS_READWRITE = &H2000
    PAGE_GRAPHICS_EXECUTE = &H4000
    PAGE_GRAPHICS_EXECUTE_READ = &H8000&
    PAGE_GRAPHICS_EXECUTE_READWRITE = &H10000
    PAGE_GRAPHICS_COHERENT = &H20000
    PAGE_GRAPHICS_NOCACHE = &H40000
End Enum
Public Enum MemProtectEnclave
    PAGE_ENCLAVE_THREAD_CONTROL = &H80000000
    PAGE_REVERT_TO_FILE_MAP = &H80000000
    PAGE_ENCLAVE_UNVALIDATED = &H20000000
    PAGE_ENCLAVE_MASK = &H10000000
    PAGE_ENCLAVE_DECOMMIT = (PAGE_ENCLAVE_MASK Or 0)
    PAGE_ENCLAVE_SS_FIRST = (PAGE_ENCLAVE_MASK Or 1)
    PAGE_ENCLAVE_SS_REST = (PAGE_ENCLAVE_MASK Or 2)
End Enum

Public Enum MemAllocType
    MEM_COMMIT = &H1000
    MEM_RESERVE = &H2000
    MEM_REPLACE_PLACEHOLDER = &H4000
    MEM_RESERVE_PLACEHOLDER = &H40000
    MEM_RESET = &H80000
    MEM_TOP_DOWN = &H100000
    MEM_WRITE_WATCH = &H200000
    MEM_PHYSICAL = &H400000
    MEM_ROTATE = &H800000
    MEM_DIFFERENT_IMAGE_BASE_OK = &H800000
    MEM_RESET_UNDO = &H1000000
    MEM_LARGE_PAGES = &H20000000
    MEM_4MB_PAGES = &H80000000
    MEM_64K_PAGES = (MEM_LARGE_PAGES Or MEM_PHYSICAL)
    MEM_UNMAP_WITH_TRANSIENT_BOOST = &H00000001
    MEM_COALESCE_PLACEHOLDERS = &H00000001
    MEM_PRESERVE_PLACEHOLDER = &H00000002
    MEM_DECOMMIT = &H00004000
    MEM_RELEASE = &H00008000&
    MEM_FREE = &H00010000
    MEM_PRIVATE = &H00020000
    MEM_MAPPED = &H00040000
    MEM_IMAGE = &H01000000
End Enum




Public Const STACK_SIZE_PARAM_IS_A_RESERVATION   = &H00010000

Public Const THREAD_DYNAMIC_CODE_ALLOW  = 1  ' Opt-out of dynamic code generation.
Public Const THREAD_BASE_PRIORITY_LOWRT  = 15  ' value that gets a thread to LowRealtime-1
Public Const THREAD_BASE_PRIORITY_MAX  = 2  ' maximum thread base priority boost
Public Const THREAD_BASE_PRIORITY_MIN  = (-2)  ' minimum thread base priority boost
Public Const THREAD_BASE_PRIORITY_IDLE  = (-15)  ' value that gets a thread to idle

Public Enum ThreadPriorityClasses
    THREAD_PRIORITY_LOWEST = THREAD_BASE_PRIORITY_MIN
    THREAD_PRIORITY_BELOW_NORMAL = (THREAD_PRIORITY_LOWEST + 1)
    THREAD_PRIORITY_NORMAL = 0
    THREAD_PRIORITY_HIGHEST = THREAD_BASE_PRIORITY_MAX
    THREAD_PRIORITY_ABOVE_NORMAL = (THREAD_PRIORITY_HIGHEST - 1)
    THREAD_PRIORITY_ERROR_RETURN = (MAXLONG)
    THREAD_PRIORITY_TIME_CRITICAL = THREAD_BASE_PRIORITY_LOWRT
    THREAD_PRIORITY_IDLE = THREAD_BASE_PRIORITY_IDLE
    THREAD_MODE_BACKGROUND_BEGIN = &H00010000
    THREAD_MODE_BACKGROUND_END = &H00020000
End Enum

Public Const INFINITE As Long = -1


Public Enum ProcessHeapEntryFlags
    PROCESS_HEAP_REGION = &H0001
    PROCESS_HEAP_UNCOMMITTED_RANGE = &H0002
    PROCESS_HEAP_ENTRY_BUSY = &H0004
    PROCESS_HEAP_SEG_ALLOC = &H0008
    PROCESS_HEAP_ENTRY_MOVEABLE = &H0010
    PROCESS_HEAP_ENTRY_DDESHARE = &H0020
End Enum
Public Type PROCESS_HEAP_ENTRY
    lpData As LongPtr
    cbData As Long
    cbOverhead As Byte
    iRegionIndex As Byte
    /* [TypeHint(ProcessHeapEntryFlags)] */ wFlags As Integer
    'UNION: Copy the bytes in BlockOrRegion to PROCESS_HEAP_ENTRY_BLOCK or PROCESS_HEAP_ENTRY_REGION
    #If Win64 Then
    BlockOrRegion(23) As Byte
    #Else
    BlockOrRegion(15) As Byte
    #End If
End Type
Public Type PROCESS_HEAP_ENTRY_BLOCK
    hMem As LongPtr
    dwReserved(2) As Long
End Type
Public Type PROCESS_HEAP_ENTRY_REGION
    dwCommittedSize As Long
    dwUnCommittedSize As Long
    lpFirstBlock As LongPtr
    lpLastBlock As LongPtr
End Type

Public Enum HEAP_INFORMATION_CLASS
    HeapCompatibilityInformation = 0
    HeapEnableTerminationOnCorruption = 1
    HeapOptimizeResources = 3
    HeapTag = 7
End Enum


Public Enum FINDEX_SEARCH_OPS
    FindExSearchNameMatch
    FindExSearchLimitToDirectories
    FindExSearchLimitToDevices
End Enum

Public Enum FINDEX_INFO_LEVELS
    FindExInfoStandard
    FindExInfoBasic
    FindExInfoMaxInfoLevel
End Enum

Public Type BY_HANDLE_FILE_INFORMATION
    dwFileAttributes As Long
    ftCreationTime As FILETIME
    ftLastAccessTime As FILETIME
    ftLastWriteTime As FILETIME
    dwVolumeSerialNumber As Long
    nFileSizeHigh As Long
    nFileSizeLow As Long
    nNumberOfLinks As Long
    nFileIndexHigh As Long
    nFileIndexLow As Long
End Type

Public Enum FILE_INFO_BY_HANDLE_CLASS
    FileBasicInfo
    FileStandardInfo
    FileNameInfo
    FileRenameInfo
    FileDispositionInfo
    FileAllocationInfo
    FileEndOfFileInfo
    FileStreamInfo
    FileCompressionInfo
    FileAttributeTagInfo
    FileIdBothDirectoryInfo
    FileIdBothDirectoryRestartInfo
    FileIoPriorityHintInfo
    FileRemoteProtocolInfo
    FileFullDirectoryInfo
    FileFullDirectoryRestartInfo
    FileStorageInfo
    FileAlignmentInfo
    FileIdInfo
    FileIdExtdDirectoryInfo
    FileIdExtdDirectoryRestartInfo
    FileDispositionInfoEx
    FileRenameInfoEx
    FileCaseSensitiveInfo
    FileNormalizedNameInfo
    MaximumFileInfoByHandleClass
End Enum

Public Enum STREAM_INFO_LEVELS
    FindStreamInfoStandard = 0
    FindStreamInfoMaxInfoLevel = 1
End Enum

Public Type WIN32_FIND_STREAM_DATA
    StreamSize As LARGE_INTEGER
    cStreamName(MAX_PATH + 35) As Integer
End Type
Public Type WIN32_FIND_STREAM_DATAW
    StreamSize As LARGE_INTEGER
    cStreamName(MAX_PATH + 35) As Integer
End Type
Public Type WIN32_FIND_STREAM_DATAA
    StreamSize As LARGE_INTEGER
    cStreamName(MAX_PATH + 35) As Byte
End Type

Public Enum GET_FILEEX_INFO_LEVELS
    GetFileExInfoStandard = 0
    GetFileExMaxInfoLevel = 1
End Enum

Public Enum FINDEX_EXTRA_FLAGS
    FIND_FIRST_EX_CASE_SENSITIVE = 1
    FIND_FIRST_EX_LARGE_FETCH = 2
    FIND_FIRST_EX_ON_DISK_ENTRIES_ONLY = 4
End Enum

Public Type FILE_BASIC_INFO
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
End Type
Public Type FILE_STANDARD_INFO
    AllocationSize As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    NumberOfLinks As Long
    DeletePending As Byte
    Directory As Byte
End Type
Public Type FILE_NAME_INFO
    FileNameLength As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Enum NtFileRenameInfoFlags
    FILE_RENAME_FLAG_REPLACE_IF_EXISTS = &H00000001
    FILE_RENAME_FLAG_POSIX_SEMANTICS = &H00000002
' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN10_RS3)
    FILE_RENAME_FLAG_SUPPRESS_PIN_STATE_INHERITANCE = &H00000004
End Enum
[PackingAlignment(1)]
Public Type FILE_RENAME_INFO
' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN10_RS1)
' union {
    ' BOOLEAN ReplaceIfExists;  // FileRenameInfo
    ' DWORD Flags;              // FileRenameInfoEx
' } DUMMYUNIONNAME;
' #else
    ' BOOLEAN ReplaceIfExists;
' #endif
    Flags As NtFileRenameInfoFlags
'    ReplaceIfExists As Byte
    #If Win64 Then
        pad(3) As Byte
    #End If
    RootDirectory As LongPtr
    FileNameLength As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_DISPOSITION_INFO
    DeleteFile As Byte
End Type
Public Type FILE_ALLOCATION_INFO
    AllocationSize As LARGE_INTEGER
End Type
Public Type FILE_END_OF_FILE_INFO
    EndOfFile As LARGE_INTEGER
End Type
Public Type FILE_ALIGNMENT_INFO
    AlignmentRequirement As Long
End Type
Public Type FILE_COMPRESSION_INFO
    CompressedFileSize As LARGE_INTEGER
    CompressionFormat As Integer
    CompressionUnitShift As Byte
    ChunkShift As Byte
    ClusterShift As Byte
    Reserved(0 To 2) As Byte
End Type
Public Type FILE_ATTRIBUTE_TAG_INFO
    FileAttributes As FILE_ATTRIBUTES
    ReparseTag As Long
End Type
Public Type FILE_ID_BOTH_DIR_INFO
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As Long
    FileNameLength As Long
    EaSize As Long
    ShortNameLength As Byte
    ShortName(0 To 11) As Integer
    FileId As LARGE_INTEGER
    FileName(MAX_PATH - 1) As Integer
End Type
Public Enum PRIORITY_HINT
    IoPriorityHintVeryLow = 0
    IoPriorityHintLow
    IoPriorityHintNormal
    MaximumIoPriorityHintType
End Enum
Public Type FILE_IO_PRIORITY_HINT_INFO
    PriorityHint As PRIORITY_HINT
End Type
Public Enum WNNC_CODES
    WNNC_NET_MSNET = &H00010000
    WNNC_NET_SMB = &H00020000
    WNNC_NET_NETWARE = &H00030000
    WNNC_NET_VINES = &H00040000
    WNNC_NET_10NET = &H00050000
    WNNC_NET_LOCUS = &H00060000
    WNNC_NET_SUN_PC_NFS = &H00070000
    WNNC_NET_LANSTEP = &H00080000
    WNNC_NET_9TILES = &H00090000
    WNNC_NET_LANTASTIC = &H000A0000
    WNNC_NET_AS400 = &H000B0000
    WNNC_NET_FTP_NFS = &H000C0000
    WNNC_NET_PATHWORKS = &H000D0000
    WNNC_NET_LIFENET = &H000E0000
    WNNC_NET_POWERLAN = &H000F0000
    WNNC_NET_BWNFS = &H00100000
    WNNC_NET_COGENT = &H00110000
    WNNC_NET_FARALLON = &H00120000
    WNNC_NET_APPLETALK = &H00130000
    WNNC_NET_INTERGRAPH = &H00140000
    WNNC_NET_SYMFONET = &H00150000
    WNNC_NET_CLEARCASE = &H00160000
    WNNC_NET_FRONTIER = &H00170000
    WNNC_NET_BMC = &H00180000
    WNNC_NET_DCE = &H00190000
    WNNC_NET_AVID = &H001A0000
    WNNC_NET_DOCUSPACE = &H001B0000
    WNNC_NET_MANGOSOFT = &H001C0000
    WNNC_NET_SERNET = &H001D0000
    WNNC_NET_RIVERFRONT1 = &H001E0000
    WNNC_NET_RIVERFRONT2 = &H001F0000
    WNNC_NET_DECORB = &H00200000
    WNNC_NET_PROTSTOR = &H00210000
    WNNC_NET_FJ_REDIR = &H00220000
    WNNC_NET_DISTINCT = &H00230000
    WNNC_NET_TWINS = &H00240000
    WNNC_NET_RDR2SAMPLE = &H00250000
    WNNC_NET_CSC = &H00260000
    WNNC_NET_3IN1 = &H00270000
    WNNC_NET_EXTENDNET = &H00290000
    WNNC_NET_STAC = &H002A0000
    WNNC_NET_FOXBAT = &H002B0000
    WNNC_NET_YAHOO = &H002C0000
    WNNC_NET_EXIFS = &H002D0000
    WNNC_NET_DAV = &H002E0000
    WNNC_NET_KNOWARE = &H002F0000
    WNNC_NET_OBJECT_DIRE = &H00300000
    WNNC_NET_MASFAX = &H00310000
    WNNC_NET_HOB_NFS = &H00320000
    WNNC_NET_SHIVA = &H00330000
    WNNC_NET_IBMAL = &H00340000
    WNNC_NET_LOCK = &H00350000
    WNNC_NET_TERMSRV = &H00360000
    WNNC_NET_SRT = &H00370000
    WNNC_NET_QUINCY = &H00380000
    WNNC_NET_OPENAFS = &H00390000
    WNNC_NET_AVID1 = &H003A0000
    WNNC_NET_DFS = &H003B0000
    WNNC_NET_KWNP = &H003C0000
    WNNC_NET_ZENWORKS = &H003D0000
    WNNC_NET_DRIVEONWEB = &H003E0000
    WNNC_NET_VMWARE = &H003F0000
    WNNC_NET_RSFX = &H00400000
    WNNC_NET_MFILES = &H00410000
    WNNC_NET_MS_NFS = &H00420000
    WNNC_NET_GOOGLE = &H00430000
    WNNC_NET_NDFS = &H00440000
    WNNC_NET_DOCUSHARE = &H00450000
    WNNC_NET_AURISTOR_FS = &H00460000
    WNNC_NET_SECUREAGENT = &H00470000
    WNNC_NET_9P = &H00480000
    WNNC_CRED_MANAGER = &HFFFF0000
'  Network type aliases
    WNNC_NET_LANMAN = WNNC_NET_SMB
End Enum
Public Enum REMOTE_PROTOCOL_FLAGS
    REMOTE_PROTOCOL_FLAG_LOOPBACK = &H00000001
    REMOTE_PROTOCOL_FLAG_OFFLINE = &H00000002
'  Protocol generic flags valid for version 2 and higher
' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN8)
    REMOTE_PROTOCOL_FLAG_PERSISTENT_HANDLE = &H00000004
    REMOTE_PROTOCOL_FLAG_PRIVACY = &H00000008
    REMOTE_PROTOCOL_FLAG_INTEGRITY = &H00000010
    REMOTE_PROTOCOL_FLAG_MUTUAL_AUTH = &H00000020
End Enum
Public Enum FileRemoteProtocolGenericFlags
    REMOTE_PROTOCOL_INFO_FLAG_LOOPBACK = &H00000001
    REMOTE_PROTOCOL_INFO_FLAG_OFFLINE = &H00000002
' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN8)
    REMOTE_PROTOCOL_INFO_FLAG_PERSISTENT_HANDLE = &H00000004
End Enum
Public Enum FileRemoteProtocoSMB2Cap
    RPI_FLAG_SMB2_SHARECAP_TIMEWARP = &H00000002
    RPI_FLAG_SMB2_SHARECAP_DFS = &H00000008
    RPI_FLAG_SMB2_SHARECAP_CONTINUOUS_AVAILABILITY = &H00000010
    RPI_FLAG_SMB2_SHARECAP_SCALEOUT = &H00000020
    RPI_FLAG_SMB2_SHARECAP_CLUSTER = &H00000040
End Enum
Public Enum FileRemoteProtocoSMB2Share
    RPI_SMB2_SHAREFLAG_ENCRYPT_DATA = &H00000001
    RPI_SMB2_SHAREFLAG_COMPRESS_DATA = &H00000002
End Enum
Public Enum FileRemoteProtocoSMB2ServerCap
    RPI_SMB2_FLAG_SERVERCAP_DFS = &H00000001
    RPI_SMB2_FLAG_SERVERCAP_LEASING = &H00000002
    RPI_SMB2_FLAG_SERVERCAP_LARGEMTU = &H00000004
    RPI_SMB2_FLAG_SERVERCAP_MULTICHANNEL = &H00000008
    RPI_SMB2_FLAG_SERVERCAP_PERSISTENT_HANDLES = &H00000010
    RPI_SMB2_FLAG_SERVERCAP_DIRECTORY_LEASING = &H00000020
End Enum

Public Type FILE_REMOTE_PROTOCOL_INFO
    StructureVersion As Integer
    StructureSize As Integer
    Protocol As WNNC_CODES
    ProtocolMajorVersion As Integer
    ProtocolMinorVersion As Integer
    ProtocolRevision As Integer
    Reserved As Integer
    Flags As REMOTE_PROTOCOL_FLAGS
    GenericReserved(7) As Long
    ProtocolSpecific(15) As Long
End Type
Public Type FILE_FULL_DIR_INFO
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As Long
    FileNameLength As Long
    EaSize As Long
    FileName(0 To MAX_PATH) As Integer
End Type
Public Enum STORAGE_INFO_FLAGS
    STORAGE_INFO_FLAGS_ALIGNED_DEVICE = &H00000001
    STORAGE_INFO_FLAGS_PARTITION_ALIGNED_ON_DEVICE = &H00000002
'   If this value is set for the Sector and Parition alignment
'   fields then it means the alignment is not known and the
'   alignment flags have no meaning
    STORAGE_INFO_OFFSET_UNKNOWN = (&Hffffffff)
End Enum
Public Type FILE_STORAGE_INFO
    LogicalBytesPerSector As Long
    PhysicalBytesPerSectorForAtomicity As Long
    PhysicalBytesPerSectorForPerformance As Long
    FileSystemEffectivePhysicalBytesPerSectorForAtomicity As Long
    Flags As STORAGE_INFO_FLAGS
    ByteOffsetForSectorAlignment As Long
    ByteOffsetForPartitionAlignment As Long
End Type
Public Type FILE_ID_128
    Identifier(0 To 15) As Byte
End Type
Public Type FILE_ID_INFO
    VolumeSerialNumber As LongLong
    FileId As FILE_ID_128
End Type
Public Type FILE_ID_EXTD_DIR_INFO
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Long
    EaSize As Long
    ReparsePointTag As Long
    FileId As FILE_ID_128
    FileName(0 To MAX_PATH) As Integer
End Type



Public Enum GMEM
    GMEM_FIXED = &H0000
    GMEM_MOVEABLE = &H0002
    GMEM_NOCOMPACT = &H0010
    GMEM_NODISCARD = &H0020
    GMEM_ZEROINIT = &H0040
    GMEM_MODIFY = &H0080
    GMEM_DISCARDABLE = &H0100
    GMEM_NOT_BANKED = &H1000
    GMEM_SHARE = &H2000
    GMEM_DDESHARE = &H2000
    GMEM_NOTIFY = &H4000
    GMEM_LOWER = &H1000
    GMEM_VALID_FLAGS = &H7F72
    GMEM_INVALID_HANDLE = &H8000&
    GHND = GMEM_MOVEABLE Or GMEM_ZEROINIT
    GPTR = GMEM_FIXED Or GMEM_ZEROINIT
    GMEM_DISCARDED = &H4000
    GMEM_LOCKCOUNT = &H00FF
End Enum

Public Enum LMEM
    LMEM_FIXED = &H0000
    LMEM_MOVEABLE = &H0002
    LMEM_NOCOMPACT = &H0010
    LMEM_NODISCARD = &H0020
    LMEM_ZEROINIT = &H0040
    LMEM_MODIFY = &H0080
    LMEM_DISCARDABLE = &H0F00
    LMEM_VALID_FLAGS = &H0F72
    LMEM_INVALID_HANDLE = &H8000&
    LHND = (LMEM_MOVEABLE Or LMEM_ZEROINIT)
    LPTR = (LMEM_FIXED Or LMEM_ZEROINIT)
    NONZEROLHND = LMEM_MOVEABLE
    NONZEROLPTR = LMEM_FIXED
    LMEM_DISCARDED = &H4000
    LMEM_LOCKCOUNT = &H00FF
End Enum


Public Enum PriorityClass
    NORMAL_PRIORITY_CLASS = &H20
    IDLE_PRIORITY_CLASS = &H40
    HIGH_PRIORITY_CLASS = &H80
    REALTIME_PRIORITY_CLASS = &H100
    BELOW_NORMAL_PRIORITY_CLASS = &H4000
    ABOVE_NORMAL_PRIORITY_CLASS = &H8000&
End Enum

Public Const MAX_MODULE_NAME32 = 255

Public Enum TH32CS_Flags
    TH32CS_SNAPHEAPLIST = &H1
    TH32CS_SNAPPROCESS = &H2
    TH32CS_SNAPTHREAD = &H4
    TH32CS_SNAPMODULE = &H8
    TH32CS_SNAPALL = (TH32CS_SNAPHEAPLIST Or TH32CS_SNAPPROCESS Or TH32CS_SNAPTHREAD Or TH32CS_SNAPMODULE)
    TH32CS_INHERIT = &H80000000
End Enum

Public Type THREADENTRY32
    dwSize As Long
    cntUsage As Long
    th32ThreadID As Long
    th32OwnerProcessID As Long
    tpBasePri As Long
    tpDeltaPri As Long
    dwFlags As Long
End Type

Public Type PROCESSENTRY32A
    dwSize As Long
    cntUsage As Long
    th32ProcessID As Long
    th32DefaultHeapID As LongPtr
    th32ModuleID As Long
    cntThreads As Long
    th32ParentProcessID As Long
    pcPriClassBase As PriorityClass
    dwFlags As Long
    szExeFile (0 To (MAX_PATH - 1)) As Byte
End Type
Public Type PROCESSENTRY32W
    dwSize As Long
    cntUsage As Long
    th32ProcessID As Long
    th32DefaultHeapID As LongPtr
    th32ModuleID As Long
    cntThreads As Long
    th32ParentProcessID As Long
    pcPriClassBase As PriorityClass
    dwFlags As Long
    szExeFile (0 To (MAX_PATH - 1)) As Integer
End Type
Public Type PROCESSENTRY32
    dwSize As Long
    cntUsage As Long
    th32ProcessID As Long
    th32DefaultHeapID As LongPtr
    th32ModuleID As Long
    cntThreads As Long
    th32ParentProcessID As Long
    pcPriClassBase As PriorityClass
    dwFlags As Long
    szExeFile (0 To (MAX_PATH - 1)) As Integer
End Type

Public Enum HL32_Flags
    HF32_DEFAULT = 1  ' process's default heap
    HF32_SHARED = 2  ' is shared heap
End Enum
Public Type HEAPLIST32
    dwSize As LongPtr
    th32ProcessID As Long ' owning process
    th32HeapID As LongPtr ' heap (in owning process's context!)
    dwFlags As HL32_Flags
End Type

Public Enum HL32_EntryFlags
    LF32_FIXED = &H00000001
    LF32_FREE = &H00000002
    LF32_MOVEABLE = &H00000004
End Enum
Public Type HEAPENTRY32
    dwSize As LongPtr
    hHandle As LongPtr ' Handle of this heap block
    dwAddress As LongPtr ' Linear address of start of block
    dwBlockSize As LongPtr ' Size of block in bytes
    dwFlags As HL32_EntryFlags
    dwLockCount As Long
    dwResvd As Long
    th32ProcessID As Long ' owning process
    th32HeapID As LongPtr ' heap block is in
End Type

Public Type MODULEENTRY32A
    dwSize As Long
    th32ModuleID As Long ' This module
    th32ProcessID As Long ' owning process
    GlblcntUsage As Long ' Global usage count on the module
    ProccntUsage As Long ' Module usage count in th32ProcessID's context
    modBaseAddr As LongPtr   ' Base address of module in th32ProcessID's context
    modBaseSize As Long ' Size in bytes of module starting at modBaseAddr
    hModule As LongPtr ' The hModule of this module in th32ProcessID's context
    szModule(0 To (MAX_MODULE_NAME32 + 1 - 1)) As Byte
    szExePath(0 To (MAX_PATH - 1)) As Byte
End Type
Public Type MODULEENTRY32W
    dwSize As Long
    th32ModuleID As Long ' This module
    th32ProcessID As Long ' owning process
    GlblcntUsage As Long ' Global usage count on the module
    ProccntUsage As Long ' Module usage count in th32ProcessID's context
    modBaseAddr As LongPtr   ' Base address of module in th32ProcessID's context
    modBaseSize As Long ' Size in bytes of module starting at modBaseAddr
    hModule As LongPtr ' The hModule of this module in th32ProcessID's context
    szModule(0 To (MAX_MODULE_NAME32 + 1 - 1)) As Integer
    szExePath(0 To (MAX_PATH - 1)) As Integer
End Type
Public Type MODULEENTRY32
    dwSize As Long
    th32ModuleID As Long ' This module
    th32ProcessID As Long ' owning process
    GlblcntUsage As Long ' Global usage count on the module
    ProccntUsage As Long ' Module usage count in th32ProcessID's context
    modBaseAddr As LongPtr   ' Base address of module in th32ProcessID's context
    modBaseSize As Long ' Size in bytes of module starting at modBaseAddr
    hModule As LongPtr ' The hModule of this module in th32ProcessID's context
    szModule(0 To (MAX_MODULE_NAME32 + 1 - 1)) As Integer
    szExePath(0 To (MAX_PATH - 1)) As Integer
End Type



Public Type UNICODE_STRING
    Length As Integer
    MaximumLength As Integer
    Buffer As LongPtr
End Type
Public Type UNICODE_STRING64
    Length As Integer
    MaximumLength As Integer
    Buffer As LongLong
End Type
Public Type UNICODE_STRING32
    Length As Integer
    MaximumLength As Integer
    Buffer As Long
End Type
Public Const UNICODE_STRING_MAX_BYTES As Long = 65534
Public Const UNICODE_STRING_MAX_CHARS As Integer = 32767
Public Type ANSI_STRING
    Length As Integer
    MaximumLength As Integer
    Buffer As LongPtr
End Type
Public Type OEM_STRING
    Length As Integer
    MaximumLength As Integer
    Buffer As LongPtr
End Type
Public Enum PROCESSINFOCLASS
    ProcessBasicInformation ' q: PROCESS_BASIC_INFORMATION, PROCESS_EXTENDED_BASIC_INFORMATION
    ProcessQuotaLimits ' qs: QUOTA_LIMITS, QUOTA_LIMITS_EX
    ProcessIoCounters ' q: IO_COUNTERS
    ProcessVmCounters ' q: VM_COUNTERS, VM_COUNTERS_EX, VM_COUNTERS_EX2
    ProcessTimes ' q: KERNEL_USER_TIMES
    ProcessBasePriority ' s: KPRIORITY
    ProcessRaisePriority ' s: ULONG
    ProcessDebugPort ' q: HANDLE
    ProcessExceptionPort ' s: PROCESS_EXCEPTION_PORT
    ProcessAccessToken ' s: PROCESS_ACCESS_TOKEN
    ProcessLdtInformation ' qs: PROCESS_LDT_INFORMATION // 10
    ProcessLdtSize ' s: PROCESS_LDT_SIZE
    ProcessDefaultHardErrorMode ' qs: ULONG
    ProcessIoPortHandlers ' (kernel-mode only) // PROCESS_IO_PORT_HANDLER_INFORMATION
    ProcessPooledUsageAndLimits ' q: POOLED_USAGE_AND_LIMITS
    ProcessWorkingSetWatch ' q: PROCESS_WS_WATCH_INFORMATION[]; s: void
    ProcessUserModeIOPL ' qs: ULONG (requires SeTcbPrivilege)
    ProcessEnableAlignmentFaultFixup ' s: BOOLEAN
    ProcessPriorityClass ' qs: PROCESS_PRIORITY_CLASS
    ProcessWx86Information ' qs: ULONG (requires SeTcbPrivilege) (VdmAllowed)
    ProcessHandleCount ' q: ULONG, PROCESS_HANDLE_INFORMATION // 20
    ProcessAffinityMask ' s: KAFFINITY
    ProcessPriorityBoost ' qs: ULONG
    ProcessDeviceMap ' qs: PROCESS_DEVICEMAP_INFORMATION, PROCESS_DEVICEMAP_INFORMATION_EX
    ProcessSessionInformation ' q: PROCESS_SESSION_INFORMATION
    ProcessForegroundInformation ' s: PROCESS_FOREGROUND_BACKGROUND
    ProcessWow64Information ' q: ULONG_PTR
    ProcessImageFileName ' q: UNICODE_STRING
    ProcessLUIDDeviceMapsEnabled ' q: ULONG
    ProcessBreakOnTermination ' qs: ULONG
    ProcessDebugObjectHandle ' q: HANDLE // 30
    ProcessDebugFlags ' qs: ULONG
    ProcessHandleTracing ' q: PROCESS_HANDLE_TRACING_QUERY; s: size 0 disables, otherwise enables
    ProcessIoPriority ' qs: IO_PRIORITY_HINT
    ProcessExecuteFlags ' qs: ULONG
    ProcessTlsInformation ' PROCESS_TLS_INFORMATION // ProcessResourceManagement 
    ProcessCookie ' q: ULONG
    ProcessImageInformation ' q: SECTION_IMAGE_INFORMATION
    ProcessCycleTime ' q: PROCESS_CYCLE_TIME_INFORMATION // since VISTA
    ProcessPagePriority ' q: PAGE_PRIORITY_INFORMATION
    ProcessInstrumentationCallback ' s: PVOID or PROCESS_INSTRUMENTATION_CALLBACK_INFORMATION // 40
    ProcessThreadStackAllocation ' s: PROCESS_STACK_ALLOCATION_INFORMATION, PROCESS_STACK_ALLOCATION_INFORMATION_EX
    ProcessWorkingSetWatchEx ' q: PROCESS_WS_WATCH_INFORMATION_EX[]
    ProcessImageFileNameWin32 ' q: UNICODE_STRING
    ProcessImageFileMapping ' q: HANDLE (input)
    ProcessAffinityUpdateMode ' qs: PROCESS_AFFINITY_UPDATE_MODE
    ProcessMemoryAllocationMode ' qs: PROCESS_MEMORY_ALLOCATION_MODE
    ProcessGroupInformation ' q: USHORT[]
    ProcessTokenVirtualizationEnabled ' s: ULONG
    ProcessConsoleHostProcess ' q: ULONG_PTR // ProcessOwnerInformation
    ProcessWindowInformation ' q: PROCESS_WINDOW_INFORMATION // 50
    ProcessHandleInformation ' q: PROCESS_HANDLE_SNAPSHOT_INFORMATION // since WIN8
    ProcessMitigationPolicy ' s: PROCESS_MITIGATION_POLICY_INFORMATION
    ProcessDynamicFunctionTableInformation
    ProcessHandleCheckingMode ' qs: ULONG; s: 0 disables, otherwise enables
    ProcessKeepAliveCount ' q: PROCESS_KEEPALIVE_COUNT_INFORMATION
    ProcessRevokeFileHandles ' s: PROCESS_REVOKE_FILE_HANDLES_INFORMATION
    ProcessWorkingSetControl ' s: PROCESS_WORKING_SET_CONTROL
    ProcessHandleTable ' q: ULONG[] // since WINBLUE
    ProcessCheckStackExtentsMode ' qs: ULONG // KPROCESS->CheckStackExtents (CFG)
    ProcessCommandLineInformation ' q: UNICODE_STRING // 60
    ProcessProtectionInformation ' q: PS_PROTECTION
    ProcessMemoryExhaustion ' PROCESS_MEMORY_EXHAUSTION_INFO // since THRESHOLD
    ProcessFaultInformation ' PROCESS_FAULT_INFORMATION
    ProcessTelemetryIdInformation ' q: PROCESS_TELEMETRY_ID_INFORMATION
    ProcessCommitReleaseInformation ' PROCESS_COMMIT_RELEASE_INFORMATION
    ProcessDefaultCpuSetsInformation
    ProcessAllowedCpuSetsInformation
    ProcessSubsystemProcess
    ProcessJobMemoryInformation ' q: PROCESS_JOB_MEMORY_INFO
    ProcessInPrivate ' s: void // ETW // since THRESHOLD2 // 70
    ProcessRaiseUMExceptionOnInvalidHandleClose ' qs: ULONG; s: 0 disables, otherwise enables
    ProcessIumChallengeResponse
    ProcessChildProcessInformation ' q: PROCESS_CHILD_PROCESS_INFORMATION
    ProcessHighGraphicsPriorityInformation ' qs: BOOLEAN (requires SeTcbPrivilege)
    ProcessSubsystemInformation ' q: SUBSYSTEM_INFORMATION_TYPE // since REDSTONE2
    ProcessEnergyValues ' q: PROCESS_ENERGY_VALUES, PROCESS_EXTENDED_ENERGY_VALUES
    ProcessPowerThrottlingState ' qs: POWER_THROTTLING_PROCESS_STATE
    ProcessActivityThrottlePolicy 'ProcessReserved3Information  // PROCESS_ACTIVITY_THROTTLE_POLICY -???? no def; should be ACTIVITY_THROTTLE_POLICY?
    ProcessWin32kSyscallFilterInformation ' q: WIN32K_SYSCALL_FILTER
    ProcessDisableSystemAllowedCpuSets ' 80
    ProcessWakeInformation ' PROCESS_WAKE_INFORMATION
    ProcessEnergyTrackingState ' PROCESS_ENERGY_TRACKING_STATE
    ProcessManageWritesToExecutableMemory ' MANAGE_WRITES_TO_EXECUTABLE_MEMORY // since REDSTONE3
    ProcessCaptureTrustletLiveDump
    ProcessTelemetryCoverage
    ProcessEnclaveInformation
    ProcessEnableReadWriteVmLogging ' PROCESS_READWRITEVM_LOGGING_INFORMATION
    ProcessUptimeInformation ' q: PROCESS_UPTIME_INFORMATION
    ProcessImageSection ' q: HANDLE
    ProcessDebugAuthInformation ' since REDSTONE4 // 90
    ProcessSystemResourceManagement ' PROCESS_SYSTEM_RESOURCE_MANAGEMENT
    ProcessSequenceNumber ' q: ULONGLONG
    ProcessLoaderDetour ' since REDSTONE5
    ProcessSecurityDomainInformation ' PROCESS_SECURITY_DOMAIN_INFORMATION
    ProcessCombineSecurityDomainsInformation ' PROCESS_COMBINE_SECURITY_DOMAINS_INFORMATION
    ProcessEnableLogging ' PROCESS_LOGGING_INFORMATION
    ProcessLeapSecondInformation ' PROCESS_LEAP_SECOND_INFORMATION
    ProcessFiberShadowStackAllocation ' PROCESS_FIBER_SHADOW_STACK_ALLOCATION_INFORMATION // since 19H1
    ProcessFreeFiberShadowStackAllocation ' PROCESS_FREE_FIBER_SHADOW_STACK_ALLOCATION_INFORMATION
    ProcessAltSystemCallInformation ' qs: BOOLEAN (kernel-mode only) // INT2E // since 20H1 // 100
    ProcessDynamicEHContinuationTargets ' PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION
    ProcessDynamicEnforcedCetCompatibleRanges ' PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGES_INFORMATION // since 20H2
    ProcessCreateStateChange ' since WIN11
    ProcessApplyStateChange
    ProcessEnableOptionalXStateFeatures
    ProcessAltPrefetchParam ' since 11H1
    ProcessAssignCpuPartitions
    ProcessPriorityClassEx
    ProcessMembershipInformation
    ProcessEffectiveIoPriority
    ProcessEffectivePagePriority
    MaxProcessInfoClass
End Enum


Public Type PROCESS_BASIC_INFORMATION
    ExitStatus As NTSTATUS
    PebBaseAddress As LongPtr 'PPEB
    AffinityMask As LongPtr
    BasePriority As KPRIORITY
    UniqueProcessId As LongPtr
    InheritedFromUniqueProcessId As LongPtr
End Type
Public Type PROCESS_BASIC_INFORMATION32
    ExitStatus As NTSTATUS
    PebBaseAddress As Long 'PPEB
    AffinityMask As Long
    BasePriority As KPRIORITY
    UniqueProcessId As Long
    InheritedFromUniqueProcessId As Long
End Type
Public Type PROCESS_BASIC_INFORMATION64
    ExitStatus                      As Long
    'Reserved0                       As Long
    PebBaseAddress                  As LongLong
    AffinityMask                    As LongLong
    BasePriority                    As Long
    'Reserved1                       As Long
    uUniqueProcessId                As LongLong
    uInheritedFromUniqueProcessId   As LongLong
End Type


Public Type VM_COUNTERS
    PeakVirtualSize As LongPtr
    VirtualSize As LongPtr
    PageFaultCount As Long
    PeakWorkingSetSize As LongPtr
    WorkingSetSize As LongPtr
    QuotaPeakPagedPoolUsage As LongPtr
    QuotaPagedPoolUsage As LongPtr
    QuotaPeakNonPagedPoolUsage As LongPtr
    QuotaNonPagedPoolUsage As LongPtr
    PagefileUsage As LongPtr
    PeakPagefileUsage As LongPtr
End Type
Public Type VM_COUNTERS_EX
    PeakVirtualSize As LongPtr
    VirtualSize As LongPtr
    PageFaultCount As Long
    PeakWorkingSetSize As LongPtr
    WorkingSetSize As LongPtr
    QuotaPeakPagedPoolUsage As LongPtr
    QuotaPagedPoolUsage As LongPtr
    QuotaPeakNonPagedPoolUsage As LongPtr
    QuotaNonPagedPoolUsage As LongPtr
    PagefileUsage As LongPtr
    PeakPagefileUsage As LongPtr
    PrivateUsage As LongPtr
End Type
Public Type VM_COUNTERS_EX2
    CountersEx As VM_COUNTERS_EX
    PrivateWorkingSetSize As LongPtr
    SharedCommitUsage As LongPtr
End Type

Public Type KERNEL_USER_TIMES
    CreateTime As LARGE_INTEGER
    ExitTime As LARGE_INTEGER
    KernelTime As LARGE_INTEGER
    UserTime As LARGE_INTEGER
End Type

[Description("**WARNING:** The actual KPRIORITY is a single byte type. Do not substitute this enum for it, this is to compare against the results or assign with CByte ONLY")]
Public Enum KPRIORITY
    LOW_PRIORITY = 0  ' Lowest thread priority level
    LOW_REALTIME_PRIORITY = 16  ' Lowest realtime priority level
    HIGH_PRIORITY = 31  ' Highest thread priority level
    MAXIMUM_PRIORITY = 32  ' Number of thread priority levels
End Enum

Public Enum ProcessExceptionPortFlags
    PROCESS_EXCEPTION_PORT_ALL_STATE_BITS = 3
    PROCESS_EXCEPTION_PORT_ALL_STATE_FLAGS = ((1 << PROCESS_EXCEPTION_PORT_ALL_STATE_BITS) - 1)
End Enum

Public Type PROCESS_EXCEPTION_PORT
    ' Handle to the exception port. No particular access required.
    ExceptionPortHandle As LongPtr
    ' Miscellaneous state flags to be cached along with the exception
    ' port in the kernel.
    StateFlags As ProcessExceptionPortFlags
End Type

Public Type PROCESS_ACCESS_TOKEN
    ' Handle to Primary token to assign to the process.
    ' TOKEN_ASSIGN_PRIMARY access to this token is needed.
    Token As LongPtr
    ' Handle to the initial thread of the process.
    ' A process's access token can only be changed if the process has
    ' no threads or a single thread that has not yet begun execution.
    ' N.B. This field is unused.
    Thread As LongPtr
End Type

Public Enum EMULATOR_PORT_ACCESS_TYPE
    EPAT_Uchar = 0
    EPAT_Ushort = 1
    EPAT_Ulong = 2
End Enum
Public Enum EmulatorAccessEntryMode
    EMULATOR_READ_ACCESS = &H01
    EMULATOR_WRITE_ACCESS = &H02
End Enum
Public Type EMULATOR_ACCESS_ENTRY
    BasePort As Long
    NumConsecutivePorts As Long
    AccessType As EMULATOR_PORT_ACCESS_TYPE
    AccessMode As Byte 'EmulatorAccessEntryMode?
    StringSupport As Byte
    Routine As LongPtr
End Type
Public Type PROCESS_IO_PORT_HANDLER_INFORMATION
    Install As Byte ' true if handlers to be installed
    NumEntries As Long
    Context As Long
    EmulatorAccessEntries As LongPtr 'PEMULATOR_ACCESS_ENTRY
End Type

Public Type POOLED_USAGE_AND_LIMITS
    PeakPagedPoolUsage As LongPtr
    PagedPoolUsage As LongPtr
    PagedPoolLimit As LongPtr
    PeakNonPagedPoolUsage As LongPtr
    NonPagedPoolUsage As LongPtr
    NonPagedPoolLimit As LongPtr
    PeakPagefileUsage As LongPtr
    PagefileUsage As LongPtr
    PagefileLimit As LongPtr
End Type

Public Type PROCESS_WS_WATCH_INFORMATION
    FaultingPc As LongPtr
    FaultingVa As LongPtr
End Type

Public Enum ProcessPriorityClassValues
    PROCESS_PRIORITY_CLASS_UNKNOWN = 0
    PROCESS_PRIORITY_CLASS_IDLE = 1
    PROCESS_PRIORITY_CLASS_NORMAL = 2
    PROCESS_PRIORITY_CLASS_HIGH = 3
    PROCESS_PRIORITY_CLASS_REALTIME = 4
    PROCESS_PRIORITY_CLASS_BELOW_NORMAL = 5
    PROCESS_PRIORITY_CLASS_ABOVE_NORMAL = 6
End Enum
Public Type PROCESS_PRIORITY_CLASS
    Foreground As Byte
    /* [ TypeHint(ProcessPriorityClassValues) ] */ PriorityClass As Byte
End Type

Public Type PROCESS_HANDLE_INFORMATION
    HandleCount As Long
    HandleCountHighWatermark As Long
End Type

Public Type PROCESS_DEVICEMAP_INFORMATION
    SetOrQuery(35) As Byte
    ' union {
        ' struct {
            ' HANDLE DirectoryHandle;
        ' } Set;
        ' struct {
            ' ULONG DriveMap;
            ' UCHAR DriveType[ 32 ];
        ' } Query;
    ' } DUMMYUNIONNAME;
End Type
Public Enum ProcessDevmapExFlags
    PROCESS_LUID_DOSDEVICES_ONLY = &H1
End Enum


Public Type PROCESS_DEVICEMAP_INFORMATION_EX
    SetOrQuery(35) As Byte
    ' union {
        ' struct {
            ' HANDLE DirectoryHandle;
        ' } Set;
        ' struct {
            ' ULONG DriveMap;
            ' UCHAR DriveType[ 32 ];
        ' } Query;
    ' } DUMMYUNIONNAME;
    Flags As ProcessDevmapExFlags
End Type

Public Type PROCESS_SESSION_INFORMATION
    SessionId As Long
End Type

Public Type PROCESS_FOREGROUND_BACKGROUND
    Foreground As Byte
End Type

Public Enum ProcessHandleTraceTypes
    HANDLE_TRACE_DB_OPEN = 1
    HANDLE_TRACE_DB_CLOSE = 2
    HANDLE_TRACE_DB_BADREF = 3
End Enum
Public Const PROCESS_HANDLE_TRACING_MAX_STACKS = 16
Public Type PROCESS_HANDLE_TRACING_ENTRY
    Handle As LongPtr
    ClientId As CLIENT_ID
    Type As ProcessHandleTraceTypes
    Stacks(0 To (PROCESS_HANDLE_TRACING_MAX_STACKS - 1)) As LongPtr
End Type
[Description("⚠️ **WARNING:** This structure cannot be used as-is. You must receive all info as a byte buffer, copy the first two members, redim, then copy the appropriate size to HandleTrace(0)")]
Public Type PROCESS_HANDLE_TRACING_QUERY
    Handle As LongPtr
    TotalTraces As Long
    HandleTrace() As PROCESS_HANDLE_TRACING_ENTRY
End Type

Public Enum ProcessHandleTracingFlags
    PROCESS_HANDLE_EXCEPTIONS_ENABLED = &H1
End Enum
Public Type PROCESS_HANDLE_TRACING_ENABLE
    Flags As ProcessHandleTracingFlags
End Type
Public Enum ProcessHandleTracingExFlags
    PROCESS_HANDLE_RAISE_UM_EXCEPTION_ON_INVALID_HANDLE_CLOSE_DISABLED = &H00000000
    PROCESS_HANDLE_RAISE_UM_EXCEPTION_ON_INVALID_HANDLE_CLOSE_ENABLED = &H00000001
End Enum
Public Type PROCESS_HANDLE_TRACING_ENABLE_EX
    Flags As ProcessHandleTracingExFlags
    TotalSlots As Long
End Type

Public Type THREAD_TLS_INFORMATION
    Flags As Long
    'union {
    '    PVOID* TlsVector;
    '    PVOID TlsModulePointer;
    '};
    VectorOrModulePointer As LongPtr
    ThreadId As LongPtr
End Type
Public Enum PROCESS_TLS_INFORMATION_TYPE
    ProcessTlsReplaceIndex = 0
    ProcessTlsReplaceVector = 1
    MaxProcessTlsOperation = 2
End Enum
[Description("⚠️ **WARNING:** This structure cannot be used as-is. You must receive all info as a byte buffer, copy the first five members, redim, then copy the appropriate size to ThreadData(0)")]
Public Type PROCESS_TLS_INFORMATION
    Flags As Long
    OperationType As PROCESS_TLS_INFORMATION_TYPE
    ThreadDataCount As Long
    TlsIndex As Long
    PreviousCount As Long
    ThreadData() As THREAD_TLS_INFORMATION
End Type



Public Enum PBI_BITFIELD
    PBI_IsProtectedProcess = &B00000000_00000000_00000001
    PBI_IsWow64Process = &B00000000_00000000_00000010
    PBI_IsProcessDeleting = &B00000000_00000000_00000100
    PBI_IsCrossSessionCreate = &B10000
    PBI_IsFrozen = &B100000
    PBI_IsBackground = &B1000000
    PBI_IsStronglyNamed = &B10000000
    PBI_IsSecureProcess = &B100000000
    PBI_IsSubsystemProcess = &B1000000000
End Enum
Public Type PROCESS_EXTENDED_BASIC_INFORMATION
    Size As LongPtr
    BasicInfo As PROCESS_BASIC_INFORMATION
    Flags As PBI_BITFIELD
End Type

Public Type PROCESS_MEMBERSHIP_INFORMATION
    ServerSiloId As Long
End Type


Public Type PROCESS_CYCLE_TIME_INFORMATION
    AccumulatedCycles As LongLong
    CurrentCycleCount As LongLong
End Type

Public Type PAGE_PRIORITY_INFORMATION
    PagePriority As MEMORY_PRIORITY_VALUES
End Type

Public Type PROCESS_INSTRUMENTATION_CALLBACK_INFORMATION
    Version As Long
    Reserved As Long
    Callback As LongPtr
End Type

Public Type PROCESS_STACK_ALLOCATION_INFORMATION
    ReserveSize As LongPtr
    ZeroBits As LongPtr
    StackBase As LongPtr
End Type
Public Type PROCESS_STACK_ALLOCATION_INFORMATION_EX
    PreferredNode As Long
    Reserved0 As Long
    Reserved1 As Long
    Reserved2 As Long
    AllocInfo As PROCESS_STACK_ALLOCATION_INFORMATION
End Type

Public Type PROCESS_WS_WATCH_INFORMATION_EX
    BasicInfo As PROCESS_WS_WATCH_INFORMATION
    FaultingThreadId As LongPtr
    Flags As LongPtr
End Type

' typedef union _PROCESS_AFFINITY_UPDATE_MODE
' {
    ' ULONG Flags;
    ' struct
    ' {
        ' ULONG EnableAutoUpdate : 1;
        ' ULONG Permanent : 1;
        ' ULONG Reserved : 30;
    ' };
' } PROCESS_AFFINITY_UPDATE_MODE, 
Public Enum ProcessAffinityUpdateModes
    PAUM_EnableAutoUpdate = &H1
    PAUM_Permanent = &H2
End Enum
Public Type PROCESS_AFFINITY_UPDATE_MODE
    Flags As ProcessAffinityUpdateModes
End Type

' typedef union _PROCESS_MEMORY_ALLOCATION_MODE
' {
    ' ULONG Flags;
    ' struct
    ' {
        ' ULONG TopDown : 1;
        ' ULONG Reserved : 31;
    ' };
' } PROCESS_MEMORY_ALLOCATION_MODE
Public Enum ProcessMemAllocModes
    PMAM_TopDown = 1
End Enum
Public Type PROCESS_MEMORY_ALLOCATION_MODE
    Flags As ProcessMemAllocModes
End Type

Public Type PROCESS_WINDOW_INFORMATION
    WindowFlags As Long
    WindowTitleLength As Integer
    WindowTitle(1024) As Integer
End Type

Public Type PROCESS_HANDLE_TABLE_ENTRY_INFO
    HandleValue As LongPtr
    HandleCount As LongPtr
    PointerCount As LongPtr
    GrantedAccess As Long
    ObjectTypeIndex As Long
    HandleAttributes As Long
    Reserved As Long
End Type
[Description("⚠️ **WARNING:** This structure cannot be used as-is. You must receive all info as a byte buffer, copy the first two members, redim, then copy the appropriate size to Handles(0)")]
Public Type PROCESS_HANDLE_SNAPSHOT_INFORMATION
    NumberOfHandles As LongPtr
    Reserved As LongPtr
    Handles() As PROCESS_HANDLE_TABLE_ENTRY_INFO
End Type

Public Type PROCESS_KEEPALIVE_COUNT_INFORMATION
    WakeCount As Long
    NoWakeCount As Long
End Type

Public Type PROCESS_REVOKE_FILE_HANDLES_INFORMATION
    TargetDevicePath As UNICODE_STRING
End Type

Public Enum PROCESS_WORKING_SET_OPERATION
    ProcessWorkingSetSwap
    ProcessWorkingSetEmpty
    ProcessWorkingSetOperationMax
End Enum

Public Type PROCESS_WORKING_SET_CONTROL
    Version As Long
    Operation As PROCESS_WORKING_SET_OPERATION
    Flags As Long
End Type

Public Type PROCESS_FAULT_INFORMATION
    FaultFlags As Long
    AdditionalInfo As Long
End Type

Public Type PROCESS_TELEMETRY_ID_INFORMATION
    HeaderSize As Long
    ProcessId As Long
    ProcessStartKey As LongLong
    CreateTime As LongLong
    CreateInterruptTime As LongLong
    CreateUnbiasedInterruptTime As LongLong
    ProcessSequenceNumber As LongLong
    SessionCreateTime As LongLong
    SessionId As Long
    BootId As Long
    ImageChecksum As Long
    ImageTimeDateStamp As Long
    UserSidOffset As Long
    ImagePathOffset As Long
    PackageNameOffset As Long
    RelativeAppNameOffset As Long
    CommandLineOffset As Long
End Type

Public Enum ProcessCommitReleaseFlags
    PCRF_Eligible = &H1
    PCRF_ReleaseRepurposedMemResetCommit = &H2
    PCRF_ForceReleaseMemResetCommit = &H4
End Enum
Public Type PROCESS_COMMIT_RELEASE_INFORMATION
    Version As Long
    '    struct
    '    {
    '        ULONG Eligible : 1;
    '        ULONG ReleaseRepurposedMemResetCommit : 1;
    '        ULONG ForceReleaseMemResetCommit : 1;
    '        ULONG Spare : 29;
    '    };
    Flags As ProcessCommitReleaseFlags
    CommitDebt As LongPtr
    CommittedMemResetSize As LongPtr
    RepurposedMemResetSize As LongPtr
End Type

Public Type PROCESS_JOB_MEMORY_INFO
    SharedCommitUsage As LongLong
    PrivateCommitUsage As LongLong
    PeakPrivateCommitUsage As LongLong
    PrivateCommitLimit As LongLong
    TotalCommitLimit As LongLong
End Type

Public Type PROCESS_CHILD_PROCESS_INFORMATION
    ProhibitChildProcesses As Byte
    AlwaysAllowSecureChildProcess As Byte ' REDSTONE3
    AuditProhibitChildProcesses As Byte
End Type

Public Enum SUBSYSTEM_INFORMATION_TYPE
    SubsystemInformationTypeWin32
    SubsystemInformationTypeWSL
    MaxSubsystemInformationType
End Enum

' union _ENERGY_STATE_DURATION
' {
    ' ULONGLONG Value;                                                        //0x0
    ' struct
    ' {
        ' ULONG LastChangeTime;                                               //0x0
    ' ULONG Duration:31;                                                      //0x4
    ' };
    ' ULONG IsInState:1;                                                      //0x4
' };
Public Type ENERGY_STATE_DURATION
    Value As LongLong
End Type

Public Enum ProcessEnergyValuesWindowFlags
    PEVWF_Foreground = &H1
    PEVWF_DesktopVisible = &H2
End Enum

[Description("Through Redstone 1 (Win10 1607). For WindowInformation, use ProcessEnergyValuesWindowFlags")]
Public Type PROCESS_ENERGY_VALUES_7
    Cycles(1, 3) As LongLong '0x0
    DiskEnergy As LongLong '0x40
    NetworkTailEnergy As LongLong '0x48
    MBBTailEnergy As LongLong '0x50
    NetworakTxRxBytes As LongLong '0x58
    MBBTxRxBytes As LongLong '0x60
    /* [ TypeHint(ProcessEnergyValuesWindowFlags) ] */ WindowInformation As Integer
    CompositorRendered As Integer '0x6a
    DirtyGenerated As Integer '0x6c
    DirtyPropagated As Integer '0x6e
    DesktopVisibilityReportTimestamp As LongLong '0x70
    DesktopVisibleTime As LongLong '0x78
    ForegroundReportTimestamp As LongLong '0x80
    ForegroundTime As LongLong '0x88
End Type

[Description("For Windows 10 Redstone 2 and newer (Last verified: Win11 22H2). For earlier, use PROCESS_ENERGY_VALUES_7")]
Public Type PROCESS_ENERGY_VALUES
    Cycles(1, 3) As LongLong '0x0
    DiskEnergy As LongLong '0x40
    NetworkTailEnergy As LongLong '0x48
    MBBTailEnergy As LongLong '0x50
    NetworakTxRxBytes As LongLong '0x58
    MBBTxRxBytes As LongLong '0x60
    ' union
    ' {
    '     union _ENERGY_STATE_DURATION Durations[3];                          //0x68
    '     struct
    '     {
    '         union _ENERGY_STATE_DURATION ForegroundDuration;                //0x68
    '         union _ENERGY_STATE_DURATION DesktopVisibleDuration;            //0x70
    '         union _ENERGY_STATE_DURATION PSMForegroundDuration;             //0x78
    '     };
    ' };
    ForegroundDuration As ENERGY_STATE_DURATION
    DesktopVisiableDuration As ENERGY_STATE_DURATION
    PMSForegroundDuration As ENERGY_STATE_DURATION
    CompositionRendered As Long
    CompositionDirtyGenerated As Long
    CompositionDirtyPropagated As Long
    Reserved1 As Long
    AttributedCycles(1, 3) As LongLong '0x78
    WorkOnBehalfCycles(1, 3) As LongLong '0x88
End Type

Public Type TIMELINE_BITMAP
    ' union _TIMELINE_BITMAP
    ' {
        ' ULONGLONG Value;                                                        //0x0
        ' struct
        ' {
            ' ULONG EndTime;                                                      //0x0
        ' };
        ' ULONG Bitmap;                                                           //0x4
    ' }; 
    Value As LongLong
End Type
[Description("Win10 Redstone 2 (1703/Creators Update) **ONLY**")]
Public Type PROCESS_ENERGY_VALUES_EXTENSION_1703
    CpuTimeline As TIMELINE_BITMAP
    DiskTimeline As TIMELINE_BITMAP
    NetworkTimeline As TIMELINE_BITMAP
    MBBTimeline As TIMELINE_BITMAP
    ForegroundTimeline As TIMELINE_BITMAP
    DesktopVisibleTimeline As TIMELINE_BITMAP
    CompositionRenderedTimeline As TIMELINE_BITMAP
    CompositionDirtyGeneratedTimeline As TIMELINE_BITMAP
    CompositionDirtyPropagatedTimeline As TIMELINE_BITMAP
End Type
[Description("Win10 Redstone 3+ (Last verified: Win11 22H2). For Redstone 2 use _1703 variant.")]
Public Type PROCESS_ENERGY_VALUES_EXTENSION
    CpuTimeline As TIMELINE_BITMAP
    DiskTimeline As TIMELINE_BITMAP
    NetworkTimeline As TIMELINE_BITMAP
    MBBTimeline As TIMELINE_BITMAP
    ForegroundTimeline As TIMELINE_BITMAP
    DesktopVisibleTimeline As TIMELINE_BITMAP
    CompositionRenderedTimeline As TIMELINE_BITMAP
    CompositionDirtyGeneratedTimeline As TIMELINE_BITMAP
    CompositionDirtyPropagatedTimeline As TIMELINE_BITMAP
    InputTimeline As TIMELINE_BITMAP
    AudioInTimeline As TIMELINE_BITMAP
    AudioOutTimeline As TIMELINE_BITMAP
    DisplayRequiredTimeline As TIMELINE_BITMAP
    KeyboardInputTimeline As TIMELINE_BITMAP
    InputDuration As ENERGY_STATE_DURATION
    AudioInDuration As ENERGY_STATE_DURATION
    AudioOutDuration As ENERGY_STATE_DURATION
    DisplayRequiredDuration As ENERGY_STATE_DURATION
    PSMBackgroundDuration As ENERGY_STATE_DURATION
    KeyboardInput As Long
    MouseInput As Long
End Type
[Description("Win10 Redstone 2 (1703/Creators Update) **ONLY**")]
Public Type PROCESS_EXTENDED_ENERGY_VALUES_1703
    Base As PROCESS_ENERGY_VALUES
    Extension As PROCESS_ENERGY_VALUES_EXTENSION_1703
End Type
[Description("Win10 Redstone 3+ (Last verified: Win11 22H2). For Redstone 2 use _1703 variant.")]
Public Type PROCESS_EXTENDED_ENERGY_VALUES
    Base As PROCESS_ENERGY_VALUES
    Extension As PROCESS_ENERGY_VALUES_EXTENSION
End Type

Public Enum ProcessPowerThrottlingVersions
    POWER_THROTTLING_PROCESS_CURRENT_VERSION = 1
End Enum
Public Enum ProcessPowerThrottlingFlags
    POWER_THROTTLING_PROCESS_EXECUTION_SPEED = &H1
    POWER_THROTTLING_PROCESS_DELAYTIMERS = &H2
    POWER_THROTTLING_PROCESS_VALID_FLAGS = ((POWER_THROTTLING_PROCESS_EXECUTION_SPEED Or POWER_THROTTLING_PROCESS_DELAYTIMERS))
End Enum
Public Type POWER_THROTTLING_PROCESS_STATE
    Version As ProcessPowerThrottlingVersions
    ControlMask As ProcessPowerThrottlingFlags
    StateMask As ProcessPowerThrottlingFlags
End Type

Public Enum ACTIVITY_THROTTLE_POLICY_OP
    ActivityThrottlePolicyDisable = 0
    ActivityThrottlePolicyEnable = 1
    ActivityThrottlePolicyDefault = 2
    MaxActivityThrottlePolicy = 2
End Enum
Public Enum ProcessPowerThrottlePolicyFlags
    ACTIVITY_THROTTLE_EXECUTIONSPEED = &H1
    ACTIVITY_THROTTLE_DELAYTIMERS = &H2
    ACTIVITY_THROTTLE_ALL = ((ACTIVITY_THROTTLE_EXECUTIONSPEED Or ACTIVITY_THROTTLE_DELAYTIMERS))
End Enum
Public Enum ProcessPowerThrottlePolicyVersions
    ACTIVITY_THROTTLE_POLICY_VERSION = 1
End Enum
Public Type ACTIVITY_THROTTLE_POLICY
    Version As ProcessPowerThrottlePolicyVersions
    Operation As ACTIVITY_THROTTLE_POLICY_OP
    PolicyFlags As ProcessPowerThrottlePolicyFlags
End Type

Public Type WIN32K_SYSCALL_FILTER
    FilterState As Long
    FilterSet As Long
End Type

Public Type JOBOBJECT_WAKE_FILTER
    HighEdgeFilter As Long
    LowEdgeFilter As Long
End Type
Public Type PROCESS_WAKE_INFORMATION
    NotificationChannel As LongLong
    WakeCounters(0 To 6) As Long
    WakeFilter As LongPtr '*struct _JOBOBJECT_WAKE_FILTER
End Type

Public Type PROCESS_ENERGY_TRACKING_STATE
    StateUpdateMask As Long
    StateDesiredValue As Long
    StateSequence As Long
    ' ULONG UpdateTag : 1;
    UpdateTag As Long
    Tag(0 To 63) As Integer
End Type

Public Type MANAGE_WRITES_TO_EXECUTABLE_MEMORY
    VerionAndFlags As Long
    ' ULONG Version : 8;
    ' ULONG ProcessEnableWriteExceptions : 1;
    ' ULONG ThreadAllowWrites : 1;
    ' ULONG Spare : 22;
    KernelWriteToExecutableSignal As LongPtr '19H1
End Type

Public Enum ProcessReadWriteLoggingInfoFlags
    PRWLIF_EnableReadVmLogging = &H1
    PRWLIF_EnableWriteVmLogging = &H2
End Enum
[Description("Flags in ProcessReadWriteLoggingInfoFlags")]
Public Type PROCESS_READWRITEVM_LOGGING_INFORMATION
    /* [ TypeHint(ProcessReadWriteLoggingInfoFlags) ] */ Flags As Byte
End Type

Public Type PROCESS_UPTIME_INFORMATION
    QueryInterruptTime As LongLong
    QueryUnbiasedTime As LongLong
    EndInterruptTime As LongLong
    TimeSinceCreation As LongLong
    Uptime As LongLong
    SuspendedTime As LongLong
    ' union
    ' {
        ' ULONG HangCount : 4;
        ' ULONG GhostCount : 4;
        ' ULONG Crashed : 1;
        ' ULONG Terminated : 1;       
    ' };
    HangCount As Byte
    GhostCount As Byte
    CrashedTerminated As Byte
End Type

Public Type PROCESS_SYSTEM_RESOURCE_MANAGEMENT
    ' typedef union _PROCESS_SYSTEM_RESOURCE_MANAGEMENT
    ' {
        ' ULONG Flags;
        ' struct
        ' {
            ' ULONG Foreground : 1;
            ' ULONG Reserved : 31;
        ' };
    ' } PROCESS_SYSTEM_RESOURCE_MANAGEMENT, *PPROCESS_SYSTEM_RESOURCE_MANAGEMENT;
    FlagForeground As Long
End Type

Public Type PROCESS_SECURITY_DOMAIN_INFORMATION
    SecurityDomain As LongLong
End Type

Public Type PROCESS_COMBINE_SECURITY_DOMAINS_INFORMATION
    ProcessHandle As LongPtr
End Type

Public Enum ProcessLoggingInfoFlags
    PLIF_EnableReadVmLogging = &H1
    PLIF_EnableWriteVmLogging = &H2
    PLIF_EnableProcessSuspendResumeLogging = &H4
    PLIF_EnableThreadSuspendResumeLogging = &H8
End Enum
Public Type PROCESS_LOGGING_INFORMATION
    Flags As ProcessLoggingInfoFlags
End Type

Public Type PROCESS_FIBER_SHADOW_STACK_ALLOCATION_INFORMATION
    ReserveSize As LongLong
    CommitSize As LongLong
    PreferredNode As Long
    Reserved As Long
    Ssp As LongPtr
End Type
Public Type PROCESS_FREE_FIBER_SHADOW_STACK_ALLOCATION_INFORMATION
    Ssp As LongPtr
End Type

Public Enum ProcessDynamicEHFlags
    DYNAMIC_EH_CONTINUATION_TARGET_ADD = &H01
    DYNAMIC_EH_CONTINUATION_TARGET_PROCESSED = &H02
End Enum
[Description("Flags: ProcessDynamicEHFlags")]
Public Type PROCESS_DYNAMIC_EH_CONTINUATION_TARGET
    TargetAddress As LongPtr
    [Description("Flags: ProcessDynamicEHFlags")]
    Flags As LongLong
End Type
Public Type PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION
    NumberOfTargets As Integer
    Reserved As Integer
    Reserved2 As Long
    Targets As LongPtr '*PROCESS_DYNAMIC_EH_CONTINUATION_TARGET
End Type

Public Type PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE
    BaseAddress As LongPtr
    Size As LongPtr
    Flags As Long
End Type
Public Type PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGES_INFORMATION
    NumberOfRanges As Integer
    Reserved As Integer
    Reserved2 As Long
    Ranges As LongPtr 'PPROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE
End Type

Public Type RTL_DRIVE_LETTER_CURDIR
    Flags As Integer
    Length As Integer
    TimeStamp As Long
    DosPath As UNICODE_STRING
End Type
Public Type CURDIR
    DosPath As UNICODE_STRING
    Handle As LongPtr
End Type
Public Type LIST_ENTRY
    Flink As LongPtr
    Blink As LongPtr
End Type
Public Type LIST_ENTRY32
    Flink As Long
    Blink As Long
End Type
Public Type LIST_ENTRY64
    Flink As LongLong
    Blink As LongLong
End Type
#If Win64 Then
Public Type SLIST_ENTRY
    Next As LongLong
    pad As LongLong
End Type
Public Type SLIST_HEADER
    HeaderX64 As LongLong
    Alignment As LongLong
End Type
#Else
Public Type SLIST_ENTRY
    Next As Long
End Type
Public Type SLIST_HEADER
    Next As SLIST_ENTRY
    Depth As Integer
    CpuId As Integer
End Type
#End If

Public Type SINGLE_LIST_ENTRY
    Next As LongPtr ' struct _SINGLE_LIST_ENTRY
End Type

[Description("NtGlobalFlag flags. Flags for all versions from 3.51+ are included; it's up to you to know which are applicable for the current PEB version.")]
Public Enum NTGLB_Flags
    FLG_STOP_ON_EXCEPTION = &H00000001
    FLG_SHOW_LDR_SNAPS = &H00000002
    FLG_DEBUG_INITIAL_COMMAND = &H00000004
    FLG_STOP_ON_HUNG_GUI = &H00000008
    FLG_HEAP_ENABLE_TAIL_CHECK = &H00000010
    FLG_HEAP_ENABLE_FREE_CHECK = &H00000020
    FLG_HEAP_VALIDATE_PARAMETERS = &H00000040
    FLG_HEAP_VALIDATE_ALL = &H00000080
    FLG_POOL_ENABLE_TAIL_CHECK = &H00000100 '3.51 to 5.0
    FLG_APPLICATION_VERIFIER = &H00000100 '5.1+
    FLG_MONITOR_SILENT_PROCESS_EXIT = &H00000200 '6.1+ only
    FLG_POOL_ENABLE_TAGGING = &H00000400
    FLG_HEAP_ENABLE_TAGGING = &H00000800
    FLG_USER_STACK_TRACE_DB = &H00001000
    FLG_KERNEL_STACK_TRACE_DB = &H00002000
    FLG_MAINTAIN_OBJECT_TYPELIST = &H00004000
    FLG_HEAP_ENABLE_TAG_BY_DLL = &H00008000&
    FLG_IGNORE_DEBUG_PRIV = &H00010000 '3.51 to 4.0
    FLG_DISABLE_STACK_EXTENSION = &H00010000 '5.1+(5.0 is undef)
    FLG_ENABLE_CSRDEBUG = &H00020000
    FLG_ENABLE_KDEBUG_SYMBOL_LOAD = &H00040000
    FLG_DISABLE_PAGE_KERNEL_STACKS = &H00080000
    FLG_HEAP_ENABLE_CALL_TRACING = &H00100000 '3.51 to 4.0
    FLG_ENABLE_SYSTEM_CRIT_BREAKS = &H00100000 '5.1+ (5.0 is undef)
    FLG_HEAP_DISABLE_COALESCING = &H00200000
    FLG_ENABLE_CLOSE_EXCEPTIONS = &H00400000 '4.0+
    FLG_ENABLE_EXCEPTION_LOGGING = &H00800000 '4.0+
    FLG_ENABLE_HANDLE_TYPE_TAGGING = &H01000000 '4.0+
    FLG_HEAP_PAGE_ALLOCS = &H02000000 '4.0+
    FLG_DEBUG_INITIAL_COMMAND_EX = &H04000000 '4.0+
    FLG_DISABLE_DBGPRINT = &H08000000 '5.0+
    FLG_CRITSEC_EVENT_CREATION = &H10000000 '5.0+
    FLG_LDR_TOP_DOWN = &H20000000 '5.1-6.2
    FLG_STOP_ON_UNHANDLED_EXCEPTION = &H20000000 '6.3+
    FLG_ENABLE_HANDLE_EXCEPTIONS = &H40000000 '5.1+
    FLG_DISABLE_PROTDLLS = &H80000000& '5.0+
End Enum



#Region "PEB/UPP"

Public Enum UPP_CONSOLE_FLAGS
    CONSOLE_IGNORE_CTRL_C = &H1 'Only defined flag in XP; later ones unknown
End Enum
[Description("RTL_USER_PROCESS_PARAMETERS for Windows XP and Server 2003 and above.")]
Public Type RTL_USER_PROCESS_PARAMETERS_XP
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long 'This is essentially a boolean that if non-zero triggers DbgBreakPoint() at certain points
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
End Type
[Description("RTL_USER_PROCESS_PARAMETERS for Windows Vista or higher")]
Public Type RTL_USER_PROCESS_PARAMETERS
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
End Type
[Description("RTL_USER_PROCESS_PARAMETERS for Windows 7+")]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN7
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
End Type
[Description("RTL_USER_PROCESS_PARAMETERS for Windows 8+")]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN8
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
End Type
[Description("RTL_USER_PROCESS_PARAMETERS for Windows 10+")]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN10
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
    LoaderThreads As Long
End Type
[Description("RTL_USER_PROCESS_PARAMETERS for Windows 10 Redstone 5 1809+")]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN10_R5
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
    LoaderThreads As Long
    RedirectionDllName As UNICODE_STRING
End Type
[Description("RTL_USER_PROCESS_PARAMETERS for Windows 10 19H1 1903+")]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN10_19H1
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
    LoaderThreads As Long
    RedirectionDllName As UNICODE_STRING
    HeapPartitionName As UNICODE_STRING
    DefaultThreadpoolCpuSetMasks As LongLong
    DefaultThreadpoolCpuSetMaskCount As Long
End Type
[Description("RTL_USER_PROCESS_PARAMETERS for Windows 10 20H1 2004+")]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN10_20H1
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
    LoaderThreads As Long
    RedirectionDllName As UNICODE_STRING
    HeapPartitionName As UNICODE_STRING
    DefaultThreadpoolCpuSetMasks As LongLong
    DefaultThreadpoolCpuSetMaskCount As Long
    DefaultThreadpoolThreadMaximum As Long
End Type
[Description("RTL_USER_PROCESS_PARAMETERS for Windows 11 21H2+")]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN11_21H2
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
    LoaderThreads As Long
    RedirectionDllName As UNICODE_STRING
    HeapPartitionName As UNICODE_STRING
    DefaultThreadpoolCpuSetMasks As LongLong
    DefaultThreadpoolCpuSetMaskCount As Long
    DefaultThreadpoolThreadMaximum As Long
    HeapMemoryTypeMask As Long
End Type

Public Enum APP_COMPAT_FLAGS
    KACF_OLDGETSHORTPATHNAME = &H00000001
    KACF_VERSIONLIE_NOT_USED = &H00000002
    KACF_GETDISKFREESPACE = &H00000008
    KACF_FTMFROMCURRENTAPT = &H00000020
    KACF_DISALLOWORBINDINGCHANGES = &H00000040
    KACF_OLE32VALIDATEPTRS = &H00000080
    KACF_DISABLECICERO = &H00000100
    KACF_OLE32ENABLEASYNCDOCFILE = &H00000200
    KACF_OLE32ENABLELEGACYEXCEPTIONHANDLING = &H00000400
    KACF_RPCDISABLENDRCLIENTHARDENING = &H00000800
    KACF_RPCDISABLENDRMAYBENULL_SIZEIS = &H00001000
    KACF_DISABLEALLDDEHACK_NOT_USED = &H00002000
    KACF_RPCDISABLENDR61_RANGE = &H00004000
    KACF_RPC32ENABLELEGACYEXCEPTIONHANDLING = &H00008000&
    KACF_OLE32DOCFILEUSELEGACYNTFSFLAGS = &H00010000
    KACF_RPCDISABLENDRCONSTIIDCHECK = &H00020000
    KACF_USERDISABLEFORWARDERPATCH = &H00040000
    KACF_OLE32DISABLENEW_WMPAINT_DISPATCH = &H00100000
    KACF_ADDRESTRICTEDSIDINCOINITIALIZESECURITY = &H00200000
    KACF_ALLOCDEBUGINFOFORCRITSECTIONS = &H00400000
    KACF_OLEAUT32ENABLEUNSAFELOADTYPELIBRELATIVE = &H00800000
    KACF_ALLOWMAXIMIZEDWINDOWGAMMA = &H01000000
    KACF_DONOTADDTOCACHE = &H80000000
End Enum

Public Enum PEB_BITFIELD_OLD
    PebImageUsedLargePages = &H01
    PebIsProtectedProcess = &H02 'V+
    PebIsLegacyProcess = &H04 'V-8
    PebIsImageDynamicallyRelocated = &H08 'V+
    PebSkipPatchingUser32Forwarders = &H10
    PebIsPackagedProcess = &H20
    PebIsAppContainer = &H40
    PebIsProtectedProcessLight = &H80
End Enum
Public Enum PEB_BITFIELD_NEW
    PebNImageUsedLargePages = &H01
    PebNIsProtectedProcess = &H02 'V+
    PebNIsImageDynamicallyRelocated = &H04 'V+
    PebNSkipPatchingUser32Forwarders = &H08
    PebNIsPackagedProcess = &H10
    PebNIsAppContainer = &H20
    PebNIsProtectedProcessLight = &H40
    PebNIsLongPathAwareProcess = &H80
End Enum

Public Delegate Sub PS_POST_PROCESS_INIT_ROUTINE ()


[Description("This is the base compatibility PEB, usuable from Windows XP through 11+. For additional members, see additional PEBs, e.g. PEB_VISTA.")]
Public Type PEB
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    /* [ TypeHint(PEB_BITFIELD_OLD) ] */ BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    SparePtr2 As LongPtr
    EnvironmentUpdateCount As Long
    KernelCallbackTable As LongPtr
    SystemReserved(0) As Long
    SpareUlong As Long
    FreeList As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    ReadOnlySharedMemoryHeap As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    #If (TWINBASIC = 0) And (Win64 = 0) Then
    pad(3) As Byte
    #End If
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ImageProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    ' #If WINDEVLIB_NO_DELEGATES Then
    PostProcessInitRoutine As LongPtr
    ' #Else
    ' PostProcessInitRoutine As PS_POST_PROCESS_INIT_ROUTINE
    ' #End If
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlagsHi As Long
    AppCompatFlags As APP_COMPAT_FLAGS 'ULARGE_INTEGER
    AppCompatFlagUser As LARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    #If (TWINBASIC = 0) And (Win64 = 0) Then
    pad2(3) As Byte
    #End If
End Type


Public Type PEB_XP
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    /* [ TypeHint(PEB_BITFIELD_OLD) ] */ BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    SparePtr2 As LongPtr
    EnvironmentUpdateCount As Long
    KernelCallbackTable As LongPtr
    SystemReserved(0) As Long
    SpareUlong As Long
    FreeList As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    ReadOnlySharedMemoryHeap As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ImageProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlagsHi As Long
    AppCompatFlags As APP_COMPAT_FLAGS 'ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    #If Win64 Then
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    #End If
End Type

[Description("PEB for Windows Vista and Server 2003")]
Public Type PEB_VISTA 'Also 2003
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    SpareUlong As Long
    FreeList As LongPtr 'Invalid in SP2
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    HotpatchInformation As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ImageProcessAffinityMask As LongPtr 'ActiveProcessAffinityMask in SP2
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
End Type
[Description("PEB for Windows 7 and Server 2008")]
Public Type PEB_WIN7
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    HotpatchInformation As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pContextData As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
End Type
[Description("PEB for Windows 8, 8.1, Server 2012, and Windows 10 Threshold 1")]
Public Type PEB_WIN8
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SparePvoid0 As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pUnused As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
End Type

[Description("PEB for Windows 10 Threshold 2 through Redstone 2")]
Public Type PEB_WIN10_T2
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SparePvoid0 As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pUnused As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
    TppWorkerpListLock As LongPtr
    TppWorkerpList As LIST_ENTRY
    WaitOnAddressHashTable(0 To 127) As LongPtr
End Type

[Description("PEB for Windows Windows 10 Redstone 3/1703 Creators Update")]
Public Type PEB_WIN10_R3
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SharedData As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pUnused As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
    TppWorkerpListLock As LongPtr
    TppWorkerpList As LIST_ENTRY
    WaitOnAddressHashTable(0 To 127) As LongPtr
    TelemetryCoverageHeader As LongPtr
    CloudFileFlags As Long
End Type
[Description("PEB for Windows Windows 10 Redstone 4/1803 Spring Creators Update")]
Public Type PEB_WIN10_R4
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SharedData As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pUnused As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
    TppWorkerpListLock As LongPtr
    TppWorkerpList As LIST_ENTRY
    WaitOnAddressHashTable(0 To 127) As LongPtr
    TelemetryCoverageHeader As LongPtr
    CloudFileFlags As Long
    CloudFileDiagFlags As Long
    PlaceholderCompatibilityMode As Byte
    PlaceholderCompatibilityModeReserved(0 To 6) As Byte
End Type
[Description("PEB for Windows Windows 10 Redstone 5/1809 October Update through Windows 10 21H2/2110")]
Public Type PEB_WIN10_R5
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SharedData As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As Long
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pUnused As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
    TppWorkerpListLock As LongPtr
    TppWorkerpList As LIST_ENTRY
    WaitOnAddressHashTable(0 To 127) As LongPtr
    TelemetryCoverageHeader As LongPtr
    CloudFileFlags As Long
    CloudFileDiagFlags As Long
    PlaceholderCompatibilityMode As Byte
    PlaceholderCompatibilityModeReserved(0 To 6) As Byte
    LeapSecondData As LongPtr
    LeapSecondFlagsOrSixtySecondEnabled As Long
    NtGlobalFlag2 As Long
End Type
[Description("PEB for Windows Windows 11 Insider Preview through Windows 11 22H2. Not verified on versions after that.")]
Public Type PEB_WIN11
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SharedData As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As Long
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As Long
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    EcCodeBitMap As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
    TppWorkerpListLock As LongPtr
    TppWorkerpList As LIST_ENTRY
    WaitOnAddressHashTable(0 To 127) As LongPtr
    TelemetryCoverageHeader As LongPtr
    CloudFileFlags As Long
    CloudFileDiagFlags As Long
    PlaceholderCompatibilityMode As Byte
    PlaceholderCompatibilityModeReserved(0 To 6) As Byte
    LeapSecondData As LongPtr
    LeapSecondFlagsOrSixtySecondEnabled As Long
    NtGlobalFlag2 As Long
    ExtendedFeatureDisableMask As Long
End Type

Public Type NT_TIB
    ExceptionList As LongPtr 'struct _EXCEPTION_REGISTRATION_RECORD
    StackBase As LongPtr
    StackLimit As LongPtr
    SubSystemTib As LongPtr
    '  union {
    '     PVOID FiberData;
    '    ULONG Version;
    ' };
    FiberDataOrVersion As LongPtr
    ArbitraryUserPointer As LongPtr
    Self As LongPtr 'struct _NT_TIB
End Type
Public Type NT_TIB32
    ExceptionList As Long 'struct _EXCEPTION_REGISTRATION_RECORD
    StackBase As Long
    StackLimit As Long
    SubSystemTib As Long
    '  union {
    '     PVOID FiberData;
    '    ULONG Version;
    ' };
    FiberDataOrVersion As Long
    ArbitraryUserPointer As Long
    Self As Long 'struct _NT_TIB
End Type
Public Type NT_TIB64
    ExceptionList As LongLong 'struct _EXCEPTION_REGISTRATION_RECORD
    StackBase As LongLong
    StackLimit As LongLong
    SubSystemTib As LongLong
    '  union {
    '     PVOID FiberData;
    '    ULONG Version;
    ' };
    FiberDataOrVersion As LongLong
    ArbitraryUserPointer As LongLong
    Self As LongLong 'struct _NT_TIB
End Type
Public Type EXCEPTION_REGISTRATION_RECORD
    Next As LongPtr 'struct _EXCEPTION_REGISTRATION_RECORD
    Handler As LongPtr 'PEXCEPTION_ROUTINE
End Type

Public Type OldInitialTeb
    OldStackBase As LongPtr
    OldStackLimit As LongPtr
    '#if defined(_IA64_)
    '       PVOID OldBStoreLimit;
    '#endif // defined(_IA64_)
End Type
Public Type INITIAL_TEB
    OldInitialTeb As OldInitialTeb
    StackBase As LongPtr
    StackLimit As LongPtr
    '#if defined(_IA64_)
    '       PVOID BStoreLimit;
    '#endif // defined(_IA64_)
    StackAllocationBase As LongPtr
End Type
Public Type GDI_TEB_BATCH
    Offset As Long '0x0
    HDC As LongLong '0x8
    Buffer(0 To 309) As Long '0x10
End Type
[Description("This TEB is for Windows 7; some members have changed but it's generally suitable for higher versions.")]
Public Type TEB
    NtTib As NT_TIB '0x0
    EnvironmentPointer As LongPtr '0x38
    ClientId As CLIENT_ID '0x40
    ActiveRpcHandle As LongPtr '0x50
    ThreadLocalStoragePointer As LongPtr '0x58
    ProcessEnvironmentBlock As LongPtr 'struct _PEB '0x60
    LastErrorValue As Long '0x68
    CountOfOwnedCriticalSections As Long '0x6c
    CsrClientThread As LongPtr 'VOID '0x70
    Win32ThreadInfo As LongPtr 'VOID '0x78
    User32Reserved(0 To 25) As Long '0x80
    UserReserved(0 To 4) As Long '0xe8
    WOW32Reserved As LongPtr 'VOID '0x100
    CurrentLocale As Long '0x108
    FpSoftwareStatusRegister As Long '0x10c
    SystemReserved1(0 To 53) As LongPtr 'VOID '0x110
    ExceptionCode As Long '0x2c0
    ActivationContextStackPointer As LongPtr 'struct _ACTIVATION_CONTEXT_STACK '0x2c8
    SpareBytes(0 To 23) As Byte '0x2d0
    TxFsContext As Long '0x2e8
    GdiTebBatch As GDI_TEB_BATCH '0x2f0
    RealClientId As CLIENT_ID '0x7d8
    GdiCachedProcessHandle As LongPtr 'VOID '0x7e8
    GdiClientPID As Long '0x7f0
    GdiClientTID As Long '0x7f4
    GdiThreadLocalInfo As LongPtr 'VOID '0x7f8
    Win32ClientInfo(0 To 61) As LongLong '0x800
    glDispatchTable(0 To 232) As LongPtr 'VOID '0x9f0
    glReserved1(0 To 28) As LongLong '0x1138
    glReserved2 As LongPtr 'VOID '0x1220
    glSectionInfo As LongPtr 'VOID '0x1228
    glSection As LongPtr 'VOID '0x1230
    glTable As LongPtr 'VOID '0x1238
    glCurrentRC As LongPtr 'VOID '0x1240
    glContext As LongPtr 'VOID '0x1248
    LastStatusValue As Long '0x1250
    StaticUnicodeString As UNICODE_STRING '0x1258
    StaticUnicodeBuffer(0 To 260) As Integer '0x1268
    DeallocationStack As LongPtr 'VOID '0x1478
    TlsSlots(0 To 63) As LongPtr 'VOID '0x1480
    TlsLinks As LIST_ENTRY '0x1680
    Vdm As LongPtr 'VOID '0x1690
    ReservedForNtRpc As LongPtr 'VOID '0x1698
    DbgSsReserved(0 To 1) As LongPtr 'VOID '0x16a0
    HardErrorMode As Long '0x16b0
    Instrumentation(0 To 10) As LongPtr 'VOID '0x16b8
    ActivityId As UUID '0x1710
    SubProcessTag As LongPtr 'VOID '0x1720
    EtwLocalData As LongPtr 'VOID '0x1728
    EtwTraceData As LongPtr 'VOID '0x1730
    WinSockData As LongPtr 'VOID '0x1738
    GdiBatchCount As Long '0x1740
    ' union
    ' {
        ' struct _PROCESSOR_NUMBER CurrentIdealProcessor;                     //0x1744
        ' ULONG IdealProcessorValue;                                          //0x1744
        ' struct
        ' {
            ' UCHAR ReservedPad0;                                             //0x1744
            ' UCHAR ReservedPad1;                                             //0x1745
            ' UCHAR ReservedPad2;                                             //0x1746
            ' UCHAR IdealProcessor;                                           //0x1747
        ' };
    ' }; 
    IdealProcessorUnion As PROCESSOR_NUMBER
    GuaranteedStackBytes As Long '0x1748
    ReservedForPerf As LongPtr 'VOID '0x1750
    ReservedForOle As LongPtr 'VOID '0x1758
    WaitingOnLoaderLock As Long '0x1760
    SavedPriorityState As LongPtr 'VOID '0x1768
    SoftPatchPtr1 As LongLong '0x1770
    ThreadPoolData As LongPtr 'VOID '0x1778
    TlsExpansionSlots As LongPtr 'VOID '0x1780
    DeallocationBStore As LongPtr 'VOID '0x1788
    BStoreLimit As LongPtr 'VOID '0x1790
    MuiGeneration As Long '0x1798
    IsImpersonating As Long '0x179c
    NlsCache As LongPtr 'VOID '0x17a0
    pShimData As LongPtr 'VOID '0x17a8
    HeapVirtualAffinity As Long '0x17b0
    CurrentTransactionHandle As LongPtr 'VOID '0x17b8
    ActiveFrame As LongPtr 'struct _TEB_ACTIVE_FRAME '0x17c0
    FlsData As LongPtr 'VOID '0x17c8
    PreferredLanguages As LongPtr 'VOID '0x17d0
    UserPrefLanguages As LongPtr 'VOID '0x17d8
    MergedPrefLanguages As LongPtr 'VOID '0x17e0
    MuiImpersonation As Long '0x17e8
    ' union
    ' {
        ' volatile USHORT CrossTebFlags;                                      //0x17ec
        ' USHORT SpareCrossTebBits:16;                                        //0x17ec
    ' };
    CrossTebFlags As Integer
    ' union
    ' {
        ' USHORT SameTebFlags;                                                //0x17ee
        ' struct
        ' {
            ' USHORT SafeThunkCall:1;                                         //0x17ee
            ' USHORT InDebugPrint:1;                                          //0x17ee
            ' USHORT HasFiberData:1;                                          //0x17ee
            ' USHORT SkipThreadAttach:1;                                      //0x17ee
            ' USHORT WerInShipAssertCode:1;                                   //0x17ee
            ' USHORT RanProcessInit:1;                                        //0x17ee
            ' USHORT ClonedThread:1;                                          //0x17ee
            ' USHORT SuppressDebugMsg:1;                                      //0x17ee
            ' USHORT DisableUserStackWalk:1;                                  //0x17ee
            ' USHORT RtlExceptionAttached:1;                                  //0x17ee
            ' USHORT InitialThread:1;                                         //0x17ee
            ' USHORT SpareSameTebBits:5;                                      //0x17ee
        ' };
    ' };    
    SameTebFlags As Integer
    TxnScopeEnterCallback As LongPtr 'VOID '0x17f0
    TxnScopeExitCallback As LongPtr 'VOID '0x17f8
    TxnScopeContext As LongPtr 'VOID '0x1800
    LockCount As Long '0x1808
    SpareUlong0 As Long '0x180c
    ResourceRetValue As LongPtr 'VOID '0x1810 
End Type
#End Region

Public Enum VersionOSFlags
    VOS_UNKNOWN = &H00000000
    VOS_DOS = &H00010000
    VOS_OS216 = &H00020000
    VOS_OS232 = &H00030000
    VOS_NT = &H00040000
    VOS_WINCE = &H00050000
    VOS__BASE = &H00000000
    VOS__WINDOWS16 = &H00000001
    VOS__PM16 = &H00000002
    VOS__PM32 = &H00000003
    VOS__WINDOWS32 = &H00000004
    VOS_DOS_WINDOWS16 = &H00010001
    VOS_DOS_WINDOWS32 = &H00010004
    VOS_OS216_PM16 = &H00020002
    VOS_OS232_PM32 = &H00030003
    VOS_NT_WINDOWS32 = &H00040004
End Enum
Public Enum VersionFileFlags
    VS_FF_DEBUG = &H00000001
    VS_FF_PRERELEASE = &H00000002
    VS_FF_PATCHED = &H00000004
    VS_FF_PRIVATEBUILD = &H00000008
    VS_FF_INFOINFERRED = &H00000010
    VS_FF_SPECIALBUILD = &H00000020
End Enum
Public Const VS_FFI_STRUCVERSION  = &H00010000
Public Const VS_FFI_FILEFLAGSMASK  = &H0000003F
Public Enum VersionFileTypes
    VFT_UNKNOWN = &H00000000
    VFT_APP = &H00000001
    VFT_DLL = &H00000002
    VFT_DRV = &H00000003
    VFT_FONT = &H00000004
    VFT_VXD = &H00000005
    VFT_STATIC_LIB = &H00000007
End Enum
Public Enum VersionFileSubTypes
/* ----- VS_VERSION.dwFileType ----- */
    VFT2_UNKNOWN = &H00000000
    VFT2_DRV_PRINTER = &H00000001
    VFT2_DRV_KEYBOARD = &H00000002
    VFT2_DRV_LANGUAGE = &H00000003
    VFT2_DRV_DISPLAY = &H00000004
    VFT2_DRV_MOUSE = &H00000005
    VFT2_DRV_NETWORK = &H00000006
    VFT2_DRV_SYSTEM = &H00000007
    VFT2_DRV_INSTALLABLE = &H00000008
    VFT2_DRV_SOUND = &H00000009
    VFT2_DRV_COMM = &H0000000A
    VFT2_DRV_INPUTMETHOD = &H0000000B
    VFT2_DRV_VERSIONED_PRINTER = &H0000000C
/* ----- VS_VERSION.dwFileSubtype for VFT_WINDOWS_DRV ----- */
    VFT2_FONT_RASTER = &H00000001
    VFT2_FONT_VECTOR = &H00000002
    VFT2_FONT_TRUETYPE = &H00000003
End Enum
Public Type VS_FIXEDFILEINFO
    dwSignature As Long
    dwStrucVersionl As Integer   ' e.g. = &h0000 = 0
    dwStrucVersionh As Integer   ' e.g. = &h0042 = .42
    dwFileVersionMSl As Integer   ' e.g. = &h0003 = 3
    dwFileVersionMSh As Integer   ' e.g. = &h0075 = .75
    dwFileVersionLSl As Integer   ' e.g. = &h0000 = 0
    dwFileVersionLSh As Integer   ' e.g. = &h0031 = .31
    dwProductVersionMSl As Integer   ' e.g. = &h0003 = 3
    dwProductVersionMSh As Integer   ' e.g. = &h0010 = .1
    dwProductVersionLSl As Integer   ' e.g. = &h0000 = 0
    dwProductVersionLSh As Integer   ' e.g. = &h0031 = .31
    dwFileFlagsMask As VersionFileFlags   ' = &h3F for version "0.42"
    dwFileFlags As VersionFileFlags   ' e.g. VFF_DEBUG Or VFF_PRERELEASE
    dwFileOS As VersionOSFlags   ' e.g. VOS_DOS_WINDOWS16
    dwFileType As VersionFileTypes   ' e.g. VFT_DRIVER
    dwFileSubtype As VersionFileSubTypes   ' e.g. VFT2_DRV_KEYBOARD
    dwFileDateMS As Long   ' e.g. 0
    dwFileDateLS As Long   ' e.g. 0
End Type
Public Type VS_VERSIONINFO_FIXED_PORTION
    wLength As Integer
    wValueLength As Integer
    wType As Integer
    szKey(0 To 15) As Integer   'Unicode "VS_VERSION_INFO" & vbNullChar.
    Padding1 As Integer 'Pad next field to DWORD boundary.
    Value As VS_FIXEDFILEINFO
End Type

Public Enum COMPARE_FLAGS
    SORT_STRINGSORT = &H1000&
    SORT_DIGITSASNUMBERS = &H8          'Sort 1 2 10 instead of 1 10 2
    LINGUISTIC_IGNORECASE = &H10&
    LINGUISTIC_IGNOREDIACRITIC = &H20&
    NORM_IGNORECASE = &H1&
    NORM_IGNORENONSPACE = &H2&
    NORM_IGNORESYMBOLS = &H4&
    NORM_IGNOREKANATYPE = &H10000
    NORM_IGNOREKANATYPE_ALT = &H40
    NORM_IGNOREWIDTH = &H20000
    NORM_IGNOREWIDTH_ALT = &H08
    NORM_IGNOREKASHIDA = &H00040000
    NORM_LINGUISTIC_CASING = &H8000000
End Enum
Public Enum CSTR_RETURNS
    CSTR_FAIL = 0&
    CSTR_LESS_THAN = 1&
    CSTR_EQUAL = 2&
    CSTR_GREATER_THAN = 3&
End Enum

Public Enum LCID_LANG_IDENTIFIERS
    LANG_NEUTRAL = &H00
    LANG_INVARIANT = &H7f
    LANG_AFRIKAANS = &H36
    LANG_ALBANIAN = &H1c
    LANG_ALSATIAN = &H84
    LANG_AMHARIC = &H5e
    LANG_ARABIC = &H01
    LANG_ARMENIAN = &H2b
    LANG_ASSAMESE = &H4d
    LANG_AZERI = &H2c  ' for Azerbaijani, LANG_AZERBAIJANI is preferred
    LANG_AZERBAIJANI = &H2c
    LANG_BANGLA = &H45
    LANG_BASHKIR = &H6d
    LANG_BASQUE = &H2d
    LANG_BELARUSIAN = &H23
    LANG_BENGALI = &H45  ' Some prefer to use LANG_BANGLA
    LANG_BRETON = &H7e
    LANG_BOSNIAN = &H1a  ' Use with SUBLANG_BOSNIAN_* Sublanguage IDs
    LANG_BOSNIAN_NEUTRAL = &H781a  ' Use with the ConvertDefaultLocale function
    LANG_BULGARIAN = &H02
    LANG_CATALAN = &H03
    LANG_CENTRAL_KURDISH = &H92
    LANG_CHEROKEE = &H5c
    LANG_CHINESE = &H04  ' Use with SUBLANG_CHINESE_* Sublanguage IDs
    LANG_CHINESE_SIMPLIFIED = &H04  ' Use with the ConvertDefaultLocale function
    LANG_CHINESE_TRADITIONAL = &H7c04  ' Use with the ConvertDefaultLocale function
    LANG_CORSICAN = &H83
    LANG_CROATIAN = &H1a
    LANG_CZECH = &H05
    LANG_DANISH = &H06
    LANG_DARI = &H8c
    LANG_DIVEHI = &H65
    LANG_DUTCH = &H13
    LANG_ENGLISH = &H09
    LANG_ESTONIAN = &H25
    LANG_FAEROESE = &H38
    LANG_FARSI = &H29  ' Deprecated: use LANG_PERSIAN instead
    LANG_FILIPINO = &H64
    LANG_FINNISH = &H0b
    LANG_FRENCH = &H0c
    LANG_FRISIAN = &H62
    LANG_FULAH = &H67
    LANG_GALICIAN = &H56
    LANG_GEORGIAN = &H37
    LANG_GERMAN = &H07
    LANG_GREEK = &H08
    LANG_GREENLANDIC = &H6f
    LANG_GUJARATI = &H47
    LANG_HAUSA = &H68
    LANG_HAWAIIAN = &H75
    LANG_HEBREW = &H0d
    LANG_HINDI = &H39
    LANG_HUNGARIAN = &H0e
    LANG_ICELANDIC = &H0f
    LANG_IGBO = &H70
    LANG_INDONESIAN = &H21
    LANG_INUKTITUT = &H5d
    LANG_IRISH = &H3c  ' Use with the SUBLANG_IRISH_IRELAND Sublanguage ID
    LANG_ITALIAN = &H10
    LANG_JAPANESE = &H11
    LANG_KANNADA = &H4b
    LANG_KASHMIRI = &H60
    LANG_KAZAK = &H3f
    LANG_KHMER = &H53
    LANG_KICHE = &H86
    LANG_KINYARWANDA = &H87
    LANG_KONKANI = &H57
    LANG_KOREAN = &H12
    LANG_KYRGYZ = &H40
    LANG_LAO = &H54
    LANG_LATVIAN = &H26
    LANG_LITHUANIAN = &H27
    LANG_LOWER_SORBIAN = &H2e
    LANG_LUXEMBOURGISH = &H6e
    LANG_MACEDONIAN = &H2f  ' the Former Yugoslav Republic of Macedonia
    LANG_MALAY = &H3e
    LANG_MALAYALAM = &H4c
    LANG_MALTESE = &H3a
    LANG_MANIPURI = &H58
    LANG_MAORI = &H81
    LANG_MAPUDUNGUN = &H7a
    LANG_MARATHI = &H4e
    LANG_MOHAWK = &H7c
    LANG_MONGOLIAN = &H50
    LANG_NEPALI = &H61
    LANG_NORWEGIAN = &H14
    LANG_OCCITAN = &H82
    LANG_ODIA = &H48
    LANG_ORIYA = &H48  ' Deprecated: use LANG_ODIA, instead.
    LANG_PASHTO = &H63
    LANG_PERSIAN = &H29
    LANG_POLISH = &H15
    LANG_PORTUGUESE = &H16
    LANG_PULAR = &H67  ' Deprecated: use LANG_FULAH instead
    LANG_PUNJABI = &H46
    LANG_QUECHUA = &H6b
    LANG_ROMANIAN = &H18
    LANG_ROMANSH = &H17
    LANG_RUSSIAN = &H19
    LANG_SAKHA = &H85
    LANG_SAMI = &H3b
    LANG_SANSKRIT = &H4f
    LANG_SCOTTISH_GAELIC = &H91
    LANG_SERBIAN = &H1a  ' Use with the SUBLANG_SERBIAN_* Sublanguage IDs
    LANG_SERBIAN_NEUTRAL = &H7c1a  ' Use with the ConvertDefaultLocale function
    LANG_SINDHI = &H59
    LANG_SINHALESE = &H5b
    LANG_SLOVAK = &H1b
    LANG_SLOVENIAN = &H24
    LANG_SOTHO = &H6c
    LANG_SPANISH = &H0a
    LANG_SWAHILI = &H41
    LANG_SWEDISH = &H1d
    LANG_SYRIAC = &H5a
    LANG_TAJIK = &H28
    LANG_TAMAZIGHT = &H5f
    LANG_TAMIL = &H49
    LANG_TATAR = &H44
    LANG_TELUGU = &H4a
    LANG_THAI = &H1e
    LANG_TIBETAN = &H51
    LANG_TIGRIGNA = &H73
    LANG_TIGRINYA = &H73  ' Preferred spelling in locale
    LANG_TSWANA = &H32
    LANG_TURKISH = &H1f
    LANG_TURKMEN = &H42
    LANG_UIGHUR = &H80
    LANG_UKRAINIAN = &H22
    LANG_UPPER_SORBIAN = &H2e
    LANG_URDU = &H20
    LANG_UZBEK = &H43
    LANG_VALENCIAN = &H03
    LANG_VIETNAMESE = &H2a
    LANG_WELSH = &H52
    LANG_WOLOF = &H88
    LANG_XHOSA = &H34
    LANG_YAKUT = &H85  ' Deprecated: use LANG_SAKHA,instead
    LANG_YI = &H78
    LANG_YORUBA = &H6a
    LANG_ZULU = &H35
End Enum
[Description("language neutral")] Public Const SUBLANG_NEUTRAL  = &H00
[Description("user default")] Public Const SUBLANG_DEFAULT  = &H01
[Description("system default")] Public Const SUBLANG_SYS_DEFAULT  = &H02
[Description("default custom language/locale")] Public Const SUBLANG_CUSTOM_DEFAULT  = &H03


[Description("custom language/locale")] Public Const SUBLANG_CUSTOM_UNSPECIFIED  = &H04
[Description("Default custom MUI language/locale")] Public Const SUBLANG_UI_CUSTOM_DEFAULT  = &H05
[Description("Afrikaans (South Africa) 0x0436 af-ZA")] Public Const SUBLANG_AFRIKAANS_SOUTH_AFRICA  = &H01
[Description("Albanian (Albania) 0x041c sq-AL")] Public Const SUBLANG_ALBANIAN_ALBANIA  = &H01
[Description("Alsatian (France) 0x0484")] Public Const SUBLANG_ALSATIAN_FRANCE  = &H01
[Description("Amharic (Ethiopia) 0x045e")] Public Const SUBLANG_AMHARIC_ETHIOPIA  = &H01
[Description("Arabic (Saudi Arabia)")] Public Const SUBLANG_ARABIC_SAUDI_ARABIA  = &H01
[Description("Arabic (Iraq)")] Public Const SUBLANG_ARABIC_IRAQ  = &H02
[Description("Arabic (Egypt)")] Public Const SUBLANG_ARABIC_EGYPT  = &H03
[Description("Arabic (Libya)")] Public Const SUBLANG_ARABIC_LIBYA  = &H04
[Description("Arabic (Algeria)")] Public Const SUBLANG_ARABIC_ALGERIA  = &H05
[Description("Arabic (Morocco)")] Public Const SUBLANG_ARABIC_MOROCCO  = &H06
[Description("Arabic (Tunisia)")] Public Const SUBLANG_ARABIC_TUNISIA  = &H07
[Description("Arabic (Oman)")] Public Const SUBLANG_ARABIC_OMAN  = &H08
[Description("Arabic (Yemen)")] Public Const SUBLANG_ARABIC_YEMEN  = &H09
[Description("Arabic (Syria)")] Public Const SUBLANG_ARABIC_SYRIA  = &H0a
[Description("Arabic (Jordan)")] Public Const SUBLANG_ARABIC_JORDAN  = &H0b
[Description("Arabic (Lebanon)")] Public Const SUBLANG_ARABIC_LEBANON  = &H0c
[Description("Arabic (Kuwait)")] Public Const SUBLANG_ARABIC_KUWAIT  = &H0d
[Description("Arabic (U.A.E)")] Public Const SUBLANG_ARABIC_UAE  = &H0e
[Description("Arabic (Bahrain)")] Public Const SUBLANG_ARABIC_BAHRAIN  = &H0f
[Description("Arabic (Qatar)")] Public Const SUBLANG_ARABIC_QATAR  = &H10
[Description("Armenian (Armenia) 0x042b hy-AM")] Public Const SUBLANG_ARMENIAN_ARMENIA  = &H01
[Description("Assamese (India) 0x044d")] Public Const SUBLANG_ASSAMESE_INDIA  = &H01
[Description("Azeri (Latin) - for Azerbaijani, SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN preferred")] Public Const SUBLANG_AZERI_LATIN  = &H01
[Description("Azeri (Cyrillic) - for Azerbaijani, SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC preferred")] Public Const SUBLANG_AZERI_CYRILLIC  = &H02
[Description("Azerbaijani (Azerbaijan, Latin)")] Public Const SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN  = &H01
[Description("Azerbaijani (Azerbaijan, Cyrillic)")] Public Const SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC  = &H02
[Description("Bangla (India)")] Public Const SUBLANG_BANGLA_INDIA  = &H01
[Description("Bangla (Bangladesh)")] Public Const SUBLANG_BANGLA_BANGLADESH  = &H02
[Description("Bashkir (Russia) 0x046d ba-RU")] Public Const SUBLANG_BASHKIR_RUSSIA  = &H01
[Description("Basque (Basque) 0x042d eu-ES")] Public Const SUBLANG_BASQUE_BASQUE  = &H01
[Description("Belarusian (Belarus) 0x0423 be-BY")] Public Const SUBLANG_BELARUSIAN_BELARUS  = &H01
[Description("Bengali (India) - Note some prefer SUBLANG_BANGLA_INDIA")] Public Const SUBLANG_BENGALI_INDIA  = &H01
[Description("Bengali (Bangladesh) - Note some prefer SUBLANG_BANGLA_BANGLADESH")] Public Const SUBLANG_BENGALI_BANGLADESH  = &H02
[Description("Bosnian (Bosnia and Herzegovina - Latin) 0x141a bs-BA-Latn")] Public Const SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN  = &H05
[Description("Bosnian (Bosnia and Herzegovina - Cyrillic) 0x201a bs-BA-Cyrl")] Public Const SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC  = &H08
[Description("Breton (France) 0x047e")] Public Const SUBLANG_BRETON_FRANCE  = &H01
[Description("Bulgarian (Bulgaria) 0x0402")] Public Const SUBLANG_BULGARIAN_BULGARIA  = &H01
[Description("Catalan (Catalan) 0x0403")] Public Const SUBLANG_CATALAN_CATALAN  = &H01
[Description("Central Kurdish (Iraq) 0x0492 ku-Arab-IQ")] Public Const SUBLANG_CENTRAL_KURDISH_IRAQ  = &H01
[Description("Cherokee (Cherokee) 0x045c chr-Cher-US")] Public Const SUBLANG_CHEROKEE_CHEROKEE  = &H01
[Description("Chinese (Taiwan) 0x0404 zh-TW")] Public Const SUBLANG_CHINESE_TRADITIONAL  = &H01
[Description("Chinese (PR China) 0x0804 zh-CN")] Public Const SUBLANG_CHINESE_SIMPLIFIED  = &H02
[Description("Chinese (Hong Kong S.A.R., P.R.C.) 0x0c04 zh-HK")] Public Const SUBLANG_CHINESE_HONGKONG  = &H03
[Description("Chinese (Singapore) 0x1004 zh-SG")] Public Const SUBLANG_CHINESE_SINGAPORE  = &H04
[Description("Chinese (Macau S.A.R.) 0x1404 zh-MO")] Public Const SUBLANG_CHINESE_MACAU  = &H05
[Description("Corsican (France) 0x0483")] Public Const SUBLANG_CORSICAN_FRANCE  = &H01
[Description("Czech (Czech Republic) 0x0405")] Public Const SUBLANG_CZECH_CZECH_REPUBLIC  = &H01
[Description("Croatian (Croatia)")] Public Const SUBLANG_CROATIAN_CROATIA  = &H01
[Description("Croatian (Bosnia and Herzegovina - Latin) 0x101a hr-BA")] Public Const SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN  = &H04
[Description("Danish (Denmark) 0x0406")] Public Const SUBLANG_DANISH_DENMARK  = &H01
[Description("Dari (Afghanistan)")] Public Const SUBLANG_DARI_AFGHANISTAN  = &H01
[Description("Divehi (Maldives) 0x0465 div-MV")] Public Const SUBLANG_DIVEHI_MALDIVES  = &H01
[Description("Dutch")] Public Const SUBLANG_DUTCH  = &H01
[Description("Dutch (Belgian)")] Public Const SUBLANG_DUTCH_BELGIAN  = &H02
[Description("English (USA)")] Public Const SUBLANG_ENGLISH_US  = &H01
[Description("English (UK)")] Public Const SUBLANG_ENGLISH_UK  = &H02
[Description("English (Australian)")] Public Const SUBLANG_ENGLISH_AUS  = &H03
[Description("English (Canadian)")] Public Const SUBLANG_ENGLISH_CAN  = &H04
[Description("English (New Zealand)")] Public Const SUBLANG_ENGLISH_NZ  = &H05
[Description("English (Irish)")] Public Const SUBLANG_ENGLISH_EIRE  = &H06
[Description("English (South Africa)")] Public Const SUBLANG_ENGLISH_SOUTH_AFRICA  = &H07
[Description("English (Jamaica)")] Public Const SUBLANG_ENGLISH_JAMAICA  = &H08
[Description("English (Caribbean)")] Public Const SUBLANG_ENGLISH_CARIBBEAN  = &H09
[Description("English (Belize)")] Public Const SUBLANG_ENGLISH_BELIZE  = &H0a
[Description("English (Trinidad)")] Public Const SUBLANG_ENGLISH_TRINIDAD  = &H0b
[Description("English (Zimbabwe)")] Public Const SUBLANG_ENGLISH_ZIMBABWE  = &H0c
[Description("English (Philippines)")] Public Const SUBLANG_ENGLISH_PHILIPPINES  = &H0d
[Description("English (India)")] Public Const SUBLANG_ENGLISH_INDIA  = &H10
[Description("English (Malaysia)")] Public Const SUBLANG_ENGLISH_MALAYSIA  = &H11
[Description("English (Singapore)")] Public Const SUBLANG_ENGLISH_SINGAPORE  = &H12
[Description("Estonian (Estonia) 0x0425 et-EE")] Public Const SUBLANG_ESTONIAN_ESTONIA  = &H01
[Description("Faroese (Faroe Islands) 0x0438 fo-FO")] Public Const SUBLANG_FAEROESE_FAROE_ISLANDS  = &H01
[Description("Filipino (Philippines) 0x0464 fil-PH")] Public Const SUBLANG_FILIPINO_PHILIPPINES  = &H01
[Description("Finnish (Finland) 0x040b")] Public Const SUBLANG_FINNISH_FINLAND  = &H01
[Description("French")] Public Const SUBLANG_FRENCH  = &H01
[Description("French (Belgian)")] Public Const SUBLANG_FRENCH_BELGIAN  = &H02
[Description("French (Canadian)")] Public Const SUBLANG_FRENCH_CANADIAN  = &H03
[Description("French (Swiss)")] Public Const SUBLANG_FRENCH_SWISS  = &H04
[Description("French (Luxembourg)")] Public Const SUBLANG_FRENCH_LUXEMBOURG  = &H05
[Description("French (Monaco)")] Public Const SUBLANG_FRENCH_MONACO  = &H06
[Description("Frisian (Netherlands) 0x0462 fy-NL")] Public Const SUBLANG_FRISIAN_NETHERLANDS  = &H01
[Description("Fulah (Senegal) 0x0867 ff-Latn-SN")] Public Const SUBLANG_FULAH_SENEGAL  = &H02
[Description("Galician (Galician) 0x0456 gl-ES")] Public Const SUBLANG_GALICIAN_GALICIAN  = &H01
[Description("Georgian (Georgia) 0x0437 ka-GE")] Public Const SUBLANG_GEORGIAN_GEORGIA  = &H01
[Description("German")] Public Const SUBLANG_GERMAN  = &H01
[Description("German (Swiss)")] Public Const SUBLANG_GERMAN_SWISS  = &H02
[Description("German (Austrian)")] Public Const SUBLANG_GERMAN_AUSTRIAN  = &H03
[Description("German (Luxembourg)")] Public Const SUBLANG_GERMAN_LUXEMBOURG  = &H04
[Description("German (Liechtenstein)")] Public Const SUBLANG_GERMAN_LIECHTENSTEIN  = &H05
[Description("Greek (Greece)")] Public Const SUBLANG_GREEK_GREECE  = &H01
[Description("Greenlandic (Greenland) 0x046f kl-GL")] Public Const SUBLANG_GREENLANDIC_GREENLAND  = &H01
[Description("Gujarati (India (Gujarati Script)) 0x0447 gu-IN")] Public Const SUBLANG_GUJARATI_INDIA  = &H01
[Description("Hausa (Latin, Nigeria) 0x0468 ha-NG-Latn")] Public Const SUBLANG_HAUSA_NIGERIA_LATIN  = &H01
[Description("Hawiian (US) 0x0475 haw-US")] Public Const SUBLANG_HAWAIIAN_US  = &H01
[Description("Hebrew (Israel) 0x040d")] Public Const SUBLANG_HEBREW_ISRAEL  = &H01
[Description("Hindi (India) 0x0439 hi-IN")] Public Const SUBLANG_HINDI_INDIA  = &H01
[Description("Hungarian (Hungary) 0x040e")] Public Const SUBLANG_HUNGARIAN_HUNGARY  = &H01
[Description("Icelandic (Iceland) 0x040f")] Public Const SUBLANG_ICELANDIC_ICELAND  = &H01
[Description("Igbo (Nigeria) 0x0470 ig-NG")] Public Const SUBLANG_IGBO_NIGERIA  = &H01
[Description("Indonesian (Indonesia) 0x0421 id-ID")] Public Const SUBLANG_INDONESIAN_INDONESIA  = &H01
[Description("Inuktitut (Syllabics) (Canada) 0x045d iu-CA-Cans")] Public Const SUBLANG_INUKTITUT_CANADA  = &H01
[Description("Inuktitut (Canada - Latin)")] Public Const SUBLANG_INUKTITUT_CANADA_LATIN  = &H02
[Description("Irish (Ireland)")] Public Const SUBLANG_IRISH_IRELAND  = &H02
[Description("Italian")] Public Const SUBLANG_ITALIAN  = &H01
[Description("Italian (Swiss)")] Public Const SUBLANG_ITALIAN_SWISS  = &H02
[Description("Japanese (Japan) 0x0411")] Public Const SUBLANG_JAPANESE_JAPAN  = &H01
[Description("Kannada (India (Kannada Script)) 0x044b kn-IN")] Public Const SUBLANG_KANNADA_INDIA  = &H01
[Description("Kashmiri (South Asia)")] Public Const SUBLANG_KASHMIRI_SASIA  = &H02
[Description("For app compatibility only")] Public Const SUBLANG_KASHMIRI_INDIA  = &H02
[Description("Kazakh (Kazakhstan) 0x043f kk-KZ")] Public Const SUBLANG_KAZAK_KAZAKHSTAN  = &H01
[Description("Khmer (Cambodia) 0x0453 kh-KH")] Public Const SUBLANG_KHMER_CAMBODIA  = &H01
[Description("K'iche (Guatemala)")] Public Const SUBLANG_KICHE_GUATEMALA  = &H01
[Description("Kinyarwanda (Rwanda) 0x0487 rw-RW")] Public Const SUBLANG_KINYARWANDA_RWANDA  = &H01
[Description("Konkani (India) 0x0457 kok-IN")] Public Const SUBLANG_KONKANI_INDIA  = &H01
[Description("Korean (Extended Wansung)")] Public Const SUBLANG_KOREAN  = &H01
[Description("Kyrgyz (Kyrgyzstan) 0x0440 ky-KG")] Public Const SUBLANG_KYRGYZ_KYRGYZSTAN  = &H01
[Description("Lao (Lao PDR) 0x0454 lo-LA")] Public Const SUBLANG_LAO_LAO  = &H01
[Description("Latvian (Latvia) 0x0426 lv-LV")] Public Const SUBLANG_LATVIAN_LATVIA  = &H01
[Description("Lithuanian")] Public Const SUBLANG_LITHUANIAN  = &H01
[Description("Lower Sorbian (Germany) 0x082e wee-DE")] Public Const SUBLANG_LOWER_SORBIAN_GERMANY  = &H02
[Description("Luxembourgish (Luxembourg) 0x046e lb-LU")] Public Const SUBLANG_LUXEMBOURGISH_LUXEMBOURG  = &H01
[Description("Macedonian (Macedonia (FYROM)) 0x042f mk-MK")] Public Const SUBLANG_MACEDONIAN_MACEDONIA  = &H01
[Description("Malay (Malaysia)")] Public Const SUBLANG_MALAY_MALAYSIA  = &H01
[Description("Malay (Brunei Darussalam)")] Public Const SUBLANG_MALAY_BRUNEI_DARUSSALAM  = &H02
[Description("Malayalam (India (Malayalam Script) ) 0x044c ml-IN")] Public Const SUBLANG_MALAYALAM_INDIA  = &H01
[Description("Maltese (Malta) 0x043a mt-MT")] Public Const SUBLANG_MALTESE_MALTA  = &H01
[Description("Maori (New Zealand) 0x0481 mi-NZ")] Public Const SUBLANG_MAORI_NEW_ZEALAND  = &H01
[Description("Mapudungun (Chile) 0x047a arn-CL")] Public Const SUBLANG_MAPUDUNGUN_CHILE  = &H01
[Description("Marathi (India) 0x044e mr-IN")] Public Const SUBLANG_MARATHI_INDIA  = &H01
[Description("Mohawk (Mohawk) 0x047c moh-CA")] Public Const SUBLANG_MOHAWK_MOHAWK  = &H01
[Description("Mongolian (Cyrillic, Mongolia)")] Public Const SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA  = &H01
[Description("Mongolian (PRC)")] Public Const SUBLANG_MONGOLIAN_PRC  = &H02
[Description("Nepali (India)")] Public Const SUBLANG_NEPALI_INDIA  = &H02
[Description("Nepali (Nepal) 0x0461 ne-NP")] Public Const SUBLANG_NEPALI_NEPAL  = &H01
[Description("Norwegian (Bokmal)")] Public Const SUBLANG_NORWEGIAN_BOKMAL  = &H01
[Description("Norwegian (Nynorsk)")] Public Const SUBLANG_NORWEGIAN_NYNORSK  = &H02
[Description("Occitan (France) 0x0482 oc-FR")] Public Const SUBLANG_OCCITAN_FRANCE  = &H01
[Description("Odia (India (Odia Script)) 0x0448 or-IN")] Public Const SUBLANG_ODIA_INDIA  = &H01
[Description("Deprecated: use SUBLANG_ODIA_INDIA instead")] Public Const SUBLANG_ORIYA_INDIA  = &H01
[Description("Pashto (Afghanistan)")] Public Const SUBLANG_PASHTO_AFGHANISTAN  = &H01
[Description("Persian (Iran) 0x0429 fa-IR")] Public Const SUBLANG_PERSIAN_IRAN  = &H01
[Description("Polish (Poland) 0x0415")] Public Const SUBLANG_POLISH_POLAND  = &H01
[Description("Portuguese")] Public Const SUBLANG_PORTUGUESE  = &H02
[Description("Portuguese (Brazil)")] Public Const SUBLANG_PORTUGUESE_BRAZILIAN  = &H01
[Description("Deprecated: Use SUBLANG_FULAH_SENEGAL instead")] Public Const SUBLANG_PULAR_SENEGAL  = &H02
[Description("Punjabi (India (Gurmukhi Script)) 0x0446 pa-IN")] Public Const SUBLANG_PUNJABI_INDIA  = &H01
[Description("Punjabi (Pakistan (Arabic Script)) 0x0846 pa-Arab-PK")] Public Const SUBLANG_PUNJABI_PAKISTAN  = &H02
[Description("Quechua (Bolivia)")] Public Const SUBLANG_QUECHUA_BOLIVIA  = &H01
[Description("Quechua (Ecuador)")] Public Const SUBLANG_QUECHUA_ECUADOR  = &H02
[Description("Quechua (Peru)")] Public Const SUBLANG_QUECHUA_PERU  = &H03
[Description("Romanian (Romania) 0x0418")] Public Const SUBLANG_ROMANIAN_ROMANIA  = &H01
[Description("Romansh (Switzerland) 0x0417 rm-CH")] Public Const SUBLANG_ROMANSH_SWITZERLAND  = &H01
[Description("Russian (Russia) 0x0419")] Public Const SUBLANG_RUSSIAN_RUSSIA  = &H01
[Description("Sakha (Russia) 0x0485 sah-RU")] Public Const SUBLANG_SAKHA_RUSSIA  = &H01
[Description("Northern Sami (Norway)")] Public Const SUBLANG_SAMI_NORTHERN_NORWAY  = &H01
[Description("Northern Sami (Sweden)")] Public Const SUBLANG_SAMI_NORTHERN_SWEDEN  = &H02
[Description("Northern Sami (Finland)")] Public Const SUBLANG_SAMI_NORTHERN_FINLAND  = &H03
[Description("Lule Sami (Norway)")] Public Const SUBLANG_SAMI_LULE_NORWAY  = &H04
[Description("Lule Sami (Sweden)")] Public Const SUBLANG_SAMI_LULE_SWEDEN  = &H05
[Description("Southern Sami (Norway)")] Public Const SUBLANG_SAMI_SOUTHERN_NORWAY  = &H06
[Description("Southern Sami (Sweden)")] Public Const SUBLANG_SAMI_SOUTHERN_SWEDEN  = &H07
[Description("Skolt Sami (Finland)")] Public Const SUBLANG_SAMI_SKOLT_FINLAND  = &H08
[Description("Inari Sami (Finland)")] Public Const SUBLANG_SAMI_INARI_FINLAND  = &H09
[Description("Sanskrit (India) 0x044f sa-IN")] Public Const SUBLANG_SANSKRIT_INDIA  = &H01
[Description("Scottish Gaelic (United Kingdom) 0x0491 gd-GB")] Public Const SUBLANG_SCOTTISH_GAELIC  = &H01
[Description("Serbian (Bosnia and Herzegovina - Latin)")] Public Const SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN  = &H06
[Description("Serbian (Bosnia and Herzegovina - Cyrillic)")] Public Const SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC  = &H07
[Description("Serbian (Montenegro - Latn)")] Public Const SUBLANG_SERBIAN_MONTENEGRO_LATIN  = &H0b
[Description("Serbian (Montenegro - Cyrillic)")] Public Const SUBLANG_SERBIAN_MONTENEGRO_CYRILLIC  = &H0c
[Description("Serbian (Serbia - Latin)")] Public Const SUBLANG_SERBIAN_SERBIA_LATIN  = &H09
[Description("Serbian (Serbia - Cyrillic)")] Public Const SUBLANG_SERBIAN_SERBIA_CYRILLIC  = &H0a
[Description("Croatian (Croatia) 0x041a hr-HR")] Public Const SUBLANG_SERBIAN_CROATIA  = &H01
[Description("Serbian (Latin)")] Public Const SUBLANG_SERBIAN_LATIN  = &H02
[Description("Serbian (Cyrillic)")] Public Const SUBLANG_SERBIAN_CYRILLIC  = &H03
[Description("Sindhi (India) reserved 0x0459")] Public Const SUBLANG_SINDHI_INDIA  = &H01
[Description("Sindhi (Pakistan) 0x0859 sd-Arab-PK")] Public Const SUBLANG_SINDHI_PAKISTAN  = &H02
[Description("For app compatibility only")] Public Const SUBLANG_SINDHI_AFGHANISTAN  = &H02
[Description("Sinhalese (Sri Lanka)")] Public Const SUBLANG_SINHALESE_SRI_LANKA  = &H01
[Description("Northern Sotho (South Africa)")] Public Const SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA  = &H01
[Description("Slovak (Slovakia) 0x041b sk-SK")] Public Const SUBLANG_SLOVAK_SLOVAKIA  = &H01
[Description("Slovenian (Slovenia) 0x0424 sl-SI")] Public Const SUBLANG_SLOVENIAN_SLOVENIA  = &H01
[Description("Spanish (Castilian)")] Public Const SUBLANG_SPANISH  = &H01
[Description("Spanish (Mexico)")] Public Const SUBLANG_SPANISH_MEXICAN  = &H02
[Description("Spanish (Modern)")] Public Const SUBLANG_SPANISH_MODERN  = &H03
[Description("Spanish (Guatemala)")] Public Const SUBLANG_SPANISH_GUATEMALA  = &H04
[Description("Spanish (Costa Rica)")] Public Const SUBLANG_SPANISH_COSTA_RICA  = &H05
[Description("Spanish (Panama)")] Public Const SUBLANG_SPANISH_PANAMA  = &H06
[Description("Spanish (Dominican Republic)")] Public Const SUBLANG_SPANISH_DOMINICAN_REPUBLIC  = &H07
[Description("Spanish (Venezuela)")] Public Const SUBLANG_SPANISH_VENEZUELA  = &H08
[Description("Spanish (Colombia)")] Public Const SUBLANG_SPANISH_COLOMBIA  = &H09
[Description("Spanish (Peru)")] Public Const SUBLANG_SPANISH_PERU  = &H0a
[Description("Spanish (Argentina)")] Public Const SUBLANG_SPANISH_ARGENTINA  = &H0b
[Description("Spanish (Ecuador)")] Public Const SUBLANG_SPANISH_ECUADOR  = &H0c
[Description("Spanish (Chile)")] Public Const SUBLANG_SPANISH_CHILE  = &H0d
[Description("Spanish (Uruguay)")] Public Const SUBLANG_SPANISH_URUGUAY  = &H0e
[Description("Spanish (Paraguay)")] Public Const SUBLANG_SPANISH_PARAGUAY  = &H0f
[Description("Spanish (Bolivia)")] Public Const SUBLANG_SPANISH_BOLIVIA  = &H10
[Description("Spanish (El Salvador)")] Public Const SUBLANG_SPANISH_EL_SALVADOR  = &H11
[Description("Spanish (Honduras)")] Public Const SUBLANG_SPANISH_HONDURAS  = &H12
[Description("Spanish (Nicaragua)")] Public Const SUBLANG_SPANISH_NICARAGUA  = &H13
[Description("Spanish (Puerto Rico)")] Public Const SUBLANG_SPANISH_PUERTO_RICO  = &H14
[Description("Spanish (United States)")] Public Const SUBLANG_SPANISH_US  = &H15
[Description("Swahili (Kenya) 0x0441 sw-KE")] Public Const SUBLANG_SWAHILI_KENYA  = &H01
[Description("Swedish")] Public Const SUBLANG_SWEDISH  = &H01
[Description("Swedish (Finland)")] Public Const SUBLANG_SWEDISH_FINLAND  = &H02
[Description("Syriac (Syria) 0x045a syr-SY")] Public Const SUBLANG_SYRIAC_SYRIA  = &H01
[Description("Tajik (Tajikistan) 0x0428 tg-TJ-Cyrl")] Public Const SUBLANG_TAJIK_TAJIKISTAN  = &H01
[Description("Tamazight (Latin, Algeria) 0x085f tzm-Latn-DZ")] Public Const SUBLANG_TAMAZIGHT_ALGERIA_LATIN  = &H02
[Description("Tamazight (Tifinagh) 0x105f tzm-Tfng-MA")] Public Const SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH  = &H04
[Description("Tamil (India)")] Public Const SUBLANG_TAMIL_INDIA  = &H01
[Description("Tamil (Sri Lanka) 0x0849 ta-LK")] Public Const SUBLANG_TAMIL_SRI_LANKA  = &H02
[Description("Tatar (Russia) 0x0444 tt-RU")] Public Const SUBLANG_TATAR_RUSSIA  = &H01
[Description("Telugu (India (Telugu Script)) 0x044a te-IN")] Public Const SUBLANG_TELUGU_INDIA  = &H01
[Description("Thai (Thailand) 0x041e th-TH")] Public Const SUBLANG_THAI_THAILAND  = &H01
[Description("Tibetan (PRC)")] Public Const SUBLANG_TIBETAN_PRC  = &H01
[Description("Tigrigna (Eritrea)")] Public Const SUBLANG_TIGRIGNA_ERITREA  = &H02
[Description("Tigrinya (Eritrea) 0x0873 ti-ER (preferred spelling)")] Public Const SUBLANG_TIGRINYA_ERITREA  = &H02
[Description("Tigrinya (Ethiopia) 0x0473 ti-ET")] Public Const SUBLANG_TIGRINYA_ETHIOPIA  = &H01
[Description("Setswana / Tswana (Botswana) 0x0832 tn-BW")] Public Const SUBLANG_TSWANA_BOTSWANA  = &H02
[Description("Setswana / Tswana (South Africa) 0x0432 tn-ZA")] Public Const SUBLANG_TSWANA_SOUTH_AFRICA  = &H01
[Description("Turkish (Turkey) 0x041f tr-TR")] Public Const SUBLANG_TURKISH_TURKEY  = &H01
[Description("Turkmen (Turkmenistan) 0x0442 tk-TM")] Public Const SUBLANG_TURKMEN_TURKMENISTAN  = &H01
[Description("Uighur (PRC) 0x0480 ug-CN")] Public Const SUBLANG_UIGHUR_PRC  = &H01
[Description("Ukrainian (Ukraine) 0x0422 uk-UA")] Public Const SUBLANG_UKRAINIAN_UKRAINE  = &H01
[Description("Upper Sorbian (Germany) 0x042e wen-DE")] Public Const SUBLANG_UPPER_SORBIAN_GERMANY  = &H01
[Description("Urdu (Pakistan)")] Public Const SUBLANG_URDU_PAKISTAN  = &H01
[Description("Urdu (India)")] Public Const SUBLANG_URDU_INDIA  = &H02
[Description("Uzbek (Latin)")] Public Const SUBLANG_UZBEK_LATIN  = &H01
[Description("Uzbek (Cyrillic)")] Public Const SUBLANG_UZBEK_CYRILLIC  = &H02
[Description("Valencian (Valencia) 0x0803 ca-ES-Valencia")] Public Const SUBLANG_VALENCIAN_VALENCIA  = &H02
[Description("Vietnamese (Vietnam) 0x042a vi-VN")] Public Const SUBLANG_VIETNAMESE_VIETNAM  = &H01
[Description("Welsh (United Kingdom) 0x0452 cy-GB")] Public Const SUBLANG_WELSH_UNITED_KINGDOM  = &H01
[Description("Wolof (Senegal)")] Public Const SUBLANG_WOLOF_SENEGAL  = &H01
[Description("isiXhosa / Xhosa (South Africa) 0x0434 xh-ZA")] Public Const SUBLANG_XHOSA_SOUTH_AFRICA  = &H01
[Description("Deprecated: use SUBLANG_SAKHA_RUSSIA instead")] Public Const SUBLANG_YAKUT_RUSSIA  = &H01
[Description("Yi (PRC)) 0x0478")] Public Const SUBLANG_YI_PRC  = &H01
[Description("Yoruba (Nigeria) 046a yo-NG")] Public Const SUBLANG_YORUBA_NIGERIA  = &H01
[Description("isiZulu / Zulu (South Africa) 0x0435 zu-ZA")] Public Const SUBLANG_ZULU_SOUTH_AFRICA  = &H01




Public Enum LCID_SORT_IDENTIFIERS
    SORT_DEFAULT = &H0
    SORT_INVARIANT_MATH = &H1
    SORT_JAPANESE_XJIS = &H0
    SORT_JAPANESE_UNICODE = &H1
    SORT_JAPANESE_RADICALSTROKE = &H4
    SORT_CHINESE_BIG5 = &H0
    SORT_CHINESE_PRCP = &H0
    SORT_CHINESE_UNICODE = &H1
    SORT_CHINESE_PRC = &H2
    SORT_CHINESE_BOPOMOFO = &H3
    SORT_CHINESE_RADICALSTROKE = &H4
    SORT_KOREAN_KSC = &H0
    SORT_KOREAN_UNICODE = &H1
    SORT_GERMAN_PHONE_BOOK = &H1
    SORT_HUNGARIAN_DEFAULT = &H0
    SORT_HUNGARIAN_TECHNICAL = &H1
    SORT_GEORGIAN_TRADITIONAL = &H0
    SORT_GEORGIAN_MODERN = &H1
End Enum

Public Const NLS_VALID_LOCALE_MASK = &H000fffff



Public Const LOCALE_NAME_MAX_LENGTH = 85

Public Const LANG_SYSTEM_DEFAULT = &H800
Public Const LANG_USER_DEFAULT = &H400
 
Public Const LOCALE_NAME_INVARIANT As String = ""
Public Const LOCALE_NAME_USER_DEFAULT As String = vbNullString
Public Const LOCALE_NAME_SYSTEM_DEFAULT As String = "!x-sys-default-locale"

Public Enum DefaultLocales
    LOCALE_CUSTOM_DEFAULT = &H0c00
    LOCALE_CUSTOM_UI_DEFAULT = &H1400
    LOCALE_CUSTOM_UNSPECIFIED = &H1000
    LOCALE_INVARIANT = &H007f
    LOCALE_USER_DEFAULT = &H0400
    LOCALE_SYSTEM_DEFAULT = &H0800
End Enum
Public Enum LCTypes
    LOCALE_NOUSEROVERRIDE = &H80000000  ' Not Recommended - do not use user overrides
    LOCALE_USE_CP_ACP = &H40000000  ' DEPRECATED, call Unicode APIs instead: use the system ACP
' #if(WINVER >= 0x0400)
    LOCALE_RETURN_NUMBER = &H20000000  ' return number instead of string
' #endif /* WINVER >= 0x0400 */
' #if (WINVER >= _WIN32_WINNT_WIN7)
    LOCALE_RETURN_GENITIVE_NAMES = &H10000000  'Flag to return the Genitive forms of month names
    LOCALE_ALLOW_NEUTRAL_NAMES = &H08000000  'Flag to allow returning neutral names/lcids for name conversion
' #endif //(WINVER >= _WIN32_WINNT_WIN7)
'   The following LCTypes are mutually exclusive in that they may NOT
'   be used in combination with each other.
'  These are the various forms of the name of the locale:
    LOCALE_SLOCALIZEDDISPLAYNAME = &H00000002  ' localized name of locale, eg "German (Germany)" in UI language
' #if (WINVER >= _WIN32_WINNT_WIN7)
    LOCALE_SENGLISHDISPLAYNAME = &H00000072  ' Display name (language + country/region usually) in English, eg "German (Germany)"
    LOCALE_SNATIVEDISPLAYNAME = &H00000073  ' Display name in native locale language, eg "Deutsch (Deutschland)
' #endif //(WINVER >= _WIN32_WINNT_WIN7)
' #if (WINVER >= _WIN32_WINNT_VISTA)
    LOCALE_SLOCALIZEDLANGUAGENAME = &H0000006f  ' Language Display Name for a language, eg "German" in UI language
' #endif //(WINVER >= _WIN32_WINNT_VISTA)
    LOCALE_SENGLISHLANGUAGENAME = &H00001001  ' English name of language, eg "German"
    LOCALE_SNATIVELANGUAGENAME = &H00000004  ' native name of language, eg "Deutsch"
    LOCALE_SLOCALIZEDCOUNTRYNAME = &H00000006  ' localized name of country/region, eg "Germany" in UI language
    LOCALE_SENGLISHCOUNTRYNAME = &H00001002  ' English name of country/region, eg "Germany"
    LOCALE_SNATIVECOUNTRYNAME = &H00000008  ' native name of country/region, eg "Deutschland"
'  Additional LCTypes
    LOCALE_IDIALINGCODE = &H00000005  ' country/region dialing code, example: en-US and en-CA return 1.
    LOCALE_SLIST = &H0000000C  ' list item separator, eg "," for "1,2,3,4"
    LOCALE_IMEASURE = &H0000000D  ' 0 = metric, 1 = US measurement system
    LOCALE_SDECIMAL = &H0000000E  ' decimal separator, eg "." for 1,234.00
    LOCALE_STHOUSAND = &H0000000F  ' thousand separator, eg "," for 1,234.00
    LOCALE_SGROUPING = &H00000010  ' digit grouping, eg "3;0" for 1,000,000
    LOCALE_IDIGITS = &H00000011  ' number of fractional digits eg 2 for 1.00
    LOCALE_ILZERO = &H00000012  ' leading zeros for decimal, 0 for .97, 1 for 0.97
    LOCALE_INEGNUMBER = &H00001010  ' negative number mode, 0-4, see documentation
    LOCALE_SNATIVEDIGITS = &H00000013  ' native digits for 0-9, eg "0123456789"
    LOCALE_SCURRENCY = &H00000014  ' local monetary symbol, eg "$"
    LOCALE_SINTLSYMBOL = &H00000015  ' intl monetary symbol, eg "USD"
    LOCALE_SMONDECIMALSEP = &H00000016  ' monetary decimal separator, eg "." for $1,234.00
    LOCALE_SMONTHOUSANDSEP = &H00000017  ' monetary thousand separator, eg "," for $1,234.00
    LOCALE_SMONGROUPING = &H00000018  ' monetary grouping, eg "3;0" for $1,000,000.00
    LOCALE_ICURRDIGITS = &H00000019  ' # local monetary digits, eg 2 for $1.00
    LOCALE_ICURRENCY = &H0000001B  ' positive currency mode, 0-3, see documentation
    LOCALE_INEGCURR = &H0000001C  ' negative currency mode, 0-15, see documentation
    LOCALE_SSHORTDATE = &H0000001F  ' short date format string, eg "MM/dd/yyyy"
    LOCALE_SLONGDATE = &H00000020  ' long date format string, eg "dddd, MMMM dd, yyyy"
    LOCALE_STIMEFORMAT = &H00001003  ' time format string, eg "HH:mm:ss"
    LOCALE_SAM = &H00000028  ' AM designator, eg "AM"
    LOCALE_SPM = &H00000029  ' PM designator, eg "PM"
    LOCALE_ICALENDARTYPE = &H00001009  ' type of calendar specifier, eg CAL_GREGORIAN
    LOCALE_IOPTIONALCALENDAR = &H0000100B  ' additional calendar types specifier, eg CAL_GREGORIAN_US
    LOCALE_IFIRSTDAYOFWEEK = &H0000100C  ' first day of week specifier, 0-6, 0=Monday, 6=Sunday
    LOCALE_IFIRSTWEEKOFYEAR = &H0000100D  ' first week of year specifier, 0-2, see documentation
    LOCALE_SDAYNAME1 = &H0000002A  ' long name for Monday
    LOCALE_SDAYNAME2 = &H0000002B  ' long name for Tuesday
    LOCALE_SDAYNAME3 = &H0000002C  ' long name for Wednesday
    LOCALE_SDAYNAME4 = &H0000002D  ' long name for Thursday
    LOCALE_SDAYNAME5 = &H0000002E  ' long name for Friday
    LOCALE_SDAYNAME6 = &H0000002F  ' long name for Saturday
    LOCALE_SDAYNAME7 = &H00000030  ' long name for Sunday
    LOCALE_SABBREVDAYNAME1 = &H00000031  ' abbreviated name for Monday
    LOCALE_SABBREVDAYNAME2 = &H00000032  ' abbreviated name for Tuesday
    LOCALE_SABBREVDAYNAME3 = &H00000033  ' abbreviated name for Wednesday
    LOCALE_SABBREVDAYNAME4 = &H00000034  ' abbreviated name for Thursday
    LOCALE_SABBREVDAYNAME5 = &H00000035  ' abbreviated name for Friday
    LOCALE_SABBREVDAYNAME6 = &H00000036  ' abbreviated name for Saturday
    LOCALE_SABBREVDAYNAME7 = &H00000037  ' abbreviated name for Sunday
    LOCALE_SMONTHNAME1 = &H00000038  ' long name for January
    LOCALE_SMONTHNAME2 = &H00000039  ' long name for February
    LOCALE_SMONTHNAME3 = &H0000003A  ' long name for March
    LOCALE_SMONTHNAME4 = &H0000003B  ' long name for April
    LOCALE_SMONTHNAME5 = &H0000003C  ' long name for May
    LOCALE_SMONTHNAME6 = &H0000003D  ' long name for June
    LOCALE_SMONTHNAME7 = &H0000003E  ' long name for July
    LOCALE_SMONTHNAME8 = &H0000003F  ' long name for August
    LOCALE_SMONTHNAME9 = &H00000040  ' long name for September
    LOCALE_SMONTHNAME10 = &H00000041  ' long name for October
    LOCALE_SMONTHNAME11 = &H00000042  ' long name for November
    LOCALE_SMONTHNAME12 = &H00000043  ' long name for December
    LOCALE_SMONTHNAME13 = &H0000100E  ' long name for 13th month (if exists)
    LOCALE_SABBREVMONTHNAME1 = &H00000044  ' abbreviated name for January
    LOCALE_SABBREVMONTHNAME2 = &H00000045  ' abbreviated name for February
    LOCALE_SABBREVMONTHNAME3 = &H00000046  ' abbreviated name for March
    LOCALE_SABBREVMONTHNAME4 = &H00000047  ' abbreviated name for April
    LOCALE_SABBREVMONTHNAME5 = &H00000048  ' abbreviated name for May
    LOCALE_SABBREVMONTHNAME6 = &H00000049  ' abbreviated name for June
    LOCALE_SABBREVMONTHNAME7 = &H0000004A  ' abbreviated name for July
    LOCALE_SABBREVMONTHNAME8 = &H0000004B  ' abbreviated name for August
    LOCALE_SABBREVMONTHNAME9 = &H0000004C  ' abbreviated name for September
    LOCALE_SABBREVMONTHNAME10 = &H0000004D  ' abbreviated name for October
    LOCALE_SABBREVMONTHNAME11 = &H0000004E  ' abbreviated name for November
    LOCALE_SABBREVMONTHNAME12 = &H0000004F  ' abbreviated name for December
    LOCALE_SABBREVMONTHNAME13 = &H0000100F  ' abbreviated name for 13th month (if exists)
    LOCALE_SPOSITIVESIGN = &H00000050  ' positive sign, eg ""
    LOCALE_SNEGATIVESIGN = &H00000051  ' negative sign, eg "-"
    LOCALE_IPOSSIGNPOSN = &H00000052  ' positive sign position (derived from INEGCURR)
    LOCALE_INEGSIGNPOSN = &H00000053  ' negative sign position (derived from INEGCURR)
    LOCALE_IPOSSYMPRECEDES = &H00000054  ' mon sym precedes pos amt (derived from ICURRENCY)
    LOCALE_IPOSSEPBYSPACE = &H00000055  ' mon sym sep by space from pos amt (derived from ICURRENCY)
    LOCALE_INEGSYMPRECEDES = &H00000056  ' mon sym precedes neg amt (derived from INEGCURR)
    LOCALE_INEGSEPBYSPACE = &H00000057  ' mon sym sep by space from neg amt (derived from INEGCURR)
' #if(WINVER >= 0x0400)
    LOCALE_FONTSIGNATURE = &H00000058  ' font signature
    LOCALE_SISO639LANGNAME = &H00000059  ' ISO abbreviated language name, eg "en"
    LOCALE_SISO3166CTRYNAME = &H0000005A  ' ISO abbreviated country/region name, eg "US"
' #endif /* WINVER >= 0x0400 */
' #if(WINVER >= 0x0500)
    LOCALE_IPAPERSIZE = &H0000100A  ' 1 = letter, 5 = legal, 8 = a3, 9 = a4
    LOCALE_SENGCURRNAME = &H00001007  ' english name of currency, eg "Euro"
    LOCALE_SNATIVECURRNAME = &H00001008  ' native name of currency, eg "euro"
    LOCALE_SYEARMONTH = &H00001006  ' year month format string, eg "MM/yyyy"
    LOCALE_SSORTNAME = &H00001013  ' sort name, usually "", eg "Dictionary" in UI Language
    LOCALE_IDIGITSUBSTITUTION = &H00001014  ' 0 = context, 1 = none, 2 = national
' #endif /* WINVER >= 0x0500 */
' #if (WINVER >= 0x0600)
    LOCALE_SNAME = &H0000005c  ' locale name (ie: en-us)
    LOCALE_SDURATION = &H0000005d  ' time duration format, eg "hh:mm:ss"
    LOCALE_SSHORTESTDAYNAME1 = &H00000060  ' Shortest day name for Monday
    LOCALE_SSHORTESTDAYNAME2 = &H00000061  ' Shortest day name for Tuesday
    LOCALE_SSHORTESTDAYNAME3 = &H00000062  ' Shortest day name for Wednesday
    LOCALE_SSHORTESTDAYNAME4 = &H00000063  ' Shortest day name for Thursday
    LOCALE_SSHORTESTDAYNAME5 = &H00000064  ' Shortest day name for Friday
    LOCALE_SSHORTESTDAYNAME6 = &H00000065  ' Shortest day name for Saturday
    LOCALE_SSHORTESTDAYNAME7 = &H00000066  ' Shortest day name for Sunday
    LOCALE_SISO639LANGNAME2 = &H00000067  ' 3 character ISO abbreviated language name, eg "eng"
    LOCALE_SISO3166CTRYNAME2 = &H00000068  ' 3 character ISO country/region name, eg "USA"
    LOCALE_SNAN = &H00000069  ' Not a Number, eg "NaN"
    LOCALE_SPOSINFINITY = &H0000006a  ' + Infinity, eg "infinity"
    LOCALE_SNEGINFINITY = &H0000006b  ' - Infinity, eg "-infinity"
    LOCALE_SSCRIPTS = &H0000006c  ' Typical scripts in the locale: ; delimited script codes, eg "Latn;"
    LOCALE_SPARENT = &H0000006d  ' Fallback name for resources, eg "en" for "en-US"
    LOCALE_SCONSOLEFALLBACKNAME = &H0000006e  ' Fallback name for within the console for Unicode Only locales, eg "en" for bn-IN
' #endif //(WINVER >= 0x0600)
' #if (WINVER >= _WIN32_WINNT_WIN7)
    LOCALE_IREADINGLAYOUT = &H00000070  ' Returns one of the following 4 reading layout values:
'  0 - Left to right (eg en-US)
'  1 - Right to left (eg arabic locales)
'  2 - Vertical top to bottom with columns to the left and also left to right (ja-JP locales)
'  3 - Vertical top to bottom with columns proceeding to the right
    LOCALE_INEUTRAL = &H00000071  ' Returns 0 for specific cultures, 1 for neutral cultures.
    LOCALE_INEGATIVEPERCENT = &H00000074  ' Returns 0-11 for the negative percent format
    LOCALE_IPOSITIVEPERCENT = &H00000075  ' Returns 0-3 for the positive percent formatIPOSITIVEPERCENT
    LOCALE_SPERCENT = &H00000076  ' Returns the percent symbol
    LOCALE_SPERMILLE = &H00000077  ' Returns the permille (U+2030) symbol
    LOCALE_SMONTHDAY = &H00000078  ' Returns the preferred month/day format
    LOCALE_SSHORTTIME = &H00000079  ' Returns the preferred short time format (ie: no seconds, just h:mm)
    LOCALE_SOPENTYPELANGUAGETAG = &H0000007a  ' Open type language tag, eg: "latn" or "dflt"
    LOCALE_SSORTLOCALE = &H0000007b  ' Name of locale to use for sorting/collation/casing behavior.
' #endif //(WINVER >= _WIN32_WINNT_WIN7)
' #if (WINVER >= _WIN32_WINNT_WIN8)
    LOCALE_SRELATIVELONGDATE = &H0000007c  ' Long date without year, day of week, month, date, eg: for lock screen
' #endif
' #if (WINVER >= _WIN32_WINNT_WINBLUE)
    LOCALE_ICONSTRUCTEDLOCALE = &H0000007d  ' Flags if this locale is constructed.  Avoid using.
' #endif
' #if (WINVER >= _WIN32_WINNT_WIN10)
    LOCALE_SSHORTESTAM = &H0000007e  ' Shortest AM designator, eg "A"
    LOCALE_SSHORTESTPM = &H0000007f  ' Shortest PM designator, eg "P"
' #endif
' #if (NTDDI_VERSION >= NTDDI_WIN10_MN)
    LOCALE_IUSEUTF8LEGACYACP = &H00000666  ' default ansi code page (use of Unicode is recommended instead)
    LOCALE_IUSEUTF8LEGACYOEMCP = &H00000999  ' default oem code page (use of Unicode is recommended instead)
' #endif
'  DEPRECATED LCTYPEs
'  DEPRECATED LCTYPEs for Code Pages
'  Applications are strongly encouraged to Use Unicode, such as UTF-16 (WCHAR type)
'  or the CP_UTF8 Code Page.  Legacy encodings are unable to represent the full
'  set of scripts/language and characters (& emoji!) available on modern computers.
'  Use of legacy code pages (encodings) is a leading cause of data loss and corruption.
    LOCALE_IDEFAULTCODEPAGE = &H0000000B  ' default oem code page for locale (user may configure as UTF-8, use of Unicode is recommended instead)
    LOCALE_IDEFAULTANSICODEPAGE = &H00001004  ' default ansi code page for locale (user may configure as UTF-8, use of Unicode is recommended instead)
    LOCALE_IDEFAULTMACCODEPAGE = &H00001011  ' default mac code page for locale (user may configure as UTF-8, use of Unicode is recommended instead)
' #if(WINVER >= 0x0500)
    LOCALE_IDEFAULTEBCDICCODEPAGE = &H00001012  ' default ebcdic code page for a locale (use of Unicode is recommended instead)
' #endif /* WINVER >= 0x0500 */
'  LCTYPEs using out-of-date concepts
    LOCALE_ILANGUAGE = &H00000001  ' DEPRECATED language id (LCID), LOCALE_SNAME preferred
    LOCALE_SABBREVLANGNAME = &H00000003  ' DEPRECATED arbitrary abbreviated language name, LOCALE_SISO639LANGNAME instead.
    LOCALE_SABBREVCTRYNAME = &H00000007  ' DEPRECATED arbitrary abbreviated country/region name, LOCALE_SISO3166CTRYNAME instead.
    LOCALE_IGEOID = &H0000005B  ' DEPRECATED geographical location id, use LOCALE_SISO3166CTRYNAME instead.
    LOCALE_IDEFAULTLANGUAGE = &H00000009  ' DEPRECATED default language id, deprecated
    LOCALE_IDEFAULTCOUNTRY = &H0000000A  ' DEPRECATED default country/region code, deprecated
    LOCALE_IINTLCURRDIGITS = &H0000001A  ' DEPRECATED, use LOCALE_ICURRDIGITS # intl monetary digits, eg 2 for $1.00
'  Derived legacy date & time values for compatibility only.
'  Please use the appropriate date or time pattern instead.
'  These can be misleading, for example a locale configured as 12h24m52s could have a time separator of "h".
    LOCALE_SDATE = &H0000001D  ' DEPRECATED date separator (derived from LOCALE_SSHORTDATE, use that instead)
    LOCALE_STIME = &H0000001E  ' DEPRECATED time separator (derived from LOCALE_STIMEFORMAT, use that instead)
    LOCALE_IDATE = &H00000021  ' DEPRECATED short date format ordering (derived from LOCALE_SSHORTDATE, use that instead)
    LOCALE_ILDATE = &H00000022  ' DEPRECATED long date format ordering (derived from LOCALE_SLONGDATE, use that instead)
    LOCALE_ITIME = &H00000023  ' DEPRECATED time format specifier (derived from LOCALE_STIMEFORMAT, use that instead)
    LOCALE_ITIMEMARKPOSN = &H00001005  ' DEPRECATED time marker position (derived from LOCALE_STIMEFORMAT, use that instead)
    LOCALE_ICENTURY = &H00000024  ' DEPRECATED century format specifier (short date, LOCALE_SSHORTDATE is preferred)
    LOCALE_ITLZERO = &H00000025  ' DEPRECATED leading zeros in time field (derived from LOCALE_STIMEFORMAT, use that instead)
    LOCALE_IDAYLZERO = &H00000026  ' DEPRECATED leading zeros in day field (short date, LOCALE_SSHORTDATE is preferred)
    LOCALE_IMONLZERO = &H00000027  ' DEPRECATED leading zeros in month field (short date, LOCALE_SSHORTDATE is preferred)
' #if(WINVER >= 0x0600)
    LOCALE_SKEYBOARDSTOINSTALL = &H0000005e  ' Used internally, see GetKeyboardLayoutName() function
' #endif /* WINVER >= 0x0600 */
'  LCTYPEs which have been renamed to enable more understandable source code.
    LOCALE_SLANGUAGE = LOCALE_SLOCALIZEDDISPLAYNAME  ' DEPRECATED as new name is more readable.
    LOCALE_SLANGDISPLAYNAME = LOCALE_SLOCALIZEDLANGUAGENAME  ' DEPRECATED as new name is more readable.
    LOCALE_SENGLANGUAGE = LOCALE_SENGLISHLANGUAGENAME  ' DEPRECATED as new name is more readable.
    LOCALE_SNATIVELANGNAME = LOCALE_SNATIVELANGUAGENAME  ' DEPRECATED as new name is more readable.
    LOCALE_SCOUNTRY = LOCALE_SLOCALIZEDCOUNTRYNAME  ' DEPRECATED as new name is more readable.
    LOCALE_SENGCOUNTRY = LOCALE_SENGLISHCOUNTRYNAME  ' DEPRECATED as new name is more readable.
    LOCALE_SNATIVECTRYNAME = LOCALE_SNATIVECOUNTRYNAME  ' DEPRECATED as new name is more readable.
'  DEPRECATED: Use LOCALE_SISO3166CTRYNAME to query for a region identifier, LOCALE_ICOUNTRY is not a region identifier.
    LOCALE_ICOUNTRY = LOCALE_IDIALINGCODE  ' Deprecated synonym for LOCALE_IDIALINGCODE
    LOCALE_S1159 = LOCALE_SAM  ' DEPRECATED: Please use LOCALE_SAM, which is more readable.
    LOCALE_S2359 = LOCALE_SPM  ' DEPRECATED: Please use LOCALE_SPM, which is more readable.
End Enum


Public Enum GST_Class
    CT_CTYPE1 = &H1          ' ctype 1 information
    CT_CTYPE2 = &H2          ' ctype 2 information
    CT_CTYPE3 = &H4          ' ctype 3 information
End Enum
Public Enum C1_CharTypes
    C1_UPPER = &H1      ' upper case
    C1_LOWER = &H2      ' lower case
    C1_DIGIT = &H4      ' decimal digits
    C1_SPACE = &H8      ' spacing characters
    C1_PUNCT = &H10     ' punctuation characters
    C1_CNTRL = &H20     ' control characters
    C1_BLANK = &H40     ' blank characters
    C1_XDIGIT = &H80     ' other digits
    C1_ALPHA = &H100    ' any linguistic character
    C1_DEFINED = &H200    ' defined character
End Enum
Public Enum C2_CharTypes
    C2_LEFTTORIGHT = &H0001  ' left to right
    C2_RIGHTTOLEFT = &H0002  ' right to left
    C2_EUROPENUMBER = &H0003  ' European number, digit
    C2_EUROPESEPARATOR = &H0004  ' European numeric separator
    C2_EUROPETERMINATOR = &H0005  ' European numeric terminator
    C2_ARABICNUMBER = &H0006  ' Arabic number
    C2_COMMONSEPARATOR = &H0007  ' common numeric separator
    C2_BLOCKSEPARATOR = &H0008  ' block separator
    C2_SEGMENTSEPARATOR = &H0009  ' segment separator
    C2_WHITESPACE = &H000A  ' white space
    C2_OTHERNEUTRAL = &H000B  ' other neutrals
    C2_NOTAPPLICABLE = &H0000  ' no implicit directionality
End Enum
Public Enum C3_CharTypes
    C3_NONSPACING = &H0001  ' nonspacing character
    C3_DIACRITIC = &H0002  ' diacritic mark
    C3_VOWELMARK = &H0004  ' vowel mark
    C3_SYMBOL = &H0008  ' symbols
    C3_KATAKANA = &H0010  ' katakana character
    C3_HIRAGANA = &H0020  ' hiragana character
    C3_HALFWIDTH = &H0040  ' half width character
    C3_FULLWIDTH = &H0080  ' full width character
    C3_IDEOGRAPH = &H0100  ' ideographic character
    C3_KASHIDA = &H0200  ' Arabic kashida character
    C3_LEXICAL = &H0400  ' lexical character
    C3_HIGHSURROGATE = &H0800  ' high surrogate code unit
    C3_LOWSURROGATE = &H1000  ' low surrogate code unit
    C3_ALPHA = &H8000&  ' any linguistic char (C1_ALPHA)
    C3_NOTAPPLICABLE = &H0000  ' ctype 3 is not applicable
End Enum



Public Enum WCMB_Flags
    WC_COMPOSITECHECK = &H00000200  ' convert composite to precomposed
    WC_DISCARDNS = &H00000010  ' discard non-spacing chars          // Used with WC_COMPOSITECHECK
    WC_SEPCHARS = &H00000020  ' generate separate chars            // Used with WC_COMPOSITECHECK
    WC_DEFAULTCHAR = &H00000040  ' replace w/ default char            // Used with WC_COMPOSITECHECK
    WC_ERR_INVALID_CHARS = &H00000080  ' error for invalid chars
    WC_NO_BEST_FIT_CHARS = &H00000400  ' do not use best fit chars
End Enum


Public Enum FileAccessRights
    FILE_READ_DATA = (&H0001)  ' file & pipe
    FILE_LIST_DIRECTORY = (&H0001)  ' directory
    FILE_WRITE_DATA = (&H0002)  ' file & pipe
    FILE_ADD_FILE = (&H0002)  ' directory
    FILE_APPEND_DATA = (&H0004)  ' file
    FILE_ADD_SUBDIRECTORY = (&H0004)  ' directory
    FILE_CREATE_PIPE_INSTANCE = (&H0004)  ' named pipe
    FILE_READ_EA = (&H0008)  ' file & directory
    FILE_WRITE_EA = (&H0010)  ' file & directory
    FILE_EXECUTE = (&H0020)  ' file
    FILE_TRAVERSE = (&H0020)  ' directory
    FILE_DELETE_CHILD = (&H0040)  ' directory
    FILE_READ_ATTRIBUTES = (&H0080)  ' all
    FILE_WRITE_ATTRIBUTES = (&H0100)  ' all
    FILE_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or SYNCHRONIZE Or &H1FF)
    FILE_GENERIC_READ = (STANDARD_RIGHTS_READ Or FILE_READ_DATA Or FILE_READ_ATTRIBUTES Or FILE_READ_EA Or SYNCHRONIZE)
    FILE_GENERIC_WRITE = (STANDARD_RIGHTS_WRITE Or FILE_WRITE_DATA Or FILE_WRITE_ATTRIBUTES Or FILE_WRITE_EA Or FILE_APPEND_DATA Or SYNCHRONIZE)
    FILE_GENERIC_EXECUTE = (STANDARD_RIGHTS_EXECUTE Or FILE_READ_ATTRIBUTES Or FILE_EXECUTE Or SYNCHRONIZE)
End Enum
Public Enum DirectoryAccessRights
    DIRECTORY_QUERY = (&H0001)
    DIRECTORY_TRAVERSE = (&H0002)
    DIRECTORY_CREATE_OBJECT = (&H0004)
    DIRECTORY_CREATE_SUBDIRECTORY = (&H0008)
    DIRECTORY_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or &HF)
End Enum
Public Enum SymbolicLinkAccessRights
    SYMBOLIC_LINK_QUERY = (&H0001)
    SYMBOLIC_LINK_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or &H1)
End Enum
Public Enum EventAccessRights
    EVENT_ALL_ACCESS = &H1F0003
    EVENT_MODIFY_STATE = &H0002
End Enum
Public Enum MutexAccessRights
    MUTEX_ALL_ACCESS = &H1F0001
    MUTEX_MODIFY_STATE = &H0001
End Enum
Public Enum SemaphoreAccessRights
    SEMAPHORE_ALL_ACCESS = &H1F0003
    SEMAPHORE_MODIFY_STATE = &H0002
End Enum
Public Enum TimerAccessRights
    TIMER_ALL_ACCESS = &H1F0003
    TIMER_MODIFY_STATE = &H0002
    TIMER_QUERY_STATE = &H0001
End Enum

Public Const INVALID_HANDLE_VALUE = -1&

Public Enum ProcessAccessRights
    PROCESS_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or SYNCHRONIZE Or &HFFFF&)
    PROCESS_TERMINATE = &H1 ' Enables using the process handle in the TerminateProcess function to terminate the process.
    PROCESS_CREATE_THREAD = &H2   ' Enables using the process handle in the CreateRemoteThread function to create a thread in the process.
    PROCESS_VM_OPERATION = &H8 ' Enables using the process handle in the VirtualProtectEx and WriteProcessMemory functions to modify the virtual memory of the process.
    PROCESS_VM_READ = &H10     ' Enables using the process handle in the ReadProcessMemory function to read from the virtual memory of the process.
    PROCESS_VM_WRITE = &H20 ' Enables using the process handle in the WriteProcessMemory function to write to the virtual memory of the process.
    PROCESS_DUP_HANDLE = &H40   ' Enables using the process handle as either the source or target process in the DuplicateHandle function to duplicate a handle
    PROCESS_SET_INFORMATION = &H200 ' Enables using the process handle in the SetPriorityClass function to set the priority class of the process.
    PROCESS_QUERY_INFORMATION = &H400 ' Enables using the process handle in the GetExitCodeProcess and GetPriorityClass functions to read information from the process object.
    PROCESS_QUERY_LIMITED_INFORMATION = &H1000
End Enum

Public Enum MBWC_Flags
    MB_PRECOMPOSED = &H1
    MB_COMPOSITE = &H2
    MB_USEGLYPHCHARS = &H4
    MB_ERR_INVALID_CHARS = &H8
End Enum



Public Enum ResourceTypes
        RT_CURSOR = 1
        RT_BITMAP = 2
        RT_ICON = 3
        RT_MENU = 4
        RT_DIALOG = 5
        RT_STRING = 6
        RT_FONTDIR = 7
        RT_FONT = 8
        RT_ACCELERATOR = 9
        RT_RCDATA = 10
        RT_MESSAGETABLE = 11
        RT_GROUP_CURSOR = 12
        RT_GROUP_ICON = 14
        RT_VERSION = 16
        RT_DLGINCLUDE = 17
        RT_PLUGPLAY = 19
        RT_VXD = 20
        RT_ANICURSOR = 21
        RT_ANIICON = 22
        RT_HTML = 23
        RT_MANIFEST = 24
End Enum
Public Const CREATEPROCESS_MANIFEST_RESOURCE_ID  = 1
Public Const ISOLATIONAWARE_MANIFEST_RESOURCE_ID  = 2
Public Const ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID  = 3
Public Const ISOLATIONPOLICY_MANIFEST_RESOURCE_ID  = 4
Public Const ISOLATIONPOLICY_BROWSER_MANIFEST_RESOURCE_ID  = 5
Public Const MINIMUM_RESERVED_MANIFEST_RESOURCE_ID  = 1 /* inclusive */
Public Const MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID  = 16 /* inclusive */


Public Enum ResourceEnumFlags
    RESOURCE_ENUM_LN = (&H0001)
    RESOURCE_ENUM_MUI = (&H0002)
    RESOURCE_ENUM_MUI_SYSTEM = (&H0004)
    RESOURCE_ENUM_VALIDATE = (&H0008)
    RESOURCE_ENUM_MODULE_EXACT = (&H0010)
End Enum

Public Const SUPPORT_LANG_NUMBER = 32

Public Enum FindResourceFlags
    FIND_RESOURCE_DIRECTORY_TYPES = (&H0100)
    FIND_RESOURCE_DIRECTORY_NAMES = (&H0200)
    FIND_RESOURCE_DIRECTORY_LANGUAGES = (&H0400)
End Enum

Public Type ENUMUILANG
    NumOfEnumUILang As Long ' Acutall number of enumerated languages
    SizeOfEnumUIBuffer As Long ' Buffer size of pMUIEnumUILanguages
    pEnumUIBuffer As LongPtr 'LANGID *
End Type



Public Enum LoadLibraryFlags
    DONT_RESOLVE_DLL_REFERENCES = &H00000001
    LOAD_LIBRARY_AS_DATAFILE = &H00000002
    LOAD_PACKAGED_LIBRARY = &H00000004
    LOAD_WITH_ALTERED_SEARCH_PATH = &H00000008
    LOAD_IGNORE_CODE_AUTHZ_LEVEL = &H00000010
    LOAD_LIBRARY_AS_IMAGE_RESOURCE = &H00000020
    LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE = &H00000040
    LOAD_LIBRARY_REQUIRE_SIGNED_TARGET = &H00000080
    LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR = &H00000100
    LOAD_LIBRARY_SEARCH_APPLICATION_DIR = &H00000200
    LOAD_LIBRARY_SEARCH_USER_DIRS = &H00000400
    LOAD_LIBRARY_SEARCH_SYSTEM32 = &H00000800
    LOAD_LIBRARY_SEARCH_DEFAULT_DIRS = &H00001000
    LOAD_LIBRARY_SAFE_CURRENT_DIRS = &H00002000
    LOAD_LIBRARY_SEARCH_SYSTEM32_NO_FORWARDER = &H00004000
    LOAD_LIBRARY_OS_INTEGRITY_CONTINUITY = &H00008000&
End Enum

Public Enum LockFileExFlags
    LOCKFILE_FAIL_IMMEDIATELY = &H0001
    LOCKFILE_EXCLUSIVE_LOCK = &H0002
End Enum

Public Enum FileBaseType
    FILE_TYPE_UNKNOWN = &H0000
    FILE_TYPE_DISK = &H0001
    FILE_TYPE_CHAR = &H0002
    FILE_TYPE_PIPE = &H0003
    FILE_TYPE_REMOTE = &H8000&
End Enum

Public Enum NTSectionAccessRights
    SECTION_QUERY = &H0001
    SECTION_MAP_WRITE = &H0002
    SECTION_MAP_READ = &H0004
    SECTION_MAP_EXECUTE = &H0008
    SECTION_EXTEND_SIZE = &H0010
    SECTION_MAP_EXECUTE_EXPLICIT = &H0020  ' not included in SECTION_ALLACCESS
    SECTION_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or SECTION_QUERY Or SECTION_MAP_WRITE Or SECTION_MAP_READ Or SECTION_MAP_EXECUTE Or SECTION_EXTEND_SIZE)
End Enum

Public Enum SECTION_INFORMATION_CLASS
    SectionBasicInformation   ' q; SECTION_BASIC_INFORMATION
    SectionImageInformation   ' q; SECTION_IMAGE_INFORMATION
    SectionRelocationInformation   ' q; ULONG_PTR RelocationDelta // name:wow64:whNtQuerySection_SectionRelocationInformation // since WIN7
    SectionOriginalBaseInformation   ' q; PVOID BaseAddress // since REDSTONE
    SectionInternalImageInformation   ' SECTION_INTERNAL_IMAGE_INFORMATION // since REDSTONE2
    MaxSectionInfoClass
End Enum

Public Type SECTION_BASIC_INFORMATION
    BaseAddress As LongPtr
    AllocationAttributes As Long
    MaximumSize As LARGE_INTEGER
End Type

Public Enum SectionImageBitfield
    SECIMG_ComPlusNativeReady = &B1
    SECIMG_ComPlusILOnly = &B10
    SECIMG_ImageDynamicallyRelocated = &B100
    SECIMG_ImageMappedFlat = &B1000
    SECIMG_BaseBelow4gb = &B10000
    SECIMG_ComPlusPrefer32bit = &B100000
End Enum
Public Type SECTION_IMAGE_INFORMATION
    TransferAddress As LongPtr '0x0
    ZeroBits As Long '0x8
    MaximumStackSize As LongPtr '0x10
    CommittedStackSize As LongPtr '0x18
    SubSystemType As ImageSubsystemType
    ' union
    ' {
        ' struct
        ' {
            ' USHORT SubSystemMinorVersion;
            ' USHORT SubSystemMajorVersion;
        ' };
        ' ULONG SubSystemVersion;
    ' };
    SubSystemVersion As Long
    ' union
    ' {
        ' struct
        ' {
            ' USHORT MajorOperatingSystemVersion;
            ' USHORT MinorOperatingSystemVersion;
        ' };
        ' ULONG OperatingSystemVersion;
    ' };
    [Description("GpValue on 6.2")]
    OperatingSystemVersion As Long
    ImageCharacteristics As Integer
    DllCharacteristics As Integer
    Machine As Integer
    ImageContainsCode As Byte
    ' union
    ' {
        ' UCHAR ImageFlags;                                                   //0x33
        ' struct
        ' {
            ' UCHAR ComPlusNativeReady : 1;                                     //0x33
            ' UCHAR ComPlusILOnly : 1;                                          //0x33
            ' UCHAR ImageDynamicallyRelocated : 1;                              //0x33
            ' UCHAR ImageMappedFlat : 1;                                        //0x33
            ' UCHAR BaseBelow4gb : 1;                                           //0x33
            ' UCHAR ComPlusPrefer32bit : 1;                                     //0x33
            ' UCHAR Reserved : 2;                                               //0x33
        ' };
    ' };
    [Description("Values in SectionImageBitfield")]
    /* [ TypeHint(SectionImageBitfield) ] */ ImageFlags As Byte
    LoaderFlags As Long
    ImageFileSize As Long
    Checksum As Long
End Type

Public Type SECTION_INTERNAL_IMAGE_INFORMATION
    SectionInformation As SECTION_IMAGE_INFORMATION
    ' union
    ' {
        ' ULONG ExtendedFlags;
        ' struct
        ' {
            ' ULONG ImageExportSuppressionEnabled : 1;
            ' ULONG ImageCetShadowStacksReady : 1; // 20H1
            ' ULONG ImageXfgEnabled : 1; // 20H2
            ' ULONG ImageCetShadowStacksStrictMode : 1;
            ' ULONG ImageCetSetContextIpValidationRelaxedMode : 1;
            ' ULONG ImageCetDynamicApisAllowInProc : 1;
            ' ULONG ImageCetDowngradeReserved1 : 1;
            ' ULONG ImageCetDowngradeReserved2 : 1;
            ' ULONG Reserved : 24;
        ' };
    ' };
    ExtendedFlags As Long
End Type

Public Enum SECTION_INHERIT
    SECINH_ViewShare = 1
    SECINH_ViewUnmap = 2
End Enum

Public Enum NTSectionFlags
    SEC_HUGE_PAGES = &H00020000
    SEC_PARTITION_OWNER_HANDLE = &H00040000
    SEC_64K_PAGES = &H00080000
    SEC_FILE = &H00800000
    SEC_IMAGE = &H01000000
    SEC_PROTECTED_IMAGE = &H02000000
    SEC_RESERVE = &H04000000
    SEC_COMMIT = &H08000000
    SEC_NOCACHE = &H10000000
    SEC_WRITECOMBINE = &H40000000
    SEC_LARGE_PAGES = &H80000000
    SEC_IMAGE_NO_EXECUTE = (SEC_IMAGE Or SEC_NOCACHE)
End Enum

Public Enum FileMapFlags
    FILE_MAP_WRITE = SECTION_MAP_WRITE
    FILE_MAP_READ = SECTION_MAP_READ
    FILE_MAP_ALL_ACCESS = SECTION_ALL_ACCESS
    FILE_MAP_EXECUTE = SECTION_MAP_EXECUTE_EXPLICIT  ' not included in FILE_MAP_ALL_ACCESS
    FILE_MAP_COPY = &H00000001
    FILE_MAP_RESERVE = &H80000000
    FILE_MAP_TARGETS_INVALID = &H40000000
    FILE_MAP_LARGE_PAGES = &H20000000
End Enum

Public Enum MemExtendedParameterFlags
    MEM_EXTENDED_PARAMETER_GRAPHICS = &H00000001
    MEM_EXTENDED_PARAMETER_NONPAGED = &H00000002
    MEM_EXTENDED_PARAMETER_ZERO_PAGES_OPTIONAL = &H00000004
    MEM_EXTENDED_PARAMETER_NONPAGED_LARGE = &H00000008
    MEM_EXTENDED_PARAMETER_NONPAGED_HUGE = &H00000010
    MEM_EXTENDED_PARAMETER_SOFT_FAULT_PAGES = &H00000020
    MEM_EXTENDED_PARAMETER_EC_CODE = &H00000040
End Enum
Public Const MEM_EXTENDED_PARAMETER_NUMA_NODE_MANDATORY = MINLONG64

Public Enum MEM_EXTENDED_PARAMETER_TYPE
    MemExtendedParameterInvalidType = 0
    MemExtendedParameterAddressRequirements = 1
    MemExtendedParameterNumaNode = 2
    MemExtendedParameterPartitionHandle = 3
    MemExtendedParameterUserPhysicalHandle = 4
    MemExtendedParameterAttributeFlags = 5
    MemExtendedParameterImageMachine = 6
    MemExtendedParameterMax = 7
End Enum
Public Type MEM_EXTENDED_PARAMETER
    Type As LongLong
    ' union {
        ' DWORD64 ULong64;
        ' PVOID Pointer;
        ' SIZE_T Size;
        ' HANDLE Handle;
        ' DWORD ULong;
    ' } DUMMYUNIONNAME;    
    SizeOrHandleOrPointer As LongLong
End Type
Public Type MEM_ADDRESS_REQUIREMENTS
    LowestStartingAddress As LongPtr
    HighestEndingAddress As LongPtr
    Alignment As LongPtr
End Type

Public Const MEMORY_CURRENT_PARTITION_HANDLE As LongPtr = -1
Public Const MEMORY_SYSTEM_PARTITION_HANDLE As LongPtr = -2
Public Const MEMORY_EXISTING_VAD_PARTITION_HANDLE As LongPtr = -3


Public Type MEMORY_BASIC_INFORMATION
    BaseAddress As LongPtr
    AllocationBase As LongPtr
    AllocationProtect As MemProtectFlags
    PartitionId As Integer
    RegionSize As LongPtr
    State As MemAllocType
    Protect As MemProtectFlags
    Type As MemAllocType
End Type

Public Enum PROCESSOR_ARCHITECTURE
    PROCESSOR_ARCHITECTURE_INTEL = 0
    PROCESSOR_ARCHITECTURE_MIPS = 1
    PROCESSOR_ARCHITECTURE_ALPHA = 2
    PROCESSOR_ARCHITECTURE_PPC = 3
    PROCESSOR_ARCHITECTURE_SHX = 4
    PROCESSOR_ARCHITECTURE_ARM = 5
    PROCESSOR_ARCHITECTURE_IA64 = 6
    PROCESSOR_ARCHITECTURE_ALPHA64 = 7
    PROCESSOR_ARCHITECTURE_MSIL = 8
    PROCESSOR_ARCHITECTURE_AMD64 = 9
    PROCESSOR_ARCHITECTURE_IA32_ON_WIN64 = 10
    PROCESSOR_ARCHITECTURE_NEUTRAL = 11
    PROCESSOR_ARCHITECTURE_ARM64 = 12
    PROCESSOR_ARCHITECTURE_ARM32_ON_WIN64 = 13
    PROCESSOR_ARCHITECTURE_IA32_ON_ARM64 = 14
    '[IgnoreWarnings(TB0012)]
    PROCESSOR_ARCHITECTURE_UNKNOWN = &HFFFF&
End Enum

Public Type SYSTEM_INFO
    wProcessorArchitecture As Integer
    wReserved As Integer
    dwPageSize As Long
    lpMinimumApplicationAddress As LongPtr
    lpMaximumApplicationAddress As LongPtr
    dwActiveProcessorMask As LongPtr
    dwNumberOfProcessors As Long
    dwProcessorType As Long
    dwAllocationGranularity As Long
    wProcessorLevel As Integer
    wProcessorRevision As Integer
End Type

Public Enum InitCriticalSectExFlags
    CRITICAL_SECTION_NO_DEBUG_INFO = &H01000000
End Enum

Public Enum CreateMutexExFlags
    CREATE_MUTEX_INITIAL_OWNER = &H00000001
End Enum

Public Enum CreateWaitableTimerExFlags
    CREATE_WAITABLE_TIMER_MANUAL_RESET = &H00000001
    CREATE_WAITABLE_TIMER_HIGH_RESOLUTION = &H00000002
End Enum

Public Enum WaitForObjOutcomes
    WAIT_FAILED = (&HFFFFFFFF)
    WAIT_OBJECT_0 = ((STATUS_WAIT_0) + 0)

    WAIT_ABANDONED = ((STATUS_ABANDONED_WAIT_0) + 0)
    WAIT_ABANDONED_0 = ((STATUS_ABANDONED_WAIT_0) + 0)

    WAIT_IO_COMPLETION = STATUS_USER_APC
End Enum

Public Enum ReasonCtxFlags
    POWER_REQUEST_CONTEXT_SIMPLE_STRING = &H00000001
    POWER_REQUEST_CONTEXT_DETAILED_STRING = &H00000002
End Enum
Public Type REASON_CONTEXT_DETAILED
    LocalizedReasonModule As LongPtr
    LocalizedReasonId As Long
    ReasonStringCount As Long
    ReasonStrings As LongPtr
End Type
[Description("For the union, either copy a string pointer, or use the REASON_CONTEXT_DETAILED type and copy that.")]
Public Type REASON_CONTEXT
    Version As Long
    Flags As ReasonCtxFlags
    [Description("For the union, either copy a string pointer, or use the REASON_CONTEXT_DETAILED type and copy that.")]
    #If Win64 Then
    union(23) As Byte
    #Else
    union(15) As Byte
    #End If
End Type

Public Type RTL_BARRIER
    Reserved1 As Long
    Reserved2 As Long
    Reserved3(0 To 1) As LongPtr
    Reserved4 As Long
    Reserved5 As Long
End Type
'Alias SYNCHRONIZATION_BARRIER As RTL_BARRIER
Public Type SYNCHRONIZATION_BARRIER
    Reserved1 As Long
    Reserved2 As Long
    Reserved3(0 To 1) As LongPtr
    Reserved4 As Long
    Reserved5 As Long
End Type
Public Enum SyncBarrierFlags
    SYNCHRONIZATION_BARRIER_FLAGS_SPIN_ONLY = &H01
    SYNCHRONIZATION_BARRIER_FLAGS_BLOCK_ONLY = &H02
    SYNCHRONIZATION_BARRIER_FLAGS_NO_DELETE = &H04
End Enum

Public Enum ActivationContextFlags
    ACTCTX_FLAG_PROCESSOR_ARCHITECTURE_VALID = (&H00000001)
    ACTCTX_FLAG_LANGID_VALID = (&H00000002)
    ACTCTX_FLAG_ASSEMBLY_DIRECTORY_VALID = (&H00000004)
    ACTCTX_FLAG_RESOURCE_NAME_VALID = (&H00000008)
    ACTCTX_FLAG_SET_PROCESS_DEFAULT = (&H00000010)
    ACTCTX_FLAG_APPLICATION_NAME_VALID = (&H00000020)
    ACTCTX_FLAG_SOURCE_IS_ASSEMBLYREF = (&H00000040)
    ACTCTX_FLAG_HMODULE_VALID = (&H00000080)
End Enum
Public Type ACTCTXA
    cbSize As Long
    dwFlags As ActivationContextFlags
    lpSource As String
    wProcessorArchitecture As Integer
    wLangId As Integer
    lpAssemblyDirectory As String
    lpResourceName As String
    lpApplicationName As String
    hModule As LongPtr
End Type
Public Type ACTCTXW
    cbSize As Long
    dwFlags As ActivationContextFlags
    lpSource As LongPtr
    wProcessorArchitecture As Integer
    wLangId As Integer
    lpAssemblyDirectory As LongPtr
    lpResourceName As LongPtr
    lpApplicationName As LongPtr
    hModule As LongPtr
End Type
Public Type ACTCTX
    cbSize As Long
    dwFlags As ActivationContextFlags
    lpSource As LongPtr
    wProcessorArchitecture As Integer
    wLangId As Integer
    lpAssemblyDirectory As LongPtr
    lpResourceName As LongPtr
    lpApplicationName As LongPtr
    hModule As LongPtr
End Type
Public Enum DeactivateActCtxFlags
    DEACTIVATE_ACTCTX_FLAG_FORCE_EARLY_DEACTIVATION = (&H00000001)
End Enum

Public Type ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA
    lpInformation As LongPtr
    lpSectionBase As LongPtr
    ulSectionLength As Long
    lpSectionGlobalDataBase As LongPtr
    ulSectionGlobalDataLength As Long
End Type

Public Type ACTCTX_SECTION_KEYED_DATA_2600
    cbSize As Long
    ulDataFormatVersion As Long
    lpData As LongPtr
    ulLength As Long
    lpSectionGlobalData As LongPtr
    ulSectionGlobalDataLength As Long
    lpSectionBase As LongPtr
    ulSectionTotalLength As Long
    hActCtx As LongPtr
    ulAssemblyRosterIndex As Long
End Type
Public Enum ActivationContextKeyedDataFlags
    FIND_ACTCTX_SECTION_KEY_RETURN_HACTCTX = (&H00000001)
    FIND_ACTCTX_SECTION_KEY_RETURN_FLAGS = (&H00000002)
    FIND_ACTCTX_SECTION_KEY_RETURN_ASSEMBLY_METADATA = (&H00000004)
End Enum
Public Type ACTCTX_SECTION_KEYED_DATA
    cbSize As Long
    ulDataFormatVersion As Long
    lpData As LongPtr
    ulLength As Long
    lpSectionGlobalData As LongPtr
    ulSectionGlobalDataLength As Long
    lpSectionBase As LongPtr
    ulSectionTotalLength As Long
    hActCtx As LongPtr
    ulAssemblyRosterIndex As Long
    ' 2600 stops here
    ulFlags As Long
    AssemblyMetadata As ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA
End Type

Public Enum ActivationContextSections
    ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION = (1)
    ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION = (2)
    ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION = (3)
    ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION = (4)
    ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION = (5)
    ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION = (6)
    ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION = (7)
    ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE = (8)
    ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES = (9)
    ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS = (10)
    ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO = (11)
    ACTIVATION_CONTEXT_SECTION_WINRT_ACTIVATABLE_CLASSES = (12)
End Enum

Public Enum ACTIVATION_CONTEXT_INFO_CLASS
    ActivationContextBasicInformation = 1
    ActivationContextDetailedInformation = 2
    AssemblyDetailedInformationInActivationContext = 3
    FileInformationInAssemblyOfAssemblyInActivationContext = 4
    RunlevelInformationInActivationContext = 5
    CompatibilityInformationInActivationContext = 6
    ActivationContextManifestResourceName = 7
    MaxActivationContextInfoClass
    ' 
    '  compatibility with old names
    ' 
    AssemblyDetailedInformationInActivationContxt = 3
    FileInformationInAssemblyOfAssemblyInActivationContxt = 4
End Enum

Public Type ACTIVATION_CONTEXT_BASIC_INFORMATION
    hActCtx As LongPtr
    dwFlags As Long
End Type

Public Type ASSEMBLY_FILE_DETAILED_INFORMATION
    ulFlags As Long
    ulFilenameLength As Long
    ulPathLength As Long
    lpFileName As LongPtr
    lpFilePath As LongPtr
End Type


Public Enum ActivationContextPathType
    ACTIVATION_CONTEXT_PATH_TYPE_NONE = (1)
    ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE = (2)
    ACTIVATION_CONTEXT_PATH_TYPE_URL = (3)
    ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF = (4)
End Enum

Public Type ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION
    ulFlags As Long
    ulEncodedAssemblyIdentityLength As Long ' in bytes
    ulManifestPathType As ActivationContextPathType ' ACTIVATION_CONTEXT_PATH_TYPE_*
    ulManifestPathLength As Long ' in bytes
    liManifestLastWriteTime As LARGE_INTEGER ' FILETIME
    ulPolicyPathType As ActivationContextPathType ' ACTIVATION_CONTEXT_PATH_TYPE_*
    ulPolicyPathLength As Long ' in bytes
    liPolicyLastWriteTime As LARGE_INTEGER ' FILETIME
    ulMetadataSatelliteRosterIndex As Long
    ulManifestVersionMajor As Long ' 1
    ulManifestVersionMinor As Long ' 0
    ulPolicyVersionMajor As Long ' 0
    ulPolicyVersionMinor As Long ' 0
    ulAssemblyDirectoryNameLength As Long ' in bytes
    lpAssemblyEncodedAssemblyIdentity As LongPtr
    lpAssemblyManifestPath As LongPtr
    lpAssemblyPolicyPath As LongPtr
    lpAssemblyDirectoryName As LongPtr
    ulFileCount As Long
End Type


Public Enum ACTCTX_REQUESTED_RUN_LEVEL
    ACTCTX_RUN_LEVEL_UNSPECIFIED = 0
    ACTCTX_RUN_LEVEL_AS_INVOKER = 1
    ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE = 2
    ACTCTX_RUN_LEVEL_REQUIRE_ADMIN = 3
    ACTCTX_RUN_LEVEL_NUMBERS = 4
End Enum

Public Type ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION
    ulFlags As Long
    RunLevel As ACTCTX_REQUESTED_RUN_LEVEL
    UiAccess As Long
End Type

Public Enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN = 0
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS = 1
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION = 2
    ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MAXVERSIONTESTED = 3
End Enum
Public Type COMPATIBILITY_CONTEXT_ELEMENT
    Id As UUID
    Type As ACTCTX_COMPATIBILITY_ELEMENT_TYPE
    MaxVersionTested As LongLong
End Type

Public Enum QueryActivationContextFlags
    QUERY_ACTCTX_FLAG_USE_ACTIVE_ACTCTX = (&H00000004)
    QUERY_ACTCTX_FLAG_ACTCTX_IS_HMODULE = (&H00000008)
    QUERY_ACTCTX_FLAG_ACTCTX_IS_ADDRESS = (&H00000010)
    QUERY_ACTCTX_FLAG_NO_ADDREF = (&H80000000)
End Enum

Public Type ACTIVATION_CONTEXT_DETAILED_INFORMATION
    dwFlags As Long
    ulFormatVersion As Long
    ulAssemblyCount As Long
    ulRootManifestPathType As Long
    ulRootManifestPathChars As Long
    ulRootConfigurationPathType As Long
    ulRootConfigurationPathChars As Long
    ulAppDirPathType As Long
    ulAppDirPathChars As Long
    lpRootManifestPath As LongPtr
    lpRootConfigurationPath As LongPtr
    lpAppDirPath As LongPtr
End Type

Public Type SUPPORTED_OS_INFO
    MajorVersion As Integer
    MinorVersion As Integer
End Type

Public Const MAILSLOT_NO_MESSAGE = -1
Public Const MAILSLOT_WAIT_FOREVER = -1

Public Enum EnumModulesFlags
    LIST_MODULES_DEFAULT = &H0  ' This is the default one app would get without any flag.
    LIST_MODULES_32BIT = &H01  ' list 32bit modules in the target process.
    LIST_MODULES_64BIT = &H02  ' list all 64bit modules. 32bit exe will be stripped off.
'  list all the modules
    LIST_MODULES_ALL = (LIST_MODULES_32BIT Or LIST_MODULES_64BIT)
End Enum

Public Type PROCESS_MEMORY_COUNTERS
    cb As Long
    PageFaultCount As Long
    PeakWorkingSetSize As LongPtr
    WorkingSetSize As LongPtr
    QuotaPeakPagedPoolUsage As LongPtr
    QuotaPagedPoolUsage As LongPtr
    QuotaPeakNonPagedPoolUsage As LongPtr
    QuotaNonPagedPoolUsage As LongPtr
    PagefileUsage As LongPtr
    PeakPagefileUsage As LongPtr
End Type
Public Type PROCESS_MEMORY_COUNTERS_EX
    cb As Long
    PageFaultCount As Long
    PeakWorkingSetSize As LongPtr
    WorkingSetSize As LongPtr
    QuotaPeakPagedPoolUsage As LongPtr
    QuotaPagedPoolUsage As LongPtr
    QuotaPeakNonPagedPoolUsage As LongPtr
    QuotaNonPagedPoolUsage As LongPtr
    PagefileUsage As LongPtr
    PeakPagefileUsage As LongPtr
    PrivateUsage As LongPtr
End Type
Public Type PROCESS_MEMORY_COUNTERS_EX2
    cb As Long
    PageFaultCount As Long
    PeakWorkingSetSize As LongPtr
    WorkingSetSize As LongPtr
    QuotaPeakPagedPoolUsage As LongPtr
    QuotaPagedPoolUsage As LongPtr
    QuotaPeakNonPagedPoolUsage As LongPtr
    QuotaNonPagedPoolUsage As LongPtr
    PagefileUsage As LongPtr
    PeakPagefileUsage As LongPtr
    PrivateUsage As LongPtr
    PrivateWorkingSetSize As LongPtr
    SharedCommitUsage As LongLong
End Type
Public Type PERFORMANCE_INFORMATION
    cb As Long
    CommitTotal As LongPtr
    CommitLimit As LongPtr
    CommitPeak As LongPtr
    PhysicalTotal As LongPtr
    PhysicalAvailable As LongPtr
    SystemCache As LongPtr
    KernelTotal As LongPtr
    KernelPaged As LongPtr
    KernelNonpaged As LongPtr
    PageSize As LongPtr
    HandleCount As Long
    ProcessCount As Long
    ThreadCount As Long
End Type

Public Enum ThreadPoolFlags
    WT_EXECUTEDEFAULT = &H00000000
    WT_EXECUTEINIOTHREAD = &H00000001
    WT_EXECUTEINUITHREAD = &H00000002
    WT_EXECUTEINWAITTHREAD = &H00000004
    WT_EXECUTEONLYONCE = &H00000008
    WT_EXECUTEINTIMERTHREAD = &H00000020
    WT_EXECUTELONGFUNCTION = &H00000010
    WT_EXECUTEINPERSISTENTIOTHREAD = &H00000040
    WT_EXECUTEINPERSISTENTTHREAD = &H00000080
    WT_TRANSFER_IMPERSONATION = &H00000100
End Enum

Public Enum ErrorModes
    SEM_FAILCRITICALERRORS = &H0001
    SEM_NOGPFAULTERRORBOX = &H0002
    SEM_NOALIGNMENTFAULTEXCEPT = &H0004
    SEM_NOOPENFILEERRORBOX = &H8000&
End Enum

Public Enum LocaleIndMappingFlags
    MAP_FOLDCZONE = &H00000010  ' fold compatibility zone chars
    MAP_PRECOMPOSED = &H00000020  ' convert to precomposed chars
    MAP_COMPOSITE = &H00000040  ' convert to composite chars
    MAP_FOLDDIGITS = &H00000080  ' all digits to ASCII 0-9
    MAP_EXPAND_LIGATURES = &H00002000  ' expand all ligatures
End Enum

Public Enum ProcessDEPFlags
    PROCESS_DEP_ENABLE = &H00000001
    PROCESS_DEP_DISABLE_ATL_THUNK_EMULATION = &H00000002
End Enum

Public Enum PROCESS_MITIGATION_POLICY
    ProcessDEPPolicy = 0
    ProcessASLRPolicy = 1
    ProcessDynamicCodePolicy = 2
    ProcessStrictHandleCheckPolicy = 3
    ProcessSystemCallDisablePolicy = 4
    ProcessMitigationOptionsMask = 5
    ProcessExtensionPointDisablePolicy = 6
    ProcessControlFlowGuardPolicy = 7
    ProcessSignaturePolicy = 8
    ProcessFontDisablePolicy = 9
    ProcessImageLoadPolicy = 10
    ProcessSystemCallFilterPolicy = 11
    ProcessPayloadRestrictionPolicy = 12
    ProcessChildProcessPolicy = 13
    ProcessSideChannelIsolationPolicy = 14
    ProcessUserShadowStackPolicy = 15
    ProcessRedirectionTrustPolicy = 16
    ProcessUserPointerAuthPolicy = 17
    ProcessSEHOPPolicy = 18
    MaxProcessMitigationPolicy = 19
End Enum

Public Type PROCESS_MITIGATION_POLICY_INFORMATION
    Policy As PROCESS_MITIGATION_POLICY
    u(5) As Byte
End Type

Public Enum ProcessMitigationAslrFlags
    PMASF_EnableBottomUpRandomization = &H01
    PMASF_EnableForceRelocateImages = &H02
    PMASF_EnableHighEntropy = &H04
    PMASF_DisallowStrippedImages = &H08
End Enum
Public Type PROCESS_MITIGATION_ASLR_POLICY
    dwFlags As ProcessMitigationAslrFlags
End Type
Public Enum ProcessMitigationDepFlags
    PMDF_Enable = &H1
    PMDF_DisableAtlThunkEmulation = &H2
End Enum
Public Type PROCESS_MITIGATION_DEP_POLICY
    dwFlags As ProcessMitigationDepFlags
    Permanent As Byte
End Type
Public Enum ProcessMitigationSehopFlags
    PMSF_EnableSehop = &H1
End Enum
Public Type PROCESS_MITIGATION_SEHOP_POLICY
    dwFlags As ProcessMitigationSehopFlags
End Type
Public Enum ProcessMitigationHandleChkFlags
    PMHCF_RaiseExceptionOnInvalidHandleReference = &H1
    PMHCF_HandleExceptionsPermanentlyEnabled = &H2
End Enum
Public Type PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY
    dwFlags As ProcessMitigationHandleChkFlags
End Type
Public Enum ProcessMitigationSysCallFlags
    PMSCF_DisallowWin32kSystemCalls = &H1
    PMSCF_AuditDisallowWin32kSystemCalls = &H2
End Enum
Public Type PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY
    dwFlags As ProcessMitigationSysCallFlags
End Type
Public Enum ProcessMitigationExtPtFlags
    PMEPF_DisableExtensionPoints = &H1
End Enum
Public Type PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY
    dwFlags As ProcessMitigationExtPtFlags
End Type
Public Enum ProcessMitigationDynCodeFlags
    PMDCF_ProhibitDynamicCode = &H01
    PMDCF_AllowThreadOptOut = &H02
    PMDCF_AllowRemoteDowngrade = &H04
    PMDCF_AuditProhibitDynamicCode = &H08
End Enum
Public Type PROCESS_MITIGATION_DYNAMIC_CODE_POLICY
    dwFlags As ProcessMitigationDynCodeFlags
End Type
Public Enum ProcessMitigationCFGFlags
    PMCFGF_EnableControlFlowGuard = &H01
    PMCFGF_EnableExportSuppression = &H02
    PMCFGF_StrictMode = &H04
    PMCFGF_EnableXfg = &H08
    PMCFGF_EnableXfgAuditMode = &H10
End Enum
Public Type PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY
    dwFlags As ProcessMitigationCFGFlags
End Type
Public Enum ProcessMitigationBinarySigFlags
    PMBSF_MicrosoftSignedOnly = &H01
    PMBSF_StoreSignedOnly = &H02
    PMBSF_MitigationOptIn = &H04
    PMBSF_AuditMicrosoftSignedOnly = &H08
    PMBSF_AuditStoreSignedOnly = &H10
End Enum
Public Type PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY
    dwFlags As ProcessMitigationBinarySigFlags
End Type
Public Enum ProcessMitigationFontFlags
    PMFF_DisableNonSystemFonts = &H1
    PMFF_AuditNonSystemFontLoading = &H2
End Enum
Public Type PROCESS_MITIGATION_FONT_DISABLE_POLICY
    dwFlags As ProcessMitigationFontFlags
End Type
Public Enum ProcessMitigationImageLoadFlags
    PMILF_NoRemoteImages = &H01
    PMILF_NoLowMandatoryLabelImages = &H02
    PMILF_PreferSystem32Images = &H04
    PMILF_AuditNoRemoteImages = &H08
    PMILF_AuditNoLowMandatoryLabelImages = &H10
End Enum
Public Type PROCESS_MITIGATION_IMAGE_LOAD_POLICY
    dwFlags As ProcessMitigationImageLoadFlags
End Type
Public Type PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY
    FilterId As Byte
    Reserved(2) As Byte
End Type
Public Enum ProcessMitigationPayloadFlags
    PMPF_EnableExportAddressFilter = &H01
    PMPF_AuditExportAddressFilter = &H02

    PMPF_EnableExportAddressFilterPlus = &H04
    PMPF_AuditExportAddressFilterPlus = &H08

    PMPF_EnableImportAddressFilter = &H10
    PMPF_AuditImportAddressFilter = &H20

    PMPF_EnableRopStackPivot = &H40
    PMPF_AuditRopStackPivot = &H80

    PMPF_EnableRopCallerCheck = &H100
    PMPF_AuditRopCallerCheck = &H200

    PMPF_EnableRopSimExec = &H400
    PMPF_AuditRopSimExec = &H800
End Enum
Public Type PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY
    dwFlags As ProcessMitigationPayloadFlags
End Type
Public Enum ProcessMitigationChildProcFlags
    PMCP_NoChildProcessCreation = &H1
    PMCP_AuditNoChildProcessCreation = &H2
    PMCP_AllowSecureProcessCreation = &H4
End Enum
Public Type PROCESS_MITIGATION_CHILD_PROCESS_POLICY
    dwFlags As ProcessMitigationChildProcFlags
End Type
Public Enum ProcessMitigationSideChanIsolationFlags
    ' //
    ' // Prevent branch target pollution cross-SMT-thread in user mode.
    ' //

    SmtBranchTargetIsolation = &H1

    ' //
    ' // Isolate this process into a distinct security domain, even from
    ' // other processes running as the same security context.  This
    ' // prevents branch target injection cross-process (normally such
    ' // branch target injection is only inhibited across different
    ' // security contexts).
    ' //
    ' // Page combining is limited to processes within the same security
    ' // domain.  This flag thus also effectively limits the process to
    ' // only being able to combine internally to the process itself,
    ' // except for common pages (unless further restricted by the
    ' // DisablePageCombine policy).
    ' //

    IsolateSecurityDomain = &H2

    ' //
    ' // Disable all page combining for this process, even internally to
    ' // the process itself, except for common pages (zeroes or ones).
    ' //

    DisablePageCombine = &H4

    ' //
    ' // Memory Disambiguation Disable.
    ' //

    SpeculativeStoreBypassDisable = &H8

    ' //
    ' // Prevent this process' threads from being scheduled on the same
    ' // core as threads outside its security domain.
    ' //

    RestrictCoreSharing = &H10
End Enum
Public Type PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY
    dwFlags As ProcessMitigationSideChanIsolationFlags
End Type
Public Enum ProcessMitigationUserShadowStackFlags
    EnableUserShadowStack = &H0001
    AuditUserShadowStack = &H0002
    SetContextIpValidation = &H0004
    AuditSetContextIpValidation = &H0008
    EnableUserShadowStackStrictMode = &H0010
    BlockNonCetBinaries = &H0020
    BlockNonCetBinariesNonEhcont = &H0040
    AuditBlockNonCetBinaries = &H0080
    CetDynamicApisOutOfProcOnly = &H0100
    SetContextIpValidationRelaxedMode = &H0200
End Enum
Public Type PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY
    dwFlags As ProcessMitigationUserShadowStackFlags
End Type
Public Enum ProcessMitigationUserPtrAuthFlags
    EnablePointerAuthUserIp = &H1
End Enum
Public Type PROCESS_MITIGATION_USER_POINTER_AUTH_POLICY
    dwFlags As ProcessMitigationUserPtrAuthFlags
End Type
Public Enum ProcessMitigationRedirTrustFlags
    PMRTF_EnforceRedirectionTrust = &H1
    PMRTF_AuditRedirectionTrust = &H2
End Enum
Public Type PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY
    dwFlags As ProcessMitigationRedirTrustFlags
End Type

Public Enum PROC_THREAD_ATTRIBUTES ' attributes for ProcThreadAttributeList
    PROC_THREAD_ATTRIBUTE_PARENT_PROCESS = &H00020000
    PROC_THREAD_ATTRIBUTE_HANDLE_LIST = &H00020002
    PROC_THREAD_ATTRIBUTE_GROUP_AFFINITY = &H00030003
    PROC_THREAD_ATTRIBUTE_PREFERRED_NODE = &H00020004
    PROC_THREAD_ATTRIBUTE_IDEAL_PROCESSOR = &H00030005
    PROC_THREAD_ATTRIBUTE_MITIGATION_POLICY = &H00020007
    PROC_THREAD_ATTRIBUTE_UMS_THREAD = &H00030006
    PROC_THREAD_ATTRIBUTE_PROTECTION_LEVEL = &H0002000b
    PROC_THREAD_ATTRIBUTE_SECURITY_CAPABILITIES = &H00020009
    PROC_THREAD_ATTRIBUTE_PSEUDOCONSOLE = &H00020016
    PROC_THREAD_ATTRIBUTE_ENABLE_OPTIONAL_XSTATE_FEATURES = &H0003001B
    PROC_THREAD_ATTRIBUTE_JOB_LIST = &H2000d
    PROC_THREAD_ATTRIBUTE_CHILD_PROCESS_POLICY = &H2000e
    PROC_THREAD_ATTRIBUTE_ALL_APPLICATION_PACKAGES_POLICY = &H2000f
    PROC_THREAD_ATTRIBUTE_WIN32K_FILTER = &H20010
    PROC_THREAD_ATTRIBUTE_DESKTOP_APP_POLICY = &H20012
    PROC_THREAD_ATTRIBUTE_MITIGATION_AUDIT_POLICY = &H20018
    PROC_THREAD_ATTRIBUTE_COMPONENT_FILTER = &H2001a
    PROC_THREAD_ATTRIBUTE_TRUSTED_APP = &H2001d
    PROC_THREAD_ATTRIBUTE_NUMBER = &H0000FFFF&
    PROC_THREAD_ATTRIBUTE_THREAD = &H00010000  ' Attribute may be used with thread creation
    PROC_THREAD_ATTRIBUTE_INPUT = &H00020000  ' Attribute is input only
    PROC_THREAD_ATTRIBUTE_ADDITIVE = &H00040000  ' Attribute may be "accumulated," e.g. bitmasks, counters, etc.
End Enum

Public Enum PROC_THREAD_ATTRIBUTE_NUM
    ProcThreadAttributeParentProcess = 0
    ProcThreadAttributeHandleList = 2
    ' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN7)
    ProcThreadAttributeGroupAffinity = 3
    ProcThreadAttributePreferredNode = 4
    ProcThreadAttributeIdealProcessor = 5
    ProcThreadAttributeUmsThread = 6
    ProcThreadAttributeMitigationPolicy = 7
    ' #endif
    ' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN8)
    ProcThreadAttributeSecurityCapabilities = 9
    ' #endif
    ProcThreadAttributeProtectionLevel = 11
    ' #if (_WIN32_WINNT >= _WIN32_WINNT_WINBLUE)
    ' #endif
    ' #if (_WIN32_WINNT >= _WIN32_WINNT_WINTHRESHOLD)
    ProcThreadAttributeJobList = 13
    ProcThreadAttributeChildProcessPolicy = 14
    ProcThreadAttributeAllApplicationPackagesPolicy = 15
    ProcThreadAttributeWin32kFilter = 16
    ' #endif
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_RS1)
    ProcThreadAttributeSafeOpenPromptOriginClaim = 17
    ' #endif
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_RS2)
    ProcThreadAttributeDesktopAppPolicy = 18
    ' #endif
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_RS5)
    ProcThreadAttributePseudoConsole = 22
    ' #endif
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_19H1)
    ' #endif
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_MN)
    ProcThreadAttributeMitigationAuditPolicy = 24
    ProcThreadAttributeMachineType = 25
    ProcThreadAttributeComponentFilter = 26
    ' #endif
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_FE)
    ProcThreadAttributeEnableOptionalXStateFeatures = 27
    ' #endif
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_NI)
    ProcThreadAttributeTrustedApp = 29
    ' #endif
    ' #if (NTDDI_VERSION >= NTDDI_WIN11_GE)
    ProcThreadAttributeSveVectorLength = 30
    ' #endif
End Enum

Public Const PROCESS_CREATION_MITIGATION_POLICY_DEP_ENABLE  = &H01
Public Const PROCESS_CREATION_MITIGATION_POLICY_DEP_ATL_THUNK_ENABLE  = &H02
Public Const PROCESS_CREATION_MITIGATION_POLICY_SEHOP_ENABLE  = &H04
' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN8)
'  Define mandatory ASLR options.  Mandatory ASLR forcibly rebases images that
'  are not dynamic base compatible by acting as though there were an image base
'  collision at load time.
'  Note that 'require relocations' mode refuses load of images that do not have
'  a base relocation section.
Public Const PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_MASK  = (&H00000003 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_DEFER  = (&H00000000 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON  = (&H00000001 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_OFF  = (&H00000002 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON_REQ_RELOCS  = (&H00000003 << 8)
'  Define heap terminate on corruption options.  Note that 'always off' does
'  not override the default opt-in for binaries with current subsystem versions
'  set in the image header.
'  Heap terminate on corruption is user mode enforced.
Public Const PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_MASK  = (&H00000003 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_DEFER  = (&H00000000 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_ON  = (&H00000001 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_OFF  = (&H00000002 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_RESERVED  = (&H00000003 << 12)
'  Define bottom up randomization (includes stack randomization) options,
'  i.e. randomization of the lowest user address.
Public Const PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_MASK  = (&H00000003& << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_DEFER  = (&H00000000& << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_ON  = (&H00000001& << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_OFF  = (&H00000002& << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_RESERVED  = (&H00000003& << 16)
'  Define high entropy bottom up randomization.  Note that high entropy bottom
'  up randomization is effective if and only if bottom up ASLR is also enabled.
'  N.B.  High entropy mode is only meaningful for native 64-bit processes.  in
'        high entropy mode, up to 1TB of bottom up variance is enabled.
Public Const PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_MASK  = (&H00000003& << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_DEFER  = (&H00000000& << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_ON  = (&H00000001& << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_OFF  = (&H00000002& << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_RESERVED  = (&H00000003& << 20)
'  Define handle checking enforcement options.  Handle checking enforcement
'  causes an exception to be raised immediately on a bad handle reference,
'  versus simply returning a failure status from the handle reference.
Public Const PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_MASK  = (&H00000003& << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_DEFER  = (&H00000000& << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_ON  = (&H00000001& << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_OFF  = (&H00000002& << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_RESERVED  = (&H00000003& << 24)
'  Define win32k system call disable options.  Win32k system call disable
'  prevents a process from making Win32k calls.
Public Const PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_MASK  = (&H00000003& << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_DEFER  = (&H00000000& << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_ON  = (&H00000001& << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_OFF  = (&H00000002& << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_RESERVED  = (&H00000003& << 28)
'  Define the extension point disable options.  Extension point disable allows
'  a process to opt-out of loading various arbitrary extension point DLLs.
Public Const PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_MASK  = (&H00000003^ << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_DEFER  = (&H00000000^ << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_ON  = (&H00000001^ << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_OFF  = (&H00000002^ << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_RESERVED  = (&H00000003^ << 32)
' #if (_WIN32_WINNT >= _WIN32_WINNT_WINBLUE)
'  Define dynamic code options.
Public Const PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_MASK  = (&H00000003^ << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_DEFER  = (&H00000000^ << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON  = (&H00000001^ << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_OFF  = (&H00000002^ << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON_ALLOW_OPT_OUT  = (&H00000003^ << 36)
'  Define Control Flow Guard (CFG) mitigation policy options.  Control Flow
'  Guard allows indirect control transfers to be checked at runtime.
Public Const PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_MASK  = (&H00000003^ << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_DEFER  = (&H00000000^ << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_ON  = (&H00000001^ << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_OFF  = (&H00000002^ << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_EXPORT_SUPPRESSION  = (&H00000003^ << 40)
'  Define module signature options.  When enabled, this option will
'  block mapping of non-microsoft binaries.
Public Const PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_MASK  = (&H00000003^ << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_DEFER  = (&H00000000^ << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_ON  = (&H00000001^ << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_OFF  = (&H00000002^ << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALLOW_STORE  = (&H00000003^ << 44)
' #if (_WIN32_WINNT >= _WIN32_WINNT_WINTHRESHOLD)
'  Define Font Disable Policy.  When enabled, this option will
'  block loading Non System Fonts.
Public Const PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_MASK  = (&H00000003^ << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_DEFER  = (&H00000000^ << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_ON  = (&H00000001^ << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_OFF  = (&H00000002^ << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY_AUDIT_NONSYSTEM_FONTS  = (&H00000003^ << 48)
'  Define remote image load options.  When enabled, this option will
'  block mapping of images from remote devices.
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_MASK  = (&H00000003^ << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_DEFER  = (&H00000000^ << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_ON  = (&H00000001^ << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_OFF  = (&H00000002^ << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_RESERVED  = (&H00000003^ << 52)
'  Define low IL image load options.  When enabled, this option will
'  block mapping of images that have the low mandatory label.
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_MASK  = (&H00000003^ << 56)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_DEFER  = (&H00000000^ << 56)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_ON  = (&H00000001^ << 56)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_OFF  = (&H00000002^ << 56)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_RESERVED  = (&H00000003^ << 56)
'  Define image load options to prefer System32 images compared to
'  the same images in application directory. When enabled, this option
'  will prefer loading images from system32 folder.
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_MASK  = (&H00000003^ << 60)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_DEFER  = (&H00000000^ << 60)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_ON  = (&H00000001^ << 60)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_OFF  = (&H00000002^ << 60)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_RESERVED  = (&H00000003^ << 60)
'  Define Loader Integrity Continuity mitigation policy options.  This mitigation
'  enforces OS signing levels for depenedent module loads.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_MASK  = (&H00000003 << 4)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_DEFER  = (&H00000000 << 4)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_ON  = (&H00000001 << 4)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_OFF  = (&H00000002 << 4)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_AUDIT  = (&H00000003 << 4)
'  Define the strict Control Flow Guard (CFG) mitigation policy options. This mitigation
'  requires all images that load in the process to be instrumented by CFG.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_MASK  = (&H00000003 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_DEFER  = (&H00000000 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_ON  = (&H00000001 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_OFF  = (&H00000002 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_RESERVED  = (&H00000003 << 8)
'  Define the module tampering mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_MASK  = (&H00000003 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_DEFER  = (&H00000000 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_ON  = (&H00000001 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_OFF  = (&H00000002 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_NOINHERIT  = (&H00000003 << 12)
'  Define the restricted indirect branch prediction mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_MASK  = (&H00000003& << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_DEFER  = (&H00000000& << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_ON  = (&H00000001& << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_OFF  = (&H00000002& << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_RESERVED  = (&H00000003& << 16)
'  Define the policy option that allows a broker to downgrade the dynamic code policy for a process.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_MASK  = (&H00000003& << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_DEFER  = (&H00000000& << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_ON  = (&H00000001& << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_OFF  = (&H00000002& << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_RESERVED  = (&H00000003& << 20)
'  Define the Memory Disambiguation Disable mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_MASK  = (&H00000003& << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_DEFER  = (&H00000000& << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_ON  = (&H00000001& << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_OFF  = (&H00000002& << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_RESERVED  = (&H00000003& << 24)
'  Define the user-mode shadow stack mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_MASK  = (&H00000003& << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_DEFER  = (&H00000000& << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_ON  = (&H00000001& << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_OFF  = (&H00000002& << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_STRICT_MODE  = (&H00000003& << 28)
'  Define the user-mode CET set context instruction pointer validation mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_MASK  = (&H00000003^ << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_DEFER  = (&H00000000^ << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_ON  = (&H00000001^ << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_OFF  = (&H00000002^ << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_RELAXED_MODE  = (&H00000003^ << 32)
'  Define the block non-CET/non-EHCONT binaries mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_MASK  = (&H00000003^ << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_DEFER  = (&H00000000^ << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_ON  = (&H00000001^ << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_OFF  = (&H00000002^ << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_NON_EHCONT  = (&H00000003^ << 36)
'  Define the XFG mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_MASK  = (&H00000003^ << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_DEFER  = (&H00000000^ << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_ON  = (&H00000001^ << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_OFF  = (&H00000002^ << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_RESERVED  = (&H00000003^ << 40)
'  Define the ARM64 user-mode per-process instruction pointer authentication
'  mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_MASK  = (&H00000003^ << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_DEFER  = (&H00000000^ << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_ALWAYS_ON  = (&H00000001^ << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_ALWAYS_OFF  = (&H00000002^ << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_RESERVED  = (&H00000003^ << 44)
'  Define the CET-related dynamic code validation data APIs out-of-proc mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_MASK  = (&H00000003^ << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_DEFER  = (&H00000000^ << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_ALWAYS_ON  = (&H00000001^ << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_ALWAYS_OFF  = (&H00000002^ << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_RESERVED  = (&H00000003^ << 48)
'  Define the restrict core sharing policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_MASK  = (&H00000003^ << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_DEFER  = (&H00000000^ << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_ALWAYS_ON  = (&H00000001^ << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_ALWAYS_OFF  = (&H00000002^ << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_RESERVED  = (&H00000003^ << 52)


Public Const PROCESS_CREATION_CHILD_PROCESS_RESTRICTED  = &H01
Public Const PROCESS_CREATION_CHILD_PROCESS_OVERRIDE  = &H02
Public Const PROCESS_CREATION_CHILD_PROCESS_RESTRICTED_UNLESS_SECURE  = &H04

Public Const PROCESS_CREATION_ALL_APPLICATION_PACKAGES_OPT_OUT  = &H01
Public Const PROCESS_CREATION_DESKTOP_APP_BREAKAWAY_ENABLE_PROCESS_TREE  = &H01
Public Const PROCESS_CREATION_DESKTOP_APP_BREAKAWAY_DISABLE_PROCESS_TREE  = &H02
Public Const PROCESS_CREATION_DESKTOP_APP_BREAKAWAY_OVERRIDE  = &H04
'  Define the user-mode shadow stack mitigation audit policy options.
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_MASK As LongLong = (&H00000003& << 28)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_DEFER As LongLong = (&H00000000& << 28)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_ON As LongLong = (&H00000001& << 28)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_OFF As LongLong = (&H00000002& << 28)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_RESERVED As LongLong = (&H00000003& << 28)
' Define the user-mode CET set context instruction pointer validation mitigation audit policy options.
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_MASK As LongLong = (&H00000003^ << 32)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_DEFER As LongLong = (&H00000000^ << 32)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_ON As LongLong = (&H00000001^ << 32)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_OFF As LongLong = (&H00000002^ << 32)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_RESERVED As LongLong = (&H00000003^ << 32)
' Define the block non-CET/non-EHCONT binaries mitigation audit policy options.
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_MASK As LongLong = (&H00000003^ << 36)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_DEFER As LongLong = (&H00000000^ << 36)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_ON As LongLong = (&H00000001^ << 36)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_OFF As LongLong = (&H00000002^ << 36)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_RESERVED As LongLong = (&H00000003^ << 36)
' Define the XFG mitigation audit policy options.
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_MASK As LongLong = (&H00000003^ << 40)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_DEFER As LongLong = (&H00000000^ << 40)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_ON As LongLong = (&H00000001^ << 40)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_OFF As LongLong = (&H00000002^ << 40)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_RESERVED As LongLong = (&H00000003^ << 40)







Public Type ENUM_PAGE_FILE_INFORMATION
    cb As Long
    Reserved As Long
    TotalSize As LongPtr 'SIZE_T
    TotalInUse As LongPtr 'SIZE_T
    PeakUsage As LongPtr 'SIZE_T
End Type

Public Type MODULEINFO
    lpBaseOfDll As LongPtr
    SizeOfImage As Long
    EntryPoint As LongPtr
End Type

Public Type PSAPI_WS_WATCH_INFORMATION
    FaultingPc As LongPtr
    FaultingVa As LongPtr
End Type
Public Type PSAPI_WS_WATCH_INFORMATION_EX
    BasicInfo As PSAPI_WS_WATCH_INFORMATION
    FaultingThreadId As LongPtr
    Flags As LongPtr ' Reserved
End Type

Public Type PSAPI_WORKING_SET_BLOCK
    Flags As LongPtr
'     typedef union _PSAPI_WORKING_SET_BLOCK {
'     ULONG_PTR Flags;
'     struct {
'       ULONG_PTR Protection : 5;
'       ULONG_PTR ShareCount : 3;
'       ULONG_PTR Shared : 1;
'       ULONG_PTR Reserved : 3;
'   #if ...
'       ULONG_PTR VirtualPage : 52;
'   #else
'       ULONG_PTR VirtualPage : 20;
'   #endif
'     };
'   } PSAPI_WORKING_SET_BLOCK, *PPSAPI_WORKING_SET_BLOCK;
End Type
Public Type PSAPI_WORKING_SET_EX_BLOCK
    Flags As LongPtr
End Type
[Description("⚠️ **WARNING:** You cannot use this type directly as it represents a C-style array. Use a byte array to fill in the number of entries, redim, and copy the rest fo VarPtr(workingsetinfo(0))")]
Public Type PSAPI_WORKING_SET_INFORMATION
    NumberOfEntries As LongPtr
    WorkingSetInfo() As PSAPI_WORKING_SET_BLOCK
End Type
Public Type PSAPI_WORKING_SET_EX_INFORMATION
    VirtualAddress As LongPtr
    VirtualAttributes As PSAPI_WORKING_SET_EX_BLOCK
End Type

Public Enum CREATE_FIBER_FLAGS
    FIBER_FLAG_FLOAT_SWITCH = &H1
End Enum

Public Enum GET_MODULE_EX_FLAGS
    GET_MODULE_HANDLE_EX_FLAG_PIN = (&H00000001)
    GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT = (&H00000002)
    GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS = (&H00000004)
End Enum

Public Enum EXCEPTION_FLAGS
    EXCEPTION_NONCONTINUABLE = &H1  ' Noncontinuable exception
    EXCEPTION_UNWINDING = &H2  ' Unwind is in progress
    EXCEPTION_EXIT_UNWIND = &H4  ' Exit unwind is in progress
    EXCEPTION_STACK_INVALID = &H8  ' Stack out of limits or unaligned
    EXCEPTION_NESTED_CALL = &H10  ' Nested exception handler call
    EXCEPTION_TARGET_UNWIND = &H20  ' Target unwind in progress
    EXCEPTION_COLLIDED_UNWIND = &H40  ' Collided exception handler call
    EXCEPTION_SOFTWARE_ORIGINATE = &H80  ' Exception originated in software
    EXCEPTION_UNWIND = (EXCEPTION_UNWINDING Or EXCEPTION_EXIT_UNWIND Or EXCEPTION_TARGET_UNWIND Or EXCEPTION_COLLIDED_UNWIND)
End Enum
Public Enum ExceptionCodes
    STILL_ACTIVE = STATUS_PENDING
    EXCEPTION_GUARD_PAGE_VIOLATION = &H80000001
    EXCEPTION_ACCESS_VIOLATION = STATUS_ACCESS_VIOLATION
    EXCEPTION_DATATYPE_MISALIGNMENT = STATUS_DATATYPE_MISALIGNMENT
    EXCEPTION_BREAKPOINT = STATUS_BREAKPOINT
    EXCEPTION_SINGLE_STEP = STATUS_SINGLE_STEP
    EXCEPTION_ARRAY_BOUNDS_EXCEEDED = STATUS_ARRAY_BOUNDS_EXCEEDED
    EXCEPTION_FLT_DENORMAL_OPERAND = STATUS_FLOAT_DENORMAL_OPERAND
    EXCEPTION_FLT_DIVIDE_BY_ZERO = STATUS_FLOAT_DIVIDE_BY_ZERO
    EXCEPTION_FLT_INEXACT_RESULT = STATUS_FLOAT_INEXACT_RESULT
    EXCEPTION_FLT_INVALID_OPERATION = STATUS_FLOAT_INVALID_OPERATION
    EXCEPTION_FLT_OVERFLOW = STATUS_FLOAT_OVERFLOW
    EXCEPTION_FLT_STACK_CHECK = STATUS_FLOAT_STACK_CHECK
    EXCEPTION_FLT_UNDERFLOW = STATUS_FLOAT_UNDERFLOW
    EXCEPTION_INT_DIVIDE_BY_ZERO = STATUS_INTEGER_DIVIDE_BY_ZERO
    EXCEPTION_INT_OVERFLOW = STATUS_INTEGER_OVERFLOW
    EXCEPTION_PRIV_INSTRUCTION = STATUS_PRIVILEGED_INSTRUCTION
    EXCEPTION_IN_PAGE_ERROR = STATUS_IN_PAGE_ERROR
    EXCEPTION_ILLEGAL_INSTRUCTION = STATUS_ILLEGAL_INSTRUCTION
    EXCEPTION_NONCONTINUABLE_EXCEPTION = STATUS_NONCONTINUABLE_EXCEPTION
    EXCEPTION_STACK_OVERFLOW = STATUS_STACK_OVERFLOW
    EXCEPTION_INVALID_DISPOSITION = STATUS_INVALID_DISPOSITION
    EXCEPTION_GUARD_PAGE = STATUS_GUARD_PAGE_VIOLATION
    EXCEPTION_INVALID_HANDLE = STATUS_INVALID_HANDLE
    EXCEPTION_POSSIBLE_DEADLOCK = STATUS_POSSIBLE_DEADLOCK
    CONTROL_C_EXIT = STATUS_CONTROL_C_EXIT
End Enum
Public Const EXCEPTION_MAXIMUM_PARAMETERS = 15
Public Type EXCEPTION_RECORD
    ExceptionCode As Long
    ExceptionFlags As EXCEPTION_FLAGS
    ExceptionRecord As LongPtr
    ExceptionAddress As LongPtr
    NumberParameters As Long
    ExceptionInformation(0 To (EXCEPTION_MAXIMUM_PARAMETERS - 1)) As LongPtr
End Type
Public Type EXCEPTION_RECORD32
    ExceptionCode As Long
    ExceptionFlags As EXCEPTION_FLAGS
    ExceptionRecord As Long
    ExceptionAddress As Long
    NumberParameters As Long
    ExceptionInformation(0 To (EXCEPTION_MAXIMUM_PARAMETERS - 1)) As Long
End Type
Public Type EXCEPTION_RECORD64
    ExceptionCode As Long
    ExceptionFlags As EXCEPTION_FLAGS
    ExceptionRecord As LongLong
    ExceptionAddress As LongLong
    NumberParameters As Long
    ExceptionInformation(0 To (EXCEPTION_MAXIMUM_PARAMETERS - 1)) As LongLong
End Type

Public Type M128A
    Low As LongLong
    High As LongLong
End Type
Public Type XSAVE_FORMAT
    ControlWord As Integer
    StatusWord As Integer
    TagWord As Byte
    Reserved1 As Byte
    ErrorOpcode As Integer
    ErrorOffset As Long
    ErrorSelector As Integer
    Reserved2 As Integer
    DataOffset As Long
    DataSelector As Integer
    Reserved3 As Integer
    MxCsr As Long
    MxCsr_Mask As Long
    FloatRegisters(0 To 7) As M128A
    #If Win64 Then
    XmmRegisters(0 To 15) As M128A
    Reserved4(0 To 95) As Byte
    #Else
    XmmRegisters(0 To 7) As M128A
    Reserved4(0 To 223) As Byte
    #End If
End Type
'Alias XMM_SAVE_AREA32 As XSAVE_FORMAT
Public Type XMM_SAVE_AREA32
    ControlWord As Integer
    StatusWord As Integer
    TagWord As Byte
    Reserved1 As Byte
    ErrorOpcode As Integer
    ErrorOffset As Long
    ErrorSelector As Integer
    Reserved2 As Integer
    DataOffset As Long
    DataSelector As Integer
    Reserved3 As Integer
    MxCsr As Long
    MxCsr_Mask As Long
    FloatRegisters(0 To 7) As M128A
    #If Win64 Then
    XmmRegisters(0 To 15) As M128A
    Reserved4(0 To 95) As Byte
    #Else
    XmmRegisters(0 To 7) As M128A
    Reserved4(0 To 223) As Byte
    #End If
End Type

#If Win64 Then
Public Enum EXCEPTION_CONTEXT_FLAGS
    CONTEXT_AMD64 = &H00100000
    CONTEXT_CONTROL = (CONTEXT_AMD64 Or &H00000001)
    CONTEXT_INTEGER = (CONTEXT_AMD64 Or &H00000002)
    CONTEXT_SEGMENTS = (CONTEXT_AMD64 Or &H00000004)
    CONTEXT_FLOATING_POINT = (CONTEXT_AMD64 Or &H00000008)
    CONTEXT_DEBUG_REGISTERS = (CONTEXT_AMD64 Or &H00000010)
    CONTEXT_FULL = (CONTEXT_CONTROL Or CONTEXT_INTEGER Or CONTEXT_FLOATING_POINT)
    CONTEXT_ALL = (CONTEXT_CONTROL Or CONTEXT_INTEGER Or CONTEXT_SEGMENTS Or CONTEXT_FLOATING_POINT Or CONTEXT_DEBUG_REGISTERS)
    CONTEXT_XSTATE = (CONTEXT_AMD64 Or &H00000040)
    CONTEXT_KERNEL_CET = (CONTEXT_AMD64 Or &H00000080)
    CONTEXT_EXCEPTION_ACTIVE = &H08000000
    CONTEXT_SERVICE_ACTIVE = &H10000000
    CONTEXT_EXCEPTION_REQUEST = &H40000000
    CONTEXT_EXCEPTION_REPORTING = &H80000000
'  CONTEXT_UNWOUND_TO_CALL flag is set by the unwinder if it
'  has unwound to a call site, and cleared whenever it unwinds
'  through a trap frame.
    CONTEXT_UNWOUND_TO_CALL = &H20000000
End Enum

Public Const INITIAL_MXCSR  = &H1f80  ' initial MXCSR value
Public Const INITIAL_FPCSR  = &H027f  ' initial FPCSR value

Public Type _CONTEXT
    ' Register parameter home addresses.
    ' N.B. These fields are for convience - they could be used to extend the
    '      context record in the future.
    P1Home As LongLong
    P2Home As LongLong
    P3Home As LongLong
    P4Home As LongLong
    P5Home As LongLong
    P6Home As LongLong
    ' Control flags.
    ContextFlags As EXCEPTION_CONTEXT_FLAGS
    MxCsr As Long
    ' Segment Registers and processor flags.
    SegCs As Integer
    SegDs As Integer
    SegEs As Integer
    SegFs As Integer
    SegGs As Integer
    SegSs As Integer
    EFlags As Long
    ' Debug registers
    Dr0 As LongLong
    Dr1 As LongLong
    Dr2 As LongLong
    Dr3 As LongLong
    Dr6 As LongLong
    Dr7 As LongLong
    ' Integer registers.
    Rax As LongLong
    Rcx As LongLong
    Rdx As LongLong
    Rbx As LongLong
    Rsp As LongLong
    Rbp As LongLong
    Rsi As LongLong
    Rdi As LongLong
    R8 As LongLong
    R9 As LongLong
    R10 As LongLong
    R11 As LongLong
    R12 As LongLong
    R13 As LongLong
    R14 As LongLong
    R15 As LongLong
    ' Program counter.
    Rip As LongLong
    ' Floating point state.
    'union {
    FltSave As XMM_SAVE_AREA32
    '    struct {
    '        M128A Header[2];
    '        M128A Legacy[8];
    '        M128A Xmm0;
    '        M128A Xmm1;
    '        M128A Xmm2;
    '        M128A Xmm3;
    '        M128A Xmm4;
    '        M128A Xmm5;
    '        M128A Xmm6;
    '        M128A Xmm7;
    '        M128A Xmm8;
    '        M128A Xmm9;
    '        M128A Xmm10;
    '        M128A Xmm11;
    '        M128A Xmm12;
    '        M128A Xmm13;
    '        M128A Xmm14;
    '        M128A Xmm15;
    '    } DUMMYSTRUCTNAME;
    '} DUMMYUNIONNAME;
    ' Vector registers.
    VectorRegister(0 To 25) As M128A
    VectorControl As LongLong
    ' Special debug control registers.
    DebugControl As LongLong
    LastBranchToRip As LongLong
    LastBranchFromRip As LongLong
    LastExceptionToRip As LongLong
    LastExceptionFromRip As LongLong
End Type


Public Enum WOW64_EXCEPTION_CONTEXT_FLAGS
    WOW64_CONTEXT_i386 = &H00010000  ' this assumes that i386 and
    WOW64_CONTEXT_i486 = &H00010000  ' i486 have identical context records
    WOW64_CONTEXT_CONTROL = (WOW64_CONTEXT_i386 Or &H00000001)  ' SS:SP, CS:IP, FLAGS, BP
    WOW64_CONTEXT_INTEGER = (WOW64_CONTEXT_i386 Or &H00000002)  ' AX, BX, CX, DX, SI, DI
    WOW64_CONTEXT_SEGMENTS = (WOW64_CONTEXT_i386 Or &H00000004)  ' DS, ES, FS, GS
    WOW64_CONTEXT_FLOATING_POINT = (WOW64_CONTEXT_i386 Or &H00000008)  ' 387 state
    WOW64_CONTEXT_DEBUG_REGISTERS = (WOW64_CONTEXT_i386 Or &H00000010)  ' DB 0-3,6,7
    WOW64_CONTEXT_EXTENDED_REGISTERS = (WOW64_CONTEXT_i386 Or &H00000020)  ' cpu specific extensions
    WOW64_CONTEXT_FULL = (WOW64_CONTEXT_CONTROL Or WOW64_CONTEXT_INTEGER Or WOW64_CONTEXT_SEGMENTS)
    WOW64_CONTEXT_ALL = (WOW64_CONTEXT_CONTROL Or WOW64_CONTEXT_INTEGER Or WOW64_CONTEXT_SEGMENTS Or WOW64_CONTEXT_FLOATING_POINT Or WOW64_CONTEXT_DEBUG_REGISTERS Or WOW64_CONTEXT_EXTENDED_REGISTERS)
    WOW64_CONTEXT_XSTATE = (WOW64_CONTEXT_i386 Or &H00000040)
    WOW64_CONTEXT_EXCEPTION_ACTIVE = &H08000000
    WOW64_CONTEXT_SERVICE_ACTIVE = &H10000000
    WOW64_CONTEXT_EXCEPTION_REQUEST = &H40000000
    WOW64_CONTEXT_EXCEPTION_REPORTING = &H80000000
End Enum
Public Const WOW64_SIZE_OF_80387_REGISTERS  = 80
Public Const WOW64_MAXIMUM_SUPPORTED_EXTENSION  = 512
Public Type WOW64_FLOATING_SAVE_AREA
    ControlWord As Long
    StatusWord As Long
    TagWord As Long
    ErrorOffset As Long
    ErrorSelector As Long
    DataOffset As Long
    DataSelector As Long
    RegisterArea(0 To (WOW64_SIZE_OF_80387_REGISTERS - 1)) As Byte
    Cr0NpxState As Long
End Type

Public Type WOW64_CONTEXT
    ' The flags values within this flag control the contents of
    ' a CONTEXT record.
    ' If the context record is used as an input parameter, then
    ' for each portion of the context record controlled by a flag
    ' whose value is set, it is assumed that that portion of the
    ' context record contains valid context. If the context record
    ' is being used to modify a threads context, then only that
    ' portion of the threads context will be modified.
    ' If the context record is used as an IN OUT parameter to capture
    ' the context of a thread, then only those portions of the thread's
    ' context corresponding to set flags will be returned.
    ' The context record is never used as an OUT only parameter.
    ContextFlags As Long
    ' This section is specified/returned if CONTEXT_DEBUG_REGISTERS is
    ' set in ContextFlags.  Note that CONTEXT_DEBUG_REGISTERS is NOT
    ' included in CONTEXT_FULL.
    Dr0 As Long
    Dr1 As Long
    Dr2 As Long
    Dr3 As Long
    Dr6 As Long
    Dr7 As Long
    ' This section is specified/returned if the
    ' ContextFlags word contians the flag CONTEXT_FLOATING_POINT.
    FloatSave As WOW64_FLOATING_SAVE_AREA
    ' This section is specified/returned if the
    ' ContextFlags word contians the flag CONTEXT_SEGMENTS.
    SegGs As Long
    SegFs As Long
    SegEs As Long
    SegDs As Long
    ' This section is specified/returned if the
    ' ContextFlags word contians the flag CONTEXT_INTEGER.
    Edi As Long
    Esi As Long
    Ebx As Long
    Edx As Long
    Ecx As Long
    Eax As Long
    ' This section is specified/returned if the
    ' ContextFlags word contians the flag CONTEXT_CONTROL.
    Ebp As Long
    Eip As Long
    SegCs As Long ' MUST BE SANITIZED
    EFlags As Long ' MUST BE SANITIZED
    Esp As Long
    SegSs As Long
    ' This section is specified/returned if the ContextFlags word
    ' contains the flag CONTEXT_EXTENDED_REGISTERS.
    ' The format and contexts are processor specific
    ExtendedRegisters(0 To (WOW64_MAXIMUM_SUPPORTED_EXTENSION - 1)) As Byte
End Type

Public Type WOW64_LDT_ENTRY
    LimitLow As Integer
    BaseLow As Integer
    BaseMid As Byte
    Flags1 As Byte
    Flags2 As Byte
    BaseHi As Byte
End Type

#Else

Public Enum EXCEPTION_CONTEXT_FLAGS
    CONTEXT_i386 = &H00010000  ' this assumes that i386 and
    CONTEXT_i486 = &H00010000  ' i486 have identical context records
'  end_wx86
    CONTEXT_CONTROL = (CONTEXT_i386 Or &H00000001)  ' SS:SP, CS:IP, FLAGS, BP
    CONTEXT_INTEGER = (CONTEXT_i386 Or &H00000002)  ' AX, BX, CX, DX, SI, DI
    CONTEXT_SEGMENTS = (CONTEXT_i386 Or &H00000004)  ' DS, ES, FS, GS
    CONTEXT_FLOATING_POINT = (CONTEXT_i386 Or &H00000008)  ' 387 state
    CONTEXT_DEBUG_REGISTERS = (CONTEXT_i386 Or &H00000010)  ' DB 0-3,6,7
    CONTEXT_EXTENDED_REGISTERS = (CONTEXT_i386 Or &H00000020)  ' cpu specific extensions
    CONTEXT_FULL = (CONTEXT_CONTROL Or CONTEXT_INTEGER Or CONTEXT_SEGMENTS)
    CONTEXT_ALL = (CONTEXT_CONTROL Or CONTEXT_INTEGER Or CONTEXT_SEGMENTS Or CONTEXT_FLOATING_POINT Or CONTEXT_DEBUG_REGISTERS Or CONTEXT_EXTENDED_REGISTERS)
    CONTEXT_XSTATE = (CONTEXT_i386 Or &H00000040)
    CONTEXT_EXCEPTION_ACTIVE = &H08000000
    CONTEXT_SERVICE_ACTIVE = &H10000000
    CONTEXT_EXCEPTION_REQUEST = &H40000000
    CONTEXT_EXCEPTION_REPORTING = &H80000000
End Enum



Public Const SIZE_OF_80387_REGISTERS = 80
Public Type FLOATING_SAVE_AREA
    ControlWord As Long
    StatusWord As Long
    TagWord As Long
    ErrorOffset As Long
    ErrorSelector As Long
    DataOffset As Long
    DataSelector As Long
    RegisterArea(0 To (SIZE_OF_80387_REGISTERS - 1)) As Byte
    Spare0 As Long
End Type
Public Const MAXIMUM_SUPPORTED_EXTENSION = 512
Public Type _CONTEXT
    ' The flags values within this flag control the contents of
    ' a CONTEXT record.
    ' If the context record is used as an input parameter, then
    ' for each portion of the context record controlled by a flag
    ' whose value is set, it is assumed that that portion of the
    ' context record contains valid context. If the context record
    ' is being used to modify a threads context, then only that
    ' portion of the threads context will be modified.
    ' If the context record is used as an IN OUT parameter to capture
    ' the context of a thread, then only those portions of the thread's
    ' context corresponding to set flags will be returned.
    ' The context record is never used as an OUT only parameter.
    ContextFlags As EXCEPTION_CONTEXT_FLAGS
    ' This section is specified/returned if CONTEXT_DEBUG_REGISTERS is
    ' set in ContextFlags.  Note that CONTEXT_DEBUG_REGISTERS is NOT
    ' included in CONTEXT_FULL.
    Dr0 As Long
    Dr1 As Long
    Dr2 As Long
    Dr3 As Long
    Dr6 As Long
    Dr7 As Long
    ' This section is specified/returned if the
    ' ContextFlags word contians the flag CONTEXT_FLOATING_POINT.
    FloatSave As FLOATING_SAVE_AREA
    ' This section is specified/returned if the
    ' ContextFlags word contians the flag CONTEXT_SEGMENTS.
    SegGs As Long
    SegFs As Long
    SegEs As Long
    SegDs As Long
    ' This section is specified/returned if the
    ' ContextFlags word contians the flag CONTEXT_INTEGER.
    Edi As Long
    Esi As Long
    Ebx As Long
    Edx As Long
    Ecx As Long
    Eax As Long
    ' This section is specified/returned if the
    ' ContextFlags word contians the flag CONTEXT_CONTROL.
    Ebp As Long
    Eip As Long
    SegCs As Long ' MUST BE SANITIZED
    EFlags As Long ' MUST BE SANITIZED
    Esp As Long
    SegSs As Long
    ' This section is specified/returned if the ContextFlags word
    ' contains the flag CONTEXT_EXTENDED_REGISTERS.
    ' The format and contexts are processor specific
    ExtendedRegisters(0 To (MAXIMUM_SUPPORTED_EXTENSION - 1)) As Byte
End Type
#End If

Public Type LDT_ENTRY
    LimitLow As Integer
    BaseLow As Integer
    BaseMid As Byte
    Flags1 As Byte
    Flags2 As Byte
    BaseHi As Byte
End Type


Public Type EXCEPTION_POINTERS
    ExceptionRecord As LongPtr 'PEXCEPTION_RECORD
    ContextRecord As LongPtr 'PCONTEXT
End Type

Public Const EXCEPTION_EXECUTE_HANDLER  = 1
Public Const EXCEPTION_CONTINUE_SEARCH  = 0
Public Const EXCEPTION_CONTINUE_EXECUTION  = (-1)

Public Enum SET_SEARCH_PATH_FLAGS
    BASE_SEARCH_PATH_ENABLE_SAFE_SEARCHMODE = &H1
    BASE_SEARCH_PATH_DISABLE_SAFE_SEARCHMODE = &H10000
    BASE_SEARCH_PATH_PERMANENT = &H8000&
    BASE_SEARCH_PATH_INVALID_FLAGS = Not &H18001
End Enum

Public Enum PROCESS_FULL_IMAGENAME_FLAGS
    PROCESS_NAME_NATIVE = &H1
End Enum

Public Enum DBG_EVENT_TYPES
    EXCEPTION_DEBUG_EVENT = 1
    CREATE_THREAD_DEBUG_EVENT = 2
    CREATE_PROCESS_DEBUG_EVENT = 3
    EXIT_THREAD_DEBUG_EVENT = 4
    EXIT_PROCESS_DEBUG_EVENT = 5
    LOAD_DLL_DEBUG_EVENT = 6
    UNLOAD_DLL_DEBUG_EVENT = 7
    OUTPUT_DEBUG_STRING_EVENT = 8
    RIP_EVENT = 9
End Enum

Public Delegate Function ThreadStartRoutine (ByVal lpThreadParameter As LongPtr) As Long
Public Delegate Function EnclaveRoutine (ByVal lpThreadParameter As LongPtr) As LongPtr


Public Type EXCEPTION_DEBUG_INFO
    ExceptionRecord As EXCEPTION_RECORD
    dwFirstChance As Long
End Type

' Public Type CREATE_THREAD_DEBUG_INFO
'     hThread As LongPtr
'     lpThreadLocalBase As LongPtr
'     lpStartAddress As ThreadStartRoutine 'LPTHREAD_START_ROUTINE
' End Type
Public Type CREATE_THREAD_DEBUG_INFO
    hThread As LongPtr
    lpThreadLocalBase As LongPtr
    lpStartAddress As LongPtr 'LPTHREAD_START_ROUTINE
End Type

' Public Type CREATE_PROCESS_DEBUG_INFO
'     hFile As LongPtr
'     hProcess As LongPtr
'     hThread As LongPtr
'     lpBaseOfImage As LongPtr
'     dwDebugInfoFileOffset As Long
'     nDebugInfoSize As Long
'     lpThreadLocalBase As LongPtr
'     lpStartAddress As ThreadStartRoutine 'LPTHREAD_START_ROUTINE
'     lpImageName As LongPtr
'     fUnicode As Integer
' End Type
Public Type CREATE_PROCESS_DEBUG_INFO
    hFile As LongPtr
    hProcess As LongPtr
    hThread As LongPtr
    lpBaseOfImage As LongPtr
    dwDebugInfoFileOffset As Long
    nDebugInfoSize As Long
    lpThreadLocalBase As LongPtr
    lpStartAddress As LongPtr 'LPTHREAD_START_ROUTINE
    lpImageName As LongPtr
    fUnicode As Integer
End Type

Public Type EXIT_THREAD_DEBUG_INFO
    dwExitCode As Long
End Type
Public Type EXIT_PROCESS_DEBUG_INFO
    dwExitCode As Long
End Type

Public Type LOAD_DLL_DEBUG_INFO
    hFile As LongPtr
    lpBaseOfDll As LongPtr
    dwDebugInfoFileOffset As Long
    nDebugInfoSize As Long
    lpImageName As LongPtr
    fUnicode As Integer
End Type

Public Type UNLOAD_DLL_DEBUG_INFO
    lpBaseOfDll As LongPtr
End Type

Public Type OUTPUT_DEBUG_STRING_INFO
    lpDebugStringData As LongPtr
    fUnicode As Integer
    nDebugStringLength As Integer
End Type

Public Type RIP_INFO
    dwError As Long
    dwType As SetLastErrorEx_Flags
End Type

[Description("Go to definition for comments. Union options defined under their respective names, e.g. EXCEPTION_DEBUG_INFO")]
Public Type DEBUG_EVENT
    dwDebugEventCode As DBG_EVENT_TYPES
    dwProcessId As Long
    dwThreadId As Long
    ' union {
        ' EXCEPTION_DEBUG_INFO Exception;
        ' CREATE_THREAD_DEBUG_INFO CreateThread;
        ' CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
        ' EXIT_THREAD_DEBUG_INFO ExitThread;
        ' EXIT_PROCESS_DEBUG_INFO ExitProcess;
        ' LOAD_DLL_DEBUG_INFO LoadDll;
        ' UNLOAD_DLL_DEBUG_INFO UnloadDll;
        ' OUTPUT_DEBUG_STRING_INFO DebugString;
        ' RIP_INFO RipInfo;
    ' } u;
    #If Win64 Then
    pad As Long
    u(159) As Byte
    #Else
    u(83) As Byte
    #End If
End Type

Public Enum DBG_CONTROL_FLAGS
    DBG_EXCEPTION_HANDLED = &H00010001
    DBG_CONTINUE = &H00010002
    DBG_REPLY_LATER = &H40010001
    DBG_UNABLE_TO_PROVIDE_HANDLE = &H40010002
    DBG_TERMINATE_THREAD = &H40010003
    DBG_TERMINATE_PROCESS = &H40010004
    DBG_CONTROL_C = &H40010005
    DBG_PRINTEXCEPTION_C = &H40010006
    DBG_RIPEXCEPTION = &H40010007
    DBG_CONTROL_BREAK = &H40010008
    DBG_COMMAND_EXCEPTION = &H40010009
    DBG_PRINTEXCEPTION_WIDE_C = &H4001000A
    DBG_EXCEPTION_NOT_HANDLED = &H80010001
End Enum

Public Const XSTATE_LEGACY_FLOATING_POINT  = (0)
Public Const XSTATE_LEGACY_SSE  = (1)
Public Const XSTATE_GSSE  = (2)
Public Const XSTATE_AVX  = (XSTATE_GSSE)
Public Const XSTATE_MPX_BNDREGS  = (3)
Public Const XSTATE_MPX_BNDCSR  = (4)
Public Const XSTATE_AVX512_KMASK  = (5)
Public Const XSTATE_AVX512_ZMM_H  = (6)
Public Const XSTATE_AVX512_ZMM  = (7)
Public Const XSTATE_IPT  = (8)
Public Const XSTATE_PASID  = (10)
Public Const XSTATE_CET_U  = (11)
Public Const XSTATE_CET_S  = (12)
Public Const XSTATE_AMX_TILE_CONFIG  = (17)
Public Const XSTATE_AMX_TILE_DATA  = (18)
Public Const XSTATE_LWP  = (62)
Public Const MAXIMUM_XSTATE_FEATURES  = (64)

Public Const XSTATE_MASK_LEGACY_FLOATING_POINT As LongLong = (1 << (XSTATE_LEGACY_FLOATING_POINT))
Public Const XSTATE_MASK_LEGACY_SSE            As LongLong = (1 << (XSTATE_LEGACY_SSE))
Public Const XSTATE_MASK_LEGACY                As LongLong = (XSTATE_MASK_LEGACY_FLOATING_POINT Or XSTATE_MASK_LEGACY_SSE)
Public Const XSTATE_MASK_GSSE                  As LongLong = (1 << (XSTATE_GSSE))
Public Const XSTATE_MASK_AVX                   As LongLong = (XSTATE_MASK_GSSE)
Public Const XSTATE_MASK_MPX                   As LongLong = ((1 << (XSTATE_MPX_BNDREGS)) Or (1 << (XSTATE_MPX_BNDCSR)))
Public Const XSTATE_MASK_AVX512                As LongLong = ((1 << (XSTATE_AVX512_KMASK)) Or (1 << (XSTATE_AVX512_ZMM_H)) Or (1 << (XSTATE_AVX512_ZMM)))
Public Const XSTATE_MASK_IPT                   As LongLong = (1 << (XSTATE_IPT))
Public Const XSTATE_MASK_PASID                 As LongLong = (1 << (XSTATE_PASID))
Public Const XSTATE_MASK_CET_U                 As LongLong = (1 << (XSTATE_CET_U))
Public Const XSTATE_MASK_CET_S                 As LongLong = (1 << (XSTATE_CET_S))
Public Const XSTATE_MASK_AMX_TILE_CONFIG       As LongLong = (1 << (XSTATE_AMX_TILE_CONFIG))
Public Const XSTATE_MASK_AMX_TILE_DATA         As LongLong = (1 << (XSTATE_AMX_TILE_DATA))
Public Const XSTATE_MASK_LWP                   As LongLong = (1 << (XSTATE_LWP))
Public Const XSTATE_MASK_ALLOWED  = (XSTATE_MASK_LEGACY Or XSTATE_MASK_AVX Or XSTATE_MASK_MPX Or XSTATE_MASK_AVX512 Or XSTATE_MASK_IPT Or XSTATE_MASK_CET_U Or XSTATE_MASK_LWP)

Public Const XSTATE_COMPACTION_ENABLE      As LongLong = (63)
Public Const XSTATE_COMPACTION_ENABLE_MASK As LongLong = (1 << (XSTATE_COMPACTION_ENABLE))
Public Const XSTATE_ALIGN_BIT As LongLong = (1)
Public Const XSTATE_ALIGN_MASK As LongLong = (1 << (XSTATE_ALIGN_BIT))
Public Const XSTATE_XFD_BIT As LongLong = (2)
Public Const XSTATE_XFD_MASK  As LongLong = (1 << (XSTATE_XFD_BIT))

Public Enum XSTATE_CONTROL_FLAGS
    XSTATE_CONTROLFLAG_XSAVEOPT_MASK = (1)
    XSTATE_CONTROLFLAG_XSAVEC_MASK = (2)
    XSTATE_CONTROLFLAG_XFD_MASK = (4)
    XSTATE_CONTROLFLAG_VALID_MASK = (XSTATE_CONTROLFLAG_XSAVEOPT_MASK Or XSTATE_CONTROLFLAG_XSAVEC_MASK Or XSTATE_CONTROLFLAG_XFD_MASK)
End Enum

Public Type XSTATE_FEATURE
    Offset As Long
    Size As Long
End Type

Public Type XSTATE_CONFIGURATION
    ' Mask of all enabled features
    EnabledFeatures As LongLong
    ' Mask of volatile enabled features
    EnabledVolatileFeatures As LongLong
    ' Total size of the save area for user states
    Size As Long
    ' Control Flags
    'union {
    ControlFlags As XSTATE_CONTROL_FLAGS
    '    struct
    '    {
    '        DWORD OptimizedSave : 1;
    '        DWORD CompactionEnabled : 1;
    '       DWORD ExtendedFeatureDisable : 1;
    '  } DUMMYSTRUCTNAME;
    '} DUMMYUNIONNAME;
    ' List of features
    Features(0 To (MAXIMUM_XSTATE_FEATURES - 1)) As XSTATE_FEATURE
    ' Mask of all supervisor features
    EnabledSupervisorFeatures As LongLong
    ' Mask of features that require start address to be 64 byte aligned
    AlignedFeatures As LongLong
    ' Total size of the save area for user and supervisor states
    AllFeatureSize As Long
    ' List which holds size of each user and supervisor state supported by CPU
    AllFeatures(0 To (MAXIMUM_XSTATE_FEATURES - 1)) As Long
    ' Mask of all supervisor features that are exposed to user-mode
    EnabledUserVisibleSupervisorFeatures As LongLong
    ' Mask of features that can be disabled via XFD
    ExtendedFeatureDisableFeatures As LongLong
    ' Total size of the save area for non-large user and supervisor states
    AllNonLargeFeatureSize As Long
    Spare As Long
End Type

Public Enum SYSTEM_AC_LINE_STATUS
    AC_LINE_OFFLINE = &H0
    AC_LINE_ONLINE = &H1
    AC_LINE_BACKUP_POWER = &H2
    AC_LINE_UNKNOWN = &HFF
End Enum
Public Enum SYSTEM_BATTERY_FLAGS
    BATTERY_FLAG_HIGH = &H1
    BATTERY_FLAG_LOW = &H2
    BATTERY_FLAG_CRITICAL = &H4
    BATTERY_FLAG_CHARGING = &H8
    BATTERY_FLAG_NO_BATTERY = &H80
    BATTERY_FLAG_UNKNOWN = &HFF
    BATTERY_PERCENTAGE_UNKNOWN = &HFF
    BATTERY_LIFE_UNKNOWN = &HFFFFFFFF
End Enum

Public Type SYSTEM_POWER_STATUS
    /* [ TypeHint(SYSTEM_AC_LINE_STATUS) ] */ ACLineStatus As Byte
    /* [ TypeHint(SYSTEM_BATTERY_FLAGS) ] */ BatteryFlag As Byte
    BatteryLifePercent As Byte
    SystemStatusFlag As Byte
    BatteryLifeTime As Long
    BatteryFullLifeTime As Long
End Type
Public Enum SYSTEM_POWER_STATE
    PowerSystemUnspecified = 0
    PowerSystemWorking = 1
    PowerSystemSleeping1 = 2
    PowerSystemSleeping2 = 3
    PowerSystemSleeping3 = 4
    PowerSystemHibernate = 5
    PowerSystemShutdown = 6
    PowerSystemMaximum = 7
End Enum
Public Enum POWER_ACTION
    PowerActionNone = 0
    PowerActionReserved
    PowerActionSleep
    PowerActionHibernate
    PowerActionShutdown
    PowerActionShutdownReset
    PowerActionShutdownOff
    PowerActionWarmEject
    PowerActionDisplayOff
End Enum
Public Enum DEVICE_POWER_STATE
    PowerDeviceUnspecified = 0
    PowerDeviceD0 = 1
    PowerDeviceD1 = 2
    PowerDeviceD2 = 3
    PowerDeviceD3 = 4
    PowerDeviceMaximum = 5
End Enum
Public Enum MONITOR_DISPLAY_STATE
    PowerMonitorOff = 0
    PowerMonitorOn
    PowerMonitorDim
End Enum
Public Enum USER_ACTIVITY_PRESENCE
    PowerUserPresent = 0
    PowerUserNotPresent = 1
    PowerUserInactive = 2
    PowerUserMaximum = 3
    PowerUserInvalid = PowerUserMaximum
End Enum
Public Enum EXECUTION_STATE
    ES_SYSTEM_REQUIRED = (&H00000001)
    ES_DISPLAY_REQUIRED = (&H00000002)
    ES_USER_PRESENT = (&H00000004)
    ES_AWAYMODE_REQUIRED = (&H00000040)
    ES_CONTINUOUS = (&H80000000)
End Enum
Public Enum POWER_REQUEST_TYPE
    PowerRequestDisplayRequired
    PowerRequestSystemRequired
    PowerRequestAwayModeRequired
    PowerRequestExecutionRequired
End Enum

Public Enum POWER_INFORMATION_LEVEL
    SystemPowerPolicyAc
    SystemPowerPolicyDc
    VerifySystemPolicyAc
    VerifySystemPolicyDc
    SystemPowerCapabilities
    SystemBatteryState
    SystemPowerStateHandler
    ProcessorStateHandler
    SystemPowerPolicyCurrent
    AdministratorPowerPolicy
    SystemReserveHiberFile
    ProcessorInformation
    SystemPowerInformation
    ProcessorStateHandler2
    LastWakeTime                                   ' Compare with KeQueryInterruptTime()
    LastSleepTime                                  ' Compare with KeQueryInterruptTime()
    SystemExecutionState
    SystemPowerStateNotifyHandler
    ProcessorPowerPolicyAc
    ProcessorPowerPolicyDc
    VerifyProcessorPowerPolicyAc
    VerifyProcessorPowerPolicyDc
    ProcessorPowerPolicyCurrent
    SystemPowerStateLogging
    SystemPowerLoggingEntry
    SetPowerSettingValue
    NotifyUserPowerSetting
    PowerInformationLevelUnused0
    SystemMonitorHiberBootPowerOff
    SystemVideoState
    TraceApplicationPowerMessage
    TraceApplicationPowerMessageEnd
    ProcessorPerfStates
    ProcessorIdleStates
    ProcessorCap
    SystemWakeSource
    SystemHiberFileInformation
    TraceServicePowerMessage
    ProcessorLoad
    PowerShutdownNotification
    MonitorCapabilities
    SessionPowerInit
    SessionDisplayState
    PowerRequestCreate
    PowerRequestAction
    GetPowerRequestList
    ProcessorInformationEx
    NotifyUserModeLegacyPowerEvent
    GroupPark
    ProcessorIdleDomains
    WakeTimerList
    SystemHiberFileSize
    ProcessorIdleStatesHv
    ProcessorPerfStatesHv
    ProcessorPerfCapHv
    ProcessorSetIdle
    LogicalProcessorIdling
    UserPresence
    PowerSettingNotificationName
    GetPowerSettingValue
    IdleResiliency
    SessionRITState
    SessionConnectNotification
    SessionPowerCleanup
    SessionLockState
    SystemHiberbootState
    PlatformInformation
    PdcInvocation
    MonitorInvocation
    FirmwareTableInformationRegistered
    SetShutdownSelectedTime
    SuspendResumeInvocation                        ' Deprecated
    PlmPowerRequestCreate
    ScreenOff
    CsDeviceNotification
    PlatformRole
    LastResumePerformance
    DisplayBurst
    ExitLatencySamplingPercentage
    RegisterSpmPowerSettings
    PlatformIdleStates
    ProcessorIdleVeto                              ' Deprecated.
    PlatformIdleVeto                               ' Deprecated.
    SystemBatteryStatePrecise
    ThermalEvent
    PowerRequestActionInternal
    BatteryDeviceState
    PowerInformationInternal
    ThermalStandby
    SystemHiberFileType
    PhysicalPowerButtonPress
    QueryPotentialDripsConstraint
    EnergyTrackerCreate
    EnergyTrackerQuery
    UpdateBlackBoxRecorder
    SessionAllowExternalDmaDevices
    SendSuspendResumeNotification
    BlackBoxRecorderDirectAccessBuffer
    PowerInformationLevelMaximum
End Enum

Public Enum LATENCY_TIME
    LT_DONT_CARE = 0
    LT_LOWEST_LATENCY = 1
End Enum

Public Enum CPU_SET_INFORMATION_TYPE
    CpuSetInformation = 0
End Enum
Public Enum SysCpuSetInfoFlags
    SYSTEM_CPU_SET_INFORMATION_PARKED = &H1
    SYSTEM_CPU_SET_INFORMATION_ALLOCATED = &H2
    SYSTEM_CPU_SET_INFORMATION_ALLOCATED_TO_TARGET_PROCESS = &H4
    SYSTEM_CPU_SET_INFORMATION_REALTIME = &H8
End Enum
Public Type SYSTEM_CPU_SET_INFORMATION
    Size As Long
    Type As CPU_SET_INFORMATION_TYPE
    'union {
    ' struct {
        ' DWORD Id;
        ' WORD   Group;
        ' BYTE  LogicalProcessorIndex;
        ' BYTE  CoreIndex;
        ' BYTE  LastLevelCacheIndex;
        ' BYTE  NumaNodeIndex;
        ' BYTE  EfficiencyClass;
        ' union {

' #define SYSTEM_CPU_SET_INFORMATION_PARKED 0x1
' #define SYSTEM_CPU_SET_INFORMATION_ALLOCATED 0x2
' #define SYSTEM_CPU_SET_INFORMATION_ALLOCATED_TO_TARGET_PROCESS 0x4
' #define SYSTEM_CPU_SET_INFORMATION_REALTIME 0x8

            ' BYTE  AllFlags;
            ' struct {
                ' BYTE  Parked : 1;
                ' BYTE  Allocated : 1;
                ' BYTE  AllocatedToTargetProcess : 1;
                ' BYTE  RealTime : 1;
                ' BYTE  ReservedFlags : 4;
            ' } DUMMYSTRUCTNAME;
        ' } DUMMYUNIONNAME2;

        ' union {
            ' DWORD Reserved;
            ' BYTE  SchedulingClass;
        ' };

        ' DWORD64 AllocationTag;
    ' } CpuSet;
' } DUMMYUNIONNAME;
    u(23) As Byte
End Type



Public DeclareWide PtrSafe Function DeviceIoControl Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwIoControlCode As Long, lpInBuffer As Any, ByVal nInBufferSize As Long, lpOutBuffer As Any, ByVal nOutBufferSize As Long, lpBytesReturned As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function GetDevicePowerState Lib "kernel32" (ByVal hDevice As LongPtr, pfOn As BOOL) As BOOL
Public Declare PtrSafe Function GetSystemPowerStatus Lib "kernel32" (lpSystemPowerStatus As SYSTEM_POWER_STATUS) As BOOL
Public Declare PtrSafe Function SetSystemPowerState Lib "kernel32" (ByVal fSuspend As BOOL, ByVal fForce As BOOL) As BOOL
Public Declare PtrSafe Function IsSystemResumeAutomatic Lib "kernel32" () As BOOL
Public Declare PtrSafe Function CancelDeviceWakeupRequest Lib "kernel32" (ByVal hDevice As LongPtr) As BOOL
Public Declare PtrSafe Function RequestDeviceWakeup Lib "kernel32" (ByVal hDevice As LongPtr) As BOOL
Public Declare PtrSafe Function PowerCreateRequest Lib "kernel32" (Context As REASON_CONTEXT) As LongPtr
Public Declare PtrSafe Function PowerSetRequest Lib "kernel32" (ByVal PowerRequest As LongPtr, ByVal RequestType As POWER_REQUEST_TYPE) As BOOL
Public Declare PtrSafe Function PowerClearRequest Lib "kernel32" (ByVal PowerRequest As LongPtr, ByVal RequestType As POWER_REQUEST_TYPE) As BOOL
Public Declare PtrSafe Function RequestWakeupLatency Lib "kernel32" (ByVal latency As LATENCY_TIME) As BOOL
Public Declare PtrSafe Function GetMachineTypeAttributes Lib "kernel32" ([TypeHint(ImageMachineType)] ByVal Machine As Integer, MachineTypeAttributes As MACHINE_ATTRIBUTES) As Long


Public Declare PtrSafe Function SetErrorMode Lib "kernel32" (ByVal uMode As ErrorModes) As ErrorModes
Public Declare PtrSafe Function GetErrorMode Lib "kernel32" () As ErrorModes
Public Declare PtrSafe Function SetThreadErrorMode Lib "kernel32" (ByVal dwNewMode As ErrorModes, lpOldMode As ErrorModes) As BOOL
Public Declare PtrSafe Function GetThreadErrorMode Lib "kernel32" () As ErrorModes
Public Declare PtrSafe Sub SetLastError Lib "kernel32" (ByVal dwErrorCode As Long)
Public Declare PtrSafe Function GetLastError Lib "kernel32" () As Long
Public Declare PtrSafe Sub FatalAppExitA Lib "kernel32" (ByVal uAction As Long, ByVal lpMessageText As String)
Public Declare PtrSafe Sub FatalAppExitW Lib "kernel32" (ByVal uAction As Long, ByVal lpMessageText As LongPtr)
Public DeclareWide PtrSafe Sub FatalAppExit Lib "kernel32" Alias "FatalAppExitW" (ByVal uAction As Long, ByVal lpMessageText As String)
Public Declare PtrSafe Sub SetUnhandledExceptionFilter Lib "kernel32" (ByVal lpTopLevelExceptionFilter As LongPtr)
Public Declare PtrSafe Function UnhandledExceptionFilter Lib "kernel32" (ExceptionInfo As EXCEPTION_POINTERS) As Long
Public Declare PtrSafe Sub TerminateProcessOnMemoryExhaustion Lib "kernelbase" (ByVal FailedAllocationSize As LongPtr)
Public Declare PtrSafe Function SetHandleCount Lib "kernel32" (ByVal uNumber As Long) As BOOL
Public Declare PtrSafe Function SetThreadExecutionState Lib "kernel32" (ByVal esFlags As EXECUTION_STATE) As EXECUTION_STATE

[Description("ANSI messages only. For Unicode, use WaitForDebugEventEx")]
Public Declare PtrSafe Function WaitForDebugEvent Lib "kernel32" (lpDebugEvent As DEBUG_EVENT, ByVal dwMillisecondss As Long) As BOOL
Public Declare PtrSafe Function WaitForDebugEventEx Lib "kernel32" (lpDebugEvent As DEBUG_EVENT, ByVal dwMillisecondss As Long) As BOOL
Public Declare PtrSafe Sub OutputDebugStringA Lib "kernel32" (Optional ByVal lpOutputString As String)
Public Declare PtrSafe Sub OutputDebugStringW Lib "kernel32" (Optional ByVal lpOutputString As LongPtr)
Public DeclareWide PtrSafe Sub OutputDebugString Lib "kernel32" Alias "OutputDebugStringW" (Optional ByVal lpOutputString As String)
Public Declare PtrSafe Function IsDebuggerPresent Lib "kernel32" () As BOOL
Public Declare PtrSafe Sub DebugBreak Lib "kernel32" ()
Public Declare PtrSafe Function ContinueDebugEvent Lib "kernel32" (ByVal dwProcessId As Long, ByVal dwThreadId As Long, ByVal dwContinueStatus As DBG_CONTROL_FLAGS) As BOOL
Public Declare PtrSafe Function DebugActiveProcess Lib "kernel32" (ByVal dwProcessId As Long) As BOOL
Public Declare PtrSafe Function DebugActiveProcessStop Lib "kernel32" (ByVal dwProcessId As Long) As BOOL
Public Declare PtrSafe Function CheckRemoteDebuggerPresent Lib "kernel32" (ByVal hProcess As LongPtr, pbDebuggerPresent As BOOL) As BOOL
Public Declare PtrSafe Function DebugSetProcessKillOnExit Lib "kernel32" (ByVal KillOnExit As BOOL) As BOOL
Public Declare PtrSafe Function DebugBreakProcess Lib "kernel32" (ByVal hProcess As LongPtr) As BOOL
Public Declare PtrSafe Sub FatalExit Lib "kernel32" (ByVal ExitCode As Long)
Public Declare PtrSafe Function FlushInstructionCache Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpBaseAddress As LongPtr, ByVal dwSize As LongPtr) As BOOL
Public Declare PtrSafe Function GetThreadContext Lib "kernel32" (ByVal hThread As LongPtr, lpContext As _CONTEXT) As BOOL
Public Declare PtrSafe Function SetThreadContext Lib "kernel32" (ByVal hThread As LongPtr, lpContext As _CONTEXT) As BOOL
#If Win64 Then
Public Declare PtrSafe Function Wow64GetThreadContext Lib "kernel32" (ByVal hThread As LongPtr, lpContext As WOW64_CONTEXT) As BOOL
Public Declare PtrSafe Function Wow64SetThreadContext Lib "kernel32" (ByVal hThread As LongPtr, lpContext As WOW64_CONTEXT) As BOOL
Public Declare PtrSafe Function Wow64GetThreadSelectorEntry Lib "kernel32" (ByVal hThread As LongPtr, ByVal dwSelector As Long, lpSelectorEntry As WOW64_LDT_ENTRY) As BOOL
#End If
Public Declare PtrSafe Function GetThreadSelectorEntry Lib "kernel32" (ByVal hThread As LongPtr, ByVal dwSelector As Long, lpSelectorEntry As LDT_ENTRY) As BOOL
Public DeclareWide PtrSafe Function InitializeContext Lib "kernel32" (Buffer As Any, ByVal ContextFlags As EXCEPTION_CONTEXT_FLAGS, Context As LongPtr, ContextLength As Long) As BOOL
Public Declare PtrSafe Function GetXStateFeaturesMask Lib "kernel32" (ByVal Context As LongPtr, FeatureMask As LongLong) As BOOL
Public Declare PtrSafe Function SetXStateFeaturesMask Lib "kernel32" (ByVal Context As LongPtr, ByVal FeatureMask As LongLong) As BOOL
Public Declare PtrSafe Function GetSystemCpuSetInformation Lib "kernel32" (Information As SYSTEM_CPU_SET_INFORMATION, ByVal BufferLength As Long, ReturnedLength As Long, ByVal Process As LongPtr, ByVal Flags As Long) As BOOL
Public Declare PtrSafe Function GetProcessDefaultCpuSets Lib "kernel32" (ByVal Process As LongPtr, CpuSetIds As Long, ByVal CpuSetIdCount As Long, RequiredIdCount As Long) As BOOL
Public Declare PtrSafe Function SetProcessDefaultCpuSets Lib "kernel32" (ByVal Process As LongPtr, CpuSetIds As Long, ByVal CpuSetIdCount As Long) As BOOL
Public Declare PtrSafe Function GetThreadSelectedCpuSets Lib "kernel32" (ByVal Thread As LongPtr, CpuSetIds As Long, ByVal CpuSetIdCount As Long, RequiredIdCount As Long) As BOOL
Public Declare PtrSafe Function SetThreadSelectedCpuSets Lib "kernel32" (ByVal Thread As LongPtr, CpuSetIds As Long, ByVal CpuSetIdCount As Long) As BOOL
Public Declare PtrSafe Function GetProcessDefaultCpuSetMasks Lib "kernel32" (ByVal Process As LongPtr, CpuSetMasks As GROUP_AFFINITY, ByVal CpuSetMaskCount As Integer, RequiredMaskCount As Integer) As BOOL
Public Declare PtrSafe Function SetProcessDefaultCpuSetMasks Lib "kernel32" (ByVal Process As LongPtr, CpuSetMasks As GROUP_AFFINITY, ByVal CpuSetMaskCount As Integer) As BOOL
Public Declare PtrSafe Function GetThreadSelectedCpuSetMasks Lib "kernel32" (ByVal Thread As LongPtr, CpuSetMasks As GROUP_AFFINITY, ByVal CpuSetMaskCount As Integer, RequiredMaskCount As Integer) As BOOL
Public Declare PtrSafe Function SetThreadSelectedCpuSetMasks Lib "kernel32" (ByVal Thread As LongPtr, CpuSetMasks As GROUP_AFFINITY, ByVal CpuSetMaskCount As Integer) As BOOL



Public Enum LOCALE_ENUM_FLAGS
    LCID_INSTALLED = &H00000001  ' installed locale ids
    LCID_SUPPORTED = &H00000002  ' supported locale ids
    LCID_ALTERNATE_SORTS = &H00000004  ' alternate sort locale ids
    LcidSpecialValue = &H39
End Enum

[Description("📝**NOTE:** This enum is used with several functions; not all functions support all flags.")]
Public Enum TIME_FORMAT_FLAGS
    TIME_NOMINUTESORSECONDS = &H00000001  ' do not use minutes or seconds
    TIME_NOSECONDS = &H00000002  ' do not use seconds
    TIME_NOTIMEMARKER = &H00000004  ' do not use time marker
    TIME_FORCE24HOURFORMAT = &H00000008  ' always use 24 hour format
End Enum

Public Enum DATE_FORMAT_FLAGS
    DATE_SHORTDATE = &H00000001  ' use short date picture
    DATE_LONGDATE = &H00000002  ' use long date picture
    DATE_USE_ALT_CALENDAR = &H00000004  ' use alternate calendar (if any)
    DATE_YEARMONTH = &H00000008  ' use year month picture
    DATE_LTRREADING = &H00000010  ' add marks for left to right reading order layout
    DATE_RTLREADING = &H00000020  ' add marks for right to left reading order layout
' #if (WINVER >= _WIN32_WINNT_WIN7)
    DATE_AUTOLAYOUT = &H00000040  ' add appropriate marks for left-to-right or right-to-left reading order layout
' #endif //(WINVER >= _WIN32_WINNT_WIN7)
' #if (WINVER >= _WIN32_WINNT_WINTHRESHOLD)
    DATE_MONTHDAY = &H00000080  ' include month day pictures
End Enum

Public Enum MUI_ENUM_FLAGS
    MUI_LANGUAGE_ID = &H4  ' Use traditional language ID convention
    MUI_LANGUAGE_NAME = &H8  ' Use ISO language (culture) name convention
    MUI_LANGUAGE_EXACT = &H10
    MUI_ALL_INSTALLED_LANGUAGES = &H20
    MUI_LICENSED_LANGUAGES = &H40
    'MUI_GROUP_POLICY = ???
End Enum
Public Enum GTUILANG_FLAGS
    MUI_MERGE_SYSTEM_FALLBACK = &H10  ' GetThreadPreferredUILanguages merges in parent and base languages
    MUI_MERGE_USER_FALLBACK = &H20  ' GetThreadPreferredUILanguages merges in user preferred languages
    MUI_UI_FALLBACK = MUI_MERGE_SYSTEM_FALLBACK Or MUI_MERGE_USER_FALLBACK
    MUI_THREAD_LANGUAGES = &H40  ' GetThreadPreferredUILanguages merges in user preferred languages
End Enum
Public Enum STUILANG_FLAGS
    MUI_CONSOLE_FILTER = &H100  ' SetThreadPreferredUILanguages takes on console specific behavior
    MUI_COMPLEX_SCRIPT_FILTER = &H200  ' SetThreadPreferredUILanguages takes on complex script specific behavior
    MUI_RESET_FILTERS = &H001  ' Reset MUI_CONSOLE_FILTER and MUI_COMPLEX_SCRIPT_FILTER
End Enum

Public Enum NlsFileMuiPathFlags
    MUI_USER_PREFERRED_UI_LANGUAGES = &H10  ' GetFileMUIPath returns the MUI files for the languages in the fallback list
    MUI_USE_INSTALLED_LANGUAGES = &H20  ' GetFileMUIPath returns all the MUI files installed in the machine
    MUI_USE_SEARCH_ALL_LANGUAGES = &H40  ' GetFileMUIPath returns all the MUI files irrespective of whether language is installed
    MUI_LANG_NEUTRAL_PE_FILE = &H100  ' GetFileMUIPath returns target file with .mui extension
    MUI_NON_LANG_NEUTRAL_FILE = &H200  ' GetFileMUIPath returns target file with same name as source
    MUI_MACHINE_LANGUAGE_SETTINGS = &H400
End Enum

Public Enum NlsFileMuiFileTypeFlags
    MUI_FILETYPE_NOT_LANGUAGE_NEUTRAL = &H001  ' GetFileMUIInfo found a non-split resource file
    MUI_FILETYPE_LANGUAGE_NEUTRAL_MAIN = &H002  ' GetFileMUIInfo found a LN main module resource file
    MUI_FILETYPE_LANGUAGE_NEUTRAL_MUI = &H004  ' GetFileMUIInfo found a LN MUI module resource file
End Enum

Public Enum NlsFileMuiQueryType
    MUI_QUERY_TYPE = &H001  ' GetFileMUIInfo will look for the type of the resource file
    MUI_QUERY_CHECKSUM = &H002  ' GetFileMUIInfo will look for the checksum of the resource file
    MUI_QUERY_LANGUAGE_NAME = &H004  ' GetFileMUIInfo will look for the culture of the resource file
    MUI_QUERY_RESOURCE_TYPES = &H008  ' GetFileMUIInfo will look for the resource types of the resource file
End Enum

Public Enum FileMuiInfoVerions
    MUI_FILEINFO_VERSION = &H1
End Enum

Public Type FILEMUIINFO
    dwSize As Long ' Size of the structure including buffer size [in]
    dwVersion As FileMuiInfoVerions ' Version of the structure [in]
    dwFileType As NlsFileMuiFileTypeFlags ' Type of the file [out]
    pChecksum(0 To 15) As Byte ' Checksum of the file [out]
    pServiceChecksum(0 To 15) As Byte ' Checksum of the file [out]
    dwLanguageNameOffset As Long ' Language name of the file [out]
    dwTypeIDMainSize As Long ' Number of TypeIDs in main module [out]
    dwTypeIDMainOffset As Long ' Array of TypeIDs (DWORD) in main module [out]
    dwTypeNameMainOffset As Long ' Multistring array of TypeNames in main module [out]
    dwTypeIDMUISize As Long ' Number of TypeIDs in MUI module [out]
    dwTypeIDMUIOffset As Long ' Array of TypeIDs (DWORD) in MUI module [out]
    dwTypeNameMUIOffset As Long ' Multistring array of TypeNames in MUI module [out]
    abBuffer(0 To 7) As Byte ' Buffer for extra data [in] (Size 4 is for padding)
End Type




Public Enum CODEPAGE_ENUM_FLAGS
    CP_INSTALLED = &H00000001  ' installed code page ids
    CP_SUPPORTED = &H00000002  ' supported code page ids
End Enum

Public Enum CALID
    CAL_GREGORIAN = 1  ' Gregorian (localized) calendar
    CAL_GREGORIAN_US = 2  ' Gregorian (U.S.) calendar
    CAL_JAPAN = 3  ' Japanese Emperor Era calendar
    CAL_TAIWAN = 4  ' Taiwan calendar
    CAL_KOREA = 5  ' Korean Tangun Era calendar
    CAL_HIJRI = 6  ' Hijri (Arabic Lunar) calendar
    CAL_THAI = 7  ' Thai calendar
    CAL_HEBREW = 8  ' Hebrew (Lunar) calendar
    CAL_GREGORIAN_ME_FRENCH = 9  ' Gregorian Middle East French calendar
    CAL_GREGORIAN_ARABIC = 10  ' Gregorian Arabic calendar
    CAL_GREGORIAN_XLIT_ENGLISH = 11  ' Gregorian Transliterated English calendar
    CAL_GREGORIAN_XLIT_FRENCH = 12  ' Gregorian Transliterated French calendar
    CAL_PERSIAN = 22  ' Persian (Solar Hijri) calendar
    CAL_UMALQURA = 23  ' UmAlQura Hijri (Arabic Lunar) calendar
    ENUM_ALL_CALENDARS = &Hffffffff
End Enum
Public Enum CALTYPE
    CAL_NOUSEROVERRIDE = LOCALE_NOUSEROVERRIDE  ' Not Recommended - do not use user overrides
    CAL_USE_CP_ACP = LOCALE_USE_CP_ACP  ' DEPRECATED, call Unicode APIs instead: use the system ACP
    CAL_RETURN_NUMBER = LOCALE_RETURN_NUMBER  ' return number instead of string
' #if (WINVER >= _WIN32_WINNT_WIN7)
    CAL_RETURN_GENITIVE_NAMES = LOCALE_RETURN_GENITIVE_NAMES  ' return genitive forms of month names
' #endif // winver >= windows 7
'   The following CalTypes are mutually exclusive in that they may NOT
'   be used in combination with each other.
    CAL_ICALINTVALUE = &H00000001  ' calendar type
    CAL_SCALNAME = &H00000002  ' native name of calendar
    CAL_IYEAROFFSETRANGE = &H00000003  ' starting years of eras
    CAL_SERASTRING = &H00000004  ' era name for IYearOffsetRanges, eg A.D.
    CAL_SSHORTDATE = &H00000005  ' short date format string
    CAL_SLONGDATE = &H00000006  ' long date format string
    CAL_SDAYNAME1 = &H00000007  ' native name for Monday
    CAL_SDAYNAME2 = &H00000008  ' native name for Tuesday
    CAL_SDAYNAME3 = &H00000009  ' native name for Wednesday
    CAL_SDAYNAME4 = &H0000000a  ' native name for Thursday
    CAL_SDAYNAME5 = &H0000000b  ' native name for Friday
    CAL_SDAYNAME6 = &H0000000c  ' native name for Saturday
    CAL_SDAYNAME7 = &H0000000d  ' native name for Sunday
    CAL_SABBREVDAYNAME1 = &H0000000e  ' abbreviated name for Mon
    CAL_SABBREVDAYNAME2 = &H0000000f  ' abbreviated name for Tue
    CAL_SABBREVDAYNAME3 = &H00000010  ' abbreviated name for Wed
    CAL_SABBREVDAYNAME4 = &H00000011  ' abbreviated name for Thu
    CAL_SABBREVDAYNAME5 = &H00000012  ' abbreviated name for Fri
    CAL_SABBREVDAYNAME6 = &H00000013  ' abbreviated name for Sat
    CAL_SABBREVDAYNAME7 = &H00000014  ' abbreviated name for Sun
'  Note that in the hebrew calendar the leap month name is always returned as the 7th month
    CAL_SMONTHNAME1 = &H00000015  ' native name for January
    CAL_SMONTHNAME2 = &H00000016  ' native name for February
    CAL_SMONTHNAME3 = &H00000017  ' native name for March
    CAL_SMONTHNAME4 = &H00000018  ' native name for April
    CAL_SMONTHNAME5 = &H00000019  ' native name for May
    CAL_SMONTHNAME6 = &H0000001a  ' native name for June
    CAL_SMONTHNAME7 = &H0000001b  ' native name for July
    CAL_SMONTHNAME8 = &H0000001c  ' native name for August
    CAL_SMONTHNAME9 = &H0000001d  ' native name for September
    CAL_SMONTHNAME10 = &H0000001e  ' native name for October
    CAL_SMONTHNAME11 = &H0000001f  ' native name for November
    CAL_SMONTHNAME12 = &H00000020  ' native name for December
    CAL_SMONTHNAME13 = &H00000021  ' native name for 13th month (if any)
    CAL_SABBREVMONTHNAME1 = &H00000022  ' abbreviated name for Jan
    CAL_SABBREVMONTHNAME2 = &H00000023  ' abbreviated name for Feb
    CAL_SABBREVMONTHNAME3 = &H00000024  ' abbreviated name for Mar
    CAL_SABBREVMONTHNAME4 = &H00000025  ' abbreviated name for Apr
    CAL_SABBREVMONTHNAME5 = &H00000026  ' abbreviated name for May
    CAL_SABBREVMONTHNAME6 = &H00000027  ' abbreviated name for Jun
    CAL_SABBREVMONTHNAME7 = &H00000028  ' abbreviated name for July
    CAL_SABBREVMONTHNAME8 = &H00000029  ' abbreviated name for Aug
    CAL_SABBREVMONTHNAME9 = &H0000002a  ' abbreviated name for Sep
    CAL_SABBREVMONTHNAME10 = &H0000002b  ' abbreviated name for Oct
    CAL_SABBREVMONTHNAME11 = &H0000002c  ' abbreviated name for Nov
    CAL_SABBREVMONTHNAME12 = &H0000002d  ' abbreviated name for Dec
    CAL_SABBREVMONTHNAME13 = &H0000002e  ' abbreviated name for 13th month (if any)
    CAL_SYEARMONTH = &H0000002f  ' year month format string
    CAL_ITWODIGITYEARMAX = &H00000030  ' two digit year max
    CAL_SSHORTESTDAYNAME1 = &H00000031  ' Shortest day name for Mo
    CAL_SSHORTESTDAYNAME2 = &H00000032  ' Shortest day name for Tu
    CAL_SSHORTESTDAYNAME3 = &H00000033  ' Shortest day name for We
    CAL_SSHORTESTDAYNAME4 = &H00000034  ' Shortest day name for Th
    CAL_SSHORTESTDAYNAME5 = &H00000035  ' Shortest day name for Fr
    CAL_SSHORTESTDAYNAME6 = &H00000036  ' Shortest day name for Sa
    CAL_SSHORTESTDAYNAME7 = &H00000037  ' Shortest day name for Su
' #if (WINVER >= _WIN32_WINNT_WIN7)
    CAL_SMONTHDAY = &H00000038  ' Month/day format
    CAL_SABBREVERASTRING = &H00000039  ' Abbreviated era string (eg: AD)
' #endif // winver >= windows 7
' #if (WINVER >= _WIN32_WINNT_WIN8)
    CAL_SRELATIVELONGDATE = &H0000003a  ' Long date without year, day of week, month, date, eg: for lock screen
' #endif
' #if (NTDDI_VERSION >= NTDDI_WIN10_RS2)
    CAL_SENGLISHERANAME = &H0000003b  ' Japanese calendar only: return the English era names for .Net compatibility
    CAL_SENGLISHABBREVERANAME = &H0000003c  ' Japanese calendar only: return the English Abbreviated era names for .Net compatibility
' #endif
'  CAL_SJAPANESEERAFIRSTYEAR is only supported on machines with updates to support the "gannen" era first year behavior
'  Machines without that update will return 0 and ERROR_INVALID_FLAGS, in which case ichinen is presumed.
    CAL_SJAPANESEERAFIRSTYEAR = &H0000003d  ' Japanese calendar only: return ichinen or gannen first year
End Enum

Public Type NUMBERFMTA
    NumDigits As Long
    LeadingZero As Long
    Grouping As Long
    lpDecimalSep As String
    lpThousandSep As String
    NegativeOrder As Long
End Type
Public Type NUMBERFMTW
    NumDigits As Long
    LeadingZero As Long
    Grouping As Long
    lpDecimalSep As LongPtr
    lpThousandSep As LongPtr
    NegativeOrder As Long
End Type
'Alias NUMBERFMT As NUMBERFMTW
Public Type NUMBERFMT
    NumDigits As Long
    LeadingZero As Long
    Grouping As Long
    lpDecimalSep As LongPtr
    lpThousandSep As LongPtr
    NegativeOrder As Long
End Type

Public Type CURRENCYFMTA
    NumDigits As Long
    LeadingZero As Long
    Grouping As Long
    lpDecimalSep As String
    lpThousandSep As String
    NegativeOrder As Long
    PositiveOrder As Long
    lpCurrencySymbol As String
End Type
Public Type CURRENCYFMTW
    NumDigits As Long
    LeadingZero As Long
    Grouping As Long
    lpDecimalSep As LongPtr
    lpThousandSep As LongPtr
    NegativeOrder As Long
    PositiveOrder As Long
    lpCurrencySymbol As LongPtr
End Type
'Alias CURRENCYFMT As CURRENCYFMTW
Public Type CURRENCYFMT
    NumDigits As Long
    LeadingZero As Long
    Grouping As Long
    lpDecimalSep As LongPtr
    lpThousandSep As LongPtr
    NegativeOrder As Long
    PositiveOrder As Long
    lpCurrencySymbol As LongPtr
End Type

Public Const MAX_LEADBYTES  = 12  ' 5 ranges, 2 bytes ea., 0 term.
Public Const MAX_DEFAULTCHAR  = 2  ' single or double byte
Public Type CPINFO
    MaxCharSize As Long
    DefaultChar(0 To (MAX_DEFAULTCHAR - 1)) As Byte
    LeadByte(0 To (MAX_LEADBYTES - 1)) As Byte
End Type
Public Type CPINFOEXA
    MaxCharSize As Long
    DefaultChar(0 To (MAX_DEFAULTCHAR - 1)) As Byte
    LeadByte(0 To (MAX_LEADBYTES - 1)) As Byte
    UnicodeDefaultChar As Integer
    CodePage As CodePageDefaults
    CodePageName(0 To (MAX_PATH - 1)) As Byte
End Type
Public Type CPINFOEXW
    MaxCharSize As Long
    DefaultChar(0 To (MAX_DEFAULTCHAR - 1)) As Byte
    LeadByte(0 To (MAX_LEADBYTES - 1)) As Byte
    UnicodeDefaultChar As Integer
    CodePage As CodePageDefaults
    CodePageName(0 To (MAX_PATH - 1)) As Integer
End Type
'Alias CPINFOEX As CPINFOEXW
Public Type CPINFOEX
    MaxCharSize As Long
    DefaultChar(0 To (MAX_DEFAULTCHAR - 1)) As Byte
    LeadByte(0 To (MAX_LEADBYTES - 1)) As Byte
    UnicodeDefaultChar As Integer
    CodePage As CodePageDefaults
    CodePageName(0 To (MAX_PATH - 1)) As Integer
End Type

Public Enum SYSGEOCLASS
    GEOCLASS_NATION = 16
    GEOCLASS_REGION = 14
    GEOCLASS_ALL = 0
End Enum
Public Enum SYSGEOTYPE
    GEO_NATION = &H0001 ' DEPRECATED Not used by name API
    GEO_LATITUDE = &H0002
    GEO_LONGITUDE = &H0003
    GEO_ISO2 = &H0004
    GEO_ISO3 = &H0005
    GEO_RFC1766 = &H0006 ' DEPRECATED and misleading, not used by name API
    GEO_LCID = &H0007 ' DEPRECATED Not used by name API
    GEO_FRIENDLYNAME = &H0008
    GEO_OFFICIALNAME = &H0009
    GEO_TIMEZONES = &H000A ' Not implemented
    GEO_OFFICIALLANGUAGES = &H000B ' Not implemented
    GEO_ISO_UN_NUMBER = &H000C
    GEO_PARENT = &H000D
    GEO_DIALINGCODE = &H000E
    GEO_CURRENCYCODE = &H000F ' eg: USD
    GEO_CURRENCYSYMBOL = &H0010 ' eg: $
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_RS3)
    GEO_NAME = &H0011 ' Name, eg: US or 001
    GEO_ID = &H0012 ' DEPRECATED - For compatibility, please avoid
    ' #endif
End Enum
Public Const GEO_NAME_USER_DEFAULT = 0
Public Const GEOID_NOT_AVAILABLE = -1



Public Enum LCMAP_FLAGS
    LCMAP_LOWERCASE = &H00000100  ' lower case letters
    LCMAP_UPPERCASE = &H00000200  ' UPPER CASE LETTERS
' #if (WINVER >= _WIN32_WINNT_WIN7)
    LCMAP_TITLECASE = &H00000300  ' Title Case Letters
' #endif // (WINVER >= _WIN32_WINNT_WIN7)
    LCMAP_SORTKEY = &H00000400  ' WC sort key (normalize)
    LCMAP_BYTEREV = &H00000800  ' byte reversal
    LCMAP_HIRAGANA = &H00100000  ' map katakana to hiragana
    LCMAP_KATAKANA = &H00200000  ' map hiragana to katakana
    LCMAP_HALFWIDTH = &H00400000  ' map double byte to single byte
    LCMAP_FULLWIDTH = &H00800000  ' map single byte to double byte
    LCMAP_LINGUISTIC_CASING = &H01000000  ' use linguistic rules for casing
    LCMAP_SIMPLIFIED_CHINESE = &H02000000  ' map traditional chinese to simplified chinese
    LCMAP_TRADITIONAL_CHINESE = &H04000000  ' map simplified chinese to traditional chinese
' #if (WINVER >= _WIN32_WINNT_WIN8)
    LCMAP_SORTHANDLE = &H20000000
    LCMAP_HASH = &H00040000
End Enum

[Description("For Windows 7 and below only. For Windows 8 and newer, use NLSVERSIONINFO or NLSVERSIONINFOEX")]
Public Type NLSVERSIONINFO_WIN7         ' Use NLSVERSIONINFOEX instead
    dwNLSVersionInfoSize As Long ' 12 bytes
    dwNLSVersion As Long
    dwDefinedVersion As Long ' Deprecated, use dwNLSVersion instead
End Type
[Description("For Windows 8 and newer. Windows 7 and below: Use NLSVERSIONINFO_WIN7")]
Public Type NLSVERSIONINFO
    dwNLSVersionInfoSize As Long
    dwNLSVersion As Long
    dwDefinedVersion As Long
    dwEffectiveId As Long
    guidCustomVersion As UUID
End Type
Public Type NLSVERSIONINFOEX
    dwNLSVersionInfoSize As Long
    dwNLSVersion As Long
    dwDefinedVersion As Long
    dwEffectiveId As Long
    guidCustomVersion As UUID
End Type

Public Const SORTING_PARADIGM_NLS  = &H00000000  ' NLS style sorting
Public Const SORTING_PARADIGM_ICU  = &H01000000  ' ICU style sorting

Public Enum SYSNLS_FUNCTION
    COMPARE_STRING = &H0001
End Enum

Public Enum QUEUE_USER_APC_FLAGS
    QUEUE_USER_APC_FLAGS_NONE
    QUEUE_USER_APC_FLAGS_SPECIAL_USER_APC
    QUEUE_USER_APC_CALLBACK_DATA_CONTEXT
End Enum

Public Type APC_CALLBACK_DATA
    Parameter As LongPtr
    ContextRecord As LongPtr 'PCONTEXT
    Reserved0 As LongPtr
    Reserved1 As LongPtr
End Type

Public Enum LOGICAL_PROCESSOR_RELATIONSHIP
    RelationProcessorCore
    RelationNumaNode
    RelationCache
    RelationProcessorPackage
    RelationGroup
    RelationProcessorDie
    RelationNumaNodeEx
    RelationProcessorModule
    RelationAll = &Hffff&
End Enum

Public Enum PROCESSOR_CACHE_TYPE
    CacheUnified
    CacheInstruction
    CacheData
    CacheTrace
End Enum

Public Enum ProcessorRelationshipFlags
        LTP_PC_SMT = &H1
End Enum

Public Enum ProcessorCacheAssociativity
    CACHE_FULLY_ASSOCIATIVE = &HFF
End Enum

Public Type CACHE_DESCRIPTOR
    Level As Byte
    /* [ TypeHint(ProcessorCacheAssociativity) ] */ Associativity As Byte
    LineSize As Integer
    Size As Long
    Type As PROCESSOR_CACHE_TYPE
End Type

[Description("Go to definition to see comments on contents of member u, representing an unsupported union.")]
Public Type SYSTEM_LOGICAL_PROCESSOR_INFORMATION
    ProcessorMask As LongPtr
    Relationship As LOGICAL_PROCESSOR_RELATIONSHIP
    ' union {
        ' struct {
        ' BYTE Flags;
        ' } ProcessorCore;
        ' struct {
        ' DWORD NodeNumber;
        ' } NumaNode;
        ' CACHE_DESCRIPTOR Cache;
        ' ULONGLONG        Reserved[2];
    ' } DUMMYUNIONNAME;
    u(1) As LongLong
End Type

Public Type PROCESSOR_RELATIONSHIP
    /* [ TypeHint(ProcessorRelationshipFlags) ] */ Flags As Byte
    EfficiencyClass As Byte
    Reserved(0 To 19) As Byte
    GroupCount As Integer
    GroupMask(0) As GROUP_AFFINITY
End Type
Public Type NUMA_NODE_RELATIONSHIP
    NodeNumber As Long
    Reserved(0 To 17) As Byte
    GroupCount As Integer
    'union {
    '    GROUP_AFFINITY GroupMask;
    '     _Field_size_(GroupCount)
    '     GROUP_AFFINITY GroupMasks[ANYSIZE_ARRAY];
    ' } DUMMYUNIONNAME;
    GroupMasks(0) As GROUP_AFFINITY
End Type
Public Type CACHE_RELATIONSHIP
    Level As Byte
    /* [ TypeHint(ProcessorCacheAssociativity) ] */ Associativity As Byte
    LineSize As Integer
    Size As Long
    Type As PROCESSOR_CACHE_TYPE
    Reserved(0 To 17) As Byte
    GroupCount As Integer
    GroupMasks(0) As GROUP_AFFINITY
End Type

Public Type PROCESSOR_GROUP_INFO
    MaximumProcessorCount As Byte
    ActiveProcessorCount As Byte
    Reserved(0 To 37) As Byte
    ActiveProcessorMask As LongPtr 'KAFFINITY
End Type
Public Type GROUP_RELATIONSHIP
    MaximumGroupCount As Integer
    ActiveGroupCount As Integer
    Reserved(0 To 19) As Byte
    '_Field_size_(ActiveGroupCount) PROCESSOR_GROUP_INFO GroupInfo[ANYSIZE_ARRAY];
    GroupInfo(0) As PROCESSOR_GROUP_INFO
End Type

[Description("Go to definition to see comments on contents of member u, representing an unsupported union.")]
Public Type SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX
    Relationship As LOGICAL_PROCESSOR_RELATIONSHIP
    Size As Long
    ' union {
        ' PROCESSOR_RELATIONSHIP Processor;
        ' NUMA_NODE_RELATIONSHIP NumaNode;
        ' CACHE_RELATIONSHIP Cache;
        ' GROUP_RELATIONSHIP Group;
    ' } DUMMYUNIONNAME;
    u(&H43) As Byte
End Type

Public Type SYSTEM_POOL_ZEROING_INFORMATION
    PoolZeroingSupportPresent As Byte
End Type

Public Type SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION
    CycleTime As LongLong
End Type

Public Enum DEP_SYSTEM_POLICY_TYPE
    DEPPolicyAlwaysOff = 0
    DEPPolicyAlwaysOn
    DEPPolicyOptIn
    DEPPolicyOptOut
    DEPTotalPolicyCount
End Enum

Public Enum GetTapeParameterOperations
    GET_TAPE_MEDIA_INFORMATION = 0
    GET_TAPE_DRIVE_INFORMATION = 1
End Enum
Public Enum SetTapeParameterOperations
    SET_TAPE_MEDIA_INFORMATION = 0
    SET_TAPE_DRIVE_INFORMATION = 1
End Enum


Public Enum LGRPID
    LGRPID_WESTERN_EUROPE = &H0001  ' Western Europe & U.S.
    LGRPID_CENTRAL_EUROPE = &H0002  ' Central Europe
    LGRPID_BALTIC = &H0003  ' Baltic
    LGRPID_GREEK = &H0004  ' Greek
    LGRPID_CYRILLIC = &H0005  ' Cyrillic
    LGRPID_TURKIC = &H0006  ' Turkic
    LGRPID_TURKISH = &H0006  ' Turkish
    LGRPID_JAPANESE = &H0007  ' Japanese
    LGRPID_KOREAN = &H0008  ' Korean
    LGRPID_TRADITIONAL_CHINESE = &H0009  ' Traditional Chinese
    LGRPID_SIMPLIFIED_CHINESE = &H000a  ' Simplified Chinese
    LGRPID_THAI = &H000b  ' Thai
    LGRPID_HEBREW = &H000c  ' Hebrew
    LGRPID_ARABIC = &H000d  ' Arabic
    LGRPID_VIETNAMESE = &H000e  ' Vietnamese
    LGRPID_INDIC = &H000f  ' Indic
    LGRPID_GEORGIAN = &H0010  ' Georgian
    LGRPID_ARMENIAN = &H0011  ' Armenian
End Enum
Public Enum NlsLanguageFlags
    LGRPID_INSTALLED = &H00000001  ' installed language group ids
    LGRPID_SUPPORTED = &H00000002  ' supported language group ids
End Enum

Public Enum LoadStrByRefFlags
    MUI_FORMAT_REG_COMPAT = &H0001
    MUI_FORMAT_INF_COMPAT = &H0002
    MUI_VERIFY_FILE_EXISTS = &H0004
    MUI_SKIP_STRING_CACHE = &H0008
    MUI_IMMUTABLE_LOOKUP = &H0010
End Enum

Public Enum NlsFindStrFlags
    FIND_STARTSWITH = &H00100000  ' see if value is at the beginning of source
    FIND_ENDSWITH = &H00200000  ' see if value is at the end of source
    FIND_FROMSTART = &H00400000  ' look for value in source, starting at the beginning
    FIND_FROMEND = &H00800000  ' look for value in source, starting at the end
End Enum

Public Enum NORM_FORM
    NormalizationOther = 0 ' Not supported
    NormalizationC = &H1 ' Each base plus combining characters to the canonical precomposed equivalent.
    NormalizationD = &H2 ' Each precomposed character to its canonical decomposed equivalent.
    NormalizationKC = &H5 ' Each base plus combining characters to the canonical precomposed
    '    equivalents and all compatibility characters to their equivalents.
    NormalizationKD = &H6 ' Each precomposed character to its canonical decomposed equivalent
    '    and all compatibility characters to their equivalents.
End Enum

Public Enum GetStringScriptFlags
    GSS_ALLOW_INHERITED_COMMON = &H0001  ' Output script ids for inherited and common character types if present
End Enum
Public Enum VerifyScriptFlags
    VS_ALLOW_LATIN = &H0001  ' Allow Latin in test script even if not present in locale script
End Enum

Public Enum NlsIntlDomainFlags
    IDN_ALLOW_UNASSIGNED = &H01  ' Allow unassigned "query" behavior per RFC 3454
    IDN_USE_STD3_ASCII_RULES = &H02  ' Enforce STD3 ASCII restrictions for legal characters
    IDN_EMAIL_ADDRESS = &H04  ' Enable EAI algorithmic fallback for email local parts behavior
    IDN_RAW_PUNYCODE = &H08  ' Disable validation and mapping of punycode.
End Enum

Public Enum NlsMuiLangFlags
    MUI_FULL_LANGUAGE = &H01
    MUI_PARTIAL_LANGUAGE = &H02
    MUI_LIP_LANGUAGE = &H04
    MUI_LANGUAGE_INSTALLED = &H20
    MUI_LANGUAGE_LICENSED = &H40
End Enum

Public Enum DEVELOPER_DRIVE_ENABLEMENT_STATE
    DeveloperDriveEnablementStateError
    DeveloperDriveEnabled
    DeveloperDriveDisabledBySystemPolicy
    DeveloperDriveDisabledByGroupPolicy
End Enum

Public Enum UserCetEnvFlags
    USER_CET_ENVIRONMENT_WIN32_PROCESS = &H00000000
    USER_CET_ENVIRONMENT_SGX2_ENCLAVE = &H00000002
    USER_CET_ENVIRONMENT_VBS_ENCLAVE = &H00000010
    USER_CET_ENVIRONMENT_VBS_BASIC_ENCLAVE = &H00000011
End Enum

Public Declare PtrSafe Sub GetSystemInfo Lib "kernel32" (lpSystemInfo As SYSTEM_INFO)
Public Declare PtrSafe Sub GetNativeSystemInfo Lib "kernel32" (lpSystemInfo As SYSTEM_INFO)
Public Sub VER_SET_CONDITION(m As LongLong, t As VersionTypeMask, [TypeHint(VersionInfoConditions)] ByVal c As Byte): m = VerSetConditionMask(m, t, c): End Sub
Public Declare PtrSafe Function VerSetConditionMask Lib "kernel32" (ByVal ConditionMask As LongLong, ByVal TypeMask As VersionTypeMask, [TypeHint(VersionInfoConditions)] ByVal Condition As Byte) As LongLong
Public Declare PtrSafe Function VerifyVersionInfoA Lib "kernel32" (lpVersionInformation As OSVERSIONINFOEXA, ByVal TypeMask As VersionTypeMask, ByVal dwlConditionMask As LongLong) As BOOL
Public Declare PtrSafe Function VerifyVersionInfoW Lib "kernel32" (lpVersionInformation As OSVERSIONINFOEXW, ByVal TypeMask As VersionTypeMask, ByVal dwlConditionMask As LongLong) As BOOL
Public DeclareWide PtrSafe Function VerifyVersionInfo Lib "kernel32" Alias "VerifyVersionInfoW" (lpVersionInformation As OSVERSIONINFOEX, ByVal TypeMask As VersionTypeMask, ByVal dwlConditionMask As LongLong) As BOOL
Public Declare PtrSafe Function GetProcessorSystemCycleTime Lib "kernel32" (ByVal Group As Integer, Buffer As SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION) As BOOL
Public Declare PtrSafe Function GetPerformanceInfo Lib "psapi.dll" (pPerformanceInformation As PERFORMANCE_INFORMATION, ByVal cb As Long) As BOOL
Public Declare PtrSafe Function GetIntegratedDisplaySize Lib "kernelbase" (sizeInInches As Double) As Long
Public Declare PtrSafe Function GetOsManufacturingMode Lib "kernelbase" (pbEnabled As BOOL) As BOOL
Public Declare PtrSafe Function GetSystemWindowsDirectoryA Lib "kernel32" (ByVal lpBuffer As String, ByVal uSize As Long) As Long
Public Declare PtrSafe Function GetSystemWindowsDirectoryW Lib "kernel32" (ByVal lpBuffer As LongPtr, ByVal uSize As Long) As Long
Public DeclareWide PtrSafe Function GetSystemWindowsDirectory Lib "kernel32" Alias "GetSystemWindowsDirectoryW" (ByVal lpBuffer As String, ByVal uSize As Long) As Long
Public Declare PtrSafe Function GetSystemDirectoryA Lib "kernel32" (ByVal lpBuffer As String, ByVal uSize As Long) As Long
Public Declare PtrSafe Function GetSystemDirectoryW Lib "kernel32" (ByVal lpBuffer As LongPtr, ByVal uSize As Long) As Long
Public DeclareWide PtrSafe Function GetSystemDirectory Lib "kernel32" Alias "GetSystemDirectoryW" (ByVal lpBuffer As String, ByVal uSize As Long) As Long
Public Declare PtrSafe Function GetSystemRegistryQuota Lib "kernel32" (pdwQuotaAllowed As Long, pdwQuotaUsed As Long) As BOOL
Public Declare PtrSafe Function GetSystemDEPPolicy Lib "kernel32" () As DEP_SYSTEM_POLICY_TYPE
Public Declare PtrSafe Function GetLogicalProcessorInformation Lib "kernel32" (Buffer As SYSTEM_LOGICAL_PROCESSOR_INFORMATION, ReturnedLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetLogicalProcessorInformationEx Lib "kernel32" (ByVal Relationship As LOGICAL_PROCESSOR_RELATIONSHIP, Buffer As Any, ReturnedLength As Long) As BOOL
Public Declare PtrSafe Function IsUserCetAvailableInEnvironment Lib "kernel32" (ByVal UserCetEnvironment As UserCetEnvFlags) As BOOL
Public Declare PtrSafe Function GetSystemLeapSecondInformation Lib "kernelbase" (Enabled As BOOL, Flags As Long) As BOOL
Public Declare PtrSafe Function GetOsSafeBootMode Lib "kernelbase.dll" (Flags As Long) As BOOL
Public Declare PtrSafe Function EnumSystemFirmwareTables Lib "kernel32" (ByVal FirmwareTableProviderSignature As Long, pFirmwareTableEnumBuffer As Any, ByVal BufferSize As Long) As Long
Public Declare PtrSafe Function GetSystemFirmwareTable Lib "kernel32" (ByVal FirmwareTableProviderSignature As Long, ByVal FirmwareTableID As Long, pFirmwareTableBuffer As Any, ByVal BufferSize As Long) As Long
Public Declare PtrSafe Function DnsHostnameToComputerNameExW Lib "kernel32" (ByVal Hostname As LongPtr, ByVal ComputerName As LongPtr, nSize As Long) As BOOL
Public Declare PtrSafe Function InstallELAMCertificateInfo Lib "kernel32" (ByVal ELAMFile As LongPtr) As BOOL
Public Declare PtrSafe Function GetDeveloperDriveEnablementState Lib "api-ms-win-core-sysinfo-l1-2-6.dll" () As DEVELOPER_DRIVE_ENABLEMENT_STATE
Public Declare PtrSafe Function GetFirmwareType Lib "kernel32" (FirmwareType As FIRMWARE_TYPE) As BOOL
Public Declare PtrSafe Function GetFirmwareEnvironmentVariableA Lib "kernel32" (ByVal lpName As String, ByVal lpGuid As String, pBuffer As Any, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetFirmwareEnvironmentVariableW Lib "kernel32" (ByVal lpName As LongPtr, ByVal lpGuid As LongPtr, pBuffer As Any, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetFirmwareEnvironmentVariable Lib "kernel32" Alias "GetFirmwareEnvironmentVariableW" (ByVal lpName As String, ByVal lpGuid As String, pBuffer As Any, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetFirmwareEnvironmentVariableExA Lib "kernel32" (ByVal lpName As String, ByVal lpGuid As String, pBuffer As Any, ByVal nSize As Long, ByVal dwAttributes As UefiVariableAttributes) As Long
Public Declare PtrSafe Function GetFirmwareEnvironmentVariableExW Lib "kernel32" (ByVal lpName As LongPtr, ByVal lpGuid As LongPtr, pBuffer As Any, ByVal nSize As Long, ByVal dwAttributes As UefiVariableAttributes) As Long
Public DeclareWide PtrSafe Function GetFirmwareEnvironmentVariableEx Lib "kernel32" Alias "GetFirmwareEnvironmentVariableExW" (ByVal lpName As String, ByVal lpGuid As String, pBuffer As Any, ByVal nSize As Long, ByVal dwAttributes As UefiVariableAttributes) As Long
Public Declare PtrSafe Function SetFirmwareEnvironmentVariableA Lib "kernel32" (ByVal lpName As String, ByVal lpGuid As String, pValue As Any, ByVal nSize As Long) As BOOL
Public Declare PtrSafe Function SetFirmwareEnvironmentVariableW Lib "kernel32" (ByVal lpName As LongPtr, ByVal lpGuid As LongPtr, pValue As Any, ByVal nSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetFirmwareEnvironmentVariable Lib "kernel32" Alias "SetFirmwareEnvironmentVariableW" (ByVal lpName As String, ByVal lpGuid As String, pValue As Any, ByVal nSize As Long) As BOOL
Public Declare PtrSafe Function SetFirmwareEnvironmentVariableExA Lib "kernel32" (ByVal lpName As String, ByVal lpGuid As String, pValue As Any, ByVal nSize As Long, ByVal dwAttributes As UefiVariableAttributes) As BOOL
Public Declare PtrSafe Function SetFirmwareEnvironmentVariableExW Lib "kernel32" (ByVal lpName As LongPtr, ByVal lpGuid As LongPtr, pValue As Any, ByVal nSize As Long, ByVal dwAttributes As UefiVariableAttributes) As BOOL
Public DeclareWide PtrSafe Function SetFirmwareEnvironmentVariableEx Lib "kernel32" Alias "SetFirmwareEnvironmentVariableExW" (ByVal lpName As String, ByVal lpGuid As String, pValue As Any, ByVal nSize As Long, ByVal dwAttributes As UefiVariableAttributes) As BOOL


Public Declare PtrSafe Function GetSystemDefaultLangID Lib "kernel32" () As Integer
Public Declare PtrSafe Function GetSystemDefaultLCID Lib "kernel32" () As Long
Public DeclareWide PtrSafe Function GetSystemDefaultLocaleName Lib "kernel32" (ByVal lpLocaleName As String, ByVal cchLocaleName As Long) As Long
Public Declare PtrSafe Function GetSystemDefaultLocaleName Lib "kernel32" (ByVal lpLocaleName As LongPtr, ByVal cchLocaleName As Long) As Long
Public Declare PtrSafe Function GetSystemDefaultUILanguage Lib "kernel32" () As Integer
Public Declare PtrSafe Function GetUserDefaultLangID Lib "kernel32" () As Integer
Public Declare PtrSafe Function GetUserDefaultLCID Lib "kernel32" () As Long
Public DeclareWide PtrSafe Function GetUserDefaultLocaleName Lib "kernel32" (ByVal lpLocaleName As String, ByVal cchLocaleName As Long) As Long
Public Declare PtrSafe Function GetUserDefaultUILanguage Lib "kernel32" () As Integer
Public DeclareWide PtrSafe Function GetLocaleInfo Lib "kernel32" Alias "GetLocaleInfoW" (ByVal LCID As DefaultLocales, ByVal LCType As LCTypes, ByVal lpLCData As String, ByVal cchData As Long) As Long
Public Declare PtrSafe Function GetLocaleInfoA Lib "kernel32" (ByVal LCID As DefaultLocales, ByVal LCType As LCTypes, ByVal lpLCData As String, ByVal cchData As Long) As Long
Public Declare PtrSafe Function GetLocaleInfoW Lib "kernel32" (ByVal LCID As DefaultLocales, ByVal LCType As LCTypes, ByVal lpLCData As LongPtr, ByVal cchData As Long) As Long
Public DeclareWide PtrSafe Function GetLocaleInfoEx Lib "kernel32" (ByVal LocaleName As String, ByVal LCType As LCTypes, ByVal lpLCData As String, ByVal cchData As Long) As Long
Public Declare PtrSafe Function GetLocaleInfoEx Lib "kernel32" (ByVal LocaleName As LongPtr, ByVal LCType As LCTypes, ByVal lpLCData As LongPtr, ByVal cchData As Long) As Long
Public Declare PtrSafe Function SetLocaleInfoA Lib "kernel32" (ByVal LCID As DefaultLocales, ByVal LCType As LCTypes, ByVal lpLCData As String) As BOOL
Public Declare PtrSafe Function SetLocaleInfoW Lib "kernel32" (ByVal LCID As DefaultLocales, ByVal LCType As LCTypes, ByVal lpLCData As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetLocaleInfo Lib "kernel32" Alias "SetLocaleInfoW" (ByVal LCID As DefaultLocales, ByVal LCType As LCTypes, ByVal lpLCData As String) As BOOL
Public DeclareWide PtrSafe Function ResolveLocaleName Lib "kernel32" (Optional ByVal lpNameToResolve As String, Optional ByVal lpLocaleName As String, Optional ByVal cchLocaleName As Long = 0) As Long
Public Declare PtrSafe Function ResolveLocaleName Lib "kernel32" (Optional ByVal lpNameToResolve As LongPtr, Optional ByVal lpLocaleName As LongPtr, Optional ByVal cchLocaleName As Long = 0) As Long
Public DeclareWide PtrSafe Function LCIDToLocaleName Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal lpName As String, ByVal cchName As Long, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function LocaleNameToLCID Lib "kernel32" (ByVal LocaleName As String, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function LocaleNameToLCID Lib "kernel32" (ByVal LocaleName As LongPtr, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function GetNLSVersion Lib "kernel32" (ByVal Func As SYSNLS_FUNCTION, ByVal Locale As DefaultLocales, lpVersionInformation As NLSVERSIONINFO) As BOOL
Public Declare PtrSafe Function GetNLSVersion Lib "kernel32" (ByVal Func As SYSNLS_FUNCTION, ByVal Locale As DefaultLocales, lpVersionInformation As NLSVERSIONINFO_WIN7) As BOOL
Public DeclareWide PtrSafe Function GetNLSVersionEx Lib "kernel32" (ByVal Func As SYSNLS_FUNCTION, ByVal LocaleName As String, lpVersionInformation As NLSVERSIONINFOEX) As BOOL
Public Declare PtrSafe Function GetNLSVersionEx Lib "kernel32" (ByVal Func As SYSNLS_FUNCTION, ByVal LocaleName As LongPtr, lpVersionInformation As NLSVERSIONINFOEX) As BOOL
Public Declare PtrSafe Function GetOEMCP Lib "kernel32" () As Long
Public Declare PtrSafe Function GetACP Lib "kernel32" () As Long
Public Declare PtrSafe Function GetCPInfo Lib "kernel32" (ByVal CodePage As CodePageDefaults, lpCPInfo As CPINFO) As BOOL
Public Declare PtrSafe Function GetCPInfoExA Lib "kernel32" (ByVal CodePage As CodePageDefaults, ByVal dwFlags As Long, lpCPInfoEx As CPINFOEXA) As BOOL
Public Declare PtrSafe Function GetCPInfoExW Lib "kernel32" (ByVal CodePage As CodePageDefaults, ByVal dwFlags As Long, lpCPInfoEx As CPINFOEXW) As BOOL
Public Declare PtrSafe Function GetCPInfoEx Lib "kernel32" Alias "GetCPInfoExW" (ByVal CodePage As CodePageDefaults, ByVal dwFlags As Long, lpCPInfoEx As CPINFOEX) As BOOL
Public Declare PtrSafe Function IsValidCodePage Lib "kernel32" (ByVal CodePage As CodePageDefaults) As BOOL
Public Declare PtrSafe Function GetNumberFormatA Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As Long, ByVal lpValue As String, lpFormat As NUMBERFMTA, Optional ByVal lpNumberStr As String, Optional ByVal cchNumber As Long = 0) As Long
Public Declare PtrSafe Function GetNumberFormatW Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As Long, ByVal lpValue As LongPtr, lpFormat As NUMBERFMTW, Optional ByVal lpNumberStr As LongPtr, Optional ByVal cchNumber As Long = 0) As Long
Public DeclareWide PtrSafe Function GetNumberFormat Lib "kernel32" Alias "GetNumberFormatW" (ByVal Locale As DefaultLocales, ByVal dwFlags As Long, ByVal lpValue As String, lpFormat As NUMBERFMT, Optional ByVal lpNumberStr As String, Optional ByVal cchNumber As Long = 0) As Long
Public Declare PtrSafe Function GetNumberFormatEx Lib "kernel32" (ByVal LocaleName As LongPtr, ByVal dwFlags As Long, ByVal lpValue As LongPtr, lpFormat As NUMBERFMTW, Optional ByVal lpNumberStr As LongPtr, Optional ByVal cchNumber As Long = 0) As Long
Public DeclareWide PtrSafe Function GetNumberFormatEx Lib "kernel32" (ByVal LocaleName As String, ByVal dwFlags As Long, ByVal lpValue As String, lpFormat As NUMBERFMT, Optional ByVal lpNumberStr As String, Optional ByVal cchNumber As Long = 0) As Long
Public Declare PtrSafe Function GetCurrencyFormatA Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As Long, ByVal lpValue As String, lpFormat As CURRENCYFMTA, Optional ByVal lpCurrencyStr As String, Optional ByVal cchCurrency As Long = 0) As Long
Public Declare PtrSafe Function GetCurrencyFormatW Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As Long, ByVal lpValue As LongPtr, lpFormat As CURRENCYFMTW, Optional ByVal lpCurrencyStr As LongPtr, Optional ByVal cchCurrency As Long = 0) As Long
Public DeclareWide PtrSafe Function GetCurrencyFormat Lib "kernel32" Alias "GetCurrencyFormatW" (ByVal Locale As DefaultLocales, ByVal dwFlags As Long, ByVal lpValue As String, lpFormat As CURRENCYFMT, Optional ByVal lpCurrencyStr As String, Optional ByVal cchCurrency As Long = 0) As Long
Public DeclareWide PtrSafe Function GetCurrencyFormatEx Lib "kernel32" (ByVal LocaleName As String, ByVal dwFlags As Long, ByVal lpValue As String, lpFormat As CURRENCYFMTW, Optional ByVal lpCurrencyStr As String, Optional ByVal cchCurrency As Long = 0) As Long
Public Declare PtrSafe Function GetCurrencyFormatEx Lib "kernel32" (ByVal LocaleName As LongPtr, ByVal dwFlags As Long, ByVal lpValue As LongPtr, lpFormat As CURRENCYFMT, Optional ByVal lpCurrencyStr As LongPtr, Optional ByVal cchCurrency As Long = 0) As Long

Public Type CALDATETIME
    CalId As CALID
    Era As Long
    Year As Long
    Month As Long
    Day As Long
    DayOfWeek As Long
    Hour As Long
    Minute As Long
    Second As Long
    Tick As Long
End Type
Public Declare PtrSafe Function GetCalendarInfoA Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE, Optional ByVal lpCalData As String, Optional ByVal cchData As Long = 0, Optional lpValue As Long) As Long
Public Declare PtrSafe Function GetCalendarInfoW Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE, Optional ByVal lpCalData As LongPtr, Optional ByVal cchData As Long = 0, Optional lpValue As Long) As Long
Public DeclareWide PtrSafe Function GetCalendarInfo Lib "kernel32" Alias "GetCalendarInfoW" (ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE, Optional ByVal lpCalData As String, Optional ByVal cchData As Long = 0, Optional lpValue As Long) As Long
Public Declare PtrSafe Function SetCalendarInfoA Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE, ByVal lpCalData As String) As BOOL
Public Declare PtrSafe Function SetCalendarInfoW Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE, ByVal lpCalData As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetCalendarInfo Lib "kernel32" Alias "SetCalendarInfoW" (ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE, ByVal lpCalData As String) As BOOL
Public DeclareWide PtrSafe Function GetCalendarInfoEx Lib "kernel32" (ByVal LocaleName As String, ByVal Calendar As CALID, ByVal lpReserved As LongPtr, ByVal CalType As CALTYPE, ByVal lpCalData As String, ByVal cchData As Long = 0, Optional lpValue As Long) As Long
Public Declare PtrSafe Function GetCalendarInfoEx Lib "kernel32" (ByVal LocaleName As LongPtr, ByVal Calendar As CALID, ByVal lpReserved As LongPtr, ByVal CalType As CALTYPE, ByVal lpCalData As LongPtr, ByVal cchData As Long = 0, Optional lpValue As Long) As Long
Public Declare PtrSafe Function ConvertSystemTimeToCalDateTime Lib "kernel32" (lpSysTime As SYSTEMTIME, ByVal calId As CALID, lpCalDateTime As CALDATETIME) As BOOL

Public Declare PtrSafe Function LocalFileTimeToFileTime Lib "kernel32" (lpFileTime As FILETIME, lpLocalFileTime As FILETIME) As BOOL
Public Declare PtrSafe Function FileTimeToLocalFileTime Lib "kernel32" (lpFileTime As FILETIME, lpLocalFileTime As FILETIME) As BOOL
Public Declare PtrSafe Function FileTimeToSystemTime Lib "kernel32" (lpFileTime As FILETIME, lpSystemTime As SYSTEMTIME) As BOOL
Public Declare PtrSafe Function SystemTimeToFileTime Lib "kernel32" (lpSystemTime As SYSTEMTIME, lpFileTime As FILETIME) As BOOL
Public Declare PtrSafe Function DosDateTimeToFileTime Lib "kernel32" (ByVal wFatDate As Integer, ByVal wFatTime As Integer, lpFileTime As FILETIME) As BOOL
Public Declare PtrSafe Function FileTimeToDosDateTime Lib "kernel32" (lpFileTime As FILETIME, lpFatDate As Integer, lpFatTime As Integer) As BOOL
Public Declare PtrSafe Function SetSystemTime Lib "kernel32" (lpSystemTime As SYSTEMTIME) As BOOL
Public Declare PtrSafe Sub GetSystemTime Lib "kernel32" (lpSystemTime As SYSTEMTIME)
Public Declare PtrSafe Sub GetSystemTimeAsFileTime Lib "kernel32" (lpSystemTime As FILETIME)
Public Declare PtrSafe Sub GetSystemTimePreciseAsFileTime Lib "kernel32" (lpSystemTime As FILETIME)
Public Declare PtrSafe Function SetLocalTime Lib "kernel32" (lpSystemTime As SYSTEMTIME) As BOOL
Public Declare PtrSafe Sub GetLocalTime Lib "kernel32" (lpSystemTime As SYSTEMTIME)
Public Declare PtrSafe Function SetSystemTimeAdjustment Lib "kernel32" (ByVal dwTimeAdjustment As Long, ByVal bTimeAdjustmentDisabled As Long) As BOOL
Public Declare PtrSafe Function SetSystemTimeAdjustmentPrecise Lib "kernelbase" (ByVal dwTimeAdjustment As LongLong, ByVal bTimeAdjustmentDisabled As Long) As BOOL
Public Declare PtrSafe Function GetSystemTimeAdjustment Lib "kernel32" (lpTimeAdjustment As Long, lpTimeIncrement As Long, lpTimeAdjustmentDisabled As Long) As BOOL
Public Declare PtrSafe Function GetSystemTimeAdjustmentPrecise Lib "kernelbase" (lpTimeAdjustment As Long, lpTimeIncrement As Long, lpTimeAdjustmentDisabled As Long) As BOOL
Public Declare PtrSafe Function SystemTimeToTzSpecificLocalTime Lib "kernel32" (lpTimeZoneInformation As TIME_ZONE_INFORMATION, lpUniversalTime As SYSTEMTIME, lpLocalTime As SYSTEMTIME) As BOOL
Public Declare PtrSafe Function SystemTimeToTzSpecificLocalTimeEx Lib "kernel32" (lpTimeZoneInformation As DYNAMIC_TIME_ZONE_INFORMATION, lpUniversalTime As SYSTEMTIME, lpLocalTime As SYSTEMTIME) As BOOL
Public Declare PtrSafe Function TzSpecificLocalTimeToSystemTime Lib "kernel32" (lpTimeZoneInformation As TIME_ZONE_INFORMATION, lpLocalTime As SYSTEMTIME, lpUniversalTime As SYSTEMTIME) As BOOL
Public Declare PtrSafe Function TzSpecificLocalTimeToSystemTimeEx Lib "kernel32" (lpTimeZoneInformation As DYNAMIC_TIME_ZONE_INFORMATION, lpLocalTime As SYSTEMTIME, lpUniversalTime As SYSTEMTIME) As BOOL
Public Declare PtrSafe Function GetDynamicTimeZoneInformation Lib "kernel32" (lpTimeZoneInformation As DYNAMIC_TIME_ZONE_INFORMATION) As TIME_ZONE_ID
Public Declare PtrSafe Function SetDynamicTimeZoneInformation Lib "kernel32" (lpTimeZoneInformation As DYNAMIC_TIME_ZONE_INFORMATION) As BOOL
Public Declare PtrSafe Function GetTimeZoneInformation Lib "kernel32" (lpTimeZoneInformation As TIME_ZONE_INFORMATION) As TIME_ZONE_ID
Public Declare PtrSafe Function SetTimeZoneInformation Lib "kernel32" (lpTimeZoneInformation As TIME_ZONE_INFORMATION) As BOOL
Public Declare PtrSafe Function GetTimeZoneInformationForYear Lib "kernel32" (ByVal wYear As Integer, pdtzi As DYNAMIC_TIME_ZONE_INFORMATION, ptzi As TIME_ZONE_INFORMATION) As BOOL
Public Declare PtrSafe Function LocalFileTimeToLocalSystemTime Lib "kernel32" (timeZoneInformation As TIME_ZONE_INFORMATION, localFileTime As FILETIME, localSystemTime As SYSTEMTIME) As BOOL
Public Declare PtrSafe Function LocalSystemTimeToLocalFileTime Lib "kernel32" (timeZoneInformation As TIME_ZONE_INFORMATION, localSystemTime As SYSTEMTIME, localFileTime As FILETIME) As BOOL

Public Declare PtrSafe Function GetDateFormatA Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As DATE_FORMAT_FLAGS, lpDate As SYSTEMTIME, ByVal lpFormat As String, ByVal lpDateStr As String, ByVal cchDate As Long) As Long
Public Declare PtrSafe Function GetDateFormatW Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As DATE_FORMAT_FLAGS, lpDate As SYSTEMTIME, ByVal lpFormat As LongPtr, ByVal lpDateStr As LongPtr, ByVal cchDate As Long) As Long
Public DeclareWide PtrSafe Function GetDateFormat Lib "kernel32" Alias "GetDateFormatW" (ByVal Locale As DefaultLocales, ByVal dwFlags As DATE_FORMAT_FLAGS, lpDate As SYSTEMTIME, ByVal lpFormat As String, ByVal lpDateStr As String, ByVal cchDate As Long) As Long
Public Declare PtrSafe Function GetTimeFormatA Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As TIME_FORMAT_FLAGS, lpTime As SYSTEMTIME, ByVal lpFormat As String, ByVal lpTimeStr As String, ByVal cchTime As Long) As Long
Public Declare PtrSafe Function GetTimeFormatW Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As TIME_FORMAT_FLAGS, lpTime As SYSTEMTIME, ByVal lpFormat As LongPtr, ByVal lpTimeStr As LongPtr, ByVal cchTime As Long) As Long
Public DeclareWide PtrSafe Function GetTimeFormat Lib "kernel32" Alias "GetTimeFormatW" (ByVal Locale As DefaultLocales, ByVal dwFlags As TIME_FORMAT_FLAGS, lpTime As SYSTEMTIME, ByVal lpFormat As String, ByVal lpTimeStr As String, ByVal cchTime As Long) As Long
Public DeclareWide PtrSafe Function GetTimeFormatEx Lib "kernel32" (ByVal lpLocaleName As String, ByVal dwFlags As TIME_FORMAT_FLAGS, lpTime As SYSTEMTIME, ByVal lpFormat As String, ByVal lpTimeStr As String, ByVal cchTime As Long) As Long
Public Declare PtrSafe Function GetTimeFormatEx Lib "kernel32" (ByVal lpLocaleName As LongPtr, ByVal dwFlags As TIME_FORMAT_FLAGS, lpTime As SYSTEMTIME, ByVal lpFormat As LongPtr, ByVal lpTimeStr As LongPtr, ByVal cchTime As Long) As Long
Public DeclareWide PtrSafe Function GetDateFormatEx Lib "kernel32" (ByVal lpLocaleName As String, ByVal dwFlags As DATE_FORMAT_FLAGS, lpDate As SYSTEMTIME, ByVal lpFormat As String, ByVal lpDateStr As String, ByVal cchDate As Long) As Long
Public Declare PtrSafe Function GetDateFormatEx Lib "kernel32" (ByVal lpLocaleName As LongPtr, ByVal dwFlags As DATE_FORMAT_FLAGS, lpDate As SYSTEMTIME, ByVal lpFormat As LongPtr, ByVal lpDateStr As LongPtr, ByVal cchDate As Long) As Long


Public DeclareWide PtrSafe Function GetDurationFormat Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As Long, lpDuration As SYSTEMTIME, ByVal ullDuration As LongLong, Optional ByVal lpFormat As String, Optional ByVal lpDurationStr As String, Optional ByVal cchDuration As Long = 0) As Long
Public DeclareWide PtrSafe Function GetDurationFormat Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As Long, lpDuration As SYSTEMTIME, ByVal ullDuration As LongLong, Optional ByVal lpFormat As LongPtr, Optional ByVal lpDurationStr As String, Optional ByVal cchDuration As Long = 0) As Long
Public DeclareWide PtrSafe Function GetDurationFormatEx Lib "kernel32" (ByVal LocaleName As String, ByVal dwFlags As Long, lpDuration As SYSTEMTIME, ByVal ullDuration As LongLong, Optional ByVal lpFormat As String, Optional ByVal lpDurationStr As String, Optional ByVal cchDuration As Long = 0) As Long
Public DeclareWide PtrSafe Function GetDurationFormatEx Lib "kernel32" (ByVal LocaleName As LongPtr, ByVal dwFlags As Long, lpDuration As SYSTEMTIME, ByVal ullDuration As LongLong, Optional ByVal lpFormat As LongPtr, Optional ByVal lpDurationStr As String, Optional ByVal cchDuration As Long = 0) As Long
Public Declare PtrSafe Function EnumTimeFormatsA Lib "kernel32" (ByVal lpTimeFmtEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As TIME_FORMAT_FLAGS) As BOOL
Public Declare PtrSafe Function EnumTimeFormatsW Lib "kernel32" (ByVal lpTimeFmtEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As TIME_FORMAT_FLAGS) As BOOL
Public DeclareWide PtrSafe Function EnumTimeFormats Lib "kernel32" Alias "EnumTimeFormatsW" (ByVal lpTimeFmtEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As TIME_FORMAT_FLAGS) As BOOL
Public DeclareWide PtrSafe Function EnumTimeFormatsEx Lib "kernel32" (ByVal lpTimeFmtEnumProcEx As LongPtr, ByVal LocaleName As String, ByVal dwFlags As TIME_FORMAT_FLAGS, lParam As Any) As BOOL
Public Declare PtrSafe Function EnumDateFormatsA Lib "kernel32" (ByVal lpDateFmtEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As DATE_FORMAT_FLAGS) As BOOL
Public Declare PtrSafe Function EnumDateFormatsW Lib "kernel32" (ByVal lpDateFmtEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As DATE_FORMAT_FLAGS) As BOOL
Public DeclareWide PtrSafe Function EnumDateFormats Lib "kernel32" Alias "EnumDateFormatsW" (ByVal lpDateFmtEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As DATE_FORMAT_FLAGS) As BOOL
Public Declare PtrSafe Function EnumDateFormatsExA Lib "kernel32" (ByVal lpDateFmtEnumProcEx As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As DATE_FORMAT_FLAGS) As BOOL
Public Declare PtrSafe Function EnumDateFormatsExW Lib "kernel32" (ByVal lpDateFmtEnumProcEx As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As DATE_FORMAT_FLAGS) As BOOL
Public DeclareWide PtrSafe Function EnumDateFormatsEx Lib "kernel32" Alias "EnumDateFormatsExW" (ByVal lpDateFmtEnumProcEx As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As DATE_FORMAT_FLAGS) As BOOL
Public DeclareWide PtrSafe Function EnumDateFormatsExEx Lib "kernel32" (ByVal lpDateFmtEnumProcEx As LongPtr, ByVal LocaleName As String, ByVal dwFlags As DATE_FORMAT_FLAGS, lParam As Any) As BOOL
Public DeclareWide PtrSafe Function EnumDateFormatsExEx Lib "kernel32" (ByVal lpDateFmtEnumProcEx As LongPtr, ByVal LocaleName As LongPtr, ByVal dwFlags As DATE_FORMAT_FLAGS, lParam As Any) As BOOL
Public Declare PtrSafe Function IsValidLocale Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As LOCALE_ENUM_FLAGS) As BOOL
Public DeclareWide PtrSafe Function IsValidLocaleName Lib "kernel32" (ByVal LocaleName As String) As BOOL
Public Declare PtrSafe Function IsValidLocaleName Lib "kernel32" (ByVal LocaleName As LongPtr) As BOOL
Public Declare PtrSafe Function IsValidLanguageGroup Lib "kernel32" (ByVal LanguageGroup As LGRPID, ByVal dwFlags As NlsLanguageFlags) As BOOL
Public Declare PtrSafe Function ConvertDefaultLocale Lib "kernel32" (ByVal Locale As DefaultLocales) As Long
Public Declare PtrSafe Function GetThreadLocale Lib "kernel32" () As Long
Public Declare PtrSafe Function SetThreadLocale Lib "kernel32" (ByVal Locale As DefaultLocales) As BOOL
Public Declare PtrSafe Function GetThreadUILanguage Lib "kernel32" () As Integer
Public Declare PtrSafe Function SetThreadUILanguage Lib "kernel32" ([TypeHint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
Public DeclareWide PtrSafe Function GetSystemPreferredUILanguages Lib "kernel32" ([TypeHint(MUI_ENUM_FLAGS, NlsFileMuiPathFlags)] ByVal dwFlags As Long, ByRef pulNumLanguages As Long, Optional ByVal pwszLanguagesBuffer As String, Optional ByRef pcchLanguagesBuffer As Long = 0) As BOOL
Public DeclareWide PtrSafe Function GetUserPreferredUILanguages Lib "kernel32" ([TypeHint(MUI_ENUM_FLAGS)] ByVal dwFlags As Long, ByRef pulNumLanguages As Long, Optional ByVal pwszLanguagesBuffer As String, Optional ByRef pcchLanguagesBuffer As Long = 0) As BOOL
Public DeclareWide PtrSafe Function GetUILanguageInfo Lib "kernel32" (ByVal dwFlags As MUI_ENUM_FLAGS, ByVal pwmszLanguage As String, ByVal pwszFallbackLanguages As String, pcchFallbackLanguages As Long, pAttributes As NlsMuiLangFlags) As BOOL
Public DeclareWide PtrSafe Function GetThreadPreferredUILanguages Lib "kernel32" ([TypeHint(MUI_ENUM_FLAGS, GTUILANG_FLAGS)] ByVal dwFlags As Long, ByRef pulNumLanguages As Long, Optional ByVal pwszLanguagesBuffer As String, Optional ByRef pcchLanguagesBuffer As Long = 0) As BOOL
Public DeclareWide PtrSafe Function SetThreadPreferredUILanguages Lib "kernel32" ([TypeHint(MUI_ENUM_FLAGS, STUILANG_FLAGS)] ByVal dwFlags As Long, Optional ByVal pwszLanguagesBuffer As String, Optional ByRef pulNumLanguages As Long) As BOOL
Public Declare PtrSafe Function GetThreadPreferredUILanguages Lib "kernel32" ([TypeHint(MUI_ENUM_FLAGS, GTUILANG_FLAGS)] ByVal dwFlags As Long, ByRef pulNumLanguages As Long, Optional ByVal pwszLanguagesBuffer As LongPtr, Optional ByRef pcchLanguagesBuffer As Long = 0) As BOOL
Public Declare PtrSafe Function SetThreadPreferredUILanguages Lib "kernel32" ([TypeHint(MUI_ENUM_FLAGS, STUILANG_FLAGS)] ByVal dwFlags As Long, Optional ByVal pwszLanguagesBuffer As LongPtr, Optional ByRef pulNumLanguages As Long) As BOOL
Public DeclareWide PtrSafe Function SetThreadPreferredUILanguages2 Lib "kernel32" ([TypeHint(MUI_ENUM_FLAGS, GTUILANG_FLAGS)] ByVal flags As Long, ByVal languages As String, numLanguagesSet As Long, snapshot As LongPtr) As BOOL
Public Declare PtrSafe Sub RestoreThreadPreferredUILanguages Lib "kernel32" (ByVal snapshot As LongPtr)
Public DeclareWide PtrSafe Function GetProcessPreferredUILanguages Lib "kernel32" (ByVal dwFlags As MUI_ENUM_FLAGS, ByRef pulNumLanguages As Long, Optional ByVal pwszLanguagesBuffer As String, Optional ByRef pcchLanguagesBuffer As Long = 0) As BOOL
Public DeclareWide PtrSafe Function SetProcessPreferredUILanguages Lib "kernel32" (ByVal dwFlags As MUI_ENUM_FLAGS, Optional ByVal pwszLanguagesBuffer As String, Optional ByRef pulNumLanguages As Long) As BOOL
Public Declare PtrSafe Function GetProcessPreferredUILanguages Lib "kernel32" (ByVal dwFlags As MUI_ENUM_FLAGS, ByRef pulNumLanguages As Long, Optional ByVal pwszLanguagesBuffer As LongPtr, Optional ByRef pcchLanguagesBuffer As Long = 0) As BOOL
Public Declare PtrSafe Function SetProcessPreferredUILanguages Lib "kernel32" (ByVal dwFlags As MUI_ENUM_FLAGS, Optional ByVal pwszLanguagesBuffer As LongPtr, Optional ByRef pulNumLanguages As Long) As BOOL
Public Declare PtrSafe Function EnumSystemLocalesA Lib "kernel32" (ByVal lpLocaleEnumProc As LongPtr, ByVal dwFlags As LOCALE_ENUM_FLAGS) As BOOL
Public Declare PtrSafe Function EnumSystemLocalesW Lib "kernel32" (ByVal lpLocaleEnumProc As LongPtr, ByVal dwFlags As LOCALE_ENUM_FLAGS) As BOOL
Public DeclareWide PtrSafe Function EnumSystemLocales Lib "kernel32" Alias "EnumSystemLocalesW" (ByVal lpLocaleEnumProc As LongPtr, ByVal dwFlags As LOCALE_ENUM_FLAGS) As BOOL
Public Declare PtrSafe Function EnumSystemLocalesEx Lib "kernel32" (ByVal lpLocaleEnumProcEx As LongPtr, ByVal dwFlags As LOCALE_ENUM_FLAGS, lParam As Any, ByVal lpReserved As LongPtr) As BOOL
Public Declare PtrSafe Function EnumSystemCodePagesA Lib "kernel32" (ByVal lpCodePageEnumProc As LongPtr, ByVal dwFlags As CODEPAGE_ENUM_FLAGS) As BOOL
Public Declare PtrSafe Function EnumSystemCodePagesW Lib "kernel32" (ByVal lpCodePageEnumProc As LongPtr, ByVal dwFlags As CODEPAGE_ENUM_FLAGS) As BOOL
Public DeclareWide PtrSafe Function EnumSystemCodePages Lib "kernel32" Alias "EnumSystemCodePagesW" (ByVal lpCodePageEnumProc As LongPtr, ByVal dwFlags As CODEPAGE_ENUM_FLAGS) As BOOL
Public Declare PtrSafe Function EnumUILanguagesA Lib "kernel32" (ByVal lpUILanguageEnumProc As LongPtr, ByVal dwFlags As MUI_ENUM_FLAGS, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumUILanguagesW Lib "kernel32" (ByVal lpUILanguageEnumProc As LongPtr, ByVal dwFlags As MUI_ENUM_FLAGS, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumUILanguages Lib "kernel32" Alias "EnumUILanguagesW" (ByVal lpUILanguageEnumProc As LongPtr, ByVal dwFlags As MUI_ENUM_FLAGS, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumLanguageGroupLocalesA Lib "kernel32" (ByVal lpLangGroupLocaleEnumProc As LongPtr, ByVal LanguageGroup As LGRPID, ByVal dwFlags As Long, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumLanguageGroupLocalesW Lib "kernel32" (ByVal lpLangGroupLocaleEnumProc As LongPtr, ByVal LanguageGroup As LGRPID, ByVal dwFlags As Long, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumLanguageGroupLocales Lib "kernel32" Alias "EnumLanguageGroupLocalesW" (ByVal lpLangGroupLocaleEnumProc As LongPtr, ByVal LanguageGroup As LGRPID, ByVal dwFlags As Long, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumSystemLanguageGroupsA Lib "kernel32" (ByVal lpLanguageGroupEnumProc As LongPtr, ByVal dwFlags As NlsLanguageFlags, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumSystemLanguageGroupsW Lib "kernel32" (ByVal lpLanguageGroupEnumProc As LongPtr, ByVal dwFlags As NlsLanguageFlags, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumSystemLanguageGroups Lib "kernel32" Alias "EnumSystemLanguageGroupsW" (ByVal lpLanguageGroupEnumProc As LongPtr, ByVal dwFlags As NlsLanguageFlags, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumCalendarInfoA Lib "kernel32" (ByVal lpCalInfoEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE) As BOOL
Public Declare PtrSafe Function EnumCalendarInfoW Lib "kernel32" (ByVal lpCalInfoEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE) As BOOL
Public DeclareWide PtrSafe Function EnumCalendarInfo Lib "kernel32" Alias "EnumCalendarInfoW" (ByVal lpCalInfoEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE) As BOOL
Public Declare PtrSafe Function EnumCalendarInfoExA Lib "kernel32" (ByVal lpCalInfoEnumProcEx As LongPtr, ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE) As BOOL
Public Declare PtrSafe Function EnumCalendarInfoExW Lib "kernel32" (ByVal lpCalInfoEnumProcEx As LongPtr, ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE) As BOOL
Public DeclareWide PtrSafe Function EnumCalendarInfoEx Lib "kernel32" Alias "EnumCalendarInfoExW" (ByVal lpCalInfoEnumProcEx As LongPtr, ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE) As BOOL
Public Declare PtrSafe Function EnumCalendarInfoExEx Lib "kernel32" (ByVal lpCalInfoEnumProcExEx As LongPtr, ByVal LocaleName As String, ByVal Calendar As CALID, ByVal lpReserved As LongPtr, ByVal CalType As CALTYPE, lParam As Any) As BOOL
Public Declare PtrSafe Function EnumCalendarInfoExEx Lib "kernel32" (ByVal lpCalInfoEnumProcExEx As LongPtr, ByVal LocaleName As LongPtr, ByVal Calendar As CALID, ByVal lpReserved As LongPtr, ByVal CalType As CALTYPE, lParam As Any) As BOOL
Public Declare PtrSafe Function EnumSystemGeoID Lib "kernel32" (ByVal GeoClass As SYSGEOCLASS, ByVal ParentGeoId As Long, ByVal lpGeoEnumProc As LongPtr) As BOOL
Public Declare PtrSafe Function EnumSystemGeoNames Lib "kernel32" (ByVal GeoClass As SYSGEOCLASS, ByVal lpGeoEnumProc As LongPtr, Optional ByVal data As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetUserGeoName Lib "kernel32" (ByVal GeoName As String) As BOOL
Public Declare PtrSafe Function SetUserGeoName Lib "kernel32" (ByVal GeoName As LongPtr) As BOOL
Public Declare PtrSafe Function SetUserGeoID Lib "kernel32" (ByVal GeoId As Long) As BOOL
Public Declare PtrSafe Function GetUserGeoID Lib "kernel32" (ByVal GeoClass As SYSGEOCLASS) As Long
Public DeclareWide PtrSafe Function GetUserDefaultGeoName Lib "kernel32" (ByVal geoName As String, ByVal geoNameCount As Long) As Long
Public Declare PtrSafe Function GetGeoInfoA Lib "kernel32" (ByVal Location As Long, ByVal GeoType As SYSGEOTYPE, ByVal lpGeoData As String, ByVal cchData As Long, [TypeHint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As Long
Public Declare PtrSafe Function GetGeoInfoW Lib "kernel32" (ByVal Location As Long, ByVal GeoType As SYSGEOTYPE, ByVal lpGeoData As LongPtr, ByVal cchData As Long, [TypeHint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As Long
Public DeclareWide PtrSafe Function GetGeoInfo Lib "kernel32" Alias "GetGeoInfoW" (ByVal Location As Long, ByVal GeoType As SYSGEOTYPE, ByVal lpGeoData As String, ByVal cchData As Long, [TypeHint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As Long
Public DeclareWide PtrSafe Function GetGeoInfoEx Lib "kernel32" (ByVal Location As String, ByVal GeoType As SYSGEOTYPE, ByVal geoData As String, ByVal geoDataCount As Long) As Long
Public Declare PtrSafe Function CompareStringW Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwCmpFlags As COMPARE_FLAGS, ByVal lpString1 As LongPtr, ByVal cchCount1 As Long, ByVal lpString2 As LongPtr, ByVal cchCount2 As Long) As CSTR_RETURNS
Public DeclareWide PtrSafe Function CompareString Lib "kernel32" Alias "CompareStringW" (ByVal Locale As DefaultLocales, ByVal dwCmpFlags As COMPARE_FLAGS, ByVal lpString1 As String, ByVal cchCount1 As Long, ByVal lpString2 As String, ByVal cchCount2 As Long) As CSTR_RETURNS
Public DeclareWide PtrSafe Function CompareStringEx Lib "kernel32" (ByVal lpLocaleName As String, ByVal dwCmpFlags As COMPARE_FLAGS, ByVal lpString1 As String, ByVal cchCount1 As Long, ByVal lpString2 As String, ByVal cchCount2 As Long, lpVersionInformation As NLSVERSIONINFOEX, ByVal lpReserved As LongPtr, ByVal lParam As LongPtr) As CSTR_RETURNS
Public DeclareWide PtrSafe Function CompareStringOrdinal Lib "kernel32" (ByVal lpString1 As String, ByVal cchCount1 As Long, ByVal lpString2 As String, ByVal cchCount2 As Long, ByVal bIgnoreCase As BOOL) As Long
Public Declare PtrSafe Function GetStringTypeA Lib "kernel32" (ByVal dwInfoType As GST_Class, ByVal lpSrcStr As String, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public Declare PtrSafe Function GetStringTypeW Lib "kernel32" (ByVal dwInfoType As GST_Class, ByVal lpSrcStr As LongPtr, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public DeclareWide PtrSafe Function GetStringType Lib "kernel32" Alias "GetStringTypeW" (ByVal dwInfoType As GST_Class, ByVal lpSrcStr As String, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public Declare PtrSafe Function GetStringTypeExA Lib "kernel32" (ByVal lcid As Long, ByVal dwInfoType As GST_Class, ByVal lpSrcStr As String, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public Declare PtrSafe Function GetStringTypeExW Lib "kernel32" (ByVal lcid As Long, ByVal dwInfoType As GST_Class, ByVal lpSrcStr As LongPtr, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public DeclareWide PtrSafe Function GetStringTypeEx Lib "kernel32" Alias "GetStringTypeExW" (ByVal lcid As Long, ByVal dwInfoType As GST_Class, ByVal lpSrcStr As String, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public Declare PtrSafe Function FoldStringA Lib "kernel32" (ByVal dwMapFlags As LocaleIndMappingFlags, ByVal lpSrcStr As String, ByVal cchSrc As Long, ByVal lpDestStr As String, ByVal cchDest As Long) As Long
Public Declare PtrSafe Function FoldStringW Lib "kernel32" (ByVal dwMapFlags As LocaleIndMappingFlags, ByVal lpSrcStr As LongPtr, ByVal cchSrc As Long, ByVal lpDestStr As LongPtr, ByVal cchDest As Long) As Long
Public DeclareWide PtrSafe Function FoldString Lib "kernel32" Alias "FoldStringW" (ByVal dwMapFlags As LocaleIndMappingFlags, ByVal lpSrcStr As String, ByVal cchSrc As Long, ByVal lpDestStr As String, ByVal cchDest As Long) As Long
Public Declare PtrSafe Function LCMapStringA Lib "kernel32" (ByVal Locale As DefaultLocales, [TypeHint(LCMAP_FLAGS, COMPARE_FLAGS)] ByVal dwMapFlags As Long, ByVal lpSrcStr As String, ByVal cchSrc As Long, ByVal lpDestStr As String, ByVal cchDest As Long) As Long
Public Declare PtrSafe Function LCMapStringW Lib "kernel32" (ByVal Locale As DefaultLocales, [TypeHint(LCMAP_FLAGS, COMPARE_FLAGS)] ByVal dwMapFlags As Long, ByVal lpSrcStr As LongPtr, ByVal cchSrc As Long, ByVal lpDestStr As LongPtr, ByVal cchDest As Long) As Long
Public DeclareWide PtrSafe Function LCMapString Lib "kernel32" Alias "LCMapStringW" (ByVal Locale As DefaultLocales, [TypeHint(LCMAP_FLAGS, COMPARE_FLAGS)] ByVal dwMapFlags As Long, ByVal lpSrcStr As String, ByVal cchSrc As Long, ByVal lpDestStr As String, ByVal cchDest As Long) As Long
Public DeclareWide PtrSafe Function LCMapStringEx Lib "kernel32" (ByVal lpLocaleName As String, [TypeHint(LCMAP_FLAGS, COMPARE_FLAGS)] ByVal dwMapFlags As Long, ByVal lpSrcStr As String, ByVal cchSrc As Long, ByVal lpDestStr As LongPtr, ByVal cchDest As Long, lpVersionInformation As NLSVERSIONINFO, Optional ByVal lpReserved As LongPtr, Optional ByVal sortHandle As LongPtr) As Long
Public Declare PtrSafe Function IsDBCSLeadByte Lib "kernel32" (ByVal bTestChar As Byte) As BOOL
Public Declare PtrSafe Function IsDBCSLeadByteEx Lib "kernel32" (ByVal CodePage As CodePageDefaults, ByVal bTestChar As Byte) As BOOL
Public Declare PtrSafe Function MultiByteToWideChar Lib "kernel32" (ByVal CodePage As CodePageDefaults, ByVal dwFlags As MBWC_Flags, ByVal lpMultiByteStr As LongPtr, ByVal cchMultiByte As Long, ByVal lpWideCharStr As LongPtr, ByVal cchWideChar As Long) As Long
Public Declare PtrSafe Function WideCharToMultiByte Lib "kernel32" (ByVal CodePage As CodePageDefaults, ByVal dwFlags As WCMB_Flags, ByVal lpWideCharStr As LongPtr, ByVal cchWideChar As Long, ByVal lpMultiByteStr As LongPtr, ByVal cbMultiByte As Long, Optional ByVal lpDefaultChar As LongPtr, Optional lpUsedDefaultChar As BOOL) As Long
Public DeclareWide PtrSafe Function LoadStringByReference Lib "kernelbase" (ByVal dwFlags As LoadStrByRefFlags, ByVal Language As String, ByVal SourceString As String, ByVal Buffer As String, ByVal cchBuffer As Long, Optional ByVal Directory As String, Optional ByRef pcchBufferOut As Long) As BOOL
Public DeclareWide PtrSafe Function FindNLSString Lib "kernel32" (ByVal Locale As DefaultLocales, [TypeHint(NlsFindStrFlags, COMPARE_FLAGS)] ByVal dwFindNLSStringFlags As Long, ByVal lpStringSource As String, ByVal cchSource As Long, ByVal lpStringValue As String, ByVal cchValue As Long, Optional pcchFound As Long) As Long
Public DeclareWide PtrSafe Function FindNLSStringEx Lib "kernel32" (ByVal Locale As DefaultLocales, [TypeHint(NlsFindStrFlags, COMPARE_FLAGS)] ByVal dwFindNLSStringFlags As Long, ByVal lpStringSource As String, ByVal cchSource As Long, ByVal lpStringValue As String, ByVal cchValue As Long, pcchFound As Long, lpVersionInformation As NLSVERSIONINFO, Optional ByVal lpReserved As LongPtr, Optional ByVal sortHandle As LongPtr) As Long
Public DeclareWide PtrSafe Function IsNLSDefinedString Lib "kernel32" (ByVal Fn As SYSNLS_FUNCTION, ByVal dwFlags As Long, lpVersionInformation As NLSVERSIONINFO, ByVal lpString As String, ByVal cchStr As Long) As BOOL
Public DeclareWide PtrSafe Function NormalizeString Lib "kernel32" (ByVal NormForm As NORM_FORM, ByVal lpSrcString As String, ByVal cwSrcLength As Long, ByVal lpDstString As String, ByVal cwDstLength As Long) As Long
Public DeclareWide PtrSafe Function IsNormalizedString Lib "kernel32" (ByVal NormForm As NORM_FORM, ByVal lpString As String, ByVal cwLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetStringScripts Lib "kernel32" (ByVal dwFlags As GetStringScriptFlags, ByVal lpString As String, ByVal cchString As Long, ByVal lpScripts As String, ByVal cchScripts As Long) As Long
Public DeclareWide PtrSafe Function VerifyScripts Lib "kernel32" (ByVal dwFlags As VerifyScriptFlags, ByVal lpLocaleScripts As String, ByVal cchLocaleScripts As Long, ByVal lpTestScripts As String, ByVal cchTestScripts As Long) As BOOL
Public DeclareWide PtrSafe Function IdnToAscii Lib "kernel32" (ByVal dwFlags As NlsIntlDomainFlags, ByVal lpUnicodeCharStr As String, ByVal cchUnicodeChar As Long, ByVal lpASCIICharStr As String, ByVal cchASCIIChar As Long) As Long
Public DeclareWide PtrSafe Function IdnToUnicode Lib "kernel32" (ByVal dwFlags As NlsIntlDomainFlags, ByVal lpASCIICharStr As String, ByVal cchASCIIChar As Long, ByVal lpUnicodeCharStr As String, ByVal cchUnicodeChar As Long) As Long
Public DeclareWide PtrSafe Function IdnToNameprepUnicode Lib "kernel32" (ByVal dwFlags As NlsIntlDomainFlags, ByVal lpUnicodeCharStr As String, ByVal cchUnicodeChar As Long, ByVal lpNameprepCharStr As String, ByVal cchNameprepChar As Long) As Long
Public DeclareWide PtrSafe Function NotifyUILanguageChange Lib "kernel32" (ByVal dwFlags As Long, ByVal pcwstrNewLanguage As String, ByVal pcwstrPreviousLanguage As String, ByVal dwReserved As Long, Optional pdwStatusRtrn As Long) As BOOL
Public DeclareWide PtrSafe Function GetFileMUIPath Lib "kernel32" ([TypeHint(NlsFileMuiPathFlags, MUI_ENUM_FLAGS)] ByVal dwFlags As Long, ByVal pcwszFilePath As String, ByVal pwszLanguage As String, pcchLanguage As Long, ByVal pwszFileMUIPath As String, pcchFileMUIPath As Long, pululEnumerator As LongLong) As BOOL
[Description("Note: While this outputs a FILEMUIINFO type, various data follows it in memory. You must use a byte buffer, and then can copy the first sizeof(FILEMUIINFO) bytes into one.")]
Public DeclareWide PtrSafe Function GetFileMUIInfo Lib "kernel32" (ByVal dwFlags As NlsFileMuiQueryType, ByVal pcwszFilePath As String, pFileMUIInfo As Any, pcbFileMUIInfo As Long) As BOOL



Public Declare PtrSafe Function SetTapePosition Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwPositionType As TapeSetPositionMethods, ByVal dwPartition As Long, ByVal dwOffsetLow As Long, ByVal dwOffsetHigh As Long, ByVal bImmediate As BOOL) As Long
Public Declare PtrSafe Function GetTapePosition Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwPositionType As TapeGetPositionTypes, lpdwPartition As Long, lpdwOffsetLow As Long, lpdwOffsetHigh As Long) As Long
Public Declare PtrSafe Function PrepareTape Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwOperation As TapePrepareOperations, ByVal bImmediate As BOOL) As Long
Public Declare PtrSafe Function EraseTape Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwEraseType As TapeEraseTypes, ByVal bImmediate As BOOL) As Long
Public Declare PtrSafe Function CreateTapePartition Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwPartitionMethod As TapeCreatePartitionMethod, ByVal dwCount As Long, ByVal dwSize As Long) As Long
Public Declare PtrSafe Function WriteTapemark Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwTapemarkType As TapeWriteMarks, ByVal dwTapemarkCount As Long, ByVal bImmediate As BOOL) As Long
Public Declare PtrSafe Function GetTapeStatus Lib "kernel32" (ByVal hDevice As LongPtr) As Long
Public Declare PtrSafe Function GetTapeParameters Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwOperation As GetTapeParameterOperations, lpdwSize As Long, lpTapeInformation As Any) As Long
Public Declare PtrSafe Function SetTapeParameters Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwOperation As SetTapeParameterOperations, lpTapeInformation As Any) As Long


Public Declare PtrSafe Function CreateActCtxA Lib "kernel32" (pActCtx As ACTCTXA) As LongPtr
Public Declare PtrSafe Function CreateActCtxW Lib "kernel32" (pActCtx As ACTCTXW) As LongPtr
Public DeclareWide PtrSafe Function CreateActCtx Lib "kernel32" Alias "CreateActCtxW" (pActCtx As ACTCTX) As LongPtr
Public Declare PtrSafe Sub AddRefActCtx Lib "kernel32" (ByVal hActCtx As LongPtr)
Public Declare PtrSafe Sub ReleaseActCtx Lib "kernel32" (ByVal hActCtx As LongPtr)
Public Declare PtrSafe Function ZombifyActCtx Lib "kernel32" (ByVal hActCtx As LongPtr) As BOOL
Public Declare PtrSafe Function ActivateActCtx Lib "kernel32" (ByVal hActCtx As LongPtr, lpCookie As LongPtr) As BOOL
Public Declare PtrSafe Function DeactivateActCtx Lib "kernel32" (ByVal dwFlags As DeactivateActCtxFlags, ByVal lpCookie As LongPtr) As BOOL
Public Declare PtrSafe Function GetCurrentActCtx Lib "kernel32" (lphActCtx As LongPtr) As BOOL
Public Declare PtrSafe Function FindActCtxSectionStringA Lib "kernel32" (ByVal dwFlags As ActivationContextKeyedDataFlags, lpExtensionGuid As UUID, ByVal ulSectionId As ActivationContextSections, ByVal lpStringToFind As String, ReturnedData As ACTCTX_SECTION_KEYED_DATA) As BOOL
Public Declare PtrSafe Function FindActCtxSectionStringW Lib "kernel32" (ByVal dwFlags As ActivationContextKeyedDataFlags, lpExtensionGuid As UUID, ByVal ulSectionId As ActivationContextSections, ByVal lpStringToFind As LongPtr, ReturnedData As ACTCTX_SECTION_KEYED_DATA) As BOOL
Public DeclareWide PtrSafe Function FindActCtxSectionString Lib "kernel32" Alias "FindActCtxSectionStringW" (ByVal dwFlags As ActivationContextKeyedDataFlags, lpExtensionGuid As UUID, ByVal ulSectionId As ActivationContextSections, ByVal lpStringToFind As String, ReturnedData As ACTCTX_SECTION_KEYED_DATA) As BOOL
Public Declare PtrSafe Function FindActCtxSectionGuid Lib "kernel32" (ByVal dwFlags As ActivationContextKeyedDataFlags, lpExtensionGuid As UUID, ByVal ulSectionId As ActivationContextSections, lpGuidToFind As UUID, ReturnedData As ACTCTX_SECTION_KEYED_DATA) As BOOL
'doesnt exist Public Declare PtrSafe Function QueryActCtxA Lib "kernel32" (ByVal dwFlags As QueryActivationContextFlags, ByVal hActCtx As LongPtr, pvSubInstance As Any, ByVal ulInfoClass As ACTIVATION_CONTEXT_INFO_CLASS, pvBuffer As Any, Optional ByVal cbBuffer As LongPtr, Optional ByRef pcbWrittenOrRequired As LongPtr) As BOOL
Public Declare PtrSafe Function QueryActCtxW Lib "kernel32" (ByVal dwFlags As QueryActivationContextFlags, ByVal hActCtx As LongPtr, pvSubInstance As Any, ByVal ulInfoClass As ACTIVATION_CONTEXT_INFO_CLASS, pvBuffer As Any, Optional ByVal cbBuffer As LongPtr, Optional ByRef pcbWrittenOrRequired As LongPtr) As BOOL
Public DeclareWide PtrSafe Function QueryActCtx Lib "kernel32" Alias "QueryActCtxW" (ByVal dwFlags As QueryActivationContextFlags, ByVal hActCtx As LongPtr, pvSubInstance As Any, ByVal ulInfoClass As ACTIVATION_CONTEXT_INFO_CLASS, pvBuffer As Any, Optional ByVal cbBuffer As LongPtr, Optional ByRef pcbWrittenOrRequired As LongPtr) As BOOL
'doesnt exist Public Declare PtrSafe Function QueryActCtxSettingsA Lib "kernel32" (ByVal dwFlags As Long, ByVal hActCtx As LongPtr, ByVal settingsNameSpace As LongPtr, ByVal settingName As String, ByVal pvBuffer As LongPtr, ByVal dwBuffer As LongPtr, Optional ByRef pcbWrittenOrRequired As LongPtr) As BOOL
Public Declare PtrSafe Function QueryActCtxSettingsW Lib "kernel32" (ByVal dwFlags As Long, ByVal hActCtx As LongPtr, ByVal settingsNameSpace As LongPtr, ByVal settingName As LongPtr, ByVal pvBuffer As LongPtr, ByVal dwBuffer As LongPtr, Optional ByRef pcbWrittenOrRequired As LongPtr) As BOOL
Public DeclareWide PtrSafe Function QueryActCtxSettings Lib "kernel32" Alias "QueryActCtxSettingsW" (ByVal dwFlags As Long, ByVal hActCtx As LongPtr, ByVal settingsNameSpace As LongPtr, ByVal settingName As String, ByVal pvBuffer As LongPtr, ByVal dwBuffer As LongPtr, Optional ByRef pcbWrittenOrRequired As LongPtr) As BOOL



Public Declare PtrSafe Function GetActiveProcessorGroupCount Lib "kernel32" () As Integer
Public Declare PtrSafe Function GetMaximumProcessorGroupCount Lib "kernel32" () As Integer
Public Declare PtrSafe Function GetActiveProcessorCount Lib "kernel32" (ByVal GroupNumber As Integer) As Long
Public Declare PtrSafe Function GetMaximumProcessorCount Lib "kernel32" (ByVal GroupNumber As Integer) As Long
Public Declare PtrSafe Function GetNumaProcessorNode Lib "kernel32" (ByVal Processor As Byte, NodeNumber As Byte) As BOOL
Public Declare PtrSafe Function GetNumaNodeNumberFromHandle Lib "kernel32" (ByVal hFile As LongPtr, NodeNumber As Integer) As BOOL
Public Declare PtrSafe Function GetNumaProcessorNodeEx Lib "kernel32" (Processor As PROCESSOR_NUMBER, NodeNumber As Integer) As BOOL
Public Declare PtrSafe Function GetNumaNodeProcessorMask Lib "kernel32" (ByVal Node As Byte, ProcessorMask As LongLong) As BOOL
Public Declare PtrSafe Function GetNumaAvailableMemoryNode Lib "kernel32" (ByVal Node As Byte, AvailableBytes As LongLong) As BOOL
Public Declare PtrSafe Function GetNumaAvailableMemoryNodeEx Lib "kernel32" (ByVal Node As Integer, AvailableBytes As LongLong) As BOOL
Public Declare PtrSafe Function GetNumaProximityNode Lib "kernel32" (ByVal ProximityId As Long, NodeNumber As Byte) As BOOL

'realtimeapiset.h - 100% coverage
Public Declare PtrSafe Function QueryThreadCycleTime Lib "kernel32" (ByVal ThreadHandle As LongPtr, CycleTime As LongLong) As BOOL
Public Declare PtrSafe Function QueryProcessCycleTime Lib "kernel32" (ByVal ProcessHandle As LongPtr, CycleTime As LongLong) As BOOL
Public Declare PtrSafe Function QueryIdleProcessorCycleTime Lib "kernel32" (BufferLength As Long, ProcessorIdleCycleTime As LongLong) As BOOL
Public Declare PtrSafe Function QueryIdleProcessorCycleTimeEx Lib "kernel32" (ByVal Group As Integer, BufferLength As Long, ProcessorIdleCycleTime As LongLong) As BOOL
Public Declare PtrSafe Sub QueryInterruptTimePrecise Lib "kernel32" (lpInterruptTimePrecise As LongLong)
Public Declare PtrSafe Sub QueryUnbiasedInterruptTimePrecise Lib "kernel32" (lpUnbiasedInterruptTimePrecise As LongLong)
Public Declare PtrSafe Sub QueryInterruptTime Lib "kernel32" (lpInterruptTime As LongLong)
Public Declare PtrSafe Function QueryUnbiasedInterruptTime Lib "kernel32" (UnbiasedTime As LongLong) As BOOL
Public Declare PtrSafe Function QueryAuxiliaryCounterFrequency Lib "kernel32" (lpAuxiliaryCounterFrequency As LongLong) As Long
Public Declare PtrSafe Function ConvertAuxiliaryCounterToPerformanceCounter Lib "kernel32" (ByVal ullAuxiliaryCounterValue As LongLong, lpPerformanceCounterValue As LongLong, Optional lpConversionError As LongLong) As Long
Public Declare PtrSafe Function ConvertPerformanceCounterToAuxiliaryCounter Lib "kernel32" (ByVal ullPerformanceCounterValue As LongLong, lpAuxiliaryCounterValue As LongLong, Optional lpConversionError As LongLong) As Long


'TlHelp32.h - 100% coverage + custom ANSI alternates
Public Declare PtrSafe Function CreateToolhelp32Snapshot Lib "kernel32" (ByVal dwFlags As TH32CS_Flags, ByVal th32ProcessID As Long) As LongPtr
Public Declare PtrSafe Function Heap32ListFirst Lib "kernel32" (ByVal hSnapshot As LongPtr, lphl As HEAPLIST32) As BOOL
Public Declare PtrSafe Function Heap32ListNext Lib "kernel32" (ByVal hSnapshot As LongPtr, lphl As HEAPLIST32) As BOOL
Public Declare PtrSafe Function Heap32First Lib "kernel32" (lphe As HEAPENTRY32, ByVal th32ProcessID As Long, ByVal th32HeapID As LongPtr) As BOOL
Public Declare PtrSafe Function Heap32Next Lib "kernel32" (lphe As HEAPENTRY32) As BOOL
Public Declare PtrSafe Function Toolhelp32ReadProcessMemory Lib "kernel32" (ByVal th32ProcessID As Long, ByVal lpBaseAddress As LongPtr, lpBuffer As Any, ByVal cbRead As LongPtr, lpNumberOfBytesRead As LongPtr) As BOOL
Public DeclareWide PtrSafe Function Process32FirstA Lib "kernel32" Alias "Process32First" (ByVal hSnapshot As LongPtr, lppe As PROCESSENTRY32A) As BOOL
Public DeclareWide PtrSafe Function Process32NextA Lib "kernel32" Alias "Process32Next" (ByVal hSnapshot As LongPtr, lppe As PROCESSENTRY32A) As BOOL
Public Declare PtrSafe Function Process32FirstW Lib "kernel32" (ByVal hSnapshot As LongPtr, lppe As PROCESSENTRY32W) As BOOL
Public Declare PtrSafe Function Process32NextW Lib "kernel32" (ByVal hSnapshot As LongPtr, lppe As PROCESSENTRY32W) As BOOL
[Description("NOTE: This definition differs from the Windows SDK definition in mapping to the Unicode version, per WinDevLib standards. The ANSI version can be accessed with Process32FirstA")]
Public DeclareWide PtrSafe Function Process32First Lib "kernel32" Alias "Process32FirstW" (ByVal hSnapshot As LongPtr, lppe As PROCESSENTRY32) As BOOL
[Description("NOTE: This definition differs from the Windows SDK definition in mapping to the Unicode version, per WinDevLib standards. The ANSI version can be accessed with Process32NextA")]
Public DeclareWide PtrSafe Function Process32Next Lib "kernel32" Alias "Process32NextW" (ByVal hSnapshot As LongPtr, lppe As PROCESSENTRY32) As BOOL
Public Declare PtrSafe Function Thread32First Lib "kernel32" (ByVal hSnapshot As LongPtr, lpTE As THREADENTRY32) As BOOL
Public Declare PtrSafe Function Thread32Next Lib "kernel32" (ByVal hSnapshot As LongPtr, lpTE As THREADENTRY32) As BOOL
Public DeclareWide PtrSafe Function Module32FirstA Lib "kernel32" Alias "Module32First" (ByVal hSnapshot As LongPtr, lpme As MODULEENTRY32A) As BOOL
Public DeclareWide PtrSafe Function Module32NextA Lib "kernel32" Alias "Module32Next" (ByVal hSnapshot As LongPtr, lpme As MODULEENTRY32A) As BOOL
Public Declare PtrSafe Function Module32FirstW Lib "kernel32" (ByVal hSnapshot As LongPtr, lpme As MODULEENTRY32W) As BOOL
Public Declare PtrSafe Function Module32NextW Lib "kernel32" (ByVal hSnapshot As LongPtr, lpme As MODULEENTRY32W) As BOOL
[Description("NOTE: This definition differs from the Windows SDK definition in mapping to the Unicode version, per WinDevLib standards. The ANSI version can be accessed with Module32FirstA")]
Public DeclareWide PtrSafe Function Module32First Lib "kernel32" Alias "Module32FirstW" (ByVal hSnapshot As LongPtr, lpme As MODULEENTRY32) As BOOL
[Description("NOTE: This definition differs from the Windows SDK definition in mapping to the Unicode version, per WinDevLib standards. The ANSI version can be accessed with Module32NextA")]
Public DeclareWide PtrSafe Function Module32Next Lib "kernel32" Alias "Module32NextW" (ByVal hSnapshot As LongPtr, lpme As MODULEENTRY32) As BOOL


Public Declare PtrSafe Function QueryFullProcessImageNameA Lib "kernel32" (ByVal hProcess As LongPtr, ByVal dwFlags As PROCESS_FULL_IMAGENAME_FLAGS, ByVal lpExeName As String, lpdwSize As Long) As BOOL
Public DeclareWide PtrSafe Function QueryFullProcessImageName Lib "kernel32" Alias "QueryFullProcessImageNameW" (ByVal hProcess As LongPtr, ByVal dwFlags As PROCESS_FULL_IMAGENAME_FLAGS, ByVal lpExeName As String, lpdwSize As Long) As BOOL
Public Declare PtrSafe Function QueryFullProcessImageNameW Lib "kernel32" (ByVal hProcess As LongPtr, ByVal dwFlags As PROCESS_FULL_IMAGENAME_FLAGS, ByVal lpExeName As LongPtr, lpdwSize As Long) As BOOL
Public Declare PtrSafe Function ReadProcessMemory Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpBaseAddress As LongPtr, lpBuffer As Any, ByVal nSize As LongPtr, lpNumberOfBytesRead As LongPtr) As BOOL
Public Declare PtrSafe Function WriteProcessMemory Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpBaseAddress As LongPtr, lpBuffer As Any, ByVal nSize As LongPtr, lpNumberOfBytesWritten As LongPtr) As BOOL
Public Declare PtrSafe Function GetCurrentProcess Lib "kernel32" () As LongPtr
Public Declare PtrSafe Sub GetStartupInfoA Lib "kernel32" (lpStartupInfo As STARTUPINFOA)
Public Declare PtrSafe Sub GetStartupInfoW Lib "kernel32" (lpStartupInfo As STARTUPINFOW)
Public Declare PtrSafe Sub GetStartupInfo Lib "kernel32" Alias "GetStartupInfoW" (lpStartupInfo As STARTUPINFO)
Public Declare PtrSafe Function IsProcessCritical Lib "kernel32" (ByVal hProcess As LongPtr, Critical As BOOL) As BOOL
Public Declare PtrSafe Function GetProcessTimes Lib "kernel32" (ByVal hProcess As LongPtr, lpCreationTime As FILETIME, lpExitTime As FILETIME, lpKernelTime As FILETIME, lpUserTime As FILETIME) As BOOL
Public Declare PtrSafe Function SetThreadDescription Lib "kernel32" (ByVal hThread As LongPtr, ByVal lpThreadDescription As LongPtr) As Long
Public Declare PtrSafe Function GetThreadDescription Lib "kernel32" (ByVal hThread As LongPtr, ppszThreadDescription As LongPtr) As Long

Public Delegate Sub APCFUNC (ByVal Parameter As LongPtr)
' #If WINDEVLIB_NO_DELEGATES Then
Public Declare PtrSafe Function QueueUserAPC Lib "kernel32" (ByVal pfnAPC As LongPtr, ByVal hThread As LongPtr, ByVal dwData As LongPtr) As Long
Public Declare PtrSafe Function QueueUserAPC2 Lib "kernel32" (ByVal ApcRoutine As LongPtr, ByVal Thread As LongPtr, ByVal Data As LongPtr, ByVal Flags As QUEUE_USER_APC_FLAGS) As BOOL
' #Else
' Public Declare PtrSafe Function QueueUserAPC Lib "kernel32" (ByVal pfnAPC As APCFUNC, ByVal hThread As LongPtr, ByVal dwData As LongPtr) As Long
' Public Declare PtrSafe Function QueueUserAPC2 Lib "kernel32" (ByVal ApcRoutine As APCFUNC, ByVal Thread As LongPtr, ByVal Data As LongPtr, ByVal Flags As QUEUE_USER_APC_FLAGS) As BOOL
' #End If

Public Declare PtrSafe Function GlobalAlloc Lib "kernel32" (ByVal uFlags As GMEM, ByVal dwBytes As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalReAlloc Lib "kernel32" (ByVal hMem As LongPtr, ByVal dwBytes As LongPtr, ByVal uFlags As GMEM) As LongPtr
Public Declare PtrSafe Function GlobalFree Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalLock Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalUnlock Lib "kernel32" (ByVal hMem As LongPtr) As Long
Public Declare PtrSafe Function GlobalSize Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalHandle Lib "kernel32" (ByVal pMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalFlags Lib "kernel32" (ByVal hMem As LongPtr) As GMEM
Public Declare PtrSafe Sub GlobalFix Lib "kernel32" (ByVal hMem As LongPtr)
Public Declare PtrSafe Sub GlobalUnfix Lib "kernel32" (ByVal hMem As LongPtr)
Public Declare PtrSafe Function GlobalWire Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalUnWire Lib "kernel32" (ByVal hMem As LongPtr) As Long
Public Declare PtrSafe Function GlobalCompact Lib "kernel32" (ByVal dwinFree As Long) As LongPtr
' #define GlobalLRUNewest( h )    ((HANDLE)(h))
Public Function GlobalLRUNewest(ByVal h As LongPtr) As LongPtr: Return h: End Function
' #define GlobalLRUOldest( h )    ((HANDLE)(h))
Public Function GlobalLRUOldest(ByVal h As LongPtr) As LongPtr: Return h: End Function
Public Function GlobalDiscard(ByVal h As LongPtr) As LongPtr: Return GlobalReAlloc((h), 0, GMEM_MOVEABLE): End Function
[Description("**DEPRECATED.** Use GlobalMemoryStatusEx.")]
Public Declare PtrSafe Sub GlobalMemoryStatus Lib "kernel32" (ByRef lpBuffer As MEMORYSTATUS)
Public Declare PtrSafe Function GlobalMemoryStatusEx Lib "kernel32" (ByRef lpBuffer As MEMORYSTATUSEX) As Long
    
Public Declare PtrSafe Function LocalAlloc Lib "kernel32" (ByVal uFlags As LMEM, ByVal uBytes As LongPtr) As LongPtr
Public Declare PtrSafe Function LocalReAlloc Lib "kernel32" (ByVal hMem As LongPtr, ByVal uBytes As LongPtr, ByVal uFlags As LMEM) As LongPtr
Public Declare PtrSafe Function LocalFree Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function LocalLock Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function LocalUnlock Lib "kernel32" (ByVal hMem As LongPtr) As Long
Public Declare PtrSafe Function LocalSize Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function LocalHandle Lib "kernel32" (ByVal pMem As LongPtr) As LongPtr
Public Declare PtrSafe Function LocalFlags Lib "kernel32" (ByVal hMem As LongPtr) As GMEM
Public Declare PtrSafe Function LocalShrink Lib "kernel32" (ByVal hMem As LongPtr, ByVal cbNewSize As Long) As LongPtr
Public Declare PtrSafe Function LocalCompact Lib "kernel32" (ByVal uMinFree As Long) As LongPtr
Public Function LocalDiscard(ByVal h As LongPtr) As LongPtr: Return LocalReAlloc((h), 0, LMEM_MOVEABLE): End Function

Public Declare PtrSafe Function HeapCreate Lib "kernel32" (ByVal flOptions As HeapFlags, ByVal dwInitialSize As LongPtr, ByVal dwMaximumSize As LongPtr) As LongPtr
Public Declare PtrSafe Function HeapAlloc Lib "kernel32" (ByVal hHeap As LongPtr, ByVal dwFlags As HeapFlags, ByVal dwBytes As LongPtr) As LongPtr
Public Declare PtrSafe Function HeapReAlloc Lib "kernel32" (ByVal hHeap As LongPtr, ByVal dwFlags As HeapFlags, lpMem As Any, ByVal dwBytes As LongPtr) As LongPtr
Public Declare PtrSafe Function HeapLock Lib "kernel32" (ByVal hHeap As LongPtr) As BOOL
Public Declare PtrSafe Function HeapUnlock Lib "kernel32" (ByVal hHeap As LongPtr) As BOOL
Public Declare PtrSafe Function HeapFree Lib "kernel32" (ByVal hHeap As LongPtr, ByVal dwFlags As HeapFlags, ByRef lpMem As Any) As BOOL
Public Declare PtrSafe Function HeapWalk Lib "kernel32" (ByVal hHeap As LongPtr, lpEntry As PROCESS_HEAP_ENTRY) As BOOL
Public Declare PtrSafe Function HeapDestroy Lib "kernel32" (ByVal hHeap As LongPtr) As BOOL
Public Declare PtrSafe Function HeapCompact Lib "kernel32" (ByVal hHeap As LongPtr, ByVal dwFlags As HeapFlags) As LongPtr
Public Declare PtrSafe Function HeapSize Lib "kernel32" (ByVal hHeap As LongPtr, ByVal dwFlags As HeapFlags, lpMem As Any) As LongPtr
Public Declare PtrSafe Function GetProcessHeaps Lib "kernel32" (ByVal NumberOfHeaps As Long, ByRef ProcessHeaps As LongPtr) As Long
Public Declare PtrSafe Function HeapQueryInformation Lib "kernel32" (ByVal HeapHandle As LongPtr, ByVal HeapInformationClass As HEAP_INFORMATION_CLASS, ByRef HeapInformation As Any, ByVal HeapInformationLength As LongPtr, ByRef ReturnLength As LongPtr) As BOOL
Public Declare PtrSafe Function HeapSetInformation Lib "kernel32" (ByVal HeapHandle As LongPtr, ByVal HeapInformationClass As HEAP_INFORMATION_CLASS, ByRef HeapInformation As Any, ByVal HeapInformationLength As LongPtr) As BOOL
Public Declare PtrSafe Function GetProcessHeap Lib "kernel32" () As LongPtr
    
    

Public Declare PtrSafe Sub RtlMoveMemory Lib "kernel32" (Destination As Any, Source As Any, ByVal Length As LongPtr)
Public Declare PtrSafe Sub RtlZeroMemory Lib "kernel32" (Destination As Any, ByVal Length As LongPtr)
Public Declare PtrSafe Sub RtlFillMemory Lib "kernel32" (Destination As Any, ByVal Length As LongPtr, ByVal Fill As Long)
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Sub RtlCopyMemory Lib "kernel32" Alias "RtlMoveMemory" (Destination As Any, Source As Any, ByVal Length As LongPtr)

[Description("⚠️ **WARNING:** This function is obsolete and unreliable. It is also in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function IsBadReadPtr Lib "kernel32" (lp As Any, ByVal ucb As LongPtr) As BOOL
[Description("⚠️ **WARNING:** This function is obsolete and unreliable. It is also in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function IsBadWritePtr Lib "kernel32" (lp As Any, ByVal ucb As LongPtr) As BOOL
[Description("⚠️ **WARNING:** This function is obsolete and unreliable. It is also in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function IsBadStringPtrA Lib "kernel32" (ByVal lpsz As String, ByVal ucchMax As LongPtr) As BOOL
[Description("⚠️ **WARNING:** This function is obsolete and unreliable. It is also in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function IsBadStringPtrW Lib "kernel32" (ByVal lpsz As LongPtr, ByVal ucchMax As LongPtr) As BOOL
[Description("⚠️ **WARNING:** This function is obsolete and unreliable. It is also in banned.h,insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function IsBadStringPtr Lib "kernel32" Alias "IsBadStringPtrW" (ByVal lpsz As String, ByVal ucchMax As LongPtr) As BOOL
[Description("⚠️ **WARNING:** This function is obsolete and unreliable. It is also in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function IsBadHugeReadPtr Lib "kernel32" (lp As Any, ByVal ucb As LongPtr) As BOOL
[Description("⚠️ **WARNING:** This function is obsolete and unreliable. It is also in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function IsBadHugeWritePtr Lib "kernel32" (lp As Any, ByVal ucb As LongPtr) As BOOL
[Description("⚠️ **WARNING:** This function is obsolete and unreliable. It is also in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function IsBadCodePtr Lib "kernel32" (ByVal lpfn As LongPtr) As BOOL

Public Type RTL_RUN_ONCE
    Ptr As LongPtr
End Type
'Alias INIT_ONCE As RTL_RUN_ONCE
Public Type INIT_ONCE
    Ptr As LongPtr
End Type
Public Enum RtlRunOnceFlags
    RTL_RUN_ONCE_CHECK_ONLY = &H00000001
    RTL_RUN_ONCE_ASYNC = &H00000002
    RTL_RUN_ONCE_INIT_FAILED = &H00000004
End Enum
Public Const RTL_RUN_ONCE_INIT = 0
Public Const RTL_RUN_ONCE_CTX_RESERVED_BITS = 2
Public Enum InitOnceFlags
    INIT_ONCE_CHECK_ONLY = RTL_RUN_ONCE_CHECK_ONLY
    INIT_ONCE_ASYNC = RTL_RUN_ONCE_ASYNC
    INIT_ONCE_INIT_FAILED = RTL_RUN_ONCE_INIT_FAILED
End Enum
Public Const INIT_ONCE_STATIC_INIT = RTL_RUN_ONCE_INIT
Public Const INIT_ONCE_CTX_RESERVED_BITS = RTL_RUN_ONCE_CTX_RESERVED_BITS

Public Enum CreateEventExFlags
    CREATE_EVENT_MANUAL_RESET = &H00000001
    CREATE_EVENT_INITIAL_SET = &H00000002
End Enum

Public Declare PtrSafe Sub InitializeCriticalSection Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION)
Public Declare PtrSafe Function InitializeCriticalSectionAndSpinCount Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION, ByVal dwSpinCount As Long) As BOOL
Public Declare PtrSafe Function InitializeCriticalSectionEx Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION, ByVal dwSpinCount As Long, ByVal Flags As InitCriticalSectExFlags) As BOOL
Public Declare PtrSafe Function TryEnterCriticalSection Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION) As BOOL
Public Declare PtrSafe Sub EnterCriticalSection Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION)
Public Declare PtrSafe Sub LeaveCriticalSection Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION)
Public Declare PtrSafe Sub DeleteCriticalSection Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION)
Public Declare PtrSafe Sub InitOnceInitialize Lib "kernel32" (InitOnce As INIT_ONCE)
Public Declare PtrSafe Function InitOnceExecuteOnce Lib "kernel32" (InitOnce As INIT_ONCE, ByVal InitFn As LongPtr, ByVal Parameter As LongPtr, Context As LongPtr) As BOOL
Public Declare PtrSafe Function InitOnceBeginInitialize Lib "kernel32" (lpInitOnce As INIT_ONCE, ByVal dwFlags As InitOnceFlags, fPending As BOOL, lpContext As LongPtr) As BOOL
Public Declare PtrSafe Function InitOnceComplete Lib "kernel32" (lpInitOnce As INIT_ONCE, ByVal dwFlags As InitOnceFlags, ByVal lpContext As LongPtr) As BOOL
Public Declare PtrSafe Function FormatMessageA Lib "kernel32" (ByVal dwFlags As FormatMessageFlags, lpSource As Any, ByVal dwMessageId As Long, ByVal dwLanguageId As Long, ByVal lpBuffer As String, ByVal nSize As Long, Arguments As LongPtr) As Long
Public Declare PtrSafe Function FormatMessageW Lib "kernel32" (ByVal dwFlags As FormatMessageFlags, lpSource As Any, ByVal dwMessageId As Long, ByVal dwLanguageId As Long, ByVal lpBuffer As LongPtr, ByVal nSize As Long, Arguments As LongPtr) As Long
Public DeclareWide PtrSafe Function FormatMessage Lib "kernel32" Alias "FormatMessageW" (ByVal dwFlags As FormatMessageFlags, lpSource As Any, ByVal dwMessageId As Long, ByVal dwLanguageId As Long, ByVal lpBuffer As String, ByVal nSize As Long, Arguments As LongPtr) As Long
Public Declare PtrSafe Function GetCurrentProcessId Lib "kernel32" () As Long
Public Declare PtrSafe Function GetCurrentThreadId Lib "kernel32" () As Long
Public Declare PtrSafe Function GetCurrentThread Lib "kernel32" () As LongPtr
Public Declare PtrSafe Function WaitForSingleObject Lib "kernel32" (ByVal hHandle As LongPtr, ByVal dwMilliseconds As Long) As WaitForObjOutcomes
Public Declare PtrSafe Function WaitForMultipleObjects Lib "kernel32" (ByVal nCount As Long, ByRef lpHandles As LongPtr, ByVal bWaitAll As BOOL, ByVal dwMilliseconds As Long) As WaitForObjOutcomes
Public Declare PtrSafe Function WaitForSingleObjectEx Lib "kernel32" (ByVal hHandle As LongPtr, ByVal dwMilliseconds As Long, ByVal bAlertable As BOOL) As WaitForObjOutcomes
Public Declare PtrSafe Function WaitForMultipleObjectsEx Lib "kernel32" (ByVal nCount As Long, ByRef lpHandles As LongPtr, ByVal bWaitAll As BOOL, ByVal dwMilliseconds As Long, ByVal bAlertable As BOOL) As WaitForObjOutcomes
Public Declare PtrSafe Function SignalObjectAndWait Lib "kernel32" (ByVal hObjectToSignal As LongPtr, ByVal hObjectToWaitOn As LongPtr, ByVal dwMilliseconds As Long, ByVal bAlertable As BOOL) As WaitForObjOutcomes
Public Declare PtrSafe Function CreateEventA Lib "kernel32" (lpEventAttributes As SECURITY_ATTRIBUTES, ByVal bManualReset As BOOL, ByVal bInitialState As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateEventW Lib "kernel32" (lpEventAttributes As SECURITY_ATTRIBUTES, ByVal bManualReset As BOOL, ByVal bInitialState As BOOL, ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateEvent Lib "kernel32" Alias "CreateEventW" (lpEventAttributes As SECURITY_ATTRIBUTES, ByVal bManualReset As BOOL, ByVal bInitialState As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateEventExA Lib "kernel32" (lpEventAttributes As SECURITY_ATTRIBUTES, ByVal lpName As String, ByVal dwFlags As CreateEventExFlags, [TypeHint(StandardAccessTypes, EventAccessRights)] ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function CreateEventExW Lib "kernel32" (lpEventAttributes As SECURITY_ATTRIBUTES, ByVal lpName As LongPtr, ByVal dwFlags As CreateEventExFlags, [TypeHint(StandardAccessTypes, EventAccessRights)] ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateEventEx Lib "kernel32" Alias "CreateEventExW" (lpEventAttributes As SECURITY_ATTRIBUTES, ByVal lpName As String, ByVal dwFlags As CreateEventExFlags, [TypeHint(StandardAccessTypes, EventAccessRights)] ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function PulseEvent Lib "kernel32" (ByVal hEvent As LongPtr) As BOOL
Public Declare PtrSafe Function SetEvent Lib "kernel32" (ByVal hEvent As LongPtr) As BOOL
Public Declare PtrSafe Function ResetEvent Lib "kernel32" (ByVal hEvent As LongPtr) As BOOL
Public Declare PtrSafe Function CreateSemaphoreA Lib "kernel32" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, Optional ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateSemaphoreW Lib "kernel32" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, Optional ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateSemaphore Lib "kernel32" Alias "CreateSemaphoreW" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, Optional ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateSemaphoreExA Lib "kernel32" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, ByVal lpName As String, ByVal dwFlags As Long, ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function CreateSemaphoreExW Lib "kernel32" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, ByVal lpName As LongPtr, ByVal dwFlags As Long, ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateSemaphoreEx Lib "kernel32" Alias "CreateSemaphoreExW" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, ByVal lpName As String, ByVal dwFlags As Long, ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function OpenSemaphoreA Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function OpenSemaphoreW Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenSemaphore Lib "kernel32" Alias "OpenSemaphoreW" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function ReleaseSemaphore Lib "kernel32" (ByVal hSemaphore As LongPtr, ByVal lReleaseCount As Long, Optional lpPreviousCount As Long) As BOOL
Public Declare PtrSafe Function CreateMutexA Lib "kernel32" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, Optional ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateMutexW Lib "kernel32" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, Optional ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateMutex Lib "kernel32" Alias "CreateMutexW" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, Optional ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateMutexExA Lib "kernel32" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, ByVal lpName As String, ByVal dwFlags As CreateMutexExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function CreateMutexExW Lib "kernel32" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, ByVal lpName As LongPtr, ByVal dwFlags As CreateMutexExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateMutexEx Lib "kernel32" Alias "CreateMutexExW" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, ByVal lpName As String, ByVal dwFlags As CreateMutexExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function OpenMutexA Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function OpenMutexW Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenMutex Lib "kernel32" Alias "OpenMutexW" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function ReleaseMutex Lib "kernel32" (ByVal hMutex As LongPtr) As BOOL
Public Declare PtrSafe Function CreateWaitableTimerA Lib "kernel32" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal bManualReset As BOOL, Optional ByVal lpTimerName As String) As LongPtr
Public Declare PtrSafe Function CreateWaitableTimerW Lib "kernel32" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal bManualReset As BOOL, Optional ByVal lpTimerName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateWaitableTimer Lib "kernel32" Alias "CreateWaitableTimerW" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal bManualReset As BOOL, Optional ByVal lpTimerName As String) As LongPtr
Public Declare PtrSafe Function CreateWaitableTimerExA Lib "kernel32" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal lpTimerName As String, ByVal dwFlags As CreateWaitableTimerExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function CreateWaitableTimerExW Lib "kernel32" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal lpTimerName As LongPtr, ByVal dwFlags As CreateWaitableTimerExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateWaitableTimerEx Lib "kernel32" Alias "CreateWaitableTimerExW" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal lpTimerName As String, ByVal dwFlags As CreateWaitableTimerExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function OpenWaitableTimerA Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpTimerName As String) As LongPtr
Public Declare PtrSafe Function OpenWaitableTimerW Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpTimerName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenWaitableTimer Lib "kernel32" Alias "OpenWaitableTimerW" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpTimerName As String) As LongPtr
Public Declare PtrSafe Function CancelWaitableTimer Lib "kernel32" (ByVal hTimer As LongPtr) As BOOL
Public Delegate Sub TIMERAPCROUTINE (ByVal lpArgToCompletionRoutine As LongPtr, ByVal dwTimerLowValue As Long, ByVal dwTimerHighValue As Long)
' #If WINDEVLIB_NO_DELEGATES Then
Public DeclareWide PtrSafe Function SetWaitableTimer Lib "kernel32" (ByVal hTimer As LongPtr, lpDueTime As LARGE_INTEGER, ByVal lPeriod As Long, ByVal pfnCompletionRoutine As LongPtr, lpArgToCompletionRoutine As Any, ByVal fResume As BOOL) As BOOL
Public DeclareWide PtrSafe Function SetWaitableTimerEx Lib "kernel32" (ByVal hTimer As LongPtr, lpDueTime As LARGE_INTEGER, ByVal lPeriod As Long, ByVal pfnCompletionRoutine As LongPtr, lpArgToCompletionRoutine As Any, WakeContext As REASON_CONTEXT, ByVal TolerableDelay As Long) As BOOL
' #Else
' Public DeclareWide PtrSafe Function SetWaitableTimer Lib "kernel32" (ByVal hTimer As LongPtr, lpDueTime As LARGE_INTEGER, ByVal lPeriod As Long, ByVal pfnCompletionRoutine As TIMERAPCROUTINE, lpArgToCompletionRoutine As Any, ByVal fResume As BOOL) As BOOL
' Public DeclareWide PtrSafe Function SetWaitableTimerEx Lib "kernel32" (ByVal hTimer As LongPtr, lpDueTime As LARGE_INTEGER, ByVal lPeriod As Long, ByVal pfnCompletionRoutine As TIMERAPCROUTINE, lpArgToCompletionRoutine As Any, WakeContext As REASON_CONTEXT, ByVal TolerableDelay As Long) As BOOL
' #End If

Public Declare PtrSafe Sub InitializeSRWLock Lib "kernel32" (SRWLock As LongPtr)
Public Declare PtrSafe Sub AcquireSRWLockExclusive Lib "kernel32" (SRWLock As LongPtr)
Public Declare PtrSafe Sub AcquireSRWLockShared Lib "kernel32" (SRWLock As LongPtr)
Public Declare PtrSafe Function TryAcquireSRWLockExclusive Lib "kernel32" (SRWLock As LongPtr) As Byte
Public Declare PtrSafe Function TryAcquireSRWLockShared Lib "kernel32" (SRWLock As LongPtr) As Byte
Public Declare PtrSafe Sub ReleaseSRWLockExclusive Lib "kernel32" (SRWLock As LongPtr)
Public Declare PtrSafe Sub ReleaseSRWLockShared Lib "kernel32" (SRWLock As LongPtr)
Public Declare PtrSafe Sub InitializeConditionVariable Lib "kernel32" (ConditionVariable As LongPtr)
Public Declare PtrSafe Function SleepConditionVariableCS Lib "kernel32" (ConditionVariable As LongPtr, CriticalSection As CRITICAL_SECTION, ByVal dwMilliseconds As Long) As BOOL
Public Declare PtrSafe Sub WakeConditionVariable Lib "kernel32" (ConditionVariable As LongPtr)
Public Declare PtrSafe Sub WakeAllConditionVariable Lib "kernel32" (ConditionVariable As LongPtr)
Public Declare PtrSafe Function SleepConditionVariableSRW Lib "kernel32" (ConditionVariable As LongPtr, SRWLock As LongPtr, ByVal dwMilliseconds As Long) As BOOL
Public Declare PtrSafe Function InitializeSynchronizationBarrier Lib "kernel32" (lpBarrier As SYNCHRONIZATION_BARRIER, ByVal lTotalThreads As Long, ByVal lSpinCount As Long) As BOOL
Public Declare PtrSafe Function EnterSynchronizationBarrier Lib "kernel32" (lpBarrier As SYNCHRONIZATION_BARRIER, ByVal dwFlags As SyncBarrierFlags) As BOOL
Public Declare PtrSafe Function DeleteSynchronizationBarrier Lib "kernel32" (lpBarrier As SYNCHRONIZATION_BARRIER) As BOOL
Public Declare PtrSafe Function CreateMailslotA Lib "kernel32" (ByVal lpName As String, ByVal nMaxMessageSize As Long, ByVal lReadTimeout As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES) As LongPtr
Public Declare PtrSafe Function CreateMailslotW Lib "kernel32" (ByVal lpName As LongPtr, ByVal nMaxMessageSize As Long, ByVal lReadTimeout As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES) As LongPtr
Public DeclareWide PtrSafe Function CreateMailslot Lib "kernel32" Alias "CreateMailslotW" (ByVal lpName As String, ByVal nMaxMessageSize As Long, ByVal lReadTimeout As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES) As LongPtr
Public Declare PtrSafe Function GetMailslotInfo Lib "kernel32" (ByVal hMailslot As LongPtr, Optional lpMaxMessageSize As Long, Optional lpNextSize As Long, Optional lpMessageCount As Long, Optional lpReadTimeout As Long) As BOOL
Public Declare PtrSafe Function SetMailslotInfo Lib "kernel32" (ByVal hMailslot As LongPtr, ByVal lpReadTimeout As Long) As BOOL
Public Declare PtrSafe Function UnregisterWait Lib "kernel32" (ByVal WaitHandle As LongPtr) As BOOL
Public Delegate Sub WAITORTIMERCALLBACK (ByVal lpParameter As LongPtr, ByVal TimerOrWaitFired As Byte)
' #If WINDEVLIB_NO_DELEGATES Then
Public Declare PtrSafe Function BindIoCompletionCallback Lib "kernel32" (ByVal FileHandle As LongPtr, ByVal pfnFunction As LongPtr, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function RegisterWaitForSingleObject Lib "kernel32" (phNewWaitObject As LongPtr, ByVal hObject As LongPtr, ByVal Callback As LongPtr, Context As Any, ByVal dwMilliseconds As Long, ByVal dwFlags As ThreadPoolFlags) As BOOL
Public DeclareWide PtrSafe Function CreateTimerQueueTimer Lib "kernel32" (phNewTimer As LongPtr, ByVal TimerQueue As LongPtr, ByVal Callback As LongPtr, Parameter As Any, ByVal DueTime As Long, ByVal Period As Long, ByVal Flags As ThreadPoolFlags) As BOOL
Public DeclareWide PtrSafe Function SetTimerQueueTimer Lib "kernel32" (ByVal TimerQueue As LongPtr, ByVal Callback As LongPtr, Parameter As Any, ByVal DueTime As Long, ByVal Period As Long, ByVal PreferIo As BOOL) As LongPtr
Public DeclareWide PtrSafe Function QueueUserWorkItem Lib "kernel32" (ByVal pfnStart As LongPtr, Context As Any, ByVal Flags As ThreadPoolFlags) As BOOL
' #Else
' Public Declare PtrSafe Function BindIoCompletionCallback Lib "kernel32" (ByVal FileHandle As LongPtr, ByVal pfnFunction As OVERLAPPED_COMPLETION_ROUTINE, ByVal Flags As Long) As BOOL
' Public DeclareWide PtrSafe Function RegisterWaitForSingleObject Lib "kernel32" (phNewWaitObject As LongPtr, ByVal hObject As LongPtr, ByVal Callback As WAITORTIMERCALLBACK, Context As Any, ByVal dwMilliseconds As Long, ByVal dwFlags As ThreadPoolFlags) As BOOL
' Public DeclareWide PtrSafe Function CreateTimerQueueTimer Lib "kernel32" (phNewTimer As LongPtr, ByVal TimerQueue As LongPtr, ByVal Callback As WAITORTIMERCALLBACK, Parameter As Any, ByVal DueTime As Long, ByVal Period As Long, ByVal Flags As ThreadPoolFlags) As BOOL
' Public DeclareWide PtrSafe Function SetTimerQueueTimer Lib "kernel32" (ByVal TimerQueue As LongPtr, ByVal Callback As WAITORTIMERCALLBACK, Parameter As Any, ByVal DueTime As Long, ByVal Period As Long, ByVal PreferIo As BOOL) As LongPtr
' Public DeclareWide PtrSafe Function QueueUserWorkItem Lib "kernel32" (ByVal pfnStart As THREAD_START_ROUTINE, Context As Any, ByVal Flags As ThreadPoolFlags) As BOOL
' #End If
Public Declare PtrSafe Function UnregisterWaitEx Lib "kernel32" (ByVal WaitHandle As LongPtr, Optional ByVal CompletionEvent As LongPtr) As BOOL
Public Declare PtrSafe Function CancelTimerQueueTimer Lib "kernel32" (ByVal TimerQueue As LongPtr, ByVal Timer As LongPtr) As BOOL
Public Declare PtrSafe Function CreateTimerQueue Lib "kernel32" () As LongPtr
Public Declare PtrSafe Function ChangeTimerQueueTimer Lib "kernel32" (ByVal TimerQueue As LongPtr, ByVal hTimer As LongPtr, ByVal DueTime As Long, ByVal Period As Long) As BOOL
Public Declare PtrSafe Function DeleteTimerQueue Lib "kernel32" (ByVal TimerQueue As LongPtr) As BOOL
Public Declare PtrSafe Function DeleteTimerQueueEx Lib "kernel32" (ByVal TimerQueue As LongPtr, Optional ByVal CompletionEvent As LongPtr) As BOOL
Public Declare PtrSafe Function DeleteTimerQueueTimer Lib "kernel32" (ByVal TimerQueue As LongPtr, ByVal hTimer As LongPtr, Optional ByVal CompletionEvent As LongPtr) As BOOL
Public Declare PtrSafe Function WaitOnAddress Lib "API-MS-Win-Core-Synch-l1-2-0.dll" (ByVal Address As LongPtr, ByVal CompareAddress As LongPtr, ByVal AddressSize As LongPtr, ByVal dwMilliseconds As Long) As BOOL
Public Declare PtrSafe Sub WakeByAddressSingle Lib "API-MS-Win-Core-Synch-l1-2-0.dll" (ByVal Address As LongPtr)
Public Declare PtrSafe Sub WakeByAddressAll Lib "API-MS-Win-Core-Synch-l1-2-0.dll" (ByVal Address As LongPtr)

Public Delegate Sub FIBER_START_ROUTINE (ByVal lpFiberParameter As LongPtr)
' #If WINDEVLIB_NO_DELEGATES Then
Public DeclareWide PtrSafe Function CreateFiber Lib "kernel32" (ByVal dwStackSize As LongPtr, ByVal lpStartAddress As LongPtr, lpParameter As Any) As LongPtr
Public DeclareWide PtrSafe Function CreateFiberEx Lib "kernel32" (ByVal dwStackCommitSize As LongPtr, ByVal dwStackReserveSize As LongPtr, ByVal dwFlags As CREATE_FIBER_FLAGS, ByVal lpStartAddress As LongPtr, lpParameter As Any) As LongPtr
' #Else
' Public DeclareWide PtrSafe Function CreateFiber Lib "kernel32" (ByVal dwStackSize As LongPtr, ByVal lpStartAddress As FIBER_START_ROUTINE, lpParameter As Any) As LongPtr
' Public DeclareWide PtrSafe Function CreateFiberEx Lib "kernel32" (ByVal dwStackCommitSize As LongPtr, ByVal dwStackReserveSize As LongPtr, ByVal dwFlags As CREATE_FIBER_FLAGS, ByVal lpStartAddress As FIBER_START_ROUTINE, lpParameter As Any) As LongPtr
' #End If
Public Declare PtrSafe Sub SwitchToFiber Lib "kernel32" (ByVal lpFiber As LongPtr)
Public Declare PtrSafe Sub DeleteFiber Lib "kernel32" (ByVal lpFiber As LongPtr)
Public Declare PtrSafe Function ConvertFiberToThread Lib "kernel32" (ByVal lpFiber As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ConvertThreadToFiber Lib "kernel32" (lpParameter As Any) As LongPtr
Public DeclareWide PtrSafe Function ConvertThreadToFiberEx Lib "kernel32" (lpParameter As Any, ByVal dwFlags As CREATE_FIBER_FLAGS) As LongPtr


Public Delegate Sub TP_SIMPLE_CALLBACK (ByVal Instance As LongPtr, ByVal Context As LongPtr)
Public Delegate Sub TP_CLEANUP_GROUP_CANCEL_CALLBACK (ByVal ObjectContext As LongPtr, ByVal CleanupContext As LongPtr)

Public Type TP_POOL_STACK_INFORMATION
    StackReserve As LongPtr 'SIZE_T
    StackCommit As LongPtr 'SIZE_T
End Type

Public Enum TP_CALLBACK_PRIORITY
    TP_CALLBACK_PRIORITY_HIGH = 0
    TP_CALLBACK_PRIORITY_NORMAL = 1
    TP_CALLBACK_PRIORITY_LOW = 2
    TP_CALLBACK_PRIORITY_INVALID = 3
    TP_CALLBACK_PRIORITY_COUNT = TP_CALLBACK_PRIORITY_INVALID
End Enum
' #If WINDEVLIB_NO_DELEGATES Then
[Description("For Windows 7+. For Vista, use TP_CALLBACK_ENVIRON_V1")]
Public Type TP_CALLBACK_ENVIRON
    Version As Long
    Pool As LongPtr
    CleanupGroup As LongPtr
    CleanupGroupCancelCallback As LongPtr
    RaceDll As LongPtr
    ActivationContext As LongPtr '*ACTIVATION_CONTEXT
    FinalizationCallback As LongPtr
    Flags As Long
    CallbackPriority As TP_CALLBACK_PRIORITY
    Size As Long
End Type
'Alias TP_CALLBACK_ENVIRON_V3 As TP_CALLBACK_ENVIRON
[Description("For Windows 7+. For Vista, use TP_CALLBACK_ENVIRON_V1")]
Public Type TP_CALLBACK_ENVIRON_V3
    Version As Long
    Pool As LongPtr
    CleanupGroup As LongPtr
    CleanupGroupCancelCallback As LongPtr
    RaceDll As LongPtr
    ActivationContext As LongPtr '*ACTIVATION_CONTEXT
    FinalizationCallback As LongPtr
    Flags As Long
    CallbackPriority As TP_CALLBACK_PRIORITY
    Size As Long
End Type
[Description("For Vista only. For Windows 7+, use TP_CALLBACK_ENVIRON")]
Public Type TP_CALLBACK_ENVIRON_V1
    Version As Long
    Pool As LongPtr
    CleanupGroup As LongPtr
    CleanupGroupCancelCallback As LongPtr
    RaceDll As LongPtr
    ActivationContext As LongPtr '*ACTIVATION_CONTEXT
    FinalizationCallback As LongPtr
    Flags As Long
End Type
' #Else
' [Description("For Windows 7+. For Vista, use TP_CALLBACK_ENVIRON_V1")]
' Public Type TP_CALLBACK_ENVIRON
'     Version As Long
'     Pool As LongPtr
'     CleanupGroup As LongPtr
'     CleanupGroupCancelCallback As TP_CLEANUP_GROUP_CANCEL_CALLBACK
'     RaceDll As LongPtr
'     ActivationContext As LongPtr '*ACTIVATION_CONTEXT
'     FinalizationCallback As TP_SIMPLE_CALLBACK
'     Flags As Long
'     CallbackPriority As TP_CALLBACK_PRIORITY
'     Size As Long
' End Type
' 'Alias TP_CALLBACK_ENVIRON_V3 As TP_CALLBACK_ENVIRON
' [Description("For Windows 7+. For Vista, use TP_CALLBACK_ENVIRON_V1")]
' Public Type TP_CALLBACK_ENVIRON_V3
'     Version As Long
'     Pool As LongPtr
'     CleanupGroup As LongPtr
'     CleanupGroupCancelCallback As TP_CLEANUP_GROUP_CANCEL_CALLBACK
'     RaceDll As LongPtr
'     ActivationContext As LongPtr '*ACTIVATION_CONTEXT
'     FinalizationCallback As TP_SIMPLE_CALLBACK
'     Flags As Long
'     CallbackPriority As TP_CALLBACK_PRIORITY
'     Size As Long
' End Type
' [Description("For Vista only. For Windows 7+, use TP_CALLBACK_ENVIRON")]
' Public Type TP_CALLBACK_ENVIRON_V1
'     Version As Long
'     Pool As LongPtr
'     CleanupGroup As LongPtr
'     CleanupGroupCancelCallback As TP_CLEANUP_GROUP_CANCEL_CALLBACK
'     RaceDll As LongPtr
'     ActivationContext As LongPtr '*ACTIVATION_CONTEXT
'     FinalizationCallback As TP_SIMPLE_CALLBACK
'     Flags As Long
' End Type
' #End If

Public Delegate Sub TP_WIN32_IO_CALLBACK (ByVal Instance As LongPtr, ByVal Context As LongPtr, ByVal Overlapped As LongPtr, ByVal IoResult As Long, ByVal NumberOfBytesTransferred As LongPtr, ByVal Io As LongPtr)

Public Declare PtrSafe Function CreateThreadpool Lib "kernel32" (ByVal reserved As LongPtr) As LongPtr
Public Declare PtrSafe Sub SetThreadpoolThreadMaximum Lib "kernel32" (ByVal ptpp As LongPtr, ByVal cthrdMost As Long)
Public Declare PtrSafe Sub SetThreadpoolThreadMinimum Lib "kernel32" (ByVal ptpp As LongPtr, ByVal cthrdMic As Long)
Public Declare PtrSafe Function SetThreadpoolStackInformation Lib "kernel32" (ByVal ptpp As LongPtr, ptpsi As TP_POOL_STACK_INFORMATION) As BOOL
Public Declare PtrSafe Function QueryThreadpoolStackInformation Lib "kernel32" (ByVal ptpp As LongPtr, ptpsi As TP_POOL_STACK_INFORMATION) As BOOL
Public Declare PtrSafe Sub CloseThreadpool Lib "kernel32" (ByVal ptpp As LongPtr)
Public Declare PtrSafe Function CreateThreadpoolCleanupGroup Lib "kernel32" () As LongPtr
Public Declare PtrSafe Sub CloseThreadpoolCleanupGroupMembers Lib "kernel32" (ByVal ptpcg As LongPtr, ByVal fCancelPendingCallbacks As BOOL, ByVal pvCleanupContext As LongPtr)
Public Declare PtrSafe Sub CloseThreadpoolCleanupGroup Lib "kernel32" (ByVal ptpcg As LongPtr)
Public Declare PtrSafe Sub SetEventWhenCallbackReturns Lib "kernel32" (ByVal pci As LongPtr, ByVal evt As LongPtr)
Public Declare PtrSafe Sub ReleaseSemaphoreWhenCallbackReturns Lib "kernel32" (ByVal pci As LongPtr, ByVal sem As LongPtr, ByVal crel As Long)
Public Declare PtrSafe Sub ReleaseMutexWhenCallbackReturns Lib "kernel32" (ByVal pci As LongPtr, ByVal mut As LongPtr)
Public Declare PtrSafe Sub LeaveCriticalSectionWhenCallbackReturns Lib "kernel32" (ByVal pci As LongPtr, pcs As CRITICAL_SECTION)
Public Declare PtrSafe Sub FreeLibraryWhenCallbackReturns Lib "kernel32" (ByVal pci As LongPtr, ByVal Mod As LongPtr)
Public Declare PtrSafe Function CallbackMayRunLong Lib "kernel32" (ByVal pci As LongPtr) As BOOL
Public Declare PtrSafe Sub DisassociateCurrentThreadFromCallback Lib "kernel32" (ByVal pci As LongPtr)
Public DeclareWide PtrSafe Function TrySubmitThreadpoolCallback Lib "kernel32" (ByVal pfns As LongPtr, pv As Any, pcbe As TP_CALLBACK_ENVIRON) As BOOL
Public DeclareWide PtrSafe Function CreateThreadpoolWork Lib "kernel32" (ByVal pfnwk As LongPtr, pv As Any, pcbe As TP_CALLBACK_ENVIRON) As LongPtr
Public Declare PtrSafe Sub SubmitThreadpoolWork Lib "kernel32" (ByVal pwk As LongPtr)
Public Declare PtrSafe Sub WaitForThreadpoolWorkCallbacks Lib "kernel32" (ByVal pwk As LongPtr, ByVal fCancelPendingCallbacks As BOOL)
Public Declare PtrSafe Sub CloseThreadpoolWork Lib "kernel32" (ByVal pwk As LongPtr)
Public DeclareWide PtrSafe Function CreateThreadpoolTimer Lib "kernel32" (ByVal pfnti As LongPtr, pv As Any, pcbe As TP_CALLBACK_ENVIRON) As LongPtr
Public Declare PtrSafe Sub SetThreadpoolTimer Lib "kernel32" (ByVal pti As LongPtr, pftDueTime As FILETIME, ByVal msPeriod As Long, ByVal msWindowLength As Long)
Public Declare PtrSafe Function IsThreadpoolTimerSet Lib "kernel32" (ByVal pti As LongPtr) As BOOL
Public Declare PtrSafe Sub WaitForThreadpoolTimerCallbacks Lib "kernel32" (ByVal pti As LongPtr, ByVal fCancelPendingCallbacks As BOOL)
Public Declare PtrSafe Sub CloseThreadpoolTimer Lib "kernel32" (ByVal pti As LongPtr)
Public DeclareWide PtrSafe Function CreateThreadpoolWait Lib "kernel32" (ByVal pfnwa As LongPtr, pv As Any, pcbe As TP_CALLBACK_ENVIRON) As LongPtr
Public Declare PtrSafe Sub SetThreadpoolWait Lib "kernel32" (ByVal pwa As LongPtr, ByVal h As LongPtr, pftTimeout As FILETIME)
Public Declare PtrSafe Sub WaitForThreadpoolWaitCallbacks Lib "kernel32" (ByVal pwa As LongPtr, ByVal fCancelPendingCallbacks As BOOL)
Public Declare PtrSafe Sub CloseThreadpoolWait Lib "kernel32" (ByVal pwa As LongPtr)
' #If WINDEVLIB_NO_DELEGATES Then
Public DeclareWide PtrSafe Function CreateThreadpoolIo Lib "kernel32" (ByVal fl As LongPtr, ByVal pfnio As LongPtr, pv As Any, pcbe As TP_CALLBACK_ENVIRON) As LongPtr
' #Else
' Public DeclareWide PtrSafe Function CreateThreadpoolIo Lib "kernel32" (ByVal fl As LongPtr, ByVal pfnio As TP_WIN32_IO_CALLBACK, pv As Any, pcbe As TP_CALLBACK_ENVIRON) As LongPtr
' #End If
Public Declare PtrSafe Sub StartThreadpoolIo Lib "kernel32" (ByVal pio As LongPtr)
Public Declare PtrSafe Sub CancelThreadpoolIo Lib "kernel32" (ByVal pio As LongPtr)
Public Declare PtrSafe Sub WaitForThreadpoolIoCallbacks Lib "kernel32" (ByVal pio As LongPtr, ByVal fCancelPendingCallbacks As BOOL)
Public Declare PtrSafe Sub CloseThreadpoolIo Lib "kernel32" (ByVal pio As LongPtr)
Public Declare PtrSafe Function SetThreadpoolTimerEx Lib "kernel32" (ByVal pti As LongPtr, pftDueTime As FILETIME, ByVal msPeriod As Long, ByVal msWindowLength As Long) As BOOL
Public Declare PtrSafe Function SetThreadpoolWaitEx Lib "kernel32" (ByVal pwa As LongPtr, ByVal h As LongPtr, pftTimeout As FILETIME, ByVal Reserved As LongPtr) As BOOL

Public Sub TpInitializeCallbackEnviron(CallbackEnviron As TP_CALLBACK_ENVIRON)
    CallbackEnviron.Version = 3
    CallbackEnviron.CallbackPriority = TP_CALLBACK_PRIORITY_NORMAL
    CallbackEnviron.Size = LenB(Of TP_CALLBACK_ENVIRON)
End Sub
Public Sub InitializeThreadpoolEnvironment(pcbe As TP_CALLBACK_ENVIRON)
    TpInitializeCallbackEnviron pcbe
End Sub

Public Sub TpSetCallbackThreadpool(CallbackEnviron As TP_CALLBACK_ENVIRON, ByVal Pool As LongPtr)
CallbackEnviron.Pool = Pool
End Sub
Public Sub SetThreadpoolCallbackPool(pcbe As TP_CALLBACK_ENVIRON, ByVal ptpp As LongPtr)
    TpSetCallbackThreadpool pcbe, ptpp
End Sub
' #If WINDEVLIB_NO_DELEGATES Then
Public Sub TpSetCallbackCleanupGroup(CallbackEnviron As TP_CALLBACK_ENVIRON, ByVal CleanupGroup As LongPtr, Optional ByVal CleanupGroupCancelCallback As LongPtr = 0)
    CallbackEnviron.CleanupGroup = CleanupGroup
    CallbackEnviron.CleanupGroupCancelCallback = CleanupGroupCancelCallback
End Sub
Public Sub SetThreadpoolCallbackCleanupGroup(pcbe As TP_CALLBACK_ENVIRON, ByVal ptpcg As LongPtr, Optional ByVal pfng As LongPtr = 0)
    TpSetCallbackCleanupGroup pcbe, ptpcg, pfng
End Sub
' #Else
' Public Sub TpSetCallbackCleanupGroup(CallbackEnviron As TP_CALLBACK_ENVIRON, ByVal CleanupGroup As LongPtr, Optional ByVal CleanupGroupCancelCallback As TP_CLEANUP_GROUP_CANCEL_CALLBACK = 0)
'     CallbackEnviron.CleanupGroup = CleanupGroup
'     CallbackEnviron.CleanupGroupCancelCallback = CleanupGroupCancelCallback
' End Sub
' Public Sub SetThreadpoolCallbackCleanupGroup(pcbe As TP_CALLBACK_ENVIRON, ByVal ptpcg As LongPtr, Optional ByVal pfng As TP_CLEANUP_GROUP_CANCEL_CALLBACK = 0)
'     TpSetCallbackCleanupGroup pcbe, ptpcg, pfng
' End Sub
' #End If
Public Sub TpSetCallbackLongFunction(CallbackEnviron As TP_CALLBACK_ENVIRON)
    CallbackEnviron.Flags = CallbackEnviron.Flags Or &H1
End Sub
Public Sub SetThreadpoolCallbackRunsLong(pcbe As TP_CALLBACK_ENVIRON)
    TpSetCallbackLongFunction pcbe
End Sub
Public Sub TpSetCallbackRaceWithDll(CallbackEnviron As TP_CALLBACK_ENVIRON, ByVal DllHandle As LongPtr)
    CallbackEnviron.RaceDll = DllHandle
End Sub
Public Sub SetThreadpoolCallbackLibrary(pcbe As TP_CALLBACK_ENVIRON, ByVal hmod As LongPtr)
    TpSetCallbackRaceWithDll pcbe, hmod
End Sub
Public Sub TpSetCallbackPriority(CallbackEnviron As TP_CALLBACK_ENVIRON, ByVal Priority As TP_CALLBACK_PRIORITY)
    CallbackEnviron.CallbackPriority = Priority
End Sub
Public Sub SetThreadpoolCallbackPriority(pcbe As TP_CALLBACK_ENVIRON, ByVal Priority As TP_CALLBACK_PRIORITY)
    TpSetCallbackPriority pcbe, Priority
End Sub
[Description("No action required; deliberately blank.")]
[IgnoreWarnings(TB0025)]
Public Sub DestroyThreadpoolEnvironment(pcbe As TP_CALLBACK_ENVIRON)
End Sub
[Description("No action required; deliberately blank.")]
[IgnoreWarnings(TB0025)]
Public Sub TpDestroyCallbackEnviron(CallbackEnviron As TP_CALLBACK_ENVIRON)
End Sub
Public Sub TpSetCallbackPersistent(CallbackEnviron As TP_CALLBACK_ENVIRON)
    CallbackEnviron.Flags = CallbackEnviron.Flags Or &H2
End Sub
Public Sub SetThreadpoolCallbackPersistent(pcbe As TP_CALLBACK_ENVIRON)
    TpSetCallbackPersistent pcbe
End Sub
' #If WINDEVLIB_NO_DELEGATES Then
Public Sub TpSetCallbackFinalizationCallback(CallbackEnviron As TP_CALLBACK_ENVIRON, ByVal FinalizationCallback As LongPtr)
    CallbackEnviron.FinalizationCallback = FinalizationCallback
End Sub
' #Else
' Public Sub TpSetCallbackFinalizationCallback(CallbackEnviron As TP_CALLBACK_ENVIRON, ByVal FinalizationCallback As TP_SIMPLE_CALLBACK)
'     CallbackEnviron.FinalizationCallback = FinalizationCallback
' End Sub
' #End If
Public Sub TpSetCallbackNoActivationContext(CallbackEnviron As TP_CALLBACK_ENVIRON)
    CallbackEnviron.ActivationContext = -1
End Sub
Public Sub TpSetCallbackActivationContext(CallbackEnviron As TP_CALLBACK_ENVIRON, ByVal ActivationContext As LongPtr)
    CallbackEnviron.ActivationContext = ActivationContext
End Sub

Public Enum MEM_SECTION_EXTENDED_PARAMETER_TYPE
    MemSectionExtendedParameterInvalidType = 0
    MemSectionExtendedParameterUserPhysicalFlags = 1
    MemSectionExtendedParameterNumaNode = 2
    MemSectionExtendedParameterSigningLevel = 3
    MemSectionExtendedParameterMax = 4
End Enum

Public Enum ENCLAVE_TYPE
    ENCLAVE_TYPE_SGX = &H00000001
    ENCLAVE_TYPE_SGX2 = &H00000002
    ENCLAVE_TYPE_VBS = &H00000010
    ENCLAVE_TYPE_VBS_BASIC = &H00000011
End Enum
Public Type ENCLAVE_CREATE_INFO_SGX
    Secs(0 To 4095) As Byte
End Type
Public Type ENCLAVE_INIT_INFO_SGX
    SigStruct(0 To 1807) As Byte
    Reserved1(0 To 239) As Byte
    EInitToken(0 To 303) As Byte
    Reserved2(0 To 1743) As Byte
End Type
Public Enum ENCLAVE_VBS_FLAGS
    ENCLAVE_VBS_FLAG_DEBUG = &H00000001
End Enum
Public Type ENCLAVE_CREATE_INFO_VBS_BASIC
    Flags As ENCLAVE_VBS_FLAGS
    OwnerID(0 To 31) As Byte
End Type
Public Enum ENCLAVE_VBS_PAGE_TYPES
    VBS_BASIC_PAGE_MEASURED_DATA = &H00000001
    VBS_BASIC_PAGE_UNMEASURED_DATA = &H00000002
    VBS_BASIC_PAGE_ZERO_FILL = &H00000003
    VBS_BASIC_PAGE_THREAD_DESCRIPTOR = &H00000004
    VBS_BASIC_PAGE_SYSTEM_CALL = &H00000005
End Enum
Public Type ENCLAVE_LOAD_DATA_VBS_BASIC
    PageType As ENCLAVE_VBS_PAGE_TYPES
End Type
Public Const ENCLAVE_SHORT_ID_LENGTH  = 16
Public Const ENCLAVE_LONG_ID_LENGTH  = 32
Public Type ENCLAVE_INIT_INFO_VBS_BASIC
    FamilyId(0 To (ENCLAVE_SHORT_ID_LENGTH - 1)) As Byte
    ImageId(0 To (ENCLAVE_SHORT_ID_LENGTH - 1)) As Byte
    EnclaveSize As LongLong
    EnclaveSvn As Long
    Reserved As Long
    'union {
    SignatureInfoHandle As LongPtr
    'Unused As LongLong
    #If Win64 = 0 Then
        Unused As Long
    #End If
    '} DUMMYUNIONNAME;
End Type
Public Type ENCLAVE_INIT_INFO_VBS
    Length As Long
    ThreadCount As Long
End Type

Public Enum WriteWatchFlags
    WRITE_WATCH_FLAG_RESET = &H1
End Enum

Public Enum MEMORY_RESOURCE_NOTIFICATION_TYPE
    LowMemoryResourceNotification
    HighMemoryResourceNotification
End Enum

Public Enum FILE_CACHE_FLAGS
    FILE_CACHE_MAX_HARD_ENABLE = &H00000001
    FILE_CACHE_MAX_HARD_DISABLE = &H00000002
    FILE_CACHE_MIN_HARD_ENABLE = &H00000004
    FILE_CACHE_MIN_HARD_DISABLE = &H00000008
End Enum

Public Type WIN32_MEMORY_RANGE_ENTRY
    VirtualAddress As LongPtr
    NumberOfBytes As LongPtr
End Type

Public Enum MemoryErrorHandlingCapabilityFlags
    MEHC_PATROL_SCRUBBER_PRESENT = &H1
End Enum

Public Enum OFFER_PRIORITY
    VmOfferPriorityVeryLow = 1
    VmOfferPriorityLow
    VmOfferPriorityBelowNormal
    VmOfferPriorityNormal
End Enum

Public Enum CfgCallTargetFlags
    CFG_CALL_TARGET_VALID = (&H00000001)
'  Call target has been successfully processed.  Used to report to the caller
'  how much progress has been made.  Output flag.
    CFG_CALL_TARGET_PROCESSED = (&H00000002)
'  Call target should be made valid only if it is suppressed export.
'  What this flag means is that it can *only* be used on a cell which is
'  currently in the CFG export suppressed state (only considered for export
'  suppressed processes and not legacy CFG processes!), and it is also
'  allowed to be used even if the process is a restricted (i.e. no ACG) process.
    CFG_CALL_TARGET_CONVERT_EXPORT_SUPPRESSED_TO_VALID = (&H00000004)
'  Call target should be made into an XFG call target.
    CFG_CALL_TARGET_VALID_XFG = (&H00000008)
'  Call target should be made valid only if it is already an XFG target
'  in a process which has XFG audit mode enabled.
    CFG_CALL_TARGET_CONVERT_XFG_TO_CFG = (&H00000010)
End Enum
Public Type CFG_CALL_TARGET_INFO
    Offset As LongPtr
    /* [ TypeHint(CfgCallTargetFlags) ] */ Flags As LongPtr
End Type

Public Enum WIN32_MEMORY_INFORMATION_CLASS
    MemoryRegionInfo
End Enum

Public Enum Win32MemoryRegionInfoFlags
    MRIF_Private = &B00000000_00000000_00000000_00000001
    MRIF_MappedDataFile = &B00000000_00000000_00000000_00000010
    MRIF_MappedImage = &B00000000_00000000_00000000_00000100
    MRIF_MappedPageFile = &B00000000_00000000_00000000_00001000
    MRIF_MappedPhysical = &B00000000_00000000_00000000_00010000
    MRIF_DirectMapped = &B00000000_00000000_00000000_00100000
End Enum
Public Type WIN32_MEMORY_REGION_INFORMATION
    AllocationBase As LongPtr
    AllocationProtect As Long
    '    union {
    Flags As Win32MemoryRegionInfoFlags
    '        struct {
    '            ULONG Private : 1;
    '            ULONG MappedDataFile : 1;
    '            ULONG MappedImage : 1;
    '            ULONG MappedPageFile : 1;
    '            ULONG MappedPhysical : 1;
    '            ULONG DirectMapped : 1;
    '            ULONG Reserved : 26;
    '        } DUMMYSTRUCTNAME;
    '    } DUMMYUNIONNAME;
    RegionSize As LongPtr
    CommitSize As LongPtr
End Type

Public Enum WIN32_MEMORY_PARTITION_INFORMATION_CLASS
    MemoryPartitionInfo
    MemoryPartitionDedicatedMemoryInfo
End Enum
Public Type WIN32_MEMORY_PARTITION_INFORMATION
    Flags As Long
    NumaNode As Long ' -1 indicates sum all nodes in the partition
    Channel As Long ' -1 indicates sum all channels in node
    NumberOfNumaNodes As Long ' 0 unless all nodes specified above
    ResidentAvailablePages As LongLong ' 0 unless all nodes specified above
    CommittedPages As LongLong ' 0 unless all nodes specified above
    CommitLimit As LongLong ' 0 unless all nodes specified above
    PeakCommitment As LongLong ' 0 unless all nodes specified above
    TotalNumberOfPages As LongLong
    AvailablePages As LongLong
    ZeroPages As LongLong
    FreePages As LongLong
    StandbyPages As LongLong
    Reserved(0 To 15) As LongLong
    MaximumCommitLimit As LongLong ' 0 unless all nodes specified above
    Reserved2 As LongLong
    PartitionId As Long
End Type




[Description("Change the protection flags of a memory address")] Public Declare PtrSafe Function VirtualProtect Lib "kernel32" (ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal flNewProtect As MemProtectFlags, ByRef lpflOldProtect As MemProtectFlags) As Long
Public Declare PtrSafe Function VirtualProtectEx Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal flNewProtect As MemProtectFlags, ByRef lpflOldProtect As MemProtectFlags) As Long
Public Declare PtrSafe Function VirtualAlloc Lib "kernel32" (ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal flAllocationType As MemAllocType, ByVal flProtect As MemProtectFlags) As LongPtr
Public Declare PtrSafe Function VirtualAlloc2 Lib "kernelbase" (ByVal Process As LongPtr, ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal AllocationType As MemAllocType, ByVal PageProtection As MemProtectFlags, ExtendedParameters As Any, ByVal ParameterCount As Long) As LongPtr
Public Declare PtrSafe Function VirtualAllocEx Lib "kernel32" (ByVal Process As LongPtr, ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal flAllocationType As MemAllocType, ByVal flProtect As MemProtectFlags) As LongPtr
Public Declare PtrSafe Function VirtualAllocExNuma Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal flAllocationType As MemAllocType, ByVal flProtect As MemProtectFlags, ByVal nndPreferred As Long) As LongPtr
Public Declare PtrSafe Function VirtualFree Lib "kernel32" (ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal dwFreeType As MemAllocType) As BOOL
Public Declare PtrSafe Function VirtualFreeEx Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal dwFreeType As MemAllocType) As BOOL
Public Declare PtrSafe Function VirtualLock Lib "kernel32" (ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr) As BOOL
Public Declare PtrSafe Function VirtualUnlock Lib "kernel32" (ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr) As BOOL
Public Declare PtrSafe Function VirtualQuery Lib "kernel32" (ByVal lpAddress As LongPtr, lpBuffer As MEMORY_BASIC_INFORMATION, ByVal dwLength As LongPtr) As LongPtr
Public Declare PtrSafe Function VirtualQueryEx Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpAddress As LongPtr, lpBuffer As MEMORY_BASIC_INFORMATION, ByVal dwLength As LongPtr) As LongPtr
Public Declare PtrSafe Function AllocateUserPhysicalPages Lib "kernel32" (ByVal hProcess As LongPtr, ByRef NumberOfPages As LongPtr, PageArray As LongPtr) As BOOL
Public Declare PtrSafe Function AllocateUserPhysicalPages2 Lib "kernelbase" (ByVal hProcess As LongPtr, ByRef NumberOfPages As LongPtr, PageArray As LongPtr, ExtendedParameters As Any, ByVal ExtendedParameterCount As Long) As BOOL
Public Declare PtrSafe Function AllocateUserPhysicalPagesNuma Lib "kernel32" (ByVal hProcess As LongPtr, ByRef NumberOfPages As LongPtr, PageArray As LongPtr, ByVal nndPreferred As Long) As BOOL
Public Declare PtrSafe Function MapUserPhysicalPages Lib "kernel32" (ByVal VirtualAddress As LongPtr, ByVal NumberOfPages As LongPtr, PageArray As LongPtr) As BOOL
Public Declare PtrSafe Function MapUserPhysicalPagesScatter Lib "kernel32" (VirtualAddress As LongPtr, ByVal NumberOfPages As LongPtr, PageArray As LongPtr) As BOOL
Public Declare PtrSafe Function FreeUserPhysicalPages Lib "kernel32" (ByVal hProcess As LongPtr, ByRef NumberOfPages As LongPtr, PageArray As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetProcessMemoryInfo Lib "psapi" (ByVal hProcess As LongPtr, ppsmemCounters As Any, ByVal cb As Long) As BOOL
Public Declare PtrSafe Function InitializeProcessForWsWatch Lib "psapi" (ByVal hProcess As LongPtr) As BOOL
Public Declare PtrSafe Function GetWsChanges Lib "psapi" (ByVal hProcess As LongPtr, lpWatchInfo As PSAPI_WS_WATCH_INFORMATION, ByVal cb As Long) As BOOL
Public Declare PtrSafe Function GetWsChangesEx Lib "psapi" (ByVal hProcess As LongPtr, lpWatchInfo As PSAPI_WS_WATCH_INFORMATION_EX, cb As Long) As BOOL
Public Declare PtrSafe Function QueryWorkingSet Lib "psapi" (ByVal hProcess As LongPtr, pv As Any, ByVal cb As Long) As BOOL
Public Declare PtrSafe Function QueryWorkingSetEx Lib "psapi" (ByVal hProcess As LongPtr, pv As Any, ByVal cb As Long) As BOOL
Public Declare PtrSafe Function GetLargePageMinimum Lib "kernel32" () As LongPtr
Public Declare PtrSafe Function GetProcessWorkingSetSize Lib "kernel32" (ByVal hProcess As LongPtr, lpMinimumWorkingSetSize As LongPtr, lpMaximumWorkingSetSize As LongPtr) As BOOL
Public Declare PtrSafe Function GetProcessWorkingSetSizeEx Lib "kernel32" (ByVal hProcess As LongPtr, lpMinimumWorkingSetSize As LongPtr, lpMaximumWorkingSetSize As LongPtr, Flags As QUOTA_LIMITS_FLAGS) As BOOL
Public Declare PtrSafe Function SetProcessWorkingSetSize Lib "kernel32" (ByVal hProcess As LongPtr, ByVal dwMinimumWorkingSetSize As LongPtr, ByVal dwMaximumWorkingSetSize As LongPtr) As BOOL
Public Declare PtrSafe Function SetProcessWorkingSetSizeEx Lib "kernel32" (ByVal hProcess As LongPtr, ByVal dwMinimumWorkingSetSize As LongPtr, ByVal dwMaximumWorkingSetSize As LongPtr, ByVal Flags As QUOTA_LIMITS_FLAGS) As BOOL
Public Declare PtrSafe Function GetWriteWatch Lib "kernel32" (ByVal dwFlags As WriteWatchFlags, ByVal lpBaseAddress As LongPtr, ByVal dwRegionSize As LongPtr, lpAddresses As LongPtr, lpdwCount As LongPtr, lpdwGranularity As Long) As Long
Public Declare PtrSafe Function ResetWriteWatch Lib "kernel32" (ByVal lpBaseAddress As LongPtr, ByVal dwRegionSize As LongPtr) As Long
Public Declare PtrSafe Function CreateMemoryResourceNotification Lib "kernel32" (ByVal NotificationType As MEMORY_RESOURCE_NOTIFICATION_TYPE) As LongPtr
Public Declare PtrSafe Function QueryMemoryResourceNotification Lib "kernel32" (ByVal ResourceNotificationHandle As LongPtr, ResourceState As BOOL) As BOOL
Public Declare PtrSafe Function GetSystemFileCacheSize Lib "kernel32" (lpMinimumFileCacheSize As LongPtr, lpMaximumFileCacheSize As LongPtr, lpFlags As FILE_CACHE_FLAGS) As BOOL
Public Declare PtrSafe Function SetSystemFileCacheSize Lib "kernel32" (ByVal MinimumFileCacheSize As LongPtr, ByVal MaximumFileCacheSize As LongPtr, ByVal Flags As FILE_CACHE_FLAGS) As BOOL
Public Declare PtrSafe Function PrefetchVirtualMemory Lib "kernel32" (ByVal hProcess As LongPtr, ByVal NumberOfEntries As LongPtr, VirtualAddresses As WIN32_MEMORY_RANGE_ENTRY, ByVal Flags As Long) As BOOL
Public Declare PtrSafe Function GetMemoryErrorHandlingCapabilities Lib "kernel32" (Capabilities As MemoryErrorHandlingCapabilityFlags) As BOOL
Public Declare PtrSafe Function RegisterBadMemoryNotification Lib "kernel32" (ByVal Callback As LongPtr) As LongPtr
Public Declare PtrSafe Function UnregisterBadMemoryNotification Lib "kernel32" (ByVal RegistrationHandle As LongPtr) As BOOL
Public Declare PtrSafe Function OfferVirtualMemory Lib "kernel32" (ByVal VirtualAddress As LongPtr, ByVal Size As LongPtr, ByVal Priority As OFFER_PRIORITY) As Long
Public Declare PtrSafe Function ReclaimVirtualMemory Lib "kernel32" (ByVal VirtualAddress As LongPtr, ByVal Size As LongPtr) As Long
Public Declare PtrSafe Function DiscardVirtualMemory Lib "kernel32" (ByVal VirtualAddress As LongPtr, ByVal Size As LongPtr) As Long
Public Declare PtrSafe Function SetProcessValidCallTargets Lib "kernelbase" (ByVal Process As LongPtr, ByVal VirtualAddress As LongPtr, ByVal RegionSize As LongPtr, ByVal NumberOfOffsets As Long, OffsetInformation As CFG_CALL_TARGET_INFO) As BOOL
Public Declare PtrSafe Function SetProcessValidCallTargetsForMappedView Lib "kernelbase" (ByVal Process As LongPtr, ByVal VirtualAddress As LongPtr, ByVal RegionSize As LongPtr, ByVal NumberOfOffsets As Long, OffsetInformation As CFG_CALL_TARGET_INFO, ByVal Section As LongPtr, ByVal ExpectedFileOffset As LongLong) As BOOL
Public Declare PtrSafe Function QueryVirtualMemoryInformation Lib "kernelbase" (ByVal Process As LongPtr, ByVal VirtualAddress As LongPtr, ByVal MemoryInformationClass As WIN32_MEMORY_INFORMATION_CLASS, MemoryInformation As Any, ByVal MemoryInformationSize As LongPtr, Optional ReturnSize As LongPtr) As BOOL
Public Declare PtrSafe Function OpenDedicatedMemoryPartition Lib "kernel32" (ByVal Partition As LongPtr, ByVal DedicatedMemoryTypeId As LongLong, ByVal DesiredAccess As Long, ByVal InheritHandle As BOOL) As LongPtr
Public Declare PtrSafe Function QueryPartitionInformation Lib "kernel32" (ByVal Partition As LongPtr, ByVal PartitionInformationClass As WIN32_MEMORY_PARTITION_INFORMATION_CLASS, PartitionInformation As Any, ByVal PartitionInformationLength As Long) As BOOL


Public Declare PtrSafe Function TlsAlloc Lib "kernel32" () As Long
Public Declare PtrSafe Function TlsSetValue Lib "kernel32" (ByVal dwTlsIndex As Long, ByRef lpTlsValue As Any) As Long
Public Declare PtrSafe Function TlsGetValue Lib "kernel32" (ByVal dwTlsIndex As Long) As LongPtr
Public Declare PtrSafe Function TlsFree Lib "kernel32" (ByVal dwTlsIndex As Long) As Long


Public Declare PtrSafe Function IsEnclaveTypeSupported Lib "kernel32" (ByVal flEnclaveType As ENCLAVE_TYPE) As BOOL
Public DeclareWide PtrSafe Function CreateEnclave Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal dwInitialCommitment As LongPtr, ByVal flEnclaveType As ENCLAVE_TYPE, lpEnclaveInformation As Any, ByVal dwInfoLength As Long, lpEnclaveError As Long) As LongPtr
Public DeclareWide PtrSafe Function LoadEnclaveData Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpAddress As LongPtr, lpBuffer As Any, ByVal nSize As LongPtr, [TypeHint(MemProtectFlags, MemProtectEnclave)] ByVal flProtect As Long, lpPageInformation As Any, ByVal dwInfoLength As Long, lpNumberOfBytesWritten As LongPtr, lpEnclaveError As Long) As BOOL
Public DeclareWide PtrSafe Function InitializeEnclave Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpAddress As LongPtr, lpEnclaveInformation As Any, ByVal dwInfoLength As Long, lpEnclaveError As Long) As BOOL
Public Declare PtrSafe Function LoadEnclaveImageA Lib "kernelbase" (ByVal lpEnclaveAddress As LongPtr, ByVal lpImageName As String) As BOOL
Public Declare PtrSafe Function LoadEnclaveImageW Lib "kernelbase" (ByVal lpEnclaveAddress As LongPtr, ByVal lpImageName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function LoadEnclaveImage Lib "kernelbase" Alias "LoadEnclaveImageW" (ByVal lpEnclaveAddress As LongPtr, ByVal lpImageName As String) As BOOL
Public DeclareWide PtrSafe Function CallEnclave Lib "kernelbase" (ByVal lpRoutine As LongPtr, lpParameter As Any, ByVal fWaitForThread As BOOL, lpReturnValue As LongPtr) As BOOL
Public Declare PtrSafe Function TerminateEnclave Lib "kernelbase" (ByVal lpAddress As LongPtr, ByVal fWait As BOOL) As BOOL
Public Declare PtrSafe Function DeleteEnclave Lib "kernelbase" (ByVal lpAddress As LongPtr) As BOOL

'utilapiset.h
Public Declare PtrSafe Function EncodePointer Lib "kernel32" (ByVal Ptr As LongPtr) As LongPtr
Public Declare PtrSafe Function DecodePointer Lib "kernel32" (ByVal Ptr As LongPtr) As LongPtr
Public Declare PtrSafe Function EncodeSystemPointer Lib "kernel32" (ByVal Ptr As LongPtr) As LongPtr
Public Declare PtrSafe Function DecodeSystemPointer Lib "kernel32" (ByVal Ptr As LongPtr) As LongPtr
Public Declare PtrSafe Function EncodeRemotePointer Lib "kernelbase" (ByVal ProcessHandle As LongPtr, ByVal Ptr As LongPtr, EncodedPtr As LongPtr) As Long
Public Declare PtrSafe Function DecodeRemotePointer Lib "kernelbase" (ByVal ProcessHandle As LongPtr, ByVal Ptr As LongPtr, DecodedPtr As LongPtr) As Long

Public Declare PtrSafe Sub InitializeSListHead Lib "kernel32" (ListHead As SLIST_HEADER)
Public Declare PtrSafe Function InterlockedPopEntrySList Lib "kernel32" (ListHead As SLIST_HEADER) As LongPtr
Public Declare PtrSafe Function InterlockedPushEntrySList Lib "kernel32" (ListHead As SLIST_HEADER, ListEntry As SLIST_ENTRY) As LongPtr
Public Declare PtrSafe Function InterlockedPushListSList Lib "kernel32" Alias "InterlockedPushListSListEx" (ListHead As SLIST_HEADER, List As SLIST_ENTRY, ListEnd As SLIST_ENTRY, ByVal Count As Long) As LongPtr
Public Declare PtrSafe Function InterlockedPushListSListEx Lib "kernel32" (ListHead As SLIST_HEADER, List As SLIST_ENTRY, ListEnd As SLIST_ENTRY, ByVal Count As Long) As LongPtr
Public Declare PtrSafe Function InterlockedFlushSList Lib "kernel32" (ListHead As SLIST_HEADER) As LongPtr
Public Declare PtrSafe Function QueryDepthSList Lib "kernel32" (ListHead As SLIST_HEADER) As Integer

Public Declare PtrSafe Function FindFirstFileExA Lib "kernel32" (ByVal lpFileName As String, ByVal fInfoLevelId As FINDEX_INFO_LEVELS, ByRef lpFindFileData As WIN32_FIND_DATAA, ByVal fSearchOp As FINDEX_SEARCH_OPS, ByVal lpSearchFilter As LongPtr, ByVal dwAdditionalFlags As FINDEX_EXTRA_FLAGS) As LongPtr
Public Declare PtrSafe Function FindFirstFileExW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal fInfoLevelId As FINDEX_INFO_LEVELS, ByRef lpFindFileData As WIN32_FIND_DATAW, ByVal fSearchOp As FINDEX_SEARCH_OPS, ByVal lpSearchFilter As LongPtr, ByVal dwAdditionalFlags As FINDEX_EXTRA_FLAGS) As LongPtr
Public DeclareWide PtrSafe Function FindFirstFileEx Lib "kernel32" Alias "FindFirstFileExW" (ByVal lpFileName As String, ByVal fInfoLevelId As FINDEX_INFO_LEVELS, ByRef lpFindFileData As WIN32_FIND_DATA, ByVal fSearchOp As FINDEX_SEARCH_OPS, ByVal lpSearchFilter As LongPtr, ByVal dwAdditionalFlags As FINDEX_EXTRA_FLAGS) As LongPtr
Public Declare PtrSafe Function FindFirstFileTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal fInfoLevelId As FINDEX_INFO_LEVELS, ByRef lpFindFileData As WIN32_FIND_DATAA, ByVal fSearchOp As FINDEX_SEARCH_OPS, ByVal lpSearchFilter As LongPtr, ByVal dwAdditionalFlags As FINDEX_EXTRA_FLAGS, ByVal hTransaction As LongPtr) As LongPtr
Public Declare PtrSafe Function FindFirstFileTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal fInfoLevelId As FINDEX_INFO_LEVELS, ByRef lpFindFileData As WIN32_FIND_DATAW, ByVal fSearchOp As FINDEX_SEARCH_OPS, ByVal lpSearchFilter As LongPtr, ByVal dwAdditionalFlags As FINDEX_EXTRA_FLAGS, ByVal hTransaction As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function FindFirstFileTransacted Lib "kernel32" Alias "FindFirstFileTransactedW" (ByVal lpFileName As String, ByVal fInfoLevelId As FINDEX_INFO_LEVELS, ByRef lpFindFileData As WIN32_FIND_DATA, ByVal fSearchOp As FINDEX_SEARCH_OPS, ByVal lpSearchFilter As LongPtr, ByVal dwAdditionalFlags As FINDEX_EXTRA_FLAGS, ByVal hTransaction As LongPtr) As LongPtr
Public Declare PtrSafe Function FindFirstFileA Lib "kernel32" (ByVal lpFileName As String, ByRef lpFindFileData As WIN32_FIND_DATAA) As LongPtr
Public Declare PtrSafe Function FindFirstFileW Lib "kernel32" (ByVal lpFileName As LongPtr, ByRef lpFindFileData As WIN32_FIND_DATAW) As LongPtr
Public DeclareWide PtrSafe Function FindFirstFile Lib "kernel32" Alias "FindFirstFileW" (ByVal lpFileName As String, ByRef lpFindFileData As WIN32_FIND_DATA) As LongPtr
'does not exist Public Declare PtrSafe Function FindFirstStreamA Lib "kernel32" (ByVal lpFileName As String, ByVal InfoLevel As STREAM_INFO_LEVELS, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATA, ByVal dwFlags As Long) As LongPtr
Public Declare PtrSafe Function FindFirstStreamW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal InfoLevel As STREAM_INFO_LEVELS, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATAW, ByVal dwFlags As Long) As LongPtr
Public DeclareWide PtrSafe Function FindFirstStream Lib "kernel32" Alias "FindFirstStreamW" (ByVal lpFileName As String, ByVal InfoLevel As STREAM_INFO_LEVELS, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATA, ByVal dwFlags As Long) As LongPtr
'does not exist Public Declare PtrSafe Function FindFirstStreamTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal InfoLevel As STREAM_INFO_LEVELS, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATA, ByVal dwFlags As Long, ByVal hTransaction As LongPtr) As LongPtr
Public Declare PtrSafe Function FindFirstStreamTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal InfoLevel As STREAM_INFO_LEVELS, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATAW, ByVal dwFlags As Long, ByVal hTransaction As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function FindFirstStreamTransacted Lib "kernel32" Alias "FindFirstStreamTransactedW" (ByVal lpFileName As String, ByVal InfoLevel As STREAM_INFO_LEVELS, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATA, ByVal dwFlags As Long, ByVal hTransaction As LongPtr) As LongPtr
Public Declare PtrSafe Function FindNextFileA Lib "kernel32" (ByVal hFindFile As LongPtr, ByRef lpFindFileData As WIN32_FIND_DATAA) As Long
Public Declare PtrSafe Function FindNextFileW Lib "kernel32" (ByVal hFindFile As LongPtr, ByRef lpFindFileData As WIN32_FIND_DATAW) As Long
Public DeclareWide PtrSafe Function FindNextFile Lib "kernel32" Alias "FindNextFileW" (ByVal hFindFile As LongPtr, ByRef lpFindFileData As WIN32_FIND_DATA) As Long
'does not exist Public Declare PtrSafe Function FindNextStreamA Lib "kernel32" (ByVal hFindStream As LongPtr, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATAA) As Long
Public Declare PtrSafe Function FindNextStreamW Lib "kernel32" (ByVal hFindStream As LongPtr, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATAW) As Long
Public DeclareWide PtrSafe Function FindNextStream Lib "kernel32" Alias "FindNextStreamW" (ByVal hFindStream As LongPtr, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATA) As Long
Public Declare PtrSafe Function FindClose Lib "kernel32" (ByVal hFindFile As LongPtr) As Long
'does not exist Public Declare PtrSafe Function FindFirstFileNameA Lib "kernel32" (ByVal lpFileName As String, ByVal dwFlags As Long, StringLength As Long, ByVal LinkName As String) As LongPtr
Public Declare PtrSafe Function FindFirstFileNameW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal dwFlags As Long, StringLength As Long, ByVal LinkName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function FindFirstFileName Lib "kernel32" Alias "FindFirstFileNameW" (ByVal lpFileName As String, ByVal dwFlags As Long, StringLength As Long, ByVal LinkName As String) As LongPtr
'does not exist Public Declare PtrSafe Function FindFirstFileNameTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal dwFlags As Long, StringLength As Long, ByVal LinkName As String, ByVal hTransaction As LongPtr) As LongPtr
Public Declare PtrSafe Function FindFirstFileNameTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal dwFlags As Long, StringLength As Long, ByVal LinkName As LongPtr, ByVal hTransaction As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function FindFirstFileNameTransacted Lib "kernel32" Alias "FindFirstFileNameTransactedW" (ByVal lpFileName As String, ByVal dwFlags As Long, StringLength As Long, ByVal LinkName As String, ByVal hTransaction As LongPtr) As LongPtr
'does not exist Public Declare PtrSafe Function FindNextFileNameA Lib "kernel32" (ByVal hFindStream As LongPtr, StringLength As Long, ByVal LinkName As LongPtr) As BOOL
Public Declare PtrSafe Function FindNextFileNameW Lib "kernel32" (ByVal hFindStream As LongPtr, StringLength As Long, ByVal LinkName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function FindNextFileName Lib "kernel32" Alias "FindNextFileNameW" (ByVal hFindStream As LongPtr, StringLength As Long, ByVal LinkName As LongPtr) As BOOL
Public Declare PtrSafe Function SetSearchPathMode Lib "kernel32" (ByVal dwFlags As SET_SEARCH_PATH_FLAGS) As BOOL
Public Declare PtrSafe Function SearchPathA Lib "kernel32" (ByVal lpPath As String, ByVal lpFileName As String, ByVal lpExtension As String, ByVal nBufferLength As Long, ByVal lpBuffer As String, Optional lpFilePart As String) As Long
Public Declare PtrSafe Function SearchPathW Lib "kernel32" (ByVal lpPath As LongPtr, ByVal lpFileName As LongPtr, ByVal lpExtension As LongPtr, ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr, Optional lpFilePart As LongPtr) As Long
Public DeclareWide PtrSafe Function SearchPath Lib "kernel32" Alias "SearchPathW" (ByVal lpPath As String, ByVal lpFileName As String, ByVal lpExtension As String, ByVal nBufferLength As Long, ByVal lpBuffer As String, Optional lpFilePart As String) As Long
Public Declare PtrSafe Function SetMessageWaitingIndicator Lib "kernel32" (ByVal hMsgIndicator As LongPtr, ByVal ulMsgCount As Long) As BOOL
[Description("Determines whether the current directory should be included in the search path for the specified executable.")]
Public Declare PtrSafe Function NeedCurrentDirectoryForExePathA Lib "kernel32" (ByVal ExeName As String) As BOOL
[Description("Determines whether the current directory should be included in the search path for the specified executable.")]
Public Declare PtrSafe Function NeedCurrentDirectoryForExePathW Lib "kernel32" (ByVal ExeName As LongPtr) As BOOL
[Description("Determines whether the current directory should be included in the search path for the specified executable.")]
Public DeclareWide PtrSafe Function NeedCurrentDirectoryForExePath Lib "kernel32" Alias "NeedCurrentDirectoryForExePathW" (ByVal ExeName As String) As BOOL
Public DeclareWide PtrSafe Function GetFileInformationByName Lib "kernel32" (ByVal FileName As String, ByVal FileInformationClass As FILE_INFO_BY_NAME_CLASS, FileInfoBuffer As Any, ByVal FileInfoBufferSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetFileInformationByName Lib "kernel32" (ByVal FileName As LongPtr, ByVal FileInformationClass As FILE_INFO_BY_NAME_CLASS, FileInfoBuffer As Any, ByVal FileInfoBufferSize As Long) As BOOL
Public Declare PtrSafe Function GetFileInformationByHandle Lib "kernel32" (ByVal hFile As LongPtr, ByRef lpFileInformation As BY_HANDLE_FILE_INFORMATION) As Long
Public Declare PtrSafe Function GetFileInformationByHandleEx Lib "kernel32" (ByVal hFile As LongPtr, ByVal FileInformationClass As FILE_INFO_BY_HANDLE_CLASS, ByVal lpFileInformation As LongPtr, ByVal dwBufferSize As Long) As Long
Public Declare PtrSafe Function SetFileInformationByHandle Lib "kernel32" (ByVal hFile As LongPtr, ByVal FileInformationClass As FILE_INFO_BY_HANDLE_CLASS, lpFileInformation As Any, ByVal dwBufferSize As Long) As Long
Public Declare PtrSafe Function SetFileShortNameA Lib "kernel32" (ByVal hFile As LongPtr, ByVal lpShortName As String) As BOOL
Public Declare PtrSafe Function SetFileShortNameW Lib "kernel32" (ByVal hFile As LongPtr, ByVal lpShortName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetFileShortName Lib "kernel32" Alias "SetFileShortNameW" (ByVal hFile As LongPtr, ByVal lpShortName As String) As BOOL

Public Const CURRENT_IMPORT_REDIRECTION_VERSION = 1
Public Type REDIRECTION_FUNCTION_DESCRIPTOR
    DllName As LongPtr
    FunctionName As LongPtr
    RedirectionTarget As LongPtr
End Type

Public Type REDIRECTION_DESCRIPTOR
    Version As Long
    FunctionCount As Long
    Redirections As LongPtr 'PCREDIRECTION_FUNCTION_DESCRIPTOR
End Type

Public Declare PtrSafe Function GetTickCount Lib "kernel32" () As Long
Public Declare PtrSafe Function GetCurrentTime Lib "kernel32" Alias "GetTickCount" () As Long
Public Declare PtrSafe Function GetTickCount64 Lib "kernel32" () As LongLong
Public Declare PtrSafe Function SetDefaultDllDirectories Lib "kernel32" (ByVal DirectoryFlags As LoadLibraryFlags) As BOOL
Public DeclareWide PtrSafe Function AddDllDirectory Lib "kernel32" (ByVal NewDirectory As String) As LongPtr
Public Declare PtrSafe Function RemoveDllDirectory Lib "kernel32" (ByVal Cookie As LongPtr) As BOOL
Public Declare PtrSafe Function SetDllDirectoryA Lib "kernel32" (Optional ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function SetDllDirectoryW Lib "kernel32" (Optional ByVal lpPathName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetDllDirectory Lib "kernel32" Alias "SetDllDirectoryW" (Optional ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function GetDllDirectoryA Lib "kernel32" (ByVal nBufferLength As Long, Optional ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function GetDllDirectoryW Lib "kernel32" (ByVal nBufferLength As Long, Optional ByVal lpPathName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetDllDirectory Lib "kernel32" Alias "GetDllDirectoryW" (ByVal nBufferLength As Long, Optional ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function LoadLibraryA Lib "kernel32" (ByVal lpLibFileName As String) As LongPtr
Public Declare PtrSafe Function LoadLibraryW Lib "kernel32" (ByVal lpLibFileName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function LoadLibrary Lib "kernel32" Alias "LoadLibraryW" (ByVal lpLibFileName As String) As LongPtr
Public Declare PtrSafe Function LoadLibraryExA Lib "kernel32" (ByVal lpLibFileName As String, ByVal hFile As LongPtr, ByVal dwFlags As LoadLibraryFlags) As LongPtr
Public Declare PtrSafe Function LoadLibraryExW Lib "kernel32" (ByVal lpLibFileName As LongPtr, ByVal hFile As LongPtr, ByVal dwFlags As LoadLibraryFlags) As LongPtr
Public DeclareWide PtrSafe Function LoadLibraryEx Lib "kernel32" Alias "LoadLibraryExW" (ByVal lpLibFileName As String, ByVal hFile As LongPtr, ByVal dwFlags As LoadLibraryFlags) As LongPtr
Public Declare PtrSafe Function GetProcAddress Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpProcName As String) As LongPtr
Public Declare PtrSafe Function FreeLibrary Lib "kernel32" (ByVal hLibModule As LongPtr) As Long
Public Declare PtrSafe Function FreeModule Lib "kernel32" Alias "FreeLibrary" (ByVal hLibModule As LongPtr) As Long
Public DeclareWide PtrSafe Function GetModuleHandle Lib "kernel32" Alias "GetModuleHandleW" (Optional ByVal lpModuleName As String) As LongPtr
Public Declare PtrSafe Function GetModuleHandleA Lib "kernel32" (Optional ByVal lpModuleName As String) As LongPtr
Public Declare PtrSafe Function GetModuleHandleW Lib "kernel32" (Optional ByVal lpModuleName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function GetModuleHandleEx Lib "kernel32" Alias "GetModuleHandleExW" (ByVal dwFlags As GET_MODULE_EX_FLAGS, lpModuleName As Any, phModule As LongPtr) As BOOL
Public Declare PtrSafe Function GetModuleHandleExA Lib "kernel32" (ByVal dwFlags As GET_MODULE_EX_FLAGS, ByVal lpModuleName As String, phModule As LongPtr) As BOOL
Public Declare PtrSafe Function GetModuleHandleExW Lib "kernel32" (ByVal dwFlags As GET_MODULE_EX_FLAGS, ByVal lpModuleName As LongPtr, phModule As LongPtr) As BOOL
Public Declare PtrSafe Sub FreeLibraryAndExitThread Lib "kernel32" (ByVal hLibModule As LongPtr, ByVal dwExitCode As Long)
Public Declare PtrSafe Function GetWindowsDirectoryA Lib "kernel32" (ByVal lpBuffer As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetWindowsDirectoryW Lib "kernel32" (ByVal lpBuffer As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetWindowsDirectory Lib "kernel32" Alias "GetWindowsDirectoryW" (ByVal lpBuffer As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetModuleFileNameA Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpFileName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetModuleFileNameW Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpFileName As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetModuleFileName Lib "kernel32" Alias "GetModuleFileNameW" (ByVal hModule As LongPtr, ByVal lpFileName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetModuleFileNameExA Lib "psapi" (ByVal hProcess As LongPtr, ByVal hModule As LongPtr, ByVal lpFileName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetModuleFileNameExW Lib "psapi" (ByVal hProcess As LongPtr, ByVal hModule As LongPtr, ByVal lpFileName As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetModuleFileNameEx Lib "psapi" Alias "GetModuleFileNameExW" (ByVal hProcess As LongPtr, ByVal hModule As LongPtr, ByVal lpFileName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetProcessImageFileNameA Lib "psapi" (ByVal hProcess As LongPtr, ByVal lpImageFileName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetProcessImageFileNameW Lib "psapi" (ByVal hProcess As LongPtr, ByVal lpImageFileName As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetProcessImageFileName Lib "psapi" Alias "GetProcessImageFileNameW" (ByVal hProcess As LongPtr, ByVal lpImageFileName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function EnumProcesses Lib "psapi" (lpidProcess As Long, ByVal cb As Long, lpcbNeeded As Long) As BOOL
Public Declare PtrSafe Function EnumProcessModules Lib "psapi" (ByVal hProcess As LongPtr, lphModule As LongPtr, ByVal cb As Long, lpcbNeeded As Long) As BOOL
Public Declare PtrSafe Function EnumProcessModulesEx Lib "psapi" (ByVal hProcess As LongPtr, lphModule As LongPtr, ByVal cb As Long, lpcbNeeded As Long, ByVal dwFilterFlag As EnumModulesFlags) As BOOL
Public Declare PtrSafe Function EnumPageFilesA Lib "psapi" (ByVal pCallbackRoutine As LongPtr, pContext As Any) As BOOL
Public DeclareWide PtrSafe Function EnumPageFilesW Lib "psapi" (ByVal pCallbackRoutine As LongPtr, pContext As Any) As BOOL
Public DeclareWide PtrSafe Function EnumPageFiles Lib "psapi" Alias "EnumPageFilesW" (ByVal pCallbackRoutine As LongPtr, pContext As Any) As BOOL
Public Declare PtrSafe Function EnumDeviceDrivers Lib "psapi" (lpImageBase As LongPtr, ByVal cb As Long, lpcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetDeviceDriverBaseNameA Lib "psapi" (ByVal ImageBase As LongPtr, ByVal lpBaseName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetDeviceDriverBaseNameW Lib "psapi" (ByVal ImageBase As LongPtr, ByVal lpBaseName As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetDeviceDriverBaseName Lib "psapi" Alias "GetDeviceDriverBaseNameW" (ByVal ImageBase As LongPtr, ByVal lpBaseName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetMappedFileNameA Lib "psapi" (ByVal hProcess As LongPtr, ByVal lpv As LongPtr, ByVal lpFilename As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetMappedFileNameW Lib "psapi" (ByVal hProcess As LongPtr, ByVal lpv As LongPtr, ByVal lpFilename As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetMappedFileName Lib "psapi" Alias "GetMappedFileNameW" (ByVal hProcess As LongPtr, ByVal lpv As LongPtr, ByVal lpFilename As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetModuleBaseNameA Lib "psapi" (ByVal hProcess As LongPtr, ByVal hModule As LongPtr, ByVal lpBaseName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetModuleBaseNameW Lib "psapi" (ByVal hProcess As LongPtr, ByVal hModule As LongPtr, ByVal lpBaseName As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetModuleBaseName Lib "psapi" Alias "GetModuleBaseNameW" (ByVal hProcess As LongPtr, ByVal hModule As LongPtr, ByVal lpBaseName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetModuleInformation Lib "psapi" (ByVal hProcess As LongPtr, ByVal hModule As LongPtr, lpmodinfo As MODULEINFO, ByVal cb As Long) As BOOL
Public Declare PtrSafe Function DisableThreadLibraryCalls Lib "kernel32" (ByVal hLibModule As LongPtr) As BOOL

'libloaderapi2.h
Public Declare PtrSafe Function LoadPackagedLibrary Lib "kernelbase" (ByVal lpwLibFileName As LongPtr, ByVal Reserved As Long) As LongPtr
Public DeclareWide PtrSafe Function LoadPackagedLibrary Lib "kernelbase" (ByVal lpwLibFileName As String, ByVal Reserved As Long) As LongPtr
Public Declare PtrSafe Function QueryOptionalDelayLoadedAPI Lib "kernelbase" (ByVal hParentModule As LongPtr, ByVal lpDllName As LongPtr, ByVal lpProcName As LongPtr, ByVal Reserved As Long) As BOOL
Public DeclareWide PtrSafe Function QueryOptionalDelayLoadedAPI Lib "kernelbase" (ByVal hParentModule As LongPtr, ByVal lpDllName As String, ByVal lpProcName As String, ByVal Reserved As Long) As BOOL

/*
wincon.h, 100%
wincontypes.h, 100%
consoleapi.h, 100%
consoleapi2.h, 100%
consoleapi3.h, 100%
*/

Public Type SMALL_RECT
    Left As Integer
    Top As Integer
    Right As Integer
    Bottom As Integer
End Type

Public Enum CONTROL_KEYSTATE_FLAGS
    RIGHT_ALT_PRESSED = &H0001  ' the right alt key is pressed.
    LEFT_ALT_PRESSED = &H0002  ' the left alt key is pressed.
    RIGHT_CTRL_PRESSED = &H0004  ' the right ctrl key is pressed.
    LEFT_CTRL_PRESSED = &H0008  ' the left ctrl key is pressed.
    SHIFT_PRESSED = &H0010  ' the shift key is pressed.
    NUMLOCK_ON = &H0020  ' the numlock light is on.
    SCROLLLOCK_ON = &H0040  ' the scrolllock light is on.
    CAPSLOCK_ON = &H0080  ' the capslock light is on.
    ENHANCED_KEY = &H0100  ' the key is enhanced.
    NLS_DBCSCHAR = &H00010000  ' DBCS for JPN: SBCS/DBCS mode.
    NLS_ALPHANUMERIC = &H00000000  ' DBCS for JPN: Alphanumeric mode.
    NLS_KATAKANA = &H00020000  ' DBCS for JPN: Katakana mode.
    NLS_HIRAGANA = &H00040000  ' DBCS for JPN: Hiragana mode.
    NLS_ROMAN = &H00400000  ' DBCS for JPN: Roman/Noroman mode.
    NLS_IME_CONVERSION = &H00800000  ' DBCS for JPN: IME conversion.
    ALTNUMPAD_BIT = &H04000000  ' AltNumpad OEM char (copied from ntuser\inc\kbd.h) ;internal_NT
    NLS_IME_DISABLE = &H20000000  ' DBCS for JPN: IME enable/disable.
End Enum
Public Type KEY_EVENT_RECORD
    bKeyDown As Long
    wRepeatCount As Integer
    /* [ TypeHint(VirtualKeyCodes) ] */ wVirtualKeyCode As Integer
    wVirtualScanCode As Integer
    'union {
    UnicodeChar As Integer
    '     CHAR   AsciiChar;
    ' } uChar;
    dwControlKeyState As CONTROL_KEYSTATE_FLAGS
End Type

Public Enum MOUSEVENT_RECORD_STATES
    FROM_LEFT_1ST_BUTTON_PRESSED = &H0001
    RIGHTMOST_BUTTON_PRESSED = &H0002
    FROM_LEFT_2ND_BUTTON_PRESSED = &H0004
    FROM_LEFT_3RD_BUTTON_PRESSED = &H0008
    FROM_LEFT_4TH_BUTTON_PRESSED = &H0010
End Enum
Public Enum MOUSEVENT_RECORD_EVENTS
    MOUSE_MOVED = &H0001
    DOUBLE_CLICK = &H0002
    MOUSE_WHEELED = &H0004
' '#if(_WIN32_WINNT >= 0x0600)
    MOUSE_HWHEELED = &H0008
End Enum
Public Type MOUSE_EVENT_RECORD
    dwMousePosition As COORD
    dwButtonState As MOUSEVENT_RECORD_STATES
    dwControlKeyState As CONTROL_KEYSTATE_FLAGS
    dwEventFlags As MOUSEVENT_RECORD_EVENTS
End Type

Public Type WINDOW_BUFFER_SIZE_RECORD
    dwSize As COORD
End Type

Public Type MENU_EVENT_RECORD
    dwCommandId As Long
End Type

Public Type FOCUS_EVENT_RECORD
    bSetFocus As BOOL
End Type

Public Enum INPUT_RECORD_TYPE
    KEY_EVENT = &H0001  ' Event contains key event record
    MOUSE_EVENT = &H0002  ' Event contains mouse event record
    WINDOW_BUFFER_SIZE_EVENT = &H0004  ' Event contains window change event record
    MENU_EVENT = &H0008  ' Event contains menu event record
    FOCUS_EVENT = &H0010  ' event contains focus change
End Enum
Public Type INPUT_RECORD
    /* [ TypeHint(INPUT_RECORD_TYPE) ] */ EventType As Integer
    abData(0 To 15) As Byte
End Type

Public Enum CONSOLE_CHAR_ATTRIB
    FOREGROUND_BLUE = &H0001  ' text color contains blue.
    FOREGROUND_GREEN = &H0002  ' text color contains green.
    FOREGROUND_RED = &H0004  ' text color contains red.
    FOREGROUND_INTENSITY = &H0008  ' text color is intensified.
    BACKGROUND_BLUE = &H0010  ' background color contains blue.
    BACKGROUND_GREEN = &H0020  ' background color contains green.
    BACKGROUND_RED = &H0040  ' background color contains red.
    BACKGROUND_INTENSITY = &H0080  ' background color is intensified.
    COMMON_LVB_LEADING_BYTE = &H0100  ' Leading Byte of DBCS
    COMMON_LVB_TRAILING_BYTE = &H0200  ' Trailing Byte of DBCS
    COMMON_LVB_GRID_HORIZONTAL = &H0400  ' DBCS: Grid attribute: top horizontal.
    COMMON_LVB_GRID_LVERTICAL = &H0800  ' DBCS: Grid attribute: left vertical.
    COMMON_LVB_GRID_RVERTICAL = &H1000  ' DBCS: Grid attribute: right vertical.
    COMMON_LVB_REVERSE_VIDEO = &H4000  ' DBCS: Reverse fore/back ground attribute.
    COMMON_LVB_UNDERSCORE = &H8000&  ' DBCS: Underscore.
    COMMON_LVB_SBCSDBCS = &H0300  ' SBCS or DBCS flag.
End Enum
Public Type CHAR_INFO
    UnicodeChar As Integer
    /* [ TypeHint(CONSOLE_CHAR_ATTRIB) ] */ Attributes As Integer
End Type

Public Type CONSOLE_FONT_INFO
    nFont As Long
    dwFontSize As COORD
End Type

Public Enum CONSOLE_INPUT_MODE_FLAGS
    ENABLE_PROCESSED_INPUT = &H0001
    ENABLE_LINE_INPUT = &H0002
    ENABLE_ECHO_INPUT = &H0004
    ENABLE_WINDOW_INPUT = &H0008
    ENABLE_MOUSE_INPUT = &H0010
    ENABLE_INSERT_MODE = &H0020
    ENABLE_QUICK_EDIT_MODE = &H0040
    ENABLE_EXTENDED_FLAGS = &H0080
    ENABLE_AUTO_POSITION = &H0100
    ENABLE_VIRTUAL_TERMINAL_INPUT = &H0200
End Enum
Public Enum CONSOLE_OUTPUT_MODE_FLAGS
    ENABLE_PROCESSED_OUTPUT = &H0001
    ENABLE_WRAP_AT_EOL_OUTPUT = &H0002
    ENABLE_VIRTUAL_TERMINAL_PROCESSING = &H0004
    DISABLE_NEWLINE_AUTO_RETURN = &H0008
    ENABLE_LVB_GRID_WORLDWIDE = &H0010
End Enum

Public Type CONSOLE_READCONSOLE_CONTROL
    nLength As Long
    nInitialChars As Long
    dwCtrlWakeupMask As Long
    dwControlKeyState As CONTROL_KEYSTATE_FLAGS
End Type

Public Enum CONSOLE_CTRL_EVENT_FLAGS
    CTRL_C_EVENT = 0
    CTRL_BREAK_EVENT = 1
    CTRL_CLOSE_EVENT = 2
'  3 is reserved!
'  4 is reserved!
    CTRL_LOGOFF_EVENT = 5
    CTRL_SHUTDOWN_EVENT = 6
End Enum

Public Enum PSEUDOCONSOLE_FLAGS
    PSEUDOCONSOLE_INHERIT_CURSOR = &H1
End Enum

Public Const CONSOLE_REAL_OUTPUT_HANDLE  = (-2)
Public Const CONSOLE_REAL_INPUT_HANDLE  = (-3)

Public Enum CONSOLE_SCREEN_BUFFER_FLAGS
    CONSOLE_TEXTMODE_BUFFER = 1
End Enum

Public Type CONSOLE_CURSOR_INFO
    dwSize As Long
    bVisible As Long
End Type

Public Type CONSOLE_SCREEN_BUFFER_INFO
    dwSize As COORD
    dwCursorPosition As COORD
    /* [ TypeHint (CONSOLE_CHAR_ATTRIB) ] */ wAttributes As Integer
    srWindow As SMALL_RECT
    dwMaximumWindowSize As COORD
End Type
Public Type CONSOLE_SCREEN_BUFFER_INFOEX
    dwSize As COORD
    dwCursorPosition As COORD
    /* [ TypeHint (CONSOLE_CHAR_ATTRIB) ] */ wAttributes As Integer
    srWindow As SMALL_RECT
    dwMaximumWindowSize As COORD
    /* [ TypeHint (CONSOLE_CHAR_ATTRIB) ] */ wPopupAttributes As Integer
    [Description("Always CFALSE on Vista+")] bFullscreenSupported As BOOL
    ColorTable(15) As Long
End Type

Public Enum STD_HANDLES
    STD_INPUT_HANDLE = -10
    STD_OUTPUT_HANDLE = -11
    STD_ERROR_HANDLE = -12
End Enum

Public Type CONSOLE_FONT_INFOEX
    cbSize As Long
    nFont As Long
    dwFontSize As COORD
    FontFamily As Long
    FontWeight As Long
    FaceName(0 To (LF_FACESIZE - 1)) As Integer
End Type

Public Enum CONSOLE_SEL_INFO_FLAGS
    CONSOLE_NO_SELECTION = &H0000
    CONSOLE_SELECTION_IN_PROGRESS = &H0001  ' selection has begun
    CONSOLE_SELECTION_NOT_EMPTY = &H0002  ' non-null select rectangle
    CONSOLE_MOUSE_SELECTION = &H0004  ' selecting with mouse
    CONSOLE_MOUSE_DOWN = &H0008  ' mouse is down
End Enum
Public Type CONSOLE_SELECTION_INFO
    dwFlags As CONSOLE_SEL_INFO_FLAGS
    dwSelectionAnchor As COORD
    srSelection As SMALL_RECT
End Type

Public Enum CONSOLE_HISTORY_FLAGS
    HISTORY_NO_DUP_FLAG = &H1
End Enum
Public Type CONSOLE_HISTORY_INFO
    cbSize As Long
    HistoryBufferSize As Long
    NumberOfHistoryBuffers As Long
    dwFlags As CONSOLE_HISTORY_FLAGS
End Type

Public Enum CONSOLE_FS_MODE
    CONSOLE_FULLSCREEN = 1  ' fullscreen console
    CONSOLE_FULLSCREEN_HARDWARE = 2  ' console owns the hardware
End Enum
Public Enum CONSOLE_WINDOW_MODE
    CONSOLE_FULLSCREEN_MODE = 1
    CONSOLE_WINDOWED_MODE = 2
End Enum

Public Declare PtrSafe Function GetStdHandle Lib "kernel32" (ByVal nStdHandle As STD_HANDLES) As LongPtr
Public Declare PtrSafe Function SetStdHandle Lib "kernel32" (ByVal nStdHandle As STD_HANDLES, ByVal hHandle As LongPtr) As BOOL
Public Declare PtrSafe Function SetStdHandleEx Lib "kernel32" (ByVal nStdHandle As STD_HANDLES, ByVal hHandle As LongPtr, phPrevValue As LongPtr) As BOOL
Public Declare PtrSafe Function AllocConsole Lib "kernel32" () As BOOL
Public Declare PtrSafe Function FreeConsole Lib "kernel32" () As BOOL
Public Declare PtrSafe Function AttachConsole Lib "kernel32" (ByVal dwProcessId As Long) As BOOL
Public Declare PtrSafe Function GetConsoleCP Lib "kernel32" () As Long
Public Declare PtrSafe Function SetConsoleCP Lib "kernel32" (ByVal wCodePageId As Long) As BOOL
Public Declare PtrSafe Function GetConsoleOutputCP Lib "kernel32" () As Long
Public Declare PtrSafe Function SetConsoleOutputCP Lib "kernel32" (ByVal wCodePageId As Long) As BOOL
Public Declare PtrSafe Function GetConsoleMode Lib "kernel32" (ByVal hConsoleHandle As LongPtr, lpMode As CONSOLE_INPUT_MODE_FLAGS) As BOOL
Public Declare PtrSafe Function SetConsoleMode Lib "kernel32" (ByVal hConsoleHandle As LongPtr, ByVal dwMode As CONSOLE_INPUT_MODE_FLAGS) As BOOL
Public Declare PtrSafe Function GetNumberOfConsoleInputEvents Lib "kernel32" (ByVal hConsoleInput As LongPtr, lpNumberOfEvents As Long) As BOOL
Public Declare PtrSafe Function ReadConsoleInputA Lib "kernel32" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsRead As Long) As BOOL
Public Declare PtrSafe Function ReadConsoleInputW Lib "kernel32" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsRead As Long) As BOOL
Public DeclareWide PtrSafe Function ReadConsoleInput Lib "kernel32" Alias "ReadConsoleInputW" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsRead As Long) As BOOL
Public Declare PtrSafe Function PeekConsoleInputA Lib "kernel32" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsRead As Long) As BOOL
Public Declare PtrSafe Function PeekConsoleInputW Lib "kernel32" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsRead As Long) As BOOL
Public DeclareWide PtrSafe Function PeekConsoleInput Lib "kernel32" Alias "PeekConsoleInputW" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsRead As Long) As BOOL
Public Declare PtrSafe Function ReadConsoleA Lib "kernel32" (ByVal hConsoleInput As LongPtr, ByVal lpBuffer As String, ByVal nNumberOfCharsToRead As Long, ByRef lpNumberOfCharsRead As Long, pInputControl As CONSOLE_READCONSOLE_CONTROL) As BOOL
Public Declare PtrSafe Function ReadConsoleW Lib "kernel32" (ByVal hConsoleInput As LongPtr, ByVal lpBuffer As LongPtr, ByVal nNumberOfCharsToRead As Long, ByRef lpNumberOfCharsRead As Long, pInputControl As CONSOLE_READCONSOLE_CONTROL) As BOOL
Public DeclareWide PtrSafe Function ReadConsole Lib "kernel32" Alias "ReadConsoleW" (ByVal hConsoleInput As LongPtr, ByVal lpBuffer As String, ByVal nNumberOfCharsToRead As Long, ByRef lpNumberOfCharsRead As Long, pInputControl As CONSOLE_READCONSOLE_CONTROL) As BOOL
Public Declare PtrSafe Function WriteConsoleA Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal lpBuffer As String, ByVal nNumberOfCharsToWrite As Long, ByRef lpNumberOfCharsWritten As Long, ByVal lpReserved As LongPtr) As BOOL
Public Declare PtrSafe Function WriteConsoleW Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal lpBuffer As LongPtr, ByVal nNumberOfCharsToWrite As Long, ByRef lpNumberOfCharsWritten As Long, ByVal lpReserved As LongPtr) As BOOL
Public DeclareWide PtrSafe Function WriteConsole Lib "kernel32" Alias "WriteConsoleW" (ByVal hConsoleOutput As LongPtr, ByVal lpBuffer As String, ByVal nNumberOfCharsToWrite As Long, ByRef lpNumberOfCharsWritten As Long, ByVal lpReserved As LongPtr) As BOOL
Public Declare PtrSafe Function SetConsoleCtrlHandler Lib "kernel32" (ByVal HandlerRoutine As LongPtr, ByVal Add As BOOL) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function CreatePseudoConsole Lib "kernel32" (ByVal size As Long, ByVal hInput As LongPtr, ByVal hOutput As LongPtr, ByVal dwFlags As PSEUDOCONSOLE_FLAGS, phPC As LongPtr) As Long
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function ResizePseudoConsole Lib "kernel32" (ByVal hPC As LongPtr, ByVal size As Long) As Long
Public Declare PtrSafe Sub ClosePseudoConsole Lib "kernel32" (ByVal hPC As LongPtr)
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function FillConsoleOutputCharacterA Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal cCharacter As Byte, ByVal nLength As Long, ByVal dwWriteCoord As Long, lpNumberOfCharsWritten As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function FillConsoleOutputCharacterW Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal cCharacter As Integer, ByVal nLength As Long, ByVal dwWriteCoord As Long, lpNumberOfCharsWritten As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public DeclareWide PtrSafe Function FillConsoleOutputCharacter Lib "kernel32" Alias "FillConsoleOutputCharacterW" (ByVal hConsoleOutput As LongPtr, ByVal cCharacter As Integer, ByVal nLength As Long, ByVal dwWriteCoord As Long, lpNumberOfCharsWritten As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function FillConsoleOutputAttribute Lib "kernel32" (ByVal hConsoleOutput As LongPtr, [TypeHint(CONSOLE_CHAR_ATTRIB)] ByVal wAttribute As Integer, ByVal nLength As Long, ByVal dwWriteCoord As Long, lpNumberOfAttrsWritten As Long) As BOOL
Public Declare PtrSafe Function GenerateConsoleCtrlEvent Lib "kernel32" (ByVal dwCtrlEvent As CONSOLE_CTRL_EVENT_FLAGS, ByVal dwProcessGroupId As Long) As BOOL
Public Declare PtrSafe Function CreateConsoleScreenBuffer Lib "kernel32" (ByVal dwDesiredAccess As GenericRights, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwFlags As CONSOLE_SCREEN_BUFFER_FLAGS, ByVal lpScreenBufferData As LongPtr) As LongPtr
Public Declare PtrSafe Function SetConsoleActiveScreenBuffer Lib "kernel32" (ByVal hConsoleOutput As LongPtr) As BOOL
Public Declare PtrSafe Function FlushConsoleInputBuffer Lib "kernel32" (ByVal hConsoleInput As LongPtr) As BOOL
Public Declare PtrSafe Function GetConsoleCursorInfo Lib "kernel32" (ByVal hConsoleOutput As LongPtr, lpConsoleCursorInfo As CONSOLE_CURSOR_INFO) As BOOL
Public Declare PtrSafe Function SetConsoleCursorInfo Lib "kernel32" (ByVal hConsoleOutput As LongPtr, lpConsoleCursorInfo As CONSOLE_CURSOR_INFO) As BOOL
Public Declare PtrSafe Function GetConsoleScreenBufferInfo Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByRef lpConsoleScreenBufferInfo As CONSOLE_SCREEN_BUFFER_INFO) As BOOL
Public Declare PtrSafe Function GetConsoleScreenBufferInfoEx Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByRef lpConsoleScreenBufferInfo As CONSOLE_SCREEN_BUFFER_INFOEX) As BOOL
Public Declare PtrSafe Function SetConsoleScreenBufferInfoEx Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByRef lpConsoleScreenBufferInfo As CONSOLE_SCREEN_BUFFER_INFOEX) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function SetConsoleScreenBufferSize Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal dwSize As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function SetConsoleCursorPosition Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal dwCursorPosition As Long) As Long
Public Declare PtrSafe Function GetLargestConsoleWindowSize Lib "kernel32" (ByVal hConsoleOutput As LongPtr) As COORD
Public Declare PtrSafe Function SetConsoleTextAttribute Lib "kernel32" (ByVal hConsoleOutput As LongPtr, [TypeHint(CONSOLE_CHAR_ATTRIB)] ByVal wAttributes As Integer) As BOOL
Public Declare PtrSafe Function SetConsoleWindowInfo Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal bAbsolute As BOOL, lpConsoleWindow As SMALL_RECT) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function WriteConsoleOutputCharacterA Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal lpCharacter As String, ByVal nLength As Long, ByVal dwWriteCoord As Long, lpNumberOfCharsWritten As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function WriteConsoleOutputCharacterW Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal lpCharacter As LongPtr, ByVal nLength As Long, ByVal dwWriteCoord As Long, lpNumberOfCharsWritten As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public DeclareWide PtrSafe Function WriteConsoleOutputCharacter Lib "kernel32" Alias "WriteConsoleOutputCharacterW" (ByVal hConsoleOutput As LongPtr, ByVal lpCharacter As String, ByVal nLength As Long, ByVal dwWriteCoord As Long, lpNumberOfCharsWritten As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function WriteConsoleOutputAttribute Lib "kernel32" (ByVal hConsoleOutput As LongPtr, [TypeHint(CONSOLE_CHAR_ATTRIB)] wAttribute As Integer, ByVal nLength As Long, ByVal dwWriteCoord As Long, lpNumberOfAttrsWritten As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function ReadConsoleOutputCharacterA Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal lpCharacter As String, ByVal nLength As Long, ByVal dwReadCoord As Long, lpNumberOfCharsRead As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function ReadConsoleOutputCharacterW Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal lpCharacter As LongPtr, ByVal nLength As Long, ByVal dwReadCoord As Long, lpNumberOfCharsRead As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public DeclareWide PtrSafe Function ReadConsoleOutputCharacter Lib "kernel32" Alias "ReadConsoleOutputCharacterW" (ByVal hConsoleOutput As LongPtr, ByVal lpCharacter As String, ByVal nLength As Long, ByVal dwReadCoord As Long, lpNumberOfCharsRead As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function ReadConsoleOutputAttribute Lib "kernel32" (ByVal hConsoleOutput As LongPtr, [TypeHint(CONSOLE_CHAR_ATTRIB)] wAttribute As Integer, ByVal nLength As Long, ByVal dwReadCoord As Long, lpNumberOfAttrsRead As Long) As BOOL
Public Declare PtrSafe Function WriteConsoleInputA Lib "kernel32" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsWritten As Long) As BOOL
Public Declare PtrSafe Function WriteConsoleInputW Lib "kernel32" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsWritten As Long) As BOOL
Public DeclareWide PtrSafe Function WriteConsoleInput Lib "kernel32" Alias "WriteConsoleInputW" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsWritten As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function ScrollConsoleScreenBufferA Lib "kernel32" (ByVal hConsoleOutput As LongPtr, lpScrollRectangle As SMALL_RECT, lpClipRectangle As SMALL_RECT, ByVal dwDestinationOrigin As Long, ByRef lpFill As CHAR_INFO) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function ScrollConsoleScreenBufferW Lib "kernel32" (ByVal hConsoleOutput As LongPtr, lpScrollRectangle As SMALL_RECT, lpClipRectangle As SMALL_RECT, ByVal dwDestinationOrigin As Long, ByRef lpFill As CHAR_INFO) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public DeclareWide PtrSafe Function ScrollConsoleScreenBuffer Lib "kernel32" Alias "ScrollConsoleScreenBufferW" (ByVal hConsoleOutput As LongPtr, lpScrollRectangle As SMALL_RECT, lpClipRectangle As SMALL_RECT, ByVal dwDestinationOrigin As Long, ByRef lpFill As CHAR_INFO) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function WriteConsoleOutputA Lib "kernel32" (ByVal hConsoleOutput As LongPtr, lpBuffer As CHAR_INFO, ByVal dwBufferSize As Long, ByVal dwBufferCoord As Long, lpWriteRegion As SMALL_RECT) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function WriteConsoleOutputW Lib "kernel32" (ByVal hConsoleOutput As LongPtr, lpBuffer As CHAR_INFO, ByVal dwBufferSize As Long, ByVal dwBufferCoord As Long, lpWriteRegion As SMALL_RECT) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public DeclareWide PtrSafe Function WriteConsoleOutput Lib "kernel32" Alias "WriteConsoleOutputW" (ByVal hConsoleOutput As LongPtr, lpBuffer As CHAR_INFO, ByVal dwBufferSize As Long, ByVal dwBufferCoord As Long, lpWriteRegion As SMALL_RECT) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function ReadConsoleOutputA Lib "kernel32" (ByVal hConsoleOutput As LongPtr, lpBuffer As CHAR_INFO, ByVal dwBufferSize As Long, ByVal dwBufferCoord As Long, lpReadRegion As SMALL_RECT) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function ReadConsoleOutputW Lib "kernel32" (ByVal hConsoleOutput As LongPtr, lpBuffer As CHAR_INFO, ByVal dwBufferSize As Long, ByVal dwBufferCoord As Long, lpReadRegion As SMALL_RECT) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public DeclareWide PtrSafe Function ReadConsoleOutput Lib "kernel32" Alias "ReadConsoleOutputW" (ByVal hConsoleOutput As LongPtr, lpBuffer As CHAR_INFO, ByVal dwBufferSize As Long, ByVal dwBufferCoord As Long, lpReadRegion As SMALL_RECT) As BOOL
Public Declare PtrSafe Function GetConsoleTitleA Lib "kernel32" (ByVal lpConsoleTitle As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetConsoleTitleW Lib "kernel32" (ByVal lpConsoleTitle As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetConsoleTitle Lib "kernel32" Alias "GetConsoleTitleW" (ByVal lpConsoleTitle As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetConsoleOriginalTitleA Lib "kernel32" (ByVal lpConsoleTitle As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetConsoleOriginalTitleW Lib "kernel32" (ByVal lpConsoleTitle As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetConsoleOriginalTitle Lib "kernel32" Alias "GetConsoleOriginalTitleW" (ByVal lpConsoleTitle As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function SetConsoleTitleA Lib "kernel32" (ByVal lpConsoleTitle As String) As BOOL
Public Declare PtrSafe Function SetConsoleTitleW Lib "kernel32" (ByVal lpConsoleTitle As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetConsoleTitle Lib "kernel32" Alias "SetConsoleTitleW" (ByVal lpConsoleTitle As String) As BOOL
Public Declare PtrSafe Function GetNumberOfConsoleMouseButtons Lib "kernel32" (lpNumberOfMouseButtons As Long) As BOOL
Public Declare PtrSafe Function GetConsoleFontSize Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal nFont As Long) As COORD
Public Declare PtrSafe Function GetCurrentConsoleFont Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal bMaximumWindow As BOOL, lpConsoleCurrentFont As CONSOLE_FONT_INFO) As BOOL
Public Declare PtrSafe Function GetCurrentConsoleFontEx Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal bMaximumWindow As BOOL, lpConsoleCurrentFont As CONSOLE_FONT_INFOEX) As BOOL
Public Declare PtrSafe Function SetCurrentConsoleFontEx Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal bMaximumWindow As BOOL, lpConsoleCurrentFont As CONSOLE_FONT_INFOEX) As BOOL
Public Declare PtrSafe Function GetConsoleSelectionInfo Lib "kernel32" (lpConsoleSelectionInfo As CONSOLE_SELECTION_INFO) As BOOL
Public Declare PtrSafe Function GetConsoleHistoryInfo Lib "kernel32" (lpConsoleHistoryInfo As CONSOLE_HISTORY_INFO) As BOOL
Public Declare PtrSafe Function SetConsoleHistoryInfo Lib "kernel32" (lpConsoleHistoryInfo As CONSOLE_HISTORY_INFO) As BOOL
Public Declare PtrSafe Function GetConsoleDisplayMode Lib "kernel32" (lpModeFlags As CONSOLE_FS_MODE) As BOOL
Public Declare PtrSafe Function SetConsoleDisplayMode Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal dwFlags As CONSOLE_WINDOW_MODE, lpNewScreenBufferDimensions As COORD) As BOOL
Public Declare PtrSafe Function GetConsoleWindow Lib "kernel32" () As LongPtr
Public Declare PtrSafe Function AddConsoleAliasA Lib "kernel32" (ByVal Source As String, ByVal Target As String, ByVal ExeName As String) As BOOL
Public Declare PtrSafe Function AddConsoleAliasW Lib "kernel32" (ByVal Source As LongPtr, ByVal Target As LongPtr, ByVal ExeName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AddConsoleAlias Lib "kernel32" Alias "AddConsoleAliasW" (ByVal Source As String, ByVal Target As String, ByVal ExeName As String) As BOOL
Public Declare PtrSafe Function GetConsoleAliasA Lib "kernel32" (ByVal Source As String, ByVal TargetBuffer As String, ByVal TargetBufferLength As Long, ByVal ExeName As String) As BOOL
Public Declare PtrSafe Function GetConsoleAliasW Lib "kernel32" (ByVal Source As LongPtr, ByVal TargetBuffer As LongPtr, ByVal TargetBufferLength As Long, ByVal ExeName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetConsoleAlias Lib "kernel32" Alias "GetConsoleAliasW" (ByVal Source As String, ByVal TargetBuffer As String, ByVal TargetBufferLength As Long, ByVal ExeName As String) As BOOL
Public Declare PtrSafe Function GetConsoleAliasesLengthA Lib "kernel32" (ByVal ExeName As String) As Long
Public Declare PtrSafe Function GetConsoleAliasesLengthW Lib "kernel32" (ByVal ExeName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetConsoleAliasesLength Lib "kernel32" Alias "GetConsoleAliasesLengthW" (ByVal ExeName As String) As Long
Public Declare PtrSafe Function GetConsoleAliasExesLengthA Lib "kernel32" () As Long
Public Declare PtrSafe Function GetConsoleAliasExesLengthW Lib "kernel32" () As Long
Public DeclareWide PtrSafe Function GetConsoleAliasExesLength Lib "kernel32" Alias "GetConsoleAliasExesLengthW" () As Long
Public Declare PtrSafe Function GetConsoleAliasesA Lib "kernel32" (ByVal AliasBuffer As String, ByVal AliasBufferLength As Long, ByVal ExeName As String) As Long
Public Declare PtrSafe Function GetConsoleAliasesW Lib "kernel32" (ByVal AliasBuffer As LongPtr, ByVal AliasBufferLength As Long, ByVal ExeName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetConsoleAliases Lib "kernel32" Alias "GetConsoleAliasesW" (ByVal AliasBuffer As String, ByVal AliasBufferLength As Long, ByVal ExeName As String) As Long
Public Declare PtrSafe Function GetConsoleAliasExesA Lib "kernel32" (ByVal ExeNameBuffer As String, ByVal ExeNameBufferLength As Long) As Long
Public Declare PtrSafe Function GetConsoleAliasExesW Lib "kernel32" (ByVal ExeNameBuffer As LongPtr, ByVal ExeNameBufferLength As Long) As Long
Public DeclareWide PtrSafe Function GetConsoleAliasExes Lib "kernel32" Alias "GetConsoleAliasExesW" (ByVal ExeNameBuffer As String, ByVal ExeNameBufferLength As Long) As Long
Public Declare PtrSafe Sub ExpungeConsoleCommandHistoryA Lib "kernel32" (ByVal ExeName As String)
Public Declare PtrSafe Sub ExpungeConsoleCommandHistoryW Lib "kernel32" (ByVal ExeName As LongPtr)
Public DeclareWide PtrSafe Sub ExpungeConsoleCommandHistory Lib "kernel32" Alias "ExpungeConsoleCommandHistoryW" (ByVal ExeName As String)
Public Declare PtrSafe Function SetConsoleNumberOfCommandsA Lib "kernel32" (ByVal ExeName As String) As BOOL
Public Declare PtrSafe Function SetConsoleNumberOfCommandsW Lib "kernel32" (ByVal ExeName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetConsoleNumberOfCommands Lib "kernel32" Alias "SetConsoleNumberOfCommandsW" (ByVal ExeName As String) As BOOL
Public Declare PtrSafe Function GetConsoleCommandHistoryLengthA Lib "kernel32" (ByVal ExeName As String) As Long
Public Declare PtrSafe Function GetConsoleCommandHistoryLengthW Lib "kernel32" (ByVal ExeName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetConsoleCommandHistoryLength Lib "kernel32" Alias "GetConsoleCommandHistoryLengthW" (ByVal ExeName As String) As Long
Public Declare PtrSafe Function GetConsoleCommandHistoryA Lib "kernel32" (ByVal Commands As String, ByVal CommandBufferLength As Long, ByVal ExeName As String) As Long
Public Declare PtrSafe Function GetConsoleCommandHistoryW Lib "kernel32" (ByVal Commands As LongPtr, ByVal CommandBufferLength As Long, ByVal ExeName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetConsoleCommandHistory Lib "kernel32" Alias "GetConsoleCommandHistoryW" (ByVal Commands As String, ByVal CommandBufferLength As Long, ByVal ExeName As String) As Long
Public Declare PtrSafe Function GetConsoleProcessList Lib "kernel32" (lpdwProcessList As Long, ByVal dwProcessCount As Long) As Long


Public Declare PtrSafe Function LoadResource Lib "kernel32" (ByVal hInstance As LongPtr, ByVal hResInfo As LongPtr) As LongPtr
Public Declare PtrSafe Function LockResource Lib "kernel32" (ByVal hResData As LongPtr) As LongPtr
Public Declare PtrSafe Function FreeResource Lib "kernel32" (ByVal hResData As LongPtr) As BOOL
Public Declare PtrSafe Function FindResourceA Lib "kernel32" (ByVal hInstance As LongPtr, ByVal lpName As String, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr) As LongPtr
Public Declare PtrSafe Function FindResourceW Lib "kernel32" (ByVal hInstance As LongPtr, ByVal lpName As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function FindResource Lib "kernel32" Alias "FindResourceW" (ByVal hInstance As LongPtr, ByVal lpName As String, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr) As LongPtr
Public Declare PtrSafe Function FindResourceExA Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal wLanguage As Integer) As LongPtr
Public Declare PtrSafe Function FindResourceExW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As LongPtr, ByVal wLanguage As Integer) As LongPtr
Public DeclareWide PtrSafe Function FindResourceEx Lib "kernel32" Alias "FindResourceExW" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal wLanguage As Integer) As LongPtr
Public Declare PtrSafe Function FindStringOrdinal Lib "kernel32" (ByVal dwFindStringOrdinalFlags As NlsFindStrFlags, ByVal lpStringSource As LongPtr, ByVal cchSource As Long, ByVal lpStringValue As LongPtr, ByVal cchValue As Long, ByVal bIgnoreCase As BOOL) As Long
Public DeclareWide PtrSafe Function FindStringOrdinal Lib "kernel32" (ByVal dwFindStringOrdinalFlags As NlsFindStrFlags, ByVal lpStringSource As String, ByVal cchSource As Long, ByVal lpStringValue As String, ByVal cchValue As Long, ByVal bIgnoreCase As BOOL) As Long
Public Declare PtrSafe Function SizeofResource Lib "kernel32" (ByVal hModule As LongPtr, ByVal hResInfo As LongPtr) As Long
Public Declare PtrSafe Function BeginUpdateResourceA Lib "kernel32" (ByVal pFileName As LongPtr, ByVal bDeleteExistingResources As BOOL) As LongPtr
Public Declare PtrSafe Function BeginUpdateResourceW Lib "kernel32" (ByVal pFileName As LongPtr, ByVal bDeleteExistingResources As BOOL) As LongPtr
Public DeclareWide PtrSafe Function BeginUpdateResource Lib "kernel32" Alias "BeginUpdateResourceW" (ByVal pFileName As LongPtr, ByVal bDeleteExistingResources As BOOL) As LongPtr
Public Declare PtrSafe Function EndUpdateResourceA Lib "kernel32" (ByVal hUpdate As LongPtr, ByVal fDiscard As BOOL) As BOOL
Public Declare PtrSafe Function EndUpdateResourceW Lib "kernel32" (ByVal hUpdate As LongPtr, ByVal fDiscard As BOOL) As BOOL
Public DeclareWide PtrSafe Function EndUpdateResource Lib "kernel32" Alias "EndUpdateResourceW" (ByVal hUpdate As LongPtr, ByVal fDiscard As BOOL) As BOOL
Public Delegate Function ENUMRESLANGPROCA (ByVal hModule As LongPtr, ByVal lpszType As LongPtr, ByVal lpszName As LongPtr, ByVal wIDLanguage As Integer, ByVal lParam As LongPtr) As BOOL
Public Delegate Function ENUMRESLANGPROCW (ByVal hModule As LongPtr, ByVal lpszType As LongPtr, ByVal lpszName As LongPtr, ByVal wIDLanguage As Integer, ByVal lParam As LongPtr) As BOOL
Public Delegate Function ENUMRESLANGPROC (ByVal hModule As LongPtr, ByVal lpszType As LongPtr, ByVal lpszName As LongPtr, ByVal wIDLanguage As Integer, ByVal lParam As LongPtr) As BOOL
Public Delegate Function ENUMRESTYPEPROCA (ByVal hModule As LongPtr, ByVal lpType As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Delegate Function ENUMRESTYPEPROCW (ByVal hModule As LongPtr, ByVal lpType As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Delegate Function ENUMRESTYPEPROC (ByVal hModule As LongPtr, ByVal lpType As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Delegate Function ENUMRESNAMEPROCA (ByVal hModule As LongPtr, ByVal lpType As LongPtr, ByVal lpName As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Delegate Function ENUMRESNAMEPROCW (ByVal hModule As LongPtr, ByVal lpType As LongPtr, ByVal lpName As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Delegate Function ENUMRESNAMEPROC (ByVal hModule As LongPtr, ByVal lpType As LongPtr, ByVal lpName As LongPtr, ByVal lParam As LongPtr) As BOOL
' #If WINDEVLIB_NO_DELEGATES Then
Public Declare PtrSafe Function EnumResourceLanguagesA Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumResourceLanguagesW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumResourceLanguages Lib "kernel32" Alias "EnumResourceLanguagesW" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumResourceLanguagesExA Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [TypeHint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
Public Declare PtrSafe Function EnumResourceLanguagesExW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [TypeHint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
Public DeclareWide PtrSafe Function EnumResourceLanguagesEx Lib "kernel32" Alias "EnumResourceLanguagesExW" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [TypeHint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
Public Declare PtrSafe Function EnumResourceTypesA Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumResourceTypesW Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumResourceTypes Lib "kernel32" Alias "EnumResourceTypesW" (ByVal hModule As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumResourceTypesExA Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [TypeHint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
Public Declare PtrSafe Function EnumResourceTypesExW Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [TypeHint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
Public DeclareWide PtrSafe Function EnumResourceTypesEx Lib "kernel32" Alias "EnumResourceTypesExW" (ByVal hModule As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [TypeHint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
Public Declare PtrSafe Function EnumResourceNamesA Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumResourceNamesW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumResourceNames Lib "kernel32" Alias "EnumResourceNamesW" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumResourceNamesExA Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [TypeHint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
Public Declare PtrSafe Function EnumResourceNamesExW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [TypeHint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
Public DeclareWide PtrSafe Function EnumResourceNamesEx Lib "kernel32" Alias "EnumResourceNamesExW" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [TypeHint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
' #Else
' Public Declare PtrSafe Function EnumResourceLanguagesA Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal lpEnumFunc As ENUMRESLANGPROCA, ByVal lParam As LongPtr) As BOOL
' Public Declare PtrSafe Function EnumResourceLanguagesW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As LongPtr, ByVal lpEnumFunc As ENUMRESLANGPROCW, ByVal lParam As LongPtr) As BOOL
' Public DeclareWide PtrSafe Function EnumResourceLanguages Lib "kernel32" Alias "EnumResourceLanguagesW" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal lpEnumFunc As ENUMRESLANGPROC, ByVal lParam As LongPtr) As BOOL
' Public Declare PtrSafe Function EnumResourceLanguagesExA Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal lpEnumFunc As ENUMRESLANGPROCA, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [typehint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
' Public Declare PtrSafe Function EnumResourceLanguagesExW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As LongPtr, ByVal lpEnumFunc As ENUMRESLANGPROCW, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [typehint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
' Public DeclareWide PtrSafe Function EnumResourceLanguagesEx Lib "kernel32" Alias "EnumResourceLanguagesExW" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal lpEnumFunc As ENUMRESLANGPROC, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [typehint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
' Public Declare PtrSafe Function EnumResourceTypesA Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpEnumFunc As ENUMRESTYPEPROCA, ByVal lParam As LongPtr) As BOOL
' Public Declare PtrSafe Function EnumResourceTypesW Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpEnumFunc As ENUMRESTYPEPROCW, ByVal lParam As LongPtr) As BOOL
' Public DeclareWide PtrSafe Function EnumResourceTypes Lib "kernel32" Alias "EnumResourceTypesW" (ByVal hModule As LongPtr, ByVal lpEnumFunc As ENUMRESTYPEPROC, ByVal lParam As LongPtr) As BOOL
' Public Declare PtrSafe Function EnumResourceTypesExA Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpEnumFunc As ENUMRESTYPEPROCA, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [typehint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
' Public Declare PtrSafe Function EnumResourceTypesExW Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpEnumFunc As ENUMRESTYPEPROCW, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [typehint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
' Public DeclareWide PtrSafe Function EnumResourceTypesEx Lib "kernel32" Alias "EnumResourceTypesExW" (ByVal hModule As LongPtr, ByVal lpEnumFunc As ENUMRESTYPEPROC, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [typehint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
' Public Declare PtrSafe Function EnumResourceNamesA Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As ENUMRESNAMEPROCA, ByVal lParam As LongPtr) As BOOL
' Public Declare PtrSafe Function EnumResourceNamesW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As ENUMRESNAMEPROCW, ByVal lParam As LongPtr) As BOOL
' Public DeclareWide PtrSafe Function EnumResourceNames Lib "kernel32" Alias "EnumResourceNamesW" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As ENUMRESNAMEPROC, ByVal lParam As LongPtr) As BOOL
' Public Declare PtrSafe Function EnumResourceNamesExA Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As ENUMRESNAMEPROCA, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [typehint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
' Public Declare PtrSafe Function EnumResourceNamesExW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As ENUMRESNAMEPROCW, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [typehint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
' Public DeclareWide PtrSafe Function EnumResourceNamesEx Lib "kernel32" Alias "EnumResourceNamesExW" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As ENUMRESNAMEPROC, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, [typehint(LCID_LANG_IDENTIFIERS)] ByVal LangId As Integer) As BOOL
' #End If
Public Declare PtrSafe Function UpdateResourceA Lib "kernel32" (ByVal hUpdate As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal wLanguage As Integer, lpData As Any, ByVal cb As Long) As BOOL
Public Declare PtrSafe Function UpdateResourceW Lib "kernel32" (ByVal hUpdate As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As LongPtr, ByVal wLanguage As Integer, lpData As Any, ByVal cb As Long) As BOOL
Public DeclareWide PtrSafe Function UpdateResource Lib "kernel32" Alias "UpdateResourceW" (ByVal hUpdate As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal wLanguage As Integer, lpData As Any, ByVal cb As Long) As BOOL


Public Declare PtrSafe Function lstrcmpA Lib "kernel32" (lpString1 As Any, lpString2 As Any) As Long
Public Declare PtrSafe Function lstrcmpW Lib "kernel32" (ByVal lpString1 As LongPtr, ByVal lpString2 As LongPtr) As Long
Public DeclareWide PtrSafe Function lstrcmp Lib "kernel32" Alias "lstrcmpW" (ByVal lpString1 As String, ByVal lpString2 As String) As Long
Public Declare PtrSafe Function lstrcmpiA Lib "kernel32" (ByVal lpString1 As String, ByVal lpString2 As String) As Long
Public Declare PtrSafe Function lstrcmpiW Lib "kernel32" (ByVal lpString1 As LongPtr, ByVal lpString2 As LongPtr) As Long
Public DeclareWide PtrSafe Function lstrcmpi Lib "kernel32" Alias "lstrcmpiW" (ByVal lpString1 As String, ByVal lpString2 As String) As Long
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function lstrcatA Lib "kernel32" (ByVal lpString1 As String, ByVal lpString2 As String) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function lstrcatW Lib "kernel32" (ByVal lpString1 As LongPtr, ByVal lpString2 As LongPtr) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public DeclareWide PtrSafe Function lstrcat Lib "kernel32" Alias "lstrcatW" (ByVal lpString1 As String, ByVal lpString2 As String) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function lstrcpyA Lib "kernel32" (lpString1 As Any, lpString2 As Any) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function lstrcpyW Lib "kernel32" (ByVal lpString1 As LongPtr, ByVal lpString2 As LongPtr) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public DeclareWide PtrSafe Function lstrcpy Lib "kernel32" Alias "lstrcpyW" (ByVal lpString1 As String, ByVal lpString2 As String) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function lstrcpynA Lib "kernel32" (lpString1 As Any, lpString2 As Any, ByVal iMaxLength As Long) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function lstrcpynW Lib "kernel32" (ByVal lpString1 As LongPtr, ByVal lpString2 As LongPtr, ByVal iMaxLength As Long) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public DeclareWide PtrSafe Function lstrcpyn Lib "kernel32" Alias "lstrcpynW" (ByVal lpString1 As String, ByVal lpString2 As String, ByVal iMaxLength As Long) As LongPtr
Public Declare PtrSafe Function lstrlenA Lib "kernel32" (lpString As Any) As Long
Public Declare PtrSafe Function lstrlenW Lib "kernel32" (lpString As Any) As Long
Public Declare PtrSafe Function lstrlen Lib "kernel32" Alias "lstrlenW" (lpString As Any) As Long

Public Declare PtrSafe Function GetPrivateProfileStringA Lib "kernel32" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpDefault As String, ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
Public Declare PtrSafe Function GetPrivateProfileStringW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpKeyName As LongPtr, ByVal lpDefault As LongPtr, ByVal lpReturnedString As LongPtr, ByVal nSize As Long, ByVal lpFileName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetPrivateProfileString Lib "kernel32" Alias "GetPrivateProfileStringW" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpDefault As String, ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
Public Declare PtrSafe Function WritePrivateProfileStringA Lib "kernel32" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpString As String, ByVal lpFilename As String) As BOOL
Public Declare PtrSafe Function WritePrivateProfileStringW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpKeyName As LongPtr, ByVal lpString As LongPtr, ByVal lpFilename As LongPtr) As BOOL
Public DeclareWide PtrSafe Function WritePrivateProfileString Lib "kernel32" Alias "WritePrivateProfileStringW" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpString As String, ByVal lpFilename As String) As BOOL
Public Declare PtrSafe Function GetPrivateProfileStructA Lib "kernel32" (ByVal lpszSection As String, ByVal lpszKey As String, lpStruct As Any, ByVal uSizeStruct As Long, ByVal szFile As String) As BOOL
Public Declare PtrSafe Function GetPrivateProfileStructW Lib "kernel32" (ByVal lpszSection As LongPtr, ByVal lpszKey As LongPtr, lpStruct As Any, ByVal uSizeStruct As Long, ByVal szFile As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetPrivateProfileStruct Lib "kernel32" Alias "GetPrivateProfileStructW" (ByVal lpszSection As String, ByVal lpszKey As String, lpStruct As Any, ByVal uSizeStruct As Long, ByVal szFile As String) As BOOL
Public Declare PtrSafe Function WritePrivateProfileStructA Lib "kernel32" (ByVal lpszSection As String, ByVal lpszKey As String, lpStruct As Any, ByVal uSizeStruct As Long, ByVal szFile As String) As BOOL
Public Declare PtrSafe Function WritePrivateProfileStructW Lib "kernel32" (ByVal lpszSection As LongPtr, ByVal lpszKey As LongPtr, lpStruct As Any, ByVal uSizeStruct As Long, ByVal szFile As LongPtr) As BOOL
Public DeclareWide PtrSafe Function WritePrivateProfileStruct Lib "kernel32" Alias "WritePrivateProfileStructW" (ByVal lpszSection As String, ByVal lpszKey As String, lpStruct As Any, ByVal uSizeStruct As Long, ByVal szFile As String) As BOOL
Public Declare PtrSafe Function GetPrivateProfileSectionA Lib "kernel32" (ByVal lpAppName As String, ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
Public Declare PtrSafe Function GetPrivateProfileSectionW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpReturnedString As LongPtr, ByVal nSize As Long, ByVal lpFileName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetPrivateProfileSection Lib "kernel32" Alias "GetPrivateProfileSectionW" (ByVal lpAppName As String, ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
Public Declare PtrSafe Function WritePrivateProfileSectionA Lib "kernel32" (ByVal lpAppName As String, ByVal lpString As String, ByVal lpFileName As String) As BOOL
Public Declare PtrSafe Function WritePrivateProfileSectionW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpString As LongPtr, ByVal lpFileName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function WritePrivateProfileSection Lib "kernel32" Alias "WritePrivateProfileSectionW" (ByVal lpAppName As String, ByVal lpString As String, ByVal lpFileName As String) As BOOL
Public Declare PtrSafe Function GetPrivateProfileSectionNamesA Lib "kernel32" (ByVal lpszReturnBuffer As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
Public Declare PtrSafe Function GetPrivateProfileSectionNamesW Lib "kernel32" (ByVal lpszReturnBuffer As LongPtr, ByVal nSize As Long, ByVal lpFileName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetPrivateProfileSectionNames Lib "kernel32" Alias "GetPrivateProfileSectionNamesW" (ByVal lpszReturnBuffer As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
Public Declare PtrSafe Function GetPrivateProfileIntA Lib "kernel32" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal nDefault As Long, ByVal lpFileName As String) As Long
Public Declare PtrSafe Function GetPrivateProfileIntW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpKeyName As LongPtr, ByVal nDefault As Long, ByVal lpFileName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetPrivateProfileInt Lib "kernel32" Alias "GetPrivateProfileIntW" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal nDefault As Long, ByVal lpFileName As String) As Long
Public Declare PtrSafe Function GetProfileStringA Lib "kernel32" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpDefault As String, ByVal lpReturnedString As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetProfileStringW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpKeyName As LongPtr, ByVal lpDefault As LongPtr, ByVal lpReturnedString As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetProfileString Lib "kernel32" Alias "GetProfileStringW" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpDefault As String, ByVal lpReturnedString As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function WriteProfileStringA Lib "kernel32" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpString As String) As BOOL
Public Declare PtrSafe Function WriteProfileStringW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpKeyName As LongPtr, ByVal lpString As LongPtr) As BOOL
Public DeclareWide PtrSafe Function WriteProfileString Lib "kernel32" Alias "WriteProfileStringW" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpString As String) As BOOL
Public Declare PtrSafe Function GetProfileSectionA Lib "kernel32" (ByVal lpAppName As String, ByVal lpReturnedString As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetProfileSectionW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpReturnedString As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetProfileSection Lib "kernel32" Alias "GetProfileSectionW" (ByVal lpAppName As String, ByVal lpReturnedString As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function WriteProfileSectionA Lib "kernel32" (ByVal lpAppName As String, ByVal lpString As String) As BOOL
Public Declare PtrSafe Function WriteProfileSectionW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpString As LongPtr) As BOOL
Public DeclareWide PtrSafe Function WriteProfileSection Lib "kernel32" Alias "WriteProfileSectionW" (ByVal lpAppName As String, ByVal lpString As String) As BOOL
Public Declare PtrSafe Function GetProfileIntA Lib "kernel32" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal nDefault As Long) As Long
Public Declare PtrSafe Function GetProfileIntW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpKeyName As LongPtr, ByVal nDefault As Long) As Long
Public DeclareWide PtrSafe Function GetProfileInt Lib "kernel32" Alias "GetProfileIntW" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal nDefault As Long) As Long


Public Enum TRANSACTION_OPTION_FLAGS
    TRANSACTION_DO_NOT_PROMOTE = &H1
End Enum
Public Enum TRANSACTION_MANAGER_OPTIONS
    TRANSACTION_MANAGER_VOLATILE = &H00000001
    TRANSACTION_MANAGER_COMMIT_DEFAULT = &H00000000
    TRANSACTION_MANAGER_COMMIT_SYSTEM_VOLUME = &H00000002
    TRANSACTION_MANAGER_COMMIT_SYSTEM_HIVES = &H00000004
    TRANSACTION_MANAGER_COMMIT_LOWEST = &H00000008
    TRANSACTION_MANAGER_CORRUPT_FOR_RECOVERY = &H00000010
    TRANSACTION_MANAGER_CORRUPT_FOR_PROGRESS = &H00000020
    TRANSACTION_MANAGER_MAXIMUM_OPTION = &H0000003F
End Enum
Public Enum TRANSACTION_MANAGER_RESOURCE_OPTIONS
    RESOURCE_MANAGER_VOLATILE = &H00000001
    RESOURCE_MANAGER_COMMUNICATION = &H00000002
    RESOURCE_MANAGER_MAXIMUM_OPTION = &H00000003
End Enum
Public Enum TRANSACTION_PROTOCOL_OPTIONS
    CRM_PROTOCOL_EXPLICIT_MARSHAL_ONLY = &H00000001
    CRM_PROTOCOL_DYNAMIC_MARSHAL_INFO = &H00000002
    CRM_PROTOCOL_MAXIMUM_OPTION = &H00000003
End Enum
Public Enum TRANSACTION_ENLISTMENT_OPTIONS
    ENLISTMENT_SUPERIOR = &H1
End Enum
Public Enum NOTIFICATION_MASK
    TRANSACTION_NOTIFY_MASK = &H3FFFFFFF
    TRANSACTION_NOTIFY_PREPREPARE = &H00000001
    TRANSACTION_NOTIFY_PREPARE = &H00000002
    TRANSACTION_NOTIFY_COMMIT = &H00000004
    TRANSACTION_NOTIFY_ROLLBACK = &H00000008
    TRANSACTION_NOTIFY_PREPREPARE_COMPLETE = &H00000010
    TRANSACTION_NOTIFY_PREPARE_COMPLETE = &H00000020
    TRANSACTION_NOTIFY_COMMIT_COMPLETE = &H00000040
    TRANSACTION_NOTIFY_ROLLBACK_COMPLETE = &H00000080
    TRANSACTION_NOTIFY_RECOVER = &H00000100
    TRANSACTION_NOTIFY_SINGLE_PHASE_COMMIT = &H00000200
    TRANSACTION_NOTIFY_DELEGATE_COMMIT = &H00000400
    TRANSACTION_NOTIFY_RECOVER_QUERY = &H00000800
    TRANSACTION_NOTIFY_ENLIST_PREPREPARE = &H00001000
    TRANSACTION_NOTIFY_LAST_RECOVER = &H00002000
    TRANSACTION_NOTIFY_INDOUBT = &H00004000
    TRANSACTION_NOTIFY_PROPAGATE_PULL = &H00008000&
    TRANSACTION_NOTIFY_PROPAGATE_PUSH = &H00010000
    TRANSACTION_NOTIFY_MARSHAL = &H00020000
    TRANSACTION_NOTIFY_ENLIST_MASK = &H00040000
    TRANSACTION_NOTIFY_RM_DISCONNECTED = &H01000000
    TRANSACTION_NOTIFY_TM_ONLINE = &H02000000
    TRANSACTION_NOTIFY_COMMIT_REQUEST = &H04000000
    TRANSACTION_NOTIFY_PROMOTE = &H08000000
    TRANSACTION_NOTIFY_PROMOTE_NEW = &H10000000
    TRANSACTION_NOTIFY_REQUEST_OUTCOME = &H20000000
'   Note that this flag is not included in the TRANSACTION_NOTIFY_MASK.
'   The reason being that KTM does not understand this flag yet. This
'   flag is strictly for the use of filter manager. In fact we mask it
'   out before enlisting in any transaction.
    TRANSACTION_NOTIFY_COMMIT_FINALIZE = &H40000000
End Enum

Public Const TRANSACTIONMANAGER_OBJECT_PATH  = "\TransactionManager\"
Public Const TRANSACTION_OBJECT_PATH  = "\Transaction\"
Public Const ENLISTMENT_OBJECT_PATH  = "\Enlistment\"
Public Const RESOURCE_MANAGER_OBJECT_PATH  = "\ResourceManager\"

Public Type TRANSACTION_NOTIFICATION
    TransactionKey As LongPtr
    TransactionNotification As NOTIFICATION_MASK
    TmVirtualClock As LARGE_INTEGER
    ArgumentLength As Long
End Type

Public Type TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT
    EnlistmentId As UUID
    UOW As UUID
End Type
Public Type TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT
    TmIdentity As UUID
    Flags As Long
End Type

Public Enum TransactionManagerRights
    TRANSACTIONMANAGER_QUERY_INFORMATION = (&H0001)
    TRANSACTIONMANAGER_SET_INFORMATION = (&H0002)
    TRANSACTIONMANAGER_RECOVER = (&H0004)
    TRANSACTIONMANAGER_RENAME = (&H0008)
    TRANSACTIONMANAGER_CREATE_RM = (&H0010)
'  The following right is intended for DTC's use only; it will be
'  deprecated, and no one else should take a dependency on it.
    TRANSACTIONMANAGER_BIND_TRANSACTION = (&H0020)
'  Generic mappings for transaction manager rights.
    TRANSACTIONMANAGER_GENERIC_READ = (STANDARD_RIGHTS_READ Or TRANSACTIONMANAGER_QUERY_INFORMATION)
    TRANSACTIONMANAGER_GENERIC_WRITE = (STANDARD_RIGHTS_WRITE Or TRANSACTIONMANAGER_SET_INFORMATION Or TRANSACTIONMANAGER_RECOVER Or TRANSACTIONMANAGER_RENAME Or TRANSACTIONMANAGER_CREATE_RM)
    TRANSACTIONMANAGER_GENERIC_EXECUTE = (STANDARD_RIGHTS_EXECUTE)
    TRANSACTIONMANAGER_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or TRANSACTIONMANAGER_GENERIC_READ Or TRANSACTIONMANAGER_GENERIC_WRITE Or TRANSACTIONMANAGER_GENERIC_EXECUTE Or TRANSACTIONMANAGER_BIND_TRANSACTION)
End Enum
Public Enum TRANSACTION_OBJECT_RIGHTS
    TRANSACTION_QUERY_INFORMATION = (&H0001)
    TRANSACTION_SET_INFORMATION = (&H0002)
    TRANSACTION_ENLIST = (&H0004)
    TRANSACTION_COMMIT = (&H0008)
    TRANSACTION_ROLLBACK = (&H0010)
    TRANSACTION_PROPAGATE = (&H0020)
    TRANSACTION_RIGHT_RESERVED1 = (&H0040)
    TRANSACTION_GENERIC_READ = (STANDARD_RIGHTS_READ Or TRANSACTION_QUERY_INFORMATION Or SYNCHRONIZE)
    TRANSACTION_GENERIC_WRITE = (STANDARD_RIGHTS_WRITE Or TRANSACTION_SET_INFORMATION Or TRANSACTION_COMMIT Or TRANSACTION_ENLIST Or TRANSACTION_ROLLBACK Or TRANSACTION_PROPAGATE Or SYNCHRONIZE)
    TRANSACTION_GENERIC_EXECUTE = (STANDARD_RIGHTS_EXECUTE Or TRANSACTION_COMMIT Or TRANSACTION_ROLLBACK Or SYNCHRONIZE)
    TRANSACTION_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or TRANSACTION_GENERIC_READ Or TRANSACTION_GENERIC_WRITE Or TRANSACTION_GENERIC_EXECUTE)
    TRANSACTION_RESOURCE_MANAGER_RIGHTS = (TRANSACTION_GENERIC_READ Or STANDARD_RIGHTS_WRITE Or TRANSACTION_SET_INFORMATION Or TRANSACTION_ENLIST Or TRANSACTION_ROLLBACK Or TRANSACTION_PROPAGATE Or SYNCHRONIZE)
End Enum
Public Enum TRANSACTION_OUTCOME
    TransactionOutcomeUndetermined = 1
    TransactionOutcomeCommitted = 2
    TransactionOutcomeAborted = 3
End Enum
Public Enum TXFS_MINIVERSION
    TXFS_MINIVERSION_COMMITTED_VIEW = &H0000
    TXFS_MINIVERSION_DIRTY_VIEW = &HFFFE&
    TXFS_MINIVERSION_DEFAULT_VIEW = &HFFFF&
End Enum

Public Enum ResourceManagerObjectRights
    RESOURCEMANAGER_QUERY_INFORMATION = (&H0001)
    RESOURCEMANAGER_SET_INFORMATION = (&H0002)
    RESOURCEMANAGER_RECOVER = (&H0004)
    RESOURCEMANAGER_ENLIST = (&H0008)
    RESOURCEMANAGER_GET_NOTIFICATION = (&H0010)
    RESOURCEMANAGER_REGISTER_PROTOCOL = (&H0020)
    RESOURCEMANAGER_COMPLETE_PROPAGATION = (&H0040)
'  Generic mappings for resource manager rights.
    RESOURCEMANAGER_GENERIC_READ = (STANDARD_RIGHTS_READ Or RESOURCEMANAGER_QUERY_INFORMATION Or SYNCHRONIZE)
    RESOURCEMANAGER_GENERIC_WRITE = (STANDARD_RIGHTS_WRITE Or RESOURCEMANAGER_SET_INFORMATION Or RESOURCEMANAGER_RECOVER Or RESOURCEMANAGER_ENLIST Or RESOURCEMANAGER_GET_NOTIFICATION Or RESOURCEMANAGER_REGISTER_PROTOCOL Or RESOURCEMANAGER_COMPLETE_PROPAGATION Or SYNCHRONIZE)
    RESOURCEMANAGER_GENERIC_EXECUTE = (STANDARD_RIGHTS_EXECUTE Or RESOURCEMANAGER_RECOVER Or RESOURCEMANAGER_ENLIST Or RESOURCEMANAGER_GET_NOTIFICATION Or RESOURCEMANAGER_COMPLETE_PROPAGATION Or SYNCHRONIZE)
    RESOURCEMANAGER_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or RESOURCEMANAGER_GENERIC_READ Or RESOURCEMANAGER_GENERIC_WRITE Or RESOURCEMANAGER_GENERIC_EXECUTE)
End Enum

Public Enum EnlistmentObjectRights
    ENLISTMENT_QUERY_INFORMATION = (&H0001)
    ENLISTMENT_SET_INFORMATION = (&H0002)
    ENLISTMENT_RECOVER = (&H0004)
    ENLISTMENT_SUBORDINATE_RIGHTS = (&H0008)
    ENLISTMENT_SUPERIOR_RIGHTS = (&H0010)
'  Generic mappings for enlistment rights.
    ENLISTMENT_GENERIC_READ = (STANDARD_RIGHTS_READ Or ENLISTMENT_QUERY_INFORMATION)
    ENLISTMENT_GENERIC_WRITE = (STANDARD_RIGHTS_WRITE Or ENLISTMENT_SET_INFORMATION Or ENLISTMENT_RECOVER Or ENLISTMENT_SUBORDINATE_RIGHTS Or ENLISTMENT_SUPERIOR_RIGHTS)
    ENLISTMENT_GENERIC_EXECUTE = (STANDARD_RIGHTS_EXECUTE Or ENLISTMENT_RECOVER Or ENLISTMENT_SUBORDINATE_RIGHTS Or ENLISTMENT_SUPERIOR_RIGHTS)
    ENLISTMENT_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or ENLISTMENT_GENERIC_READ Or ENLISTMENT_GENERIC_WRITE Or ENLISTMENT_GENERIC_EXECUTE)
End Enum


Public Enum ReplaceFileFlags
    REPLACEFILE_WRITE_THROUGH = &H00000001
    REPLACEFILE_IGNORE_MERGE_ERRORS = &H00000002
    REPLACEFILE_IGNORE_ACL_ERRORS = &H00000004
End Enum

Public Type FILE_SEGMENT_ELEMENT
    Buffer As LongPtr
    #If Win64 = 0 Then
    Alignment As Long
    #End If
End Type

Public Enum GetFinalPathNameFlags
    VOLUME_NAME_DOS = &H0  'default
    VOLUME_NAME_GUID = &H1
    VOLUME_NAME_NT = &H2
    VOLUME_NAME_NONE = &H4
    FILE_NAME_NORMALIZED = &H0  'default
    FILE_NAME_OPENED = &H8
End Enum

Public Enum OPEN_FILE_FLAGS
    OF_READ = &H00000000
    OF_WRITE = &H00000001
    OF_READWRITE = &H00000002
    OF_SHARE_COMPAT = &H00000000
    OF_SHARE_EXCLUSIVE = &H00000010
    OF_SHARE_DENY_WRITE = &H00000020
    OF_SHARE_DENY_READ = &H00000030
    OF_SHARE_DENY_NONE = &H00000040
    OF_PARSE = &H00000100
    OF_DELETE = &H00000200
    OF_VERIFY = &H00000400
    OF_CANCEL = &H00000800
    OF_CREATE = &H00001000
    OF_PROMPT = &H00002000
    OF_EXIST = &H00004000
    OF_REOPEN = &H00008000&
End Enum
Public Const OFS_MAXPATHNAME = 128
Public Type OFSTRUCT
    cBytes As Byte
    fFixedDisk As Byte
    nErrCode As Integer
    Reserved1 As Integer
    Reserved2 As Integer
    szPathName(0 To (OFS_MAXPATHNAME - 1)) As Byte
End Type

Public Enum FILE_ID_TYPE
    FileIdType
    ObjectIdType
    ExtendedFileIdType
    MaximumFileIdType
End Enum
Public Type FILE_ID_DESCRIPTOR
    dwSize As Long ' Size of the struct
    Type As FILE_ID_TYPE ' Describes the type of identifier passed in.
    '    union {
    '        LARGE_INTEGER FileId;
    '        GUID ObjectId;
    '#if (_WIN32_WINNT >= _WIN32_WINNT_WIN8)
    '        FILE_ID_128 ExtendedFileId;
    '#endif
    '    } DUMMYUNIONNAME;
    FileIdUnion(15) As Byte
End Type

Public Enum OpenFileRawFlags
    CREATE_FOR_IMPORT = (1)
    CREATE_FOR_DIR = (2)
    OVERWRITE_HIDDEN = (4)
    EFSRPC_SECURE_ONLY = (8)
    EFS_DROP_ALTERNATE_STREAMS = (&H10)
End Enum

Public Const EFS_USE_RECOVERY_KEYS = &H1

Public Enum FailFastExceptionFlags
    FAIL_FAST_GENERATE_EXCEPTION_ADDRESS = &H1
    FAIL_FAST_NO_HARD_ERROR_DLG = &H2
End Enum

Public Const NUMA_NO_PREFERRED_NODE As Long = -1

Public DeclareWide PtrSafe Function CreateTransaction Lib "ktmw32" (lpTransactionAttributes As SECURITY_ATTRIBUTES, UOW As UUID, Optional ByVal CreateOptions As TRANSACTION_OPTION_FLAGS, Optional ByVal IsolationLevel As Long, Optional ByVal IsolationFlags As Long, Optional ByVal Timeout As Long, Optional ByVal Description As String) As LongPtr
Public Declare PtrSafe Function CommitTransaction Lib "ktmw32" (ByVal TransactionHandle As LongPtr) As BOOL
Public Declare PtrSafe Function CommitTransactionAsync Lib "ktmw32" (ByVal TransactionHandle As LongPtr) As BOOL
Public Declare PtrSafe Function RollbackTransaction Lib "ktmw32" (ByVal TransactionHandle As LongPtr) As BOOL
Public Declare PtrSafe Function RollbackTransactionAsync Lib "ktmw32" (ByVal TransactionHandle As LongPtr) As BOOL
Public Declare PtrSafe Function OpenTransaction Lib "ktmw32" (ByVal dwDesiredAccess As TRANSACTION_OBJECT_RIGHTS, TransactionId As UUID) As LongPtr
Public Declare PtrSafe Function GetTransactionId Lib "ktmw32" (ByVal TransactionHandle As LongPtr, TransactionId As UUID) As BOOL
Public DeclareWide PtrSafe Function GetTransactionInformation Lib "ktmw32" (ByVal TransactionHandle As LongPtr, Optional Outcome As TRANSACTION_OUTCOME, Optional IsolationLevel As Long, Optional IsolationFlags As Long, Optional Timeout As Long, Optional ByVal BufferLength As Long, Optional ByVal Description As String) As BOOL
Public DeclareWide PtrSafe Function SetTransactionInformation Lib "ktmw32" (ByVal TransactionHandle As LongPtr, Optional ByVal IsolationLevel As Long, Optional ByVal IsolationFlags As Long, Optional ByVal Timeout As Long, Optional ByVal Description As String) As BOOL
Public DeclareWide PtrSafe Function CreateTransactionManager Lib "ktmw32" (lpTransactionAttributes As SECURITY_ATTRIBUTES, ByVal LogFileName As String, [TypeHint(TRANSACTION_MANAGER_OPTIONS)] Optional ByVal CreateOptions As Long, Optional ByVal CommitStrength As Long) As LongPtr
Public DeclareWide PtrSafe Function OpenTransactionManager Lib "ktmw32" (ByVal LogFileName As String, [TypeHint(TransactionManagerRights)] ByVal DesiredAccess As Long, Optional ByVal OpenOptions As Long) As LongPtr
Public Declare PtrSafe Function OpenTransactionManagerById Lib "ktmw32" (TransactionManagerId As UUID, [TypeHint(TransactionManagerRights)] ByVal DesiredAccess As Long, Optional ByVal OpenOptions As Long) As LongPtr
Public DeclareWide PtrSafe Function RenameTransactionManager Lib "ktmw32" (ByVal LogFileName As String, ExistingTransactionManagerGuid As UUID) As BOOL
Public Declare PtrSafe Function RollforwardTransactionManager Lib "ktmw32" (ByVal TransactionManagerHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function RecoverTransactionManager Lib "ktmw32" (ByVal TransactionManagerHandle As LongPtr) As BOOL
Public Declare PtrSafe Function GetCurrentClockTransactionManager Lib "ktmw32" (ByVal TransactionManagerHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function GetTransactionManagerId Lib "ktmw32" (ByVal TransactionManagerHandle As LongPtr, TransactionManagerId As UUID) As BOOL
Public DeclareWide PtrSafe Function CreateResourceManager Lib "ktmw32" (lpResourceManagerAttributes As SECURITY_ATTRIBUTES, ResourceManagerId As UUID, ByVal CreateOptions As TRANSACTION_MANAGER_RESOURCE_OPTIONS, ByVal TmHandle As LongPtr, Optional ByVal Description As String) As LongPtr
Public Declare PtrSafe Function OpenResourceManager Lib "ktmw32" ([TypeHint(ResourceManagerObjectRights)] ByVal DesiredAccess As Long, ByVal TmHandle As LongPtr, ResourceManagerId As UUID) As LongPtr
Public Declare PtrSafe Function RecoverResourceManager Lib "ktmw32" (ByVal ResourceManagerHandle As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetNotificationResourceManager Lib "ktmw32" (ByVal ResourceManagerHandle As LongPtr, TransactionNotification As Any, ByVal NotificationLength As Long, Optional ByVal dwMilliseconds As Long, Optional ByRef ReturLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetNotificationResourceManagerAsync Lib "ktmw32" (ByVal ResourceManagerHandle As LongPtr, TransactionNotification As Any, ByVal TransactionNotificationLength As Long, ReturLength As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function SetResourceManagerCompletionPort Lib "ktmw32" (ByVal ResourceManagerHandle As LongPtr, ByVal IoCompletionPortHandle As LongPtr, ByVal CompletionKey As LongPtr) As BOOL
Public Declare PtrSafe Function CreateEnlistment Lib "ktmw32" (lpResourceManagerAttributes As SECURITY_ATTRIBUTES, ByVal ResourceManagerHandle As LongPtr, ByVal NotificationMask As NOTIFICATION_MASK, Optional ByVal CreateOptions As TRANSACTION_ENLISTMENT_OPTIONS, Optional ByVal EnlistmentKey As LongPtr) As LongPtr
Public Declare PtrSafe Function OpenEnlistment Lib "ktmw32" ([TypeHint(EnlistmentObjectRights)] ByVal DesiredAccess As Long, ByVal ResourceManagerHandle As LongPtr, EnlistmentId As UUID) As LongPtr
Public Declare PtrSafe Function RecoverEnlistment Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, ByVal EnlistmentKey As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetEnlistmentRecoveryInformation Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, ByVal BufferSize As Long, Buffer As Any, BufferUsed As Long) As BOOL
Public Declare PtrSafe Function GetEnlistmentId Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, EnlistmentId As UUID) As BOOL
Public DeclareWide PtrSafe Function SetEnlistmentRecoveryInformation Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, ByVal BufferSize As Long, Buffer As Any) As BOOL
Public Declare PtrSafe Function PrepareEnlistment Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function PrePrepareEnlistment Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function CommitEnlistment Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function RollbackEnlistment Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function PrePrepareComplete Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function PrepareComplete Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function ReadOnlyEnlistment Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function CommitComplete Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function RollbackComplete Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function SinglePhaseReject Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL


'namespaceapi.h
Public Enum PrivateNamespaceFlags
    PRIVATE_NAMESPACE_FLAG_DESTROY = &H1
End Enum
Public Enum CreateBoundaryDesciptorFlags
    CREATE_BOUNDARY_DESCRIPTOR_ADD_APPCONTAINER_SID = &H1
End Enum
Public Declare PtrSafe Function CreatePrivateNamespaceA Lib "kernel32" (lpPrivateNamespaceAttributes As SECURITY_ATTRIBUTES, lpBoundaryDescriptor As Any, ByVal lpAliasPrefix As String) As LongPtr
Public Declare PtrSafe Function CreatePrivateNamespaceW Lib "kernel32" (lpPrivateNamespaceAttributes As SECURITY_ATTRIBUTES, lpBoundaryDescriptor As Any, ByVal lpAliasPrefix As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreatePrivateNamespace Lib "kernel32" Alias "CreatePrivateNamespaceW" (lpPrivateNamespaceAttributes As SECURITY_ATTRIBUTES, lpBoundaryDescriptor As Any, ByVal lpAliasPrefix As String) As LongPtr
Public Declare PtrSafe Function OpenPrivateNamespaceA Lib "kernel32" (lpBoundaryDescriptor As Any, ByVal lpAliasPrefix As String) As LongPtr
Public Declare PtrSafe Function OpenPrivateNamespaceW Lib "kernel32" (lpBoundaryDescriptor As Any, ByVal lpAliasPrefix As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenPrivateNamespace Lib "kernel32" Alias "OpenPrivateNamespaceW" (lpBoundaryDescriptor As Any, ByVal lpAliasPrefix As String) As LongPtr
Public Declare PtrSafe Function ClosePrivateNamespace Lib "kernel32" (ByVal Handle As LongPtr, ByVal Flags As PrivateNamespaceFlags) As Byte
Public Declare PtrSafe Function CreateBoundaryDescriptorA Lib "kernel32" (ByVal Name As String, ByVal Flags As CreateBoundaryDesciptorFlags) As LongPtr
Public Declare PtrSafe Function CreateBoundaryDescriptorW Lib "kernel32" (ByVal Name As LongPtr, ByVal Flags As CreateBoundaryDesciptorFlags) As LongPtr
Public DeclareWide PtrSafe Function CreateBoundaryDescriptor Lib "kernel32" Alias "CreateBoundaryDescriptorW" (ByVal Name As String, ByVal Flags As CreateBoundaryDesciptorFlags) As LongPtr
Public Declare PtrSafe Function AddSIDToBoundaryDescriptor Lib "kernel32" (BoundaryDescriptor As LongPtr, ByVal RequiredSid As LongPtr) As BOOL
Public Declare PtrSafe Sub DeleteBoundaryDescriptor Lib "kernel32" (ByVal BoundaryDescriptor As LongPtr)
Public Declare PtrSafe Function AddIntegrityLabelToBoundaryDescriptor Lib "kernel32" (BoundaryDescriptor As LongPtr, ByVal IntegrityLabel As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ReplacePartitionUnit Lib "kernel32" (ByVal TargetPartition As String, ByVal SparePartition As String, ByVal Flags As Long) As BOOL
Public Declare PtrSafe Function ReplacePartitionUnit Lib "kernel32" (ByVal TargetPartition As LongPtr, ByVal SparePartition As LongPtr, ByVal Flags As Long) As BOOL

Public Declare PtrSafe Function RaiseCustomSystemEventTrigger Lib "kernelbase" (Triggeronfig As CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG) As Long





Public Delegate Sub FileIOCompletionRoutine (ByVal dwErrorCode As Long, ByVal dwNumberOfBytesTransfered As Long, ByVal lpOverlapped As LongPtr)
Public Delegate Sub OVERLAPPED_COMPLETION_ROUTINE (ByVal dwErrorCode As Long, ByVal dwNumberOfBytesTransfered As Long, lpOverlapped As OVERLAPPED)
Public Declare PtrSafe Function WriteFile Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToWrite As Long, lpNumberOfBytesWritten As Long, lpOverlapped As OVERLAPPED) As BOOL
' Public Declare PtrSafe Function WriteFileEx Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToWrite As Long, lpNumberOfBytesWritten As Long, lpOverlapped As OVERLAPPED, ByVal lpCompletionRoutine As FileIOCompletionRoutine) As BOOL
Public Declare PtrSafe Function WriteFileEx Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToWrite As Long, lpNumberOfBytesWritten As Long, lpOverlapped As OVERLAPPED, ByVal lpCompletionRoutine As LongPtr) As BOOL
Public Declare PtrSafe Function WriteFileGather Lib "kernel32" (ByVal hFile As LongPtr, aSegmentArray As FILE_SEGMENT_ELEMENT, ByVal nNumberOfBytesToWrite As Long, lpReserved As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function ReadFile Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToRead As Long, lpNumberOfBytesRead As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function ReadFileEx Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToRead As Long, lpNumberOfBytesRead As Long, lpOverlapped As OVERLAPPED, ByVal lpCompletionRoutine As LongPtr) As BOOL
Public Declare PtrSafe Function ReadFileScatter Lib "kernel32" (ByVal hFile As LongPtr, aSegmentArray As FILE_SEGMENT_ELEMENT, ByVal nNumberOfBytesToRead As Long, lpReserved As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function SetFilePointer Lib "kernel32" (ByVal hFile As LongPtr, ByVal lDistanceToMove As Long, lpDistanceToMoveHigh As Long, ByVal dwMoveMethod As FileMoveMethods) As Long
Public Declare PtrSafe Function SetFilePointerEx Lib "kernel32" (ByVal hFile As LongPtr, ByVal lDistanceToMove As LongLong, lpDistanceToMoveHigh As LongLong, ByVal dwMoveMethod As FileMoveMethods) As BOOL
Public Declare PtrSafe Function SetEndOfFile Lib "kernel32" (ByVal hFile As LongPtr) As Long
Public Declare PtrSafe Function CreateFileA Lib "kernel32" (ByVal lpFileName As String, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [TypeHint(FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits)] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr) As LongPtr
Public Declare PtrSafe Function CreateFileW Lib "kernel32" (ByVal lpFileName As LongPtr, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [TypeHint(FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits)] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateFile Lib "kernel32" Alias "CreateFileW" (ByVal lpFileName As String, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [TypeHint(FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits)] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr) As LongPtr
Public Declare PtrSafe Function CreateFileTransactedA Lib "kernel32" (ByVal lpFileName As String, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [TypeHint(FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits)] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr, ByVal hTransaction As LongPtr, [TypeHint(TXFS_MINIVERSION)] pusMiniVersion As Integer, lpExtendedParameter As Any) As LongPtr
Public Declare PtrSafe Function CreateFileTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [TypeHint(FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits)] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr, ByVal hTransaction As LongPtr, [TypeHint(TXFS_MINIVERSION)] pusMiniVersion As Integer, lpExtendedParameter As Any) As LongPtr
Public DeclareWide PtrSafe Function CreateFileTransacted Lib "kernel32" Alias "CreateFileTransactedW" (ByVal lpFileName As String, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [TypeHint(FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits)] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr, ByVal hTransaction As LongPtr, [TypeHint(TXFS_MINIVERSION)] pusMiniVersion As Integer, lpExtendedParameter As Any) As LongPtr
Public Declare PtrSafe Function CreateFile2 Lib "kernel32" (ByVal lpFileName As LongPtr, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, ByVal dwCreationDisposition As CreateFileDisposition, pCreateExParams As CREATEFILE2_EXTENDED_PARAMETERS) As LongPtr
[Description("Note: This function has limited capabilities and is not recommended. For new application development, use the CreateFile function.")]
Public Declare PtrSafe Function OpenFile Lib "kernel32" (ByVal lpFileName As String, lpReOpenBuff As OFSTRUCT, ByVal uStyle As OPEN_FILE_FLAGS) As Long
Public Declare PtrSafe Function OpenFileById Lib "kernel32" (ByVal hVolumeHint As LongPtr, lpFileId As FILE_ID_DESCRIPTOR, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [TypeHint(FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits)] ByVal dwFlagsAndAttributes As Long) As LongPtr
Public Declare PtrSafe Function ReOpenFile Lib "kernel32" (ByVal hOriginalFile As LongPtr, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, [TypeHint(FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits)] ByVal dwFlagsAndAttributes As Long) As Long
Public Declare PtrSafe Function FlushFileBuffers Lib "kernel32" (ByVal hFile As LongPtr) As Long
Public Declare PtrSafe Function BackupRead Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToRead As Long, lpNumberOfBytesRead As Long, ByVal bAbort As BOOL, ByVal bProcessSecurity As BOOL, lpContext As LongPtr) As BOOL
Public Declare PtrSafe Function BackupSeek Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwLowBytesToSeek As Long, ByVal dwHighBytesToSeek As Long, lpdwLowByteSeeked As Long, lpdwHighByteSeeked As Long, lpContext As LongPtr) As Long
Public Declare PtrSafe Function BackupWrite Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToWrite As Long, lpNumberOfBytesWritten As Long, ByVal bAbort As BOOL, ByVal bProcessSecurity As BOOL, lpContext As LongPtr) As BOOL
Public Declare PtrSafe Function LockFile Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwFileOffsetLow As Long, ByVal dwFileOffsetHigh As Long, ByVal nNumberOfBytesToLockLow As Long, ByVal nNumberOfBytesToLockHigh As Long) As BOOL
Public Declare PtrSafe Function LockFileEx Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwFlags As LockFileExFlags, ByVal dwReserved As Long, ByVal nNumberOfBytesToLockLow As Long, ByVal nNumberOfBytesToLockHigh As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function UnlockFile Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwFileOffsetLow As Long, ByVal dwFileOffsetHigh As Long, ByVal nNumberOfBytesToUnlockLow As Long, ByVal nNumberOfBytesToUnlockHigh As Long) As BOOL
Public Declare PtrSafe Function UnlockFileEx Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwReserved As Long, ByVal nNumberOfBytesToUnlockLow As Long, ByVal nNumberOfBytesToUnlockHigh As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function SetFileValidData Lib "kernel32" (ByVal hFile As LongPtr, ByVal ValidDataLength As LongLong) As BOOL
Public Declare PtrSafe Function GetFileSize Lib "kernel32" (ByVal hFile As LongPtr, lpFileSizeHigh As Long) As Long
Public Declare PtrSafe Function GetFileSizeEx Lib "kernel32" (ByVal hFile As LongPtr, lpFileSize As LongLong) As BOOL
Public Declare PtrSafe Function GetCompressedFileSizeA Lib "kernel32" (ByVal lpFileName As String, lpFileSizeHigh As Long) As Long
Public Declare PtrSafe Function GetCompressedFileSizeW Lib "kernel32" (ByVal lpFileName As LongPtr, lpFileSizeHigh As Long) As Long
Public DeclareWide PtrSafe Function GetCompressedFileSize Lib "kernel32" Alias "GetCompressedFileSizeW" (ByVal lpFileName As String, lpFileSizeHigh As Long) As Long
Public Declare PtrSafe Function GetCompressedFileSizeTransactedA Lib "kernel32" (ByVal lpFileName As String, lpFileSizeHigh As Long, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function GetCompressedFileSizeTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, lpFileSizeHigh As Long, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function GetCompressedFileSizeTransacted Lib "kernel32" Alias "GetCompressedFileSizeTransactedW" (ByVal lpFileName As String, lpFileSizeHigh As Long, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function DeleteFile Lib "kernel32" Alias "DeleteFileW" (ByVal lpFileName As String) As BOOL
Public Declare PtrSafe Function DeleteFileW Lib "kernel32" (ByVal lpFileName As LongPtr) As BOOL
Public Declare PtrSafe Function DeleteFileA Lib "kernel32" (ByVal lpFileName As String) As BOOL
Public DeclareWide PtrSafe Function DeleteFileTransacted Lib "kernel32" Alias "DeleteFileTransactedW" (ByVal lpFileName As String, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function DeleteFileTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function DeleteFileTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function GetFileType Lib "kernel32" (ByVal hFile As LongPtr) As FileBaseType
Public Declare PtrSafe Function CreateFileMappingA Lib "kernel32" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [TypeHint(MemProtectFlags, NTSectionFlags)] ByVal flProtect As Long, ByVal dwMaximumSizeHigh As Long, ByVal dwMaximumSizeLow As Long, Optional ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateFileMappingW Lib "kernel32" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [TypeHint(MemProtectFlags, NTSectionFlags)] ByVal flProtect As Long, ByVal dwMaximumSizeHigh As Long, ByVal dwMaximumSizeLow As Long, Optional ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateFileMapping Lib "kernel32" Alias "CreateFileMappingW" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [TypeHint(MemProtectFlags, NTSectionFlags)] ByVal flProtect As Long, ByVal dwMaximumSizeHigh As Long, ByVal dwMaximumSizeLow As Long, Optional ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateFileMapping2 Lib "kernelbase" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [TypeHint(GenericRights, FileMapFlags)] ByVal DesiredAccess As Long, ByVal PageProtection As MemProtectFlags, ByVal AllocationAttributes As NTSectionFlags, ByVal MaximumSize As LongLong, ByVal Name As LongPtr, ExtendedParameters As Any, ByVal ParameterCount As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateFileMapping2 Lib "kernelbase" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [TypeHint(GenericRights, FileMapFlags)] ByVal DesiredAccess As Long, ByVal PageProtection As MemProtectFlags, ByVal AllocationAttributes As NTSectionFlags, ByVal MaximumSize As LongLong, ByVal Name As String, ExtendedParameters As Any, ByVal ParameterCount As Long) As LongPtr
Public Declare PtrSafe Function CreateFileMappingNumaA Lib "kernel32" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [TypeHint(MemProtectFlags, NTSectionFlags)] ByVal flProtect As Long, ByVal dwMaximumSizeHigh As Long, ByVal dwMaximumSizeLow As Long, ByVal lpName As String, ByVal nndPreferred As Long) As LongPtr
Public Declare PtrSafe Function CreateFileMappingNumaW Lib "kernel32" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [TypeHint(MemProtectFlags, NTSectionFlags)] ByVal flProtect As Long, ByVal dwMaximumSizeHigh As Long, ByVal dwMaximumSizeLow As Long, ByVal lpName As LongPtr, ByVal nndPreferred As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateFileMappingNuma Lib "kernel32" Alias "CreateFileMappingNumaW" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [TypeHint(MemProtectFlags, NTSectionFlags)] ByVal flProtect As Long, ByVal dwMaximumSizeHigh As Long, ByVal dwMaximumSizeLow As Long, ByVal lpName As String, ByVal nndPreferred As Long) As LongPtr
Public Declare PtrSafe Function OpenFileMappingA Lib "kernel32" ([TypeHint(GenericRights, FileMapFlags)] ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function OpenFileMappingW Lib "kernel32" ([TypeHint(GenericRights, FileMapFlags)] ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenFileMapping Lib "kernel32" Alias "OpenFileMappingW" ([TypeHint(GenericRights, FileMapFlags)] ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function MapViewOfFile Lib "kernel32" (ByVal hFileMappingObject As LongPtr, ByVal dwDesiredAccess As FileMapFlags, ByVal dwFileOffsetHigh As Long, ByVal dwFileOffsetLow As Long, ByVal dwNumberOfBytesToMap As LongPtr) As LongPtr
Public Function MapViewOfFile2(ByVal FileMappingHandle As LongPtr, ByVal ProcessHandle As LongPtr, ByVal Offset As LongLong, ByVal BaseAddress As LongPtr, ByVal ViewSize As LongPtr, ByVal AllocationType As MemAllocType, ByVal PageProtection As MemProtectFlags) As LongPtr
    Return MapViewOfFileNuma2(FileMappingHandle, ProcessHandle, Offset, BaseAddress, ViewSize, AllocationType, PageProtection, NUMA_NO_PREFERRED_NODE)
End Function
Public Declare PtrSafe Function MapViewOfFileNuma2 Lib "kernelbase" (ByVal FileMappingHandle As LongPtr, ByVal ProcessHandle As LongPtr, ByVal Offset As LongLong, ByVal BaseAddress As LongPtr, ByVal ViewSize As LongPtr, ByVal AllocationType As MemAllocType, ByVal PageProtection As MemProtectFlags, ByVal PreferredNode As Long) As LongPtr
Public Declare PtrSafe Function MapViewOfFile3 Lib "kernelbase" (ByVal FileMappingHandle As LongPtr, ByVal ProcessHandle As LongPtr, ByVal Offset As LongLong, ByVal BaseAddress As LongPtr, ByVal ViewSize As LongPtr, ByVal AllocationType As MemAllocType, ByVal PageProtection As MemProtectFlags, ExtendedParameters As Any, ByVal ParameterCount As Long) As LongPtr
Public Declare PtrSafe Function MapViewOfFileEx Lib "kernel32" (ByVal hFileMappingObject As LongPtr, ByVal dwDesiredAccess As FileMapFlags, ByVal dwFileOffsetHigh As Long, ByVal dwFileOffsetLow As Long, ByVal dwNumberOfBytesToMap As LongPtr, Optional ByVal lpBaseAddress As LongPtr) As LongPtr
Public Declare PtrSafe Function MapViewOfFileExNuma Lib "kernel32" (ByVal hFileMappingObject As LongPtr, ByVal dwDesiredAccess As FileMapFlags, ByVal dwFileOffsetHigh As Long, ByVal dwFileOffsetLow As Long, ByVal dwNumberOfBytesToMap As LongPtr, ByVal lpBaseAddress As LongPtr, ByVal nndPreferred As Long) As LongPtr
Public Declare PtrSafe Function FlushViewOfFile Lib "kernel32" (ByVal lpBaseAddress As LongPtr, ByVal dwNumberOfBytesToFlush As LongPtr) As BOOL
Public Declare PtrSafe Function UnmapViewOfFile Lib "kernel32" (ByVal BaseAddress As LongPtr) As BOOL
Public Declare PtrSafe Function UnmapViewOfFileEx Lib "kernel32" (ByVal BaseAddress As LongPtr, ByVal UnmapFlags As MemAllocType) As BOOL
Public Declare PtrSafe Function UnmapViewOfFile2 Lib "kernelbase" (ByVal Process As LongPtr, ByVal BaseAddress As LongPtr, ByVal UnmapFlags As MemAllocType) As BOOL
Public Declare PtrSafe Function CopyFileA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal bFailIfExists As BOOL) As BOOL
Public Declare PtrSafe Function CopyFileW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal bFailIfExists As BOOL) As BOOL
Public DeclareWide PtrSafe Function CopyFile Lib "kernel32" Alias "CopyFileW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal bFailIfExists As BOOL) As BOOL
Public Delegate Function PROGRESS_ROUTINE (ByVal TotalFileSize As LongLong, ByVal TotalBytesTransferred As LongLong, ByVal StreamSize As LongLong, ByVal StreamBytesTransferred As LongLong, ByVal dwStreamNumber As Long, ByVal dwCallbackReason As CopyProgressCallackReasons, ByVal hSourceFile As LongPtr, ByVal hDestinationFile As LongPtr, ByVal lpData As LongPtr) As CopyProgressReturns
' #If WINDEVLIB_NO_DELEGATES Then
Public Declare PtrSafe Function CopyFileExA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags) As BOOL
Public DeclareWide PtrSafe Function CopyFileExW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags) As BOOL
Public DeclareWide PtrSafe Function CopyFileEx Lib "kernel32" Alias "CopyFileExW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags) As BOOL
Public Declare PtrSafe Function CopyFileTransactedA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function CopyFileTransactedW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function CopyFileTransacted Lib "kernel32" Alias "CopyFileTransactedW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function MoveFileWithProgressA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags) As BOOL
Public Declare PtrSafe Function MoveFileWithProgressW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags) As BOOL
Public DeclareWide PtrSafe Function MoveFileWithProgress Lib "kernel32" Alias "MoveFileWithProgressW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags) As BOOL
Public Declare PtrSafe Function MoveFileTransactedA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function MoveFileTransactedW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function MoveFileTransacted Lib "kernel32" Alias "MoveFileTransactedW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags, ByVal hTransaction As LongPtr) As BOOL
' #Else
' Public Declare PtrSafe Function CopyFileExA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgresRoutine As PROGRESS_ROUTINE, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags) As BOOL
' Public DeclareWide PtrSafe Function CopyFileExW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal lpProgresRoutine As PROGRESS_ROUTINE, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags) As BOOL
' Public DeclareWide PtrSafe Function CopyFileEx Lib "kernel32" Alias "CopyFileExW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgresRoutine As PROGRESS_ROUTINE, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags) As BOOL
' Public Declare PtrSafe Function CopyFileTransactedA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgresRoutine As PROGRESS_ROUTINE, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags, ByVal hTransaction As LongPtr) As BOOL
' Public DeclareWide PtrSafe Function CopyFileTransactedW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal lpProgresRoutine As PROGRESS_ROUTINE, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags, ByVal hTransaction As LongPtr) As BOOL
' Public DeclareWide PtrSafe Function CopyFileTransacted Lib "kernel32" Alias "CopyFileTransactedW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgresRoutine As PROGRESS_ROUTINE, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags, ByVal hTransaction As LongPtr) As BOOL
' Public Declare PtrSafe Function MoveFileWithProgressA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgressRoutine As PROGRESS_ROUTINE, lpData As Any, ByVal dwFlags As MoveFileExFlags) As BOOL
' Public Declare PtrSafe Function MoveFileWithProgressW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal lpProgressRoutine As PROGRESS_ROUTINE, lpData As Any, ByVal dwFlags As MoveFileExFlags) As BOOL
' Public DeclareWide PtrSafe Function MoveFileWithProgress Lib "kernel32" Alias "MoveFileWithProgressW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgressRoutine As PROGRESS_ROUTINE, lpData As Any, ByVal dwFlags As MoveFileExFlags) As BOOL
' Public Declare PtrSafe Function MoveFileTransactedA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgressRoutine As PROGRESS_ROUTINE, lpData As Any, ByVal dwFlags As MoveFileExFlags, ByVal hTransaction As LongPtr) As BOOL
' Public DeclareWide PtrSafe Function MoveFileTransactedW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal lpProgressRoutine As PROGRESS_ROUTINE, lpData As Any, ByVal dwFlags As MoveFileExFlags, ByVal hTransaction As LongPtr) As BOOL
' Public DeclareWide PtrSafe Function MoveFileTransacted Lib "kernel32" Alias "MoveFileTransactedW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgressRoutine As PROGRESS_ROUTINE, lpData As Any, ByVal dwFlags As MoveFileExFlags, ByVal hTransaction As LongPtr) As BOOL
' #End If
Public Declare PtrSafe Function CopyFile2 Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, pExtendedParameters As Any) As BOOL
Public Declare PtrSafe Function MoveFileA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String) As BOOL
Public Declare PtrSafe Function MoveFileW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function MoveFile Lib "kernel32" Alias "MoveFileW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String) As BOOL
Public Declare PtrSafe Function MoveFileExA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal dwFlags As MoveFileExFlags) As BOOL
Public Declare PtrSafe Function MoveFileExW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal dwFlags As MoveFileExFlags) As BOOL
Public DeclareWide PtrSafe Function MoveFileEx Lib "kernel32" Alias "MoveFileExW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal dwFlags As MoveFileExFlags) As BOOL
Public Declare PtrSafe Function ReplaceFileA Lib "kernel32" (ByVal lpReplacedFileName As String, ByVal lpReplacementFileName As String, ByVal lpBackupFileName As String, ByVal dwReplaceFileFlags As ReplaceFileFlags, ByVal lpExclude As LongPtr, ByVal lpReserved As LongPtr) As BOOL
Public Declare PtrSafe Function ReplaceFileW Lib "kernel32" (ByVal lpReplacedFileName As LongPtr, ByVal lpReplacementFileName As LongPtr, ByVal lpBackupFileName As LongPtr, ByVal dwReplaceFileFlags As ReplaceFileFlags, ByVal lpExclude As LongPtr, ByVal lpReserved As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ReplaceFile Lib "kernel32" Alias "ReplaceFileW" (ByVal lpReplacedFileName As String, ByVal lpReplacementFileName As String, ByVal lpBackupFileName As String, ByVal dwReplaceFileFlags As ReplaceFileFlags, ByVal lpExclude As LongPtr, ByVal lpReserved As LongPtr) As BOOL
Public Declare PtrSafe Function GetFullPathNameA Lib "kernel32" (ByVal lpFileName As String, ByVal nBufferLength As Long, ByVal lpBuffer As String, lpFilePart As String) As Long
Public Declare PtrSafe Function GetFullPathNameW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr, lpFilePart As LongPtr) As Long
Public DeclareWide PtrSafe Function GetFullPathName Lib "kernel32" Alias "GetFullPathNameW" (ByVal lpFileName As String, ByVal nBufferLength As Long, ByVal lpBuffer As String, lpFilePart As LongPtr) As Long
Public Declare PtrSafe Function GetFullPathNameTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal nBufferLength As Long, ByVal lpBuffer As String, lpFilePart As String, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function GetFullPathNameTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr, lpFilePart As LongPtr, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function GetFullPathNameTransacted Lib "kernel32" Alias "GetFullPathNameTransactedW" (ByVal lpFileName As String, ByVal nBufferLength As Long, ByVal lpBuffer As String, lpFilePart As LongPtr, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function GetLongPathNameA Lib "kernel32" (ByVal lpszShortPath As String, ByVal lpszLongPath As String, ByVal cchBuffer As LongPtr) As Long
Public Declare PtrSafe Function GetLongPathNameW Lib "kernel32" (ByVal lpszShortPath As LongPtr, ByVal lpszLongPath As LongPtr, ByVal cchBuffer As LongPtr) As Long
Public DeclareWide PtrSafe Function GetLongPathName Lib "kernel32" Alias "GetLongPathNameW" (ByVal lpszShortPath As String, ByVal lpszLongPath As String, ByVal cchBuffer As LongPtr) As Long
Public Declare PtrSafe Function GetLongPathNameTransactedA Lib "kernel32" (ByVal lpszShortPath As String, ByVal lpszLongPath As String, ByVal cchBuffer As LongPtr, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function GetLongPathNameTransactedW Lib "kernel32" (ByVal lpszShortPath As LongPtr, ByVal lpszLongPath As LongPtr, ByVal cchBuffer As LongPtr, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function GetLongPathNameTransacted Lib "kernel32" Alias "GetLongPathNameTransactedW" (ByVal lpszShortPath As String, ByVal lpszLongPath As String, ByVal cchBuffer As LongPtr, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function GetShortPathNameA Lib "kernel32" (ByVal lpszLongPath As String, ByVal lpszShortPath As String, ByVal cchBuffer As Long) As Long
Public Declare PtrSafe Function GetShortPathNameW Lib "kernel32" (ByVal lpszLongPath As LongPtr, ByVal lpszShortPath As LongPtr, ByVal cchBuffer As Long) As Long
Public DeclareWide PtrSafe Function GetShortPathName Lib "kernel32" Alias "GetShortPathNameW" (ByVal lpszLongPath As String, ByVal lpszShortPath As String, ByVal cchBuffer As Long) As Long
Public Declare PtrSafe Function GetTempPathA Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function GetTempPathW Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr) As Long
Public DeclareWide PtrSafe Function GetTempPath Lib "kernel32" Alias "GetTempPathW" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function GetTempPath2A Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function GetTempPath2W Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr) As Long
Public DeclareWide PtrSafe Function GetTempPath2 Lib "kernel32" Alias "GetTempPath2W" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function GetTempFileNameA Lib "kernel32" (ByVal lpPathName As String, ByVal lpPrefixString As String, ByVal uUnique As Long, ByVal lpTempFileName As String) As Long
Public Declare PtrSafe Function GetTempFileNameW Lib "kernel32" (ByVal lpPathName As LongPtr, ByVal lpPrefixString As LongPtr, ByVal uUnique As Long, ByVal lpTempFileName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetTempFileName Lib "kernel32" Alias "GetTempFileNameW" (ByVal lpPathName As String, ByVal lpPrefixString As String, ByVal uUnique As Long, ByVal lpTempFileName As String) As Long
Public Declare PtrSafe Function GetFileTime Lib "kernel32" (ByVal hFile As LongPtr, lpCreationTime As FILETIME, lpLastAccessTime As FILETIME, lpLastWriteTime As FILETIME) As BOOL
Public Declare PtrSafe Function SetFileTime Lib "kernel32" (ByVal hFile As LongPtr, lpCreationTime As FILETIME, lpLastAccessTime As FILETIME, lpLastWriteTime As FILETIME) As BOOL
Public Declare PtrSafe Function GetFinalPathNameByHandleA Lib "kernel32" (ByVal hFile As LongPtr, ByVal lpszFilePath As String, ByVal cchFilePath As Long, ByVal dwFlags As GetFinalPathNameFlags) As Long
Public Declare PtrSafe Function GetFinalPathNameByHandleW Lib "kernel32" (ByVal hFile As LongPtr, ByVal lpszFilePath As LongPtr, ByVal cchFilePath As Long, ByVal dwFlags As GetFinalPathNameFlags) As Long
Public DeclareWide PtrSafe Function GetFinalPathNameByHandle Lib "kernel32" Alias "GetFinalPathNameByHandleW" (ByVal hFile As LongPtr, ByVal lpszFilePath As String, ByVal cchFilePath As Long, ByVal dwFlags As GetFinalPathNameFlags) As Long

Public Declare PtrSafe Function AreShortNamesEnabled Lib "kernel32" (ByVal Handle As LongPtr, Enabled As BOOL) As BOOL
Public Declare PtrSafe Function GetCurrentDirectoryA Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function GetCurrentDirectoryW Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr) As Long
Public DeclareWide PtrSafe Function GetCurrentDirectory Lib "kernel32" Alias "GetCurrentDirectoryW" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function SetCurrentDirectoryA Lib "kernel32" (ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function SetCurrentDirectoryW Lib "kernel32" (ByVal lpPathName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetCurrentDirectory Lib "kernel32" Alias "SetCurrentDirectoryW" (ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function RemoveDirectoryA Lib "kernel32" (ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function RemoveDirectoryW Lib "kernel32" (ByVal lpPathName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function RemoveDirectory Lib "kernel32" Alias "RemoveDirectoryW" (ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function RemoveDirectoryTransactedA Lib "kernel32" (ByVal lpPathName As String, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function RemoveDirectoryTransactedW Lib "kernel32" (ByVal lpPathName As LongPtr, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function RemoveDirectoryTransacted Lib "kernel32" Alias "RemoveDirectoryTransactedW" (ByVal lpPathName As String, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function CreateDirectoryW Lib "kernel32" (ByVal lpPathName As LongPtr, lpSecurityAttributes As SECURITY_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function CreateDirectoryA Lib "kernel32" (ByVal lpPathName As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As BOOL
Public DeclareWide PtrSafe Function CreateDirectory Lib "kernel32" Alias "CreateDirectoryW" (ByVal lpPathName As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function CreateDirectoryExA Lib "kernel32" (ByVal lpTemplateDirectory As String, ByVal lpNewDirectory As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As Long
Public Declare PtrSafe Function CreateDirectoryExW Lib "kernel32" (ByVal lpTemplateDirectory As LongPtr, ByVal lpNewDirectory As LongPtr, lpSecurityAttributes As SECURITY_ATTRIBUTES) As Long
Public DeclareWide PtrSafe Function CreateDirectoryEx Lib "kernel32" Alias "CreateDirectoryExW" (ByVal lpTemplateDirectory As String, ByVal lpNewDirectory As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As Long
Public Declare PtrSafe Function CreateDirectoryTransactedA Lib "kernel32" (ByVal lpTemplateDirectory As String, ByVal lpNewDirectory As String, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function CreateDirectoryTransactedW Lib "kernel32" (ByVal lpTemplateDirectory As LongPtr, ByVal lpNewDirectory As LongPtr, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function CreateDirectoryTransacted Lib "kernel32" Alias "CreateDirectoryTransactedW" (ByVal lpTemplateDirectory As String, ByVal lpNewDirectory As String, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function FindFirstChangeNotificationA Lib "kernel32" (ByVal lpPathName As String, ByVal bWatchSubtree As BOOL, ByVal dwNotifyFilter As FILE_NOTIFY_CHANGE) As LongPtr
Public Declare PtrSafe Function FindFirstChangeNotificationW Lib "kernel32" (ByVal lpPathName As LongPtr, ByVal bWatchSubtree As BOOL, ByVal dwNotifyFilter As FILE_NOTIFY_CHANGE) As LongPtr
Public DeclareWide PtrSafe Function FindFirstChangeNotification Lib "kernel32" Alias "FindFirstChangeNotificationW" (ByVal lpPathName As String, ByVal bWatchSubtree As BOOL, ByVal dwNotifyFilter As FILE_NOTIFY_CHANGE) As LongPtr
Public Declare PtrSafe Function FindNextChangeNotification Lib "kernel32" (ByVal hChangeHandle As LongPtr) As BOOL
Public Declare PtrSafe Function FindCloseChangeNotification Lib "kernel32" (ByVal hChangeHandle As LongPtr) As BOOL
Public Declare PtrSafe Function ReadDirectoryChangesW Lib "kernel32" (ByVal hDirectory As LongPtr, ByVal lpBuffer As LongPtr, ByVal nBufferLength As Long, ByVal bWatchSubtree As BOOL, ByVal dwNotifyFilter As FILE_NOTIFY_CHANGE, lpBytesReturned As Long, lpOverlapped As OVERLAPPED, Optional ByVal lpCompletionRoutine As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ReadDirectoryChanges Lib "kernel32" Alias "ReadDirectoryChangesW" (ByVal hDirectory As LongPtr, ByVal lpBuffer As LongPtr, ByVal nBufferLength As Long, ByVal bWatchSubtree As BOOL, ByVal dwNotifyFilter As FILE_NOTIFY_CHANGE, lpBytesReturned As Long, lpOverlapped As OVERLAPPED, Optional ByVal lpCompletionRoutine As LongPtr) As BOOL
Public Declare PtrSafe Function ReadDirectoryChangesExW Lib "kernel32" (ByVal hDirectory As LongPtr, lpBuffer As Any, ByVal nBufferLength As Long, ByVal bWatchSubtree As BOOL, ByVal dwNotifyFilter As FILE_NOTIFY_CHANGE, lpBytesReturned As Long, lpOverlapped As OVERLAPPED, ByVal lpCompletionRoutine As LongPtr, ByVal ReadDirectoryNotifyInformationClass As READ_DIRECTORY_NOTIFY_INFORMATION_CLASS) As BOOL
Public DeclareWide PtrSafe Function ReadDirectoryChangesEx Lib "kernel32" Alias "ReadDirectoryChangesExW" (ByVal hDirectory As LongPtr, lpBuffer As Any, ByVal nBufferLength As Long, ByVal bWatchSubtree As BOOL, ByVal dwNotifyFilter As FILE_NOTIFY_CHANGE, lpBytesReturned As Long, lpOverlapped As OVERLAPPED, ByVal lpCompletionRoutine As LongPtr, ByVal ReadDirectoryNotifyInformationClass As READ_DIRECTORY_NOTIFY_INFORMATION_CLASS) As BOOL

' typedef
' VOID
' (WINAPI *LPOVERLAPPED_COMPLETION_ROUTINE)(
    ' _In_    DWORD dwErrorCode,
    ' _In_    DWORD dwNumberOfBytesTransfered,
    ' _Inout_ LPOVERLAPPED lpOverlapped
    ' );
Public Delegate Sub OverlappedCompletionRoutine (ByVal errorCode As Long, ByVal dwNumberOfBytesTransfered As Long, lpOverlapped As OVERLAPPED)


Public Enum READ_DIRECTORY_NOTIFY_INFORMATION_CLASS
    ReadDirectoryNotifyInformation = 1
    ReadDirectoryNotifyExtendedInformation   ' 2
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_NI)
    ReadDirectoryNotifyFullInformation   ' 3
    ' #endif
    '  add new classes above
    ReadDirectoryNotifyMaximumInformation
End Enum

Public Enum FILE_INFO_BY_NAME_CLASS
    FileStatByNameInfo
    FileStatLxByNameInfo
    FileCaseSensitiveByNameInfo
    FileStatBasicByNameInfo
    MaximumFileInfoByNameClass
End Enum

Public Enum FILE_ACTION_TYPES
    FILE_ACTION_ADDED = &H00000001
    FILE_ACTION_REMOVED = &H00000002
    FILE_ACTION_MODIFIED = &H00000003
    FILE_ACTION_RENAMED_OLD_NAME = &H00000004
    FILE_ACTION_RENAMED_NEW_NAME = &H00000005
End Enum
Public Type FILE_NOTIFY_INFORMATION
    NextEntryOffset As Long
    Action As FILE_ACTION_TYPES
    FileNameLength As Long
    FileName(0 To MAX_PATH) As Integer
End Type

Public Enum FILE_NOTIFY_CHANGE
    FILE_NOTIFY_CHANGE_FILE_NAME = &H00000001
    FILE_NOTIFY_CHANGE_DIR_NAME = &H00000002
    FILE_NOTIFY_CHANGE_ATTRIBUTES = &H00000004
    FILE_NOTIFY_CHANGE_SIZE = &H00000008
    FILE_NOTIFY_CHANGE_LAST_WRITE = &H00000010
    FILE_NOTIFY_CHANGE_LAST_ACCESS = &H00000020
    FILE_NOTIFY_CHANGE_CREATION = &H00000040
    FILE_NOTIFY_CHANGE_SECURITY = &H00000100
End Enum

Public Enum MoveFileExFlags
    MOVEFILE_REPLACE_EXISTING = &H00000001
    MOVEFILE_COPY_ALLOWED = &H00000002
    MOVEFILE_DELAY_UNTIL_REBOOT = &H00000004
    MOVEFILE_WRITE_THROUGH = &H00000008
    MOVEFILE_CREATE_HARDLINK = &H00000010
    MOVEFILE_FAIL_IF_NOT_TRACKABLE = &H00000020
End Enum

Public Enum COPYFILE2_MESSAGE_TYPE
    COPYFILE2_CALLBACK_NONE = 0
    COPYFILE2_CALLBACK_CHUNK_STARTED = 1
    COPYFILE2_CALLBACK_CHUNK_FINISHED = 2
    COPYFILE2_CALLBACK_STREAM_STARTED = 3
    COPYFILE2_CALLBACK_STREAM_FINISHED = 4
    COPYFILE2_CALLBACK_POLL_CONTINUE = 5
    COPYFILE2_CALLBACK_ERROR = 6
    COPYFILE2_CALLBACK_MAX = 7
End Enum

Public Enum COPYFILE2_MESSAGE_ACTION
    COPYFILE2_PROGRESS_CONTINUE = 0
    COPYFILE2_PROGRESS_CANCEL = 1
    COPYFILE2_PROGRESS_STOP = 2
    COPYFILE2_PROGRESS_QUIET = 3
    COPYFILE2_PROGRESS_PAUSE = 4
End Enum

Public Enum COPYFILE2_COPY_PHASE
    COPYFILE2_PHASE_NONE = 0
    COPYFILE2_PHASE_PREPARE_SOURCE = 1
    COPYFILE2_PHASE_PREPARE_DEST = 2
    COPYFILE2_PHASE_READ_SOURCE = 3
    COPYFILE2_PHASE_WRITE_DESTINATION = 4
    COPYFILE2_PHASE_SERVER_COPY = 5
    COPYFILE2_PHASE_NAMEGRAFT_COPY = 6
    '  ... etc phases.
    COPYFILE2_PHASE_MAX = 7
End Enum

Public Enum CopyFileFlags
    COPY_FILE_FAIL_IF_EXISTS = &H00000001
    COPY_FILE_RESTARTABLE = &H00000002
    COPY_FILE_OPEN_SOURCE_FOR_WRITE = &H00000004
    COPY_FILE_ALLOW_DECRYPTED_DESTINATION = &H00000008
    COPY_FILE_COPY_SYMLINK = &H00000800
    COPY_FILE_NO_BUFFERING = &H00001000
    COPY_FILE_REQUEST_SECURITY_PRIVILEGES = &H00002000
    COPY_FILE_RESUME_FROM_PAUSE = &H00004000
    COPY_FILE_NO_OFFLOAD = &H00040000
    COPY_FILE_IGNORE_EDP_BLOCK = &H00400000
    COPY_FILE_IGNORE_SOURCE_ENCRYPTION = &H00800000
'  Don't request WRITE_DAC for the destination file access.
    COPY_FILE_DONT_REQUEST_DEST_WRITE_DAC = &H02000000
'  If either source or target is an SMB share, compression
'  will be requested on all READs and WRITEs.
    COPY_FILE_REQUEST_COMPRESSED_TRAFFIC = &H10000000
    COPY_FILE_OPEN_AND_COPY_REPARSE_POINT = &H00200000
    COPY_FILE_DIRECTORY = &H00000080
    COPY_FILE_SKIP_ALTERNATE_STREAMS = &H00008000&
    COPY_FILE_DISABLE_PRE_ALLOCATION = &H04000000
    COPY_FILE_ENABLE_LOW_FREE_SPACE_MODE = &H08000000
    COPY_FILE_ENABLE_SPARSE_COPY = &H20000000
    COPY_FILE_DISABLE_SPARSE_COPY = &H80000000
End Enum

Public Const COPYFILE2_IO_CYCLE_SIZE_MIN  = 4096
'  maximum allowed requested i/o size, in bytes (1GB)
'  (constrains COPYFILE2_EXTENDED_PARAMETERS_V2 ioDesiredSize field).
Public Const COPYFILE2_IO_CYCLE_SIZE_MAX  = &H40000000
'  minimum allowed requested average i/o rate, in kbytes per second
'  (constrains COPYFILE2_EXTENDED_PARAMETERS_V2 ioDesiredRate field).
Public Const COPYFILE2_IO_RATE_MIN  = 512

Public Enum CopyFile2Flags
    COPY_FILE2_V2_DONT_COPY_JUNCTIONS = &H00000001
' #if (NTDDI_VERSION >= NTDDI_WIN11_GA)
'   Disable attempting block cloning during copy
    COPY_FILE2_V2_DISABLE_BLOCK_CLONING = &H00000002
    COPY_FILE2_V2_VALID_FLAGS = (COPY_FILE2_V2_DONT_COPY_JUNCTIONS Or COPY_FILE2_V2_DISABLE_BLOCK_CLONING)
End Enum

Public Type COPYFILE2_EXTENDED_PARAMETERS
    dwSize As Long
    dwCopyFlags As CopyFileFlags
    pfCancel As LongPtr
    pProgressRoutine As LongPtr
    pvCallbackContext As LongPtr
End Type
Public Type COPYFILE2_EXTENDED_PARAMETERS_V2
    dwSize As Long
    dwCopyFlags As CopyFileFlags
    pfCancel As LongPtr
    pProgressRoutine As LongPtr
    pvCallbackContext As LongPtr
    ' Additional copy flags (COPYFILE2_EXTENDED_PARAMETERS_V2 only;
    ' treated as zero if COPYFILE2_EXTENDED_PARAMETERS is used).
    dwCopyFlagsV2 As CopyFile2Flags
    ' size of the i/o for each {read, write} cycle, in bytes
    ' (may be reduced, if insufficient memory is available)
    ' if zero: use a suitable default.
    ' may be ignored if ioDesiredRate is specified (i.e.,
    ' CopyFile2() will disregard if a requested size is
    ' rate is inappropriate for a requested rate.)
    ioDesiredSize As Long
    ' requested average i/o rate, in kbytes per second.
    ' if zero: use a suitable default (usually as fast as possible).
    ioDesiredRate As Long
    pProgressRoutineOld As LongPtr
    SourceOplockKeys As LongPtr
    ' reserved for future use; must be set to zero
        reserved(0 To 5) As LongPtr
End Type

[Description("Copy union() to one of the COPYFILE2_INFO_* UDTs based on the Type member.")]
Public Type COPYFILE2_MESSAGE
    Type As COPYFILE2_MESSAGE_TYPE
    dwPadding As Long
    #If Win64 Then
    Info(71) As Byte
    #Else
    Info(63) As Byte
    #End If
End Type
Public Type COPYFILE2_INFO_CHUNKSTARTED
    dwStreamNumber As Long
    dwReserved As Long
    hSourceFile As LongPtr
    hDestinationFile As LongPtr
    uliChunkNumber As LongLong
    uliChunkSize As LongLong
    uliStreamSize As LongLong
    uliTotalFileSize As LongLong
End Type
Public Type COPYFILE2_INFO_CHUNKFINISHED
    dwStreamNumber As Long
    dwFlags As Long
    hSourceFile As LongPtr
    hDestinationFile As LongPtr
    uliChunkNumber As LongLong
    uliChunkSize As LongLong
    uliStreamSize As LongLong
    uliStreamBytesTransferred As LongLong
    uliTotalFileSize As LongLong
    uliTotalBytesTransferred As LongLong
End Type
Public Type COPYFILE2_INFO_STREAMSTARTED
    dwStreamNumber As Long
    dwReserved As Long
    hSourceFile As LongPtr
    hDestinationFile As LongPtr
    uliStreamSize As LongLong
    uliTotalFileSize As LongLong
End Type
Public Type COPYFILE2_INFO_STREAMFINISHED
    dwStreamNumber As Long
    dwReserved As Long
    hSourceFile As LongPtr
    hDestinationFile As LongPtr
    uliStreamSize As LongLong
    uliStreamBytesTransferred As LongLong
    uliTotalFileSize As LongLong
    uliTotalBytesTransferred As LongLong
End Type
Public Type COPYFILE2_INFO_POLLCONTINUE
    dwReserved As Long
End Type
Public Type COPYFILE2_INFO_ERROR
    dwStreamNumber As Long
    hrFailure As Long
    dwReserved As Long
    uliChunkNumber As LongLong
    uliStreamSize As LongLong
    uliStreamBytesTransferred As LongLong
    uliTotalFileSize As LongLong
    uliTotalBytesTransferred As LongLong
End Type

Public Type COPYFILE2_CREATE_OPLOCK_KEYS
    '  Parent oplock key.
    '  All-zero if not set.
    ParentOplockKey As UUID
    '  Target oplock key.
    '  All-zero if not set.
    TargetOplockKey As UUID
End Type

Public Enum CopyProgressCallackReasons
    CALLBACK_CHUNK_FINISHED = &H00000000
    CALLBACK_STREAM_SWITCH = &H00000001
End Enum
Public Enum CopyProgressReturns
    PROGRESS_CONTINUE = 0
    PROGRESS_CANCEL = 1
    PROGRESS_STOP = 2
    PROGRESS_QUIET = 3
End Enum

Public Enum FileShareMode
    FILE_SHARE_READ = &H00000001
    FILE_SHARE_WRITE = &H00000002
    FILE_SHARE_DELETE = &H00000004
End Enum

Public Type CREATEFILE2_EXTENDED_PARAMETERS
    dwSize As Long
    dwFileAttributes As FILE_ATTRIBUTES
    dwFileFlags As FILE_FLAGS
    dwSecurityQosFlags As SQOS_Bits
    lpSecurityAttributes As LongPtr
    hTemplateFile As LongPtr
End Type

Public Enum FileSystemFlags
    FILE_CASE_SENSITIVE_SEARCH = &H00000001
    FILE_CASE_PRESERVED_NAMES = &H00000002
    FILE_UNICODE_ON_DISK = &H00000004
    FILE_PERSISTENT_ACLS = &H00000008
    FILE_FILE_COMPRESSION = &H00000010
    FILE_VOLUME_QUOTAS = &H00000020
    FILE_SUPPORTS_SPARSE_FILES = &H00000040
    FILE_SUPPORTS_REPARSE_POINTS = &H00000080
    FILE_SUPPORTS_REMOTE_STORAGE = &H00000100
    FILE_RETURNS_CLEANUP_RESULT_INFO = &H00000200
    FILE_SUPPORTS_POSIX_UNLINK_RENAME = &H00000400
    FILE_SUPPORTS_BYPASS_IO = &H00000800
    FILE_SUPPORTS_STREAM_SNAPSHOTS = &H00001000
    FILE_SUPPORTS_CASE_SENSITIVE_DIRS = &H00002000
    FILE_VOLUME_IS_COMPRESSED = &H00008000&
    FILE_SUPPORTS_OBJECT_IDS = &H00010000
    FILE_SUPPORTS_ENCRYPTION = &H00020000
    FILE_NAMED_STREAMS = &H00040000
    FILE_READ_ONLY_VOLUME = &H00080000
    FILE_SEQUENTIAL_WRITE_ONCE = &H00100000
    FILE_SUPPORTS_TRANSACTIONS = &H00200000
    FILE_SUPPORTS_HARD_LINKS = &H00400000
    FILE_SUPPORTS_EXTENDED_ATTRIBUTES = &H00800000
    FILE_SUPPORTS_OPEN_BY_FILE_ID = &H01000000
    FILE_SUPPORTS_USN_JOURNAL = &H02000000
    FILE_SUPPORTS_INTEGRITY_STREAMS = &H04000000
    FILE_SUPPORTS_BLOCK_REFCOUNTING = &H08000000
    FILE_SUPPORTS_SPARSE_VDL = &H10000000
    FILE_DAX_VOLUME = &H20000000
    FILE_SUPPORTS_GHOSTING = &H40000000
End Enum


Public Type TIME_ZONE_INFORMATION
    Bias As Long
    StandardName(0 To 31) As Integer
    StandardDate As SYSTEMTIME
    StandardBias As Long
    DaylightName(0 To 31) As Integer
    DaylightDate As SYSTEMTIME
    DaylightBias As Long
End Type
Public Type DYNAMIC_TIME_ZONE_INFORMATION
    Bias As Long
    StandardName(31) As Integer
    StandardDate As SYSTEMTIME
    StandardBias As Long
    DaylightName(31) As Integer
    DaylightDate As SYSTEMTIME
    DaylightBias As Long
    TimeZoneKeyName(127) As Integer
    DynamicDaylightTimeDisabled As Byte
End Type

Public Enum TIME_ZONE_ID
    TIME_ZONE_ID_UNKNOWN = 0
    TIME_ZONE_ID_STANDARD = 1
    TIME_ZONE_ID_DAYLIGHT = 2
    TIME_ZONE_ID_INVALID = (&HFFFFFFFF)
End Enum

Public Type OVERLAPPED_ENTRY
    lpCompletionKey As LongPtr
    lpOverlapped As LongPtr
    Internal As LongPtr
    dwNumberOfBytesTransferred As Long
End Type

Public Enum FileCompletionModeFlags
'Don't queue an entry to an associated completion port if returning success synchronously.
    FILE_SKIP_COMPLETION_PORT_ON_SUCCESS = &H1
'  Don't set the file handle event on IO completion.
    FILE_SKIP_SET_EVENT_ON_HANDLE = &H2
    FILE_SKIP_SET_USER_EVENT_ON_FAST_IO = &H4
End Enum

Public Enum CreateSymLinkFlags
    SYMBOLIC_LINK_FLAG_DIRECTORY = (&H1)
'   Specify this flag if you want to allow creation of symbolic links when the
'   process is not elevated.  As of now enabling DEVELOPER MODE on a system
'   is the only scenario that allow unprivileged symlink creation. There may
'   be future scenarios that this flag will enable in the future.
'   Also be aware that the behavior of this API with this flag set will likely
'   be different between a development environment and an and customers
'   environment so please be careful with the usage of this flag.
    SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE = (&H2)
End Enum


Public Declare PtrSafe Function CreateIoCompletionPort Lib "kernel32" (ByVal FileHandle As LongPtr, ByVal ExistingCompletionPort As LongPtr, ByVal CompletionKey As LongPtr, ByVal NumberOfConcurrentThreads As Long) As LongPtr
Public Declare PtrSafe Function GetQueuedCompletionStatus Lib "kernel32" (ByVal CompletionPort As LongPtr, lpNumberOfBytesTransferred As Long, lpCompletionKey As LongPtr, lpOverlapped As LongPtr, ByVal dwMilliseconds As Long) As BOOL
Public Declare PtrSafe Function GetQueuedCompletionStatusEx Lib "kernel32" (ByVal CompletionPort As LongPtr, lpCompletionPortEntries As OVERLAPPED_ENTRY, ByVal ulCount As Long, ulNumEntriesRemoved As Long, ByVal dwMilliseconds As Long, ByVal fAlertable As BOOL) As BOOL
Public Declare PtrSafe Function PostQueuedCompletionStatus Lib "kernel32" (ByVal CompletionPort As LongPtr, ByVal dwNumberOfBytesTransferred As Long, ByVal dwCompletionKey As LongPtr, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function GetOverlappedResult Lib "kernel32" (ByVal hFile As LongPtr, lpOverlapped As OVERLAPPED, lpNumberOfBytesTransferred As Long, ByVal bWait As BOOL) As BOOL
Public Declare PtrSafe Function GetOverlappedResultEx Lib "kernel32" (ByVal hFile As LongPtr, lpOverlapped As OVERLAPPED, lpNumberOfBytesTransferred As Long, ByVal dwMilliseconds As Long, ByVal bAlertable As BOOL) As BOOL
Public Declare PtrSafe Function CancelIo Lib "kernel32" (ByVal hFile As LongPtr) As BOOL
Public Declare PtrSafe Function CancelIoEx Lib "kernel32" (ByVal hFile As LongPtr, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function CancelSynchronousIo Lib "kernel32" (ByVal hThread As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetFileIoOverlappedRange Lib "kernel32" (ByVal FileHandle As LongPtr, OverlappedRangeStart As Any, ByVal Length As Long) As BOOL
Public Declare PtrSafe Function SetFileCompletionNotificationModes Lib "kernel32" (ByVal FileHandle As LongPtr, [TypeHint(FileCompletionModeFlags)] ByVal Flags As Byte) As BOOL

Public Declare PtrSafe Function GetFileAttributesA Lib "kernel32" (ByVal lpFileName As String) As FILE_ATTRIBUTES
Public Declare PtrSafe Function GetFileAttributesW Lib "kernel32" (ByVal lpFileName As LongPtr) As FILE_ATTRIBUTES
Public DeclareWide PtrSafe Function GetFileAttributes Lib "kernel32" Alias "GetFileAttributesW" (ByVal lpFileName As String) As FILE_ATTRIBUTES
Public Declare PtrSafe Function GetFileAttributesExA Lib "kernel32" (ByVal lpFileName As String, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any) As Long
Public Declare PtrSafe Function GetFileAttributesExW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any) As Long
Public DeclareWide PtrSafe Function GetFileAttributesEx Lib "kernel32" Alias "GetFileAttributesExW" (ByVal lpFileName As String, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any) As Long
Public Declare PtrSafe Function SetFileAttributesA Lib "kernel32" (ByVal lpFileName As String, ByVal dwFileAttributes As FILE_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function SetFileAttributesW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal dwFileAttributes As FILE_ATTRIBUTES) As BOOL
Public DeclareWide PtrSafe Function SetFileAttributes Lib "kernel32" Alias "SetFileAttributesW" (ByVal lpFileName As String, ByVal dwFileAttributes As FILE_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function GetFileAttributesTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function GetFileAttributesTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function GetFileAttributesTransacted Lib "kernel32" Alias "GetFileAttributesTransactedW" (ByVal lpFileName As String, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function SetFileAttributesTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal dwFileAttributes As FILE_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function SetFileAttributesTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal dwFileAttributes As FILE_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function SetFileAttributesTransacted Lib "kernel32" Alias "SetFileAttributesTransactedW" (ByVal lpFileName As String, ByVal dwFileAttributes As FILE_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function Wow64DisableWow64FsRedirection Lib "kernel32" (pOldVal As LongPtr) As BOOL
Public Declare PtrSafe Function Wow64RevertWow64FsRedirection Lib "kernel32" (ByVal pOldVal As LongPtr) As BOOL
[Description("This function has known bugs. Use Wow64DisableWow64FsRedirection/Wow64RevertWow64FsRedirection instead (do not combine with this API).")]
Public Declare PtrSafe Function Wow64EnableWow64FsRedirection Lib "kernel32" (ByVal Wow64FsEnableRedirection As Byte) As Byte
Public Declare PtrSafe Function CompareFileTime Lib "kernel32" (lpFileTime1 As FILETIME, lpFileTime2 As FILETIME) As Long
Public Declare PtrSafe Function MulDiv Lib "kernel32" (ByVal nNumber As Long, ByVal nNumerator As Long, ByVal nDenominator As Long) As Long
Public Declare PtrSafe Function SetFileBandwidthReservation Lib "kernel32" (ByVal hFile As LongPtr, ByVal nPeriodMilliseconds As Long, ByVal nBytesPerPeriod As Long, ByVal bDiscardable As BOOL, lpTransferSize As Long, lpNumOutstandingRequests As Long) As BOOL
Public Declare PtrSafe Function GetFileBandwidthReservation Lib "kernel32" (ByVal hFile As LongPtr, lpPeriodMilliseconds As Long, lpBytesPerPeriod As Long, pDiscardable As BOOL, lpTransferSize As Long, lpNumOutstandingRequests As Long) As BOOL


Public Declare PtrSafe Function QueryDosDeviceA Lib "kernel32" (ByVal lpDeviceName As String, ByVal lpTargetPath As String, ByVal ucchMax As Long) As Long
Public Declare PtrSafe Function QueryDosDeviceW Lib "kernel32" (ByVal lpDeviceName As LongPtr, ByVal lpTargetPath As LongPtr, ByVal ucchMax As Long) As Long
Public DeclareWide PtrSafe Function QueryDosDevice Lib "kernel32" Alias "QueryDosDeviceW" (ByVal lpDeviceName As String, ByVal lpTargetPath As String, ByVal ucchMax As Long) As Long
Public Declare PtrSafe Function DefineDosDeviceA Lib "kernel32" (ByVal dwFlags As DDD_Flags, ByVal lpDeviceName As String, Optional ByVal lpTargetPath As String) As BOOL
Public Declare PtrSafe Function DefineDosDeviceW Lib "kernel32" (ByVal dwFlags As DDD_Flags, ByVal lpDeviceName As LongPtr, Optional ByVal lpTargetPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DefineDosDevice Lib "kernel32" Alias "DefineDosDeviceW" (ByVal dwFlags As DDD_Flags, ByVal lpDeviceName As String, Optional ByVal lpTargetPath As String) As BOOL
Public DeclareWide PtrSafe Function FindFirstVolume Lib "kernel32" Alias "FindFirstVolumeW" (ByVal lpszVolumeName As String, ByVal cchBufferLen As Long) As LongPtr
Public Declare PtrSafe Function FindFirstVolumeA Lib "kernel32" (ByVal lpszVolumeName As String, ByVal cchBufferLen As Long) As LongPtr
Public Declare PtrSafe Function FindFirstVolumeW Lib "kernel32" (ByVal lpszVolumeName As LongPtr, ByVal cchBufferLen As Long) As LongPtr
Public DeclareWide PtrSafe Function FindNextVolume Lib "kernel32" Alias "FindNextVolumeW" (ByVal hFindVolume As LongPtr, ByVal lpszVolumeName As String, ByVal cchBufferLen As Long) As BOOL
Public Declare PtrSafe Function FindNextVolumeA Lib "kernel32" (ByVal hFindVolume As LongPtr, ByVal lpszVolumeName As String, ByVal cchBufferLen As Long) As BOOL
Public Declare PtrSafe Function FindNextVolumeW Lib "kernel32" (ByVal hFindVolume As LongPtr, ByVal lpszVolumeName As LongPtr, ByVal cchBufferLen As Long) As BOOL
Public Declare PtrSafe Function FindVolumeClose Lib "kernel32" (ByVal hFindVolume As LongPtr) As BOOL
Public Declare PtrSafe Function GetVolumePathNamesForVolumeNameA Lib "kernel32" (ByVal lpszVolumeName As String, ByVal lpszVolumePathNames As String, ByVal cchBufferLength As Long, lpcchReturnLength As Long) As BOOL
Public Declare PtrSafe Function GetVolumePathNamesForVolumeNameW Lib "kernel32" (ByVal lpszVolumeName As LongPtr, ByVal lpszVolumePathNames As LongPtr, ByVal cchBufferLength As Long, lpcchReturnLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumePathNamesForVolumeName Lib "kernel32" Alias "GetVolumePathNamesForVolumeNameW" (ByVal lpszVolumeName As String, ByVal lpszVolumePathNames As String, ByVal cchBufferLength As Long, lpcchReturnLength As Long) As BOOL
Public Declare PtrSafe Function SetVolumeLabelA Lib "kernel32" (ByVal lpRootPathName As String, ByVal lpVolumeName As String) As Long
Public Declare PtrSafe Function SetVolumeLabelW Lib "kernel32" (ByVal lpRootPathName As LongPtr, ByVal lpVolumeName As LongPtr) As Long
Public DeclareWide PtrSafe Function SetVolumeLabel Lib "kernel32" Alias "SetVolumeLabelW" (ByVal lpRootPathName As String, ByVal lpVolumeName As String) As Long
Public Declare PtrSafe Function CreateHardLinkA Lib "kernel32" (ByVal lpFileName As String, ByVal lpExistingFileName As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function CreateHardLinkW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal lpExistingFileName As LongPtr, lpSecurityAttributes As SECURITY_ATTRIBUTES) As BOOL
Public DeclareWide PtrSafe Function CreateHardLink Lib "kernel32" Alias "CreateHardLinkW" (ByVal lpFileName As String, ByVal lpExistingFileName As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function CreateHardLinkTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal lpExistingFileName As String, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function CreateHardLinkTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal lpExistingFileName As LongPtr, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function CreateHardLinkTransacted Lib "kernel32" Alias "CreateHardLinkTransactedW" (ByVal lpFileName As String, ByVal lpExistingFileName As String, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function CreateSymbolicLinkA Lib "kernel32" (ByVal lpSymlinkFileName As String, ByVal lpTargetFileName As String, ByVal dwFlags As CreateSymLinkFlags) As Byte 'boolean
Public Declare PtrSafe Function CreateSymbolicLinkW Lib "kernel32" (ByVal lpSymlinkFileName As LongPtr, ByVal lpTargetFileName As LongPtr, ByVal dwFlags As CreateSymLinkFlags) As Byte 'boolean
Public DeclareWide PtrSafe Function CreateSymbolicLink Lib "kernel32" Alias "CreateSymbolicLinkW" (ByVal lpSymlinkFileName As String, ByVal lpTargetFileName As String, ByVal dwFlags As CreateSymLinkFlags) As Byte 'boolean
Public Declare PtrSafe Function CreateSymbolicLinkTransactedA Lib "kernel32" (ByVal lpSymlinkFileName As String, ByVal lpTargetFileName As String, ByVal dwFlags As CreateSymLinkFlags, ByVal hTransaction As LongPtr) As Byte 'boolean
Public Declare PtrSafe Function CreateSymbolicLinkTransactedW Lib "kernel32" (ByVal lpSymlinkFileName As LongPtr, ByVal lpTargetFileName As LongPtr, ByVal dwFlags As CreateSymLinkFlags, ByVal hTransaction As LongPtr) As Byte 'boolean
Public DeclareWide PtrSafe Function CreateSymbolicLinkTransacted Lib "kernel32" Alias "CreateSymbolicLinkTransactedW" (ByVal lpSymlinkFileName As String, ByVal lpTargetFileName As String, ByVal dwFlags As CreateSymLinkFlags, ByVal hTransaction As LongPtr) As Byte 'boolean


Public Declare PtrSafe Function SetVolumeMountPointA Lib "kernel32" (ByVal lpszVolumeMountPoint As String, ByVal lpszVolumeName As String) As BOOL
Public Declare PtrSafe Function SetVolumeMountPointW Lib "kernel32" (ByVal lpszVolumeMountPoint As LongPtr, ByVal lpszVolumeName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetVolumeMountPoint Lib "kernel32" Alias "SetVolumeMountPointW" (ByVal lpszVolumeMountPoint As String, ByVal lpszVolumeName As String) As BOOL
Public Declare PtrSafe Function GetVolumeNameForVolumeMountPointA Lib "kernel32" (ByVal lpszVolumeMountPoint As String, ByVal lpszVolumePathNames As String, ByVal cchBufferLength As Long) As BOOL
Public Declare PtrSafe Function GetVolumeNameForVolumeMountPointW Lib "kernel32" (ByVal lpszVolumeMountPoint As LongPtr, ByVal lpszVolumePathNames As LongPtr, ByVal cchBufferLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumeNameForVolumeMountPoint Lib "kernel32" Alias "GetVolumeNameForVolumeMountPointW" (ByVal lpszVolumeMountPoint As String, ByVal lpszVolumePathNames As String, ByVal cchBufferLength As Long) As BOOL
Public Declare PtrSafe Function GetVolumePathNameA Lib "kernel32" (ByVal lpszFileName As LongPtr, ByVal lpszVolumePathName As LongPtr, ByVal cchBufferLength As Long) As BOOL
Public Declare PtrSafe Function GetVolumePathNameW Lib "kernel32" (ByVal lpszFileName As LongPtr, ByVal lpszVolumePathName As LongPtr, ByVal cchBufferLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumePathName Lib "kernel32" Alias "GetVolumePathNameW" (ByVal lpszFileName As LongPtr, ByVal lpszVolumePathName As LongPtr, ByVal cchBufferLength As Long) As BOOL
Public Declare PtrSafe Function GetVolumeInformationA Lib "kernel32" (ByVal lpRootPathName As String, ByVal lpVolumeNameBuffer As String, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As String, ByVal nFileSystemNameSize As Long) As BOOL
Public Declare PtrSafe Function GetVolumeInformationW Lib "kernel32" (ByVal lpRootPathName As LongPtr, ByVal lpVolumeNameBuffer As LongPtr, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As LongPtr, ByVal nFileSystemNameSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumeInformation Lib "kernel32" Alias "GetVolumeInformationW" (ByVal lpRootPathName As String, ByVal lpVolumeNameBuffer As String, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As String, ByVal nFileSystemNameSize As Long) As BOOL
'does not exist Public Declare PtrSafe Function GetVolumeInformationByHandleA Lib "kernel32" (ByVal hFile As LongPtr, ByVal lpVolumeNameBuffer As String, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As String, ByVal nFileSystemNameSize As Long) As BOOL
Public Declare PtrSafe Function GetVolumeInformationByHandleW Lib "kernel32" (ByVal hFile As LongPtr, ByVal lpVolumeNameBuffer As LongPtr, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As LongPtr, ByVal nFileSystemNameSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumeInformationByHandle Lib "kernel32" Alias "GetVolumeInformationByHandleW" (ByVal hFile As LongPtr, ByVal lpVolumeNameBuffer As String, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As String, ByVal nFileSystemNameSize As Long) As BOOL
Public Declare PtrSafe Function DeleteVolumeMountPointA Lib "kernel32" (ByVal lpszVolumeMountPoint As String) As BOOL
Public Declare PtrSafe Function DeleteVolumeMountPointW Lib "kernel32" (ByVal lpszVolumeMountPoint As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeleteVolumeMountPoint Lib "kernel32" Alias "DeleteVolumeMountPointW" (ByVal lpszVolumeMountPoint As String) As BOOL
Public Declare PtrSafe Function FindFirstVolumeMountPointA Lib "kernel32" (ByVal lpszRootPathName As String, ByVal lpszVolumeMountPoint As String, ByVal cchBufferLength As Long) As LongPtr
Public Declare PtrSafe Function FindFirstVolumeMountPointW Lib "kernel32" (ByVal lpszRootPathName As LongPtr, ByVal lpszVolumeMountPoint As LongPtr, ByVal cchBufferLength As Long) As LongPtr
Public DeclareWide PtrSafe Function FindFirstVolumeMountPoint Lib "kernel32" Alias "FindFirstVolumeMountPointW" (ByVal lpszRootPathName As String, ByVal lpszVolumeMountPoint As String, ByVal cchBufferLength As Long) As LongPtr
Public Declare PtrSafe Function FindNextVolumeMountPointA Lib "kernel32" (ByVal hFindVolumeMountPoint As LongPtr, ByVal lpszVolumeMountPoint As String, ByVal cchBufferLength As Long) As BOOL
Public Declare PtrSafe Function FindNextVolumeMountPointW Lib "kernel32" (ByVal hFindVolumeMountPoint As LongPtr, ByVal lpszVolumeMountPoint As LongPtr, ByVal cchBufferLength As Long) As BOOL
Public DeclareWide PtrSafe Function FindNextVolumeMountPoint Lib "kernel32" Alias "FindNextVolumeMountPointW" (ByVal hFindVolumeMountPoint As LongPtr, ByVal lpszVolumeMountPoint As String, ByVal cchBufferLength As Long) As BOOL
Public Declare PtrSafe Function FindVolumeMountPointClose Lib "kernel32" (ByVal hFindVolumeMountPoint As LongPtr) As BOOL

Public Declare PtrSafe Function AreFileApisANSI Lib "kernel32" () As BOOL
Public Declare PtrSafe Sub SetFileApisToOEM Lib "kernel32" ()
Public Declare PtrSafe Sub SetFileApisToANSI Lib "kernel32" ()
Public Declare PtrSafe Function CheckNameLegalDOS8Dot3A Lib "kernel32" (ByVal lpName As String, ByVal lpOemName As String, ByVal OemNameSize As Long, Optional pbNameContainsSpaces As BOOL, Optional pbNameLegal As BOOL) As BOOL
Public Declare PtrSafe Function CheckNameLegalDOS8Dot3W Lib "kernel32" (ByVal lpName As LongPtr, ByVal lpOemName As LongPtr, ByVal OemNameSize As Long, Optional pbNameContainsSpaces As BOOL, Optional pbNameLegal As BOOL) As BOOL
Public DeclareWide PtrSafe Function CheckNameLegalDOS8Dot3 Lib "kernel32" Alias "CheckNameLegalDOS8Dot3W" (ByVal lpName As String, ByVal lpOemName As String, ByVal OemNameSize As Long, Optional pbNameContainsSpaces As BOOL, Optional pbNameLegal As BOOL) As BOOL


Public Enum PROCESS_INFORMATION_CLASS
    ProcessMemoryPriority          '// MEMORY_PRIORITY_INFORMATION
    ProcessMemoryExhaustionInfo    '// PROCESS_MEMORY_EXHAUSTION_INFO
    ProcessAppMemoryInfo           '// APP_MEMORY_INFORMATION
    ProcessInPrivateInfo           '// BOOLEAN
    ProcessPowerThrottling         '// PROCESS_POWER_THROTTLING_STATE
    ProcessReservedValue1          '// Used to be for ProcessActivityThrottlePolicyInfo
    ProcessTelemetryCoverageInfo   '// TELEMETRY_COVERAGE_POINT
    ProcessProtectionLevelInfo     '// PROCESS_PROTECTION_LEVEL_INFORMATION
    ProcessLeapSecondInfo          '// PROCESS_LEAP_SECOND_INFO
    ProcessMachineTypeInfo         '// PROCESS_MACHINE_INFORMATION
    ProcessInformationClassMax
End Enum

Public Enum MEMORY_PRIORITY_VALUES
    MEMORY_PRIORITY_LOWEST = 0
    MEMORY_PRIORITY_VERY_LOW = 1
    MEMORY_PRIORITY_LOW = 2
    MEMORY_PRIORITY_MEDIUM = 3
    MEMORY_PRIORITY_BELOW_NORMAL = 4
    MEMORY_PRIORITY_NORMAL = 5
End Enum
Public Type MEMORY_PRIORITY_INFORMATION
    MemoryPriority As MEMORY_PRIORITY_VALUES
End Type

Public Const PME_CURRENT_VERSION = 1
Public Enum PROCESS_MEMORY_EXHAUSTION_TYPE
    PMETypeFailFastOnCommitFailure
    PMETypeMax = 1
End Enum
Public Enum PME_FAILFAST_VALUES
    PME_FAILFAST_ON_COMMIT_FAIL_DISABLE = &H0
    PME_FAILFAST_ON_COMMIT_FAIL_ENABLE = &H1
End Enum
Public Type PROCESS_MEMORY_EXHAUSTION_INFO
    Version As Integer
    Reserved As Integer
    Type As PROCESS_MEMORY_EXHAUSTION_TYPE
    /* [ TypeHint(PME_FAILFAST_VALUES) ] */ Value As LongPtr
End Type

Public Enum POWER_THROTTLING_VERSION
    PROCESS_POWER_THROTTLING_CURRENT_VERSION = 1
End Enum
Public Enum POWER_THROTTLING_FLAGS
    PROCESS_POWER_THROTTLING_EXECUTION_SPEED = &H1
    PROCESS_POWER_THROTTLING_IGNORE_TIMER_RESOLUTION = &H4
    PROCESS_POWER_THROTTLING_VALID_FLAGS = ((PROCESS_POWER_THROTTLING_EXECUTION_SPEED Or PROCESS_POWER_THROTTLING_IGNORE_TIMER_RESOLUTION))
End Enum
Public Type PROCESS_POWER_THROTTLING_STATE
    Version As POWER_THROTTLING_VERSION
    ControlMask As POWER_THROTTLING_FLAGS
    StateMask As POWER_THROTTLING_FLAGS
End Type

Public Enum PROCESS_PROTECTION_LEVEL
    PROTECTION_LEVEL_WINTCB_LIGHT = &H00000000
    PROTECTION_LEVEL_WINDOWS = &H00000001
    PROTECTION_LEVEL_WINDOWS_LIGHT = &H00000002
    PROTECTION_LEVEL_ANTIMALWARE_LIGHT = &H00000003
    PROTECTION_LEVEL_LSA_LIGHT = &H00000004
'  The following protection levels are supplied for testing only (no win32
'  callers need these).
    PROTECTION_LEVEL_WINTCB = &H00000005
    PROTECTION_LEVEL_CODEGEN_LIGHT = &H00000006
    PROTECTION_LEVEL_AUTHENTICODE = &H00000007
    PROTECTION_LEVEL_PPL_APP = &H00000008
    PROTECTION_LEVEL_SAME = &HFFFFFFFF
'  The following is only used as a value for ProtectionLevel
'  when querying ProcessProtectionLevelInfo in GetProcessInformation.
    PROTECTION_LEVEL_NONE = &HFFFFFFFE
End Enum
Public Type PROCESS_PROTECTION_LEVEL_INFORMATION
    ProtectionLevel As PROCESS_PROTECTION_LEVEL
End Type

Public Enum PROCESS_LEAP_SECOND_FLAGS
    PROCESS_LEAP_SECOND_INFO_FLAG_ENABLE_SIXTY_SECOND = &H1
End Enum
Public Type PROCESS_LEAP_SECOND_INFO
    Flags As PROCESS_LEAP_SECOND_FLAGS
    Reserved As Long
End Type

Public Type APP_MEMORY_INFORMATION
    AvailableCommit As LongLong
    PrivateCommitUsage As LongLong
    PeakPrivateCommitUsage As LongLong
    TotalCommitUsage As LongLong
End Type

Public Enum MACHINE_ATTRIBUTES
    UserEnabled = &H00000001
    KernelEnabled = &H00000002
    Wow64Container = &H00000004
End Enum
Public Type PROCESS_MACHINE_INFORMATION
    /* [ TypeHint(ImageMachineType) ] */ ProcessMachine As Integer
    Res0 As Integer
    MachineAttributes As MACHINE_ATTRIBUTES
End Type

Public Enum THREAD_INFORMATION_CLASS
    ThreadMemoryPriority
    ThreadAbsoluteCpuPriority
    ThreadDynamicCodePolicy
    ThreadPowerThrottling
    ThreadInformationClassMax
End Enum

Public Enum THREAD_POWER_THROTTLING_VERSIONS
    THREAD_POWER_THROTTLING_CURRENT_VERSION = 1
End Enum
Public Enum THREAD_POWER_THROTTLING_FLAGS
    THREAD_POWER_THROTTLING_EXECUTION_SPEED = &H1
End Enum
Public Type THREAD_POWER_THROTTLING_STATE
    Version As THREAD_POWER_THROTTLING_VERSIONS
    ControlMask As THREAD_POWER_THROTTLING_FLAGS
    StateMask As THREAD_POWER_THROTTLING_FLAGS
End Type

Public Enum PROCESSOR_FEATURES
    PF_FLOATING_POINT_PRECISION_ERRATA = 0
    PF_FLOATING_POINT_EMULATED = 1
    PF_COMPARE_EXCHANGE_DOUBLE = 2
    PF_MMX_INSTRUCTIONS_AVAILABLE = 3
    PF_PPC_MOVEMEM_64BIT_OK = 4
    PF_ALPHA_BYTE_INSTRUCTIONS = 5
    PF_XMMI_INSTRUCTIONS_AVAILABLE = 6
    PF_3DNOW_INSTRUCTIONS_AVAILABLE = 7
    PF_RDTSC_INSTRUCTION_AVAILABLE = 8
    PF_PAE_ENABLED = 9
    PF_XMMI64_INSTRUCTIONS_AVAILABLE = 10
    PF_SSE_DAZ_MODE_AVAILABLE = 11
    PF_NX_ENABLED = 12
    PF_SSE3_INSTRUCTIONS_AVAILABLE = 13
    PF_COMPARE_EXCHANGE128 = 14
    PF_COMPARE64_EXCHANGE128 = 15
    PF_CHANNELS_ENABLED = 16
    PF_XSAVE_ENABLED = 17
    PF_ARM_VFP_32_REGISTERS_AVAILABLE = 18
    PF_ARM_NEON_INSTRUCTIONS_AVAILABLE = 19
    PF_SECOND_LEVEL_ADDRESS_TRANSLATION = 20
    PF_VIRT_FIRMWARE_ENABLED = 21
    PF_RDWRFSGSBASE_AVAILABLE = 22
    PF_FASTFAIL_AVAILABLE = 23
    PF_ARM_DIVIDE_INSTRUCTION_AVAILABLE = 24
    PF_ARM_64BIT_LOADSTORE_ATOMIC = 25
    PF_ARM_EXTERNAL_CACHE_AVAILABLE = 26
    PF_ARM_FMAC_INSTRUCTIONS_AVAILABLE = 27
    PF_RDRAND_INSTRUCTION_AVAILABLE = 28
    PF_ARM_V8_INSTRUCTIONS_AVAILABLE = 29
    PF_ARM_V8_CRYPTO_INSTRUCTIONS_AVAILABLE = 30
    PF_ARM_V8_CRC32_INSTRUCTIONS_AVAILABLE = 31
    PF_RDTSCP_INSTRUCTION_AVAILABLE = 32
    PF_RDPID_INSTRUCTION_AVAILABLE = 33
    PF_ARM_V81_ATOMIC_INSTRUCTIONS_AVAILABLE = 34
    PF_MONITORX_INSTRUCTION_AVAILABLE = 35
    PF_SSSE3_INSTRUCTIONS_AVAILABLE = 36
    PF_SSE4_1_INSTRUCTIONS_AVAILABLE = 37
    PF_SSE4_2_INSTRUCTIONS_AVAILABLE = 38
    PF_AVX_INSTRUCTIONS_AVAILABLE = 39
    PF_AVX2_INSTRUCTIONS_AVAILABLE = 40
    PF_AVX512F_INSTRUCTIONS_AVAILABLE = 41
    PF_ERMS_AVAILABLE = 42
    PF_ARM_V82_DP_INSTRUCTIONS_AVAILABLE = 43
    PF_ARM_V83_JSCVT_INSTRUCTIONS_AVAILABLE = 44
    PF_ARM_V83_LRCPC_INSTRUCTIONS_AVAILABLE = 45
End Enum

Public Enum SCS_BINARY_TYPES
    SCS_32BIT_BINARY = 0
    SCS_DOS_BINARY = 1
    SCS_WOW_BINARY = 2
    SCS_PIF_BINARY = 3
    SCS_POSIX_BINARY = 4
    SCS_OS216_BINARY = 5
    SCS_64BIT_BINARY = 6
#If Win64 Then
    SCS_THIS_PLATFORM_BINARY = SCS_64BIT_BINARY
#Else
    SCS_THIS_PLATFORM_BINARY = SCS_32BIT_BINARY
#End If
End Enum

Public Type IO_COUNTERS
    ReadOperationCount As LongLong
    WriteOperationCount As LongLong
    OtherOperationCount As LongLong
    ReadTransferCount As LongLong
    WriteTransferCount As LongLong
    OtherTransferCount As LongLong
End Type

Public Enum PROCESS_SHUTDOWN_FLAGS
    SHUTDOWN_NORETRY = 1
End Enum

Public Declare PtrSafe Function CreateProcessA Lib "kernel32" (ByVal lpApplicationName As String, ByVal lpCommandLine As String, lpProccessAttributes As SECURITY_ATTRIBUTES, lpThreadAttributes As SECURITY_ATTRIBUTES, ByVal bInheritHandles As BOOL, _
                                                                ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFOA, lpProcessInformation As PROCESS_INFORMATION) As BOOL
Public DeclareWide PtrSafe Function CreateProcessW Lib "kernel32" (ByVal lpApplicationName As LongPtr, ByVal lpCommandLine As LongPtr, lpProccessAttributes As SECURITY_ATTRIBUTES, lpThreadAttributes As SECURITY_ATTRIBUTES, _
                                                                    ByVal bInheritHandles As BOOL, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, ByVal lpCurrentDirectory As LongPtr, lpStartupInfo As STARTUPINFOW, lpProcessInformation As PROCESS_INFORMATION) As BOOL
Public DeclareWide PtrSafe Function CreateProcess Lib "kernel32" Alias "CreateProcessW" (ByVal lpApplicationName As String, ByVal lpCommandLine As String, lpProccessAttributes As SECURITY_ATTRIBUTES, lpThreadAttributes As SECURITY_ATTRIBUTES, _
                                                                    ByVal bInheritHandles As BOOL, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFO, lpProcessInformation As PROCESS_INFORMATION) As BOOL
Public Declare PtrSafe Function CreateProcessAsUserA Lib "kernel32" (ByVal hToken As LongPtr, ByVal lpApplicationName As String, ByVal lpCommandLine As String, lpProccessAttributes As SECURITY_ATTRIBUTES, lpThreadAttributes As SECURITY_ATTRIBUTES, ByVal bInheritHandles As BOOL, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, _
    ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFOA, lpProcessInformation As PROCESS_INFORMATION) As BOOL
Public DeclareWide PtrSafe Function CreateProcessAsUserW Lib "kernel32" (ByVal hToken As LongPtr, ByVal lpApplicationName As LongPtr, ByVal lpCommandLine As LongPtr, lpProccessAttributes As SECURITY_ATTRIBUTES, lpThreadAttributes As SECURITY_ATTRIBUTES, ByVal bInheritHandles As BOOL, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, _
    ByVal lpCurrentDirectory As LongPtr, lpStartupInfo As STARTUPINFOW, lpProcessInformation As PROCESS_INFORMATION) As BOOL
Public DeclareWide PtrSafe Function CreateProcessAsUser Lib "kernel32" Alias "CreateProcessAsUserW" (ByVal hToken As LongPtr, ByVal lpApplicationName As String, ByVal lpCommandLine As String, lpProccessAttributes As SECURITY_ATTRIBUTES, lpThreadAttributes As SECURITY_ATTRIBUTES, ByVal bInheritHandles As BOOL, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, _
    ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFO, lpProcessInformation As PROCESS_INFORMATION) As BOOL
Public Declare PtrSafe Sub ExitProcess Lib "kernel32" (ByVal uExitCode As Long)
Public Declare PtrSafe Sub ExitThread Lib "kernel32" (ByVal dwExitCode As Long)
Public Declare PtrSafe Function GetExitCodeProcess Lib "kernel32" (ByVal hProcess As LongPtr, lpExitCode As Long) As BOOL
Public Declare PtrSafe Function GetExitCodeThread Lib "kernel32" (ByVal hThread As LongPtr, lpExitCode As Long) As BOOL
Public Declare PtrSafe Function GetProcessShutdownParameters Lib "kernel32" (lpdwLevel As Long, lpdwFlags As PROCESS_SHUTDOWN_FLAGS) As BOOL
Public Declare PtrSafe Function SetProcessShutdownParameters Lib "kernel32" (ByVal dwLevel As Long, ByVal dwFlags As PROCESS_SHUTDOWN_FLAGS) As BOOL
Public Declare PtrSafe Function GetCurrentProcessorNumber Lib "kernel32" () As Long
Public Declare PtrSafe Sub GetCurrentProcessorNumberEx Lib "kernel32" (ProcNumber As PROCESSOR_NUMBER)
Public Declare PtrSafe Function SetThreadIdealProcessor Lib "kernel32" (ByVal hThread As LongPtr, ByVal dwIdealProcessor As Long) As Long
Public Declare PtrSafe Function SetThreadIdealProcessorEx Lib "kernel32" (ByVal hThread As LongPtr, lpIdealProcessor As PROCESSOR_NUMBER, lpPreviousIdealProcessor As PROCESSOR_NUMBER) As BOOL
Public Declare PtrSafe Function GetThreadIdealProcessorEx Lib "kernel32" (ByVal hThread As LongPtr, lpIdealProcessor As PROCESSOR_NUMBER) As BOOL
Public Declare PtrSafe Function SwitchToThread Lib "kernel32" () As BOOL
Public Declare PtrSafe Function SetThreadPriority Lib "kernel32" (ByVal hThread As LongPtr, ByVal nPriority As ThreadPriorityClasses) As BOOL
Public Declare PtrSafe Function GetThreadPriority Lib "kernel32" (ByVal hThread As LongPtr) As ThreadPriorityClasses
Public Declare PtrSafe Function SetThreadPriorityBoost Lib "kernel32" (ByVal hThread As LongPtr, ByVal bDisablePriorityBoost As BOOL) As BOOL
Public Declare PtrSafe Function GetThreadPriorityBoost Lib "kernel32" (ByVal hThread As LongPtr, pbDisablePriorityBoost As BOOL) As BOOL
Public Declare PtrSafe Function SetPriorityClass Lib "kernel32" (ByVal hProcess As LongPtr, ByVal dwPriority As PriorityClass) As BOOL
Public Declare PtrSafe Function GetPriorityClass Lib "kernel32" (ByVal hProcess As LongPtr) As PriorityClass
Public Declare PtrSafe Function SetProcessPriorityBoost Lib "kernel32" (ByVal hProcess As LongPtr, ByVal bDisablePriorityBoost As BOOL) As BOOL
Public Declare PtrSafe Function GetProcessPriorityBoost Lib "kernel32" (ByVal hProcess As LongPtr, pbDisablePriorityBoost As BOOL) As BOOL
Public Declare PtrSafe Function GetCommandLineA Lib "kernel32" () As String
Public Declare PtrSafe Function GetCommandLineW Lib "kernel32" () As LongPtr
Public DeclareWide PtrSafe Function GetCommandLine Lib "kernel32" Alias "GetCommandLineW" () As String
Public Declare PtrSafe Function GetProcessIdOfThread Lib "kernel32" (ByVal Thread As LongPtr) As Long
Public Declare PtrSafe Function GetProcessVersion Lib "kernel32" (ByVal ProcessId As Long) As Long
[Description("Determines if the current process is a 32bit executable running on a 64bit OS")]
Public Declare PtrSafe Function IsWow64Process Lib "kernel32" (ByVal hProcess As LongPtr, Wow64Process As BOOL) As BOOL
Public Declare PtrSafe Function IsWow64Process2 Lib "kernel32" (ByVal hProcess As LongPtr, [TypeHint(ImageMachineType)] pProcessMachine As Integer, [TypeHint(ImageMachineType)] Optional ByRef pNativeMachine As Integer) As BOOL
Public Declare PtrSafe Function GetSystemWow64DirectoryA Lib "kernel32" (ByVal lpBuffer As String, ByVal uSize As Long) As Long
Public Declare PtrSafe Function GetSystemWow64DirectoryW Lib "kernel32" (ByVal lpBuffer As LongPtr, ByVal uSize As Long) As Long
Public DeclareWide PtrSafe Function GetSystemWow64Directory Lib "kernel32" Alias "GetSystemWow64DirectoryW" (ByVal lpBuffer As String, ByVal uSize As Long) As Long
Public Declare PtrSafe Function GetSystemWow64Directory2A Lib "kernelbase" (ByVal lpBuffer As String, ByVal uSize As Long, [TypeHint(ImageMachineType)] ByVal ImageFileMachineType As Integer) As Long
Public Declare PtrSafe Function GetSystemWow64Directory2W Lib "kernelbase" (ByVal lpBuffer As LongPtr, ByVal uSize As Long, [TypeHint(ImageMachineType)] ByVal ImageFileMachineType As Integer) As Long
Public DeclareWide PtrSafe Function GetSystemWow64Directory2 Lib "kernelbase" Alias "GetSystemWow64Directory2W" (ByVal lpBuffer As String, ByVal uSize As Long, [TypeHint(ImageMachineType)] ByVal ImageFileMachineType As Integer) As Long
Public Declare PtrSafe Function IsWow64GuestMachineSupported Lib "kernel32" ([TypeHint(ImageMachineType)] ByVal WowGuestMachine As Integer, MachineIsSupported As BOOL) As Long

Public Delegate Function THREAD_START_ROUTINE (ByVal lpParameter As LongPtr) As Long
' #If WINDEVLIB_NO_DELEGATES Then
Public Declare PtrSafe Function CreateThread Lib "kernel32" (ByRef lpThreadAttributes As Any, ByVal dwStackSize As LongPtr, ByVal lpStartAddress As LongPtr, ByRef lpParameter As Any, ByVal dwCreationFlags As Long, ByRef lpThreadId As Long) As LongPtr
Public Declare PtrSafe Function CreateRemoteThread Lib "kernel32" (ByVal hProcess As LongPtr, ByRef lpThreadAttributes As Any, ByVal dwStackSize As LongPtr, ByVal lpStartAddress As LongPtr, ByRef lpParameter As Any, ByVal dwCreationFlags As Long, ByRef lpThreadId As Long) As LongPtr
Public Declare PtrSafe Function CreateRemoteThreadEx Lib "kernel32" (ByVal hProcess As LongPtr, ByRef lpThreadAttributes As Any, ByVal dwStackSize As LongPtr, ByVal lpStartAddress As LongPtr, ByRef lpParameter As Any, ByVal dwCreationFlags As Long, ByVal lpThreadAttributesList As LongPtr, ByRef lpThreadId As Long) As LongPtr
' #Else
' Public Declare PtrSafe Function CreateThread Lib "kernel32" (ByRef lpThreadAttributes As Any, ByVal dwStackSize As LongPtr, ByVal lpStartAddress As THREAD_START_ROUTINE, ByRef lpParameter As Any, ByVal dwCreationFlags As Long, ByRef lpThreadId As Long) As LongPtr
' Public Declare PtrSafe Function CreateRemoteThread Lib "kernel32" (ByVal hProcess As LongPtr, ByRef lpThreadAttributes As Any, ByVal dwStackSize As LongPtr, ByVal lpStartAddress As THREAD_START_ROUTINE, ByRef lpParameter As Any, ByVal dwCreationFlags As Long, ByRef lpThreadId As Long) As LongPtr
' Public Declare PtrSafe Function CreateRemoteThreadEx Lib "kernel32" (ByVal hProcess As LongPtr, ByRef lpThreadAttributes As Any, ByVal dwStackSize As LongPtr, ByVal lpStartAddress As THREAD_START_ROUTINE, ByRef lpParameter As Any, ByVal dwCreationFlags As Long, ByVal lpThreadAttributesList As LongPtr, ByRef lpThreadId As Long) As LongPtr
' #End If
Public Declare PtrSafe Function ResumeThread Lib "kernel32" (ByVal hThread As LongPtr) As Long
Public Declare PtrSafe Function SuspendThread Lib "kernel32" (ByVal hThread As LongPtr) As Long
Public Declare PtrSafe Function Wow64SuspendThread Lib "kernel32" (ByVal hThread As LongPtr) As Long
Public Declare PtrSafe Function TerminateThread Lib "kernel32" (ByVal hThread As LongPtr, ByVal dwExitCode As Long) As Long
Public Declare PtrSafe Function TerminateProcess Lib "kernel32" (ByVal hProcess As LongPtr, ByVal dwExitCode As Long) As Long
Public Declare PtrSafe Function OpenThread Lib "kernel32" (ByVal dwDesiredAccess As ThreadAccessRights, ByVal bInheritHandle As BOOL, ByVal dwThreadId As Long) As LongPtr
Public Declare PtrSafe Function OpenProcess Lib "kernel32" (ByVal dwDesiredAccess As ProcessAccessRights, ByVal bInheritHandle As BOOL, ByVal dwProcessId As Long) As LongPtr
Public Declare PtrSafe Function GetProcessHandleCount Lib "kernel32" (ByVal hProcess As LongPtr, pdwHandleCount As Long) As BOOL
Public Declare PtrSafe Function GetProcessInformation Lib "kernel32" (ByVal hProcess As LongPtr, ByVal ProcessInformationClass As PROCESS_INFORMATION_CLASS, ProcessInformation As Any, ByVal ProcessInformationSize As Long) As BOOL
Public Declare PtrSafe Function SetProcessInformation Lib "kernel32" (ByVal hProcess As LongPtr, ByVal ProcessInformationClass As PROCESS_INFORMATION_CLASS, ProcessInformation As Any, ByVal ProcessInformationSize As Long) As BOOL
Public Declare PtrSafe Function GetThreadInformation Lib "kernel32" (ByVal hThread As LongPtr, ByVal ThreadInformationClass As THREAD_INFORMATION_CLASS, ThreadInformation As Any, ByVal ThreadInformationSize As Long) As BOOL
Public Declare PtrSafe Function SetThreadInformation Lib "kernel32" (ByVal hThread As LongPtr, ByVal ThreadInformationClass As THREAD_INFORMATION_CLASS, ThreadInformation As Any, ByVal ThreadInformationSize As Long) As BOOL
Public Declare PtrSafe Function InitializeProcThreadAttributeList Lib "kernel32" (ByVal lpAttributeList As LongPtr, ByVal dwAttributeCount As Long, ByVal dwFlags As Long, lpSize As LongPtr) As BOOL
Public Declare PtrSafe Function UpdateProcThreadAttribute Lib "kernel32" (ByVal lpAttributeList As LongPtr, ByVal dwFlags As Long, [TypeHint(PROC_THREAD_ATTRIBUTES)] ByVal Attribute As LongPtr, lpValue As Any, ByVal cbSize As LongPtr, lpPreviousValue As Any, lpReturnSize As LongPtr) As BOOL
Public Declare PtrSafe Sub DeleteProcThreadAttributeList Lib "kernel32" (ByVal lpAttributeList As LongPtr)
Public Declare PtrSafe Sub GetCurrentThreadStackLimits Lib "kernel32" (LowLimit As LongPtr, HighLimit As LongPtr)
Public Declare PtrSafe Function SetProcessDEPPolicy Lib "kernel32" (ByVal dwFlags As ProcessDEPFlags) As BOOL
Public Declare PtrSafe Function GetProcessDEPPolicy Lib "kernel32" (ByVal hProcess As LongPtr, pdwFlags As ProcessDEPFlags, lpPermanent As BOOL) As BOOL
Public Declare PtrSafe Function GetProcessMitigationPolicy Lib "kernel32" (ByVal hProcess As LongPtr, ByVal MitigationPolicy As PROCESS_MITIGATION_POLICY, lpBuffer As Any, ByVal dwLength As LongPtr) As BOOL
Public Declare PtrSafe Function SetProcessMitigationPolicy Lib "kernel32" (ByVal MitigationPolicy As PROCESS_MITIGATION_POLICY, lpBuffer As Any, ByVal dwLength As LongPtr) As BOOL
Public Declare PtrSafe Function GetThreadIOPendingFlag Lib "kernel32" (ByVal hThread As LongPtr, lpIOIsPending As BOOL) As BOOL
Public Declare PtrSafe Function IsProcessorFeaturePresent Lib "kernel32" (ByVal ProcessorFeature As PROCESSOR_FEATURES) As BOOL
Public Declare PtrSafe Function GetThreadTimes Lib "kernel32" (ByVal hThread As LongPtr, lpCreationTime As FILETIME, lpExitTime As FILETIME, lpKernelTime As FILETIME, lpUserTime As FILETIME) As BOOL
Public Declare PtrSafe Function GetBinaryTypeA Lib "kernel32" (ByVal lpApplicationName As String, lpBinaryType As SCS_BINARY_TYPES) As BOOL
Public Declare PtrSafe Function GetBinaryTypeW Lib "kernel32" (ByVal lpApplicationName As LongPtr, lpBinaryType As SCS_BINARY_TYPES) As BOOL
Public DeclareWide PtrSafe Function GetBinaryType Lib "kernel32" Alias "GetBinaryTypeW" (ByVal lpApplicationName As String, lpBinaryType As SCS_BINARY_TYPES) As BOOL
Public Declare PtrSafe Function GetProcessIoCounters Lib "kernel32" (ByVal hProcess As LongPtr, lpIoCounters As IO_COUNTERS) As BOOL
Public Declare PtrSafe Function SetThreadStackGuarantee Lib "kernel32" (StackSizeInBytes As Long) As BOOL
Public Declare PtrSafe Function ProcessIdToSessionId Lib "kernel32" (ByVal dwProcessId As Long, pSessionId As Long) As BOOL
Public Declare PtrSafe Function GetProcessId Lib "kernel32" (ByVal Process As LongPtr) As Long
Public Declare PtrSafe Function GetThreadId Lib "kernel32" (ByVal Thread As LongPtr) As Long
Public Declare PtrSafe Sub FlushProcessWriteBuffers Lib "kernel32" ()
Public Declare PtrSafe Function SetProcessDynamicEHContinuationTargets Lib "kernel32" (ByVal Process As LongPtr, ByVal NumberOfTargets As Integer, Targets As PROCESS_DYNAMIC_EH_CONTINUATION_TARGET) As BOOL
Public Declare PtrSafe Function SetProcessDynamicEnforcedCetCompatibleRanges Lib "kernel32" (ByVal Process As LongPtr, ByVal NumberOfRanges As Integer, Ranges As PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE) As BOOL
Public Declare PtrSafe Function SetProcessAffinityUpdateMode Lib "kernel32" (ByVal hProcess As LongPtr, ByVal dwFlags As ProcessAffinityUpdateFlags) As BOOL
Public Declare PtrSafe Function QueryProcessAffinityUpdateMode Lib "kernel32" (ByVal hProcess As LongPtr, Optional lpdwFlags As ProcessAffinityUpdateFlags) As BOOL
Public Declare PtrSafe Function GetSystemTimes Lib "kernel32" (lpIdleTime As FILETIME, lpKernelTime As FILETIME, lpUserTime As FILETIME) As BOOL
Public Declare PtrSafe Function SetProtectedPolicy Lib "kernel32" (PolicyGuid As UUID, ByVal PolicyValue As LongPtr, Optional OldPolicyValue As LongPtr) As BOOL
Public Declare PtrSafe Function QueryProtectedPolicy Lib "kernel32" (PolicyGuid As UUID, PolicyValue As LongPtr) As BOOL
Public DeclareWide PtrSafe Sub RaiseFailFastException Lib "kernel32" (pExceptionRecord As EXCEPTION_RECORD, pContextRecord As Any, ByVal dwFlags As FailFastExceptionFlags)
[Description("**DEPRECATED** Only for 16bit compatibility. Use CreateProcess or ShellExecute.")]
Public Declare PtrSafe Function WinExec Lib "kernel32" (ByVal lpCmdLine As String, ByVal uCmdShow As SHOWWINDOW) As Long
Public Declare PtrSafe Function AddSecureMemoryCacheCallback Lib "kernel32" (ByVal pfnCallBack As LongPtr) As BOOL
Public Declare PtrSafe Function RemoveSecureMemoryCacheCallback Lib "kernel32" (ByVal pfnCallBack As LongPtr) As BOOL

Public Const RTL_UMS_VERSION = &H100
Public Const UMS_VERSION= RTL_UMS_VERSION
Public Enum RTL_UMS_THREAD_INFO_CLASS
    UmsThreadInvalidInfoClass = 0
    UmsThreadUserContext
    UmsThreadPriority   ' Reserved
    UmsThreadAffinity   ' Reserved
    UmsThreadTeb
    UmsThreadIsSuspended
    UmsThreadIsTerminated
    UmsThreadMaxInfoClass
End Enum
'Alias UMS_THREAD_INFO_CLASS As RTL_UMS_THREAD_INFO_CLASS
[Description("Alias stub. Use RTL_UMS_THREAD_INFO_CLASS")]
Public Enum UMS_THREAD_INFO_CLASS
    [_]
End Enum
Public Enum RTL_UMS_SCHEDULER_REASON
    UmsSchedulerStartup = 0
    UmsSchedulerThreadBlocked
    UmsSchedulerThreadYield
End Enum
'Alias UMS_SCHEDULER_REASON As RTL_UMS_SCHEDULER_REASON
[Description("Alias stub. Use RTL_UMS_SCHEDULER_REASON")]
Public Enum UMS_SCHEDULER_REASON
    [_]
End Enum
Public Delegate Sub RTL_UMS_SCHEDULER_ENTRY_POINT (ByVal Reason As RTL_UMS_SCHEDULER_REASON, ByVal ActivationPayload As LongPtr, ByVal SchedulerParam As LongPtr)
Public Delegate Sub UMS_SCHEDULER_ENTRY_POINT (ByVal Reason As RTL_UMS_SCHEDULER_REASON, ByVal ActivationPayload As LongPtr, ByVal SchedulerParam As LongPtr)
Public Type UMS_SCHEDULER_STARTUP_INFO
    ' UMS Version the application was built to. Should be set to UMS_VERSION
    UmsVersion As Long
    ' Completion List to associate the new User Scheduler to.
    CompletionList As LongPtr 'PUMS_COMPLETION_LIST
    ' A pointer to the application-defined function that represents the starting
    ' address of the Sheduler.
    ' #If WINDEVLIB_NO_DELEGATES Then
    SchedulerProc As LongPtr 'PUMS_SCHEDULER_ENTRY_POINT
    ' #Else
    ' SchedulerProc As UMS_SCHEDULER_ENTRY_POINT
    ' #End If
    ' pointer to a variable to be passed to the scheduler uppon first activation.
    SchedulerParam As LongPtr
End Type

Public Type UMS_SYSTEM_THREAD_INFORMATION
    UmsVersion As Long
    ' union {
        ' struct {
            ' ULONG IsUmsSchedulerThread : 1;
            ' ULONG IsUmsWorkerThread : 1;
        ' } DUMMYSTRUCTNAME;
        ' ULONG ThreadUmsFlags;
    ' } DUMMYUNIONNAME;
    ThreadUmsFlags As Long
End Type

#If Win64 = 0 Then
[Unimplemented, Description("This API is only available on 64bit Windows from 64bit callers.")]
#End If
Public Declare PtrSafe Function CreateUmsCompletionList Lib "kernel32" (UmsCompletionList As LongPtr) As BOOL
#If Win64 = 0 Then
[Unimplemented, Description("This API is only available on 64bit Windows from 64bit callers.")]
#End If
Public Declare PtrSafe Function DequeueUmsCompletionListItems Lib "kernel32" (ByVal UmsCompletionList As LongPtr, ByVal WaitTimeOut As Long, UmsThreadList As LongPtr) As BOOL
#If Win64 = 0 Then
[Unimplemented, Description("This API is only available on 64bit Windows from 64bit callers.")]
#End If
Public Declare PtrSafe Function GetUmsCompletionListEvent Lib "kernel32" (ByVal UmsCompletionList As LongPtr, UmsCompletionEvent As LongPtr) As BOOL
#If Win64 = 0 Then
[Unimplemented, Description("This API is only available on 64bit Windows from 64bit callers.")]
#End If
Public Declare PtrSafe Function ExecuteUmsThread Lib "kernel32" (ByVal UmsThreead As LongPtr) As BOOL
#If Win64 = 0 Then
[Unimplemented, Description("This API is only available on 64bit Windows from 64bit callers.")]
#End If
Public Declare PtrSafe Function UmsThreadYield Lib "kernel32" (ByVal SchedulerParam As LongPtr) As BOOL
#If Win64 = 0 Then
[Unimplemented, Description("This API is only available on 64bit Windows from 64bit callers.")]
#End If
Public Declare PtrSafe Function DeleteUmsCompletionList Lib "kernel32" (ByVal UmsCompletionList As LongPtr) As BOOL
#If Win64 = 0 Then
[Unimplemented, Description("This API is only available on 64bit Windows from 64bit callers.")]
#End If
Public Declare PtrSafe Function GetCurrentUmsThread Lib "kernel32" () As LongPtr
#If Win64 = 0 Then
[Unimplemented, Description("This API is only available on 64bit Windows from 64bit callers.")]
#End If
Public Declare PtrSafe Function GetNextUmsListItem Lib "kernel32" (ByVal UmsContext As LongPtr) As LongPtr
#If Win64 = 0 Then
[Unimplemented, Description("This API is only available on 64bit Windows from 64bit callers.")]
#End If
Public Declare PtrSafe Function QueryUmsThreadInformation Lib "kernel32" (ByVal UmsContext As LongPtr, ByVal UmsThreadInfoClass As RTL_UMS_THREAD_INFO_CLASS, UmsThreadInformation As Any, ByVal UmsThreadInformationLength As Long, Optional ReturnLength As Long) As BOOL
#If Win64 = 0 Then
[Unimplemented, Description("This API is only available on 64bit Windows from 64bit callers.")]
#End If
Public Declare PtrSafe Function SetUmsThreadInformation Lib "kernel32" (ByVal UmsContext As LongPtr, ByVal UmsThreadInfoClass As RTL_UMS_THREAD_INFO_CLASS, UmsThreadInformation As Any, ByVal UmsThreadInformationLength As Long) As BOOL
#If Win64 = 0 Then
[Unimplemented, Description("This API is only available on 64bit Windows from 64bit callers.")]
#End If
Public Declare PtrSafe Function DeleteUmsThreadContext Lib "kernel32" (ByVal UmsThread As LongPtr) As BOOL
#If Win64 = 0 Then
[Unimplemented, Description("This API is only available on 64bit Windows from 64bit callers.")]
#End If
Public Declare PtrSafe Function CreateUmsThreadContext Lib "kernel32" (lpUmsThread As LongPtr) As BOOL
#If Win64 = 0 Then
[Unimplemented, Description("This API is only available on 64bit Windows from 64bit callers.")]
#End If
Public Declare PtrSafe Function EnterUmsSchedulingMode Lib "kernel32" (SchedulerStartupInfo As UMS_SCHEDULER_STARTUP_INFO) As BOOL
#If Win64 = 0 Then
[Unimplemented, Description("This API is only available on 64bit Windows from 64bit callers.")]
#End If
Public Declare PtrSafe Function GetUmsSystemThreadInformation Lib "kernel32" (ByVal ThreadHandle As LongPtr, SystemThreadInfo As UMS_SYSTEM_THREAD_INFORMATION) As BOOL


Public Declare PtrSafe Function GetProcessGroupAffinity Lib "kernel32" (ByVal hProcess As LongPtr, GroupCount As Integer, GroupArray As Integer) As BOOL
Public Declare PtrSafe Function GetThreadGroupAffinity Lib "kernel32" (ByVal hThread As LongPtr, GroupAffinity As GROUP_AFFINITY) As BOOL
Public Declare PtrSafe Function SetThreadGroupAffinity Lib "kernel32" (ByVal hThread As LongPtr, GroupAffinity As GROUP_AFFINITY, PreviousGroupAffinity As GROUP_AFFINITY) As BOOL
Public Declare PtrSafe Function GetNumaHighestNodeNumber Lib "kernel32" (HighestNodeNumber As Long) As BOOL
Public Declare PtrSafe Function GetNumaNodeProcessorMaskEx Lib "kernel32" (ByVal Node As Integer, ProcessorMask As GROUP_AFFINITY) As BOOL
Public Declare PtrSafe Function GetNumaNodeProcessorMask2 Lib "kernel32" (ByVal NodeNumber As Integer, ProcessorMasks As GROUP_AFFINITY, ByVal ProcessorMaskCount As Integer, RequiredMaskCount As Integer) As BOOL
Public Declare PtrSafe Function GetNumaProximityNodeEx Lib "kernel32" (ByVal ProximityId As Long, NodeNumber As Integer) As BOOL

Public Declare PtrSafe Function EnableThreadProfiling Lib "kernel32" (ByVal ThreadHandle As LongPtr, ByVal Flags As ThreadProfilingFlags, ByVal HardwareCounters As LongLong, PerformanceDataHandle As LongPtr) As Long
Public Declare PtrSafe Function DisableThreadProfiling Lib "kernel32" (ByVal PerformanceDataHandle As LongPtr) As Long
Public Declare PtrSafe Function QueryThreadProfiling Lib "kernel32" (ByVal ThreadHandle As LongPtr, Enabled As Byte) As Long
Public Declare PtrSafe Function ReadThreadProfilingData Lib "kernel32" (ByVal PerformanceDataHandle As LongPtr, ByVal Flags As ReadThreadProfilingFlags, PerformanceData As PERFORMANCE_DATA) As Long

Public Function GetCurrentProcessToken() As LongPtr: Return (-4): End Function
Public Function GetCurrentThreadToken() As LongPtr: Return (-5): End Function
Public Function GetCurrentThreadEffectiveToken() As LongPtr: Return (-6): End Function

Public Const MAX_HW_COUNTERS = 16

Public Enum ThreadProfilingFlags
    THREAD_PROFILING_FLAG_DISPATCH = &H00000001
End Enum

Public Enum HARDWARE_COUNTER_TYPE
    PMCCounter
    MaxHardwareCounterType
End Enum

Public Enum ReadThreadProfilingFlags
    READ_THREAD_PROFILING_FLAG_DISPATCHING = &H00000001
    READ_THREAD_PROFILING_FLAG_HARDWARE_COUNTERS = &H00000002
End Enum

Public Type HARDWARE_COUNTER_DATA
    Type As HARDWARE_COUNTER_TYPE
    Reserved As Long
    Value As LongLong
End Type

Public Const PERFORMANCE_DATA_VERSION = 1
Public Type PERFORMANCE_DATA
    Size As Integer
    Version As Byte
    HwCountersCount As Byte
    ContextSwitchCount As Long
    WaitReasonBitMap As LongLong
    CycleTime As LongLong
    RetryCount As Long
    Reserved As Long
    HwCounters(0 To (MAX_HW_COUNTERS - 1)) As HARDWARE_COUNTER_DATA
End Type

Public Enum ProcessAffinityUpdateFlags
    PROCESS_AFFINITY_ENABLE_AUTO_UPDATE = &H00000001
End Enum

Public Enum JobAccessRights
    JOB_OBJECT_ASSIGN_PROCESS = (&H0001)
    JOB_OBJECT_SET_ATTRIBUTES = (&H0002)
    JOB_OBJECT_QUERY = (&H0004)
    JOB_OBJECT_TERMINATE = (&H0008)
    JOB_OBJECT_SET_SECURITY_ATTRIBUTES = (&H0010)
    JOB_OBJECT_IMPERSONATE = (&H0020)
    JOB_OBJECT_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or SYNCHRONIZE Or &H3F)
End Enum

Public Type JOB_SET_ARRAY
    JobHandle As LongPtr ' Handle to job object to insert
    MemberLevel As Long ' Level of this job in the set. Must be > 0. Can be sparse.
    Flags As Long ' Unused. Must be zero
End Type

Public Enum JOBOBJECTINFOCLASS
    JobObjectBasicAccountingInformation = 1
    JobObjectBasicLimitInformation
    JobObjectBasicProcessIdList
    JobObjectBasicUIRestrictions
    JobObjectSecurityLimitInformation ' deprecated
    JobObjectEndOfJobTimeInformation
    JobObjectAssociateCompletionPortInformation
    JobObjectBasicAndIoAccountingInformation
    JobObjectExtendedLimitInformation
    JobObjectJobSetInformation
    JobObjectGroupInformation
    JobObjectNotificationLimitInformation
    JobObjectLimitViolationInformation
    JobObjectGroupInformationEx
    JobObjectCpuRateControlInformation
    JobObjectCompletionFilter
    JobObjectCompletionCounter

'
'

    JobObjectReserved1Information = 18
    JobObjectReserved2Information
    JobObjectReserved3Information
    JobObjectReserved4Information
    JobObjectReserved5Information
    JobObjectReserved6Information
    JobObjectReserved7Information
    JobObjectReserved8Information
    JobObjectReserved9Information
    JobObjectReserved10Information
    JobObjectReserved11Information
    JobObjectReserved12Information
    JobObjectReserved13Information
    JobObjectReserved14Information = 31
    JobObjectNetRateControlInformation
    JobObjectNotificationLimitInformation2
    JobObjectLimitViolationInformation2
    JobObjectCreateSilo
    JobObjectSiloBasicInformation
    JobObjectReserved15Information = 37
    JobObjectReserved16Information = 38
    JobObjectReserved17Information = 39
    JobObjectReserved18Information = 40
    JobObjectReserved19Information = 41
    JobObjectReserved20Information = 42
    JobObjectReserved21Information = 43
    JobObjectReserved22Information = 44
    JobObjectReserved23Information = 45
    JobObjectReserved24Information = 46
    JobObjectReserved25Information = 47
    JobObjectReserved26Information = 48
    JobObjectReserved27Information = 49
    MaxJobObjectInfoClass
End Enum

Public Enum JOB_OBJ_EOJ
    JOB_OBJECT_TERMINATE_AT_END_OF_JOB = 0
    JOB_OBJECT_POST_AT_END_OF_JOB = 1
End Enum
Public Enum JOB_OBJ_MSGS
    JOB_OBJECT_MSG_END_OF_JOB_TIME = 1
    JOB_OBJECT_MSG_END_OF_PROCESS_TIME = 2
    JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT = 3
    JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO = 4
    JOB_OBJECT_MSG_NEW_PROCESS = 6
    JOB_OBJECT_MSG_EXIT_PROCESS = 7
    JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS = 8
    JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT = 9
    JOB_OBJECT_MSG_JOB_MEMORY_LIMIT = 10
    JOB_OBJECT_MSG_NOTIFICATION_LIMIT = 11
    JOB_OBJECT_MSG_JOB_CYCLE_TIME_LIMIT = 12
    JOB_OBJECT_MSG_SILO_TERMINATED = 13
End Enum
Public Enum JOB_CPU_RATE_CTL
    JOB_OBJECT_CPU_RATE_CONTROL_ENABLE = &H1
    JOB_OBJECT_CPU_RATE_CONTROL_WEIGHT_BASED = &H2
    JOB_OBJECT_CPU_RATE_CONTROL_HARD_CAP = &H4
    JOB_OBJECT_CPU_RATE_CONTROL_NOTIFY = &H8
    JOB_OBJECT_CPU_RATE_CONTROL_MIN_MAX_RATE = &H10
    JOB_OBJECT_CPU_RATE_CONTROL_VALID_FLAGS = &H1f
End Enum
Public Enum JOB_OBJ_UI_LIMITS
    JOB_OBJECT_UILIMIT_NONE = &H00000000
    JOB_OBJECT_UILIMIT_HANDLES = &H00000001
    JOB_OBJECT_UILIMIT_READCLIPBOARD = &H00000002
    JOB_OBJECT_UILIMIT_WRITECLIPBOARD = &H00000004
    JOB_OBJECT_UILIMIT_SYSTEMPARAMETERS = &H00000008
    JOB_OBJECT_UILIMIT_DISPLAYSETTINGS = &H00000010
    JOB_OBJECT_UILIMIT_GLOBALATOMS = &H00000020
    JOB_OBJECT_UILIMIT_DESKTOP = &H00000040
    JOB_OBJECT_UILIMIT_EXITWINDOWS = &H00000080
    JOB_OBJECT_UILIMIT_IME = &H00000100
    JOB_OBJECT_UILIMIT_ALL = &H000001FF
    JOB_OBJECT_UI_VALID_FLAGS = &H000001FF
End Enum
Public Enum JOB_OBJ_SECURITY
    JOB_OBJECT_SECURITY_NO_ADMIN = &H00000001
    JOB_OBJECT_SECURITY_RESTRICTED_TOKEN = &H00000002
    JOB_OBJECT_SECURITY_ONLY_TOKEN = &H00000004
    JOB_OBJECT_SECURITY_FILTER_TOKENS = &H00000008
    JOB_OBJECT_SECURITY_VALID_FLAGS = &H0000000f
End Enum
Public Enum JOB_OBJ_BASIC_LIMITS
    JOB_OBJECT_LIMIT_WORKINGSET = &H00000001
    JOB_OBJECT_LIMIT_PROCESS_TIME = &H00000002
    JOB_OBJECT_LIMIT_JOB_TIME = &H00000004
    JOB_OBJECT_LIMIT_ACTIVE_PROCESS = &H00000008
    JOB_OBJECT_LIMIT_AFFINITY = &H00000010
    JOB_OBJECT_LIMIT_PRIORITY_CLASS = &H00000020
    JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME = &H00000040
    JOB_OBJECT_LIMIT_SCHEDULING_CLASS = &H00000080
    JOB_OBJECT_LIMIT_PROCESS_MEMORY = &H00000100
    JOB_OBJECT_LIMIT_JOB_MEMORY = &H00000200
    JOB_OBJECT_LIMIT_JOB_MEMORY_HIGH = JOB_OBJECT_LIMIT_JOB_MEMORY
    JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION = &H00000400
    JOB_OBJECT_LIMIT_BREAKAWAY_OK = &H00000800
    JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK = &H00001000
    JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE = &H00002000
    JOB_OBJECT_LIMIT_SUBSET_AFFINITY = &H00004000
    JOB_OBJECT_LIMIT_JOB_MEMORY_LOW = &H00008000&
    JOB_OBJECT_LIMIT_JOB_READ_BYTES = &H00010000
    JOB_OBJECT_LIMIT_JOB_WRITE_BYTES = &H00020000
    JOB_OBJECT_LIMIT_RATE_CONTROL = &H00040000
    JOB_OBJECT_LIMIT_CPU_RATE_CONTROL = JOB_OBJECT_LIMIT_RATE_CONTROL
    JOB_OBJECT_LIMIT_IO_RATE_CONTROL = &H00080000
    JOB_OBJECT_LIMIT_NET_RATE_CONTROL = &H00100000
End Enum
Public Enum JOB_OBJ_VALID_FLAGS
    JOB_OBJECT_LIMIT_VALID_FLAGS = &H0007ffff
    JOB_OBJECT_BASIC_LIMIT_VALID_FLAGS = &H000000ff
    JOB_OBJECT_EXTENDED_LIMIT_VALID_FLAGS = &H00007fff
    JOB_OBJECT_NOTIFICATION_LIMIT_VALID_FLAGS = (JOB_OBJECT_LIMIT_JOB_READ_BYTES Or JOB_OBJECT_LIMIT_JOB_WRITE_BYTES Or JOB_OBJECT_LIMIT_JOB_TIME Or JOB_OBJECT_LIMIT_JOB_MEMORY_LOW Or JOB_OBJECT_LIMIT_JOB_MEMORY_HIGH Or JOB_OBJECT_LIMIT_CPU_RATE_CONTROL Or JOB_OBJECT_LIMIT_IO_RATE_CONTROL Or JOB_OBJECT_LIMIT_NET_RATE_CONTROL)
End Enum

Public Const JOB_OBJECT_MSG_MINIMUM  = 1
Public Const JOB_OBJECT_MSG_MAXIMUM  = 13
Public Const JOB_OBJECT_VALID_COMPLETION_FILTER  = (((1 << (JOB_OBJECT_MSG_MAXIMUM + 1)) - 1) - ((1 << JOB_OBJECT_MSG_MINIMUM) - 1))

Public Type JOBOBJECT_BASIC_ACCOUNTING_INFORMATION
    TotalUserTime As LARGE_INTEGER
    TotalKernelTime As LARGE_INTEGER
    ThisPeriodTotalUserTime As LARGE_INTEGER
    ThisPeriodTotalKernelTime As LARGE_INTEGER
    TotalPageFaultCount As Long
    TotalProcesses As Long
    ActiveProcesses As Long
    TotalTerminatedProcesses As Long
End Type
Public Type JOBOBJECT_BASIC_LIMIT_INFORMATION
    PerProcessUserTimeLimit As LARGE_INTEGER
    PerJobUserTimeLimit As LARGE_INTEGER
    LimitFlags As JOB_OBJ_BASIC_LIMITS
    MinimumWorkingSetSize As LongPtr
    MaximumWorkingSetSize As LongPtr
    ActiveProcessLimit As Long
    Affinity As LongPtr
    PriorityClass As PriorityClass
    SchedulingClass As Long
End Type
Public Type JOBOBJECT_EXTENDED_LIMIT_INFORMATION
    BasicLimitInformation As JOBOBJECT_BASIC_LIMIT_INFORMATION
    IoInfo As IO_COUNTERS
    ProcessMemoryLimit As LongPtr
    JobMemoryLimit As LongPtr
    PeakProcessMemoryUsed As LongPtr
    PeakJobMemoryUsed As LongPtr
End Type
[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type JOBOBJECT_BASIC_PROCESS_ID_LIST
    NumberOfAssignedProcesses As Long
    NumberOfProcessIdsInList As Long
    ProcessIdList() As LongPtr
End Type
Public Type JOBOBJECT_BASIC_UI_RESTRICTIONS
    UIRestrictionsClass As JOB_OBJ_UI_LIMITS
End Type
Public Type JOBOBJECT_SECURITY_LIMIT_INFORMATION
    SecurityLimitFlags As JOB_OBJ_SECURITY
    JobToken As LongPtr
    SidsToDisable As LongPtr 'PTOKEN_GROUPS
    PrivilegesToDelete As LongPtr 'PTOKEN_PRIVILEGES
    RestrictedSids As LongPtr 'PTOKEN_GROUPS
End Type
Public Type JOBOBJECT_END_OF_JOB_TIME_INFORMATION
    EndOfJobTimeAction As JOB_OBJ_EOJ
End Type
Public Type JOBOBJECT_ASSOCIATE_COMPLETION_PORT
    CompletionKey As LongPtr
    CompletionPort As LongPtr
End Type
Public Type JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION
    BasicInfo As JOBOBJECT_BASIC_ACCOUNTING_INFORMATION
    IoInfo As IO_COUNTERS
End Type
Public Type JOBOBJECT_JOBSET_INFORMATION
    MemberLevel As Long
End Type
Public Enum JOBOBJECT_RATE_CONTROL_TOLERANCE
    ToleranceLow = 1
    ToleranceMedium
    ToleranceHigh
End Enum
Public Enum JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
    ToleranceIntervalShort = 1
    ToleranceIntervalMedium
    ToleranceIntervalLong
End Enum
Public Type JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION
    IoReadBytesLimit As LongLong
    IoWriteBytesLimit As LongLong
    PerJobUserTimeLimit As LARGE_INTEGER
    JobMemoryLimit As LongLong
    RateControlTolerance As JOBOBJECT_RATE_CONTROL_TOLERANCE
    RateControlToleranceInterval As JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
    LimitFlags As JOB_OBJ_BASIC_LIMITS
End Type
Public Type JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2
    IoReadBytesLimit As LongLong
    IoWriteBytesLimit As LongLong
    PerJobUserTimeLimit As LARGE_INTEGER
    'union {
    '    DWORD64 JobHighMemoryLimit;
    '    DWORD64 JobMemoryLimit;
    '} DUMMYUNIONNAME;
    JobMemoryLimits As LongLong
    'union {
    '    JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    '    JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlTolerance;
    '} DUMMYUNIONNAME2;
    RateControl As JOBOBJECT_RATE_CONTROL_TOLERANCE
    'union {
    '    JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval;
    '    JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
    '        CpuRateControlToleranceInterval;
    '} DUMMYUNIONNAME3;
    RateControlToleranceInterval As JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
    LimitFlags As JOB_OBJ_BASIC_LIMITS
    IoRateControlTolerance As JOBOBJECT_RATE_CONTROL_TOLERANCE
    JobLowMemoryLimit As LongLong
    IoRateControlToleranceInterval As JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
    NetRateControlTolerance As JOBOBJECT_RATE_CONTROL_TOLERANCE
    NetRateControlToleranceInterval As JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
End Type
Public Type JOBOBJECT_LIMIT_VIOLATION_INFORMATION
    LimitFlags As JOB_OBJ_BASIC_LIMITS
    ViolationLimitFlags As JOB_OBJ_BASIC_LIMITS
    IoReadBytes As LongLong
    IoReadBytesLimit As LongLong
    IoWriteBytes As LongLong
    IoWriteBytesLimit As LongLong
    PerJobUserTime As LARGE_INTEGER
    PerJobUserTimeLimit As LARGE_INTEGER
    JobMemory As LongLong
    JobMemoryLimit As LongLong
    RateControlTolerance As JOBOBJECT_RATE_CONTROL_TOLERANCE
    RateControlToleranceLimit As JOBOBJECT_RATE_CONTROL_TOLERANCE
End Type
Public Type JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2
    LimitFlags As JOB_OBJ_BASIC_LIMITS
    ViolationLimitFlags As JOB_OBJ_BASIC_LIMITS
    IoReadBytes As LongLong
    IoReadBytesLimit As LongLong
    IoWriteBytes As LongLong
    IoWriteBytesLimit As LongLong
    PerJobUserTime As LARGE_INTEGER
    PerJobUserTimeLimit As LARGE_INTEGER
    JobMemory As LongLong

    'union {
    '    DWORD64 JobHighMemoryLimit;
    '    DWORD64 JobMemoryLimit;
    '} DUMMYUNIONNAME;
    JobMemoryLimits As LongLong
    'union {
    '    JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    '    JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlTolerance;
    '} DUMMYUNIONNAME2;
    RateControl As JOBOBJECT_RATE_CONTROL_TOLERANCE
    'union {
    '    JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlToleranceLimit;
    '    JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlToleranceLimit;
    '} DUMMYUNIONNAME3;
    RateControlToleranceInterval As JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL

    JobLowMemoryLimit As LongLong
    IoRateControlTolerance As JOBOBJECT_RATE_CONTROL_TOLERANCE
    IoRateControlToleranceLimit As JOBOBJECT_RATE_CONTROL_TOLERANCE
    NetRateControlTolerance As JOBOBJECT_RATE_CONTROL_TOLERANCE
    NetRateControlToleranceLimit As JOBOBJECT_RATE_CONTROL_TOLERANCE
End Type
Public Type JOBOBJECT_CPU_RATE_CONTROL_INFORMATION
    ControlFlags As JOB_CPU_RATE_CTL
    'union {
    '    DWORD CpuRate;
    '    DWORD Weight;
    '    struct {
    '        WORD   MinRate;
    '        WORD   MaxRate;
    '    } DUMMYSTRUCTNAME;
    '} DUMMYUNIONNAME;
    RateOrWeight As Long
End Type

Public Enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS
    JOB_OBJECT_NET_RATE_CONTROL_ENABLE = &H1
    JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH = &H2
    JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG = &H4
    JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS = &H7
End Enum

Public Const JOB_OBJECT_NET_RATE_CONTROL_MAX_DSCP_TAG = 64
Public Type JOBOBJECT_NET_RATE_CONTROL_INFORMATION
    MaxBandwidth As LongLong
    ControlFlags As JOB_OBJECT_NET_RATE_CONTROL_FLAGS
    DscpTag As Byte
End Type

Public Enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS
    JOB_OBJECT_IO_RATE_CONTROL_ENABLE = &H1
    JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME = &H2
    JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL = &H4
    JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP = &H8
    JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS = JOB_OBJECT_IO_RATE_CONTROL_ENABLE Or JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME Or JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL Or JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP
End Enum
Public Type JOBOBJECT_IO_RATE_CONTROL_INFORMATION
    MaxIops As LongLong
    MaxBandwidth As LongLong
    ReservationIops As LongLong
    VolumeName As LongPtr
    BaseIoSize As Long
    ControlFlags As JOB_OBJECT_IO_RATE_CONTROL_FLAGS
End Type
Public Type JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE
    MaxIops As LongLong
    MaxBandwidth As LongLong
    ReservationIops As LongLong
    VolumeName As LongPtr
    BaseIoSize As Long
    ControlFlags As JOB_OBJECT_IO_RATE_CONTROL_FLAGS
    VolumeNameLength As Integer
End Type
Public Type JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2
    MaxIops As LongLong
    MaxBandwidth As LongLong
    ReservationIops As LongLong
    VolumeName As LongPtr
    BaseIoSize As Long
    ControlFlags As JOB_OBJECT_IO_RATE_CONTROL_FLAGS
    VolumeNameLength As Integer
    CriticalReservationIops As LongLong
    ReservationBandwidth As LongLong
    CriticalReservationBandwidth As LongLong
    MaxTimePercent As LongLong
    ReservationTimePercent As LongLong
    CriticalReservationTimePercent As LongLong
End Type
Public Type JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3
    MaxIops As LongLong
    MaxBandwidth As LongLong
    ReservationIops As LongLong
    VolumeName As LongPtr
    BaseIoSize As Long
    ControlFlags As JOB_OBJECT_IO_RATE_CONTROL_FLAGS
    VolumeNameLength As Integer
    CriticalReservationIops As LongLong
    ReservationBandwidth As LongLong
    CriticalReservationBandwidth As LongLong
    MaxTimePercent As LongLong
    ReservationTimePercent As LongLong
    CriticalReservationTimePercent As LongLong
    SoftMaxIops As LongLong
    SoftMaxBandwidth As LongLong
    SoftMaxTimePercent As LongLong
    LimitExcessNotifyIops As LongLong
    LimitExcessNotifyBandwidth As LongLong
    LimitExcessNotifyTimePercent As LongLong
End Type
Public Enum JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS
    JOBOBJECT_IO_ATTRIBUTION_CONTROL_ENABLE = &H1
    JOBOBJECT_IO_ATTRIBUTION_CONTROL_DISABLE = &H2
    JOBOBJECT_IO_ATTRIBUTION_CONTROL_VALID_FLAGS = &H3
End Enum
Public Type JOBOBJECT_IO_ATTRIBUTION_STATS
    IoCount As LongPtr
    TotalNonOverlappedQueueTime As LongLong
    TotalNonOverlappedServiceTime As LongLong
    TotalSize As LongLong
End Type
Public Type JOBOBJECT_IO_ATTRIBUTION_INFORMATION
    ControlFlags As JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS
    ReadStats As JOBOBJECT_IO_ATTRIBUTION_STATS
    WriteStats As JOBOBJECT_IO_ATTRIBUTION_STATS
End Type

Public Declare PtrSafe Function CreateJobObjectA Lib "kernel32" (lpJobAttributes As SECURITY_ATTRIBUTES, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateJobObjectW Lib "kernel32" (lpJobAttributes As SECURITY_ATTRIBUTES, ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateJobObject Lib "kernel32" Alias "CreateJobObjectW" (lpJobAttributes As SECURITY_ATTRIBUTES, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function AssignProcessToJobObject Lib "kernel32" (ByVal hJob As LongPtr, ByVal hProcess As LongPtr) As BOOL
Public Declare PtrSafe Function OpenJobObjectA Lib "kernel32" ([TypeHint(StandardAccessTypes, JobAccessRights)] ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function OpenJobObjectW Lib "kernel32" ([TypeHint(StandardAccessTypes, JobAccessRights)] ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenJobObject Lib "kernel32" Alias "OpenJobObjectW" ([TypeHint(StandardAccessTypes, JobAccessRights)] ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public DeclareWide PtrSafe Function SetInformationJobObject Lib "kernel32" (ByVal hJob As LongPtr, ByVal JobObjectInformationClass As JOBOBJECTINFOCLASS, lpJobObjectInformation As Any, ByVal cbJobObjectInformationLength As Long) As BOOL
Public DeclareWide PtrSafe Function QueryInformationJobObject Lib "kernel32" (ByVal hJob As LongPtr, ByVal JobObjectInformationClass As JOBOBJECTINFOCLASS, lpJobObjectInformation As Any, ByVal cbJobObjectInformationLength As Long, Optional lpReturnLength As Long) As BOOL
Public Declare PtrSafe Function IsProcessInJob Lib "kernel32" (ByVal ProcessHandle As LongPtr, ByVal JobHandle As LongPtr, Result As BOOL) As BOOL
Public Declare PtrSafe Sub FreeMemoryJobObject Lib "kernel32" (ByVal Buffer As LongPtr)
Public Declare PtrSafe Function TerminateJobObject Lib "kernel32" (ByVal hJob As LongPtr, ByVal uExitCode As Long) As BOOL
Public Declare PtrSafe Function SetIoRateControlInformationJobObject Lib "kernel32" (ByVal hJob As LongPtr, IoRateControlInfo As JOBOBJECT_IO_RATE_CONTROL_INFORMATION) As Long
Public DeclareWide PtrSafe Function QueryIoRateControlInformationJobObject Lib "kernel32" (ByVal hJob As LongPtr, ByVal VolumeName As String, InfoBlocks As LongPtr /*JOBOBJECT_IO_RATE_CONTROL_INFORMATION*/, InfoBlockCount As Long) As Long

Public Declare PtrSafe Function GetEnvironmentVariableA Lib "kernel32" (ByVal lpName As String, ByVal lpBuffer As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetEnvironmentVariableW Lib "kernel32" (ByVal lpName As LongPtr, ByVal lpBuffer As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetEnvironmentVariable Lib "kernel32" Alias "GetEnvironmentVariableW" (ByVal lpName As String, ByVal lpBuffer As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function SetEnvironmentVariableA Lib "kernel32" (ByVal lpName As String, Optional ByVal lpValue As String) As BOOL
Public Declare PtrSafe Function SetEnvironmentVariableW Lib "kernel32" (ByVal lpName As LongPtr, Optional ByVal lpValue As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetEnvironmentVariable Lib "kernel32" Alias "SetEnvironmentVariableW" (ByVal lpName As String, Optional ByVal lpValue As String) As BOOL
Public Declare PtrSafe Function ExpandEnvironmentStringsA Lib "kernel32" (ByVal lpSrc As String, ByVal lpDst As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function ExpandEnvironmentStringsW Lib "kernel32" (ByVal lpSrc As LongPtr, ByVal lpDst As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function ExpandEnvironmentStrings Lib "kernel32" Alias "ExpandEnvironmentStringsW" (ByVal lpSrc As String, ByVal lpDst As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function SetEnvironmentStringsA Lib "kernel32" (ByVal NewEnvironment As String) As BOOL
Public Declare PtrSafe Function SetEnvironmentStringsW Lib "kernel32" (ByVal NewEnvironment As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetEnvironmentStrings Lib "kernel32" Alias "SetEnvironmentStringsW" (ByVal NewEnvironment As String) As BOOL
Public Declare PtrSafe Function GetEnvironmentStrings Lib "kernel32" () As String
Public Declare PtrSafe Function GetEnvironmentStringsA Lib "kernel32" () As String
Public Declare PtrSafe Function GetEnvironmentStringsW Lib "kernel32" () As LongPtr
Public Declare PtrSafe Function FreeEnvironmentStringsA Lib "kernel32" (ByVal penv As LongPtr) As BOOL
Public Declare PtrSafe Function FreeEnvironmentStringsW Lib "kernel32" (ByVal penv As LongPtr) As BOOL
Public DeclareWide PtrSafe Function FreeEnvironmentStrings Lib "kernel32" Alias "FreeEnvironmentStringsW" (ByVal penv As LongPtr) As BOOL


Public Enum COMPUTER_NAME_FORMAT
    ComputerNameNetBIOS
    ComputerNameDnsHostname
    ComputerNameDnsDomain
    ComputerNameDnsFullyQualified
    ComputerNamePhysicalNetBIOS
    ComputerNamePhysicalDnsHostname
    ComputerNamePhysicalDnsDomain
    ComputerNamePhysicalDnsFullyQualified
    ComputerNameMax
End Enum

Public Const MAX_COMPUTERNAME_LENGTH = 15

Public Enum SCNEX2_Flags
    SCEX2_ALT_NETBIOS_NAME = &H1
End Enum

Public Enum UefiVariableAttributes
    VARIABLE_ATTRIBUTE_NON_VOLATILE = &H00000001
    VARIABLE_ATTRIBUTE_BOOTSERVICE_ACCESS = &H00000002
    VARIABLE_ATTRIBUTE_RUNTIME_ACCESS = &H00000004
    VARIABLE_ATTRIBUTE_HARDWARE_ERROR_RECORD = &H00000008
    VARIABLE_ATTRIBUTE_AUTHENTICATED_WRITE_ACCESS = &H00000010
    VARIABLE_ATTRIBUTE_TIME_BASED_AUTHENTICATED_WRITE_ACCESS = &H00000020
    VARIABLE_ATTRIBUTE_APPEND_WRITE = &H00000040
End Enum


Public Declare PtrSafe Function GetComputerNameA Lib "kernel32" (ByVal lpBuffer As String, nSize As Long) As BOOL
Public Declare PtrSafe Function GetComputerNameW Lib "kernel32" (ByVal lpBuffer As LongPtr, nSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetComputerName Lib "kernel32" Alias "GetComputerNameW" (ByVal lpBuffer As String, nSize As Long) As BOOL
Public Declare PtrSafe Function SetComputerNameA Lib "kernel32" (ByVal lpBuffer As String) As BOOL
Public Declare PtrSafe Function SetComputerNameW Lib "kernel32" (ByVal lpBuffer As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetComputerName Lib "kernel32" Alias "SetComputerNameW" (ByVal lpBuffer As String) As BOOL
Public Declare PtrSafe Function GetComputerNameExA Lib "kernel32" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As String, nSize As Long) As BOOL
Public Declare PtrSafe Function GetComputerNameExW Lib "kernel32" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As LongPtr, nSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetComputerNameEx Lib "kernel32" Alias "GetComputerNameExW" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As String, nSize As Long) As BOOL
Public Declare PtrSafe Function SetComputerNameExA Lib "kernel32" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As String) As BOOL
Public Declare PtrSafe Function SetComputerNameExW Lib "kernel32" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetComputerNameEx Lib "kernel32" Alias "SetComputerNameExW" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As String) As BOOL
'SetComputerNameEx2A does not exist.
Public Declare PtrSafe Function SetComputerNameEx2W Lib "kernel32" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal Flags As SCNEX2_Flags, ByVal lpBuffer As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetComputerNameEx2 Lib "kernel32" Alias "SetComputerNameEx2W" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal Flags As SCNEX2_Flags, ByVal lpBuffer As String) As BOOL
Public Declare PtrSafe Function DnsHostnameToComputerNameA Lib "kernel32" (ByVal Hostname As String, ByVal ComputerName As String, nSize As Long) As BOOL
Public Declare PtrSafe Function DnsHostnameToComputerNameW Lib "kernel32" (ByVal Hostname As LongPtr, ByVal ComputerName As LongPtr, nSize As Long) As BOOL
Public DeclareWide PtrSafe Function DnsHostnameToComputerName Lib "kernel32" Alias "DnsHostnameToComputerNameW" (ByVal Hostname As String, ByVal ComputerName As String, nSize As Long) As BOOL


Public Declare PtrSafe Function GlobalAddAtomW Lib "kernel32" (ByVal lpString As LongPtr) As Integer
Public Declare PtrSafe Function GlobalAddAtomA Lib "kernel32" (ByVal lpString As String) As Integer
Public DeclareWide PtrSafe Function GlobalAddAtom Lib "kernel32" Alias "GlobalAddAtomW" (ByVal lpString As String) As Integer
Public Declare PtrSafe Function GlobalDeleteAtom Lib "kernel32" (ByVal nAtom As Integer) As Integer
Public Declare PtrSafe Function DeleteAtom Lib "kernel32" (ByVal nAtom As Integer) As Integer
Public Declare PtrSafe Function InitAtomTable Lib "kernel32" (ByVal nSize As Long) As BOOL
Public Declare PtrSafe Function AddAtomW Lib "kernel32" (ByVal lpString As LongPtr) As Integer
Public Declare PtrSafe Function AddAtomA Lib "kernel32" (ByVal lpString As String) As Integer
Public DeclareWide PtrSafe Function AddAtom Lib "kernel32" Alias "AddAtomW" (ByVal lpString As String) As Integer
Public Declare PtrSafe Function FindAtomW Lib "kernel32" (ByVal lpString As LongPtr) As Integer
Public Declare PtrSafe Function FindAtomA Lib "kernel32" (ByVal lpString As String) As Integer
Public DeclareWide PtrSafe Function FindAtom Lib "kernel32" Alias "FindAtomW" (ByVal lpString As String) As Integer
Public Declare PtrSafe Function GlobalFindAtomW Lib "kernel32" (ByVal lpString As LongPtr) As Integer
Public Declare PtrSafe Function GlobalFindAtomA Lib "kernel32" (ByVal lpString As String) As Integer
Public DeclareWide PtrSafe Function GlobalFindAtom Lib "kernel32" Alias "GlobalFindAtomW" (ByVal lpString As String) As Integer
Public Declare PtrSafe Function GetAtomNameW Lib "kernel32" (ByVal nAtom As Integer, ByVal lpBuffer As LongPtr, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetAtomNameA Lib "kernel32" (ByVal nAtom As Integer, ByVal lpBuffer As String, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetAtomName Lib "kernel32" Alias "GetAtomNameW" (ByVal nAtom As Integer, ByVal lpBuffer As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GlobalGetAtomNameW Lib "kernel32" (ByVal nAtom As Integer, ByVal lpBuffer As LongPtr, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GlobalGetAtomNameA Lib "kernel32" (ByVal nAtom As Integer, ByVal lpBuffer As String, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GlobalGetAtomName Lib "kernel32" Alias "GlobalGetAtomNameW" (ByVal nAtom As Integer, ByVal lpBuffer As String, ByVal nSize As Long) As Long

Public Declare PtrSafe Function CreateNamedPipeA Lib "kernel32" (ByVal lpName As String, [TypeHint(PipeOpenMode, FILE_FLAGS, StandardAccessTypes)] ByVal dwOpenMode As Long, ByVal dwPipeMode As PipeModeFlags, ByVal nMaxInstances As Long, ByVal nOutBufferSize As Long, ByVal nInBufferSize As Long, ByVal nDefaultTimeOut As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES) As LongPtr
Public Declare PtrSafe Function CreateNamedPipeW Lib "kernel32" (ByVal lpName As LongPtr, [TypeHint(PipeOpenMode, FILE_FLAGS, StandardAccessTypes)] ByVal dwOpenMode As Long, ByVal dwPipeMode As PipeModeFlags, ByVal nMaxInstances As Long, ByVal nOutBufferSize As Long, ByVal nInBufferSize As Long, ByVal nDefaultTimeOut As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES) As LongPtr
Public DeclareWide PtrSafe Function CreateNamedPipe Lib "kernel32" Alias "CreateNamedPipeW" (ByVal lpName As String, [TypeHint(PipeOpenMode, FILE_FLAGS, StandardAccessTypes)] ByVal dwOpenMode As Long, ByVal dwPipeMode As PipeModeFlags, ByVal nMaxInstances As Long, ByVal nOutBufferSize As Long, ByVal nInBufferSize As Long, ByVal nDefaultTimeOut As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES) As LongPtr
Public Declare PtrSafe Function DisconnectNamedPipe Lib "kernel32" (ByVal hNamedPipe As LongPtr) As BOOL
Public Declare PtrSafe Function CallNamedPipeA Lib "kernel32" (ByVal lpNamedPipeName As String, lpInBuffer As Any, ByVal nInBufferSize As Long, lpOutBuffer As Any, ByVal nOutBufferSize As Long, lpBytesRead As Long, ByVal nTimeOut As Long) As BOOL
Public Declare PtrSafe Function CallNamedPipeW Lib "kernel32" (ByVal lpNamedPipeName As LongPtr, lpInBuffer As Any, ByVal nInBufferSize As Long, lpOutBuffer As Any, ByVal nOutBufferSize As Long, lpBytesRead As Long, ByVal nTimeOut As Long) As BOOL
Public DeclareWide PtrSafe Function CallNamedPipe Lib "kernel32" Alias "CallNamedPipeW" (ByVal lpNamedPipeName As String, lpInBuffer As Any, ByVal nInBufferSize As Long, lpOutBuffer As Any, ByVal nOutBufferSize As Long, lpBytesRead As Long, ByVal nTimeOut As Long) As BOOL
Public Declare PtrSafe Function CreatePipe Lib "kernel32" (hReadPipe As LongPtr, hWritePipe As LongPtr, lpPipeAttributes As SECURITY_ATTRIBUTES, ByVal nSize As Long) As BOOL
Public Declare PtrSafe Function ConnectNamedPipe Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpOverlapped As OVERLAPPED) As BOOL
Public DeclareWide PtrSafe Function PeekNamedPipe Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpBuffer As Any, ByVal nBufferSize As Long, lpBytesRead As Long, lpTotalBytesAvail As Long, lpBytesLeftThisMessage As Long) As BOOL
Public Declare PtrSafe Function SetNamedPipeHandleState Lib "kernel32" (ByVal hNamedPipe As LongPtr, Optional lpMode As Long, Optional lpMaxCollectionCount As Long, Optional lpCollectDataTimeout As Long) As BOOL
Public DeclareWide PtrSafe Function TransactNamedPipe Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpInBuffer As Any, ByVal nInBufferSize As Long, lpOutBuffer As Any, ByVal nOutBufferSize As Long, lpBytesRead As Long, lpOverlapped As OVERLAPPED) As BOOL
Public DeclareWide PtrSafe Function WaitNamedPipe Lib "kernel32" Alias "WaitNamedPipeW" (ByVal lpNamedPipeName As String, ByVal nTimeOut As Long) As BOOL
Public Declare PtrSafe Function WaitNamedPipeA Lib "kernel32" (ByVal lpNamedPipeName As String, ByVal nTimeOut As Long) As BOOL
Public Declare PtrSafe Function WaitNamedPipeW Lib "kernel32" (ByVal lpNamedPipeName As LongPtr, ByVal nTimeOut As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeClientComputerNameA Lib "kernel32" (ByVal Pipe As LongPtr, ByVal ClientComputerName As String, ByVal ClientComputerNameLength As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeClientComputerNameW Lib "kernel32" (ByVal Pipe As LongPtr, ByVal ClientComputerName As LongPtr, ByVal ClientComputerNameLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetNamedPipeClientComputerName Lib "kernel32" Alias "GetNamedPipeClientComputerNameW" (ByVal Pipe As LongPtr, ByVal ClientComputerName As String, ByVal ClientComputerNameLength As Long) As BOOL
Public Declare PtrSafe Function ImpersonateNamedPipeClient Lib "kernelbase" (ByVal hNamedPipe As LongPtr) As BOOL
Public Declare PtrSafe Function GetNamedPipeInfo Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpFlags As Long, lpOutBufferSize As Long, lpInBufferSize As Long, lpMaxInstances As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeHandleStateA Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpState As PipeModeFlags, lpCurInstances As Long, lpMaxCollectionCount As Long, lpCollectionDataTimeout As Long, ByVal lpUserName As String, ByVal nMaxUserNameSize As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeHandleStateW Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpState As PipeModeFlags, lpCurInstances As Long, lpMaxCollectionCount As Long, lpCollectionDataTimeout As Long, ByVal lpUserName As LongPtr, ByVal nMaxUserNameSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetNamedPipeHandleState Lib "kernel32" Alias "GetNamedPipeHandleStateW" (ByVal hNamedPipe As LongPtr, lpState As PipeModeFlags, lpCurInstances As Long, lpMaxCollectionCount As Long, lpCollectionDataTimeout As Long, ByVal lpUserName As String, ByVal nMaxUserNameSize As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeServerProcessId Lib "kernel32" (ByVal Pipe As LongPtr, ServerProcessId As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeServerSessionId Lib "kernel32" (ByVal Pipe As LongPtr, ServerSessionId As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeClientProcessId Lib "kernel32" (ByVal Pipe As LongPtr, ClientProcessId As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeClientSessionId Lib "kernel32" (ByVal Pipe As LongPtr, ClientSessionId As Long) As BOOL


Public Enum HandleInfoFlags
    HANDLE_FLAG_INHERIT = &H00000001
    HANDLE_FLAG_PROTECT_FROM_CLOSE = &H00000002
End Enum
'handleapi.h 100% coverage
Public Declare PtrSafe Function CloseHandle Lib "kernel32" (ByVal hObject As LongPtr) As BOOL
Public Declare PtrSafe Function DuplicateHandle Lib "kernel32" (ByVal hSourceProcessHandle As LongPtr, ByVal hSourceHandle As LongPtr, ByVal hTargetProcessHandle As LongPtr, lpTargetHandle As LongPtr, [TypeHint(GenericRights, StandardAccessTypes)] ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal dwOptions As DuplicateObjectOptions) As Long
Public Declare PtrSafe Function CompareObjectHandles Lib "kernelbase" (ByVal hFirstObjectHandle As LongPtr, ByVal hSecondObjectHandle As LongPtr) As BOOL
Public Declare PtrSafe Function SetHandleInformation Lib "kernel32" (ByVal hObject As LongPtr, ByVal dwMask As HandleInfoFlags, ByVal dwFlags As HandleInfoFlags) As BOOL
Public Declare PtrSafe Function GetHandleInformation Lib "kernel32" (ByVal hObject As LongPtr, lpdwFlags As HandleInfoFlags) As BOOL



Public Declare PtrSafe Function GetPhysicallyInstalledSystemMemory Lib "kernel32" (TotalMemoryInKilobytes As LongLong) As BOOL
Public Declare PtrSafe Function QueryPerformanceCounter Lib "kernel32" (lpPerformanceCount As LongLong) As BOOL
Public Declare PtrSafe Function QueryPerformanceFrequency Lib "kernel32" (lpFrequency As LongLong) As BOOL
Public Declare PtrSafe Function GetLogicalDriveStringsA Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function GetLogicalDriveStringsW Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr) As Long
Public DeclareWide PtrSafe Function GetLogicalDriveStrings Lib "kernel32" Alias "GetLogicalDriveStringsW" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function GetLogicalDrives Lib "kernel32" () As Long
Public DeclareWide PtrSafe Function GetDriveType Lib "kernel32" Alias "GetDriveTypeW" (Optional ByVal lpRootPathName As String) As DriveTypes
Public Declare PtrSafe Function GetDriveTypeW Lib "kernel32" (Optional ByVal lpRootPathName As LongPtr) As DriveTypes




[Description("⚠️ **WARNING:** This function is deprecated.")]
Public Declare PtrSafe Function GetVersion Lib "kernel32" () As Long
[Description("⚠️ **WARNING:** This function will indicate Windows 8.1 unless you supply an application manifest targeting Windows 10.")]
Public DeclareWide PtrSafe Function GetVersionEx Lib "kernel32" Alias "GetVersionExW" (lpVersionInformation As OSVERSIONINFOEX) As BOOL
[Description("⚠️ **WARNING:** This function will indicate Windows 8.1 unless you supply an application manifest targeting Windows 10.")]
Public Declare PtrSafe Function GetVersionExW Lib "kernel32" (lpVersionInformation As OSVERSIONINFOEXW) As BOOL
[Description("⚠️ **WARNING:** This function will indicate Windows 8.1 unless you supply an application manifest targeting Windows 10.")]
Public Declare PtrSafe Function GetVersionExA Lib "kernel32" (lpVersionInformation As OSVERSIONINFOEXA) As BOOL
Public Declare PtrSafe Function GetProductInfo Lib "kernel32" (ByVal dwOSMajorVersion As Long, ByVal dwOSMinorVersion As Long, ByVal dwSpMajorVersion As Long, ByVal dwSpMinorVersion As Long, pdwReturnedProductInfo As WINVER_PRODUCT_TYPES) As BOOL
Public Declare PtrSafe Function IsNativeVhdBoot Lib "kernel32" (NativeVhdBoot As BOOL) As BOOL



'processsnapshot.h, 100%
Public Enum PSS_HANDLE_FLAGS
    PSS_HANDLE_NONE = &H00
    PSS_HANDLE_HAVE_TYPE = &H01
    PSS_HANDLE_HAVE_NAME = &H02
    PSS_HANDLE_HAVE_BASIC_INFORMATION = &H04
    PSS_HANDLE_HAVE_TYPE_SPECIFIC_INFORMATION = &H08
End Enum

Public Enum PSS_OBJECT_TYPE
    PSS_OBJECT_TYPE_UNKNOWN = 0
    PSS_OBJECT_TYPE_PROCESS = 1
    PSS_OBJECT_TYPE_THREAD = 2
    PSS_OBJECT_TYPE_MUTANT = 3
    PSS_OBJECT_TYPE_EVENT = 4
    PSS_OBJECT_TYPE_SECTION = 5
    '  BUGBUG WINBLUE 571662 2013-12-31 GenghisK: #ifdef this for OS after
    '  WINBLUE
    PSS_OBJECT_TYPE_SEMAPHORE = 6
End Enum

Public Enum PSS_CAPTURE_FLAGS
    PSS_CAPTURE_NONE = &H00000000
    PSS_CAPTURE_VA_CLONE = &H00000001
    PSS_CAPTURE_RESERVED_00000002 = &H00000002
    PSS_CAPTURE_HANDLES = &H00000004
    PSS_CAPTURE_HANDLE_NAME_INFORMATION = &H00000008
    PSS_CAPTURE_HANDLE_BASIC_INFORMATION = &H00000010
    PSS_CAPTURE_HANDLE_TYPE_SPECIFIC_INFORMATION = &H00000020
    PSS_CAPTURE_HANDLE_TRACE = &H00000040
    PSS_CAPTURE_THREADS = &H00000080
    PSS_CAPTURE_THREAD_CONTEXT = &H00000100
    PSS_CAPTURE_THREAD_CONTEXT_EXTENDED = &H00000200
    PSS_CAPTURE_RESERVED_00000400 = &H00000400
    PSS_CAPTURE_VA_SPACE = &H00000800
    PSS_CAPTURE_VA_SPACE_SECTION_INFORMATION = &H00001000
    PSS_CAPTURE_IPT_TRACE = &H00002000
    PSS_CAPTURE_RESERVED_00004000 = &H00004000
    PSS_CREATE_BREAKAWAY_OPTIONAL = &H04000000
    PSS_CREATE_BREAKAWAY = &H08000000
    PSS_CREATE_FORCE_BREAKAWAY = &H10000000
    PSS_CREATE_USE_VM_ALLOCATIONS = &H20000000
    PSS_CREATE_MEASURE_PERFORMANCE = &H40000000
    PSS_CREATE_RELEASE_SECTION = &H80000000
End Enum

Public Const PSS_PERF_RESOLUTION = 1000000

Public Enum PSS_QUERY_INFORMATION_CLASS
    PSS_QUERY_PROCESS_INFORMATION = 0
    PSS_QUERY_VA_CLONE_INFORMATION = 1
    PSS_QUERY_AUXILIARY_PAGES_INFORMATION = 2
    PSS_QUERY_VA_SPACE_INFORMATION = 3
    PSS_QUERY_HANDLE_INFORMATION = 4
    PSS_QUERY_THREAD_INFORMATION = 5
    PSS_QUERY_HANDLE_TRACE_INFORMATION = 6
    PSS_QUERY_PERFORMANCE_COUNTERS = 7
End Enum

Public Enum PSS_WALK_INFORMATION_CLASS
    PSS_WALK_AUXILIARY_PAGES = 0
    PSS_WALK_VA_SPACE = 1
    PSS_WALK_HANDLES = 2
    PSS_WALK_THREADS = 3
End Enum

Public Enum PSS_DUPLICATE_FLAGS
    PSS_DUPLICATE_NONE = &H00
    PSS_DUPLICATE_CLOSE_SOURCE = &H01
End Enum

Public Enum PSS_PROCESS_FLAGS
    PSS_PROCESS_FLAGS_NONE = &H00000000
    PSS_PROCESS_FLAGS_PROTECTED = &H00000001
    PSS_PROCESS_FLAGS_WOW64 = &H00000002
    PSS_PROCESS_FLAGS_RESERVED_03 = &H00000004
    PSS_PROCESS_FLAGS_RESERVED_04 = &H00000008
    PSS_PROCESS_FLAGS_FROZEN = &H00000010
End Enum

Public Type PSS_PROCESS_INFORMATION
    ExitStatus As Long
    PebBaseAddress As LongPtr
    AffinityMask As LongPtr
    BasePriority As Long
    ProcessId As Long
    ParentProcessId As Long
    Flags As PSS_PROCESS_FLAGS
    CreateTime As FILETIME
    ExitTime As FILETIME
    KernelTime As FILETIME
    UserTime As FILETIME
    PriorityClass As Long
    PeakVirtualSize As LongPtr
    VirtualSize As LongPtr
    PageFaultCount As Long
    PeakWorkingSetSize As LongPtr
    WorkingSetSize As LongPtr
    QuotaPeakPagedPoolUsage As LongPtr
    QuotaPagedPoolUsage As LongPtr
    QuotaPeakNonPagedPoolUsage As LongPtr
    QuotaNonPagedPoolUsage As LongPtr
    PagefileUsage As LongPtr
    PeakPagefileUsage As LongPtr
    PrivateUsage As LongPtr
    ExecuteFlags As Long
    ImageFileName(0 To (MAX_PATH - 1)) As Integer
End Type

Public Type PSS_VA_CLONE_INFORMATION
    VaCloneHandle As LongPtr
End Type

Public Type PSS_AUXILIARY_PAGES_INFORMATION
    AuxPagesCaptured As Long
End Type

Public Type PSS_VA_SPACE_INFORMATION
    RegionCount As Long
End Type

Public Type PSS_HANDLE_INFORMATION
    HandlesCaptured As Long
End Type

Public Type PSS_THREAD_INFORMATION
    ThreadsCaptured As Long
    ContextLength As Long
End Type

Public Type PSS_HANDLE_TRACE_INFORMATION
    SectionHandle As LongPtr
    Size As Long
End Type

Public Type PSS_PERFORMANCE_COUNTERS
    TotalCycleCount As LongLong
    TotalWallClockPeriod As LongLong
    VaCloneCycleCount As LongLong
    VaCloneWallClockPeriod As LongLong
    VaSpaceCycleCount As LongLong
    VaSpaceWallClockPeriod As LongLong
    AuxPagesCycleCount As LongLong
    AuxPagesWallClockPeriod As LongLong
    HandlesCycleCount As LongLong
    HandlesWallClockPeriod As LongLong
    ThreadsCycleCount As LongLong
    ThreadsWallClockPeriod As LongLong
End Type

Public Type PSS_AUXILIARY_PAGE_ENTRY
    Address As LongPtr 'void*
    BasicInformation As MEMORY_BASIC_INFORMATION
    CaptureTime As FILETIME
    PageContents As LongPtr 'void*
    PageSize As Long
End Type

Public Type PSS_VA_SPACE_ENTRY
    BaseAddress As LongPtr 'void*
    AllocationBase As LongPtr 'void*
    AllocationProtect As MemProtectFlags
    RegionSize As LongPtr
    State As MemAllocType
    Protect As MemProtectFlags
    Type As MemAllocType
    TimeDateStamp As Long ' IMAGE_NT_HEADERS.FileHeader.TimeDateStamp
    SizeOfImage As Long ' IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage
    ImageBase As LongPtr 'void* ' IMAGE_NT_HEADERS.OptionalHeader.ImageBase
    CheckSum As Long ' IMAGE_NT_HEADERS.OptionalHeader.CheckSum
    MappedFileNameLength As Integer
    MappedFileName As LongPtr '*wchar_t const ' valid for life time of walk marker
End Type

[Description("Custom types are provided for the union options until supported. You can copy the contents of TypeSpecificInformation to types named for their union member; e.g. PSS_HANDLE_PROCESS, PSS_HANDLE_THREAD, for the Process and Thread sections, respectively.")]
Public Type PSS_HANDLE_ENTRY
    Handle As LongPtr
    Flags As PSS_HANDLE_FLAGS
    ObjectType As PSS_OBJECT_TYPE
    CaptureTime As FILETIME
    ' Object basic information.
    Attributes As Long
    GrantedAccess As Long
    HandleCount As Long
    PointerCount As Long
    PagedPoolCharge As Long
    NonPagedPoolCharge As Long
    CreationTime As FILETIME
    TypeNameLength As Integer
    TypeName As LongPtr 'wchar_t const ' valid for life time of walk marker
    ObjectNameLength As Integer
    ObjectName As LongPtr 'wchar_t const ' valid for life time of walk marker
    #If Win64 Then
    TypeSpecificInformation(47) As Byte
    #Else
    pad As Long 'correct for 8 byte alignment because of Section.LARGE_INTEGER
    TypeSpecificInformation(31) As Byte
    #End If
    ' union
    ' {
        ' // Valid for ObjectType = PSS_OBJECT_TYPE_PROCESS.
        ' struct
        ' {
            ' DWORD ExitStatus;
            ' void* PebBaseAddress;
            ' ULONG_PTR AffinityMask;
            ' LONG BasePriority;
            ' DWORD ProcessId;
            ' DWORD ParentProcessId;
            ' DWORD Flags;
        ' } Process;
        ' // Valid for ObjectType = PSS_OBJECT_TYPE_THREAD.
        ' struct
        ' {
            ' DWORD ExitStatus;
            ' void* TebBaseAddress;
            ' DWORD ProcessId;
            ' DWORD ThreadId;
            ' ULONG_PTR AffinityMask;
            ' int Priority;
            ' int BasePriority;
            ' void* Win32StartAddress;
        ' } Thread;
        ' // Valid for ObjectType = PSS_OBJECT_TYPE_MUTANT.
        ' struct
        ' {
            ' LONG CurrentCount;
            ' BOOL Abandoned;
            ' DWORD OwnerProcessId;
            ' DWORD OwnerThreadId;
        ' } Mutant;
        ' // Valid for ObjectType = PSS_OBJECT_TYPE_EVENT.
        ' struct
        ' {
            ' BOOL ManualReset;
            ' BOOL Signaled;
        ' } Event;
        ' // Valid for ObjectType = PSS_OBJECT_TYPE_SECTION.
        ' struct
        ' {
            ' void* BaseAddress;
            ' DWORD AllocationAttributes;
            ' LARGE_INTEGER MaximumSize;
        ' } Section;
        ' // Valid for ObjectType = PSS_OBJECT_TYPE_SEMAPHORE.

        ' struct
        ' {
            ' LONG CurrentCount;
            ' LONG MaximumCount;
        ' } Semaphore;
    ' } TypeSpecificInformation;
End Type

Public Type PSS_HANDLE_PROCESS
    ExitStatus As Long
    PebBaseAddress As LongPtr 'void*
    AffinityMask As LongPtr
    BasePriority As Long
    ProcessId As Long
    ParentProcessId As Long
    Flags As Long
End Type
Public Type PSS_HANDLE_THREAD
    ExitStatus As Long
    TebBaseAddress As LongPtr 'void*
    ProcessId As Long
    ThreadId As Long
    AffinityMask As LongPtr
    Priority As Long
    BasePriority As Long
    Win32StartAddress As LongPtr 'void*
End Type
Public Type PSS_HANDLE_SEMAHORE
    CurrentCount As Long
    MaximumCount As Long
End Type
Public Type PSS_HANDLE_SECTION
    BaseAddress As LongPtr
    AllocationAttributes As Long
    MaximumSize As LARGE_INTEGER
End Type
Public Type PSS_HANDLE_EVENT
    ManualReset As BOOL
    Signaled As BOOL
End Type
Public Type PSS_HANDLE_MUTANT
    CurrentCount As Long
    Abandoned As BOOL
    OwnerProcessId As Long
    OwnerThreadId As Long
End Type

Public Enum PSS_THREAD_FLAGS
    PSS_THREAD_FLAGS_NONE = &H0000
    PSS_THREAD_FLAGS_TERMINATED = &H0001
End Enum

Public Type PSS_THREAD_ENTRY
    ExitStatus As Long
    TebBaseAddress As LongPtr 'void*
    ProcessId As Long
    ThreadId As Long
    AffinityMask As LongPtr
    Priority As Long
    BasePriority As Long
    LastSyscallFirstArgument As LongPtr 'void*
    LastSyscallNumber As Integer
    CreateTime As FILETIME
    ExitTime As FILETIME
    KernelTime As FILETIME
    UserTime As FILETIME
    Win32StartAddress As LongPtr 'void*
    CaptureTime As FILETIME
    Flags As PSS_THREAD_FLAGS
    SuspendCount As Integer
    SizeOfContextRecord As Integer
    ContextRecord As LongPtr 'PCONTEXT ' valid for life time of walk marker
End Type

Public Type PSS_ALLOCATOR
    Context As LongPtr
    AllocRoutine As LongPtr
    FreeRoutine As LongPtr
    ' void* Context;
    ' void* (WINAPI *AllocRoutine) (_In_ void* Context, _In_ DWORD Size);
    ' void (WINAPI *FreeRoutine) (_In_ void* Context, _In_opt_ void* Address);
End Type

Public Declare PtrSafe Function PssCaptureSnapshot Lib "kernel32" (ByVal ProcessHandle As LongPtr, ByVal CaptureFlags As PSS_CAPTURE_FLAGS, ByVal ThreadContextFlags As EXCEPTION_CONTEXT_FLAGS, SnapshotHandle As LongPtr) As Long
Public Declare PtrSafe Function PssFreeSnapshot Lib "kernel32" (ByVal ProcessHandle As LongPtr, ByVal SnapshotHandle As LongPtr) As Long
Public Declare PtrSafe Function PssQuerySnapshot Lib "kernel32" (ByVal SnapshotHandle As LongPtr, ByVal InformationCLass As PSS_QUERY_INFORMATION_CLASS, Buffer As Any, ByVal BufferLength As Long) As Long
Public Declare PtrSafe Function PssWalkSnapshot Lib "kernel32" (ByVal SnapshotHandle As LongPtr, ByVal InformationCLass As PSS_WALK_INFORMATION_CLASS, ByVal WalkMarkerHandle As LongPtr, Buffer As Any, ByVal BufferLength As Long) As Long
Public Declare PtrSafe Function PssDuplicateSnapshot Lib "kernel32" (ByVal SourceProcessHandle As LongPtr, ByVal SnapshotHandle As LongPtr, ByVal TargetProcessHandle As LongPtr, TargetSnapshotHandle As LongPtr, Optional ByVal Flags As PSS_DUPLICATE_FLAGS) As Long
Public Declare PtrSafe Function PssWalkMarkerCreate Lib "kernel32" (Allocator As PSS_ALLOCATOR, WalkMarkerHandle As LongPtr) As Long
Public Declare PtrSafe Function PssWalkMarkerFree Lib "kernel32" (ByVal WalkMarkerHandle As LongPtr) As Long
Public Declare PtrSafe Function PssWalkMarkerGetPosition Lib "kernel32" (ByVal WalkMarkerHandle As LongPtr, Position As LongPtr) As Long
Public Declare PtrSafe Function PssWalkMarkerSetPosition Lib "kernel32" (ByVal WalkMarkerHandle As LongPtr, ByVal Position As LongPtr) As Long
Public Declare PtrSafe Function PssWalkMarkerSeekToBeginning Lib "kernel32" (ByVal WalkMarkerHandle As LongPtr) As Long






Public Delegate Function ApplicationRecoveryCallback (ByVal pvParameter As LongPtr) As Long
Public Const RECOVERY_DEFAULT_PING_INTERVAL  = 5000
Public Const RECOVERY_MAX_PING_INTERVAL  = (5 * 60 * 1000)
Public Const RESTART_MAX_CMD_LINE  = 1024
Public Enum RegisterRestartFlags
    RESTART_NO_CRASH = 1
'  Do not restart the process for termination due to application hangs
    RESTART_NO_HANG = 2
'  Do not restart the process for termination due to patch installations
    RESTART_NO_PATCH = 4
'  Do not restart the process when the system is rebooted due to patch installations
    RESTART_NO_REBOOT = 8
End Enum
Public Declare PtrSafe Function RegisterApplicationRestart Lib "kernel32" (ByVal pwzCommandLine As LongPtr, ByVal dwFlags As RegisterRestartFlags) As Long
Public DeclareWide PtrSafe Function RegisterApplicationRestart Lib "kernel32" (ByVal pwzCommandLine As String, ByVal dwFlags As RegisterRestartFlags) As Long
Public Declare PtrSafe Function UnregisterApplicationRestart Lib "kernel32" () As Long
Public DeclareWide PtrSafe Function GetApplicationRestartSettings Lib "kernel32" (ByVal hProcess As LongPtr, ByVal pwzCommandLine As String, pcchSize As Long, pdwFlags As RegisterRestartFlags) As Long
' #If WINDEVLIB_NO_DELEGATES Then
Public DeclareWide PtrSafe Function RegisterApplicationRecoveryCallback Lib "kernel32" (ByVal pRecoveryCallback As LongPtr, pvParameter As Any, ByVal dwPingInterval As Long, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function GetApplicationRecoveryCallback Lib "kernel32" (ByVal hProcess As LongPtr, pRecoveryCallback As LongPtr, ppvParameter As LongPtr, pdwPingInterval As Long, pdwFlags As Long) As Long
' #Else
' Public DeclareWide PtrSafe Function RegisterApplicationRecoveryCallback Lib "kernel32" (ByVal pRecoveryCallback As ApplicationRecoveryCallback, pvParameter As Any, ByVal dwPingInterval As Long, ByVal dwFlags As Long) As Long
' Public Declare PtrSafe Function GetApplicationRecoveryCallback Lib "kernel32" (ByVal hProcess As LongPtr, pRecoveryCallback As ApplicationRecoveryCallback, ppvParameter As LongPtr, pdwPingInterval As Long, pdwFlags As Long) As Long
' #End If
Public Declare PtrSafe Function UnregisterApplicationRecoveryCallback Lib "kernel32" () As Long
Public Declare PtrSafe Function ApplicationRecoveryInProgress Lib "kernel32" (pbCancelled As BOOL) As Long
Public Declare PtrSafe Sub ApplicationRecoveryFinished Lib "kernel32" (ByVal bSuccess As BOOL)

Public Declare PtrSafe Function GetDiskFreeSpaceA Lib "kernel32" (ByVal lpRootPathName As String, lpSectorsPerCluster As Long, lpBytesPerSector As Long, lpNumberOfFreeClusters As Long, lpTotalNumberOfClusters As Long) As BOOL
Public Declare PtrSafe Function GetDiskFreeSpaceW Lib "kernel32" (ByVal lpRootPathName As LongPtr, lpSectorsPerCluster As Long, lpBytesPerSector As Long, lpNumberOfFreeClusters As Long, lpTotalNumberOfClusters As Long) As BOOL
Public DeclareWide PtrSafe Function GetDiskFreeSpace Lib "kernel32" Alias "GetDiskFreeSpaceW" (ByVal lpRootPathName As String, lpSectorsPerCluster As Long, lpBytesPerSector As Long, lpNumberOfFreeClusters As Long, lpTotalNumberOfClusters As Long) As BOOL
Public Declare PtrSafe Function GetDiskFreeSpaceExA Lib "kernel32" (Optional ByVal lpDirectoryName As String, Optional lpFreeBytesAvailableToCaller As LongLong, Optional lpTotalNumberOfBytes As LongLong, Optional lpTotalNumberOfFreeBytes As LongLong) As BOOL
Public Declare PtrSafe Function GetDiskFreeSpaceExW Lib "kernel32" (Optional ByVal lpDirectoryName As LongPtr, Optional lpFreeBytesAvailableToCaller As LongLong, Optional lpTotalNumberOfBytes As LongLong, Optional lpTotalNumberOfFreeBytes As LongLong) As BOOL
Public DeclareWide PtrSafe Function GetDiskFreeSpaceEx Lib "kernel32" Alias "GetDiskFreeSpaceExW" (Optional ByVal lpDirectoryName As String, Optional lpFreeBytesAvailableToCaller As LongLong, Optional lpTotalNumberOfBytes As LongLong, Optional lpTotalNumberOfFreeBytes As LongLong) As BOOL
[Description("This function is only available on Windows 10 17763 and newer")]
Public Declare PtrSafe Function GetDiskSpaceInformationA Lib "kernel32" (ByVal rootPath As String, diskSpaceInfo As DISK_SPACE_INFORMATION) As Long
[Description("This function is only available on Windows 10 17763 and newer")]
Public Declare PtrSafe Function GetDiskSpaceInformationW Lib "kernel32" (ByVal rootPath As LongPtr, diskSpaceInfo As DISK_SPACE_INFORMATION) As Long
[Description("This function is only available on Windows 10 17763 and newer")]
Public DeclareWide PtrSafe Function GetDiskSpaceInformation Lib "kernel32" Alias "GetDiskSpaceInformationW" (ByVal rootPath As String, diskSpaceInfo As DISK_SPACE_INFORMATION) As Long
Public Type DISK_SPACE_INFORMATION
    ActualTotalAllocationUnits As LongLong
    ActualAvailableAllocationUnits As LongLong
    ActualPoolUnavailableAllocationUnits As LongLong
    CallerTotalAllocationUnits As LongLong
    CallerAvailableAllocationUnits As LongLong
    CallerPoolUnavailableAllocationUnits As LongLong
    UsedAllocationUnits As LongLong
    TotalReservedAllocationUnits As LongLong
    VolumeStorageReserveAllocationUnits As LongLong
    AvailableCommittedAllocationUnits As LongLong
    PoolAvailableAllocationUnits As LongLong
    SectorsPerAllocationUnit As Long
    BytesPerSector As Long
End Type

Public Enum PipeOpenMode
    PIPE_ACCESS_DUPLEX = &H3
    PIPE_ACCESS_INBOUND = &H1
    PIPE_ACCESS_OUTBOUND = &H2
End Enum
Public Enum PipeEndFlags
    PIPE_CLIENT_END = &H00000000
    PIPE_SERVER_END = &H00000001
End Enum
Public Enum PipeModeFlags
    PIPE_WAIT = &H00000000
    PIPE_NOWAIT = &H00000001
    PIPE_READMODE_BYTE = &H00000000
    PIPE_READMODE_MESSAGE = &H00000002
    PIPE_TYPE_BYTE = &H00000000
    PIPE_TYPE_MESSAGE = &H00000004
    PIPE_ACCEPT_REMOTE_CLIENTS = &H00000000
    PIPE_REJECT_REMOTE_CLIENTS = &H00000008
End Enum
Public Const PIPE_UNLIMITED_INSTANCES    = 255

Public Type PROCESSOR_NUMBER
    Group As Integer
    Number As Byte
    Reserved As Byte
End Type

Public Enum DriveTypes
    DRIVE_UNKNOWN
    DRIVE_NO_ROOT_DIR
    DRIVE_REMOVABLE
    DRIVE_FIXED
    DRIVE_REMOTE
    DRIVE_CDROM
    DRIVE_RAMDISK
End Enum

Public Enum DDD_Flags
    DDD_RAW_TARGET_PATH = &H00000001
    DDD_REMOVE_DEFINITION = &H00000002
    DDD_EXACT_MATCH_ON_REMOVE = &H00000004
    DDD_NO_BROADCAST_SYSTEM = &H00000008
    DDD_LUID_BROADCAST_DRIVE = &H00000010
End Enum


Public Enum FileMoveMethods
    FILE_BEGIN
    FILE_CURRENT
    FILE_END
End Enum

Public Enum VersionInfoConditions
    VER_EQUAL = 1
    VER_GREATER = 2
    VER_GREATER_EQUAL = 3
    VER_LESS = 4
    VER_LESS_EQUAL = 5
    VER_AND = 6
    VER_OR = 7
    VER_CONDITION_MASK = 7
    VER_NUM_BITS_PER_CONDITION_MASK = 3
End Enum
Public Enum VersionTypeMask
    VER_MINORVERSION = &H0000001
    VER_MAJORVERSION = &H0000002
    VER_BUILDNUMBER = &H0000004
    VER_PLATFORMID = &H0000008
    VER_SERVICEPACKMINOR = &H0000010
    VER_SERVICEPACKMAJOR = &H0000020
    VER_SUITENAME = &H0000040
    VER_PRODUCT_TYPE = &H0000080
End Enum


Public Enum VERSION_PLATFORM
    VER_PLATFORM_WIN32s = 0
    VER_PLATFORM_WIN32_WINDOWS = 1
    VER_PLATFORM_WIN32_NT = 2
End Enum

Public Enum VERSION_PRODUCT_TYPE
    VER_NT_WORKSTATION = &H0000001
    VER_NT_DOMAIN_CONTROLLER = &H0000002
    VER_NT_SERVER = &H0000003
End Enum

Public Type OSVERSIONINFOW
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
End Type
Public Type OSVERSIONINFOEXW
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
    wServicePackMajor As Integer
    wServicePackMinor As Integer
    /* [ TypeHint(VER_SUITE_VALUES) ] */ wSuiteMask As Integer
    /* [ TypeHint(VERSION_PRODUCT_TYPE) ] */ wProductType As Byte
    wReserved As Byte
End Type
'Alias OSVERSIONINFO As OSVERSIONINFOW
Public Type OSVERSIONINFO
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
End Type
'Alias OSVERSIONINFOEX As OSVERSIONINFOEXW
Public Type OSVERSIONINFOEX
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
    wServicePackMajor As Integer
    wServicePackMinor As Integer
    /* [ TypeHint(VER_SUITE_VALUES) ] */ wSuiteMask As Integer
    /* [ TypeHint(VERSION_PRODUCT_TYPE) ] */ wProductType As Byte
    wReserved As Byte
End Type
Public Type OSVERSIONINFOA
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Byte ' Maintenance string for PSS usage
End Type
Public Type OSVERSIONINFOEXA
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Byte ' Maintenance string for PSS usage
    wServicePackMajor As Integer
    wServicePackMinor As Integer
    /* [ TypeHint(VER_SUITE_VALUES) ] */ wSuiteMask As Integer
    /* [ TypeHint(VERSION_PRODUCT_TYPE) ] */ wProductType As Byte
    wReserved As Byte
End Type

Public Type RTL_OSVERSIONINFOW
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
End Type
Public Type RTL_OSVERSIONINFOEXW
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
    wServicePackMajor As Integer
    wServicePackMinor As Integer
    /* [ TypeHint(VER_SUITE_VALUES) ] */ wSuiteMask As Integer
    /* [ TypeHint(VERSION_PRODUCT_TYPE) ] */ wProductType As Byte
    wReserved As Byte
End Type
'Alias RTL_OSVERSIONINFO As RTL_OSVERSIONINFOW
Public Type RTL_OSVERSIONINFO
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
End Type
'Alias RTL_OSVERSIONINFOEX As RTL_OSVERSIONINFOEXW
Public Type RTL_OSVERSIONINFOEX
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
    wServicePackMajor As Integer
    wServicePackMinor As Integer
    /* [ TypeHint(VER_SUITE_VALUES) ] */ wSuiteMask As Integer
    /* [ TypeHint(VERSION_PRODUCT_TYPE) ] */ wProductType As Byte
    wReserved As Byte
End Type
Public Type RTL_OSVERSIONINFOA
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Byte ' Maintenance string for PSS usage
End Type
Public Type RTL_OSVERSIONINFOEXA
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Byte ' Maintenance string for PSS usage
    wServicePackMajor As Integer
    wServicePackMinor As Integer
    /* [ TypeHint(VER_SUITE_VALUES) ] */ wSuiteMask As Integer
    /* [ TypeHint(VERSION_PRODUCT_TYPE) ] */ wProductType As Byte
    wReserved As Byte
End Type




Public Enum COMM_BAUD_RATES
    CBR_110 = 110
    CBR_300 = 300
    CBR_600 = 600
    CBR_1200 = 1200
    CBR_2400 = 2400
    CBR_4800 = 4800
    CBR_9600 = 9600
    CBR_14400 = 14400
    CBR_19200 = 19200
    CBR_38400 = 38400
    CBR_56000 = 56000
    CBR_57600 = 57600
    CBR_115200 = 115200
    CBR_128000 = 128000
    CBR_256000 = 256000
End Enum

Public Enum COMM_DTR_CONTROL
    DTR_CONTROL_DISABLE = &H00
    DTR_CONTROL_ENABLE = &H01
    DTR_CONTROL_HANDSHAKE = &H02
End Enum
Public Enum COMM_RTS_CONTROL
    RTS_CONTROL_DISABLE = &H00
    RTS_CONTROL_ENABLE = &H01
    RTS_CONTROL_HANDSHAKE = &H02
    RTS_CONTROL_TOGGLE = &H03
End Enum

Public Enum COMM_PARITY
    NOPARITY = 0
    ODDPARITY = 1
    EVENPARITY = 2
    MARKPARITY = 3
    SPACEPARITY = 4
End Enum

Public Enum COMM_STOPBITS
    ONESTOPBIT = 0
    ONE5STOPBITS = 1
    TWOSTOPBITS = 2
End Enum

Public Const IGNORE = 0

Public Type DCB
    DCBlength As Long
    BaudRate As COMM_BAUD_RATES
    fBitFields As Long 'See Comments in Win32API.Txt
    wReserved As Integer
    XonLim As Integer
    XoffLim As Integer
    ByteSize As Byte
    Parity As Byte
    StopBits As Byte
    XonChar As Byte
    XoffChar As Byte
    ErrorChar As Byte
    EofChar As Byte
    EvtChar As Byte
    wReserved1 As Integer 'Reserved; Do Not Use 
End Type
' The fourteen actual DCB bit-sized data fields within the four bytes of fBitFields can be manipulated by bitwise logical And/Or operations.
' FieldName             Bit #     Description
' -----------------     -----     ------------------------------
' fBinary                 1       binary mode, no EOF check
' fParity                 2       enable parity checking
' fOutxCtsFlow            3       CTS output flow control
' fOutxDsrFlow            4       DSR output flow control
' fDtrControl             5       DTR flow control type (2 bits)
' fDsrSensitivity         7       DSR sensitivity
' fTXContinueOnXoff       8       XOFF continues Tx
' fOutX                   9       XON/XOFF out flow control
' fInX                   10       XON/XOFF in flow control
' fErrorChar             11       enable error replacement
' fNull                  12       enable null stripping
' fRtsControl            13       RTS flow control (2 bits)
' fAbortOnError          15       abort reads/writes on error
' fDummy2                16       reserved 

Public Enum COMM_ERROR_FLAGS
    CE_RXOVER = &H0001  ' Receive Queue overflow
    CE_OVERRUN = &H0002  ' Receive Overrun Error
    CE_RXPARITY = &H0004  ' Receive Parity Error
    CE_FRAME = &H0008  ' Receive Framing error
    CE_BREAK = &H0010  ' Break Detected
    CE_TXFULL = &H0100  ' TX Queue is full
    CE_PTO = &H0200  ' LPTx Timeout
    CE_IOE = &H0400  ' LPTx I/O Error
    CE_DNS = &H0800  ' LPTx Device not selected
    CE_OOP = &H1000  ' LPTx Out-Of-Paper
    CE_MODE = &H8000&  ' Requested mode unsupported
End Enum
Public Enum COMM_ERRORS
    IE_BADID = (-1)  ' Invalid or unsupported id
    IE_OPEN = (-2)  ' Device Already Open
    IE_NOPEN = (-3)  ' Device Not Open
    IE_MEMORY = (-4)  ' Unable to allocate queues
    IE_DEFAULT = (-5)  ' Error in default parameters
    IE_HARDWARE = (-10)  ' Hardware Not Present
    IE_BYTESIZE = (-11)  ' Illegal Byte Size
    IE_BAUDRATE = (-12)  ' Unsupported BaudRate
End Enum
Public Enum COMM_EVENTS
    EV_RXCHAR = &H0001  ' Any Character received
    EV_RXFLAG = &H0002  ' Received certain character
    EV_TXEMPTY = &H0004  ' Transmitt Queue Empty
    EV_CTS = &H0008  ' CTS changed state
    EV_DSR = &H0010  ' DSR changed state
    EV_RLSD = &H0020  ' RLSD changed state
    EV_BREAK = &H0040  ' BREAK received
    EV_ERR = &H0080  ' Line status error occurred
    EV_RING = &H0100  ' Ring signal detected
    EV_PERR = &H0200  ' Printer error occured
    EV_RX80FULL = &H0400  ' Receive buffer is 80 percent full
    EV_EVENT1 = &H0800  ' Provider specific event 1
    EV_EVENT2 = &H1000  ' Provider specific event 2
End Enum
Public Enum COMM_ESCAPEFUNC
    SETXOFF = 1  ' Simulate XOFF received
    SETXON = 2  ' Simulate XON received
    SETRTS = 3  ' Set RTS high
    CLRRTS = 4  ' Set RTS low
    SETDTR = 5  ' Set DTR high
    CLRDTR = 6  ' Set DTR low
    RESETDEV = 7  ' Reset device if possible
    SETBREAK = 8  ' Set the device break line.
    CLRBREAK = 9  ' Clear the device break line.
End Enum
Public Enum COMM_PURGEF_FLAGS
    PURGE_TXABORT = &H0001  ' Kill the pending/current writes to the comm port.
    PURGE_RXABORT = &H0002  ' Kill the pending/current reads to the comm port.
    PURGE_TXCLEAR = &H0004  ' Kill the transmit queue if there.
    PURGE_RXCLEAR = &H0008  ' Kill the typeahead buffer if there.
    LPTx = &H80  ' Set if ID is for LPT device
End Enum
Public Enum COMM_MODEM_STATUS
    MS_CTS_ON = (&H0010)
    MS_DSR_ON = (&H0020)
    MS_RING_ON = (&H0040)
    MS_RLSD_ON = (&H0080)
End Enum

Public Type COMMTIMEOUTS
    ReadIntervalTimeout As Long ' Maximum time between read chars.
    ReadTotalTimeoutMultiplier As Long   ' Multiplier of characters.
    ReadTotalTimeoutConstant As Long ' Constant in milliseconds.
    WriteTotalTimeoutMultiplier As Long ' Multiplier of characters.
    WriteTotalTimeoutConstant As Long ' Constant in milliseconds.
End Type

[Description("NOTE: This needs to be put into a byte array followed by wcProviderData")]
Public Type COMMCONFIG
    dwSize As Long '* Size of the entire struct
    wVersion As Integer '* version of the structure
    wReserved As Integer '* alignment
    dcb As DCB '* device control block
    dwProviderSubType As Long '* ordinal value for identifying provider-defined data structure format*/
    dwProviderOffset As Long '* Specifies the offset of provider specific data field in bytes from the start
    dwProviderSize As Long '* size of the provider-specific data field
    wcProviderData(0) As Integer '* provider-specific data
End Type

Public Type COMSTAT
    Bitfield As Long
    cbInQue As Long
    cbOutQue As Long
End Type
/*
typedef struct _COMSTAT {
DWORD fCtsHold : 1;
DWORD fDsrHold : 1;
DWORD fRlsdHold : 1;
DWORD fXoffHold : 1;
DWORD fXoffSent : 1;
DWORD fEof : 1;
DWORD fTxim : 1;
DWORD fReserved : 25;
DWORD cbInQue;
DWORD cbOutQue;
} COMSTAT, *LPCOMSTAT;
*/

Public Const COMMPROP_INITIALIZED = (&HE73CF52E)

Public Enum COMM_BAUD
    BAUD_075 = (&H00000001)
    BAUD_110 = (&H00000002)
    BAUD_134_5 = (&H00000004)
    BAUD_150 = (&H00000008)
    BAUD_300 = (&H00000010)
    BAUD_600 = (&H00000020)
    BAUD_1200 = (&H00000040)
    BAUD_1800 = (&H00000080)
    BAUD_2400 = (&H00000100)
    BAUD_4800 = (&H00000200)
    BAUD_7200 = (&H00000400)
    BAUD_9600 = (&H00000800)
    BAUD_14400 = (&H00001000)
    BAUD_19200 = (&H00002000)
    BAUD_38400 = (&H00004000)
    BAUD_56K = (&H00008000&)
    BAUD_128K = (&H00010000)
    BAUD_115200 = (&H00020000)
    BAUD_57600 = (&H00040000)
    BAUD_USER = (&H10000000)
End Enum
Public Enum COMM_PROV_SUBTYPE
    PST_UNSPECIFIED = (&H00000000)
    PST_RS232 = (&H00000001)
    PST_PARALLELPORT = (&H00000002)
    PST_RS422 = (&H00000003)
    PST_RS423 = (&H00000004)
    PST_RS449 = (&H00000005)
    PST_MODEM = (&H00000006)
    PST_FAX = (&H00000021)
    PST_SCANNER = (&H00000022)
    PST_NETWORK_BRIDGE = (&H00000100)
    PST_LAT = (&H00000101)
    PST_TCPIP_TELNET = (&H00000102)
    PST_X25 = (&H00000103)
End Enum
Public Enum COMM_PROV_SETTABLE_DATABITS
    DATABITS_5 = (&H0001)
    DATABITS_6 = (&H0002)
    DATABITS_7 = (&H0004)
    DATABITS_8 = (&H0008)
    DATABITS_16 = (&H0010)
    DATABITS_16X = (&H0020)
End Enum

Public Enum COMM_PROV_CAPABILITY
    PCF_DTRDSR = (&H0001)
    PCF_RTSCTS = (&H0002)
    PCF_RLSD = (&H0004)
    PCF_PARITY_CHECK = (&H0008)
    PCF_XONXOFF = (&H0010)
    PCF_SETXCHAR = (&H0020)
    PCF_TOTALTIMEOUTS = (&H0040)
    PCF_INTTIMEOUTS = (&H0080)
    PCF_SPECIALCHARS = (&H0100)
    PCF_16BITMODE = (&H0200)
End Enum
Public Enum COMM_PROV_SETTABLE_PARAMS
    SP_PARITY = (&H0001)
    SP_BAUD = (&H0002)
    SP_DATABITS = (&H0004)
    SP_STOPBITS = (&H0008)
    SP_HANDSHAKING = (&H0010)
    SP_PARITY_CHECK = (&H0020)
    SP_RLSD = (&H0040)
End Enum
Public Enum COMM_PROV_SETTABLE_STOPPARITY
    STOPBITS_10 = (&H0001)
    STOPBITS_15 = (&H0002)
    STOPBITS_20 = (&H0004)
    PARITY_NONE = (&H0100)
    PARITY_ODD = (&H0200)
    PARITY_EVEN = (&H0400)
    PARITY_MARK = (&H0800)
    PARITY_SPACE = (&H1000)
End Enum
Public Enum COMM_SERVICE
    SP_SERIALCOMM = 1
End Enum

Public Type COMMPROP
    wPacketLength As Integer
    wPacketVersion As Integer
    dwServiceMask As COMM_SERVICE
    dwReserved1 As Long
    dwMaxTxQueue As Long
    dwMaxRxQueue As Long
    dwMaxBaud As COMM_BAUD
    dwProvSubType As COMM_PROV_SUBTYPE
    dwProvCapabilities As COMM_PROV_CAPABILITY
    dwSettableParams As COMM_PROV_SETTABLE_PARAMS
    dwSettableBaud As COMM_BAUD
    /* [ TypeHint(COMM_PROV_SETTABLE_DATABITS) ] */ wSettableData As Integer
    /* [ TypeHint(COMM_PROV_SETTABLE_STOPPARITY) ] */ wSettableStopParity As Integer
    dwCurrentTxQueue As Long
    dwCurrentRxQueue As Long
    dwProvSpec1 As Long
    dwProvSpec2 As Long
    wcProvChar(0 To 0) As Integer
End Type

Public Enum MODEM_DIAL_OPTIONS
    DIALOPTION_BILLING = &H00000040  ' Supports wait for bong "$"
    DIALOPTION_QUIET = &H00000080  ' Supports wait for quiet "@"
    DIALOPTION_DIALTONE = &H00000100  ' Supports wait for dial tone "W
End Enum
Public Enum MODEM_DEVCAPS_DIAL_VOLUME
    MDMVOLFLAG_LOW = &H00000001
    MDMVOLFLAG_MEDIUM = &H00000002
    MDMVOLFLAG_HIGH = &H00000004
End Enum
Public Enum MODEM_SPEAKER_VOLUME
    MDMVOL_LOW = &H00000000
    MDMVOL_MEDIUM = &H00000001
    MDMVOL_HIGH = &H00000002
End Enum
Public Enum MODEM_DEVCAPS_SPEAKERMODE
    MDMSPKRFLAG_OFF = &H00000001
    MDMSPKRFLAG_DIAL = &H00000002
    MDMSPKRFLAG_ON = &H00000004
    MDMSPKRFLAG_CALLSETUP = &H00000008
End Enum
Public Enum MODEM_SETTINGS_SPEAKERMODE
    MDMSPKR_OFF = &H00000000
    MDMSPKR_DIAL = &H00000001
    MDMSPKR_ON = &H00000002
    MDMSPKR_CALLSETUP = &H00000003
End Enum
Public Enum MODEM_OPTIONS
    MDM_COMPRESSION = &H00000001
    MDM_ERROR_CONTROL = &H00000002
    MDM_FORCED_EC = &H00000004
    MDM_CELLULAR = &H00000008
    MDM_FLOWCONTROL_HARD = &H00000010
    MDM_FLOWCONTROL_SOFT = &H00000020
    MDM_CCITT_OVERRIDE = &H00000040
    MDM_SPEED_ADJUST = &H00000080
    MDM_TONE_DIAL = &H00000100
    MDM_BLIND_DIAL = &H00000200
    MDM_V23_OVERRIDE = &H00000400
    MDM_DIAGNOSTICS = &H00000800
End Enum
Public Enum MODEM_EXTENDED_OPTIONS
    MDM_MASK_BEARERMODE = &H0000f000&
    MDM_SHIFT_BEARERMODE = 12
    MDM_MASK_PROTOCOLID = &H000f0000
    MDM_SHIFT_PROTOCOLID = 16
    MDM_MASK_PROTOCOLDATA = &H0ff00000
    MDM_SHIFT_PROTOCOLDATA = 20
'  PROTOCOLINFO is the union of PROTOCOLID and PROTOCOLDATA ...
    MDM_MASK_PROTOCOLINFO = (MDM_MASK_PROTOCOLID Or MDM_MASK_PROTOCOLDATA)
    MDM_SHIFT_PROTOCOLINFO = MDM_SHIFT_PROTOCOLID
'  EXTENDEDINFO is the union of BEARERMODE and PROTOCOLINFO
    MDM_MASK_EXTENDEDINFO = (MDM_MASK_BEARERMODE Or MDM_MASK_PROTOCOLINFO)
    MDM_SHIFT_EXTENDEDINFO = MDM_SHIFT_BEARERMODE
End Enum
Public Enum MODEM_BEARER_MODES
    MDM_BEARERMODE_ANALOG = &H0
    MDM_BEARERMODE_ISDN = &H1
    MDM_BEARERMODE_GSM = &H2
End Enum
Public Enum MODEM_PROTOCOLS
    MDM_PROTOCOLID_DEFAULT = &H0
    MDM_PROTOCOLID_HDLCPPP = &H1
    MDM_PROTOCOLID_V128 = &H2
    MDM_PROTOCOLID_X75 = &H3
    MDM_PROTOCOLID_V110 = &H4
    MDM_PROTOCOLID_V120 = &H5
    MDM_PROTOCOLID_AUTO = &H6  ' Auto protocol detection.
    MDM_PROTOCOLID_ANALOG = &H7  ' Applicable only to GSM
    MDM_PROTOCOLID_GPRS = &H8
    MDM_PROTOCOLID_PIAFS = &H9
End Enum
Public Enum MODEM_PROTOCOL_HDLCPP
    MDM_SHIFT_HDLCPPP_SPEED = &H0
    MDM_MASK_HDLCPPP_SPEED = &H7  ' 3 bits
    MDM_HDLCPPP_SPEED_DEFAULT = &H0
    MDM_HDLCPPP_SPEED_64K = &H1
    MDM_HDLCPPP_SPEED_56K = &H2
    MDM_SHIFT_HDLCPPP_AUTH = &H3
    MDM_MASK_HDLCPPP_AUTH = (&H7 << 3)  ' 3 bits
    MDM_HDLCPPP_AUTH_DEFAULT = &H0
    MDM_HDLCPPP_AUTH_NONE = &H1
    MDM_HDLCPPP_AUTH_PAP = &H2
    MDM_HDLCPPP_AUTH_CHAP = &H3
    MDM_HDLCPPP_AUTH_MSCHAP = &H4
    MDM_SHIFT_HDLCPPP_ML = &H6
    MDM_MASK_HDLCPPP_ML = (&H3 << 6)  ' 2 bits
    MDM_HDLCPPP_ML_DEFAULT = &H0
    MDM_HDLCPPP_ML_NONE = &H1
    MDM_HDLCPPP_ML_2 = &H2
End Enum
Public Enum MODEM_PROTOCOL_V120
    MDM_SHIFT_V120_SPEED = &H0
    MDM_MASK_V120_SPEED = &H7  ' 3 bits
    MDM_V120_SPEED_DEFAULT = &H0
    MDM_V120_SPEED_64K = &H1
    MDM_V120_SPEED_56K = &H2
    MDM_SHIFT_V120_ML = &H6
    MDM_MASK_V120_ML = (&H3 << 6)  ' 2 bits
    MDM_V120_ML_DEFAULT = &H0
    MDM_V120_ML_NONE = &H1
    MDM_V120_ML_2 = &H2
End Enum
Public Enum MODEM_PROTOCOL_X75
    MDM_SHIFT_X75_DATA = &H0
    MDM_MASK_X75_DATA = &H7  ' 3 bits
    MDM_X75_DATA_DEFAULT = &H0
    MDM_X75_DATA_64K = &H1
    MDM_X75_DATA_128K = &H2
    MDM_X75_DATA_T_70 = &H3
    MDM_X75_DATA_BTX = &H4
End Enum
Public Enum MODEM_PROTOCOL_V110
    MDM_SHIFT_V110_SPEED = &H0
    MDM_MASK_V110_SPEED = &Hf  ' 4 bits
    MDM_V110_SPEED_DEFAULT = &H0
    MDM_V110_SPEED_1DOT2K = &H1
    MDM_V110_SPEED_2DOT4K = &H2
    MDM_V110_SPEED_4DOT8K = &H3
    MDM_V110_SPEED_9DOT6K = &H4
    MDM_V110_SPEED_12DOT0K = &H5
    MDM_V110_SPEED_14DOT4K = &H6
    MDM_V110_SPEED_19DOT2K = &H7
    MDM_V110_SPEED_28DOT8K = &H8
    MDM_V110_SPEED_38DOT4K = &H9
    MDM_V110_SPEED_57DOT6K = &HA
End Enum
Public Enum MODEM_PROTOCOL_AUTO
    MDM_SHIFT_AUTO_SPEED = &H0
    MDM_MASK_AUTO_SPEED = &H7  ' 3 bits
    MDM_AUTO_SPEED_DEFAULT = &H0
    MDM_SHIFT_AUTO_ML = &H6
    MDM_MASK_AUTO_ML = (&H3 << 6)  ' 2 bits
    MDM_AUTO_ML_DEFAULT = &H0
    MDM_AUTO_ML_NONE = &H1
    MDM_AUTO_ML_2 = &H2
End Enum
Public Enum MODEM_PROTOCOL_ANALOG
    MDM_ANALOG_RLP_ON = &H0
    MDM_ANALOG_RLP_OFF = &H1
    MDM_ANALOG_V34 = &H2
End Enum
Public Enum MODEM_PROTOCOL_PIAFS
    MDM_PIAFS_INCOMING = 0
    MDM_PIAFS_OUTGOING = 1
End Enum
Public Type MODEMDEVCAPS
    dwActualSize As Long
    dwRequiredSize As Long
    dwDevSpecificOffset As Long
    dwDevSpecificSize As Long
    ' product and version identification
    dwModemProviderVersion As Long
    dwModemManufacturerOffset As Long
    dwModemManufacturerSize As Long
    dwModemModelOffset As Long
    dwModemModelSize As Long
    dwModemVersionOffset As Long
    dwModemVersionSize As Long
    ' local option capabilities
    dwDialOptions As MODEM_DIAL_OPTIONS ' bitmap of supported values
    dwCallSetupFailTimer As Long ' maximum in seconds
    dwInactivityTimeout As Long ' maximum in seconds
    dwSpeakerVolume As MODEM_DEVCAPS_DIAL_VOLUME ' bitmap of supported values
    dwSpeakerMode As MODEM_DEVCAPS_SPEAKERMODE ' bitmap of supported values
    dwModemOptions As MODEM_OPTIONS ' bitmap of supported values
    dwMaxDTERate As Long ' maximum value in bit/s
    dwMaxDCERate As Long ' maximum value in bit/s
    ' Variable portion for proprietary expansion
    abVariablePortion(0 To 0) As Byte
End Type
Public Type MODEMSETTINGS
    dwActualSize As Long
    dwRequiredSize As Long
    dwDevSpecificOffset As Long
    dwDevSpecificSize As Long
    ' static local options (read/write)
    dwCallSetupFailTimer As Long ' seconds
    dwInactivityTimeout As Long ' seconds
    dwSpeakerVolume As MODEM_SPEAKER_VOLUME ' level
    dwSpeakerMode As MODEM_SETTINGS_SPEAKERMODE ' mode
    dwPreferredModemOptions As MODEM_OPTIONS ' bitmap
    ' negotiated options (read only) for current or last call
    dwNegotiatedModemOptions As MODEM_OPTIONS ' bitmap
    dwNegotiatedDCERate As Long ' bit/s
    ' Variable portion for proprietary expansion
    abVariablePortion(0 To 0) As Byte
End Type




Public Declare PtrSafe Function SetCommState Lib "kernel32" (ByVal hFile As LongPtr, lpDCB As DCB) As BOOL
Public Declare PtrSafe Function SetCommTimeouts Lib "kernel32" (ByVal hFile As LongPtr, lpCommTimeouts As COMMTIMEOUTS) As BOOL
Public Declare PtrSafe Function GetCommState Lib "kernel32" (ByVal hFile As LongPtr, lpDCB As DCB) As BOOL
Public Declare PtrSafe Function GetCommTimeouts Lib "kernel32" (ByVal hFile As LongPtr, lpCommTimeouts As COMMTIMEOUTS) As BOOL
Public Declare PtrSafe Function PurgeComm Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwFlags As COMM_PURGEF_FLAGS) As BOOL
Public Declare PtrSafe Function BuildCommDCBA Lib "kernel32" (ByVal lpDef As String, lpDCB As DCB) As BOOL
Public Declare PtrSafe Function BuildCommDCBW Lib "kernel32" (ByVal lpDef As LongPtr, lpDCB As DCB) As BOOL
Public DeclareWide PtrSafe Function BuildCommDCB Lib "kernel32" Alias "BuildCommDCBW" (ByVal lpDef As String, lpDCB As DCB) As BOOL
Public Declare PtrSafe Function BuildCommDCBAndTimeoutsA Lib "kernel32" (ByVal lpDef As String, lpDCB As DCB, lpCommTimeouts As COMMTIMEOUTS) As BOOL
Public Declare PtrSafe Function BuildCommDCBAndTimeoutsW Lib "kernel32" (ByVal lpDef As LongPtr, lpDCB As DCB, lpCommTimeouts As COMMTIMEOUTS) As BOOL
Public DeclareWide PtrSafe Function BuildCommDCBAndTimeouts Lib "kernel32" Alias "BuildCommDCBAndTimeoutsW" (ByVal lpDef As String, lpDCB As DCB, lpCommTimeouts As COMMTIMEOUTS) As BOOL
Public Declare PtrSafe Function TransmitCommChar Lib "kernel32" (ByVal hFile As LongPtr, ByVal cChar As Byte) As BOOL
Public Declare PtrSafe Function SetCommBreak Lib "kernel32" (ByVal hFile As LongPtr) As BOOL
Public Declare PtrSafe Function SetCommMask Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwEvtMask As COMM_EVENTS) As BOOL
Public Declare PtrSafe Function ClearCommBreak Lib "kernel32" (ByVal hFile As LongPtr) As BOOL
Public Declare PtrSafe Function ClearCommError Lib "kernel32" (ByVal hFile As LongPtr, lpErrors As COMM_ERROR_FLAGS, lpStat As COMSTAT) As BOOL
Public Declare PtrSafe Function SetupComm Lib "kernel32" (ByVal hFile As Long, ByVal dwInQueue As Long, ByVal dwOutQueue As Long) As BOOL
Public Declare PtrSafe Function EscapeCommFunction Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwFunc As COMM_ESCAPEFUNC) As BOOL
Public Declare PtrSafe Function GetCommMask Lib "kernel32" (ByVal hFile As LongPtr, lpEvtMask As COMM_EVENTS) As BOOL
Public Declare PtrSafe Function GetCommProperties Lib "kernel32" (ByVal hFile As LongPtr, lpCommProp As COMMPROP) As BOOL
Public Declare PtrSafe Function GetCommModemStatus Lib "kernel32" (ByVal hFile As LongPtr, lpModemStat As COMM_MODEM_STATUS) As BOOL
Public Declare PtrSafe Function WaitCommEvent Lib "kernel32" (ByVal hFile As LongPtr, lpEvtMask As COMM_EVENTS, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function GetCommConfig Lib "kernel32" (ByVal hCommDev As LongPtr, lpCC As COMMCONFIG, lpdwSize As Long) As BOOL
Public Declare PtrSafe Function SetCommConfig Lib "kernel32" (ByVal hCommDev As LongPtr, lpCC As COMMCONFIG, ByVal dwSize As Long) As BOOL
Public Declare PtrSafe Function OpenCommPort Lib "kernelbase" (ByVal uPortNumber As Long, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwFlagsAndAttributes As Long) As LongPtr
Public Declare PtrSafe Function GetCommPorts Lib "kernelbase" (lpPortNumbers As Long, ByVal uPortNumbersCount As Long, puPortNumbersFound As Long) As Long
Public Declare PtrSafe Function GetDefaultCommConfigA Lib "kernel32" (ByVal lpszName As String, lpCC As COMMCONFIG, lpdwSize As Long) As BOOL
Public Declare PtrSafe Function GetDefaultCommConfigW Lib "kernel32" (ByVal lpszName As LongPtr, lpCC As COMMCONFIG, lpdwSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetDefaultCommConfig Lib "kernel32" Alias "GetDefaultCommConfigW" (ByVal lpszName As String, lpCC As COMMCONFIG, lpdwSize As Long) As BOOL
Public Declare PtrSafe Function SetDefaultCommConfigA Lib "kernel32" (ByVal lpszName As String, lpCC As COMMCONFIG, ByVal dwSize As Long) As BOOL
Public Declare PtrSafe Function SetDefaultCommConfigW Lib "kernel32" (ByVal lpszName As LongPtr, lpCC As COMMCONFIG, ByVal dwSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetDefaultCommConfig Lib "kernel32" Alias "SetDefaultCommConfigW" (ByVal lpszName As String, lpCC As COMMCONFIG, ByVal dwSize As Long) As BOOL
Public Declare PtrSafe Function CommConfigDialogA Lib "kernel32" (ByVal lpszName As String, ByVal hWnd As LongPtr, lpCC As COMMCONFIG) As BOOL
Public Declare PtrSafe Function CommConfigDialogW Lib "kernel32" (ByVal lpszName As LongPtr, ByVal hWnd As LongPtr, lpCC As COMMCONFIG) As BOOL
Public DeclareWide PtrSafe Function CommConfigDialog Lib "kernel32" Alias "CommConfigDialogW" (ByVal lpszName As String, ByVal hWnd As LongPtr, lpCC As COMMCONFIG) As BOOL

[Description("⚠️ **WARNING:** This is a legacy compatibility API, new applications should use CreateFile etc.")]
Public Declare PtrSafe Function _lopen Lib "kernel32" (ByVal lpPathName As String, ByVal iReadWrite As Long) As Long
[Description("⚠️ **WARNING:** This is a legacy compatibility API, new applications should use CreateFile etc.")]
Public Declare PtrSafe Function _lclose Lib "kernel32" (ByVal hFile As Long) As Long
[Description("⚠️ **WARNING:** This is a legacy compatibility API, new applications should use CreateFile etc.")]
Public Declare PtrSafe Function _lcreat Lib "kernel32" (ByVal lpPathName As String, ByVal iAttribute As Long) As Long
[Description("⚠️ **WARNING:** This is a legacy compatibility API, new applications should use CreateFile etc.")]
Public Declare PtrSafe Function _llseek Lib "kernel32" (ByVal hFile As Long, ByVal lOffset As Long, ByVal iOrigin As Long) As Long
[Description("⚠️ **WARNING:** This is a legacy compatibility API, new applications should use CreateFile etc.")]
Public Declare PtrSafe Function _lread Lib "kernel32" (ByVal hFile As Long, lpBuffer As Any, ByVal wBytes As Long) As Long
[Description("⚠️ **WARNING:** This is a legacy compatibility API, new applications should use CreateFile etc.")]
Public Declare PtrSafe Function _lwrite Lib "kernel32" (ByVal hFile As Long, ByVal lpBuffer As String, ByVal wBytes As Long) As Long

[Description("⚠️ **WARNING:** This is a legacy compatibility API, new applications should use CreateFile etc.")]
Public Declare PtrSafe Function _hread Lib "kernel32" (ByVal hFile As Long, lpBuffer As Any, ByVal lBytes As Long) As Long
[Description("⚠️ **WARNING:** This is a legacy compatibility API, new applications should use CreateFile etc.")]
Public Declare PtrSafe Function _hwrite Lib "kernel32" (ByVal hFile As Long, ByVal lpBuffer As String, ByVal lBytes As Long) As Long

#End Region

#Region "ntdll"

Public Const IMAGE_DOS_SIGNATURE  = &H5A4D  ' MZ
Public Const IMAGE_OS2_SIGNATURE  = &H454E  ' NE
Public Const IMAGE_OS2_SIGNATURE_LE  = &H454C  ' LE
Public Const IMAGE_VXD_SIGNATURE  = &H454C  ' LE
Public Const IMAGE_NT_SIGNATURE  = &H00004550  ' PE00


Public Type IMAGE_DOS_HEADER ' DOS .EXE header
    e_magic As Integer ' Magic number
    e_cblp As Integer ' Bytes on last page of file
    e_cp As Integer ' Pages in file
    e_crlc As Integer ' Relocations
    e_cparhdr As Integer ' Size of header in paragraphs
    e_minalloc As Integer ' Minimum extra paragraphs needed
    e_maxalloc As Integer ' Maximum extra paragraphs needed
    e_ss As Integer ' Initial (relative) SS value
    e_sp As Integer ' Initial SP value
    e_csum As Integer ' Checksum
    e_ip As Integer ' Initial IP value
    e_cs As Integer ' Initial (relative) CS value
    e_lfarlc As Integer ' File address of relocation table
    e_ovno As Integer ' Overlay number
    e_res(0 To 3) As Integer ' Reserved words
    e_oemid As Integer ' OEM identifier (for e_oeminfo)
    e_oeminfo As Integer ' OEM information; e_oemid specific
    e_res2(0 To 9) As Integer ' Reserved words
    e_lfanew As Long ' File address of new exe header
End Type

Public Const IMAGE_SIZEOF_FILE_HEADER            = 20
Public Enum ImageFileCharacteristics
    IMAGE_FILE_RELOCS_STRIPPED = &H0001  ' Relocation info stripped from file.
    IMAGE_FILE_EXECUTABLE_IMAGE = &H0002  ' File is executable  (i.e. no unresolved external references).
    IMAGE_FILE_LINE_NUMS_STRIPPED = &H0004  ' Line nunbers stripped from file.
    IMAGE_FILE_LOCAL_SYMS_STRIPPED = &H0008  ' Local symbols stripped from file.
    IMAGE_FILE_AGGRESIVE_WS_TRIM = &H0010  ' Aggressively trim working set
    IMAGE_FILE_LARGE_ADDRESS_AWARE = &H0020  ' App can handle >2gb addresses
    IMAGE_FILE_BYTES_REVERSED_LO = &H0080  ' Bytes of machine word are reversed.
    IMAGE_FILE_32BIT_MACHINE = &H0100  ' 32 bit word machine.
    IMAGE_FILE_DEBUG_STRIPPED = &H0200  ' Debugging info stripped from file in .DBG file
    IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP = &H0400  ' If Image is on removable media, copy and run from the swap file.
    IMAGE_FILE_NET_RUN_FROM_SWAP = &H0800  ' If Image is on Net, copy and run from the swap file.
    IMAGE_FILE_SYSTEM = &H1000  ' System File.
    IMAGE_FILE_DLL = &H2000  ' File is a DLL.
    IMAGE_FILE_UP_SYSTEM_ONLY = &H4000  ' File should only be run on a UP machine
    IMAGE_FILE_BYTES_REVERSED_HI = &H8000&  ' Bytes of machine word are reversed.
End Enum
Public Enum ImageMachineType
    IMAGE_FILE_MACHINE_UNKNOWN = 0
    IMAGE_FILE_MACHINE_TARGET_HOST = &H0001  ' Useful for indicating we want to interact with the host and not a WoW guest.
    IMAGE_FILE_MACHINE_I386 = &H014c  ' Intel 386.
    IMAGE_FILE_MACHINE_R3000 = &H0162  ' MIPS little-endian, 0x160 big-endian
    IMAGE_FILE_MACHINE_R4000 = &H0166  ' MIPS little-endian
    IMAGE_FILE_MACHINE_R10000 = &H0168  ' MIPS little-endian
    IMAGE_FILE_MACHINE_WCEMIPSV2 = &H0169  ' MIPS little-endian WCE v2
    IMAGE_FILE_MACHINE_ALPHA = &H0184  ' Alpha_AXP
    IMAGE_FILE_MACHINE_SH3 = &H01a2  ' SH3 little-endian
    IMAGE_FILE_MACHINE_SH3DSP = &H01a3
    IMAGE_FILE_MACHINE_SH3E = &H01a4  ' SH3E little-endian
    IMAGE_FILE_MACHINE_SH4 = &H01a6  ' SH4 little-endian
    IMAGE_FILE_MACHINE_SH5 = &H01a8  ' SH5
    IMAGE_FILE_MACHINE_ARM = &H01c0  ' ARM Little-Endian
    IMAGE_FILE_MACHINE_THUMB = &H01c2  ' ARM Thumb/Thumb-2 Little-Endian
    IMAGE_FILE_MACHINE_ARMNT = &H01c4  ' ARM Thumb-2 Little-Endian
    IMAGE_FILE_MACHINE_AM33 = &H01d3
    IMAGE_FILE_MACHINE_POWERPC = &H01F0  ' IBM PowerPC Little-Endian
    IMAGE_FILE_MACHINE_POWERPCFP = &H01f1
    IMAGE_FILE_MACHINE_IA64 = &H0200  ' Intel 64
    IMAGE_FILE_MACHINE_MIPS16 = &H0266  ' MIPS
    IMAGE_FILE_MACHINE_ALPHA64 = &H0284  ' ALPHA64
    IMAGE_FILE_MACHINE_MIPSFPU = &H0366  ' MIPS
    IMAGE_FILE_MACHINE_MIPSFPU16 = &H0466  ' MIPS
    IMAGE_FILE_MACHINE_AXP64 = IMAGE_FILE_MACHINE_ALPHA64
    IMAGE_FILE_MACHINE_TRICORE = &H0520  ' Infineon
    IMAGE_FILE_MACHINE_CEF = &H0CEF
    IMAGE_FILE_MACHINE_EBC = &H0EBC  ' EFI Byte Code
    IMAGE_FILE_MACHINE_AMD64 = &H8664&  ' AMD64 (K8)
    IMAGE_FILE_MACHINE_M32R = &H9041&  ' M32R little-endian
    IMAGE_FILE_MACHINE_ARM64 = &HAA64&  ' ARM64 Little-Endian
    IMAGE_FILE_MACHINE_CEE = &HC0EE&
    IMAGE_FILE_MACHINE_ARM64EC = &HA641&
    IMAGE_FILE_MACHINE_ARM64X = &HA64E&
End Enum
Public Type IMAGE_FILE_HEADER
    /* [ TypeHint(ImageMachineType) ] */ Machine As Integer
    NumberOfSections As Integer
    TimeDateStamp As Long
    PointerToSymbolTable As Long
    NumberOfSymbols As Long
    SizeOfOptionalHeader As Integer
    /* [ TypeHint(ImageFileCharacteristics) ] */ Characteristics As Integer
End Type

Public Type IMAGE_BASE_RELOCATION
    VirtualAddress As Long
    SizeOfBlock As Long
    '  WORD    TypeOffset[1];
End Type

Public Enum IMAGE_REL_NS_BASED
    IMAGE_REL_BASED_ABSOLUTE = 0
    IMAGE_REL_BASED_HIGH = 1
    IMAGE_REL_BASED_LOW = 2
    IMAGE_REL_BASED_HIGHLOW = 3
    IMAGE_REL_BASED_HIGHADJ = 4
    IMAGE_REL_BASED_MACHINE_SPECIFIC_5 = 5
    IMAGE_REL_BASED_RESERVED = 6
    IMAGE_REL_BASED_MACHINE_SPECIFIC_7 = 7
    IMAGE_REL_BASED_MACHINE_SPECIFIC_8 = 8
    IMAGE_REL_BASED_MACHINE_SPECIFIC_9 = 9
    IMAGE_REL_BASED_DIR64 = 10
End Enum
Public Enum IMAGE_REL_BASED
    IMAGE_REL_BASED_IA64_IMM64 = 9
    IMAGE_REL_BASED_MIPS_JMPADDR = 5
    IMAGE_REL_BASED_MIPS_JMPADDR16 = 9
    IMAGE_REL_BASED_ARM_MOV32 = 5
    IMAGE_REL_BASED_THUMB_MOV32 = 7
End Enum

Public Const IMAGE_ARCHIVE_START_SIZE  = 8
Public Const IMAGE_ARCHIVE_START  = "!<arch>\n"
Public Const IMAGE_ARCHIVE_END  = "`\n"
Public Const IMAGE_ARCHIVE_PAD  = "\n"
Public Const IMAGE_ARCHIVE_LINKER_MEMBER  = "/               "
Public Const IMAGE_ARCHIVE_LONGNAMES_MEMBER  = "//              "
Public Const IMAGE_ARCHIVE_HYBRIDMAP_MEMBER  = "/<HYBRIDMAP>/   "

Public Type IMAGE_ARCHIVE_MEMBER_HEADER
    Name(0 To 15) As Byte ' File member name - `/' terminated.
    Date(0 To 11) As Byte ' File member date - decimal.
    UserID(0 To 5) As Byte ' File member user id - decimal.
    GroupID(0 To 5) As Byte ' File member group id - decimal.
    Mode(0 To 7) As Byte ' File member mode - octal.
    Size(0 To 9) As Byte ' File member size - decimal.
    EndHeader(0 To 1) As Byte ' String to end header.
End Type

Public Const IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR = 60


Public Const IMAGE_ORDINAL_FLAG64  = &H8000000000000000
Public Const IMAGE_ORDINAL_FLAG32  = &H80000000
#If Win64 Then
Public Const IMAGE_ORDINAL_FLAG = IMAGE_ORDINAL_FLAG64
#Else
Public Const IMAGE_ORDINAL_FLAG = IMAGE_ORDINAL_FLAG32
#End If

Public Type IMAGE_DATA_DIRECTORY
    VirtualAddress As Long
    Size As Long
End Type

Public Type IMAGE_EXPORT_DIRECTORY
    Characteristics As Long
    TimeDateStamp As Long
    MajorVersion As Integer
    MinorVersion As Integer
    Name As Long
    Base As Long
    NumberOfFunctions As Long
    NumberOfNames As Long
    AddressOfFunctions As Long ' RVA from base of image
    AddressOfNames As Long ' RVA from base of image
    AddressOfNameOrdinals As Long ' RVA from base of image
End Type
' typedef struct _IMAGE_THUNK_DATA64 {
' union {
    ' ULONGLONG ForwarderString;  // PBYTE 
    ' ULONGLONG Function;         // PDWORD
    ' ULONGLONG Ordinal;
    ' ULONGLONG AddressOfData;    // PIMAGE_IMPORT_BY_NAME
' } u1;
' } IMAGE_THUNK_DATA64;
Public Type IMAGE_THUNK_DATA32
    u1 As Long
End Type
Public Type IMAGE_THUNK_DATA64
    u1 As LongLong
End Type
/*
#If Win64 Then
Alias IMAGE_THUNK_DATA As IMAGE_THUNK_DATA64
#Else
Alias IMAGE_THUNK_DATA As IMAGE_THUNK_DATA32
#End If
*/
Public Type IMAGE_THUNK_DATA
    u1 As LongPtr
End Type

Public Type IMAGE_TLS_DIRECTORY32
    StartAddressOfRawData As Long
    EndAddressOfRawData As Long
    AddressOfIndex As Long ' PDWORD
    AddressOfCallBacks As Long ' PIMAGE_TLS_CALLBACK *
    SizeOfZeroFill As Long
    'union {
    Characteristics As Long
    '     struct {
    '         DWORD Reserved0 : 20;
    '         DWORD Alignment : 4;
    '          DWORD Reserved1 : 8;
    '      } DUMMYSTRUCTNAME;
    '  } DUMMYUNIONNAME;
End Type
Public Type IMAGE_TLS_DIRECTORY64
    StartAddressOfRawData As LongLong
    EndAddressOfRawData As LongLong
    AddressOfIndex As LongLong ' PDWORD
    AddressOfCallBacks As LongLong ' PIMAGE_TLS_CALLBACK *
    SizeOfZeroFill As Long
    'union {
    Characteristics As Long
    '     struct {
    '         DWORD Reserved0 : 20;
    '         DWORD Alignment : 4;
    '          DWORD Reserved1 : 8;
    '      } DUMMYSTRUCTNAME;
    '  } DUMMYUNIONNAME;
End Type
Public Type IMAGE_TLS_DIRECTORY
    StartAddressOfRawData As LongPtr
    EndAddressOfRawData As LongPtr
    AddressOfIndex As LongPtr ' PDWORD
    AddressOfCallBacks As LongPtr ' PIMAGE_TLS_CALLBACK *
    SizeOfZeroFill As Long
    'union {
    Characteristics As Long
    '     struct {
    '         DWORD Reserved0 : 20;
    '         DWORD Alignment : 4;
    '          DWORD Reserved1 : 8;
    '      } DUMMYSTRUCTNAME;
    '  } DUMMYUNIONNAME;
End Type

Public Type IMAGE_DELAYLOAD_DESCRIPTOR
    'union {
    AllAttributes As Long
    '    struct {
    '        DWORD RvaBased : 1;             // Delay load version 2
    '        DWORD ReservedAttributes : 31;
    '    } DUMMYSTRUCTNAME;
    '} Attributes;
    DllNameRVA As Long ' RVA to the name of the target library (NULL-terminate ASCII string)
    ModuleHandleRVA As Long ' RVA to the HMODULE caching location (PHMODULE)
    ImportAddressTableRVA As Long ' RVA to the start of the IAT (PIMAGE_THUNK_DATA)
    ImportNameTableRVA As Long ' RVA to the start of the name table (PIMAGE_THUNK_DATA::AddressOfData)
    BoundImportAddressTableRVA As Long ' RVA to an optional bound IAT
    UnloadInformationTableRVA As Long ' RVA to an optional unload info table
    TimeDateStamp As Long ' 0 if not bound,
    ' Otherwise, date/time of the target DLL
End Type

Public Type IMAGE_RESOURCE_DIRECTORY
    Characteristics As Long
    TimeDateStamp As Long
    MajorVersion As Integer
    MinorVersion As Integer
    NumberOfNamedEntries As Integer
    NumberOfIdEntries As Integer
    '  IMAGE_RESOURCE_DIRECTORY_ENTRY DirectoryEntries[];
End Type

Public Const IMAGE_RESOURCE_NAME_IS_STRING  = &H80000000
Public Const IMAGE_RESOURCE_DATA_IS_DIRECTORY  = &H80000000

' // Each directory contains the 32-bit Name of the entry and an offset,
' // relative to the beginning of the resource directory of the data associated
' // with this directory entry.  If the name of the entry is an actual text
' // string instead of an integer Id, then the high order bit of the name field
' // is set to one and the low order 31-bits are an offset, relative to the
' // beginning of the resource directory of the string, which is of type
' // IMAGE_RESOURCE_DIRECTORY_STRING.  Otherwise the high bit is clear and the
' // low-order 16-bits are the integer Id that identify this resource directory
' // entry. If the directory entry is yet another resource directory (i.e. a
' // subdirectory), then the high order bit of the offset field will be
' // set to indicate this.  Otherwise the high bit is clear and the offset
' // field points to a resource data entry.
' //

' //@[comment("MVI_tracked")]
' typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY {
    ' union {
        ' struct {
            ' DWORD NameOffset:31;
            ' DWORD NameIsString:1;
        ' } DUMMYSTRUCTNAME;
        ' DWORD   Name;
        ' WORD    Id;
    ' } DUMMYUNIONNAME;
    ' union {
        ' DWORD   OffsetToData;
        ' struct {
            ' DWORD   OffsetToDirectory:31;
            ' DWORD   DataIsDirectory:1;
        ' } DUMMYSTRUCTNAME2;
    ' } DUMMYUNIONNAME2;
' } IMAGE_RESOURCE_DIRECTORY_ENTRY, *PIMAGE_RESOURCE_DIRECTORY_ENTRY;
Public Type IMAGE_RESOURCE_DIRECTORY_ENTRY
    Name As Long
    OffsetToData As Long
End Type
[Description("⚠️ **WARNING:** Do not copy this all at once. Use length to determine what to copy.")]
Public Type IMAGE_RESOURCE_DIRECTORY_STRING
    Length As Integer
    NameString(0 To 79) As Byte
End Type
[Description("⚠️ **WARNING:** Do not copy this all at once. Use length to determine what to copy.")]
Public Type IMAGE_RESOURCE_DIR_STRING_U
    Length As Integer
    NameString(0 To 79) As Integer
End Type

Public Type IMAGE_RESOURCE_DATA_ENTRY
    OffsetToData As Long
    Size As Long
    CodePage As Long
    Reserved As Long
End Type





Public Type IMAGE_IMPORT_DESCRIPTOR
    'union {
    '   DWORD   Characteristics;            // 0 for terminating null import descriptor
    '     DWORD   OriginalFirstThunk;         // RVA to original unbound IAT (PIMAGE_THUNK_DATA)
    ' } DUMMYUNIONNAME;
    [Description("Union of Characteristics and OriginalFirstThunk")]
    ChrctrsOrOrigThunk As Long
    TimeDateStamp As Long ' 0 if not bound,
    ' -1 if bound, and real date\time stamp
    '     in IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT (new BIND)
    ' O.W. date/time stamp of DLL bound to (Old BIND)
    ForwarderChain As Long ' -1 if no forwarders
    Name As Long
    FirstThunk As Long ' RVA to IAT (if bound this IAT has actual addresses)
End Type
Public Type IMAGE_BOUND_IMPORT_DESCRIPTOR
    TimeDateStamp As Long
    OffsetModuleName As Integer
    NumberOfModuleForwarderRefs As Integer
    ' Array of zero or more IMAGE_BOUND_FORWARDER_REF follows
End Type
Public Type IMAGE_BOUND_FORWARDER_REF
    TimeDateStamp As Long
    OffsetModuleName As Integer
    Reserved As Integer
End Type
Public Type IMAGE_IMPORT_BY_NAME
    Hint As Integer
    Name(0 To 99) As Byte
End Type

Public Const IMAGE_NUMBEROF_DIRECTORY_ENTRIES   = 16

Public Enum ImageSubsystemType
    IMAGE_SUBSYSTEM_UNKNOWN = 0  ' Unknown subsystem.
    IMAGE_SUBSYSTEM_NATIVE = 1  ' Image doesn't require a subsystem.
    IMAGE_SUBSYSTEM_WINDOWS_GUI = 2  ' Image runs in the Windows GUI subsystem.
    IMAGE_SUBSYSTEM_WINDOWS_CUI = 3  ' Image runs in the Windows character subsystem.
    IMAGE_SUBSYSTEM_OS2_CUI = 5  ' image runs in the OS/2 character subsystem.
    IMAGE_SUBSYSTEM_POSIX_CUI = 7  ' image runs in the Posix character subsystem.
    IMAGE_SUBSYSTEM_NATIVE_WINDOWS = 8  ' image is a native Win9x driver.
    IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 9  ' Image runs in the Windows CE subsystem.
    IMAGE_SUBSYSTEM_EFI_APPLICATION = 10  '
    IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 11  '
    IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 12  '
    IMAGE_SUBSYSTEM_EFI_ROM = 13
    IMAGE_SUBSYSTEM_XBOX = 14
    IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION = 16
    IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG = 17
End Enum
Public Enum ImageDllCharacteristics
    IMAGE_LIBRARY_PROCESS_INIT = &H0001  ' Reserved.
    IMAGE_LIBRARY_PROCESS_TERM = &H0002  ' Reserved.
    IMAGE_LIBRARY_THREAD_INIT = &H0004  ' Reserved.
    IMAGE_LIBRARY_THREAD_TERM = &H0008  ' Reserved.
    IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA = &H0020  ' Image can handle a high entropy 64-bit virtual address space.
    IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE = &H0040  ' DLL can move.
    IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY = &H0080  ' Code Integrity Image
    IMAGE_DLLCHARACTERISTICS_NX_COMPAT = &H0100  ' Image is NX compatible
    IMAGE_DLLCHARACTERISTICS_NO_ISOLATION = &H0200  ' Image understands isolation and doesn't want it
    IMAGE_DLLCHARACTERISTICS_NO_SEH = &H0400  ' Image does not use SEH.  No SE handler may reside in this image
    IMAGE_DLLCHARACTERISTICS_NO_BIND = &H0800  ' Do not bind this image.
    IMAGE_DLLCHARACTERISTICS_APPCONTAINER = &H1000  ' Image should execute in an AppContainer
    IMAGE_DLLCHARACTERISTICS_WDM_DRIVER = &H2000  ' Driver uses WDM model
    IMAGE_DLLCHARACTERISTICS_GUARD_CF = &H4000  ' Image supports Control Flow Guard.
    IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE = &H8000&
End Enum
Public Enum ImageDirectories
    IMAGE_DIRECTORY_ENTRY_EXPORT = 0  ' Export Directory
    IMAGE_DIRECTORY_ENTRY_IMPORT = 1  ' Import Directory
    IMAGE_DIRECTORY_ENTRY_RESOURCE = 2  ' Resource Directory
    IMAGE_DIRECTORY_ENTRY_EXCEPTION = 3  ' Exception Directory
    IMAGE_DIRECTORY_ENTRY_SECURITY = 4  ' Security Directory
    IMAGE_DIRECTORY_ENTRY_BASERELOC = 5  ' Base Relocation Table
    IMAGE_DIRECTORY_ENTRY_DEBUG = 6  ' Debug Directory
'       IMAGE_DIRECTORY_ENTRY_COPYRIGHT       7   // (X86 usage)
    IMAGE_DIRECTORY_ENTRY_ARCHITECTURE = 7  ' Architecture Specific Data
    IMAGE_DIRECTORY_ENTRY_GLOBALPTR = 8  ' RVA of GP
    IMAGE_DIRECTORY_ENTRY_TLS = 9  ' TLS Directory
    IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG = 10  ' Load Configuration Directory
    IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT = 11  ' Bound Import Directory in headers
    IMAGE_DIRECTORY_ENTRY_IAT = 12  ' Import Address Table
    IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT = 13  ' Delay Load Import Descriptors
    IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR = 14  ' COM Runtime descriptor
End Enum

Public Enum IMAGE_MAGIC_VALUES
    IMAGE_NT_OPTIONAL_HDR32_MAGIC = &H10b
    IMAGE_NT_OPTIONAL_HDR64_MAGIC = &H20b
    IMAGE_ROM_OPTIONAL_HDR_MAGIC = &H107
End Enum

Public Type IMAGE_OPTIONAL_HEADER
    ' Standard fields.
    /* [ TypeHint(IMAGE_MAGIC_VALUES) ] */ Magic As Integer
    MajorLinkerVersion As Byte
    MinorLinkerVersion As Byte
    SizeOfCode As Long
    SizeOfInitializedData As Long
    SizeOfUninitializedData As Long
    AddressOfEntryPoint As Long
    BaseOfCode As Long
    #If Win64 = 0 Then
    BaseOfData As Long
    #End If
    ' NT additional fields.
    ImageBase As LongPtr
    SectionAlignment As Long
    FileAlignment As Long
    MajorOperatingSystemVersion As Integer
    MinorOperatingSystemVersion As Integer
    MajorImageVersion As Integer
    MinorImageVersion As Integer
    MajorSubsystemVersion As Integer
    MinorSubsystemVersion As Integer
    Win32VersionValue As Long
    SizeOfImage As Long
    SizeOfHeaders As Long
    CheckSum As Long
    /* [ TypeHint(ImageSubsystemType) ] */ Subsystem As Integer
    /* [ TypeHint(ImageDllCharacteristics) ] */ DllCharacteristics As Integer
    SizeOfStackReserve As LongPtr
    SizeOfStackCommit As LongPtr
    SizeOfHeapReserve As LongPtr
    SizeOfHeapCommit As LongPtr
    LoaderFlags As Long
    NumberOfRvaAndSizes As Long
    DataDirectory(0 To (IMAGE_NUMBEROF_DIRECTORY_ENTRIES - 1)) As IMAGE_DATA_DIRECTORY
End Type
Public Type IMAGE_OPTIONAL_HEADER32
    ' Standard fields.
    Magic As Integer
    MajorLinkerVersion As Byte
    MinorLinkerVersion As Byte
    SizeOfCode As Long
    SizeOfInitializedData As Long
    SizeOfUninitializedData As Long
    AddressOfEntryPoint As Long
    BaseOfCode As Long
    BaseOfData As Long
    ' NT additional fields.
    ImageBase As Long
    SectionAlignment As Long
    FileAlignment As Long
    MajorOperatingSystemVersion As Integer
    MinorOperatingSystemVersion As Integer
    MajorImageVersion As Integer
    MinorImageVersion As Integer
    MajorSubsystemVersion As Integer
    MinorSubsystemVersion As Integer
    Win32VersionValue As Long
    SizeOfImage As Long
    SizeOfHeaders As Long
    CheckSum As Long
    /* [ TypeHint(ImageSubsystemType) ] */ Subsystem As Integer
    /* [ TypeHint(ImageDllCharacteristics) ] */ DllCharacteristics As Integer
    SizeOfStackReserve As Long
    SizeOfStackCommit As Long
    SizeOfHeapReserve As Long
    SizeOfHeapCommit As Long
    LoaderFlags As Long
    NumberOfRvaAndSizes As Long
    DataDirectory(0 To (IMAGE_NUMBEROF_DIRECTORY_ENTRIES - 1)) As IMAGE_DATA_DIRECTORY
End Type
Public Type IMAGE_OPTIONAL_HEADER64
    Magic As Integer
    MajorLinkerVersion As Byte
    MinorLinkerVersion As Byte
    SizeOfCode As Long
    SizeOfInitializedData As Long
    SizeOfUninitializedData As Long
    AddressOfEntryPoint As Long
    BaseOfCode As Long
    ImageBase As LongLong
    SectionAlignment As Long
    FileAlignment As Long
    MajorOperatingSystemVersion As Integer
    MinorOperatingSystemVersion As Integer
    MajorImageVersion As Integer
    MinorImageVersion As Integer
    MajorSubsystemVersion As Integer
    MinorSubsystemVersion As Integer
    Win32VersionValue As Long
    SizeOfImage As Long
    SizeOfHeaders As Long
    CheckSum As Long
    /* [ TypeHint(ImageSubsystemType) ] */ Subsystem As Integer
    /* [ TypeHint(ImageDllCharacteristics) ] */ DllCharacteristics As Integer
    SizeOfStackReserve As LongLong
    SizeOfStackCommit As LongLong
    SizeOfHeapReserve As LongLong
    SizeOfHeapCommit As LongLong
    LoaderFlags As Long
    NumberOfRvaAndSizes As Long
    DataDirectory(0 To (IMAGE_NUMBEROF_DIRECTORY_ENTRIES - 1)) As IMAGE_DATA_DIRECTORY
End Type

Public Type IMAGE_ROM_OPTIONAL_HEADER
    Magic As Integer
    MajorLinkerVersion As Byte
    MinorLinkerVersion As Byte
    SizeOfCode As Long
    SizeOfInitializedData As Long
    SizeOfUninitializedData As Long
    AddressOfEntryPoint As Long
    BaseOfCode As Long
    BaseOfData As Long
    BaseOfBss As Long
    GprMask As Long
    CprMask(0 To 3) As Long
    GpValue As Long
End Type

Public Type IMAGE_ROM_HEADERS
    FileHeader As IMAGE_FILE_HEADER
    OptionalHeader As IMAGE_ROM_OPTIONAL_HEADER
End Type

Public Type IMAGE_NT_HEADERS
    Signature As Long
    FileHeader As IMAGE_FILE_HEADER
    OptionalHeader As IMAGE_OPTIONAL_HEADER
End Type
Public Type IMAGE_NT_HEADERS32
    Signature As Long
    FileHeader As IMAGE_FILE_HEADER
    OptionalHeader As IMAGE_OPTIONAL_HEADER32
End Type
Public Type IMAGE_NT_HEADERS64
    Signature As Long
    FileHeader As IMAGE_FILE_HEADER
    OptionalHeader As IMAGE_OPTIONAL_HEADER64
End Type

Public Type ANON_OBJECT_HEADER
    Sig1 As Integer ' Must be IMAGE_FILE_MACHINE_UNKNOWN
    Sig2 As Integer ' Must be 0xffff
    Version As Integer ' >= 1 (implies the CLSID field is present)
    Machine As Integer
    TimeDateStamp As Long
    ClassID As UUID ' Used to invoke CoCreateInstance
    SizeOfData As Long ' Size of data that follows the header
End Type
Public Type ANON_OBJECT_HEADER_V2
    Sig1 As Integer ' Must be IMAGE_FILE_MACHINE_UNKNOWN
    Sig2 As Integer ' Must be 0xffff
    Version As Integer ' >= 2 (implies the Flags field is present - otherwise V1)
    Machine As Integer
    TimeDateStamp As Long
    ClassID As UUID ' Used to invoke CoCreateInstance
    SizeOfData As Long ' Size of data that follows the header
    Flags As Long ' 0x1 -> contains metadata
    MetaDataSize As Long ' Size of CLR metadata
    MetaDataOffset As Long ' Offset of CLR metadata
End Type
Public Type ANON_OBJECT_HEADER_BIGOBJ
    'same as ANON_OBJECT_HEADER_V2
    Sig1 As Integer ' Must be IMAGE_FILE_MACHINE_UNKNOWN
    Sig2 As Integer ' Must be 0xffff
    Version As Integer ' >= 2 (implies the Flags field is present)
    Machine As Integer ' Actual machine - IMAGE_FILE_MACHINE_xxx
    TimeDateStamp As Long
    ClassID As UUID ' {D1BAA1C7-BAEE-4ba9-AF20-FAF66AA4DCB8}
    SizeOfData As Long ' Size of data that follows the header
    Flags As Long ' 0x1 -> contains metadata
    MetaDataSize As Long ' Size of CLR metadata
    MetaDataOffset As Long ' Offset of CLR metadata
    'bigobj specifics
    NumberOfSections As Long ' extended from WORD
    PointerToSymbolTable As Long
    NumberOfSymbols As Long
End Type


Public Const IMAGE_SIZEOF_SECTION_HEADER     = 40
Public Const IMAGE_SIZEOF_SHORT_NAME        = 8
Public Type IMAGE_SECTION_HEADER
    Name(0 To (IMAGE_SIZEOF_SHORT_NAME - 1)) As Byte
    Misc As Long
    VirtualAddress As Long
    SizeOfRawData As Long
    PointerToRawData As Long
    PointerToRelocations As Long
    PointerToLinenumbers As Long
    NumberOfRelocations As Integer
    NumberOfLinenumbers As Integer
    Characteristics As ImageSectionCharacteristics
End Type

Public Enum ImageSectionCharacteristics
    IMAGE_SCN_TYPE_REG = &H00000000  ' Reserved.
    IMAGE_SCN_TYPE_DSECT = &H00000001  ' Reserved.
    IMAGE_SCN_TYPE_NOLOAD = &H00000002  ' Reserved.
    IMAGE_SCN_TYPE_GROUP = &H00000004  ' Reserved.
    IMAGE_SCN_TYPE_NO_PAD = &H00000008  ' Reserved.
    IMAGE_SCN_TYPE_COPY = &H00000010  ' Reserved.
    IMAGE_SCN_CNT_CODE = &H00000020  ' Section contains code.
    IMAGE_SCN_CNT_INITIALIZED_DATA = &H00000040  ' Section contains initialized data.
    IMAGE_SCN_CNT_UNINITIALIZED_DATA = &H00000080  ' Section contains uninitialized data.
    IMAGE_SCN_LNK_OTHER = &H00000100  ' Reserved.
    IMAGE_SCN_LNK_INFO = &H00000200  ' Section contains comments or some other type of information.
'       IMAGE_SCN_TYPE_OVER                  0x00000400  // Reserved.
    IMAGE_SCN_LNK_REMOVE = &H00000800  ' Section contents will not become part of image.
    IMAGE_SCN_LNK_COMDAT = &H00001000  ' Section contents comdat.
'                                            0x00002000  // Reserved.
'       IMAGE_SCN_MEM_PROTECTED - Obsolete   0x00004000
    IMAGE_SCN_NO_DEFER_SPEC_EXC = &H00004000  ' Reset speculative exceptions handling bits in the TLB entries for this section.
    IMAGE_SCN_GPREL = &H00008000&  ' Section content can be accessed relative to GP
    IMAGE_SCN_MEM_FARDATA = &H00008000&
'       IMAGE_SCN_MEM_SYSHEAP  - Obsolete    0x00010000
    IMAGE_SCN_MEM_PURGEABLE = &H00020000
    IMAGE_SCN_MEM_16BIT = &H00020000
    IMAGE_SCN_MEM_LOCKED = &H00040000
    IMAGE_SCN_MEM_PRELOAD = &H00080000
    IMAGE_SCN_ALIGN_1BYTES = &H00100000  '
    IMAGE_SCN_ALIGN_2BYTES = &H00200000  '
    IMAGE_SCN_ALIGN_4BYTES = &H00300000  '
    IMAGE_SCN_ALIGN_8BYTES = &H00400000  '
    IMAGE_SCN_ALIGN_16BYTES = &H00500000  ' Default alignment if no others are specified.
    IMAGE_SCN_ALIGN_32BYTES = &H00600000  '
    IMAGE_SCN_ALIGN_64BYTES = &H00700000  '
    IMAGE_SCN_ALIGN_128BYTES = &H00800000  '
    IMAGE_SCN_ALIGN_256BYTES = &H00900000  '
    IMAGE_SCN_ALIGN_512BYTES = &H00A00000  '
    IMAGE_SCN_ALIGN_1024BYTES = &H00B00000  '
    IMAGE_SCN_ALIGN_2048BYTES = &H00C00000  '
    IMAGE_SCN_ALIGN_4096BYTES = &H00D00000  '
    IMAGE_SCN_ALIGN_8192BYTES = &H00E00000  '
'  Unused                                    0x00F00000
    IMAGE_SCN_ALIGN_MASK = &H00F00000
    IMAGE_SCN_LNK_NRELOC_OVFL = &H01000000  ' Section contains extended relocations.
    IMAGE_SCN_MEM_DISCARDABLE = &H02000000  ' Section can be discarded.
    IMAGE_SCN_MEM_NOT_CACHED = &H04000000  ' Section is not cachable.
    IMAGE_SCN_MEM_NOT_PAGED = &H08000000  ' Section is not pageable.
    IMAGE_SCN_MEM_SHARED = &H10000000  ' Section is shareable.
    IMAGE_SCN_MEM_EXECUTE = &H20000000  ' Section is executable.
    IMAGE_SCN_MEM_READ = &H40000000  ' Section is readable.
    IMAGE_SCN_MEM_WRITE = &H80000000  ' Section is writeable.
End Enum

Public Const IMAGE_SCN_SCALE_INDEX = 1

Public Enum IMAGE_SECTION_VALUES
    IMAGE_SYM_UNDEFINED = 0  ' Symbol is undefined or is common.
    IMAGE_SYM_ABSOLUTE = -1  ' Symbol is an absolute value.
    IMAGE_SYM_DEBUG = -2  ' Symbol is a special debug item.
    IMAGE_SYM_SECTION_MAX = &HFEFF&  ' Values 0xFF00-0xFFFF are special
    IMAGE_SYM_SECTION_MAX_EX = MAXLONG
End Enum
Public Enum IMAGE_SYM_TYPE
    IMAGE_SYM_TYPE_NULL = &H0000  ' no type.
    IMAGE_SYM_TYPE_VOID = &H0001  '
    IMAGE_SYM_TYPE_CHAR = &H0002  ' type character.
    IMAGE_SYM_TYPE_SHORT = &H0003  ' type short integer.
    IMAGE_SYM_TYPE_INT = &H0004  '
    IMAGE_SYM_TYPE_LONG = &H0005  '
    IMAGE_SYM_TYPE_FLOAT = &H0006  '
    IMAGE_SYM_TYPE_DOUBLE = &H0007  '
    IMAGE_SYM_TYPE_STRUCT = &H0008  '
    IMAGE_SYM_TYPE_UNION = &H0009  '
    IMAGE_SYM_TYPE_ENUM = &H000A  ' enumeration.
    IMAGE_SYM_TYPE_MOE = &H000B  ' member of enumeration.
    IMAGE_SYM_TYPE_BYTE = &H000C  '
    IMAGE_SYM_TYPE_WORD = &H000D  '
    IMAGE_SYM_TYPE_UINT = &H000E  '
    IMAGE_SYM_TYPE_DWORD = &H000F  '
    IMAGE_SYM_TYPE_PCODE = &H8000&  '
End Enum
Public Enum IMAGE_SYM_TYPE_DERIVED
    IMAGE_SYM_DTYPE_NULL = 0  ' no derived type.
    IMAGE_SYM_DTYPE_POINTER = 1  ' pointer.
    IMAGE_SYM_DTYPE_FUNCTION = 2  ' function.
    IMAGE_SYM_DTYPE_ARRAY = 3  ' array.
End Enum
Public Enum IMAGE_STORAGE_CLASS
    IMAGE_SYM_CLASS_END_OF_FUNCTION = -1
    IMAGE_SYM_CLASS_NULL = &H0000
    IMAGE_SYM_CLASS_AUTOMATIC = &H0001
    IMAGE_SYM_CLASS_EXTERNAL = &H0002
    IMAGE_SYM_CLASS_STATIC = &H0003
    IMAGE_SYM_CLASS_REGISTER = &H0004
    IMAGE_SYM_CLASS_EXTERNAL_DEF = &H0005
    IMAGE_SYM_CLASS_LABEL = &H0006
    IMAGE_SYM_CLASS_UNDEFINED_LABEL = &H0007
    IMAGE_SYM_CLASS_MEMBER_OF_STRUCT = &H0008
    IMAGE_SYM_CLASS_ARGUMENT = &H0009
    IMAGE_SYM_CLASS_STRUCT_TAG = &H000A
    IMAGE_SYM_CLASS_MEMBER_OF_UNION = &H000B
    IMAGE_SYM_CLASS_UNION_TAG = &H000C
    IMAGE_SYM_CLASS_TYPE_DEFINITION = &H000D
    IMAGE_SYM_CLASS_UNDEFINED_STATIC = &H000E
    IMAGE_SYM_CLASS_ENUM_TAG = &H000F
    IMAGE_SYM_CLASS_MEMBER_OF_ENUM = &H0010
    IMAGE_SYM_CLASS_REGISTER_PARAM = &H0011
    IMAGE_SYM_CLASS_BIT_FIELD = &H0012
    IMAGE_SYM_CLASS_FAR_EXTERNAL = &H0044  '
    IMAGE_SYM_CLASS_BLOCK = &H0064
    IMAGE_SYM_CLASS_FUNCTION = &H0065
    IMAGE_SYM_CLASS_END_OF_STRUCT = &H0066
    IMAGE_SYM_CLASS_FILE = &H0067
'  new
    IMAGE_SYM_CLASS_SECTION = &H0068
    IMAGE_SYM_CLASS_WEAK_EXTERNAL = &H0069
    IMAGE_SYM_CLASS_CLR_TOKEN = &H006B
End Enum

Public Const N_BTMASK  = &H000F
Public Const N_TMASK  = &H0030
Public Const N_TMASK1  = &H00C0
Public Const N_TMASK2  = &H00F0
Public Const N_BTSHFT  = 4
Public Const N_TSHIFT  = 2


Public Const IMAGE_SIZEOF_SYMBOL  = 18

[PackingAlignment(2)]
Public Type IMAGE_SYMBOL
    ' union {
        ' BYTE    ShortName[8];
        ' struct {
            ' DWORD   Short;     // if 0, use LongName
            ' DWORD   Long;      // offset into string table
        ' } Name;
        ' DWORD   LongName[2];    // PBYTE [2]
    ' } N;
    N(7) As Byte
    Value As Long
    SectionNumber As Integer
    /* [ TypeHint(IMAGE_SYM_TYPE_DERIVED) ] */ Type As Integer
    /* [ TypeHint(IMAGE_STORAGE_CLASS) ] */ StorageClass As Byte
    NumberOfAuxSymbols As Byte
End Type
[PackingAlignment(2)]
Public Type IMAGE_SYMBOL_EX
    ' union {
        ' BYTE    ShortName[8];
        ' struct {
            ' DWORD   Short;     // if 0, use LongName
            ' DWORD   Long;      // offset into string table
        ' } Name;
        ' DWORD   LongName[2];    // PBYTE [2]
    ' } N;
    N(7) As Byte
    Value As Long
    SectionNumber As Long
    /* [ TypeHint(IMAGE_SYM_TYPE_DERIVED) ] */ Type As Integer
    /* [ TypeHint(IMAGE_STORAGE_CLASS) ] */ StorageClass As Byte
    NumberOfAuxSymbols As Byte
End Type

[PackingAlignment(2)]
Public Type IMAGE_AUX_SYMBOL_TOKEN_DEF
    bAuxType As Byte ' IMAGE_AUX_SYMBOL_TYPE
    bReserved As Byte ' Must be 0
    SymbolTableIndex As Long
    rgbReserved(0 To 11) As Byte ' Must be 0
End Type

[PackingAlignment(2)]
Public Type IMAGE_AUX_SYMBOL
    Sym_TagIndex As Long
    Sym_Misc As Long
    Sym_FcnAry(7) As Byte
    Sym_TvIndex As Long
    File_Name(0 To (IMAGE_SIZEOF_SYMBOL - 1)) As Byte
    Section_Length As Long ' section length
    Section_NumberOfRelocations As Integer ' number of relocation entries
    Section_NumberOfLinenumbers As Integer ' number of line numbers
    Section_CheckSum As Long ' checksum for communal
    Section_Number As Integer ' section number to associate with
    Section_Selection As Byte ' communal selection type
    Section_bReserved As Byte
    Section_HighNumber As Integer ' high bits of the section number
    TokenDef As IMAGE_AUX_SYMBOL_TOKEN_DEF
    CRC_crc As Long
    CRC_rgbReserved(13) As Byte
End Type
[PackingAlignment(2)]
Public Type IMAGE_AUX_SYMBOL_EX
    Sym_WeakDefaultSymIndex As Long
    Sym_WeakSearchType As Long
    Sym_rgbReserved(11) As Byte
    File_Name(0 To (IMAGE_SIZEOF_SYMBOL - 1)) As Byte
    Section_Length As Long ' section length
    Section_NumberOfRelocations As Integer ' number of relocation entries
    Section_NumberOfLinenumbers As Integer ' number of line numbers
    Section_CheckSum As Long ' checksum for communal
    Section_Number As Integer ' section number to associate with
    Section_Selection As Byte ' communal selection type
    Section_rgbReserved(1) As Byte
    Section_HighNumber As Integer ' high bits of the section number
    TokenDef As IMAGE_AUX_SYMBOL_TOKEN_DEF
    rgbReserved(1) As Byte
    CRC_crc As Long
    CRC_rgbReserved(15) As Byte
End Type

Public Enum IMAGE_AUX_SYMBOL_TYPE
    IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF = 1
End Enum

Public Enum IMAGE_COMMUNAL_SELTYPE
    IMAGE_COMDAT_SELECT_NODUPLICATES = 1
    IMAGE_COMDAT_SELECT_ANY = 2
    IMAGE_COMDAT_SELECT_SAME_SIZE = 3
    IMAGE_COMDAT_SELECT_EXACT_MATCH = 4
    IMAGE_COMDAT_SELECT_ASSOCIATIVE = 5
    IMAGE_COMDAT_SELECT_LARGEST = 6
    IMAGE_COMDAT_SELECT_NEWEST = 7
End Enum

Public Enum IMAGE_WEAK_EXTERN
    IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY = 1
    IMAGE_WEAK_EXTERN_SEARCH_LIBRARY = 2
    IMAGE_WEAK_EXTERN_SEARCH_ALIAS = 3
    IMAGE_WEAK_EXTERN_ANTI_DEPENDENCY = 4
End Enum

Public Enum IMAGE_RELOC_TYPE_I386
    IMAGE_REL_I386_ABSOLUTE = &H0000  ' Reference is absolute, no relocation is necessary
    IMAGE_REL_I386_DIR16 = &H0001  ' Direct 16-bit reference to the symbols virtual address
    IMAGE_REL_I386_REL16 = &H0002  ' PC-relative 16-bit reference to the symbols virtual address
    IMAGE_REL_I386_DIR32 = &H0006  ' Direct 32-bit reference to the symbols virtual address
    IMAGE_REL_I386_DIR32NB = &H0007  ' Direct 32-bit reference to the symbols virtual address, base not included
    IMAGE_REL_I386_SEG12 = &H0009  ' Direct 16-bit reference to the segment-selector bits of a 32-bit virtual address
    IMAGE_REL_I386_SECTION = &H000A
    IMAGE_REL_I386_SECREL = &H000B
    IMAGE_REL_I386_TOKEN = &H000C  ' clr token
    IMAGE_REL_I386_SECREL7 = &H000D  ' 7 bit offset from base of section containing target
    IMAGE_REL_I386_REL32 = &H0014  ' PC-relative 32-bit reference to the symbols virtual address
End Enum
Public Enum IMAGE_RELOC_TYPE_MIPS
    IMAGE_REL_MIPS_ABSOLUTE = &H0000  ' Reference is absolute, no relocation is necessary
    IMAGE_REL_MIPS_REFHALF = &H0001
    IMAGE_REL_MIPS_REFWORD = &H0002
    IMAGE_REL_MIPS_JMPADDR = &H0003
    IMAGE_REL_MIPS_REFHI = &H0004
    IMAGE_REL_MIPS_REFLO = &H0005
    IMAGE_REL_MIPS_GPREL = &H0006
    IMAGE_REL_MIPS_LITERAL = &H0007
    IMAGE_REL_MIPS_SECTION = &H000A
    IMAGE_REL_MIPS_SECREL = &H000B
    IMAGE_REL_MIPS_SECRELLO = &H000C  ' Low 16-bit section relative referemce (used for >32k TLS)
    IMAGE_REL_MIPS_SECRELHI = &H000D  ' High 16-bit section relative reference (used for >32k TLS)
    IMAGE_REL_MIPS_TOKEN = &H000E  ' clr token
    IMAGE_REL_MIPS_JMPADDR16 = &H0010
    IMAGE_REL_MIPS_REFWORDNB = &H0022
    IMAGE_REL_MIPS_PAIR = &H0025
End Enum
Public Enum IMAGE_RELOC_TYPE_PPC
    IMAGE_REL_PPC_ABSOLUTE = &H0000  ' NOP
    IMAGE_REL_PPC_ADDR64 = &H0001  ' 64-bit address
    IMAGE_REL_PPC_ADDR32 = &H0002  ' 32-bit address
    IMAGE_REL_PPC_ADDR24 = &H0003  ' 26-bit address, shifted left 2 (branch absolute)
    IMAGE_REL_PPC_ADDR16 = &H0004  ' 16-bit address
    IMAGE_REL_PPC_ADDR14 = &H0005  ' 16-bit address, shifted left 2 (load doubleword)
    IMAGE_REL_PPC_REL24 = &H0006  ' 26-bit PC-relative offset, shifted left 2 (branch relative)
    IMAGE_REL_PPC_REL14 = &H0007  ' 16-bit PC-relative offset, shifted left 2 (br cond relative)
    IMAGE_REL_PPC_TOCREL16 = &H0008  ' 16-bit offset from TOC base
    IMAGE_REL_PPC_TOCREL14 = &H0009  ' 16-bit offset from TOC base, shifted left 2 (load doubleword)
    IMAGE_REL_PPC_ADDR32NB = &H000A  ' 32-bit addr w/o image base
    IMAGE_REL_PPC_SECREL = &H000B  ' va of containing section (as in an image sectionhdr)
    IMAGE_REL_PPC_SECTION = &H000C  ' sectionheader number
    IMAGE_REL_PPC_IFGLUE = &H000D  ' substitute TOC restore instruction iff symbol is glue code
    IMAGE_REL_PPC_IMGLUE = &H000E  ' symbol is glue code; virtual address is TOC restore instruction
    IMAGE_REL_PPC_SECREL16 = &H000F  ' va of containing section (limited to 16 bits)
    IMAGE_REL_PPC_REFHI = &H0010
    IMAGE_REL_PPC_REFLO = &H0011
    IMAGE_REL_PPC_PAIR = &H0012
    IMAGE_REL_PPC_SECRELLO = &H0013  ' Low 16-bit section relative reference (used for >32k TLS)
    IMAGE_REL_PPC_SECRELHI = &H0014  ' High 16-bit section relative reference (used for >32k TLS)
    IMAGE_REL_PPC_GPREL = &H0015
    IMAGE_REL_PPC_TOKEN = &H0016  ' clr token
    IMAGE_REL_PPC_TYPEMASK = &H00FF  ' mask to isolate above values in IMAGE_RELOCATION.Type
'  Flag bits in IMAGE_RELOCATION.TYPE
    IMAGE_REL_PPC_NEG = &H0100  ' subtract reloc value rather than adding it
    IMAGE_REL_PPC_BRTAKEN = &H0200  ' fix branch prediction bit to predict branch taken
    IMAGE_REL_PPC_BRNTAKEN = &H0400  ' fix branch prediction bit to predict branch not taken
    IMAGE_REL_PPC_TOCDEFN = &H0800  ' toc slot defined in file (or, data in toc)
End Enum
Public Enum IMAGE_RELOC_TYPE_SH3
    IMAGE_REL_SH3_ABSOLUTE = &H0000  ' No relocation
    IMAGE_REL_SH3_DIRECT16 = &H0001  ' 16 bit direct
    IMAGE_REL_SH3_DIRECT32 = &H0002  ' 32 bit direct
    IMAGE_REL_SH3_DIRECT8 = &H0003  ' 8 bit direct, -128..255
    IMAGE_REL_SH3_DIRECT8_WORD = &H0004  ' 8 bit direct .W (0 ext.)
    IMAGE_REL_SH3_DIRECT8_LONG = &H0005  ' 8 bit direct .L (0 ext.)
    IMAGE_REL_SH3_DIRECT4 = &H0006  ' 4 bit direct (0 ext.)
    IMAGE_REL_SH3_DIRECT4_WORD = &H0007  ' 4 bit direct .W (0 ext.)
    IMAGE_REL_SH3_DIRECT4_LONG = &H0008  ' 4 bit direct .L (0 ext.)
    IMAGE_REL_SH3_PCREL8_WORD = &H0009  ' 8 bit PC relative .W
    IMAGE_REL_SH3_PCREL8_LONG = &H000A  ' 8 bit PC relative .L
    IMAGE_REL_SH3_PCREL12_WORD = &H000B  ' 12 LSB PC relative .W
    IMAGE_REL_SH3_STARTOF_SECTION = &H000C  ' Start of EXE section
    IMAGE_REL_SH3_SIZEOF_SECTION = &H000D  ' Size of EXE section
    IMAGE_REL_SH3_SECTION = &H000E  ' Section table index
    IMAGE_REL_SH3_SECREL = &H000F  ' Offset within section
    IMAGE_REL_SH3_DIRECT32_NB = &H0010  ' 32 bit direct not based
    IMAGE_REL_SH3_GPREL4_LONG = &H0011  ' GP-relative addressing
    IMAGE_REL_SH3_TOKEN = &H0012  ' clr token
    IMAGE_REL_SHM_PCRELPT = &H0013  ' Offset from current
                                    '   instruction in longwords
                                    '   if not NOMODE, insert the
                                    '   inverse of the low bit at
                                    '   bit 32 to select PTA/PTB
    IMAGE_REL_SHM_REFLO = &H0014  ' Low bits of 32-bit address
    IMAGE_REL_SHM_REFHALF = &H0015  ' High bits of 32-bit address
    IMAGE_REL_SHM_RELLO = &H0016  ' Low bits of relative reference
    IMAGE_REL_SHM_RELHALF = &H0017  ' High bits of relative reference
    IMAGE_REL_SHM_PAIR = &H0018  ' offset operand for relocation
    IMAGE_REL_SH_NOMODE = &H8000&  ' relocation ignores section mode
End Enum
Public Enum IMAGE_RELOC_TYPE_ARM
    IMAGE_REL_ARM_ABSOLUTE = &H0000  ' No relocation required
    IMAGE_REL_ARM_ADDR32 = &H0001  ' 32 bit address
    IMAGE_REL_ARM_ADDR32NB = &H0002  ' 32 bit address w/o image base
    IMAGE_REL_ARM_BRANCH24 = &H0003  ' 24 bit offset << 2 & sign ext.
    IMAGE_REL_ARM_BRANCH11 = &H0004  ' Thumb: 2 11 bit offsets
    IMAGE_REL_ARM_TOKEN = &H0005  ' clr token
    IMAGE_REL_ARM_GPREL12 = &H0006  ' GP-relative addressing (ARM)
    IMAGE_REL_ARM_GPREL7 = &H0007  ' GP-relative addressing (Thumb)
    IMAGE_REL_ARM_BLX24 = &H0008
    IMAGE_REL_ARM_BLX11 = &H0009
    IMAGE_REL_ARM_SECTION = &H000E  ' Section table index
    IMAGE_REL_ARM_SECREL = &H000F  ' Offset within section
    IMAGE_REL_ARM_MOV32A = &H0010  ' ARM: MOVW/MOVT
    IMAGE_REL_ARM_MOV32 = &H0010  ' ARM: MOVW/MOVT (deprecated)
    IMAGE_REL_ARM_MOV32T = &H0011  ' Thumb: MOVW/MOVT
    IMAGE_REL_THUMB_MOV32 = &H0011  ' Thumb: MOVW/MOVT (deprecated)
    IMAGE_REL_ARM_BRANCH20T = &H0012  ' Thumb: 32-bit conditional B
    IMAGE_REL_THUMB_BRANCH20 = &H0012  ' Thumb: 32-bit conditional B (deprecated)
    IMAGE_REL_ARM_BRANCH24T = &H0014  ' Thumb: 32-bit B or BL
    IMAGE_REL_THUMB_BRANCH24 = &H0014  ' Thumb: 32-bit B or BL (deprecated)
    IMAGE_REL_ARM_BLX23T = &H0015  ' Thumb: BLX immediate
    IMAGE_REL_THUMB_BLX23 = &H0015  ' Thumb: BLX immediate (deprecated)
    IMAGE_REL_AM_ABSOLUTE = &H0000
    IMAGE_REL_AM_ADDR32 = &H0001
    IMAGE_REL_AM_ADDR32NB = &H0002
    IMAGE_REL_AM_CALL32 = &H0003
    IMAGE_REL_AM_FUNCINFO = &H0004
    IMAGE_REL_AM_REL32_1 = &H0005
    IMAGE_REL_AM_REL32_2 = &H0006
    IMAGE_REL_AM_SECREL = &H0007
    IMAGE_REL_AM_SECTION = &H0008
    IMAGE_REL_AM_TOKEN = &H0009
End Enum
Public Enum IMAGE_RELOC_TYPE_ARM64
    IMAGE_REL_ARM64_ABSOLUTE = &H0000  ' No relocation required
    IMAGE_REL_ARM64_ADDR32 = &H0001  ' 32 bit address. Review! do we need it?
    IMAGE_REL_ARM64_ADDR32NB = &H0002  ' 32 bit address w/o image base (RVA: for Data/PData/XData)
    IMAGE_REL_ARM64_BRANCH26 = &H0003  ' 26 bit offset << 2 & sign ext. for B & BL
    IMAGE_REL_ARM64_PAGEBASE_REL21 = &H0004  ' ADRP
    IMAGE_REL_ARM64_REL21 = &H0005  ' ADR
    IMAGE_REL_ARM64_PAGEOFFSET_12A = &H0006  ' ADD/ADDS (immediate) with zero shift, for page offset
    IMAGE_REL_ARM64_PAGEOFFSET_12L = &H0007  ' LDR (indexed, unsigned immediate), for page offset
    IMAGE_REL_ARM64_SECREL = &H0008  ' Offset within section
    IMAGE_REL_ARM64_SECREL_LOW12A = &H0009  ' ADD/ADDS (immediate) with zero shift, for bit 0:11 of section offset
    IMAGE_REL_ARM64_SECREL_HIGH12A = &H000A  ' ADD/ADDS (immediate) with zero shift, for bit 12:23 of section offset
    IMAGE_REL_ARM64_SECREL_LOW12L = &H000B  ' LDR (indexed, unsigned immediate), for bit 0:11 of section offset
    IMAGE_REL_ARM64_TOKEN = &H000C
    IMAGE_REL_ARM64_SECTION = &H000D  ' Section table index
    IMAGE_REL_ARM64_ADDR64 = &H000E  ' 64 bit address
    IMAGE_REL_ARM64_BRANCH19 = &H000F  ' 19 bit offset << 2 & sign ext. for conditional B
End Enum
Public Enum IMAGE_RELOC_TYPE_AMD64
    IMAGE_REL_AMD64_ABSOLUTE = &H0000  ' Reference is absolute, no relocation is necessary
    IMAGE_REL_AMD64_ADDR64 = &H0001  ' 64-bit address (VA).
    IMAGE_REL_AMD64_ADDR32 = &H0002  ' 32-bit address (VA).
    IMAGE_REL_AMD64_ADDR32NB = &H0003  ' 32-bit address w/o image base (RVA).
    IMAGE_REL_AMD64_REL32 = &H0004  ' 32-bit relative address from byte following reloc
    IMAGE_REL_AMD64_REL32_1 = &H0005  ' 32-bit relative address from byte distance 1 from reloc
    IMAGE_REL_AMD64_REL32_2 = &H0006  ' 32-bit relative address from byte distance 2 from reloc
    IMAGE_REL_AMD64_REL32_3 = &H0007  ' 32-bit relative address from byte distance 3 from reloc
    IMAGE_REL_AMD64_REL32_4 = &H0008  ' 32-bit relative address from byte distance 4 from reloc
    IMAGE_REL_AMD64_REL32_5 = &H0009  ' 32-bit relative address from byte distance 5 from reloc
    IMAGE_REL_AMD64_SECTION = &H000A  ' Section index
    IMAGE_REL_AMD64_SECREL = &H000B  ' 32 bit offset from base of section containing target
    IMAGE_REL_AMD64_SECREL7 = &H000C  ' 7 bit unsigned offset from base of section containing target
    IMAGE_REL_AMD64_TOKEN = &H000D  ' 32 bit metadata token
    IMAGE_REL_AMD64_SREL32 = &H000E  ' 32 bit signed span-dependent value emitted into object
    IMAGE_REL_AMD64_PAIR = &H000F
    IMAGE_REL_AMD64_SSPAN32 = &H0010  ' 32 bit signed span-dependent value applied at link time
    IMAGE_REL_AMD64_EHANDLER = &H0011
    IMAGE_REL_AMD64_IMPORT_BR = &H0012  ' Indirect branch to an import
    IMAGE_REL_AMD64_IMPORT_CALL = &H0013  ' Indirect call to an import
    IMAGE_REL_AMD64_CFG_BR = &H0014  ' Indirect branch to a CFG check
    IMAGE_REL_AMD64_CFG_BR_REX = &H0015  ' Indirect branch to a CFG check, with REX.W prefix
    IMAGE_REL_AMD64_CFG_CALL = &H0016  ' Indirect call to a CFG check
    IMAGE_REL_AMD64_INDIR_BR = &H0017  ' Indirect branch to a target in RAX (no CFG)
    IMAGE_REL_AMD64_INDIR_BR_REX = &H0018  ' Indirect branch to a target in RAX, with REX.W prefix (no CFG)
    IMAGE_REL_AMD64_INDIR_CALL = &H0019  ' Indirect call to a target in RAX (no CFG)
    IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_FIRST = &H0020  ' Indirect branch for a switch table using Reg 0 (RAX)
    IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_LAST = &H002F  ' Indirect branch for a switch table using Reg 15 (R15)
End Enum
Public Enum IMAGE_RELOC_TYPE_IA64
    IMAGE_REL_IA64_ABSOLUTE = &H0000
    IMAGE_REL_IA64_IMM14 = &H0001
    IMAGE_REL_IA64_IMM22 = &H0002
    IMAGE_REL_IA64_IMM64 = &H0003
    IMAGE_REL_IA64_DIR32 = &H0004
    IMAGE_REL_IA64_DIR64 = &H0005
    IMAGE_REL_IA64_PCREL21B = &H0006
    IMAGE_REL_IA64_PCREL21M = &H0007
    IMAGE_REL_IA64_PCREL21F = &H0008
    IMAGE_REL_IA64_GPREL22 = &H0009
    IMAGE_REL_IA64_LTOFF22 = &H000A
    IMAGE_REL_IA64_SECTION = &H000B
    IMAGE_REL_IA64_SECREL22 = &H000C
    IMAGE_REL_IA64_SECREL64I = &H000D
    IMAGE_REL_IA64_SECREL32 = &H000E
    IMAGE_REL_IA64_DIR32NB = &H0010
    IMAGE_REL_IA64_SREL14 = &H0011
    IMAGE_REL_IA64_SREL22 = &H0012
    IMAGE_REL_IA64_SREL32 = &H0013
    IMAGE_REL_IA64_UREL32 = &H0014
    IMAGE_REL_IA64_PCREL60X = &H0015  ' This is always a BRL and never converted
    IMAGE_REL_IA64_PCREL60B = &H0016  ' If possible, convert to MBB bundle with NOP.B in slot 1
    IMAGE_REL_IA64_PCREL60F = &H0017  ' If possible, convert to MFB bundle with NOP.F in slot 1
    IMAGE_REL_IA64_PCREL60I = &H0018  ' If possible, convert to MIB bundle with NOP.I in slot 1
    IMAGE_REL_IA64_PCREL60M = &H0019  ' If possible, convert to MMB bundle with NOP.M in slot 1
    IMAGE_REL_IA64_IMMGPREL64 = &H001A
    IMAGE_REL_IA64_TOKEN = &H001B  ' clr token
    IMAGE_REL_IA64_GPREL32 = &H001C
    IMAGE_REL_IA64_ADDEND = &H001F
End Enum
Public Enum IMAGE_RELOC_TYPE_CEF
    IMAGE_REL_CEF_ABSOLUTE = &H0000  ' Reference is absolute, no relocation is necessary
    IMAGE_REL_CEF_ADDR32 = &H0001  ' 32-bit address (VA).
    IMAGE_REL_CEF_ADDR64 = &H0002  ' 64-bit address (VA).
    IMAGE_REL_CEF_ADDR32NB = &H0003  ' 32-bit address w/o image base (RVA).
    IMAGE_REL_CEF_SECTION = &H0004  ' Section index
    IMAGE_REL_CEF_SECREL = &H0005  ' 32 bit offset from base of section containing target
    IMAGE_REL_CEF_TOKEN = &H0006  ' 32 bit metadata token
End Enum
Public Enum IMAGE_RELOC_TYPE_CEE
    IMAGE_REL_CEE_ABSOLUTE = &H0000  ' Reference is absolute, no relocation is necessary
    IMAGE_REL_CEE_ADDR32 = &H0001  ' 32-bit address (VA).
    IMAGE_REL_CEE_ADDR64 = &H0002  ' 64-bit address (VA).
    IMAGE_REL_CEE_ADDR32NB = &H0003  ' 32-bit address w/o image base (RVA).
    IMAGE_REL_CEE_SECTION = &H0004  ' Section index
    IMAGE_REL_CEE_SECREL = &H0005  ' 32 bit offset from base of section containing target
    IMAGE_REL_CEE_TOKEN = &H0006  ' 32 bit metadata token
End Enum
Public Enum IMAGE_RELOC_TYPE_M32R
    IMAGE_REL_M32R_ABSOLUTE = &H0000  ' No relocation required
    IMAGE_REL_M32R_ADDR32 = &H0001  ' 32 bit address
    IMAGE_REL_M32R_ADDR32NB = &H0002  ' 32 bit address w/o image base
    IMAGE_REL_M32R_ADDR24 = &H0003  ' 24 bit address
    IMAGE_REL_M32R_GPREL16 = &H0004  ' GP relative addressing
    IMAGE_REL_M32R_PCREL24 = &H0005  ' 24 bit offset << 2 & sign ext.
    IMAGE_REL_M32R_PCREL16 = &H0006  ' 16 bit offset << 2 & sign ext.
    IMAGE_REL_M32R_PCREL8 = &H0007  ' 8 bit offset << 2 & sign ext.
    IMAGE_REL_M32R_REFHALF = &H0008  ' 16 MSBs
    IMAGE_REL_M32R_REFHI = &H0009  ' 16 MSBs; adj for LSB sign ext.
    IMAGE_REL_M32R_REFLO = &H000A  ' 16 LSBs
    IMAGE_REL_M32R_PAIR = &H000B  ' Link HI and LO
    IMAGE_REL_M32R_SECTION = &H000C  ' Section table index
    IMAGE_REL_M32R_SECREL32 = &H000D  ' 32 bit section relative reference
    IMAGE_REL_M32R_TOKEN = &H000E  ' clr token
End Enum
Public Enum IMAGE_RELOC_TYPE_EBC
    IMAGE_REL_EBC_ABSOLUTE = &H0000  ' No relocation required
    IMAGE_REL_EBC_ADDR32NB = &H0001  ' 32 bit address w/o image base
    IMAGE_REL_EBC_REL32 = &H0002  ' 32-bit relative address from byte following reloc
    IMAGE_REL_EBC_SECTION = &H0003  ' Section table index
    IMAGE_REL_EBC_SECREL = &H0004  ' Offset within section
End Enum

Public Type IMAGE_RUNTIME_FUNCTION_ENTRY
    BeginAddress As Long
    EndAddress As Long
    UnwindInfoAddress As Long
End Type
'Alias RUNTIME_FUNCTION As IMAGE_RUNTIME_FUNCTION_ENTRY
Public Type RUNTIME_FUNCTION
    BeginAddress As Long
    EndAddress As Long
    UnwindInfoAddress As Long
End Type

Public Type UNWIND_HISTORY_TABLE_ENTRY
    ImageBase As LongPtr
    FunctionEntry As LongPtr 'PRUNTIME_FUNCTION
End Type

Public Type IMAGE_DYNAMIC_RELOCATION_TABLE
    Version As Long
    Size As Long
    '  IMAGE_DYNAMIC_RELOCATION DynamicRelocations[0];
End Type

Public Type UNWIND_HISTORY_TABLE
    Count As Long
    LocalHint As Byte
    GlobalHint As Byte
    Search As Byte
    Once As Byte
    LowAddress As LongPtr
    HighAddress As LongPtr
    Entry(0 To (UNWIND_HISTORY_TABLE_SIZE - 1)) As UNWIND_HISTORY_TABLE_ENTRY
End Type

[PackingAlignment(1)]
Public Type IMAGE_DYNAMIC_RELOCATION32
    Symbol As Long
    BaseRelocSize As Long
    '  IMAGE_BASE_RELOCATION BaseRelocations[0];
End Type
[PackingAlignment(1)]
Public Type IMAGE_DYNAMIC_RELOCATION64
    Symbol As LongLong
    BaseRelocSize As Long
    '  IMAGE_BASE_RELOCATION BaseRelocations[0];
End Type
#If Win64 Then
    'Alias IMAGE_DYNAMIC_RELOCATION As IMAGE_DYNAMIC_RELOCATION64
    [PackingAlignment(1)]
    Public Type IMAGE_DYNAMIC_RELOCATION
        Symbol As LongLong
        BaseRelocSize As Long
        '  IMAGE_BASE_RELOCATION BaseRelocations[0];
    End Type
#Else
    'Alias IMAGE_DYNAMIC_RELOCATION As IMAGE_DYNAMIC_RELOCATION32
    [PackingAlignment(1)]
    Public Type IMAGE_DYNAMIC_RELOCATION
        Symbol As Long
        BaseRelocSize As Long
        '  IMAGE_BASE_RELOCATION BaseRelocations[0];
    End Type
#End If

[PackingAlignment(1)]
Public Type IMAGE_DYNAMIC_RELOCATION32_V2
    HeaderSize As Long
    FixupInfoSize As Long
    Symbol As Long
    SymbolGroup As Long
    Flags As Long
    ' ...     variable length header fields
    ' BYTE    FixupInfo[FixupInfoSize]
End Type
[PackingAlignment(1)]
Public Type IMAGE_DYNAMIC_RELOCATION64_V2
    HeaderSize As Long
    FixupInfoSize As Long
    Symbol As LongLong
    SymbolGroup As Long
    Flags As Long
    ' ...     variable length header fields
    ' BYTE    FixupInfo[FixupInfoSize]
End Type

#If Win64 Then
[PackingAlignment(1)]
Public Type IMAGE_DYNAMIC_RELOCATION_V2
    HeaderSize As Long
    FixupInfoSize As Long
    Symbol As LongLong
    SymbolGroup As Long
    Flags As Long
    ' ...     variable length header fields
    ' BYTE    FixupInfo[FixupInfoSize]
End Type
#Else
[PackingAlignment(1)]
Public Type IMAGE_DYNAMIC_RELOCATION_V2
    HeaderSize As Long
    FixupInfoSize As Long
    Symbol As Long
    SymbolGroup As Long
    Flags As Long
    ' ...     variable length header fields
    ' BYTE    FixupInfo[FixupInfoSize]
End Type
#End If


[PackingAlignment(2)]
Public Type IMAGE_RELOCATION
    ' union {
        ' DWORD   VirtualAddress;
        ' DWORD   RelocCount;             // Set to the real count when IMAGE_SCN_LNK_NRELOC_OVFL is set
    ' } DUMMYUNIONNAME;
    VirtAddrOrRelocCt As Long
    SymbolTableIndex As Long
    nType As Integer
End Type

[PackingAlignment(2)]
Public Type IMAGE_LINENUMBER
    '    union {
    '        DWORD   SymbolTableIndex;               // Symbol table index of function name if Linenumber is 0.
    '        DWORD   VirtualAddress;                 // Virtual address of line number.
    '   } Type;
    nType As Long
    Linenumber As Integer ' Line number.
End Type


Public Type IMAGE_LOAD_CONFIG_CODE_INTEGRITY
    Flags As Integer ' Flags to indicate if CI information is available, etc.
    Catalog As Integer ' 0xFFFF means not available
    CatalogOffset As Long
    Reserved As Long ' Additional bitmask to be defined later
End Type
Public Enum ImageLoadConfigGuardFlags
    IMAGE_GUARD_CF_INSTRUMENTED = &H00000100  ' Module performs control flow integrity checks using system-supplied support
    IMAGE_GUARD_CFW_INSTRUMENTED = &H00000200  ' Module performs control flow and write integrity checks
    IMAGE_GUARD_CF_FUNCTION_TABLE_PRESENT = &H00000400  ' Module contains valid control flow target metadata
    IMAGE_GUARD_SECURITY_COOKIE_UNUSED = &H00000800  ' Module does not make use of the /GS security cookie
    IMAGE_GUARD_PROTECT_DELAYLOAD_IAT = &H00001000  ' Module supports read only delay load IAT
    IMAGE_GUARD_DELAYLOAD_IAT_IN_ITS_OWN_SECTION = &H00002000  ' Delayload import table in its own .didat section (with nothing else in it) that can be freely reprotected
    IMAGE_GUARD_CF_EXPORT_SUPPRESSION_INFO_PRESENT = &H00004000  ' Module contains suppressed export information. This also infers that the address taken
'  taken IAT table is also present in the load config.
    IMAGE_GUARD_CF_ENABLE_EXPORT_SUPPRESSION = &H00008000&  ' Module enables suppression of exports
    IMAGE_GUARD_CF_LONGJUMP_TABLE_PRESENT = &H00010000  ' Module contains longjmp target information
    IMAGE_GUARD_RF_INSTRUMENTED = &H00020000  ' Module contains return flow instrumentation and metadata
    IMAGE_GUARD_RF_ENABLE = &H00040000  ' Module requests that the OS enable return flow protection
    IMAGE_GUARD_RF_STRICT = &H00080000  ' Module requests that the OS enable return flow protection in strict mode
    IMAGE_GUARD_RETPOLINE_PRESENT = &H00100000  ' Module was built with retpoline support
'  DO_NOT_USE                                          0x00200000 // Was EHCont flag on VB (20H1)
    IMAGE_GUARD_EH_CONTINUATION_TABLE_PRESENT = &H00400000  ' Module contains EH continuation target information
    IMAGE_GUARD_XFG_ENABLED = &H00800000  ' Module was built with xfg
    IMAGE_GUARD_CASTGUARD_PRESENT = &H01000000  ' Module has CastGuard instrumentation present
    IMAGE_GUARD_MEMCPY_PRESENT = &H02000000  ' Module has Guarded Memcpy instrumentation present
    IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_MASK = &HF0000000  ' Stride of Guard CF function table encoded in these bits (additional count of bytes per element)
    IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_SHIFT = 28  ' Shift to right-justify Guard CF function table stride
End Enum
[Description("⚠️ **WARNING:** CHECK SIZE BEFORE COPYING: This UDT has members appended in most Windows versions. Only copy the available size.")]
Public Type IMAGE_LOAD_CONFIG_DIRECTORY64
    Size As Long
    TimeDateStamp As Long
    MajorVersion As Integer
    MinorVersion As Integer
    GlobalFlagsClear As Long
    GlobalFlagsSet As Long
    CriticalSectionDefaultTimeout As Long
    DeCommitFreeBlockThreshold As LongLong
    DeCommitTotalFreeThreshold As LongLong
    LockPrefixTable As LongLong ' VA
    MaximumAllocationSize As LongLong
    VirtualMemoryThreshold As LongLong
    ProcessAffinityMask As LongLong
    ProcessHeapFlags As Long
    CSDVersion As Integer
    DependentLoadFlags As Integer
    EditList As LongLong ' VA
    SecurityCookie As LongLong ' VA
    SEHandlerTable As LongLong ' VA
    SEHandlerCount As LongLong
    'Fields available in v8.1+ of the Windows SDK.
    GuardCFCheckFunctionPointer As LongLong ' VA
    GuardCFDispatchFunctionPointer As LongLong ' VA
    GuardCFFunctionTable As LongLong ' VA
    GuardCFFunctionCount As LongLong
    GuardFlags As ImageLoadConfigGuardFlags
    'Fields available in v10.0.10586.0+ of the Windows SDK.
    CodeIntegrity As IMAGE_LOAD_CONFIG_CODE_INTEGRITY
    GuardAddressTakenIatEntryTable As LongLong ' VA
    GuardAddressTakenIatEntryCount As LongLong
    GuardLongJumpTargetTable As LongLong ' VA
    GuardLongJumpTargetCount As LongLong
    DynamicValueRelocTable As LongLong ' VA
    CHPEMetadataPointer As LongLong ' VA
    'Fields available in the v10.0.15063.468+ of the SDK.
    GuardRFFailureRoutine As LongLong ' VA
    GuardRFFailureRoutineFunctionPointer As LongLong ' VA
    DynamicValueRelocTableOffset As Long
    DynamicValueRelocTableSection As Integer
    Reserved2 As Integer
    'Windows 11
    GuardRFVerifyStackPointerFunctionPointer As LongLong ' VA
    HotPatchTableOffset As Long
    Reserved3 As Long
    EnclaveConfigurationPointer As LongLong ' VA
    VolatileMetadataPointer As LongLong ' VA
    GuardEHContinuationTable As LongLong ' VA
    GuardEHContinuationCount As LongLong
    GuardXFGCheckFunctionPointer As LongLong ' VA
    GuardXFGDispatchFunctionPointer As LongLong ' VA
    GuardXFGTableDispatchFunctionPointer As LongLong ' VA
    CastGuardOsDeterminedFailureMode As LongLong ' VA
    GuardMemcpyFunctionPointer As LongLong ' VA
End Type
[Description("⚠️ **WARNING:** CHECK SIZE BEFORE COPYING: This UDT has members appended in most Windows versions. Only copy the available size.")]
Public Type IMAGE_LOAD_CONFIG_DIRECTORY32
    Size As Long
    TimeDateStamp As Long
    MajorVersion As Integer
    MinorVersion As Integer
    GlobalFlagsClear As Long
    GlobalFlagsSet As Long
    CriticalSectionDefaultTimeout As Long
    DeCommitFreeBlockThreshold As Long
    DeCommitTotalFreeThreshold As Long
    LockPrefixTable As Long ' VA
    MaximumAllocationSize As Long
    VirtualMemoryThreshold As Long
    ProcessAffinityMask As Long
    ProcessHeapFlags As Long
    CSDVersion As Integer
    DependentLoadFlags As Integer
    EditList As Long ' VA
    SecurityCookie As Long ' VA
    SEHandlerTable As Long ' VA
    SEHandlerCount As Long
    'Fields available in v8.1+ of the Windows SDK.
    GuardCFCheckFunctionPointer As Long ' VA
    GuardCFDispatchFunctionPointer As Long ' VA
    GuardCFFunctionTable As Long ' VA
    GuardCFFunctionCount As Long
    GuardFlags As ImageLoadConfigGuardFlags
    'Fields available in v10.0.10586.0+ of the Windows SDK.
    CodeIntegrity As IMAGE_LOAD_CONFIG_CODE_INTEGRITY
    GuardAddressTakenIatEntryTable As Long ' VA
    GuardAddressTakenIatEntryCount As Long
    GuardLongJumpTargetTable As Long ' VA
    GuardLongJumpTargetCount As Long
    DynamicValueRelocTable As Long ' VA
    CHPEMetadataPointer As Long ' VA
    'Fields available in the v10.0.15063.468+ of the SDK.
    GuardRFFailureRoutine As Long ' VA
    GuardRFFailureRoutineFunctionPointer As Long ' VA
    DynamicValueRelocTableOffset As Long
    DynamicValueRelocTableSection As Integer
    Reserved2 As Integer
    'Windows 11
    GuardRFVerifyStackPointerFunctionPointer As Long ' VA
    HotPatchTableOffset As Long
    Reserved3 As Long
    EnclaveConfigurationPointer As Long ' VA
    VolatileMetadataPointer As Long ' VA
    GuardEHContinuationTable As Long ' VA
    GuardEHContinuationCount As Long
    GuardXFGCheckFunctionPointer As Long ' VA
    GuardXFGDispatchFunctionPointer As Long ' VA
    GuardXFGTableDispatchFunctionPointer As Long ' VA
    CastGuardOsDeterminedFailureMode As Long ' VA
    GuardMemcpyFunctionPointer As Long ' VA
End Type
[Description("⚠️ **WARNING:** CHECK SIZE BEFORE COPYING: This UDT has members appended in most Windows versions. Only copy the available size.")]
Public Type IMAGE_LOAD_CONFIG_DIRECTORY
    Size As Long
    TimeDateStamp As Long
    MajorVersion As Integer
    MinorVersion As Integer
    GlobalFlagsClear As Long
    GlobalFlagsSet As Long
    CriticalSectionDefaultTimeout As Long
    DeCommitFreeBlockThreshold As LongPtr
    DeCommitTotalFreeThreshold As LongPtr
    LockPrefixTable As LongPtr ' VA
    MaximumAllocationSize As LongPtr
    VirtualMemoryThreshold As LongPtr
    ProcessAffinityMask As LongPtr
    ProcessHeapFlags As Long
    CSDVersion As Integer
    DependentLoadFlags As Integer
    EditList As LongPtr ' VA
    SecurityCookie As LongPtr ' VA
    SEHandlerTable As LongPtr ' VA
    SEHandlerCount As LongPtr
    'Fields available in v8.1+ of the Windows SDK.
    GuardCFCheckFunctionPointer As LongPtr ' VA
    GuardCFDispatchFunctionPointer As LongPtr ' VA
    GuardCFFunctionTable As LongPtr ' VA
    GuardCFFunctionCount As LongPtr
    GuardFlags As ImageLoadConfigGuardFlags
    'Fields available in v10.0.10586.0+ of the Windows SDK.
    CodeIntegrity As IMAGE_LOAD_CONFIG_CODE_INTEGRITY
    GuardAddressTakenIatEntryTable As LongPtr ' VA
    GuardAddressTakenIatEntryCount As LongPtr
    GuardLongJumpTargetTable As LongPtr ' VA
    GuardLongJumpTargetCount As LongPtr
    DynamicValueRelocTable As LongPtr ' VA
    CHPEMetadataPointer As LongPtr ' VA
    'Fields available in the v10.0.15063.468+ of the SDK.
    GuardRFFailureRoutine As LongPtr ' VA
    GuardRFFailureRoutineFunctionPointer As LongPtr ' VA
    DynamicValueRelocTableOffset As Long
    DynamicValueRelocTableSection As Integer
    Reserved2 As Integer
    'Windows 11
    GuardRFVerifyStackPointerFunctionPointer As LongPtr ' VA
    HotPatchTableOffset As Long
    Reserved3 As Long
    EnclaveConfigurationPointer As LongPtr ' VA
    VolatileMetadataPointer As LongPtr ' VA
    GuardEHContinuationTable As LongPtr ' VA
    GuardEHContinuationCount As LongPtr
    GuardXFGCheckFunctionPointer As LongPtr ' VA
    GuardXFGDispatchFunctionPointer As LongPtr ' VA
    GuardXFGTableDispatchFunctionPointer As LongPtr ' VA
    CastGuardOsDeterminedFailureMode As LongPtr ' VA
    GuardMemcpyFunctionPointer As LongPtr ' VA
End Type

Public Enum IMAGE_DEBUG_TYPE
    IMAGE_DEBUG_TYPE_UNKNOWN = 0
    IMAGE_DEBUG_TYPE_COFF = 1
    IMAGE_DEBUG_TYPE_CODEVIEW = 2 '_PDB_INFO
    IMAGE_DEBUG_TYPE_FPO = 3
    IMAGE_DEBUG_TYPE_MISC = 4
    IMAGE_DEBUG_TYPE_EXCEPTION = 5
    IMAGE_DEBUG_TYPE_FIXUP = 6
    IMAGE_DEBUG_TYPE_OMAP_TO_SRC = 7
    IMAGE_DEBUG_TYPE_OMAP_FROM_SRC = 8
    IMAGE_DEBUG_TYPE_BORLAND = 9
    IMAGE_DEBUG_TYPE_RESERVED10 = 10
    IMAGE_DEBUG_TYPE_BBT = IMAGE_DEBUG_TYPE_RESERVED10
    IMAGE_DEBUG_TYPE_CLSID = 11
    IMAGE_DEBUG_TYPE_VC_FEATURE = 12
    IMAGE_DEBUG_TYPE_POGO = 13
    IMAGE_DEBUG_TYPE_ILTCG = 14
    IMAGE_DEBUG_TYPE_MPX = 15
    IMAGE_DEBUG_TYPE_REPRO = 16
    IMAGE_DEBUG_TYPE_SPGO = 18
    IMAGE_DEBUG_TYPE_EX_DLLCHARACTERISTICS = 20
End Enum
Public Type IMAGE_DEBUG_DIRECTORY
    Characteristics As Long
    TimeDateStamp As Long
    MajorVersion As Integer
    MinorVersion As Integer
    Type As IMAGE_DEBUG_TYPE
    SizeOfData As Long
    AddressOfRawData As Long
    PointerToRawData As Long
End Type
Public Enum IMAGE_DEBUG_EX_CH
    IMAGE_DLLCHARACTERISTICS_EX_CET_COMPAT = &H01
    IMAGE_DLLCHARACTERISTICS_EX_CET_COMPAT_STRICT_MODE = &H02
    IMAGE_DLLCHARACTERISTICS_EX_CET_SET_CONTEXT_IP_VALIDATION_RELAXED_MODE = &H04
    IMAGE_DLLCHARACTERISTICS_EX_CET_DYNAMIC_APIS_ALLOW_IN_PROC = &H08
    IMAGE_DLLCHARACTERISTICS_EX_CET_RESERVED_1 = &H10  ' Reserved for CET policy *downgrade* only!
    IMAGE_DLLCHARACTERISTICS_EX_CET_RESERVED_2 = &H20  ' Reserved for CET policy *downgrade* only!
End Enum

Public Type IMAGE_COFF_SYMBOLS_HEADER
    NumberOfSymbols As Long
    LvaToFirstSymbol As Long
    NumberOfLinenumbers As Long
    LvaToFirstLinenumber As Long
    RvaToFirstByteOfCode As Long
    RvaToLastByteOfCode As Long
    RvaToFirstByteOfData As Long
    RvaToLastByteOfData As Long
End Type

[Description("PdbFileName is a null-terminated ANSI string for which you don't know the length beforehand. Read until null char.")]
Public Type PDB_INFO
    CvSignature As Long
    Signature As UUID
    Age As Long
    PdbFileName As Byte
End Type

Public Enum FPO_FRAME
    FRAME_FPO = 0
    FRAME_TRAP = 1
    FRAME_TSS = 2
    FRAME_NONFPO = 3
End Enum
Public Type FPO_DATA
    ulOffStart As Long ' offset 1st byte of function code
    cbProcSize As Long ' # bytes in function
    cdwLocals As Long ' # bytes in locals/4
    cdwParams As Integer ' # bytes in params/4
    [Description("Bitfield. See comments in definition.")] Flags As Integer
    'WORD        cbProlog : 8;           // # bytes in prolog
    'WORD        cbRegs   : 3;           // # regs saved
    'WORD        fHasSEH  : 1;           // TRUE if SEH in func
    'WORD        fUseBP   : 1;           // TRUE if EBP has been allocated
    'WORD        reserved : 1;           // reserved for future use
    'WORD        cbFrame  : 2;           // frame type
End Type
Public Const SIZEOF_RFPO_DATA = 16

Public Type IMAGE_DEBUG_MISC
    DataType As Long ' type of misc data, see defines
    Length As Long ' total length of record, rounded to four
    ' byte multiple.
    Unicode As Byte ' TRUE if data is unicode string
    Reserved(0 To 2) As Byte
    Data(0 To 0) As Byte ' Actual data
End Type

Public Const IMAGE_POLICY_METADATA_VERSION  = 1
Public Const IMAGE_POLICY_SECTION_NAME  = ".tPolicy"
Public Const IMAGE_POLICY_METADATA_NAME  = "__ImagePolicyMetadata"

Public Enum IMAGE_POLICY_ENTRY_TYPE
    ImagePolicyEntryTypeNone = 0
    ImagePolicyEntryTypeBool
    ImagePolicyEntryTypeInt8
    ImagePolicyEntryTypeUInt8
    ImagePolicyEntryTypeInt16
    ImagePolicyEntryTypeUInt16
    ImagePolicyEntryTypeInt32
    ImagePolicyEntryTypeUInt32
    ImagePolicyEntryTypeInt64
    ImagePolicyEntryTypeUInt64
    ImagePolicyEntryTypeAnsiString
    ImagePolicyEntryTypeUnicodeString
    ImagePolicyEntryTypeOverride
    ImagePolicyEntryTypeMaximum
End Enum
Public Enum IMAGE_POLICY_ID
    ImagePolicyIdNone = 0
    ImagePolicyIdEtw
    ImagePolicyIdDebug
    ImagePolicyIdCrashDump
    ImagePolicyIdCrashDumpKey
    ImagePolicyIdCrashDumpKeyGuid
    ImagePolicyIdParentSd
    ImagePolicyIdParentSdRev
    ImagePolicyIdSvn
    ImagePolicyIdDeviceId
    ImagePolicyIdCapability
    ImagePolicyIdScenarioId
    ImagePolicyIdMaximum
End Enum

Public Type IMAGE_POLICY_ENTRY
    Type As IMAGE_POLICY_ENTRY_TYPE
    PolicyId As IMAGE_POLICY_ID
' union {
    ' const VOID* None;
    ' BOOLEAN BoolValue;
    ' INT8 Int8Value;
    ' UINT8 UInt8Value;
    ' INT16 Int16Value;
    ' UINT16 UInt16Value;
    ' INT32 Int32Value;
    ' UINT32 UInt32Value;
    ' INT64 Int64Value;
    ' UINT64 UInt64Value;
    ' PCSTR AnsiStringValue;
    ' PCWSTR UnicodeStringValue;
' } u;    
    u As LongLong
End Type
Public Type IMAGE_POLICY_METADATA
    Version As Byte
    Reserved0(0 To 6) As Byte
    ApplicationId As LongLong
    Policies(ImagePolicyIdMaximum - 1) As IMAGE_POLICY_ENTRY
End Type


Public Enum RTL_FAST_FAIL
    FAST_FAIL_LEGACY_GS_VIOLATION = 0
    FAST_FAIL_VTGUARD_CHECK_FAILURE = 1
    FAST_FAIL_STACK_COOKIE_CHECK_FAILURE = 2
    FAST_FAIL_CORRUPT_LIST_ENTRY = 3
    FAST_FAIL_INCORRECT_STACK = 4
    FAST_FAIL_INVALID_ARG = 5
    FAST_FAIL_GS_COOKIE_INIT = 6
    FAST_FAIL_FATAL_APP_EXIT = 7
    FAST_FAIL_RANGE_CHECK_FAILURE = 8
    FAST_FAIL_UNSAFE_REGISTRY_ACCESS = 9
    FAST_FAIL_GUARD_ICALL_CHECK_FAILURE = 10
    FAST_FAIL_GUARD_WRITE_CHECK_FAILURE = 11
    FAST_FAIL_INVALID_FIBER_SWITCH = 12
    FAST_FAIL_INVALID_SET_OF_CONTEXT = 13
    FAST_FAIL_INVALID_REFERENCE_COUNT = 14
    FAST_FAIL_INVALID_JUMP_BUFFER = 18
    FAST_FAIL_MRDATA_MODIFIED = 19
    FAST_FAIL_CERTIFICATION_FAILURE = 20
    FAST_FAIL_INVALID_EXCEPTION_CHAIN = 21
    FAST_FAIL_CRYPTO_LIBRARY = 22
    FAST_FAIL_INVALID_CALL_IN_DLL_CALLOUT = 23
    FAST_FAIL_INVALID_IMAGE_BASE = 24
    FAST_FAIL_DLOAD_PROTECTION_FAILURE = 25
    FAST_FAIL_UNSAFE_EXTENSION_CALL = 26
    FAST_FAIL_DEPRECATED_SERVICE_INVOKED = 27
    FAST_FAIL_INVALID_BUFFER_ACCESS = 28
    FAST_FAIL_INVALID_BALANCED_TREE = 29
    FAST_FAIL_INVALID_NEXT_THREAD = 30
    FAST_FAIL_GUARD_ICALL_CHECK_SUPPRESSED = 31  ' Telemetry, nonfatal
    FAST_FAIL_APCS_DISABLED = 32
    FAST_FAIL_INVALID_IDLE_STATE = 33
    FAST_FAIL_MRDATA_PROTECTION_FAILURE = 34
    FAST_FAIL_UNEXPECTED_HEAP_EXCEPTION = 35
    FAST_FAIL_INVALID_LOCK_STATE = 36
    FAST_FAIL_GUARD_JUMPTABLE = 37  ' Known to compiler, must retain value 37
    FAST_FAIL_INVALID_LONGJUMP_TARGET = 38
    FAST_FAIL_INVALID_DISPATCH_CONTEXT = 39
    FAST_FAIL_INVALID_THREAD = 40
    FAST_FAIL_INVALID_SYSCALL_NUMBER = 41  ' Telemetry, nonfatal
    FAST_FAIL_INVALID_FILE_OPERATION = 42  ' Telemetry, nonfatal
    FAST_FAIL_LPAC_ACCESS_DENIED = 43  ' Telemetry, nonfatal
    FAST_FAIL_GUARD_SS_FAILURE = 44
    FAST_FAIL_LOADER_CONTINUITY_FAILURE = 45  ' Telemetry, nonfatal
    FAST_FAIL_GUARD_EXPORT_SUPPRESSION_FAILURE = 46
    FAST_FAIL_INVALID_CONTROL_STACK = 47
    FAST_FAIL_SET_CONTEXT_DENIED = 48
    FAST_FAIL_INVALID_IAT = 49
    FAST_FAIL_HEAP_METADATA_CORRUPTION = 50
    FAST_FAIL_PAYLOAD_RESTRICTION_VIOLATION = 51
    FAST_FAIL_LOW_LABEL_ACCESS_DENIED = 52  ' Telemetry, nonfatal
    FAST_FAIL_ENCLAVE_CALL_FAILURE = 53
    FAST_FAIL_UNHANDLED_LSS_EXCEPTON = 54
    FAST_FAIL_ADMINLESS_ACCESS_DENIED = 55  ' Telemetry, nonfatal
    FAST_FAIL_UNEXPECTED_CALL = 56
    FAST_FAIL_CONTROL_INVALID_RETURN_ADDRESS = 57
    FAST_FAIL_UNEXPECTED_HOST_BEHAVIOR = 58
    FAST_FAIL_FLAGS_CORRUPTION = 59
    FAST_FAIL_VEH_CORRUPTION = 60
    FAST_FAIL_ETW_CORRUPTION = 61
    FAST_FAIL_RIO_ABORT = 62
    FAST_FAIL_INVALID_PFN = 63
    FAST_FAIL_GUARD_ICALL_CHECK_FAILURE_XFG = 64
    FAST_FAIL_CAST_GUARD = 65  ' Known to compiler, must retain value 65
    FAST_FAIL_HOST_VISIBILITY_CHANGE = 66
    FAST_FAIL_KERNEL_CET_SHADOW_STACK_ASSIST = 67
    FAST_FAIL_PATCH_CALLBACK_FAILED = 68
    FAST_FAIL_NTDLL_PATCH_FAILED = 69
    FAST_FAIL_INVALID_FLS_DATA = 70
    FAST_FAIL_INVALID_FAST_FAIL_CODE = &HFFFFFFFF
End Enum

Public Type KSYSTEM_TIME
    LowPart As Long '0x0
    High1Time As Long '0x4
    High2Time As Long '0x8
End Type
Public Enum NT_PRODUCT_TYPE
    NtProductWinNt = 1
    NtProductLanManNt = 2
    NtProductServer = 3
End Enum
Public Enum ALTERNATIVE_ARCHITECTURE_TYPE
    StandardDesign = 0
    NEC98x86 = 1
    EndAlternatives = 2
End Enum

Public Enum SharedDataFlagsMasks
    DbgErrorPortPresent = &H0001
    DbgElevationEnabled = &H0002
    DbgVirtEnabled = &H0004
    DbgInstallerDetectEnabled = &H0008
    DbgLkgEnabled = &H0010 '6.2 and higher
    DbgSystemDllRelocated = &H0010 '6.0 and 6.1
    DbgDynProcessorEnabled = &H0020
    DbgSEHValidationEnabled = &H0040 '6.1 only
    DbgConsoleBrokerEnabled = &H0040 '6.2 and higher
    DbgSecureBootEnabled = &H0080 '6.2 and higher
    DbgMultiSessionSku = &H0100 '10.0 and higher
    DbgMultiUsersInSessionSku = &H200 '1607 and higher
    DbgStateSeparationEnabled = &H400 '1709 and higher
End Enum


[Description("Included members are through XP SP2; above that they are increasingly volatile.")]
Public Type KUSER_SHARED_DATA
    TickCountLowDeprecated As Long '0x0
    TickCountMultiplier As Long '0x4
    InterruptTime As KSYSTEM_TIME '0x8
    SystemTime As KSYSTEM_TIME '0x14
    TimeZoneBias As KSYSTEM_TIME '0x20
    ImageNumberLow As Integer '0x2c
    ImageNumberHigh As Integer '0x2e
    NtSystemRoot(0 To 259) As Integer '0x30
    MaxStackTraceDepth As Long '0x238
    CryptoExponent As Long '0x23c
    TimeZoneId As Long '0x240
    LargePageMinimum As Long '0x244
    ' Reserved2(0 To 6) As Long '0x248
    AitSamplingValue As Long '0x24C
    AppCompatFlag As Long '0x250
    #If (TWINBASIC = 1) Or (Win64 = 1) Then
    RNGSeedVersion As LongLong
    #Else
    RNGSeedVersion As Currency
    #End If
    GlobalValidationRunlevel As Long
    TimeZoneBiasStamp As Long
    NtBuildNumber As Long
    NtProductType As NT_PRODUCT_TYPE '0x264
    ProductTypeIsValid As Byte '0x268
    Reserved0 As Byte
    NativeProcessorArchitecture As Integer
    NtMajorVersion As Long '0x26c
    NtMinorVersion As Long '0x270
    ProcessorFeatures(0 To 63) As Byte '0x274  See PROCESSOR_FEATURES enum. The order matches.
    Reserved1 As Long '0x2b4 MmHighestUserAddress 
    Reserved3 As Long '0x2b8 MmSystemRangeStart
    TimeSlip As Long '0x2bc
    AlternativeArchitecture As ALTERNATIVE_ARCHITECTURE_TYPE '0x2c0
    BootId As Long 'Windows 10+ only
    SystemExpirationDate As LARGE_INTEGER '0x2c8
    SuiteMask As VER_SUITE_VALUES '0x2d0
    KdDebuggerEnabled As Byte '0x2d4
    MitigationPolicies As Byte '0x2d5
    'struct MitigationPolicies {
    '    UCHAR NXSupportPolicy:2
    '    UCHAR SEHValidationPolicy:2
    '    UCHAR CurDirDevicesSkippedForDlls:2
    '    UCHAR Reserved:2
    '}
    ' Microsoft defines the following as allowed values for the NXSupportPolicy:
    ' 0 for NX_SUPPORT_POLICY_ALWAYSOFF;
    ' 1 for NX_SUPPORT_POLICY_ALWAYSON;
    ' 2 for NX_SUPPORT_POLICY_OPTIN;
    ' 3 for NX_SUPPORT_POLICY_OPTOUT;
    ' and another set for the SEHValidationPolicy:
    ' 0 for SEH_VALIDATION_POLICY_ON;
    ' 1 for SEH_VALIDATION_POLICY_OFF;
    ' 2 for SEH_VALIDATION_POLICY_TELEMETRY;
    ' 3 for SEH_VALIDATION_POLICY_DEFER.
    CyclesPerYield As Integer 'Only on Win10 1903 and higher
    ActiveConsoleId As Long '0x2d8
    DismountCount As Long '0x2dc
    ComPlusPackage As Long '0x2e0
    LastSystemRITEventTickCount As Long '0x2e4
    NumberOfPhysicalPages As Long '0x2e8
    SafeBootMode As Byte '0x2ec
    VirtualizationFlags As Byte
    Reserved12(1) As Byte
    SharedDataFlags As SharedDataFlagsMasks '0x2f0 NOTE: TraceLogging on 2k/XP
    DataFlagsPad(0) As Long
    #If (TWINBASIC = 1) Or (Win64 = 1) Then
    TestRetInstruction As LongLong '0x2f8
    #Else
    TestRetInstruction As Currency
    #End If
    SystemCall As Long '0x300
    SystemCallReturn As Long '0x304
    #If (TWINBASIC = 1) Or (Win64 = 1) Then
    SystemCallPad(0 To 2) As LongLong '0x308
    TickCountQuad As LongLong '0x320
    #Else
    SystemCallPad(0 To 2) As Currency    
    TickCountQuad As Currency
    #End If
    'union
    '{
    '    volatile struct _KSYSTEM_TIME TickCount;                            //0x320
    'TickCount As KSYSTEM_TIME
    ReservedTickCountOverlay(1) As Long 'Since not using _KSYSTEM_TIME
    '};
    Cookie As Long '0x330
    'Wow64SharedInformation(0 To 15) As Long '0x334
End Type






Public Type CLIENT_ID
    UniqueProcess As LongPtr
    UniqueThread  As LongPtr
End Type

Public Enum ObjectAttributeValues
    OBJ_INHERIT = &H00000002
    OBJ_PERMANENT = &H00000010
    OBJ_EXCLUSIVE = &H00000020
    OBJ_CASE_INSENSITIVE = &H00000040
    OBJ_OPENIF = &H00000080
    OBJ_OPENLINK = &H00000100
    OBJ_KERNEL_HANDLE = &H00000200
    OBJ_FORCE_ACCESS_CHECK = &H00000400
    OBJ_IGNORE_IMPERSONATED_DEVICEMAP = &H00000800
    OBJ_DONT_REPARSE = &H00001000
    OBJ_VALID_ATTRIBUTES = &H00001FF2
End Enum


Public Type OBJECT_ATTRIBUTES
    Length As Long
    RootDirectory As LongPtr
    ObjectName As LongPtr
    Attributes As ObjectAttributeValues
    SecurityDescriptor As LongPtr
    SecurityQualityOfService As LongPtr
End Type

Public Enum OBJECT_INFORMATION_CLASS
    ObjectBasicInformation = 0
    ObjectNameInformation
    ObjectTypeInformation
    ObjectTypesInformation
    ObjectHandleFlagInformation
    ObjectSessionInformation
    ObjectSessionObjectInformation
End Enum

Public Type OBJECT_BASIC_INFORMATION
    Attributes As ObjectAttributeValues
    GrantedAccess As Long
    HandleCount As Long
    PointerCount As Long
    PagedPoolCharge As Long
    NonPagedPoolCharge As Long
    Reserved(2) As Long
    NameInfoSize As Long
    TypeInfoSize As Long
    SecurityDescriptorSize As Long
    CreationTime As LongLong
End  Type
[Description("Note: Full type available as OBJECT_BASIC_INFORMATION")]
Public Type PUBLIC_OBJECT_BASIC_INFORMATION
    Attributes As ObjectAttributeValues
    GrantedAccess As Long
    HandleCount As Long
    PointerCount As Long
    Reserved(9) As Long
End Type
Public Type OBJECT_NAME_INFORMATION
    Name As UNICODE_STRING
End Type

Public Type GENERIC_MAPPING
    GenericRead As Long
    GenericWrite As Long
    GenericExecute As Long
    GenericAll As Long
End Type

Public Type OBJECT_TYPES_INFORMATION
    NumberOfTypes As Long
End Type

[Description("This structure is followed by the string described by TypeName.")]
Public Type OBJECT_TYPE_INFORMATION
    TypeName                    As UNICODE_STRING   '
    TotalNumberOfObjects        As Long    'ULONG   '
    TotalNumberOfHandles        As Long    'ULONG   '
    TotalPagedPoolUsage         As Long    'ULONG   '
    TotalNonPagedPoolUsage      As Long    'ULONG   '
    TotalNamePoolUsage          As Long    'ULONG   '
    TotalHandleTableUsage       As Long    'ULONG   '
    HighWaterNumberOfObjects    As Long    'ULONG   '
    HighWaterNumberOfHandles    As Long    'ULONG   '
    HighWaterPagedPoolUsage     As Long    'ULONG   '
    HighWaterNonPagedPoolUsage  As Long    'ULONG   '
    HighWaterNamePoolUsage      As Long    'ULONG   '
    HighWaterHandleTableUsage   As Long    'ULONG   '
    InvalidAttributes           As Long    'ULONG   '
    GenericMapping              As GENERIC_MAPPING  '
    ValidAccessMask             As Long    'ULONG   '
    SecurityRequired            As Byte    'BOOLEAN '
    MaintainHandleCount         As Byte    'BOOLEAN '
    TypeIndex                   As Byte    'UCHAR
    PoolType                    As POOL_TYPE    'ULONG   '
    DefaultPagedPoolCharge      As Long    'ULONG   '
    DefaultNonPagedPoolCharge   As Long    'ULONG   ' total 22 x ULONG
End Type
[Description("Note: Full type available as OBJECT_TYPE_INFORMATION")]
Public Type PUBLIC_OBJECT_TYPE_INFORMATION
    TypeName As UNICODE_STRING
    Reserved(0 To 21) As Long ' reserved for internal use
End Type
Public Type OBJECT_DIRECTORY_INFORMATION
    Name As UNICODE_STRING
    TypeName As UNICODE_STRING
End Type

Public Type OBJECT_HANDLE_FLAG_INFORMATION
    Inherit As Byte
    ProtectFromClose As Byte
End Type


Public Enum DuplicateObjectOptions
    DUPLICATE_CLOSE_SOURCE = &H00000001
    DUPLICATE_SAME_ACCESS = &H00000002
    DUPLICATE_SAME_ATTRIBUTES = &H00000004
End Enum




Public Enum SYSTEM_INFORMATION_CLASS
    SystemBasicInformation' // q: SYSTEM_BASIC_INFORMATION
    SystemProcessorInformation' // q: SYSTEM_PROCESSOR_INFORMATION
    SystemPerformanceInformation' // q: SYSTEM_PERFORMANCE_INFORMATION
    SystemTimeOfDayInformation' // q: SYSTEM_TIMEOFDAY_INFORMATION
    SystemPathInformation' // not implemented
    SystemProcessInformation' // q: SYSTEM_PROCESS_INFORMATION
    SystemCallCountInformation' // q: SYSTEM_CALL_COUNT_INFORMATION
    SystemDeviceInformation' // q: SYSTEM_DEVICE_INFORMATION
    SystemProcessorPerformanceInformation' // q: SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION
    SystemFlagsInformation' // q: SYSTEM_FLAGS_INFORMATION
    SystemCallTimeInformation' // not implemented // SYSTEM_CALL_TIME_INFORMATION // 10
    SystemModuleInformation' // q: RTL_PROCESS_MODULES
    SystemLocksInformation' // q: RTL_PROCESS_LOCKS
    SystemStackTraceInformation' // q: RTL_PROCESS_BACKTRACES
    SystemPagedPoolInformation' // not implemented
    SystemNonPagedPoolInformation' // not implemented
    SystemHandleInformation' // q: SYSTEM_HANDLE_INFORMATION
    SystemObjectInformation' // q: SYSTEM_OBJECTTYPE_INFORMATION mixed with SYSTEM_OBJECT_INFORMATION
    SystemPageFileInformation' // q: SYSTEM_PAGEFILE_INFORMATION
    SystemVdmInstemulInformation' // q: SYSTEM_VDM_INSTEMUL_INFO
    SystemVdmBopInformation' // not implemented // 20
    SystemFileCacheInformation' // q: SYSTEM_FILECACHE_INFORMATION; s (requires SeIncreaseQuotaPrivilege) (info for WorkingSetTypeSystemCache)
    SystemPoolTagInformation' // q: SYSTEM_POOLTAG_INFORMATION
    SystemInterruptInformation' // q: SYSTEM_INTERRUPT_INFORMATION
    SystemDpcBehaviorInformation' // q: SYSTEM_DPC_BEHAVIOR_INFORMATION; s: SYSTEM_DPC_BEHAVIOR_INFORMATION (requires SeLoadDriverPrivilege)
    SystemFullMemoryInformation' // not implemented // SYSTEM_MEMORY_USAGE_INFORMATION
    SystemLoadGdiDriverInformation' // s (kernel-mode only)
    SystemUnloadGdiDriverInformation' // s (kernel-mode only)
    SystemTimeAdjustmentInformation' // q: SYSTEM_QUERY_TIME_ADJUST_INFORMATION; s: SYSTEM_SET_TIME_ADJUST_INFORMATION (requires SeSystemtimePrivilege)
    SystemSummaryMemoryInformation' // not implemented // SYSTEM_MEMORY_USAGE_INFORMATION
    SystemMirrorMemoryInformation' // s (requires license value "Kernel-MemoryMirroringSupported") (requires SeShutdownPrivilege) // 30
    SystemPerformanceTraceInformation' // q; s: (type depends on EVENT_TRACE_INFORMATION_CLASS)
    SystemObsolete0' // not implemented
    SystemExceptionInformation' // q: SYSTEM_EXCEPTION_INFORMATION
    SystemCrashDumpStateInformation' // s: SYSTEM_CRASH_DUMP_STATE_INFORMATION (requires SeDebugPrivilege)
    SystemKernelDebuggerInformation' // q: SYSTEM_KERNEL_DEBUGGER_INFORMATION
    SystemContextSwitchInformation' // q: SYSTEM_CONTEXT_SWITCH_INFORMATION
    SystemRegistryQuotaInformation' // q: SYSTEM_REGISTRY_QUOTA_INFORMATION; s (requires SeIncreaseQuotaPrivilege)
    SystemExtendServiceTableInformation' // s (requires SeLoadDriverPrivilege) // loads win32k only
    SystemPrioritySeperation' // s (requires SeTcbPrivilege)
    SystemVerifierAddDriverInformation' // s (requires SeDebugPrivilege) // 40
    SystemVerifierRemoveDriverInformation' // s (requires SeDebugPrivilege)
    SystemProcessorIdleInformation' // q: SYSTEM_PROCESSOR_IDLE_INFORMATION
    SystemLegacyDriverInformation' // q: SYSTEM_LEGACY_DRIVER_INFORMATION
    SystemCurrentTimeZoneInformation' // q; s: RTL_TIME_ZONE_INFORMATION
    SystemLookasideInformation' // q: SYSTEM_LOOKASIDE_INFORMATION
    SystemTimeSlipNotification' // s: HANDLE (NtCreateEvent) (requires SeSystemtimePrivilege)
    SystemSessionCreate' // not implemented
    SystemSessionDetach' // not implemented
    SystemSessionInformation' // not implemented (SYSTEM_SESSION_INFORMATION)
    SystemRangeStartInformation' // q: SYSTEM_RANGE_START_INFORMATION // 50
    SystemVerifierInformation' // q: SYSTEM_VERIFIER_INFORMATION; s (requires SeDebugPrivilege)
    SystemVerifierThunkExtend' // s (kernel-mode only)
    SystemSessionProcessInformation' // q: SYSTEM_SESSION_PROCESS_INFORMATION
    SystemLoadGdiDriverInSystemSpace' // s: SYSTEM_GDI_DRIVER_INFORMATION (kernel-mode only) (same as SystemLoadGdiDriverInformation)
    SystemNumaProcessorMap' // q: SYSTEM_NUMA_INFORMATION
    SystemPrefetcherInformation' // q; s: PREFETCHER_INFORMATION // PfSnQueryPrefetcherInformation
    SystemExtendedProcessInformation' // q: SYSTEM_PROCESS_INFORMATION
    SystemRecommendedSharedDataAlignment' // q: ULONG // KeGetRecommendedSharedDataAlignment
    SystemComPlusPackage' // q; s: ULONG
    SystemNumaAvailableMemory' // q: SYSTEM_NUMA_INFORMATION // 60
    SystemProcessorPowerInformation' // q: SYSTEM_PROCESSOR_POWER_INFORMATION
    SystemEmulationBasicInformation' // q: SYSTEM_BASIC_INFORMATION
    SystemEmulationProcessorInformation' // q: SYSTEM_PROCESSOR_INFORMATION
    SystemExtendedHandleInformation' // q: SYSTEM_HANDLE_INFORMATION_EX
    SystemLostDelayedWriteInformation' // q: ULONG
    SystemBigPoolInformation' // q: SYSTEM_BIGPOOL_INFORMATION
    SystemSessionPoolTagInformation' // q: SYSTEM_SESSION_POOLTAG_INFORMATION
    SystemSessionMappedViewInformation' // q: SYSTEM_SESSION_MAPPED_VIEW_INFORMATION
    SystemHotpatchInformation' // q; s: SYSTEM_HOTPATCH_CODE_INFORMATION
    SystemObjectSecurityMode' // q: ULONG // 70
    SystemWatchdogTimerHandler' // s: SYSTEM_WATCHDOG_HANDLER_INFORMATION // (kernel-mode only)
    SystemWatchdogTimerInformation' // q: SYSTEM_WATCHDOG_TIMER_INFORMATION // (kernel-mode only)
    SystemLogicalProcessorInformation' // q: SYSTEM_LOGICAL_PROCESSOR_INFORMATION (EX in: USHORT ProcessorGroup)
    SystemWow64SharedInformationObsolete' // not implemented
    SystemRegisterFirmwareTableInformationHandler' // s: SYSTEM_FIRMWARE_TABLE_HANDLER // (kernel-mode only)
    SystemFirmwareTableInformation' // SYSTEM_FIRMWARE_TABLE_INFORMATION
    SystemModuleInformationEx' // q: RTL_PROCESS_MODULE_INFORMATION_EX
    SystemVerifierTriageInformation' // not implemented
    SystemSuperfetchInformation' // q; s: SUPERFETCH_INFORMATION // PfQuerySuperfetchInformation
    SystemMemoryListInformation' // q: SYSTEM_MEMORY_LIST_INFORMATION; s: SYSTEM_MEMORY_LIST_COMMAND (requires SeProfileSingleProcessPrivilege) // 80
    SystemFileCacheInformationEx' // q: SYSTEM_FILECACHE_INFORMATION; s (requires SeIncreaseQuotaPrivilege) (same as SystemFileCacheInformation)
    SystemThreadPriorityClientIdInformation' // s: SYSTEM_THREAD_CID_PRIORITY_INFORMATION (requires SeIncreaseBasePriorityPrivilege)
    SystemProcessorIdleCycleTimeInformation' // q: SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION[] (EX in: USHORT ProcessorGroup)
    SystemVerifierCancellationInformation' // SYSTEM_VERIFIER_CANCELLATION_INFORMATION // name:wow64:whNT32QuerySystemVerifierCancellationInformation
    SystemProcessorPowerInformationEx' // not implemented
    SystemRefTraceInformation' // q; s: SYSTEM_REF_TRACE_INFORMATION // ObQueryRefTraceInformation
    SystemSpecialPoolInformation' // q; s: SYSTEM_SPECIAL_POOL_INFORMATION (requires SeDebugPrivilege) // MmSpecialPoolTag' then MmSpecialPoolCatchOverruns != 0
    SystemProcessIdInformation' // q: SYSTEM_PROCESS_ID_INFORMATION
    SystemErrorPortInformation' // s (requires SeTcbPrivilege)
    SystemBootEnvironmentInformation' // q: SYSTEM_BOOT_ENVIRONMENT_INFORMATION // 90
    SystemHypervisorInformation' // q: SYSTEM_HYPERVISOR_QUERY_INFORMATION
    SystemVerifierInformationEx' // q; s: SYSTEM_VERIFIER_INFORMATION_EX
    SystemTimeZoneInformation' // q; s: RTL_TIME_ZONE_INFORMATION (requires SeTimeZonePrivilege)
    SystemImageFileExecutionOptionsInformation' // s: SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION (requires SeTcbPrivilege)
    SystemCoverageInformation' // q: COVERAGE_MODULES s: COVERAGE_MODULE_REQUEST // ExpCovQueryInformation (requires SeDebugPrivilege)
    SystemPrefetchPatchInformation' // SYSTEM_PREFETCH_PATCH_INFORMATION
    SystemVerifierFaultsInformation' // s: SYSTEM_VERIFIER_FAULTS_INFORMATION (requires SeDebugPrivilege)
    SystemSystemPartitionInformation' // q: SYSTEM_SYSTEM_PARTITION_INFORMATION
    SystemSystemDiskInformation' // q: SYSTEM_SYSTEM_DISK_INFORMATION
    SystemProcessorPerformanceDistribution' // q: SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION // 100
    SystemNumaProximityNodeInformation' // q; s: SYSTEM_NUMA_PROXIMITY_MAP
    SystemDynamicTimeZoneInformation' // q; s: RTL_DYNAMIC_TIME_ZONE_INFORMATION (requires SeTimeZonePrivilege)
    SystemCodeIntegrityInformation' // q: SYSTEM_CODEINTEGRITY_INFORMATION // SeCodeIntegrityQueryInformation
    SystemProcessorMicrocodeUpdateInformation' // s: SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION
    SystemProcessorBrandString' // q: CHAR[] // HaliQuerySystemInformation -> HalpGetProcessorBrandString' info class 23
    SystemVirtualAddressInformation' // q: SYSTEM_VA_LIST_INFORMATION[]; s: SYSTEM_VA_LIST_INFORMATION[] (requires SeIncreaseQuotaPrivilege) // MmQuerySystemVaInformation
    SystemLogicalProcessorAndGroupInformation' // q: SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX // since WIN7 // KeQueryLogicalProcessorRelationship
    SystemProcessorCycleTimeInformation' // q: SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION[] (EX in: USHORT ProcessorGroup)
    SystemStoreInformation' // q; s: SYSTEM_STORE_INFORMATION (requires SeProfileSingleProcessPrivilege) // SmQueryStoreInformation
    SystemRegistryAppendString' // s: SYSTEM_REGISTRY_APPEND_STRING_PARAMETERS // 110
    SystemAitSamplingValue' // s: ULONG (requires SeProfileSingleProcessPrivilege)
    SystemVhdBootInformation' // q: SYSTEM_VHD_BOOT_INFORMATION
    SystemCpuQuotaInformation' // q; s: PS_CPU_QUOTA_QUERY_INFORMATION
    SystemNativeBasicInformation' // q: SYSTEM_BASIC_INFORMATION
    SystemErrorPortTimeouts' // SYSTEM_ERROR_PORT_TIMEOUTS
    SystemLowPriorityIoInformation' // q: SYSTEM_LOW_PRIORITY_IO_INFORMATION
    SystemTpmBootEntropyInformation' // q: TPM_BOOT_ENTROPY_NT_RESULT // ExQueryTpmBootEntropyInformation
    SystemVerifierCountersInformation' // q: SYSTEM_VERIFIER_COUNTERS_INFORMATION
    SystemPagedPoolInformationEx' // q: SYSTEM_FILECACHE_INFORMATION; s (requires SeIncreaseQuotaPrivilege) (info for WorkingSetTypePagedPool)
    SystemSystemPtesInformationEx' // q: SYSTEM_FILECACHE_INFORMATION; s (requires SeIncreaseQuotaPrivilege) (info for WorkingSetTypeSystemPtes) // 120
    SystemNodeDistanceInformation'
    SystemAcpiAuditInformation' // q: SYSTEM_ACPI_AUDIT_INFORMATION // HaliQuerySystemInformation -> HalpAuditQueryResults' info class 26
    SystemBasicPerformanceInformation' // q: SYSTEM_BASIC_PERFORMANCE_INFORMATION // name:wow64:whNtQuerySystemInformation_SystemBasicPerformanceInformation
    SystemQueryPerformanceCounterInformation' // q: SYSTEM_QUERY_PERFORMANCE_COUNTER_INFORMATION // since WIN7 SP1
    SystemSessionBigPoolInformation' // q: SYSTEM_SESSION_POOLTAG_INFORMATION // since WIN8
    SystemBootGraphicsInformation' // q; s: SYSTEM_BOOT_GRAPHICS_INFORMATION (kernel-mode only)
    SystemScrubPhysicalMemoryInformation' // q; s: MEMORY_SCRUB_INFORMATION
    SystemBadPageInformation'
    SystemProcessorProfileControlArea' // q; s: SYSTEM_PROCESSOR_PROFILE_CONTROL_AREA
    SystemCombinePhysicalMemoryInformation' // s: MEMORY_COMBINE_INFORMATION' MEMORY_COMBINE_INFORMATION_EX' MEMORY_COMBINE_INFORMATION_EX2 // 130
    SystemEntropyInterruptTimingInformation' // q; s: SYSTEM_ENTROPY_TIMING_INFORMATION
    SystemConsoleInformation' // q: SYSTEM_CONSOLE_INFORMATION
    SystemPlatformBinaryInformation' // q: SYSTEM_PLATFORM_BINARY_INFORMATION (requires SeTcbPrivilege)
    SystemPolicyInformation' // q: SYSTEM_POLICY_INFORMATION
    SystemHypervisorProcessorCountInformation' // q: SYSTEM_HYPERVISOR_PROCESSOR_COUNT_INFORMATION
    SystemDeviceDataInformation' // q: SYSTEM_DEVICE_DATA_INFORMATION
    SystemDeviceDataEnumerationInformation' // q: SYSTEM_DEVICE_DATA_INFORMATION
    SystemMemoryTopologyInformation' // q: SYSTEM_MEMORY_TOPOLOGY_INFORMATION
    SystemMemoryChannelInformation' // q: SYSTEM_MEMORY_CHANNEL_INFORMATION
    SystemBootLogoInformation' // q: SYSTEM_BOOT_LOGO_INFORMATION // 140
    SystemProcessorPerformanceInformationEx' // q: SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION_EX // since WINBLUE
    SystemCriticalProcessErrorLogInformation'
    SystemSecureBootPolicyInformation' // q: SYSTEM_SECUREBOOT_POLICY_INFORMATION
    SystemPageFileInformationEx' // q: SYSTEM_PAGEFILE_INFORMATION_EX
    SystemSecureBootInformation' // q: SYSTEM_SECUREBOOT_INFORMATION
    SystemEntropyInterruptTimingRawInformation'
    SystemPortableWorkspaceEfiLauncherInformation' // q: SYSTEM_PORTABLE_WORKSPACE_EFI_LAUNCHER_INFORMATION
    SystemFullProcessInformation' // q: SYSTEM_PROCESS_INFORMATION with SYSTEM_PROCESS_INFORMATION_EXTENSION (requires admin)
    SystemKernelDebuggerInformationEx' // q: SYSTEM_KERNEL_DEBUGGER_INFORMATION_EX
    SystemBootMetadataInformation' // 150
    SystemSoftRebootInformation' // q: ULONG
    SystemElamCertificateInformation' // s: SYSTEM_ELAM_CERTIFICATE_INFORMATION
    SystemOfflineDumpConfigInformation' // q: OFFLINE_CRASHDUMP_CONFIGURATION_TABLE_V2
    SystemProcessorFeaturesInformation' // q: SYSTEM_PROCESSOR_FEATURES_INFORMATION
    SystemRegistryReconciliationInformation' // s: NULL (requires admin) (flushes registry hives)
    SystemEdidInformation' // q: SYSTEM_EDID_INFORMATION
    SystemManufacturingInformation' // q: SYSTEM_MANUFACTURING_INFORMATION // since THRESHOLD
    SystemEnergyEstimationConfigInformation' // q: SYSTEM_ENERGY_ESTIMATION_CONFIG_INFORMATION
    SystemHypervisorDetailInformation' // q: SYSTEM_HYPERVISOR_DETAIL_INFORMATION
    SystemProcessorCycleStatsInformation' // q: SYSTEM_PROCESSOR_CYCLE_STATS_INFORMATION // 160
    SystemVmGenerationCountInformation'
    SystemTrustedPlatformModuleInformation' // q: SYSTEM_TPM_INFORMATION
    SystemKernelDebuggerFlags' // SYSTEM_KERNEL_DEBUGGER_FLAGS
    SystemCodeIntegrityPolicyInformation' // q: SYSTEM_CODEINTEGRITYPOLICY_INFORMATION
    SystemIsolatedUserModeInformation' // q: SYSTEM_ISOLATED_USER_MODE_INFORMATION
    SystemHardwareSecurityTestInterfaceResultsInformation'
    SystemSingleModuleInformation' // q: SYSTEM_SINGLE_MODULE_INFORMATION
    SystemAllowedCpuSetsInformation'
    SystemVsmProtectionInformation' // q: SYSTEM_VSM_PROTECTION_INFORMATION (previously SystemDmaProtectionInformation)
    SystemInterruptCpuSetsInformation' // q: SYSTEM_INTERRUPT_CPU_SET_INFORMATION // 170
    SystemSecureBootPolicyFullInformation' // q: SYSTEM_SECUREBOOT_POLICY_FULL_INFORMATION
    SystemCodeIntegrityPolicyFullInformation'
    SystemAffinitizedInterruptProcessorInformation' // (requires SeIncreaseBasePriorityPrivilege)
    SystemRootSiloInformation' // q: SYSTEM_ROOT_SILO_INFORMATION
    SystemCpuSetInformation' // q: SYSTEM_CPU_SET_INFORMATION // since THRESHOLD2
    SystemCpuSetTagInformation' // q: SYSTEM_CPU_SET_TAG_INFORMATION
    SystemWin32WerStartCallout'
    SystemSecureKernelProfileInformation' // q: SYSTEM_SECURE_KERNEL_HYPERGUARD_PROFILE_INFORMATION
    SystemCodeIntegrityPlatformManifestInformation' // q: SYSTEM_SECUREBOOT_PLATFORM_MANIFEST_INFORMATION // since REDSTONE
    SystemInterruptSteeringInformation' // SYSTEM_INTERRUPT_STEERING_INFORMATION_INPUT // 180
    SystemSupportedProcessorArchitectures' // p: in opt: HANDLE' out: SYSTEM_SUPPORTED_PROCESSOR_ARCHITECTURES_INFORMATION[] // NtQuerySystemInformationEx
    SystemMemoryUsageInformation' // q: SYSTEM_MEMORY_USAGE_INFORMATION
    SystemCodeIntegrityCertificateInformation' // q: SYSTEM_CODEINTEGRITY_CERTIFICATE_INFORMATION
    SystemPhysicalMemoryInformation' // q: SYSTEM_PHYSICAL_MEMORY_INFORMATION // since REDSTONE2
    SystemControlFlowTransition'
    SystemKernelDebuggingAllowed' // s: ULONG
    SystemActivityModerationExeState' // SYSTEM_ACTIVITY_MODERATION_EXE_STATE
    SystemActivityModerationUserSettings' // SYSTEM_ACTIVITY_MODERATION_USER_SETTINGS
    SystemCodeIntegrityPoliciesFullInformation'
    SystemCodeIntegrityUnlockInformation' // SYSTEM_CODEINTEGRITY_UNLOCK_INFORMATION // 190
    SystemIntegrityQuotaInformation'
    SystemFlushInformation' // q: SYSTEM_FLUSH_INFORMATION
    SystemProcessorIdleMaskInformation' // q: ULONG_PTR // since REDSTONE3
    SystemSecureDumpEncryptionInformation'
    SystemWriteConstraintInformation' // SYSTEM_WRITE_CONSTRAINT_INFORMATION
    SystemKernelVaShadowInformation' // SYSTEM_KERNEL_VA_SHADOW_INFORMATION
    SystemHypervisorSharedPageInformation' // SYSTEM_HYPERVISOR_SHARED_PAGE_INFORMATION // since REDSTONE4
    SystemFirmwareBootPerformanceInformation'
    SystemCodeIntegrityVerificationInformation' // SYSTEM_CODEINTEGRITYVERIFICATION_INFORMATION
    SystemFirmwarePartitionInformation' // SYSTEM_FIRMWARE_PARTITION_INFORMATION // 200
    SystemSpeculationControlInformation' // SYSTEM_SPECULATION_CONTROL_INFORMATION // (CVE-2017-5715) REDSTONE3 and above.
    SystemDmaGuardPolicyInformation' // SYSTEM_DMA_GUARD_POLICY_INFORMATION
    SystemEnclaveLaunchControlInformation' // SYSTEM_ENCLAVE_LAUNCH_CONTROL_INFORMATION
    SystemWorkloadAllowedCpuSetsInformation' // SYSTEM_WORKLOAD_ALLOWED_CPU_SET_INFORMATION // since REDSTONE5
    SystemCodeIntegrityUnlockModeInformation'
    SystemLeapSecondInformation' // SYSTEM_LEAP_SECOND_INFORMATION
    SystemFlags2Information' // q: SYSTEM_FLAGS_INFORMATION
    SystemSecurityModelInformation' // SYSTEM_SECURITY_MODEL_INFORMATION // since 19H1
    SystemCodeIntegritySyntheticCacheInformation'
    SystemFeatureConfigurationInformation' // SYSTEM_FEATURE_CONFIGURATION_INFORMATION // since 20H1 // 210
    SystemFeatureConfigurationSectionInformation' // SYSTEM_FEATURE_CONFIGURATION_SECTIONS_INFORMATION
    SystemFeatureUsageSubscriptionInformation' // SYSTEM_FEATURE_USAGE_SUBSCRIPTION_DETAILS
    SystemSecureSpeculationControlInformation' // SECURE_SPECULATION_CONTROL_INFORMATION
    SystemSpacesBootInformation' // since 20H2
    SystemFwRamdiskInformation' // SYSTEM_FIRMWARE_RAMDISK_INFORMATION
    SystemWheaIpmiHardwareInformation'
    SystemDifSetRuleClassInformation'
    SystemDifClearRuleClassInformation'
    SystemDifApplyPluginVerificationOnDriver'
    SystemDifRemovePluginVerificationOnDriver' // 220
    SystemShadowStackInformation' // SYSTEM_SHADOW_STACK_INFORMATION
    SystemBuildVersionInformation' // SYSTEM_BUILD_VERSION_INFORMATION
    SystemPoolLimitInformation' // SYSTEM_POOL_LIMIT_INFORMATION
    SystemCodeIntegrityAddDynamicStore'
    SystemCodeIntegrityClearDynamicStores'
    SystemDifPoolTrackingInformation'
    SystemPoolZeroingInformation' // SYSTEM_POOL_ZEROING_INFORMATION
    SystemDpcWatchdogInformation'
    SystemDpcWatchdogInformation2'
    SystemSupportedProcessorArchitectures2'// q: in opt: HANDLE' out: SYSTEM_SUPPORTED_PROCESSOR_ARCHITECTURES_INFORMATION[] // NtQuerySystemInformationEx  // 230
    SystemSingleProcessorRelationshipInformation'
    SystemXfgCheckFailureInformation'
    SystemIommuStateInformation' // since 11H1
    SystemHypervisorMinrootInformation'
    SystemHypervisorBootPagesInformation'
    SystemPointerAuthInformation'
    SystemSecureKernelDebuggerInformation'
    MaxSystemInfoClass
End Enum

Public Type SYSTEM_BASIC_INFORMATION
    Reserved As Long
    TimerResolution As Long
    PageSize As Long
    NumberOfPhysicalPages As Long
    LowestPhysicalPageNumber As Long
    HighestPhysicalPageNumber As Long
    AllocationGranularity As Long
    MinimumUserModeAddress As LongPtr
    MaximumUserModeAddress As LongPtr
    ActiveProcessorsAffinityMask As LongPtr
    NumberOfProcessors As Byte
End Type

Public Type SYSTEM_PROCESSOR_INFORMATION
    ProcessorArchitecture As Integer /* PROCESSOR_ARCHITECTURE */
    ProcessorLevel As Integer
    ProcessorRevision As Integer
    MaximumProcessors As Integer 'Win7+ only
    ProcessorFeatureBits As Long
End Type

Public Type SYSTEM_PERFORMANCE_INFORMATION
    IdleProcessTime As LARGE_INTEGER
    IoReadTransferCount As LARGE_INTEGER
    IoWriteTransferCount As LARGE_INTEGER
    IoOtherTransferCount As LARGE_INTEGER
    IoReadOperationCount As Long
    IoWriteOperationCount As Long
    IoOtherOperationCount As Long
    AvailablePages As Long
    CommittedPages As Long
    CommitLimit As Long
    PeakCommitment As Long
    PageFaultCount As Long
    CopyOnWriteCount As Long
    TransitionCount As Long
    CacheTransitionCount As Long
    DemandZeroCount As Long
    PageReadCount As Long
    PageReadIoCount As Long
    CacheReadCount As Long
    CacheIoCount As Long
    DirtyPagesWriteCount As Long
    DirtyWriteIoCount As Long
    MappedPagesWriteCount As Long
    MappedWriteIoCount As Long
    PagedPoolPages As Long
    NonPagedPoolPages As Long
    PagedPoolAllocs As Long
    PagedPoolFrees As Long
    NonPagedPoolAllocs As Long
    NonPagedPoolFrees As Long
    FreeSystemPtes As Long
    ResidentSystemCodePage As Long
    TotalSystemDriverPages As Long
    TotalSystemCodePages As Long
    NonPagedPoolLookasideHits As Long
    PagedPoolLookasideHits As Long
    AvailablePagedPoolPages As Long
    ResidentSystemCachePage As Long
    ResidentPagedPoolPage As Long
    ResidentSystemDriverPage As Long
    CcFastReadNoWait As Long
    CcFastReadWait As Long
    CcFastReadResourceMiss As Long
    CcFastReadNotPossible As Long
    CcFastMdlReadNoWait As Long
    CcFastMdlReadWait As Long
    CcFastMdlReadResourceMiss As Long
    CcFastMdlReadNotPossible As Long
    CcMapDataNoWait As Long
    CcMapDataWait As Long
    CcMapDataNoWaitMiss As Long
    CcMapDataWaitMiss As Long
    CcPinMappedDataCount As Long
    CcPinReadNoWait As Long
    CcPinReadWait As Long
    CcPinReadNoWaitMiss As Long
    CcPinReadWaitMiss As Long
    CcCopyReadNoWait As Long
    CcCopyReadWait As Long
    CcCopyReadNoWaitMiss As Long
    CcCopyReadWaitMiss As Long
    CcMdlReadNoWait As Long
    CcMdlReadWait As Long
    CcMdlReadNoWaitMiss As Long
    CcMdlReadWaitMiss As Long
    CcReadAheadIos As Long
    CcLazyWriteIos As Long
    CcLazyWritePages As Long
    CcDataFlushes As Long
    CcDataPages As Long
    ContextSwitches As Long
    FirstLevelTbFills As Long
    SecondLevelTbFills As Long
    SystemCalls As Long
    CcTotalDirtyPages As LongLong 'Windows 10 only
    CcDirtyPageThreshold As LongLong 'Windows 10 only
    ResidentAvailablePages As LongLong 'Windows 10 only
    SharedCommittedPages As LongLong 'Windows 10 only
End Type

Public Type SYSTEM_TIMEOFDAY_INFORMATION
    BootTime As LARGE_INTEGER
    CurrentTime As LARGE_INTEGER
    TimeZoneBias As LARGE_INTEGER
    TimeZoneId As Long
    Reserved As Long
    BootTimeBias As LongLong
    SleepTimeBias As LongLong
End Type

Public Type SYSTEM_PROCESS_INFORMATION
    NextEntryOffset As Long
    NumberOfThreads As Long
    'The following 48 bytes may change and are invalid on some early Windows versions:
    WorkingSetPrivateSize As LARGE_INTEGER
    HardFaultCount As Long
    NumberOfThreadsHighWatermark As Long
    CycleTime As LongLong
    CreateTime As LARGE_INTEGER
    UserTime As LARGE_INTEGER
    KernelTime As LARGE_INTEGER
    ImageName As UNICODE_STRING
    BasePriority As Long
    'Resume documented members
    UniqueProcessId As Long
    InheritedFromUniqueProcessId As LongPtr
    HandleCount As Long
    SessionId As Long
    UniqueProcessKey As LongPtr
    PeakVirtualSize As LongPtr
    VirtualSize As LongPtr
    PageFaultCount As Long
    PeakWorkingSetSize As LongPtr
    WorkingSetSize As LongPtr
    QuotaPeakPagedPoolUsage As LongPtr
    QuotaPagedPoolUsage As LongPtr
    QuotaPeakNonPagedPoolUsage As LongPtr
    QuotaNonPagedPoolUsage As LongPtr
    PagefileUsage As LongPtr
    PeakPagefileUsage As LongPtr
    PrivatePageCount As LongPtr
    ReadOperationCount As LARGE_INTEGER
    WriteOperationCount As LARGE_INTEGER
    OtherOperationCount As LARGE_INTEGER
    ReadTransferCount As LARGE_INTEGER
    WriteTransferCount As LARGE_INTEGER
    OtherTransferCount As LARGE_INTEGER
End Type
Public Type SYSTEM_THREAD_INFORMATION
    KernelTime As LARGE_INTEGER
    UserTime As LARGE_INTEGER
    CreateTime As LARGE_INTEGER
    WaitTime As Long
    StartAddress As LongPtr
    ClientId As CLIENT_ID
    Priority As Long
    BasePriority As Long
    ContextSwitches As Long
    ThreadState As Long
    WaitReason As Long
End Type

Public Type SYSTEM_LOOKASIDE_INFORMATION
    CurrentDepth As Long
    MaximumDepth As Long
    TotalAllocates As Long
    AllocateMisses As Long
    TotalFrees As Long
    FreeMisses As Long
    Type As Long
    Tag As Long
    Size As Long
End Type

Public Type SYSTEM_CALL_COUNT_INFORMATION
    Length As Long
    NumberOfTables As Long
End Type

Public Type SYSTEM_DEVICE_INFORMATION
    NumberOfDisks As Long
    NumberOfFloppies As Long
    NumberOfCdRoms As Long
    NumberOfTapes As Long
    NumberOfSerialPorts As Long
    NumberOfParallelPorts As Long
End Type

Public Type SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION
    IdleTime As LARGE_INTEGER
    KernelTime As LARGE_INTEGER
    UserTime As LARGE_INTEGER
    DpcTime As LARGE_INTEGER
    InterruptTime As LARGE_INTEGER
    InterruptCount As Long
End Type

Public Type SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION_EX
    IdleTime As LARGE_INTEGER
    KernelTime As LARGE_INTEGER
    UserTime As LARGE_INTEGER
    DpcTime As LARGE_INTEGER
    InterruptTime As LARGE_INTEGER
    InterruptCount As Long
    Spare0 As Long
    AvailableTime As LARGE_INTEGER
    Spare1 As LARGE_INTEGER
    Spare2 As LARGE_INTEGER
End Type

Public Type SYSTEM_FLAGS_INFORMATION
    Flags As NTGLB_Flags
End Type

Public Type PROCESS_DISK_COUNTERS
    BytesRead As LongLong
    BytesWritten As LongLong
    ReadOperationCount As LongLong
    WriteOperationCount As LongLong
    FlushOperationCount As LongLong
End Type

Public Enum SYSTEM_PROCESS_CLASSIFICATION
    SystemProcessClassificationNormal
    SystemProcessClassificationSystem
    SystemProcessClassificationSecureSystem
    SystemProcessClassificationMemCompression
    SystemProcessClassificationRegistry   ' REDSTONE4
    SystemProcessClassificationMaximum
End Enum
Public Type SYSTEM_PROCESS_INFORMATION_EXTENSION
    DiskCounters As PROCESS_DISK_COUNTERS
    ContextSwitches As LongLong
    'union
    '{
    '    ULONG Flags;
    '    struct
    '    {
    '        ULONG HasStrongId : 1;
    '        ULONG Classification : 4; // SYSTEM_PROCESS_CLASSIFICATION
    '        ULONG BackgroundActivityModerated : 1;
    '        ULONG Spare : 26;
    '    };
    '};
    Flags As Long
    UserSidOffset As Long
    PackageFullNameOffset As Long ' since THRESHOLD
    EnergyValues As PROCESS_ENERGY_VALUES ' since THRESHOLD
    AppIdOffset As Long ' since THRESHOLD
    SharedCommitCharge As LongPtr ' since THRESHOLD2
    JobObjectId As Long ' since REDSTONE
    SpareUlong As Long ' since REDSTONE
    ProcessSequenceNumber As LongLong
End Type

Public Type SYSTEM_PORTABLE_WORKSPACE_EFI_LAUNCHER_INFORMATION
    EfiLauncherEnabled As Byte
End Type

Public Type SYSTEM_KERNEL_DEBUGGER_INFORMATION_EX
    DebuggerAllowed As Byte
    DebuggerEnabled As Byte
    DebuggerPresent As Byte
End Type

[Description("EDID v1.4 standard data format")]
Public Type SYSTEM_EDID_INFORMATION
    Edid(0 To 127) As Byte
End Type

Public Type SYSTEM_MANUFACTURING_INFORMATION
    Options As Long
    ProfileName As UNICODE_STRING
End Type

Public Type SYSTEM_TPM_INFORMATION
    Flags As Long
End Type

[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type SYSTEM_CALL_TIME_INFORMATION
    Length As Long
    TotalCalls As Long
    TimeOfCalls() As LARGE_INTEGER
End Type

[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type RTL_PROCESS_MODULES
    NumberOfModules As Long
    Modules() As RTL_PROCESS_MODULE_INFORMATION
End Type
Public Type RTL_PROCESS_MODULE_INFORMATION
    Section As LongPtr
    MappedBase As LongPtr
    ImageBase As LongPtr
    ImageSize As Long
    Flags As LDR_DATA_TABLE_FLAGS
    LoadOrderIndex As Integer
    InitOrderIndex As Integer
    LoadCount As Integer
    OffsetToFileName As Integer
    FullPathName(0 To 255) As Byte
End Type

Public Type RTL_PROCESS_MODULE_INFORMATION_EX
    NextOffset As Integer
    BaseInfo As RTL_PROCESS_MODULE_INFORMATION
    ImageChecksum As Long
    TimeDateStamp As Long
    DefaultBase As LongPtr
End Type

Public Type RTL_PROCESS_LOCK_INFORMATION
    Address As LongPtr
    Type As Integer 'Always 1
    CreatorBackTraceIndex As Integer
    OwningThread As LongPtr
    LockCount As Long
    ContentionCount As Long
    EntryCount As Long
    RecursionCount As Long
    NumberOfWaitingShared As Long
    NumberOfWaitingExclusive As Long
End Type
[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type RTL_PROCESS_LOCKS
    NumberOfLocks As Long
    Locks() As RTL_PROCESS_LOCK_INFORMATION
End Type

Public Type RTL_PROCESS_BACKTRACE_INFORMATION
    SymbolicBackTrace As LongPtr
    TraceCount As Long
    Index As Integer
    Depth As Integer
    BackTrace(0 To 31) As LongPtr
End Type
[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type RTL_PROCESS_BACKTRACES
    CommittedMemory As Long
    ReservedMemory As Long
    NumberOfBackTraceLookups As Long
    NumberOfBackTraces As Long
    BackTraces() As RTL_PROCESS_BACKTRACE_INFORMATION
End Type

Public Type SYSTEM_HANDLE_TABLE_ENTRY_INFO
    UniqueProcessId As Integer
    CreatorBackTraceIndex As Integer
    ObjectTypeIndex As Byte
    HandleAttributes As Byte
    HandleValue As Integer
    Object As LongPtr
    GrantedAccess As Long
End Type
[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type SYSTEM_HANDLE_INFORMATION
    NumberOfHandles As Long
    Handles() As SYSTEM_HANDLE_TABLE_ENTRY_INFO
End Type

Public Enum OB_OBJECT_FLAGS
    OB_FLAG_NEW_OBJECT = &H01
    OB_FLAG_KERNEL_OBJECT = &H02
    OB_FLAG_KERNEL_ONLY_ACCESS = &H04
    OB_FLAG_EXCLUSIVE_OBJECT = &H08
    OB_FLAG_PERMANENT_OBJECT = &H10
    OB_FLAG_DEFAULT_SECURITY_QUOTA = &H20
    OB_FLAG_SINGLE_HANDLE_ENTRY = &H40
    OB_FLAG_DELETED_INLINE = &H80
End Enum
Public Enum POOL_TYPE
    NonPagedPool = 0
    NonPagedPoolExecute = NonPagedPool
    PagedPool = 1
    NonPagedPoolMustSucceed = NonPagedPool + 2
    DontUseThisType = 2
    NonPagedPoolCacheAligned = NonPagedPool + 4
    PagedPoolCacheAligned = 3
    NonPagedPoolCacheAlignedMustS = NonPagedPool + 6
    MaxPoolType = 4
    NonPagedPoolBase = 0
    NonPagedPoolBaseMustSucceed = NonPagedPoolBase + 2
    NonPagedPoolBaseCacheAligned = NonPagedPoolBase + 4
    NonPagedPoolBaseCacheAlignedMustS = NonPagedPoolBase + 6
    NonPagedPoolSession = 32
    PagedPoolSession = NonPagedPoolSession + 1
    NonPagedPoolMustSucceedSession = PagedPoolSession + 1
    DontUseThisTypeSession = NonPagedPoolMustSucceedSession + 1
    NonPagedPoolCacheAlignedSession = DontUseThisTypeSession + 1
    PagedPoolCacheAlignedSession = NonPagedPoolCacheAlignedSession + 1
    NonPagedPoolCacheAlignedMustSSession = PagedPoolCacheAlignedSession + 1
    NonPagedPoolNx = 512
    NonPagedPoolNxCacheAligned = NonPagedPoolNx + 4
    NonPagedPoolSessionNx = NonPagedPoolNx + 32
End Enum
Public Type SYSTEM_OBJECTTYPE_INFORMATION
    NextEntryOffset As Long
    NumberOfObjects As Long
    NumberOfHandles As Long
    TypeIndex As Long
    InvalidAttributes As Long
    GenericMapping As GENERIC_MAPPING
    ValidAccessMask As Long
    PoolType As POOL_TYPE
    SecurityRequired As Byte
    WaitableObject As Byte
    TypeName As UNICODE_STRING
End Type
Public Type SYSTEM_OBJECT_INFORMATION
    NextEntryOffset As Long
    Object As LongPtr
    CreatorUniqueProcess As LongPtr
    CreatorBackTraceIndex As Integer
    /* [TypeHint(OB_OBJECT_FLAGS)] */ Flags As Integer
    PointerCount As Long
    HandleCount As Long
    PagedPoolCharge As Long
    NonPagedPoolCharge As Long
    ExclusiveProcessId As LongPtr
    SecurityDescriptor As LongPtr
    NameInfo As OBJECT_NAME_INFORMATION
End Type

Public Type SYSTEM_PROCESS_ID_INFORMATION
    ProcessId As LongPtr
    ImageName As UNICODE_STRING
End Type
Public Enum SYSTEM_BOOT_ENV_FLAGS
    DbgMenuOsSelection = &H1
    DbgHiberBoot = &H2
    DbgSoftBoot = &H4
    DbgMeasuredLaunch = &H8 'Win810 1809+
    DbgMeasuredLaunchCapable = &H10
    DbgSystemHiveReplace = &H20
    DbgMeasuredLaunchSmmProtections = &H40
    DbgMeasuredLaunchSmmLevel = &H80
End Enum
Public Enum FIRMWARE_TYPE
    FirmwareTypeUnknown
    FirmwareTypeBios
    FirmwareTypeUefi
    FirmwareTypeMax
End Enum
Public Type SYSTEM_BOOT_ENVIRONMENT_INFORMATION
    BootIdentifier As UUID
    FirmwareType As FIRMWARE_TYPE
    /* [ TypeHint(SYSTEM_BOOT_ENV_FLAGS) ] BootFlags As LongLong*/
    Padding As Long
    UnusedLongLongBytes As Long
    BootFlags As SYSTEM_BOOT_ENV_FLAGS
End Type



Public Enum SYSTEM_CODEINTEGRITY_OPTIONS
    CODEINTEGRITY_OPTION_ENABLED = &H01
    CODEINTEGRITY_OPTION_TESTSIGN = &H02
    CODEINTEGRITY_OPTION_UMCI_ENABLED = &H04
    CODEINTEGRITY_OPTION_UMCI_AUDITMODE_ENABLED = &H08
    CODEINTEGRITY_OPTION_UMCI_EXCLUSIONPATHS_ENABLED = &H10
    CODEINTEGRITY_OPTION_TEST_BUILD = &H20
    CODEINTEGRITY_OPTION_PREPRODUCTION_BUILD = &H40
    CODEINTEGRITY_OPTION_DEBUGMODE_ENABLED = &H80
    CODEINTEGRITY_OPTION_FLIGHT_BUILD = &H100
    CODEINTEGRITY_OPTION_FLIGHTING_ENABLED = &H200
    CODEINTEGRITY_OPTION_HVCI_KMCI_ENABLED = &H400
    CODEINTEGRITY_OPTION_HVCI_KMCI_AUDITMODE_ENABLED = &H800
    CODEINTEGRITY_OPTION_HVCI_KMCI_STRICTMODE_ENABLED = &H1000
    CODEINTEGRITY_OPTION_HVCI_IUM_ENABLED = &H2000
    CODEINTEGRITY_OPTION_WHQL_ENFORCEMENT_ENABLED = &H4000
    CODEINTEGRITY_OPTION_WHQL_AUDITMODE_ENABLED = &H8000&
End Enum
Public Enum SYSTEM_CODEINTEGRITYPOLICY_OPTIONS
    CODEINTEGRITYPOLICY_OPTION_ENABLED = &H01
    CODEINTEGRITYPOLICY_OPTION_AUDIT = &H02
    CODEINTEGRITYPOLICY_OPTION_REQUIRE_WHQL = &H04
    CODEINTEGRITYPOLICY_OPTION_DISABLED_FLIGHTSIGNING = &H08
    CODEINTEGRITYPOLICY_OPTION_ENABLED_UMCI = &H10
    CODEINTEGRITYPOLICY_OPTION_ENABLED_UPDATE_POLICY_NOREBOOT = &H20
    CODEINTEGRITYPOLICY_OPTION_ENABLED_SECURE_SETTING_POLICY = &H40
    CODEINTEGRITYPOLICY_OPTION_ENABLED_UNSIGNED_SYSTEMINTEGRITY_POLICY = &H80
    CODEINTEGRITYPOLICY_OPTION_DYNAMIC_CODE_POLICY_ENABLED = &H100
    CODEINTEGRITYPOLICY_OPTION_RELOAD_POLICY_NO_REBOOT = &H10000000  ' NtSetSystemInformation reloads SiPolicy.p7b
    CODEINTEGRITYPOLICY_OPTION_CONDITIONAL_LOCKDOWN = &H20000000
    CODEINTEGRITYPOLICY_OPTION_NOLOCKDOWN = &H40000000
    CODEINTEGRITYPOLICY_OPTION_LOCKDOWN = &H80000000
End Enum
Public Enum SYSTEM_CODEINTEGRITYPOLICY_HVCI_OPTIONS
    CODEINTEGRITYPOLICY_HVCIOPTION_ENABLED = &H01
    CODEINTEGRITYPOLICY_HVCIOPTION_STRICT = &H02
    CODEINTEGRITYPOLICY_HVCIOPTION_DEBUG = &H04
End Enum

Public Type SYSTEM_CODEINTEGRITY_INFORMATION
    Length As Long
    CodeIntegrityOptions As SYSTEM_CODEINTEGRITY_OPTIONS
End Type
Public Type SYSTEM_CODEINTEGRITYPOLICY_INFORMATION
    Options As SYSTEM_CODEINTEGRITYPOLICY_OPTIONS
    HVCIOptions As SYSTEM_CODEINTEGRITYPOLICY_HVCI_OPTIONS
    Version As LongLong
    PolicyGuid As UUID
End Type
Public Type SYSTEM_CODEINTEGRITYVERIFICATION_INFORMATION
    FileHandle As LongPtr
    ImageSize As Long
    Image As LongPtr
End Type

Public Type SYSTEM_BOOT_LOGO_INFORMATION
    Flags As Long '1 if OEM set outside bootres.dll
    BitmapOffset As Long
End Type

Public Type SYSTEM_PAGEFILE_INFORMATION
    NextEntryOffset As Long
    TotalSize As Long
    TotalInUse As Long
    PeakUsage As Long
    PageFileName As UNICODE_STRING
End Type
Public Type SYSTEM_PAGEFILE_INFORMATION_EX
    Info As SYSTEM_PAGEFILE_INFORMATION
    MinimumSize As Long
    MaximumSize As Long
End Type

Public Type SYSTEM_SECUREBOOT_INFORMATION
    SecureBootEnabled As Byte
    SecureBootCapable As Byte
End Type

Public Type SYSTEM_KERNEL_DEBUGGER_INFORMATION
    KernelDebuggerEnabled As Byte
    KernelDebuggerNotPresent As Byte
End Type

Public Type SYSTEM_POLICY_INFORMATION
    InputData As LongPtr
    OutputData As LongPtr
    InputDataSize As Long
    OutputDataSize As Long
    Version As Long
End Type

Public Type SYSTEM_HYPERVISOR_PROCESSOR_COUNT_INFORMATION
    NumberOfLogicalProcessors As Long
    NumberOfCores As Long
End Type

Public Type SYSTEM_MEMORY_USAGE_INFORMATION
    TotalPhysicalBytes As LongLong
    AvailableBytes As LongLong
    ResidentAvailableBytes As LongLong
    CommittedBytes As LongLong
    SharedCommittedBytes As LongLong
    CommitLimitBytes As LongLong
    PeakCommitmentBytes As LongLong
End Type

Public Type SYSTEM_MEMORY_LIST_INFORMATION
    ZeroPageCount As LongPtr
    FreePageCount As LongPtr
    ModifiedPageCount As LongPtr
    ModifiedNoWritePageCount As LongPtr
    BadPageCount As LongPtr
    PageCountByPriority(0 To 7) As LongPtr
    RepurposedPagesByPriority(0 To 7) As LongPtr
    ModifiedPageCountPageFile As LongPtr
End Type

Public Enum SYSTEM_MEMORY_LIST_COMMAND
    MemoryCaptureAccessedBits
    MemoryCaptureAndResetAccessedBits
    MemoryEmptyWorkingSets
    MemoryFlushModifiedList
    MemoryPurgeStandbyList
    MemoryPurgeLowPriorityStandbyList
    MemoryCommandMax
End Enum

Public Enum QUOTA_LIMITS_FLAGS
    QUOTA_LIMITS_HARDWS_MIN_ENABLE = &H00000001
    QUOTA_LIMITS_HARDWS_MIN_DISABLE = &H00000002
    QUOTA_LIMITS_HARDWS_MAX_ENABLE = &H00000004
    QUOTA_LIMITS_HARDWS_MAX_DISABLE = &H00000008
    QUOTA_LIMITS_USE_DEFAULT_LIMITS = &H00000010
End Enum
Public Type SYSTEM_FILECACHE_INFORMATION
    CurrentSize As LongPtr
    PeakSize As LongPtr
    PageFaultCount As Long
    MinimumWorkingSet As LongPtr
    MaximumWorkingSet As LongPtr
    CurrentSizeIncludingTransitionInPages As LongPtr
    PeakSizeIncludingTransitionInPages As LongPtr
    TransitionRePurposeCount As Long
    Flags As QUOTA_LIMITS_FLAGS
End Type

Public Type SYSTEM_FLUSH_INFORMATION
    SupportedFlushMethods As Long
    ProcessorCacheFlushSize As Long
    SystemFlushCapabilities As LongLong
    Reserved(0 To 1) As LongLong
End Type

Public Enum SystemKernelVaShadowFlags
    KvaShadowEnabled = &H1
    KvaShadowUserGlobal = &H2
    KvaShadowPcid = &H4
    KvaShadowInvpcid = &H8
    KvaShadowRequired = &H10
    KvaShadowRequiredAvailable = &H20


    '(InvalidPteBit - 6 bits)



    L1DataCacheFlushSupported = &H1000
    L1TerminalFaultMitigationPresent = &H2000
End Enum
Public Type SYSTEM_KERNEL_VA_SHADOW_INFORMATION
    KvaShadowFlags As SystemKernelVaShadowFlags
End Type

Public Type SYSTEM_DMA_GUARD_POLICY_INFORMATION
    DmaGuardPolicyEnabled As Byte
End Type

Public Type TIME_FIELDS
    Year As Integer
    Month As Integer
    Day As Integer
    Hour As Integer
    Minute As Integer
    Second As Integer
    Milliseconds As Integer
    Weekday As Integer
End Type
Public Type RTL_TIME_ZONE_INFORMATION
    Bias As Long
    StandardName (0 To 31) As Integer
    StandardDate As TIME_FIELDS
    StandardBias As Long
    DaylightName (0 To 31) As Integer
    DaylightDate As TIME_FIELDS
    DaylightBias As Long
End Type
Public Type RTL_DYNAMIC_TIME_ZONE_INFORMATION
    tzi As RTL_TIME_ZONE_INFORMATION
    TimeZoneKeyName (&H7F) As Integer
    DynamicDaylightTimeDisabled As Byte
End Type

Public Type SYSTEM_BASIC_PERFORMANCE_INFORMATION
    AvailablePages As LongPtr
    CommittedPages As LongPtr
    CommitLimit As LongPtr
    PeakCommitment As LongPtr
End Type

Public Enum SYSTEM_PIXEL_FORMAT
    SystemPixelFormatUnknown
    SystemPixelFormatR8G8B8
    SystemPixelFormatR8B8G8X8
    SystemPixelFormatB8G8R8
    SystemPixelFormatB8G8R8X8
End Enum

Public Type SYSTEM_BOOT_GRAPHICS_INFORMATION
    FrameBuffer As LARGE_INTEGER
    Width As Long
    Height As Long
    PixelStride As Long
    Flags As Long
    Format As SYSTEM_PIXEL_FORMAT
End Type

Public Type SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION
    Operation As Long
End Type

Public Type PS_CPU_QUOTA_QUERY_ENTRY
    SessionId As Long
    Weight As Long
End Type
[Description("⚠️ **WARNING:** Buffered fixed array substituted for variable C-style array.")]
Public Type PS_CPU_QUOTA_QUERY_INFORMATION
    SessionCount As Long
    SessionInformation(0 To 1023) As PS_CPU_QUOTA_QUERY_ENTRY
End Type


Public Type SYSTEM_PHYSICAL_MEMORY_INFORMATION
    TotalPhysicalBytes As LongLong
    LowestPhysicalAddress As LongLong
    HighestPhysicalAddress As LongLong
End Type

Public Enum STORE_INFORMATION_CLASS
    StorePageRequest = 1
    StoreStatsRequest = 2 ' q: SM_STATS_REQUEST // SmProcessStatsRequest
    StoreCreateRequest = 3 ' s: SM_CREATE_REQUEST (requires SeProfileSingleProcessPrivilege)
    StoreDeleteRequest = 4 ' s: SM_DELETE_REQUEST (requires SeProfileSingleProcessPrivilege)
    StoreListRequest = 5 ' q: SM_STORE_LIST_REQUEST / SM_STORE_LIST_REQUEST_EX // SmProcessListRequest
    Available1 = 6
    StoreEmptyRequest = 7
    CacheListRequest = 8 ' q: SMC_CACHE_LIST_REQUEST // SmcProcessListRequest
    CacheCreateRequest = 9 ' s: SMC_CACHE_CREATE_REQUEST (requires SeProfileSingleProcessPrivilege)
    CacheDeleteRequest = 10 ' s: SMC_CACHE_DELETE_REQUEST (requires SeProfileSingleProcessPrivilege)
    CacheStoreCreateRequest = 11 ' s: SMC_STORE_CREATE_REQUEST (requires SeProfileSingleProcessPrivilege)
    CacheStoreDeleteRequest = 12 ' s: SMC_STORE_DELETE_REQUEST (requires SeProfileSingleProcessPrivilege)
    CacheStatsRequest = 13 ' q: SMC_CACHE_STATS_REQUEST // SmcProcessStatsRequest
    Available2 = 14
    RegistrationRequest = 15 ' q: SM_REGISTRATION_REQUEST (requires SeProfileSingleProcessPrivilege) // SmProcessRegistrationRequest
    GlobalCacheStatsRequest = 16
    StoreResizeRequest = 17 ' s: SM_STORE_RESIZE_REQUEST (requires SeProfileSingleProcessPrivilege)
    CacheStoreResizeRequest = 18 ' s: SMC_STORE_RESIZE_REQUEST (requires SeProfileSingleProcessPrivilege)
    SmConfigRequest = 19 ' s: SM_CONFIG_REQUEST (requires SeProfileSingleProcessPrivilege)
    StoreHighMemoryPriorityRequest = 20 ' s: SM_STORE_HIGH_MEM_PRIORITY_REQUEST (requires SeProfileSingleProcessPrivilege)
    SystemStoreTrimRequest = 21 ' s: SM_SYSTEM_STORE_TRIM_REQUEST (requires SeProfileSingleProcessPrivilege)
    MemCompressionInfoRequest = 22 ' q: SM_MEM_COMPRESSION_INFO_REQUEST // SmProcessCompressionInfoRequest
    ProcessStoreInfoRequest = 23 ' SmProcessProcessStoreInfoRequest
    StoreInformationMax = 2
End Enum
Public Enum SystemStoreInformationVersions
    SYSTEM_STORE_INFORMATION_VERSION = 1
End Enum
Public Type SYSTEM_STORE_INFORMATION
    Version As Long '_In_
    StoreInformationClass As STORE_INFORMATION_CLASS '_In_
    Data As LongPtr '_Inout_
    Length As Long '_Inout_
End Type
Public Enum SystemStoreStatsInformationVersions
    SYSTEM_STORE_STATS_INFORMATION_VERSION = 2
End Enum
Public Enum ST_STATS_LEVEL
    StStatsLevelBasic = 0
    StStatsLevelIoStats = 1
    StStatsLevelRegionSpace = 2 ' requires SeProfileSingleProcessPrivilege
    StStatsLevelSpaceBitmap = 3 ' requires SeProfileSingleProcessPrivilege
    StStatsLevelMax = 4
End Enum
Public Type SM_STATS_REQUEST
    ' ULONG Version : 8; // SYSTEM_STORE_STATS_INFORMATION_VERSION
    ' ULONG DetailLevel : 8; // ST_STATS_LEVEL
    ' ULONG StoreId : 16;
    Bitfield As Long
    BufferSize As Long
    Buffer As LongPtr
End Type
Public Type ST_DATA_MGR_STATS
    RegionCount As Long
    PagesStored As Long
    UniquePagesStored As Long
    LazyCleanupRegionCount As Long
    'struct {
    '    ULONG RegionsInUse;
    '    ULONG SpaceUsed;
    '} Space[8];
    Space(7) As Long
End Type
Public Type ST_IO_STATS_PERIOD
    PageCounts(0 To 4) As Long
End Type
Public Type ST_IO_STATS
    PeriodCount As Long
    Periods(0 To 63) As ST_IO_STATS_PERIOD
End Type
Public Type ST_READ_LATENCY_BUCKET
    LatencyUs As Long
    Count As Long
End Type
Public Type ST_READ_LATENCY_STATS
    Buckets(0 To 7) As ST_READ_LATENCY_BUCKET
End Type
Public Type ST_STATS_REGION_INFO
    SpaceUsed As Integer
    Priority As Byte
    Spare As Byte
End Type
Public Type ST_STATS_SPACE_BITMAP
    CompressedBytes As LongPtr
    BytesPerBit As Long
    StoreBitmap(0 To 0) As Byte
End Type

Public Type ST_STATS
    ' ULONG Version : 8;
    ' ULONG Level : 4;
    ' ULONG StoreType : 4;
    ' ULONG NoDuplication : 1;
    ' ULONG NoCompression : 1;
    ' ULONG EncryptionStrength : 12;
    ' ULONG VirtualRegions : 1;
    ' ULONG Spare0 : 1;
    Bitfield As Long
    CompressionFormat As Integer
    Spare As Integer
    Basic_RegionSize As Long
    Basic_RegionCount As Long
    Basic_RegionCountMax As Long
    Basic_Granularity As Long
    Basic_UserData As ST_DATA_MGR_STATS
    Basic_Metadata As ST_DATA_MGR_STATS
    Io_IoStats As ST_IO_STATS
    Io_ReadLatencyStats As ST_READ_LATENCY_STATS
    ' // ST_STATS_REGION_INFO[Basic_RegionCountMax]
    ' // ST_STATS_SPACE_BITMAP
End Type
Public Const SYSTEM_STORE_CREATE_INFORMATION_VERSION = 6
Public Enum SM_STORE_TYPE
    StoreTypeInMemory = 0
    StoreTypeFile = 1
    StoreTypeMax = 2
End Enum
Public Type SM_STORE_BASIC_PARAMS
    'union
    '{
    '    struct
    '    {
    '        ULONG StoreType : 8; // SM_STORE_TYPE
    '        ULONG NoDuplication : 1;
    '        ULONG FailNoCompression : 1;
    '        ULONG NoCompression : 1 ;
    '        ULONG NoEncryption : 1;
    '        ULONG NoEvictOnAdd : 1;
    '        ULONG PerformsFileIo : 1;
    '        ULONG VdlNotSet : 1 ;
    '        ULONG UseIntermediateAddBuffer : 1;
    '        ULONG CompressNoHuff : 1;
    '        ULONG LockActiveRegions : 1;
    '        ULONG VirtualRegions : 1;
    '        ULONG Spare : 13;
    '};
    StoreFlags As Long
    '};
    Granularity As Long
    RegionSize As Long
    RegionCountMax As Long
End Type
'Kernel mode only:
' Public Type SMKM_REGION_EXTENT
'     RegionCount As Long
'     ByteOffset As LongPtr
' End Type
' Public Type SMKM_FILE_INFO
'     FileHandle As LongPtr
'     FileObject As LongPtr 'PFILE_OBJECT
'     VolumeFileObject As LongPtr 'PFILE_OBJECT
'     VolumeDeviceObject As LongPtr 'PDEVICE_OBJECT
'     VolumePnpHandle As LongPtr
'     UsageNotificationIrp As LongPtr 'PIRP
'     Extents As LongPtr 'PSMKM_REGION_EXTENT
'     ExtentCount As Long
' End Type
Public Type SM_STORE_CACHE_BACKED_PARAMS
    SectorSize As Long
    EncryptionKey As LongPtr
    EncryptionKeySize As Long
    FileInfo As LongPtr 'PSMKM_FILE_INFO
    EtaContext As LongPtr
    StoreRegionBitmap As LongPtr 'PRTL_BITMAP
End Type
Public Type SM_STORE_PARAMETERS
    Store As SM_STORE_BASIC_PARAMS
    Priority As Long
    Flags As Long
    CacheBacked As SM_STORE_CACHE_BACKED_PARAMS
End Type
Public Type SM_CREATE_REQUEST
    ' ULONG Version : 8; // SYSTEM_STORE_CREATE_INFORMATION_VERSION
    ' ULONG AcquireReference : 1;
    ' ULONG KeyedStore : 1;
    ' ULONG Spare : 22;
    Bitfield As Long
    Params As SM_STORE_PARAMETERS
    StoreId As Long
End Type
Public Const SYSTEM_STORE_DELETE_INFORMATION_VERSION = 1
Public Type SM_DELETE_REQUEST
    ' ULONG Version : 8; // SYSTEM_STORE_DELETE_INFORMATION_VERSION
    ' ULONG Spare : 24;
    Bitfield As Long
    StoreId As Long
End Type
Public Const SYSTEM_STORE_LIST_INFORMATION_VERSION = 2
Public Type SM_STORE_LIST_REQUEST
    ' ULONG Version : 8; // SYSTEM_STORE_LIST_INFORMATION_VERSION
    ' ULONG StoreCount : 8; // = 0
    ' ULONG ExtendedRequest : 1; // SM_STORE_LIST_REQUEST_EX if set
    ' ULONG Spare : 15;
    Bitfield As Long
    StoreId(0 To 31) As Long
End Type
[Description("NOTE: Array dimensions are switched vs C++ to match the underlying memory layout.")]
Public Type SM_STORE_LIST_REQUEST_EX
    Request As SM_STORE_LIST_REQUEST
    [Description("NOTE: Array dimensions are switched vs C++ to match the underlying memory layout.")]
    NameBuffer(0 To 63, 0 To 31) As Integer
End Type
Public Const SYSTEM_CACHE_LIST_INFORMATION_VERSION = 2
Public Type SMC_CACHE_LIST_REQUEST
    ' ULONG Version : 8; // SYSTEM_CACHE_LIST_INFORMATION_VERSION
    ' ULONG CacheCount : 8; // = 0
    ' ULONG Spare : 16;
    Bitfield As Long
    CacheId(0 To 15) As Long
End Type
Public Const SYSTEM_CACHE_CREATE_INFORMATION_VERSION = 3
Public Type SMC_CACHE_PARAMETERS
    CacheFileSize As LongPtr
    StoreAlignment As Long
    'ULONG PerformsFileIo : 1;
    'ULONG VdlNotSet : 1;
    'ULONG Spare : 30;
    Bitfield As Long
    CacheFlags As Long
    Priority As Long
End Type
Public Type SMC_CACHE_CREATE_PARAMETERS
    CacheParameters As SMC_CACHE_PARAMETERS
    TemplateFilePath(0 To 511) As Integer
End Type
Public Type SMC_CACHE_CREATE_REQUEST
    ' ULONG Version : 8; // SYSTEM_CACHE_CREATE_INFORMATION_VERSION
    ' ULONG Spare : 24;
    Bitfield As Long
    CacheId As Long
    CacheCreateParams As SMC_CACHE_CREATE_PARAMETERS
End Type
Public Const SYSTEM_CACHE_DELETE_INFORMATION_VERSION = 1
Public Type SMC_CACHE_DELETE_REQUEST
    ' ULONG Version : 8; // SYSTEM_CACHE_DELETE_INFORMATION_VERSION
    ' ULONG Spare : 24;
    Bitfield As Long
    CacheId As Long
End Type
Public Const SYSTEM_CACHE_STORE_CREATE_INFORMATION_VERSION = 2
Public Enum SM_STORE_MANAGER_TYPE
    SmStoreManagerTypePhysical = 0
    SmStoreManagerTypeVirtual = 1
    SmStoreManagerTypeMax = 2
End Enum
Public Type SMC_STORE_CREATE_REQUEST
    'ULONG Version : 8; // SYSTEM_CACHE_STORE_CREATE_INFORMATION_VERSION
    'ULONG Spare : 24;
    Bitfield As Long
    StoreParams As SM_STORE_BASIC_PARAMS
    CacheId As Long
    StoreManagerType As SM_STORE_MANAGER_TYPE
    StoreId As Long
End Type
Public Const SYSTEM_CACHE_STORE_DELETE_INFORMATION_VERSION = 1
Public Type SMC_STORE_DELETE_REQUEST
    'ULONG Version : 8; // SYSTEM_CACHE_STORE_DELETE_INFORMATION_VERSION
    'ULONG Spare : 24;
    Bitfield As Long
    CacheId As Long
    StoreManagerType As SM_STORE_MANAGER_TYPE
    StoreId As Long
End Type
Public Const SYSTEM_CACHE_STATS_INFORMATION_VERSION = 3
Public Type SMC_CACHE_STATS
    TotalFileSize As LongPtr
    StoreCount As Long
    RegionCount As Long
    RegionSizeBytes As Long
    'ULONG FileCount : 6;
    'ULONG PerformsFileIo : 1;
    'ULONG Spare : 25;
    Bitfield As Long
    StoreIds(0 To 15) As Long
    PhysicalStoreBitmap As Long
    Priority As Long
    TemplateFilePath(0 To 511) As Integer
End Type
Public Type SMC_CACHE_STATS_REQUEST
    'ULONG Version : 8; // SYSTEM_CACHE_STATS_INFORMATION_VERSION
    'ULONG NoFilePath : 1;
    'ULONG Spare : 23;
    Bitfield As Long
    CacheId As Long
    CacheStats As SMC_CACHE_STATS
End Type
Public Const SYSTEM_STORE_REGISTRATION_INFORMATION_VERSION = 1
Public Type SM_REGISTRATION_INFO
    CachesUpdatedEvent As LongPtr
End Type
Public Type SM_REGISTRATION_REQUEST
    'ULONG Version : 8; // SYSTEM_STORE_REGISTRATION_INFORMATION_VERSION
    'ULONG Spare : 24;
    Bitfield As Long
    RegInfo As SM_REGISTRATION_INFO
End Type
Public Const SYSTEM_STORE_RESIZE_INFORMATION_VERSION = 6
Public Type SM_STORE_RESIZE_REQUEST
    'ULONG Version : 8; // SYSTEM_STORE_RESIZE_INFORMATION_VERSION
    'ULONG AddRegions : 1;
    'ULONG Spare : 23;
    Bitfield As Long
    StoreId As Long
    NumberOfRegions As Long
    RegionBitmap As LongPtr 'PRTL_BITMAP
End Type
Public Const SYSTEM_CACHE_STORE_RESIZE_INFORMATION_VERSION = 1
Public Type SMC_STORE_RESIZE_REQUEST
    'ULONG Version : 8; // SYSTEM_CACHE_STORE_RESIZE_INFORMATION_VERSION
    'ULONG AddRegions : 1;
    'ULONG Spare : 23;
    Bitfield As Long
    CacheId As Long
    StoreId As Long
    StoreManagerType As SM_STORE_MANAGER_TYPE
    RegionCount As Long
End Type
Public Const SYSTEM_STORE_CONFIG_INFORMATION_VERSION = 4
Public Enum SM_CONFIG_TYPE
    SmConfigDirtyPageCompression = 0
    SmConfigAsyncInswap = 1
    SmConfigPrefetchSeekThreshold = 2
    SmConfigTypeMax = 3
End Enum
Public Type SM_CONFIG_REQUEST
    'ULONG Version : 8; // SYSTEM_STORE_CONFIG_INFORMATION_VERSION
    'ULONG Spare : 16;
    'ULONG ConfigType : 8; // SM_CONFIG_TYPE
    Bitfield As Long
    ConfigValue As Long
End Type
Public Const SYSTEM_STORE_HIGH_MEM_PRIORITY_INFORMATION_VERSION = 1
Public Type SM_STORE_HIGH_MEM_PRIORITY_REQUEST
    'ULONG Version : 8; // SYSTEM_STORE_HIGH_MEM_PRIORITY_INFORMATION_VERSION
    'ULONG SetHighMemoryPriority : 1;
    'ULONG Spare : 23;
    Bitfield As Long
    ProcessHandle As LongPtr
End Type
Public Const SYSTEM_STORE_TRIM_INFORMATION_VERSION = 1
Public Type SM_SYSTEM_STORE_TRIM_REQUEST
    'ULONG Version : 8; // SYSTEM_STORE_TRIM_INFORMATION_VERSION
    'ULONG Spare : 24;
    Bitfield As Long
    PagesToTrim As LongPtr ' ULONG?
End Type
Public Const SYSTEM_STORE_COMPRESSION_INFORMATION_VERSION = 3
Public Type SM_MEM_COMPRESSION_INFO_REQUEST
    'ULONG Version : 8; // SYSTEM_STORE_COMPRESSION_INFORMATION_VERSION
    'ULONG Spare : 24;
    Bitfield As Long
    CompressionPid As Long
    WorkingSetSize As Long
    TotalDataCompressed As LongPtr
    TotalCompressedSize As LongPtr
    TotalUniqueDataCompressed As LongPtr
End Type

Public Type RTL_BITMAP
    SizeOfBitMap As Long
    Buffer As LongPtr
End Type
Public Type RTL_BITMAP_RUN
    StartingIndex As Long
    NumberOfBits As Long
End Type
Public Type RTL_BITMAP_EX
    SizeOfBitMap As LongLong
    Buffer As LongPtr
End Type

Public Enum SYSTEM_ACTIVITY_MODERATION_STATE
    SystemActivityModerationStateSystemManaged = 0
    SystemActivityModerationStateUserManagedAllowThrottling = 1
    SystemActivityModerationStateUserManagedDisableThrottling = 2
    MaxSystemActivityModerationState = 3
End Enum
Public Type SYSTEM_ACTIVITY_MODERATION_EXE_STATE ' REDSTONE3: Renamed SYSTEM_ACTIVITY_MODERATION_INFO
    ExePathNt As UNICODE_STRING
    ModerationState As SYSTEM_ACTIVITY_MODERATION_STATE
End Type

Public Enum SYSTEM_ACTIVITY_MODERATION_APP_TYPE
    SystemActivityModerationAppTypeClassic = 0
    SystemActivityModerationAppTypePackaged = 1
    MaxSystemActivityModerationAppType = 2
End Enum
Public Type SYSTEM_ACTIVITY_MODERATION_INFO
    Identifier As UNICODE_STRING
    ModerationState As SYSTEM_ACTIVITY_MODERATION_STATE
    AppType As SYSTEM_ACTIVITY_MODERATION_APP_TYPE
End Type

Public Type SYSTEM_ACTIVITY_MODERATION_USER_SETTINGS
    UserKeyHandle As LongPtr
End Type

Public Type SYSTEM_SPECULATION_CONTROL_INFORMATION
    Flags As Long
    ' union
    ' {
        ' ULONG Flags;
        ' struct
        ' {
            ' ULONG BpbEnabled : 1;
            ' ULONG BpbDisabledSystemPolicy : 1;
            ' ULONG BpbDisabledNoHardwareSupport : 1;
            ' ULONG SpecCtrlEnumerated : 1;
            ' ULONG SpecCmdEnumerated : 1;
            ' ULONG IbrsPresent : 1;
            ' ULONG StibpPresent : 1;
            ' ULONG SmepPresent : 1;
            ' ULONG SpeculativeStoreBypassDisableAvailable : 1; // REDSTONE4 (CVE-2018-3639)
            ' ULONG SpeculativeStoreBypassDisableSupported : 1;
            ' ULONG SpeculativeStoreBypassDisabledSystemWide : 1;
            ' ULONG SpeculativeStoreBypassDisabledKernel : 1;
            ' ULONG SpeculativeStoreBypassDisableRequired : 1;
            ' ULONG BpbDisabledKernelToUser : 1;
            ' ULONG SpecCtrlRetpolineEnabled : 1;
            ' ULONG SpecCtrlImportOptimizationEnabled : 1;
            ' ULONG EnhancedIbrs : 1; // since 19H1
            ' ULONG HvL1tfStatusAvailable : 1;
            ' ULONG HvL1tfProcessorNotAffected : 1;
            ' ULONG HvL1tfMigitationEnabled : 1;
            ' ULONG HvL1tfMigitationNotEnabled_Hardware : 1;
            ' ULONG HvL1tfMigitationNotEnabled_LoadOption : 1;
            ' ULONG HvL1tfMigitationNotEnabled_CoreScheduler : 1;
            ' ULONG EnhancedIbrsReported : 1;
            ' ULONG MdsHardwareProtected : 1; // since 19H2
            ' ULONG MbClearEnabled : 1;
            ' ULONG MbClearReported : 1;
            ' ULONG Reserved : 5;
        ' };
    ' };
End Type

Public Enum SYSTEM_VA_TYPE
    SystemVaTypeAll = 0
    SystemVaTypeNonPagedPool = 1
    SystemVaTypePagedPool = 2
    SystemVaTypeSystemCache = 3
    SystemVaTypeSystemPtes = 4
    SystemVaTypeSessionSpace = 5
    SystemVaTypeMax = 6
End Enum
Public Type SYSTEM_VA_LIST_INFORMATION
    VirtualSize As LongPtr
    VirtualPeak As LongPtr
    VirtualLimit As LongPtr
    AllocationFailures As LongPtr
End Type

Public Type SYSTEM_PROCESSOR_POWER_INFORMATION
    CurrentFrequency As Byte
    ThermalLimitFrequency As Byte
    ConstantThrottleFrequency As Byte
    DegradedThrottleFrequency As Byte
    LastBusyFrequency As Byte
    LastC3Frequency As Byte
    LastAdjustedBusyFrequency As Byte
    ProcessorMinThrottle As Byte
    ProcessorMaxThrottle As Byte
    NumberOfFrequencies As Long
    PromotionCount As Long
    DemotionCount As Long
    ErrorCount As Long
    RetryCount As Long
    CurrentFrequencyTime As LongLong
    CurrentProcessorTime As LongLong
    CurrentProcessorIdleTime As LongLong
    LastProcessorTime As LongLong
    LastProcessorIdleTime As LongLong
    Energy As LongLong
End Type

Public Type SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX
    Object As LongPtr
    UniqueProcessId As LongPtr
    HandleValue As LongPtr
    GrantedAccess As Long
    CreatorBackTraceIndex As Integer
    ObjectTypeIndex As Integer
    HandleAttributes As Long
    Reserved As Long
End Type
[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type SYSTEM_HANDLE_INFORMATION_EX
    NumberOfHandles As LongPtr
    Reserved As LongPtr
    Handles() As SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX
End Type

Public Type SYSTEM_BIGPOOL_ENTRY
    ' union
    ' {
        ' PVOID VirtualAddress;
        ' ULONG_PTR NonPaged : 1;
    ' };
    ' SIZE_T SizeInBytes;
    ' union
    ' {
        ' UCHAR Tag[4];
        ' ULONG TagUlong;
    ' };
    VirtualAddressOrNonPaged As LongPtr
    SizeInBytes As LongPtr
    Tag As Long
End Type

Public Type SYSTEM_POOL_ENTRY
    Allocated As Byte
    Spare0 As Byte
    AllocatorBackTraceIndex As Integer
    Size As Long
    'union
    '{
    '    UCHAR Tag[4];
    '    ULONG TagUlong;
    ProcessChargedQuotaOrTag As LongPtr
    '};
End Type
[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type SYSTEM_POOL_INFORMATION
    TotalSize As LongPtr
    FirstEntry As LongPtr
    EntryOverhead As Integer
    PoolTagPresent As Byte
    Spare0 As Byte
    NumberOfEntries As Long
    Entries() As SYSTEM_POOL_ENTRY
End Type

Public Type SYSTEM_SINGLE_MODULE_INFORMATION
    TargetModuleAddress As LongPtr
    ExInfo As RTL_PROCESS_MODULE_INFORMATION_EX
End Type

Public Type SYSTEM_INTERRUPT_CPU_SET_INFORMATION
    Gsiv As Long
    Group As Integer
    CpuSets As LongLong
End Type

Public Type SYSTEM_SECURITY_MODEL_INFORMATION
    SecurityModelFlags As Long
    ' union
    ' {
        ' ULONG SecurityModelFlags;
        ' struct
        ' {
            ' ULONG SModeAdminlessEnabled : 1;
            ' ULONG AllowDeviceOwnerProtectionDowngrade : 1;
            ' ULONG Reserved : 30;
        ' };
    ' };
End Type

Public Type SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION
    FlagsToEnable As Long
    FlagsToDisable As Long
End Type

Public Type SYSTEM_PREFETCH_PATCH_INFORMATION
    PrefetchPatchCount As Long
End Type

Public Type SYSTEM_VERIFIER_FAULTS_INFORMATION
    Probability As Long
    MaxProbability As Long
    PoolTags As UNICODE_STRING
    Applications As UNICODE_STRING
End Type

Public Type SYSTEM_CONTEXT_SWITCH_INFORMATION
    ContextSwitches As Long
    FindAny As Long
    FindLast As Long
    FindIdeal As Long
    IdleAny As Long
    IdleCurrent As Long
    IdleLast As Long
    IdleIdeal As Long
    PreemptAny As Long
    PreemptCurrent As Long
    PreemptLast As Long
    SwitchToIdle As Long
End Type

Public Type SYSTEM_PROCESSOR_IDLE_INFORMATION
    IdleTime As LongLong
    C1Time As LongLong
    C2Time As LongLong
    C3Time As LongLong
    C1Transitions As Long
    C2Transitions As Long
    C3Transitions As Long
    Padding As Long
End Type

Public Type SYSTEM_QUERY_TIME_ADJUST_INFORMATION
    TimeAdjustment As Long
    TimeIncrement As Long
    Enable As Byte
End Type
Public Type SYSTEM_QUERY_TIME_ADJUST_INFORMATION_PRECISE
    TimeAdjustment As LongLong
    TimeIncrement As LongLong
    Enable As Byte
End Type
Public Type SYSTEM_SET_TIME_ADJUST_INFORMATION
    TimeAdjustment As Long
    Enable As Byte
End Type
Public Type SYSTEM_SET_TIME_ADJUST_INFORMATION_PRECISE
    TimeAdjustment As LongLong
    Enable As Byte
End Type

Public Type SYSTEM_INTERRUPT_INFORMATION
    ContextSwitches As Long
    DpcCount As Long
    DpcRate As Long
    TimeIncrement As Long
    DpcBypassCount As Long
    ApcBypassCount As Long
End Type

Public Type SYSTEM_DPC_BEHAVIOR_INFORMATION
    Spare As Long
    DpcQueueDepth As Long
    MinimumDpcRate As Long
    AdjustDpcThreshold As Long
    IdealDpcRate As Long
End Type





Public Type SYSTEM_REGISTRY_QUOTA_INFORMATION
    RegistryQuotaAllowed As Long
    RegistryQuotaUsed As Long
    PagedPoolSize As LongPtr
End Type

Public Type SYSTEM_EXCEPTION_INFORMATION
    AlignmentFixupCount As Long
    ExceptionDispatchCount As Long
    FloatingEmulationCount As Long
    ByteWordEmulationCount As Long
End Type

Public Enum SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS
    SystemCrashDumpDisable
    SystemCrashDumpReconfigure
    SystemCrashDumpInitializationComplete
End Enum
Public Type SYSTEM_CRASH_DUMP_STATE_INFORMATION
    CrashDumpConfigurationClass As SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS
End Type


[Description("IMPORTANT: For Win10 19H1 and newer, use SYSTEM_VERIFIER_INFORMATION_19H1")]
Public Type SYSTEM_VERIFIER_INFORMATION  ' pre-19H1
    NextEntryOffset As Long
    Level As Long
    DriverName As UNICODE_STRING
    RaiseIrqls As Long
    AcquireSpinLocks As Long
    SynchronizeExecutions As Long
    AllocationsAttempted As Long
    AllocationsSucceeded As Long
    AllocationsSucceededSpecialPool As Long
    AllocationsWithNoTag As Long
    TrimRequests As Long
    Trims As Long
    AllocationsFailed As Long
    AllocationsFailedDeliberately As Long
    Loads As Long
    Unloads As Long
    UnTrackedPool As Long
    CurrentPagedPoolAllocations As Long
    CurrentNonPagedPoolAllocations As Long
    PeakPagedPoolAllocations As Long
    PeakNonPagedPoolAllocations As Long
    PagedPoolUsageInBytes As LongPtr
    NonPagedPoolUsageInBytes As LongPtr
    PeakPagedPoolUsageInBytes As LongPtr
    PeakNonPagedPoolUsageInBytes As LongPtr
End Type
Public Type SYSTEM_VERIFIER_INFORMATION_19H1
    NextEntryOffset As Long
    Level As Long
    RuleClasses(0 To 1) As Long
    TriageContext As Long
    AreAllDriversBeingVerified As Long
    DriverName As UNICODE_STRING
    RaiseIrqls As Long
    AcquireSpinLocks As Long
    SynchronizeExecutions As Long
    AllocationsAttempted As Long
    AllocationsSucceeded As Long
    AllocationsSucceededSpecialPool As Long
    AllocationsWithNoTag As Long
    TrimRequests As Long
    Trims As Long
    AllocationsFailed As Long
    AllocationsFailedDeliberately As Long
    Loads As Long
    Unloads As Long
    UnTrackedPool As Long
    CurrentPagedPoolAllocations As Long
    CurrentNonPagedPoolAllocations As Long
    PeakPagedPoolAllocations As Long
    PeakNonPagedPoolAllocations As Long
    PagedPoolUsageInBytes As LongPtr
    NonPagedPoolUsageInBytes As LongPtr
    PeakPagedPoolUsageInBytes As LongPtr
    PeakNonPagedPoolUsageInBytes As LongPtr
End Type


Public Type SYSTEM_VERIFIER_INFORMATION_EX
    VerifyMode As Long
    OptionChanges As Long
    PreviousBucketName As UNICODE_STRING
    IrpCancelTimeoutMsec As Long
    VerifierExtensionEnabled As Long
    #If Win64 Then
    Reserved(0 To 0) As Long
    #Else
    Reserved(0 To 2) As Long
    #End If
End Type

Public Type SYSTEM_SYSTEM_PARTITION_INFORMATION
    SystemPartition As UNICODE_STRING
End Type
Public Type SYSTEM_SYSTEM_DISK_INFORMATION
    SystemDisk As UNICODE_STRING
End Type

Public Type SYSTEM_THREAD_CID_PRIORITY_INFORMATION
    ClientId As CLIENT_ID
    Priority As KPRIORITY
End Type

Public Type SYSTEM_REGISTRY_APPEND_STRING_PARAMETERS
    KeyHandle As LongPtr
    ValueNamePointer As LongPtr 'PUNICODE_STRING
    RequiredLengthPointer As LongPtr
    Buffer As LongPtr 'PUCHAR
    BufferLength As Long
    Type As Long
    AppendBuffer As LongPtr 'PUCHAR
    AppendBufferLength As Long
    CreateIfDoesntExist As Byte
    TruncateExistingValue As Byte
End Type

Public Type SYSTEM_ELAM_CERTIFICATE_INFORMATION
    ElamDriverFile As LongPtr
End Type

Public Enum QUERY_PERFORMANCE_COUNTER_FLAGS
    QPCF_KernelTransition = 1
End Enum
Public Type SYSTEM_QUERY_PERFORMANCE_COUNTER_INFORMATION
    Version As Long
    Flags As QUERY_PERFORMANCE_COUNTER_FLAGS
    ValidFlags As QUERY_PERFORMANCE_COUNTER_FLAGS
End Type

Public Type SYSTEM_LEGACY_DRIVER_INFORMATION
    VetoType As Long
    VetoList As UNICODE_STRING
End Type

Public Type MEMORY_SCRUB_INFORMATION
    Handle As LongPtr
    PagesScrubbed As LongPtr
End Type

Public Type MEMORY_COMBINE_INFORMATION
    Handle As LongPtr
    PagesCombined As LongPtr
End Type

Public Enum MemoryCombineFlags
    MEMORY_COMBINE_FLAGS_COMMON_PAGES_ONLY = &H4
End Enum
Public Type MEMORY_COMBINE_INFORMATION_EX
    Handle As LongPtr
    PagesCombined As LongPtr
    Flags As MemoryCombineFlags
End Type

Public Type MEMORY_COMBINE_INFORMATION_EX2
    Handle As LongPtr
    PagesCombined As LongPtr
    Flags As MemoryCombineFlags
    ProcessHandle As LongPtr
End Type

Public Type PHYSICAL_CHANNEL_RUN
    NodeNumber As Long
    ChannelNumber As Long
    BasePage As LongLong
    PageCount As LongLong
    Flags As Long
End Type
[Description("⚠️ **WARNING:** Cannot be used as-is due to SAFEARRAY substitution for variable C-style array. Copy fixed info, redim, then fill Run(0).")]
Public Type SYSTEM_MEMORY_TOPOLOGY_INFORMATION
    NumberOfRuns As LongLong
    NumberOfNodes As Long
    NumberOfChannels As Long
    Run() As PHYSICAL_CHANNEL_RUN
End Type

Public Type SYSTEM_MEMORY_CHANNEL_INFORMATION
    ChannelNumber As Long
    ChannelHeatIndex As Long
    TotalPageCount As LongLong
    ZeroPageCount As LongLong
    FreePageCount As LongLong
    StandbyPageCount As LongLong
End Type


Public Type SYSTEM_DEVICE_DATA_INFORMATION
    DeviceId As UNICODE_STRING
    DataName As UNICODE_STRING
    DataType As Long
    DataBufferLength As Long
    DataBuffer As LongPtr
End Type

Public Type SYSTEM_POOL_LIMIT_MEM_INFO
    MemoryLimit As LongLong
    NotificationLimit As LongLong
End Type
Public Type WNF_STATE_NAME
    Data (0 To 1) As Long
End Type
Public Type SYSTEM_POOL_LIMIT_INFO
    PoolTag As Long
    MemLimits (0 To 1) As SYSTEM_POOL_LIMIT_MEM_INFO
    NotificationHandle As WNF_STATE_NAME
End Type
[Description("⚠️ **WARNING:** Struct cannot be used as-is; LimitEntries is a C-style array.")]
Public Type SYSTEM_POOL_LIMIT_INFORMATION
    Version As Long
    EntryCount As Long
    LimitEntries() As SYSTEM_POOL_LIMIT_INFO
End Type

Public Enum SYSTEM_BUILD_VERSION_INFORMATION_FLAGS
    BVI_IsTopLevel = &H1
    BVI_IsChecked = &h2
End Enum
Public Type SYSTEM_BUILD_VERSION_INFORMATION
    LayerNumber As Integer
    LayerCount As Integer
    OsMajorVersion As Long
    OsMinorVersion As Long
    NtBuildNumber As Long
    NtBuildQfe As Long
    LayerName(0 To 127) As Byte
    NtBuildBranch(0 To 127) As Byte
    NtBuildLab(0 To 127) As Byte
    NtBuildLabEx(0 To 127) As Byte
    NtBuildStamp(0 To 25) As Byte
    NtBuildArch(0 To 15) As Byte
    Flags As SYSTEM_BUILD_VERSION_INFORMATION_FLAGS
End Type

' typedef struct _SYSTEM_SHADOW_STACK_INFORMATION
' {
    ' union
    ' {
        ' ULONG Flags;
        ' struct
        ' {
            ' ULONG CetCapable : 1;
            ' ULONG UserCetAllowed : 1;
            ' ULONG ReservedForUserCet : 6;
            ' ULONG KernelCetEnabled : 1;
            ' ULONG KernelCetAuditModeEnabled : 1;
            ' ULONG ReservedForKernelCet : 6;       // since Windows 10 build 21387
            ' ULONG Reserved : 16;
        ' };
    ' };
' } SYSTEM_SHADOW_STACK_INFORMATION, *PSYSTEM_SHADOW_STACK_INFORMATION;
Public Enum SystemShadowStackFlags
    SSSF_CetCapable = &H1
    SSSF_UserCetAllowed = &H2
    SSSF_KernelCetEnabled = &H80
    SSSF_KernelCetAuditModeEnabled = &H100
End Enum
Public Type SYSTEM_SHADOW_STACK_INFORMATION
    Flags As SystemShadowStackFlags
End Type

Public Type SYSTEM_FIRMWARE_RAMDISK_INFORMATION
    Version As Long
    BlockSize As Long
    BaseAddress As LongPtr
    Size As LongPtr
End Type




Public Type FILE_DIRECTORY_INFORMATION
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As FILETIME
    LastAccessTime As FILETIME
    LastWriteTime As FILETIME
    ChangeTime As FILETIME
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Long
    FileName1(MAX_PATH - 1) As Integer 'OFFSET=&H40 (64)
End Type
Public Type FILE_FULL_DIR_INFORMATION
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Long
    EaSize As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_BOTH_DIR_INFORMATION
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Long
    EaSize As Long
    ShortNameLength As Byte
    ShortName(0 To 11) As Integer
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_BASIC_INFORMATION
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
End Type
Public Type FILE_STANDARD_INFORMATION
    AllocationSize As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    NumberOfLinks As Long
    DeletePending As Byte
    Directory As Byte
End Type
Public Type FILE_INTERNAL_INFORMATION
    IndexNumber As LARGE_INTEGER
End Type
Public Type FILE_EA_INFORMATION
    EaSize As Long
End Type
Public Type FILE_ACCESS_INFORMATION
    AccessFlags As FileAccessRights
End Type
Public Type FILE_NAME_INFORMATION
    FileNameLength As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_RENAME_INFORMATION
    ReplaceIfExists As Byte
    RootDirectory As LongPtr
    FileNameLength As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_LINK_INFORMATION
    ReplaceIfExists As Byte
    RootDirectory As LongPtr
    FileNameLength As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_NAMES_INFORMATION
    NextEntryOffset As Long
    FileIndex As Long
    FileNameLength As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_DISPOSITION_INFORMATION
    DeleteFile As Byte
End Type
Public Type FILE_POSITION_INFORMATION
    CurrentByteOffset As LARGE_INTEGER
End Type
Public Type FILE_FULL_EA_INFORMATION
    NextEntryOffset As Long
    Flags As Byte
    EaNameLength As Byte
    EaValueLength As Integer
    EaName(MAX_PATH - 1) As Byte
End Type
Public Type FILE_MODE_INFORMATION
    Mode As FileAccessFlags
End Type
Public Type FILE_ALIGNMENT_INFORMATION
    AlignmentRequirement As Long
End Type
Public Type FILE_ALL_INFORMATION
    BasicInformation As FILE_BASIC_INFORMATION
    StandardInformation As FILE_STANDARD_INFORMATION
    InternalInformation As FILE_INTERNAL_INFORMATION
    EaInformation As FILE_EA_INFORMATION
    AccessInformation As FILE_ACCESS_INFORMATION
    PositionInformation As FILE_POSITION_INFORMATION
    ModeInformation As FILE_MODE_INFORMATION
    AlignmentInformation As FILE_ALIGNMENT_INFORMATION
    NameInformation As FILE_NAME_INFORMATION
End Type
Public Type FILE_ALLOCATION_INFORMATION
    AllocationSize As LARGE_INTEGER
End Type
Public Type FILE_END_OF_FILE_INFORMATION
    EndOfFile As LARGE_INTEGER
End Type
Public Type FILE_STREAM_INFORMATION
    NextEntryOffset As Long
    StreamNameLength As Long
    StreamSize As LARGE_INTEGER
    StreamAllocationSize As LARGE_INTEGER
    StreamName(MAX_PATH - 1) As Integer
End Type
Public Enum FILE_PIPE_READ_MODE
    FILE_PIPE_BYTE_STREAM_MODE = &H00000000
    FILE_PIPE_MESSAGE_MODE = &H00000001
End Enum
Public Enum FILE_PIPE_COMPLETION_MODE
    FILE_PIPE_QUEUE_OPERATION = &H00000000
    FILE_PIPE_COMPLETE_OPERATION = &H00000001
End Enum
Public Type FILE_PIPE_INFORMATION
    ReadMode As FILE_PIPE_READ_MODE
    CompletionMode As FILE_PIPE_COMPLETION_MODE
End Type
Public Enum FILE_PIPE_TYPE
    FILE_PIPE_BYTE_STREAM_TYPE = &H00000000
    FILE_PIPE_MESSAGE_TYPE = &H00000001
    FILE_PIPE_ACCEPT_REMOTE_CLIENTS = &H00000000
    FILE_PIPE_REJECT_REMOTE_CLIENTS = &H00000002
    FILE_PIPE_TYPE_VALID_MASK = &H00000003
End Enum
Public Enum FILE_PIPE_CONFIG
    FILE_PIPE_INBOUND = &H00000000
    FILE_PIPE_OUTBOUND = &H00000001
    FILE_PIPE_FULL_DUPLEX = &H00000002
End Enum
Public Enum FILE_PIPE_STATE
    FILE_PIPE_DISCONNECTED_STATE = &H00000001
    FILE_PIPE_LISTENING_STATE = &H00000002
    FILE_PIPE_CONNECTED_STATE = &H00000003
    FILE_PIPE_CLOSING_STATE = &H00000004
End Enum
Public Enum FILE_PIPE_END
    FILE_PIPE_CLIENT_END = &H00000000
    FILE_PIPE_SERVER_END = &H00000001
End Enum
Public Type FILE_PIPE_LOCAL_INFORMATION
    NamedPipeType As FILE_PIPE_TYPE
    NamedPipeConfiguration As FILE_PIPE_CONFIG
    MaximumInstances As Long
    CurrentInstances As Long
    InboundQuota As Long
    ReadDataAvailable As Long
    OutboundQuota As Long
    WriteQuotaAvailable As Long
    NamedPipeState As FILE_PIPE_STATE
    NamedPipeEnd As FILE_PIPE_END
End Type
Public Type FILE_PIPE_REMOTE_INFORMATION
    CollectDataTime As LARGE_INTEGER
    MaximumCollectionCount As Long
End Type
Public Type FILE_MAILSLOT_QUERY_INFORMATION
    MaximumMessageSize As Long
    MailslotQuota As Long
    NextMessageSize As Long
    MessagesAvailable As Long
    ReadTimeout As LARGE_INTEGER
End Type
Public Type FILE_MAILSLOT_SET_INFORMATION
    ReadTimeout As LongPtr 'PLARGE_INTEGER
End Type
Public Enum NT_COMPRESSION_FORMAT
    COMPRESSION_FORMAT_NONE = (&H0000)  ' winnt
    COMPRESSION_FORMAT_DEFAULT = (&H0001)  ' winnt
    COMPRESSION_FORMAT_LZNT1 = (&H0002)  ' winnt
    COMPRESSION_FORMAT_XPRESS = (&H0003)  ' winnt
    COMPRESSION_FORMAT_XPRESS_HUFF = (&H0004)  ' winnt
    COMPRESSION_FORMAT_XP10 = (&H0005)  ' winnt
    COMPRESSION_FORMAT_MAX = (&H0005)
    COMPRESSION_ENGINE_STANDARD = (&H0000)  ' winnt
    COMPRESSION_ENGINE_MAXIMUM = (&H0100)  ' winnt
    COMPRESSION_ENGINE_HIBER = (&H0200)  ' winnt
    COMPRESSION_ENGINE_MAX = (&H0200)
    COMPRESSION_FORMAT_MASK = (&H00FF)
    COMPRESSION_ENGINE_MASK = (&HFF00&)
    COMPRESSION_FORMAT_ENGINE_MASK = (COMPRESSION_FORMAT_MASK Or COMPRESSION_ENGINE_MASK)
End Enum
Public Type FILE_COMPRESSION_INFORMATION
    CompressedFileSize As LARGE_INTEGER
    /* [ TypeHint(NT_COMPRESSION_FORMAT) ] */ CompressionFormat As Integer
    CompressionUnitShift As Byte
    ChunkShift As Byte
    ClusterShift As Byte
    Reserved(0 To 2) As Byte
End Type
Public Type FILE_OBJECTID_INFORMATION
    FileReference As LongLong
    ObjectId(0 To 15) As Byte ' GUID
    'union
    '{
    '    struct
    '    {
    '        UCHAR BirthVolumeId[16];
    '         UCHAR BirthObjectId[16];
    '         UCHAR DomainId[16];
    '     };
    '    UCHAR ExtendedInfo[48];
    '};
    IdOrInfo(47) As Byte
End Type
Public Type FILE_COMPLETION_INFORMATION
    Port As LongPtr
    Key As LongPtr
End Type
Public Type FILE_MOVE_CLUSTER_INFORMATION
    ClusterCount As Long
    RootDirectory As LongPtr
    FileNameLength As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_QUOTA_INFORMATION
    NextEntryOffset As Long
    SidLength As Long
    ChangeTime As LARGE_INTEGER
    QuotaUsed As LARGE_INTEGER
    QuotaThreshold As LARGE_INTEGER
    QuotaLimit As LARGE_INTEGER
    Sid As SID
End Type
Public Type FILE_REPARSE_POINT_INFORMATION
    FileReference As LongLong
    Tag As Long
End Type
Public Type FILE_NETWORK_OPEN_INFORMATION
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
End Type
Public Type FILE_ATTRIBUTE_TAG_INFORMATION
    FileAttributes As FILE_ATTRIBUTES
    ReparseTag As Long
End Type
Public Type FILE_TRACKING_INFORMATION
    DestinationFile As LongPtr
    ObjectInformationLength As Long
    ObjectInformation() As Byte
End Type
Public Type FILE_ID_BOTH_DIR_INFORMATION
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Long
    EaSize As Long
    ShortNameLength As Byte
    ShortName(0 To 11) As Integer
    FileId As LARGE_INTEGER
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_ID_FULL_DIR_INFORMATION
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Long
    EaSize As Long
    FileId As LARGE_INTEGER
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_VALID_DATA_LENGTH_INFORMATION
    ValidDataLength As LARGE_INTEGER
End Type
Public Type FILE_IO_COMPLETION_NOTIFICATION_INFORMATION
    Flags As FileCompletionModeFlags
End Type
Public Type FILE_IOSTATUSBLOCK_RANGE_INFORMATION
    IoStatusBlockRange As LongPtr
    Length As Long
End Type
Public Enum IO_PRIORITY_HINT
    IoPriorityVeryLow = 0 ' Defragging, content indexing and other background I/Os.
    IoPriorityLow   ' Prefetching for applications.
    IoPriorityNormal   ' Normal I/Os.
    IoPriorityHigh   ' Used by filesystems for checkpoint I/O.
    IoPriorityCritical  ' Used by memory manager. Not available for applications.
    MaxIoPriorityTypes
End Enum
Public Type FILE_IO_PRIORITY_HINT_INFORMATION
    PriorityHint As IO_PRIORITY_HINT
    Pad As Long 'DESCLSPEC_ALIGN(8)
End Type
Public Type FILE_SFIO_RESERVE_INFORMATION
    RequestsPerPeriod As Long
    Period As Long
    RetryFailures As Byte
    Discardable As Byte
    RequestSize As Long
    NumOutstandingRequests As Long
End Type
Public Type FILE_SFIO_VOLUME_INFORMATION
    MaximumRequestsPerPeriod As Long
    MinimumPeriod As Long
    MinimumTransferSize As Long
End Type
Public Type FILE_LINK_ENTRY_INFORMATION
    NextEntryOffset As Long
    ParentFileId As LongLong ' LARGE_INTEGER
    FileNameLength As Long
    FileName(0 To MAX_PATH) As Integer
End Type
Public Type FILE_LINKS_INFORMATION
    BytesNeeded As Long
    EntriesReturned As Long
    Entry As FILE_LINK_ENTRY_INFORMATION
End Type
[Description("⚠️ **WARNING:** Buffered variable C-style array; if NumberOfProcessIdsInList > 256, then use processing manually or via FILE_PROCESS_IDS_USING_FILE_INFORMATION_sa")]
Public Type FILE_PROCESS_IDS_USING_FILE_INFORMATION
    NumberOfProcessIdsInList As Long
    ProcessIdList(255) As LongPtr
End Type
[Description("⚠️ **WARNING:** You cannot use this struct as-is due to SAFEARRAY considerations. Copy the first 4 bytes, determine the size, then copy the rest into ProcessIdList(0) ")]
Public Type FILE_PROCESS_IDS_USING_FILE_INFORMATION_sa
    NumberOfProcessIdsInList As Long
    ProcessIdList() As LongPtr
End Type
Public Type FILE_NETWORK_PHYSICAL_NAME_INFORMATION
    FileNameLength As Long
    FileName(0 To MAX_PATH) As Integer
End Type
Public Enum FILE_TX_DIRINFO_FLAGS
    FILE_ID_GLOBAL_TX_DIR_INFO_FLAG_WRITELOCKED = &H00000001
    FILE_ID_GLOBAL_TX_DIR_INFO_FLAG_VISIBLE_TO_TX = &H00000002
    FILE_ID_GLOBAL_TX_DIR_INFO_FLAG_VISIBLE_OUTSIDE_TX = &H00000004
End Enum
Public Type FILE_ID_GLOBAL_TX_DIR_INFORMATION
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Long
    FileId As LARGE_INTEGER
    LockingTransactionId As UUID
    TxInfoFlags As FILE_TX_DIRINFO_FLAGS
    FileName(0 To MAX_PATH) As Integer
End Type
Public Type FILE_IS_REMOTE_DEVICE_INFORMATION
    IsRemote As Byte
End Type
Public Type FILE_NUMA_NODE_INFORMATION
    NodeNumber As Integer
End Type
Public Type FILE_STANDARD_LINK_INFORMATION
    NumberOfAccessibleLinks As Long
    TotalNumberOfLinks As Long
    DeletePending As Byte
    Directory As Byte
End Type
Public Type FILE_REMOTE_PROTOCOL_INFORMATION
    StructureVersion As Integer
    StructureSize As Integer
    Protocol As WNNC_CODES
    ProtocolMajorVersion As Integer
    ProtocolMinorVersion As Integer
    ProtocolRevision As Integer
    Reserved As Integer
    Flags As REMOTE_PROTOCOL_FLAGS
    GenericReserved(7) As Long
    ProtocolSpecific(15) As Long
End Type
Public Type FILE_VOLUME_NAME_INFORMATION
    DeviceNameLength As Long
    DeviceName(31) As Integer
End Type
Public Type FILE_ID_INFORMATION
    VolumeSerialNumber As LongLong
    FileId As FILE_ID_128
End Type
Public Type FILE_ID_EXTD_DIR_INFORMATION
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Long
    EaSize As Long
    ReparsePointTag As Long
    FileId As FILE_ID_128
    FileName(0 To MAX_PATH) As Integer
End Type
Public Type FILE_LINK_ENTRY_FULL_ID_INFORMATION
    NextEntryOffset As Long
    ParentFileId As FILE_ID_128
    FileNameLength As Long
    FileName(0 To MAX_PATH) As Integer
End Type
Public Type FILE_ID_EXTD_BOTH_DIR_INFORMATION
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Long
    EaSize As Long
    ReparsePointTag As Long
    FileId As FILE_ID_128
    ShortNameLength As Byte
    ShortName(0 To 11) As Integer
    FileName(0 To MAX_PATH) As Integer
End Type
Public Enum FILE_DISPOSITION_EX_FLAGS
    FILE_DISPOSITION_FLAG_DO_NOT_DELETE = &H00000000
    FILE_DISPOSITION_FLAG_DELETE = &H00000001
    FILE_DISPOSITION_FLAG_POSIX_SEMANTICS = &H00000002
    FILE_DISPOSITION_FLAG_FORCE_IMAGE_SECTION_CHECK = &H00000004
    FILE_DISPOSITION_FLAG_ON_CLOSE = &H00000008
End Enum
Public Type FILE_DISPOSITION_INFO_EX
    Flags As FILE_DISPOSITION_EX_FLAGS
End Type
Public Enum FILE_RENAME_EX_FLAGS
    FILE_RENAME_REPLACE_IF_EXISTS = &H00000001
    FILE_RENAME_POSIX_SEMANTICS = &H00000002
' #endif
' #if (PHNT_VERSION >= PHNT_REDSTONE3)
    FILE_RENAME_SUPPRESS_PIN_STATE_INHERITANCE = &H00000004
' #endif
' #if (PHNT_VERSION >= PHNT_REDSTONE5)
    FILE_RENAME_SUPPRESS_STORAGE_RESERVE_INHERITANCE = &H00000008
    FILE_RENAME_NO_INCREASE_AVAILABLE_SPACE = &H00000010
    FILE_RENAME_NO_DECREASE_AVAILABLE_SPACE = &H00000020
    FILE_RENAME_PRESERVE_AVAILABLE_SPACE = &H00000030
    FILE_RENAME_IGNORE_READONLY_ATTRIBUTE = &H00000040
' #endif
' #if (PHNT_VERSION >= PHNT_19H1)
    FILE_RENAME_FORCE_RESIZE_TARGET_SR = &H00000080
    FILE_RENAME_FORCE_RESIZE_SOURCE_SR = &H00000100
    FILE_RENAME_FORCE_RESIZE_SR = &H00000180
End Enum
Public Type FILE_RENAME_INFORMATION_EX
    Flags As FILE_RENAME_EX_FLAGS
    RootDirectory As LongPtr
    FileNameLength As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Enum FILE_STORAGE_TIER_CLASS
    FileStorageTierClassUnspecified = 0
    FileStorageTierClassCapacity = 1
    FileStorageTierClassPerformance = 2
    FileStorageTierClassMax = 3
End Enum
Public Enum FILE_STORAGE_TIER_FLAGS
    FILE_STORAGE_TIER_FLAG_NO_SEEK_PENALTY = (&H00020000)
    FILE_STORAGE_TIER_FLAG_WRITE_BACK_CACHE = (&H00200000)
    FILE_STORAGE_TIER_FLAG_READ_CACHE = (&H00400000)
    FILE_STORAGE_TIER_FLAG_PARITY = (&H00800000)
    FILE_STORAGE_TIER_FLAG_SMR = (&H01000000)
End Enum
Public Type FILE_DESIRED_STORAGE_CLASS_INFORMATION
    ' Class type of the tier
    Class As FILE_STORAGE_TIER_CLASS
    ' Flags
    Flags As FILE_STORAGE_TIER_FLAGS
End Type
Public Type FILE_STAT_INFORMATION
    FileId As LARGE_INTEGER
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    ReparseTag As Long
    NumberOfLinks As Long
    EffectiveAccess As Long
End Type
Public Type FILE_MEMORY_PARTITION_INFORMATION
    OwnerPartitionHandle As LongPtr
    'union
    ' {
    '     struct
    '     {
    '         UCHAR NoCrossPartitionAccess;
    '         UCHAR Spare[3];
    '     };
    AllFlags As Long
    '} Flags;
End Type
Public Enum FILE_LX_FLAGS
    LX_FILE_METADATA_HAS_UID = &H1
    LX_FILE_METADATA_HAS_GID = &H2
    LX_FILE_METADATA_HAS_MODE = &H4
    LX_FILE_METADATA_HAS_DEVICE_ID = &H8
    LX_FILE_CASE_SENSITIVE_DIR = &H10
End Enum
Public Enum FILE_LX_MODE
    _S_IFMT  = &HF000&  ' File type mask
    _S_IFDIR  = &H4000  ' Directory
    _S_IFCHR  = &H2000  ' Character special
    _S_IFIFO  = &H1000  ' Pipe
    _S_IFREG  = &H8000&  ' Regular
    _S_IREAD  = &H0100  ' Read permission, owner
    _S_IWRITE  = &H0080  ' Write permission, owner
    _S_IEXEC  = &H0040  ' Execute/search permission, owner
    S_IFMT = _S_IFMT
    S_IFDIR = _S_IFDIR
    S_IFCHR = _S_IFCHR
    S_IFREG = _S_IFREG
    S_IREAD = _S_IREAD
    S_IWRITE = _S_IWRITE
    S_IEXEC = _S_IEXEC
End Enum
Public Type FILE_STAT_LX_INFORMATION
    FileId As LARGE_INTEGER
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    ReparseTag As Long
    NumberOfLinks As Long
    EffectiveAccess As FileAccessRights
    LxFlags As FILE_LX_FLAGS
    LxUid As Long
    LxGid As Long
    LxMode As FILE_LX_MODE
    LxDeviceIdMajor As Long
    LxDeviceIdMinor As Long
End Type
Public Type FILE_STAT_BASIC_INFORMATION
    FileId As LARGE_INTEGER
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    ReparseTag As Long
    NumberOfLinks As Long
    DeviceType As DEVICE_TYPE
    DeviceCharacteristics As FILE_DEVICE_CHARACTERISTICS
    Reserved As Long
    VolumeSerialNumber As LARGE_INTEGER
    FileId128 As FILE_ID_128
End Type
Public Enum FILE_CS_FLAGS
    FILE_CS_FLAG_CASE_SENSITIVE_DIR = &H00000001
End Enum
Public Type FILE_CASE_SENSITIVE_INFORMATION
    Flags As FILE_CS_FLAGS
End Type
Public Enum FILE_LINK_EX_FLAGS
    FILE_LINK_REPLACE_IF_EXISTS = &H00000001
    FILE_LINK_POSIX_SEMANTICS = &H00000002
    FILE_LINK_SUPPRESS_STORAGE_RESERVE_INHERITANCE = &H00000008
    FILE_LINK_NO_INCREASE_AVAILABLE_SPACE = &H00000010
    FILE_LINK_NO_DECREASE_AVAILABLE_SPACE = &H00000020
    FILE_LINK_PRESERVE_AVAILABLE_SPACE = &H00000030
    FILE_LINK_IGNORE_READONLY_ATTRIBUTE = &H00000040
    '19H1+
    FILE_LINK_FORCE_RESIZE_TARGET_SR = &H00000080
    FILE_LINK_FORCE_RESIZE_SOURCE_SR = &H00000100
    FILE_LINK_FORCE_RESIZE_SR = &H00000180
End Enum
Public Type FILE_LINK_INFORMATION_EX
    Flags As FILE_LINK_EX_FLAGS
    RootDirectory As LongPtr
    FileNameLength As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Enum FILE_KNOWN_FOLDER_TYPE
    KnownFolderNone = 0
    KnownFolderDesktop = 1
    KnownFolderDocuments = 2
    KnownFolderDownloads = 3
    KnownFolderMusic = 4
    KnownFolderPictures = 5
    KnownFolderVideos = 6
    KnownFolderOther = 7
    KnownFolderMax = 7
End Enum
Public Type FILE_KNOWN_FOLDER_INFORMATION
    Type As FILE_KNOWN_FOLDER_TYPE
End Type


Public Type IO_STATUS_BLOCK
    StatusPointer As LongPtr
    Information As LongPtr
End Type

Public Enum FILE_INFORMATION_CLASS
    FileDirectoryInformation = 1 ' FILE_DIRECTORY_INFORMATION
    FileFullDirectoryInformation ' FILE_FULL_DIR_INFORMATION
    FileBothDirectoryInformation ' FILE_BOTH_DIR_INFORMATION
    FileBasicInformation ' FILE_BASIC_INFORMATION
    FileStandardInformation ' FILE_STANDARD_INFORMATION
    FileInternalInformation ' FILE_INTERNAL_INFORMATION
    FileEaInformation ' FILE_EA_INFORMATION
    FileAccessInformation ' FILE_ACCESS_INFORMATION
    FileNameInformation ' FILE_NAME_INFORMATION
    FileRenameInformation ' FILE_RENAME_INFORMATION // 10
    FileLinkInformation ' FILE_LINK_INFORMATION
    FileNamesInformation ' FILE_NAMES_INFORMATION
    FileDispositionInformation ' FILE_DISPOSITION_INFORMATION
    FilePositionInformation ' FILE_POSITION_INFORMATION
    FileFullEaInformation ' FILE_FULL_EA_INFORMATION
    FileModeInformation ' FILE_MODE_INFORMATION
    FileAlignmentInformation ' FILE_ALIGNMENT_INFORMATION
    FileAllInformation ' FILE_ALL_INFORMATION
    FileAllocationInformation ' FILE_ALLOCATION_INFORMATION
    FileEndOfFileInformation ' FILE_END_OF_FILE_INFORMATION // 20
    FileAlternateNameInformation ' FILE_NAME_INFORMATION
    FileStreamInformation ' FILE_STREAM_INFORMATION
    FilePipeInformation ' FILE_PIPE_INFORMATION
    FilePipeLocalInformation ' FILE_PIPE_LOCAL_INFORMATION
    FilePipeRemoteInformation ' FILE_PIPE_REMOTE_INFORMATION
    FileMailslotQueryInformation ' FILE_MAILSLOT_QUERY_INFORMATION
    FileMailslotSetInformation ' FILE_MAILSLOT_SET_INFORMATION
    FileCompressionInformation ' FILE_COMPRESSION_INFORMATION
    FileObjectIdInformation ' FILE_OBJECTID_INFORMATION
    FileCompletionInformation ' FILE_COMPLETION_INFORMATION // 30
    FileMoveClusterInformation ' FILE_MOVE_CLUSTER_INFORMATION
    FileQuotaInformation ' FILE_QUOTA_INFORMATION
    FileReparsePointInformation ' FILE_REPARSE_POINT_INFORMATION
    FileNetworkOpenInformation ' FILE_NETWORK_OPEN_INFORMATION
    FileAttributeTagInformation ' FILE_ATTRIBUTE_TAG_INFORMATION
    FileTrackingInformation ' FILE_TRACKING_INFORMATION
    FileIdBothDirectoryInformation ' FILE_ID_BOTH_DIR_INFORMATION
    FileIdFullDirectoryInformation ' FILE_ID_FULL_DIR_INFORMATION
    FileValidDataLengthInformation ' FILE_VALID_DATA_LENGTH_INFORMATION
    FileShortNameInformation ' FILE_NAME_INFORMATION // 40
    FileIoCompletionNotificationInformation ' FILE_IO_COMPLETION_NOTIFICATION_INFORMATION // since VISTA
    FileIoStatusBlockRangeInformation ' FILE_IOSTATUSBLOCK_RANGE_INFORMATION
    FileIoPriorityHintInformation ' FILE_IO_PRIORITY_HINT_INFORMATION, FILE_IO_PRIORITY_HINT_INFORMATION_EX
    FileSfioReserveInformation ' FILE_SFIO_RESERVE_INFORMATION
    FileSfioVolumeInformation ' FILE_SFIO_VOLUME_INFORMATION
    FileHardLinkInformation ' FILE_LINKS_INFORMATION
    FileProcessIdsUsingFileInformation ' FILE_PROCESS_IDS_USING_FILE_INFORMATION
    FileNormalizedNameInformation ' FILE_NAME_INFORMATION
    FileNetworkPhysicalNameInformation ' FILE_NETWORK_PHYSICAL_NAME_INFORMATION
    FileIdGlobalTxDirectoryInformation ' FILE_ID_GLOBAL_TX_DIR_INFORMATION // since WIN7 // 50
    FileIsRemoteDeviceInformation ' FILE_IS_REMOTE_DEVICE_INFORMATION
    FileUnusedInformation
    FileNumaNodeInformation ' FILE_NUMA_NODE_INFORMATION
    FileStandardLinkInformation ' FILE_STANDARD_LINK_INFORMATION
    FileRemoteProtocolInformation ' FILE_REMOTE_PROTOCOL_INFORMATION
    FileRenameInformationBypassAccessCheck ' (kernel-mode only); FILE_RENAME_INFORMATION // since WIN8
    FileLinkInformationBypassAccessCheck ' (kernel-mode only); FILE_LINK_INFORMATION
    FileVolumeNameInformation ' FILE_VOLUME_NAME_INFORMATION
    FileIdInformation ' FILE_ID_INFORMATION
    FileIdExtdDirectoryInformation ' FILE_ID_EXTD_DIR_INFORMATION // 60
    FileReplaceCompletionInformation ' FILE_COMPLETION_INFORMATION // since WINBLUE
    FileHardLinkFullIdInformation ' FILE_LINK_ENTRY_FULL_ID_INFORMATION
    FileIdExtdBothDirectoryInformation ' FILE_ID_EXTD_BOTH_DIR_INFORMATION // since THRESHOLD
    FileDispositionInformationEx ' FILE_DISPOSITION_INFO_EX // since REDSTONE
    FileRenameInformationEx ' FILE_RENAME_INFORMATION_EX
    FileRenameInformationExBypassAccessCheck ' (kernel-mode only); FILE_RENAME_INFORMATION_EX
    FileDesiredStorageClassInformation ' FILE_DESIRED_STORAGE_CLASS_INFORMATION // since REDSTONE2
    FileStatInformation ' FILE_STAT_INFORMATION
    FileMemoryPartitionInformation ' FILE_MEMORY_PARTITION_INFORMATION // since REDSTONE3
    FileStatLxInformation ' FILE_STAT_LX_INFORMATION // since REDSTONE4 // 70
    FileCaseSensitiveInformation ' FILE_CASE_SENSITIVE_INFORMATION
    FileLinkInformationEx ' FILE_LINK_INFORMATION_EX // since REDSTONE5
    FileLinkInformationExBypassAccessCheck ' (kernel-mode only); FILE_LINK_INFORMATION_EX
    FileStorageReserveIdInformation ' FILE_SET_STORAGE_RESERVE_ID_INFORMATION
    FileCaseSensitiveInformationForceAccessCheck ' FILE_CASE_SENSITIVE_INFORMATION
    FileKnownFolderInformation ' FILE_KNOWN_FOLDER_INFORMATION // since WIN11
    FileMaximumInformation
End Enum

Public Enum FS_INFORMATION_CLASS
    FileFsVolumeInformation
    FileFsLabelInformation
    FileFsSizeInformation
    FileFsDeviceInformation
    FileFsAttributeInformation
    FileFsControlInformation
    FileFsFullSizeInformation
    FileFsObjectIdInformation
    FileFsDriverPathInformation
    FileFsVolumeFlagsInformation
    FileFsSectorSizeInformation
    FileFsDataCopyInformation
    FileFsMetadataSizeInformation
    FileFsFullSizeInformationEx
    FileFsMaximumInformation
End Enum
Public Type FILE_FS_VOLUME_INFORMATION
    VolumeCreationTime As LARGE_INTEGER
    VolumeSerialNumber As Long
    VolumeLabelLength As Long
    SupportsObjects As Byte
    VolumeLabel(MAX_PATH - 1) As Integer
End Type
Public Type FILE_FS_LABEL_INFORMATION
    VolumeLabelLength As Long
    VolumeLabel(MAX_PATH - 1) As Integer
End Type
Public Type FILE_FS_SIZE_INFORMATION
    TotalAllocationUnits As LARGE_INTEGER
    AvailableAllocationUnits As LARGE_INTEGER
    SectorsPerAllocationUnit As Long
    BytesPerSector As Long
End Type
Public Enum FILE_DEVICE_CHARACTERISTICS
    FILE_REMOVABLE_MEDIA = &H00000001
    FILE_READ_ONLY_DEVICE = &H00000002
    FILE_FLOPPY_DISKETTE = &H00000004
    FILE_WRITE_ONCE_MEDIA = &H00000008
    FILE_REMOTE_DEVICE = &H00000010
    FILE_DEVICE_IS_MOUNTED = &H00000020
    FILE_VIRTUAL_VOLUME = &H00000040
    FILE_AUTOGENERATED_DEVICE_NAME = &H00000080
    FILE_DEVICE_SECURE_OPEN = &H00000100
    FILE_CHARACTERISTIC_PNP_DEVICE = &H00000800
    FILE_CHARACTERISTIC_TS_DEVICE = &H00001000
    FILE_CHARACTERISTIC_WEBDAV_DEVICE = &H00002000
    FILE_CHARACTERISTIC_CSV = &H00010000
    FILE_DEVICE_ALLOW_APPCONTAINER_TRAVERSAL = &H00020000
    FILE_PORTABLE_DEVICE = &H00040000
    FILE_REMOTE_DEVICE_VSMB = &H00080000
    FILE_DEVICE_REQUIRE_SECURITY_CHECK = &H00100000
End Enum
Public Type FILE_FS_DEVICE_INFORMATION
    DeviceType As DEVICE_TYPE
    Characteristics As FILE_DEVICE_CHARACTERISTICS
End Type
[PackingAlignment(8)]
Public Type FILE_FS_DRIVER_PATH_INFORMATION
    DriverInPath As Byte
    DriverNameLength As Long
    DriverName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_FS_FULL_SIZE_INFORMATION
    TotalAllocationUnits As LARGE_INTEGER
    CallerAvailableAllocationUnits As LARGE_INTEGER
    ActualAvailableAllocationUnits As LARGE_INTEGER
    SectorsPerAllocationUnit As Long
    BytesPerSector As Long
End Type
Public Type FILE_FS_OBJECTID_INFORMATION
    ObjectId(0 To 15) As Byte
    ExtendedInfo(0 To 47) As Byte
End Type
Public Type FILE_FS_ATTRIBUTE_INFORMATION
    FileSystemAttributes As FileSystemFlags
    MaximumComponentNameLength As Long
    FileSystemNameLength As Long
    FileSystemName(80) As Integer
End Type
Public Enum FS_CONTROL_FLAGS
    FILE_VC_QUOTA_NONE = &H00000000
    FILE_VC_QUOTA_TRACK = &H00000001
    FILE_VC_QUOTA_ENFORCE = &H00000002
    FILE_VC_QUOTA_MASK = &H00000003
    FILE_VC_CONTENT_INDEX_DISABLED = &H00000008
    FILE_VC_LOG_QUOTA_THRESHOLD = &H00000010
    FILE_VC_LOG_QUOTA_LIMIT = &H00000020
    FILE_VC_LOG_VOLUME_THRESHOLD = &H00000040
    FILE_VC_LOG_VOLUME_LIMIT = &H00000080
    FILE_VC_QUOTAS_INCOMPLETE = &H00000100
    FILE_VC_QUOTAS_REBUILDING = &H00000200
    FILE_VC_VALID_MASK = &H000003ff
End Enum
Public Type FILE_FS_CONTROL_INFORMATION
    FreeSpaceStartFiltering As LARGE_INTEGER
    FreeSpaceThreshold As LARGE_INTEGER
    FreeSpaceStopFiltering As LARGE_INTEGER
    DefaultQuotaThreshold As LARGE_INTEGER
    DefaultQuotaLimit As LARGE_INTEGER
    FileSystemControlFlags As FS_CONTROL_FLAGS
End Type
Public Type FILE_FS_DATA_COPY_INFORMATION
    NumberOfCopies As Long
End Type

Public Type FILE_FS_GUID_INFORMATION
    FsGuid As UUID
End Type

Public Enum FileEndOfFileExFlags
    FLAGS_END_OF_FILE_INFO_EX_EXTEND_PAGING = &H00000001
    FLAGS_END_OF_FILE_INFO_EX_NO_EXTRA_PAGING_EXTEND = &H00000002
    FLAGS_END_OF_FILE_INFO_EX_TIME_CONSTRAINED = &H00000004
End Enum
Public Enum NtDelayReasonFlags
    FLAGS_DELAY_REASONS_LOG_FILE_FULL = &H00000001
    FLAGS_DELAY_REASONS_BITMAP_SCANNED = &H00000002
End Enum
Public Type FILE_END_OF_FILE_INFORMATION_EX
    EndOfFile As LARGE_INTEGER
    PagingFileSizeInMM As LARGE_INTEGER
    PagingFileMaxSize As LARGE_INTEGER
    Flags As FileEndOfFileExFlags
End Type
Public Enum SECTOR_SIZE_FLAGS
    SSINFO_FLAGS_ALIGNED_DEVICE = &H00000001
'   If SET the partition is properly aligned with the alignment of the device
'   If NOT SET the partition is NOT properly aligned with the partition which can
'       lead to performance issues on this device
    SSINFO_FLAGS_PARTITION_ALIGNED_ON_DEVICE = &H00000002
'   If SET the device reports that it does not have a seek penalty (usually this means an SSD)
'   If NOT SET the device reports it does have a seek penalty or the property could not be queried
    SSINFO_FLAGS_NO_SEEK_PENALTY = &H00000004
'   If SET the device supports the TRIM operation
'   If NOT SET the device does not support trim operations or the property could not be queried
    SSINFO_FLAGS_TRIM_ENABLED = &H00000008
'   If SET this is a byte addressable storage device (i.e. a storage class memory or a persistent
'   memory device).
'   If NOT SET this is not a byte addressable storage device.
'   NOTE: File systems like NTFS and ReFS can support byte addressable mode where a file is directly
'   mapped to the physical address that the storage device expose, if the hardware supports
'   byte addressing (which is what this flag indicates) and the volume type allows byte
'   addressing.  To know if the volume type and the file system supports byte addressing, check
'   that FileSystemAttributes of FileFsAttributeInformation has FILE_DAX_VOLUME set.
    SSINFO_FLAGS_BYTE_ADDRESSABLE = &H00000010
'   If this value is set for the Sector and Partition alignment
'   fields then it means the alignment is not known and the
'   alignment flags have no meaning
    SSINFO_OFFSET_UNKNOWN = (&Hffffffff)
End Enum
Public Type FILE_FS_SECTOR_SIZE_INFORMATION
    LogicalBytesPerSector As Long
    PhysicalBytesPerSectorForAtomicity As Long
    PhysicalBytesPerSectorForPerformance As Long
    FileSystemEffectivePhysicalBytesPerSectorForAtomicity As Long
    Flags As SECTOR_SIZE_FLAGS
    ByteOffsetForSectorAlignment As Long
    ByteOffsetForPartitionAlignment As Long
End Type
Public Type FILE_FS_FULL_SIZE_INFORMATION_EX
    ActualTotalAllocationUnits As LongLong
    ActualAvailableAllocationUnits As LongLong
    ActualPoolUnavailableAllocationUnits As LongLong
    CallerTotalAllocationUnits As LongLong
    CallerAvailableAllocationUnits As LongLong
    CallerPoolUnavailableAllocationUnits As LongLong
    UsedAllocationUnits As LongLong
    TotalReservedAllocationUnits As LongLong
    VolumeStorageReserveAllocationUnits As LongLong
    AvailableCommittedAllocationUnits As LongLong
    PoolAvailableAllocationUnits As LongLong
    SectorsPerAllocationUnit As Long
    BytesPerSector As Long
End Type
Public Type FILE_FS_VOLUME_FLAGS_INFORMATION
    Flags As FileSystemFlags
End Type
Public Type FILE_FS_METADATA_SIZE_INFORMATION
    TotalMetadataAllocationUnits As LARGE_INTEGER
    SectorsPerAllocationUnit As Long
    BytesPerSector As Long
End Type

Public Type TOKEN_USER
    User As SID_AND_ATTRIBUTES
End Type

Public Type TOKEN_GROUPS
    GroupCount As Long
    Groups(100) As SID_AND_ATTRIBUTES
End Type

Public Type TOKEN_OWNER
    psid As LongPtr
End Type

Public Type TOKEN_PRIMARY_GROUP
    psid As LongPtr
End Type

Public Type TOKEN_DEFAULT_DACL
    DefaultDacl As LongPtr
End Type

Public Const TOKEN_SOURCE_LENGTH = 8
Public Type TOKEN_SOURCE
    SourceName(0 To (TOKEN_SOURCE_LENGTH - 1)) As Byte
    SourceIdentifier As LUID
End Type

Public Type TOKEN_CONTROL
    TokenId As LUID
    AuthenticationId As LUID
    ModifiedId As LUID
    TokenSource As TOKEN_SOURCE
End Type

Public Type TOKEN_STATISTICS
    TokenId As LUID
    AuthenticationId As LUID
    ExpirationTime As LARGE_INTEGER
    TokenType As TOKEN_TYPE
    ImpersonationLevel As SECURITY_IMPERSONATION_LEVEL
    DynamicCharged As Long
    DynamicAvailable As Long
    GroupCount As Long
    PrivilegeCount As Long
    ModifiedId As LUID
End Type

Public Type TOKEN_GROUPS_AND_PRIVILEGES
    SidCount As Long
    SidLength As Long
    Sids As LongPtr
    RestrictedSidCount As Long
    RestrictedSidLength As Long
    RestrictedSids As LongPtr
    PrivilegeCount As Long
    PrivilegeLength As Long
    Privileges As LongPtr
    AuthenticationId As LUID
End Type

Public Type TOKEN_ORIGIN
    OriginatingLogonSession As LUID
End Type

Public Enum TOKEN_ELEVATION_TYPE
    TokenElevationTypeDefault = 1
    TokenElevationTypeFull = 2
    TokenElevationTypeLimited = 3
End Enum

Public Type TOKEN_ELEVATION
    TokenIsElevated As Long
End Type

Public Enum TOKEN_MANDATORY_POLICY_FLAGS
    TOKEN_MANDATORY_POLICY_OFF = &H0
    TOKEN_MANDATORY_POLICY_NO_WRITE_UP = &H1
    TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN = &H2
    TOKEN_MANDATORY_POLICY_VALID_MASK = (TOKEN_MANDATORY_POLICY_NO_WRITE_UP Or TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN)
End Enum
Public Type TOKEN_MANDATORY_POLICY
    Policy As TOKEN_MANDATORY_POLICY_FLAGS
End Type

Public Type TOKEN_ACCESS_INFORMATION
    SidHash As LongPtr
    RestrictedSidHash As LongPtr
    Privileges As LongPtr
    AuthenticationId As LUID
    TokenType As TOKEN_TYPE
    ImpersonationLevel As SECURITY_IMPERSONATION_LEVEL
    MandatoryPolicy As TOKEN_MANDATORY_POLICY
    Flags As Long
    AppContainerNumber As Long
    PackageSid As LongPtr
    CapabilitiesHash As LongPtr
    TrustLevelSid As LongPtr
    SecurityAttributes As LongPtr
End Type

Public Enum MANDATORY_LEVEL
    MandatoryLevelUntrusted = 0
    MandatoryLevelLow
    MandatoryLevelMedium
    MandatoryLevelHigh
    MandatoryLevelSystem
    MandatoryLevelSecureProcess
    MandatoryLevelCount
End Enum
Public Type TOKEN_MANDATORY_LABEL
    Label As SID_AND_ATTRIBUTES
End Type

Public Type TOKEN_APPCONTAINER_INFORMATION
    TokenAppContainer As LongPtr
End Type

Public Type TOKEN_LINKED_TOKEN
    LinkedToken As LongPtr
End Type

[Description("⚠️ **WARNING:** WINDOWS 8 AND EARLIER MUST USE 56 instead!")]
Public Const POLICY_AUDIT_SUBCATEGORY_COUNT_Vista = 53
Public Const POLICY_AUDIT_SUBCATEGORY_COUNT_Win8 = 56
[Description("⚠️ **WARNING:** WINDOWS 10+ ONLY. WINDOWS 8 AND EARLIER MUST USE _Win8 or _Vista variants.!")]
Public Const POLICY_AUDIT_SUBCATEGORY_COUNT = 59 'Windows 10
[Description("⚠️ **WARNING:** WINDOWS 10+ ONLY. WINDOWS 8 AND EARLIER MUST USE _Win8 or _Vista variants.!")]
Public Type TOKEN_AUDIT_POLICY
    PerUserPolicy(POLICY_AUDIT_SUBCATEGORY_COUNT >> 1) As Byte
End Type
[Description("WINVISTA/7")]
Public Type TOKEN_AUDIT_POLICY_Vista
    PerUserPolicy(POLICY_AUDIT_SUBCATEGORY_COUNT_Vista >> 1) As Byte
End Type
[Description("WIN8 AND EARLIER")]
Public Type TOKEN_AUDIT_POLICY_Win8
    PerUserPolicy(POLICY_AUDIT_SUBCATEGORY_COUNT_win8 >> 1) As Byte
End Type
Public Type TOKEN_DEVICE_CLAIMS
    DeviceClaims As LongPtr
End Type
Public Type TOKEN_USER_CLAIMS
    UserClaims As LongPtr
End Type

Public Type TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE
    Version As LongLong
    Name As UNICODE_STRING
End Type
Public Type TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE
    pValue As LongPtr
    ValueLength As Long
End Type
Public Type TOKEN_SECURITY_ATTRIBUTE_V1
    Name As UNICODE_STRING
    ValueType As Integer
    Reserved As Integer
    Flags As Long
    ValueCount As Long
    '    union
    '    {
    '        PLONG64 pInt64;
    '        PULONG64 pUint64;
    '        PUNICODE_STRING pString;
    '        PTOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE pFqbn;
    '        PTOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE pOctetString;
    '    } Values;
    Values As LongPtr
End Type
Public Type TOKEN_SECURITY_ATTRIBUTES_INFORMATION
    Version As Integer
    Reserved As Integer
    AttributeCount As Long
    '    union
    '    {
    pAttributeV1 As LongPtr 'PTOKEN_SECURITY_ATTRIBUTE_V1
    '    } Attribute;
End Type


Public Enum KPROFILE_SOURCE
    ProfileTime
    ProfileAlignmentFixup
    ProfileTotalIssues
    ProfilePipelineDry
    ProfileLoadInstructions
    ProfilePipelineFrozen
    ProfileBranchInstructions
    ProfileTotalNonissues
    ProfileDcacheMisses
    ProfileIcacheMisses
    ProfileCacheMisses
    ProfileBranchMispredictions
    ProfileStoreInstructions
    ProfileFpInstructions
    ProfileIntegerInstructions
    Profile2Issue
    Profile3Issue
    Profile4Issue
    ProfileSpecialInstructions
    ProfileTotalCycles
    ProfileIcacheIssues
    ProfileDcacheAccesses
    ProfileMemoryBarrierCycles
    ProfileLoadLinkedIssues
    ProfileMaximum
End Enum

Public Type GROUP_AFFINITY
    Mask As LongPtr 'KAFFINITY
    Group As Integer
    Reserved(0 To 2) As Integer
End Type

Public Type POWER_PLATFORM_INFORMATION
    AoAc As Byte
End Type
Public Type PROCESSOR_POWER_INFORMATION
    Number As Long
    MaxMhz As Long
    CurrentMhz As Long
    MhzLimit As Long
    MaxIdleState As Long
    CurrentIdleState As Long
End Type

Public Enum SHUTDOWN_ACTION
    ShutdownNoReboot
    ShutdownReboot
    ShutdownPowerOff
End Enum

Public Enum FileCreateDisposition
    FILE_SUPERSEDE = &H00000000
    FILE_OPEN = &H00000001
    FILE_CREATE = &H00000002
    FILE_OPEN_IF = &H00000003
    FILE_OVERWRITE = &H00000004
    FILE_OVERWRITE_IF = &H00000005
    FILE_MAXIMUM_DISPOSITION = &H00000005
End Enum
Public Enum FileCreateOutcome
    FILE_SUPERSEDED = &H00000000
    FILE_OPENED = &H00000001
    FILE_CREATED = &H00000002
    FILE_OVERWRITTEN = &H00000003
    FILE_EXISTS = &H00000004
    FILE_DOES_NOT_EXIST = &H00000005
End Enum
Public Enum FileAccessFlags
    FILE_DIRECTORY_FILE = &H00000001
    FILE_WRITE_THROUGH = &H00000002
    FILE_SEQUENTIAL_ONLY = &H00000004
    FILE_NO_INTERMEDIATE_BUFFERING = &H00000008
    FILE_SYNCHRONOUS_IO_ALERT = &H00000010
    FILE_SYNCHRONOUS_IO_NONALERT = &H00000020
    FILE_NON_DIRECTORY_FILE = &H00000040
    FILE_CREATE_TREE_CONNECTION = &H00000080
    FILE_COMPLETE_IF_OPLOCKED = &H00000100
    FILE_NO_EA_KNOWLEDGE = &H00000200
    FILE_OPEN_REMOTE_INSTANCE = &H00000400
    FILE_RANDOM_ACCESS = &H00000800
    FILE_DELETE_ON_CLOSE = &H00001000
    FILE_OPEN_BY_FILE_ID = &H00002000
    FILE_OPEN_FOR_BACKUP_INTENT = &H00004000
    FILE_NO_COMPRESSION = &H00008000&
' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN7)
    FILE_OPEN_REQUIRING_OPLOCK = &H00010000
    FILE_DISALLOW_EXCLUSIVE = &H00020000
    FILE_SESSION_AWARE = &H00040000
    FILE_RESERVE_OPFILTER = &H00100000
    FILE_OPEN_REPARSE_POINT = &H00200000
    FILE_OPEN_NO_RECALL = &H00400000
    FILE_OPEN_FOR_FREE_SPACE_QUERY = &H00800000
    'Windows 11
    FILE_CONTAINS_EXTENDED_CREATE_INFORMATION = &H10000000
' #endif

    FILE_VALID_OPTION_FLAGS = &H00ffffff
    FILE_VALID_PIPE_OPTION_FLAGS = &H00000032
    FILE_VALID_MAILSLOT_OPTION_FLAGS = &H00000032
    FILE_VALID_SET_FLAGS = &H00000036
End Enum

Public Type PEB_LDR_DATA
    Length As Long
    Initialized As Byte
    SsHandle As LongPtr
    InLoadOrderModuleList As LIST_ENTRY
    InMemoryOrderModuleList As LIST_ENTRY
    InInitializationOrderModuleList As LIST_ENTRY
    EntryInProgress As LongPtr
    ShutdownInProgress As Byte
    ShutdownThreadId As LongPtr
End Type

Public Type LDR_MODULE
    InLoadOrderModuleList As LIST_ENTRY
    InMemoryOrderModuleList As LIST_ENTRY
    InInitializationOrderModuleList As LIST_ENTRY
    BaseAddress As LongPtr
    EntryPoint As LongPtr
    SizeOfImage As Long
    FullDllName As UNICODE_STRING
    BaseDllName As UNICODE_STRING
    Flags As Long
    LoadCount As Integer
    TlsIndex As Integer
    HashTableEntry As LIST_ENTRY
    TimeDateStamp As Long
End Type

Public Type PEB_FREE_BLOCK
    Next As LongPtr 'PEB_FREE_BLOCK*
    Size As Long
End Type



Public Enum IrpFlags
    IRP_NOCACHE = &H1
    IRP_PAGING_IO = &H2
    IRP_MOUNT_COMPLETION = &H2
    IRP_SYNCHRONOUS_API = &H4
    IRP_ASSOCIATED_IRP = &H8
    IRP_BUFFERED_IO = &H10
    IRP_DEALLOCATE_BUFFER = &H20
    IRP_INPUT_OPERATION = &H40
    IRP_SYNCHRONOUS_PAGING_IO = &H40
    IRP_CREATE_OPERATION = &H80
    IRP_READ_OPERATION = &H100
    IRP_WRITE_OPERATION = &H200
    IRP_CLOSE_OPERATION = &H400
    IRP_DEFER_IO_COMPLETION = &H800
    IRP_OB_QUERY_NAME = &H1000
    IRP_HOLD_DEVICE_QUEUE = &H2000
'  Define I/O request packet (IRP) alternate flags for allocation control.
    IRP_QUOTA_CHARGED = &H1
    IRP_ALLOCATED_MUST_SUCCEED = &H2
    IRP_ALLOCATED_FIXED_SIZE = &H4
    IRP_LOOKASIDE_ALLOCATION = &H8
End Enum

Public Enum LDR_DATA_TABLE_FLAGS
    LDRP_STATIC_LINK = &H00000002  ' ntdll
    LDRP_IMAGE_DLL = &H00000004  ' ntdll
    LDRP_LOAD_IN_PROGRESS = &H00001000  ' ntdll
    LDRP_UNLOAD_IN_PROGRESS = &H00002000  ' ntdll
    LDRP_ENTRY_PROCESSED = &H00004000  ' ntldr, ntoskrnl and ntdll
    LDRP_ENTRY_INSERTED = &H00008000&
    LDRP_CURRENT_LOAD = &H00010000
    LDRP_FAILED_BUILTIN_LOAD = &H00020000  ' ntoskrnl
' 6.2 and later:
    LDRP_PACKAGED_BINARY = &H00000001
    LDRP_MARKED_FOR_REMOVAL = &H00000002
    LDRP_LOAD_NOTIFICATION_SENT = &H00000008
    LDRP_TELEMETRY_ENTRY_PROCESSED = &H00000010
    LDRP_PROCESS_STATIC_IMPORT = &H00000020
    LDRP_IN_LEGACY_LISTS = &H00000040
    LDRP_IN_INDEXES = &H00000080
    LDRP_SHIM_DLL = &H00000100
    LDRP_IN_EXCEPTION_TABLE = &H00000200
    LDRP_LOAD_CONFIG_PROCESSED = &H00002000  'Win10+
    LDRP_PROTECTED_PAYLOAD = &H00008000&  'Win10+
    LDRP_DONT_CALL_FOR_THREADS = &H00040000
    LDRP_PROCESS_ATTACH_CALLED = &H00080000
    LDRP_PROCESS_ATTACH_FAILED = &H00100000
    LDRP_COR_DEFERRED_VALIDATE = &H00200000
    LDRP_COR_IMAGE = &H00400000
    LDRP_DONT_RELOCATE = &H00800000
    LDRP_COR_IL_ONLY = &H01000000
    LDRP_CHPE_IMAGE = &H02000000
    LDRP_CHPE_EMULATOR_IMAGE = &H04000000
    LDRP_REDIRECTED = &H10000000
    LDRP_COMPAT_DATABASE_PROCESSED = &H80000000
End Enum
[Description("This structure is complete only up until Windows XP. Additional members have been added.")]
Public Type LDR_DATA_TABLE_ENTRY
    InLoadOrderLinks As LIST_ENTRY
    InMemoryOrderLinks As LIST_ENTRY
    InInitializationOrderLinks As LIST_ENTRY
    DllBase As LongPtr
    EntryPoint As LongPtr
    SizeOfImage As Long
    FullDllName As UNICODE_STRING
    BaseDllName As UNICODE_STRING
    Flags As LDR_DATA_TABLE_FLAGS
    LoadCount As Integer 'Obsolete starting in Win8
    TlsIndex As Integer
    HashLinks As LIST_ENTRY
    TimeDateStamp As Long
    EntryPointActivationContext As LongPtr
    PatchInformationOrLock As LongPtr 'PatchInfo on XP-8, Lock on 10
End Type

[Description("This structure is complete only up until Windows XP. Additional members have been added.")]
Public Type LDR_DATA_TABLE_ENTRY32
    InLoadOrderLinks As LIST_ENTRY32
    InMemoryOrderLinks As LIST_ENTRY32
    InInitializationOrderLinks As LIST_ENTRY32
    DllBase As Long
    EntryPoint As Long
    SizeOfImage As Long
    FullDllName As UNICODE_STRING32
    BaseDllName As UNICODE_STRING32
    Flags As LDR_DATA_TABLE_FLAGS
    LoadCount As Integer 'Obsolete starting in Win8
    TlsIndex As Integer
    HashLinks As LIST_ENTRY32
    TimeDateStamp As Long
    EntryPointActivationContext As Long
    PatchInformationOrLock As Long 'PatchInfo on XP-8, Lock on 10
End Type
[Description("This structure is complete only up until Windows XP. Additional members have been added.")]
Public Type LDR_DATA_TABLE_ENTRY64
    InLoadOrderLinks As LIST_ENTRY64
    InMemoryOrderLinks As LIST_ENTRY64
    InInitializationOrderLinks As LIST_ENTRY64
    DllBase As LongLong
    EntryPoint As LongLong
    SizeOfImage As Long
    FullDllName As UNICODE_STRING64
    BaseDllName As UNICODE_STRING64
    Flags As LDR_DATA_TABLE_FLAGS
    LoadCount As Integer 'Obsolete starting in Win8
    TlsIndex As Integer
    HashLinks As LIST_ENTRY64
    TimeDateStamp As Long
    EntryPointActivationContext As LongLong
    PatchInformationOrLock As LongLong 'PatchInfo on XP-8, Lock on 10
End Type
Public Enum PROCESS_CREATE_FLAGS
    PROCESS_CREATE_FLAGS_BREAKAWAY = &H00000001  ' NtCreateProcessEx & NtCreateUserProcess
    PROCESS_CREATE_FLAGS_NO_DEBUG_INHERIT = &H00000002  ' NtCreateProcessEx & NtCreateUserProcess
    PROCESS_CREATE_FLAGS_INHERIT_HANDLES = &H00000004  ' NtCreateProcessEx & NtCreateUserProcess
    PROCESS_CREATE_FLAGS_OVERRIDE_ADDRESS_SPACE = &H00000008  ' NtCreateProcessEx only
    PROCESS_CREATE_FLAGS_LARGE_PAGES = &H00000010  ' NtCreateProcessEx only, requires SeLockMemory
    PROCESS_CREATE_FLAGS_LARGE_PAGE_SYSTEM_DLL = &H00000020  ' NtCreateProcessEx only, requires SeLockMemory
    PROCESS_CREATE_FLAGS_PROTECTED_PROCESS = &H00000040  ' NtCreateUserProcess only
    PROCESS_CREATE_FLAGS_CREATE_SESSION = &H00000080  ' NtCreateProcessEx & NtCreateUserProcess, requires SeLoadDriver
    PROCESS_CREATE_FLAGS_INHERIT_FROM_PARENT = &H00000100  ' NtCreateProcessEx & NtCreateUserProcess
    PROCESS_CREATE_FLAGS_SUSPENDED = &H00000200  ' NtCreateProcessEx & NtCreateUserProcess
    PROCESS_CREATE_FLAGS_FORCE_BREAKAWAY = &H00000400  ' NtCreateProcessEx & NtCreateUserProcess, requires SeTcb
    PROCESS_CREATE_FLAGS_MINIMAL_PROCESS = &H00000800  ' NtCreateProcessEx only
    PROCESS_CREATE_FLAGS_RELEASE_SECTION = &H00001000  ' NtCreateProcessEx & NtCreateUserProcess
    PROCESS_CREATE_FLAGS_CLONE_MINIMAL = &H00002000  ' NtCreateProcessEx only
    PROCESS_CREATE_FLAGS_CLONE_MINIMAL_REDUCED_COMMIT = &H00004000  '
    PROCESS_CREATE_FLAGS_AUXILIARY_PROCESS = &H00008000& ' NtCreateProcessEx & NtCreateUserProcess, requires SeTcb
    PROCESS_CREATE_FLAGS_CREATE_STORE = &H00020000  ' NtCreateProcessEx only
    PROCESS_CREATE_FLAGS_USE_PROTECTED_ENVIRONMENT = &H00040000  ' NtCreateProcessEx & NtCreateUserProces
End Enum
Public Enum THREAD_CREATE_FLAGS
    THREAD_CREATE_FLAGS_CREATE_SUSPENDED = &H00000001  ' NtCreateUserProcess & NtCreateThreadEx
    THREAD_CREATE_FLAGS_SKIP_THREAD_ATTACH = &H00000002  ' NtCreateThreadEx only
    THREAD_CREATE_FLAGS_HIDE_FROM_DEBUGGER = &H00000004  ' NtCreateThreadEx only
    THREAD_CREATE_FLAGS_LOADER_WORKER = &H00000010  ' NtCreateThreadEx only
    THREAD_CREATE_FLAGS_SKIP_LOADER_INIT = &H00000020  ' NtCreateThreadEx only
    THREAD_CREATE_FLAGS_BYPASS_PROCESS_FREEZE = &H00000040  ' NtCreateThreadEx only
    THREAD_CREATE_FLAGS_INITIAL_THREAD = &H00000080  ' ?
End Enum

Public Enum PSCI_OUTFLAGS
    PSCI_ProtectedProcess = &H1
    PSCI_AddressSpaceOverride = &H2
    PSCI_DevOverrideEnabled = &H4
    PSCI_ManifestDetected = &H8
    PSCI_ProtectedProcessLight = &H10
End Enum
Public Enum PSCI_INITFLAGS
    PSCI_WriteOutputOnExit = &H1
    PSCI_DetectManifest = &H2
    PSCI_IFEOSkipDebugger = &H4
End Enum

Public Enum PS_CREATE_STATE
    PsCreateInitialState
    PsCreateFailOnFileOpen
    PsCreateFailOnSectionCreate
    PsCreateFailExeFormat
    PsCreateFailMachineMismatch
    PsCreateFailExeName
    PsCreateSuccess
    PsCreateMaximumStates
End Enum
Public Type PS_CREATE_INFO
    Size As LongPtr
    State As PS_CREATE_STATE
    #If Win64 Then
        pad As Long
        uniondata(71) As Byte
    #Else
        uniondata(63) As Byte
    #End If
    /*
    union {
    struct {
        HANDLE FileHandle;
    } FailSection;
    struct {
        USHORT DllCharacteristics;
    } ExeFormat;
    struct {
        HANDLE IFEOKey;
    } ExeName;
    struct {
        ULONG InitFlags; //PSCI_INITFLAGS
        ACCESS_MASK AdditionalFileAccess;
    }
    struct {
        ULONG OutputFlags; //PSCI_OUTFLAGS
        HANDLE FileHandle;
        HANDLE SectionHandle;
        ULONGLONG  UserProcessParametersNative;
        ULONG UserProcessParametersWow64;
        ULONG CurrentParameterFlags;
        ULONGLONG PebAddressNative;
        ULONG PebAddressWow64;
        ULONGLONG ManifestAddress;
        ULONG ManifestSize
    }
    */
End Type
Public Type PS_CREATE_INFO_SUCCESS_U
    OutputFlags As Long 'PSCI_OUTFLAGS
    FileHandle As LongPtr
    SectionHandle As LongPtr
    UserProcessParametersNative As LongLong
    UserProcessParametersWow64 As Long
    CurrentParameterFlags As Long
    PebAddressNative As LongLong
    PebAddressWow64 As Long
    ManifestAddress As LongLong
    ManifestSiz As Long
End Type
Public Enum PS_ATTRIBUTE_NUM
    PsAttributeParentProcess ' in HANDLE
    PsAttributeDebugPort ' in HANDLE
    PsAttributeToken ' in HANDLE
    PsAttributeClientId ' out PCLIENT_ID
    PsAttributeTebAddress ' out PTEB *
    PsAttributeImageName ' in PWSTR
    PsAttributeImageInfo ' out PSECTION_IMAGE_INFORMATION
    PsAttributeMemoryReserve ' in PPS_MEMORY_RESERVE
    PsAttributePriorityClass ' in UCHAR
    PsAttributeErrorMode ' in ULONG
    PsAttributeStdHandleInfo ' 10, in PPS_STD_HANDLE_INFO
    PsAttributeHandleList ' in PHANDLE
    PsAttributeGroupAffinity ' in PGROUP_AFFINITY
    PsAttributePreferredNode ' in PUSHORT
    PsAttributeIdealProcessor ' in PPROCESSOR_NUMBER
    PsAttributeUmsThread ' ? in PUMS_CREATE_THREAD_ATTRIBUTES
    PsAttributeMitigationOptions ' in UCHAR
    PsAttributeProtectionLevel ' in ULONG
    PsAttributeSecureProcess ' since THRESHOLD
    PsAttributeJobList
    PsAttributeChildProcessPolicy ' since THRESHOLD2
    PsAttributeAllApplicationPackagesPolicy ' since REDSTONE
    PsAttributeWin32kFilter
    PsAttributeSafeOpenPromptOriginClaim
    PsAttributeBnoIsolation ' PS_BNO_ISOLATION_PARAMETERS
    PsAttributeDesktopAppPolicy ' in ULONG
    PsAttributeChpe ' since REDSTONE3
    PsAttributeMitigationAuditOptions ' since 21H1
    PsAttributeMachineType ' since WIN11
    PsAttributeComponentFilter
    PsAttributeEnableOptionalXStateFeatures
    PsAttributeMax
End Enum
Public Const PS_ATTRIBUTE_NUMBER_MASK  = &H0000ffff
Public Const PS_ATTRIBUTE_THREAD  = &H00010000  ' may be used with thread creation
Public Const PS_ATTRIBUTE_INPUT  = &H00020000  ' input only
Public Const PS_ATTRIBUTE_ADDITIVE  = &H00040000  ' "accumulated" e.g. bitmasks, counters, etc.

Public Enum PS_ATTRIBUTE_ID
    PS_ATTRIBUTE_PARENT_PROCESS = &H60000
    PS_ATTRIBUTE_DEBUG_PORT = &H60001
    PS_ATTRIBUTE_TOKEN = &H60002
    PS_ATTRIBUTE_CLIENT_ID = &H10003
    PS_ATTRIBUTE_TEB_ADDRESS = &H10004
    PS_ATTRIBUTE_IMAGE_NAME = &H20005
    PS_ATTRIBUTE_IMAGE_INFO = &H6
    PS_ATTRIBUTE_MEMORY_RESERVE = &H20007
    PS_ATTRIBUTE_PRIORITY_CLASS = &H20008
    PS_ATTRIBUTE_ERROR_MODE = &H20009
    PS_ATTRIBUTE_STD_HANDLE_INFO = &H2000a
    PS_ATTRIBUTE_HANDLE_LIST = &H2000b
    PS_ATTRIBUTE_GROUP_AFFINITY = &H3000c
    PS_ATTRIBUTE_PREFERRED_NODE = &H2000d
    PS_ATTRIBUTE_IDEAL_PROCESSOR = &H3000e
    PS_ATTRIBUTE_UMS_THREAD = &H3000f
    PS_ATTRIBUTE_MITIGATION_OPTIONS = &H60010
    PS_ATTRIBUTE_PROTECTION_LEVEL = &H60011
    PS_ATTRIBUTE_SECURE_PROCESS = &H20012
    PS_ATTRIBUTE_JOB_LIST = &H20013
    PS_ATTRIBUTE_CHILD_PROCESS_POLICY = &H20014
    PS_ATTRIBUTE_ALL_APPLICATION_PACKAGES_POLICY = &H20015
    PS_ATTRIBUTE_WIN32K_FILTER = &H20016
    PS_ATTRIBUTE_SAFE_OPEN_PROMPT_ORIGIN_CLAIM = &H20017
    PS_ATTRIBUTE_BNO_ISOLATION = &H20018
    PS_ATTRIBUTE_DESKTOP_APP_POLICY = &H20019
End Enum
Public Type PS_ATTRIBUTE
    Attribute As LongPtr
    Size As LongPtr
    'union
    ' {
    '    ULONG_PTR Value;
    ValuePtrOrValue As LongPtr
    '};
    ReturnLength As LongPtr 'PSIZE_T
End Type
[Description("IMPORTANT: Set length only to length *actually used*-- this is buffered to the maximum possible, but they can't be uninitialized/unused.")]
Public Type PS_ATTRIBUTE_LIST
    TotalLength As LongPtr
    Attributes(0 To 30) As PS_ATTRIBUTE
End Type

Public Type PS_MEMORY_RESERVE
    ReserveAddress As LongPtr
    ReserveSize As LongPtr
End Type
Public Enum PS_STD_HANDLES
    PS_STD_INPUT_HANDLE = &H1
    PS_STD_OUTPUT_HANDLE = &H2
    PS_STD_ERROR_HANDLE = &H4
End Enum
Public Enum PS_STD_HANDLE_STATE
    PsNeverDuplicate
    PsRequestDuplicate ' duplicate standard handles specified by PseudoHandleMask, and only if StdHandleSubsystemType matches the image subsystem
    PsAlwaysDuplicate ' always duplicate standard handles
    PsMaxStdHandleStates
End Enum
Public Type PS_STD_HANDLE_INFO
    /* [ TypeHint(PS_STD_HANDLE_STATE, PS_STD_HANDLES) ] */ Flags As PS_STD_HANDLE_STATE
    StdHandleSubsystemType As Long
End Type

Public Type PS_BNO_ISOLATION_PARAMETERS
    IsolationPrefix As UNICODE_STRING
    HandleCount As Long
    Handles As LongPtr
    IsolationEnabled As Byte
End Type

Public Enum PS_MITIGATION_OPTION
    PS_MITIGATION_OPTION_NX
    PS_MITIGATION_OPTION_SEHOP
    PS_MITIGATION_OPTION_FORCE_RELOCATE_IMAGES
    PS_MITIGATION_OPTION_HEAP_TERMINATE
    PS_MITIGATION_OPTION_BOTTOM_UP_ASLR
    PS_MITIGATION_OPTION_HIGH_ENTROPY_ASLR
    PS_MITIGATION_OPTION_STRICT_HANDLE_CHECKS
    PS_MITIGATION_OPTION_WIN32K_SYSTEM_CALL_DISABLE
    PS_MITIGATION_OPTION_EXTENSION_POINT_DISABLE
    PS_MITIGATION_OPTION_PROHIBIT_DYNAMIC_CODE
    PS_MITIGATION_OPTION_CONTROL_FLOW_GUARD
    PS_MITIGATION_OPTION_BLOCK_NON_MICROSOFT_BINARIES
    PS_MITIGATION_OPTION_FONT_DISABLE
    PS_MITIGATION_OPTION_IMAGE_LOAD_NO_REMOTE
    PS_MITIGATION_OPTION_IMAGE_LOAD_NO_LOW_LABEL
    PS_MITIGATION_OPTION_IMAGE_LOAD_PREFER_SYSTEM32
    PS_MITIGATION_OPTION_RETURN_FLOW_GUARD
    PS_MITIGATION_OPTION_LOADER_INTEGRITY_CONTINUITY
    PS_MITIGATION_OPTION_STRICT_CONTROL_FLOW_GUARD
    PS_MITIGATION_OPTION_RESTRICT_SET_THREAD_CONTEXT
    PS_MITIGATION_OPTION_ROP_STACKPIVOT 'since REDSTONE3
    PS_MITIGATION_OPTION_ROP_CALLER_CHECK
    PS_MITIGATION_OPTION_ROP_SIMEXEC
    PS_MITIGATION_OPTION_EXPORT_ADDRESS_FILTER
    PS_MITIGATION_OPTION_EXPORT_ADDRESS_FILTER_PLUS
    PS_MITIGATION_OPTION_RESTRICT_CHILD_PROCESS_CREATION
    PS_MITIGATION_OPTION_IMPORT_ADDRESS_FILTER
    PS_MITIGATION_OPTION_MODULE_TAMPERING_PROTECTION
    PS_MITIGATION_OPTION_RESTRICT_INDIRECT_BRANCH_PREDICTION
    PS_MITIGATION_OPTION_SPECULATIVE_STORE_BYPASS_DISABLE ' since REDSTONE5
    PS_MITIGATION_OPTION_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY
    PS_MITIGATION_OPTION_CET_USER_SHADOW_STACKS
    PS_MITIGATION_OPTION_USER_CET_SET_CONTEXT_IP_VALIDATION 'since 21H1
    PS_MITIGATION_OPTION_BLOCK_NON_CET_BINARIES
    PS_MITIGATION_OPTION_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY
    PS_MITIGATION_OPTION_REDIRECTION_TRUST
End Enum

Public Type RTL_HEAP_PARAMETERS
    Length As Long
    SegmentReserve As LongPtr
    SegmentCommit As LongPtr
    DeCommitFreeBlockThreshold As LongPtr
    DeCommitTotalFreeThreshold As LongPtr
    MaximumAllocationSize As LongPtr
    VirtualMemoryThreshold As LongPtr
    InitialCommit As LongPtr
    InitialReserve As LongPtr
    CommitRoutine As LongPtr 'PRTL_HEAP_COMMIT_ROUTINE
    Reserved(0 To 1) As LongPtr
End Type

Public Enum RTL_UPP_FLAGS
    RTL_USER_PROCESS_PARAMETERS_NORMALIZED = &H01
    RTL_USER_PROCESS_PARAMETERS_PROFILE_USER = &H02
    RTL_USER_PROCESS_PARAMETERS_PROFILE_KERNEL = &H04
    RTL_USER_PROCESS_PARAMETERS_PROFILE_SERVER = &H08
    RTL_USER_PROCESS_PARAMETERS_UNKNOWN = &H10
    RTL_USER_PROCESS_PARAMETERS_RESERVE_1MB = &H20
    RTL_USER_PROCESS_PARAMETERS_RESERVE_16MB = &H40
    RTL_USER_PROCESS_PARAMETERS_CASE_SENSITIVE = &H80
    RTL_USER_PROCESS_PARAMETERS_DISABLE_HEAP_CHECKS = &H100
    RTL_USER_PROCESS_PARAMETERS_PROCESS_OR_1 = &H200
    RTL_USER_PROCESS_PARAMETERS_PROCESS_OR_2 = &H400
    RTL_USER_PROCESS_PARAMETERS_PRIVATE_DLL_PATH = &H1000
    RTL_USER_PROCESS_PARAMETERS_LOCAL_DLL_PATH = &H2000
    RTL_USER_PROCESS_PARAMETERS_IMAGE_KEY_MISSING = &H4000
    RTL_USER_PROCESS_PARAMETERS_NX = &H20000
End Enum

Public Type SEP_TOKEN_PRIVILEGES
    Present As LongLong
    Enabled As LongLong
    EnabledByDefault As LongLong
End Type

Public Type SEP_AUDIT_POLICY
    AdtTokenPolicy As TOKEN_AUDIT_POLICY
    PolicySetStatus As Byte
End Type

[Description("Windows 10 through Windows 11 22H2 (last verified)")]
Public Type _TOKEN
    TokenSource As TOKEN_SOURCE
    TokenId As LUID
    AuthenticationId As LUID
    ParentTokenId As LUID
    ExpirationTime As LARGE_INTEGER
    TokenLock As LongPtr 'PERESOURCE
    ModifiedId As LUID
    Privileges As SEP_TOKEN_PRIVILEGES
    SessionId As Long
    UserAndGroupCount As Long
    RestrictedSidCount As Long
    VariableLength As Long
    DynamicCharged As Long
    DynamicAvailable As Long
    DefaultOwnerIndex As Long
    UserAndGroups As LongPtr 'SID_AND_ATTRIBUTES
    RestrictedSids As LongPtr 'SID_AND_ATTRIBUTES
    PrimaryGroup As LongPtr
    DynamicPart As LongPtr 'ULONG*
    DefaultDacl As LongPtr '_ACL*
    TokenType As TOKEN_TYPE
    ImpersonationLevel As SECURITY_IMPERSONATION_LEVEL
    TokenFlags As TOKEN_FLAGS
    TokenInUse As Byte
    IntegrityLevelIndex As Long
    MandatoryPolicy As TOKEN_MANDATORY_POLICY_FLAGS
    LogonSession As LongPtr '_SEP_LOGON_SESSION_REFERENCES*
    OriginatingLogonSession As LUID
    SidHash As SID_AND_ATTRIBUTES_HASH
    RestrictedSidHash As SID_AND_ATTRIBUTES_HASH
    pSecurityAttributes As LongPtr ' _AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION*
    Package As LongPtr
    Capabilities As LongPtr 'SID_AND_ATTRIBUTES*
    CapabilityCount As Long
    CapabilitiesHash As SID_AND_ATTRIBUTES_HASH
    LowboxNumberEntry As LongPtr '_SEP_LOWBOX_NUMBER_ENTRY*
    LowboxHandlesEntry As LongPtr '_SEP_LOWBOX_HANDLES_ENTRY* 
    pClaimAttributes As LongPtr '_AUTHZBASEP_CLAIM_ATTRIBUTES_COLLECTION*
    TrustLevelSid As LongPtr
    TrustLinkedToken As LongPtr '_TOKEN*
    IntegrityLevelSidValue As LongPtr 'PVOID
    TokenSidValues As LongPtr '_SEP_SID_VALUES_BLOCK*
    IndexEntry As LongPtr '_SEP_LUID_TO_INDEX_MAP_ENTRY*
    DiagnosticInfo As LongPtr '_SEP_TOKEN_DIAG_TRACK_ENTRY*
    VariablePart As LongLong
End Type

Public Enum EXTENDED_CREATE_FLAGS
    EX_CREATE_FLAG_FILE_SOURCE_OPEN_FOR_COPY = &H00000001
    EX_CREATE_FLAG_FILE_DEST_OPEN_FOR_COPY = &H00000002
End Enum

Public Type EXTENDED_CREATE_INFORMATION
    /* [ TypeHint(EXTENDED_CREATE_FLAGS) ] */ ExtendedCreateFlags As LongLong
    EaBuffer As LongPtr
    EaLength As Long
End Type

Public Enum PortAccessRights
    PORT_CONNECT = &H0001
    PORT_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or SYNCHRONIZE Or &H1)
End Enum

Public Type PORT_MESSAGE
    Length As Long
    [Description("union {" & vbCrLf & _
                    "  struct{" & vbCrLf & _
                    "    CSHORT Type;" & vbCrLf & _
                    "    CSHORT DataInfoOffset;" & vbCrLf & _
                    "  } s2;" & vbCrLf & _
                    "  ULONG ZeroInit;" & vbCrLf & _
                    "}")]
    u2 As Long
    ClientId As CLIENT_ID
    MessageId As Long
    ClientViewSizeOrCallbackId As LongPtr
End Type
Public Type PORT_DATA_ENTRY
    Base As LongPtr
    Size As Long
End Type
[Description("⚠️ **WARNING:** You cannot use this struct as-is due to SAFEARRAY considerations. Copy the first 8 bytes, determine the size, then copy the rest into bRawData(0) ")]
Public Type PORT_DATA_INFORMATION
    CountDataEntries As Long
    'DataEntries(0 To 0) As PORT_DATA_ENTRY
End Type
Public Enum NT_LPC_MSG_TYPE
    LPC_REQUEST = 1
    LPC_REPLY = 2
    LPC_DATAGRAM = 3
    LPC_LOST_REPLY = 4
    LPC_PORT_CLOSED = 5
    LPC_CLIENT_DIED = 6
    LPC_EXCEPTION = 7
    LPC_DEBUG_EVENT = 8
    LPC_ERROR_EVENT = 9
    LPC_CONNECTION_REQUEST = 10
    LPC_KERNELMODE_MESSAGE = &H8000&
    LPC_NO_IMPERSONATE = &H4000&
End Enum

#If Win64 Then
Public Const PORT_MAXIMUM_MESSAGE_LENGTH = 512
#Else
Public Const PORT_MAXIMUM_MESSAGE_LENGTH = 256
#End If

Public Type LPC_MESSAGE
    DataLength As Integer
    Length As Integer
    /* [ TypeHint(NT_LPC_MSG_TYPE) ] */ MessageType As Integer
    DataInfoOffset As Integer
    ClientId As CLIENT_ID
    MessageId As Long
    CallbackId As Long
End Type
Public Enum HARDERROR_RESPONSE_OPTION
    HardError_OptionAbortRetryIgnore
    HardError_OptionOk
    HardError_OptionOkCancel
    HardError_OptionRetryCancel
    HardError_OptionYesNo
    HardError_OptionYesNoCancel
    HardError_OptionShutdownSystem
End Enum
Public Enum HARDERROR_RESPONSE
    HardError_ResponseReturnToCaller
    HardError_ResponseNotHandled
    HardError_ResponseAbort
    HardError_ResponseCancel
    HardError_ResponseIgnore
    HardError_ResponseNo
    HardError_ResponseOk
    HardError_ResponseRetry
    HardError_ResponseYes
End Enum
Public Const HARDERROR_OVERRIDE_ERRORMODE     = &H10000000

'LAYOUT OF Level BITFIELD:
'TTT A SSSS
'(Type, Audit, Signer)
Public Type PS_PROTECTION
    Level As Byte
End Type
Public Enum PS_PROTECTED_TYPE
    PsProtectedTypeNone
    PsProtectedTypeProtectedLight = &B00000001
    PsProtectedTypeProtected = &B00000010
    PsProtectedTypeMax = &B00000011

End Enum
[Description("NOTE: These defs differ from other sources and are meant to be checked against the Level whole byte because there's no bitfield support to compare from 0 against the upper bits alone.")]
Public Enum PS_PROTECTED_SIGNER
    PsProtectedSignerNone
    PsProtectedSignerAuthenticode = &B00010000
    PsProtectedSignerCodeGen = &B00100000
    PsProtectedSignerAntimalware = &B00110000
    PsProtectedSignerLsa = &B01000000
    PsProtectedSignerWindows = &B01010000
    PsProtectedSignerWinTcb = &B01100000
    PsProtectedSignerWinSystem = &B01110000
    PsProtectedSignerApp = &B10000000
    PsProtectedSignerMax = &B10010000
End Enum

Public Type RTL_MODULE_BASIC_INFO
    ImageBase As LongPtr
End Type
Public Type RTL_MODULE_EXTENDED_INFO
    BasicInfo As RTL_MODULE_BASIC_INFO
    ImageSize As Long
    FileNameOffset As Integer
    FullPathName(0 To 255) As Byte
End Type


Public Const UNIFIEDBUILDREVISION_KEY  = "\Registry\Machine\Software\Microsoft\Windows NT\CurrentVersion"
Public Const UNIFIEDBUILDREVISION_VALUE  = "UBR"
Public Const UNIFIEDBUILDREVISION_MIN  = &H00000000
Public Const DEVICEFAMILYDEVICEFORM_KEY  = "\Registry\Machine\Software\Microsoft\Windows NT\CurrentVersion\OEM"
Public Const DEVICEFAMILYDEVICEFORM_VALUE  = "DeviceForm"
Public Enum DEVICEFAMILYINFOENUM
    DEVICEFAMILYINFOENUM_UAP = &H00000000
    DEVICEFAMILYINFOENUM_WINDOWS_8X = &H00000001
    DEVICEFAMILYINFOENUM_WINDOWS_PHONE_8X = &H00000002
    DEVICEFAMILYINFOENUM_DESKTOP = &H00000003
    DEVICEFAMILYINFOENUM_MOBILE = &H00000004
    DEVICEFAMILYINFOENUM_XBOX = &H00000005
    DEVICEFAMILYINFOENUM_TEAM = &H00000006
    DEVICEFAMILYINFOENUM_IOT = &H00000007
    DEVICEFAMILYINFOENUM_IOT_HEADLESS = &H00000008
    DEVICEFAMILYINFOENUM_SERVER = &H00000009
    DEVICEFAMILYINFOENUM_HOLOGRAPHIC = &H0000000A
    DEVICEFAMILYINFOENUM_XBOXSRA = &H0000000B
    DEVICEFAMILYINFOENUM_XBOXERA = &H0000000C
    DEVICEFAMILYINFOENUM_SERVER_NANO = &H0000000D
    DEVICEFAMILYINFOENUM_8828080 = &H0000000E
    DEVICEFAMILYINFOENUM_7067329 = &H0000000F
    DEVICEFAMILYINFOENUM_WINDOWS_CORE = &H00000010
    DEVICEFAMILYINFOENUM_WINDOWS_CORE_HEADLESS = &H00000011
    DEVICEFAMILYINFOENUM_MAX = &H00000011
End Enum
Public Enum DEVICEFAMILYDEVICEFORM
    DEVICEFAMILYDEVICEFORM_UNKNOWN = &H00000000
    DEVICEFAMILYDEVICEFORM_PHONE = &H00000001
    DEVICEFAMILYDEVICEFORM_TABLET = &H00000002
    DEVICEFAMILYDEVICEFORM_DESKTOP = &H00000003
    DEVICEFAMILYDEVICEFORM_NOTEBOOK = &H00000004
    DEVICEFAMILYDEVICEFORM_CONVERTIBLE = &H00000005
    DEVICEFAMILYDEVICEFORM_DETACHABLE = &H00000006
    DEVICEFAMILYDEVICEFORM_ALLINONE = &H00000007
    DEVICEFAMILYDEVICEFORM_STICKPC = &H00000008
    DEVICEFAMILYDEVICEFORM_PUCK = &H00000009
    DEVICEFAMILYDEVICEFORM_LARGESCREEN = &H0000000A
    DEVICEFAMILYDEVICEFORM_HMD = &H0000000B
    DEVICEFAMILYDEVICEFORM_INDUSTRY_HANDHELD = &H0000000C
    DEVICEFAMILYDEVICEFORM_INDUSTRY_TABLET = &H0000000D
    DEVICEFAMILYDEVICEFORM_BANKING = &H0000000E
    DEVICEFAMILYDEVICEFORM_BUILDING_AUTOMATION = &H0000000F
    DEVICEFAMILYDEVICEFORM_DIGITAL_SIGNAGE = &H00000010
    DEVICEFAMILYDEVICEFORM_GAMING = &H00000011
    DEVICEFAMILYDEVICEFORM_HOME_AUTOMATION = &H00000012
    DEVICEFAMILYDEVICEFORM_INDUSTRIAL_AUTOMATION = &H00000013
    DEVICEFAMILYDEVICEFORM_KIOSK = &H00000014
    DEVICEFAMILYDEVICEFORM_MAKER_BOARD = &H00000015
    DEVICEFAMILYDEVICEFORM_MEDICAL = &H00000016
    DEVICEFAMILYDEVICEFORM_NETWORKING = &H00000017
    DEVICEFAMILYDEVICEFORM_POINT_OF_SERVICE = &H00000018
    DEVICEFAMILYDEVICEFORM_PRINTING = &H00000019
    DEVICEFAMILYDEVICEFORM_THIN_CLIENT = &H0000001A
    DEVICEFAMILYDEVICEFORM_TOY = &H0000001B
    DEVICEFAMILYDEVICEFORM_VENDING = &H0000001C
    DEVICEFAMILYDEVICEFORM_INDUSTRY_OTHER = &H0000001D
    DEVICEFAMILYDEVICEFORM_XBOX_ONE = &H0000001E
    DEVICEFAMILYDEVICEFORM_XBOX_ONE_S = &H0000001F
    DEVICEFAMILYDEVICEFORM_XBOX_ONE_X = &H00000020
    DEVICEFAMILYDEVICEFORM_XBOX_ONE_X_DEVKIT = &H00000021
    DEVICEFAMILYDEVICEFORM_XBOX_SERIES_X = &H00000022
    DEVICEFAMILYDEVICEFORM_XBOX_SERIES_X_DEVKIT = &H00000023
    DEVICEFAMILYDEVICEFORM_XBOX_SERIES_S = &H00000024
'  This is a range reserved for future Xbox consoles.
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_01 = &H00000025
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_02 = &H00000026
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_03 = &H00000027
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_04 = &H00000028
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_05 = &H00000029
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_06 = &H0000002A
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_07 = &H0000002B
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_08 = &H0000002C
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_09 = &H0000002D
    DEVICEFAMILYDEVICEFORM_MAX = &H0000002D
End Enum

Public Enum MEMORY_INFORMATION_CLASS
    MemoryBasicInformation = 0 ' q: MEMORY_BASIC_INFORMATION
    MemoryWorkingSetInformation = 1 ' q: MEMORY_WORKING_SET_INFORMATION
    MemoryMappedFilenameInformation = 2 ' q: UNICODE_STRING
    MemoryRegionInformation = 3 ' q: MEMORY_REGION_INFORMATION
    MemoryWorkingSetExInformation = 4 ' q: MEMORY_WORKING_SET_EX_INFORMATION // since VISTA
    MemorySharedCommitInformation = 5 ' q: MEMORY_SHARED_COMMIT_INFORMATION // since WIN8
    MemoryImageInformation = 6 ' q: MEMORY_IMAGE_INFORMATION
    MemoryRegionInformationEx = 7 ' MEMORY_REGION_INFORMATION
    MemoryPrivilegedBasicInformation = 8 ' MEMORY_BASIC_INFORMATION
    MemoryEnclaveImageInformation = 9 ' MEMORY_ENCLAVE_IMAGE_INFORMATION // since REDSTONE3
    MemoryBasicInformationCapped = 10 ' 10
    MemoryPhysicalContiguityInformation = 11 ' MEMORY_PHYSICAL_CONTIGUITY_INFORMATION // since 20H1
    MemoryBadInformation = 12 ' since WIN11
    MemoryBadInformationAllProcesses = 13 ' since 22H1
    MaxMemoryInfoClass = 14
End Enum
Public Type MEMORY_WORKING_SET_BLOCK
    ' ULONG_PTR Protection : 5;
    ' ULONG_PTR ShareCount : 3;
    ' ULONG_PTR Shared : 1;
    ' ULONG_PTR Node : 3;
' #ifdef _WIN64
    ' ULONG_PTR VirtualPage : 52;
' #else
    ' ULONG VirtualPage : 20;
' #endif
    u(7) As Byte
End Type
[Description("⚠️ **WARNING:** Cannot be used as-is. Copy number of entries, redim appropriately, then copy remainder info WorkSetInfo(0).")]
Public Type MEMORY_WORKING_SET_INFORMATION
    NumberOfEntries As LongPtr
    WorkingSetInfo() As MEMORY_WORKING_SET_BLOCK
End Type

Public Enum NtMemoryRegionInfoFlags
    NTMRIF_Private = &B00000000_00000000_00000000_00000001
    NTMRIF_MappedDataFile = &B00000000_00000000_00000000_00000010
    NTMRIF_MappedImage = &B00000000_00000000_00000000_00000100
    NTMRIF_MappedPageFile = &B00000000_00000000_00000000_00001000
    NTMRIF_MappedPhysical = &B00000000_00000000_00000000_00010000
    NTMRIF_DirectMapped = &B00000000_00000000_00000000_00100000
    NTMRIF_SoftwareEnclave = &B00000000_00000000_00000000_01000000 'Redstone 3
    NTMRIF_PageSize64K = &B00000000_00000000_00000000_10000000
    NTMRIF_PlaceholderReservation = &B00000000_00000000_00000001_00000000 'Redstone 4
    NTMRIF_MappedAwe = &B00000000_00000000_00000010_00000000
    NTMRIF_MappedWriteWatch = &B00000000_00000000_00000100_00000000
    NTMRIF_PageSizeLarge = &B00000000_00000000_00001000_00000000
    NTMRIF_PageSizeHuge = &B00000000_00000000_00010000_00000000
End Enum
[Description("⚠️ **WARNING:** Last two members added in 19H1 and 20H1; exclude from size if not targeting those OS versions or higher.")]
Public Type MEMORY_REGION_INFORMATION
    AllocationBase As LongPtr
    AllocationProtect As Long
    '    union {
    RegionType As NtMemoryRegionInfoFlags
    '        struct {
    '            ULONG Private : 1;
    '            ULONG MappedDataFile : 1;
    '            ULONG MappedImage : 1;
    '            ULONG MappedPageFile : 1;
    '            ULONG MappedPhysical : 1;
    '            ULONG DirectMapped : 1;
    '            ULONG Reserved : 26;
    '        } DUMMYSTRUCTNAME;
    '    } DUMMYUNIONNAME;
    RegionSize As LongPtr
    CommitSize As LongPtr
    PartitionId As LongPtr
    NodePreference As LongPtr
End Type

Public Enum MEMORY_WORKING_SET_EX_LOCATION
    MemoryLocationInvalid
    MemoryLocationResident
    MemoryLocationPagefile
    MemoryLocationReserved
End Enum
Public /* Union */ Type MEMORY_WORKING_SET_EX_BLOCK
    Flags As LongPtr
    ' union
    ' {
        ' struct
        ' {
            ' ULONG_PTR Valid : 1;
            ' ULONG_PTR ShareCount : 3;
            ' ULONG_PTR Win32Protection : 11;
            ' ULONG_PTR Shared : 1;
            ' ULONG_PTR Node : 6;
            ' ULONG_PTR Locked : 1;
            ' ULONG_PTR LargePage : 1;
            ' ULONG_PTR Priority : 3;
            ' ULONG_PTR Reserved : 3;
            ' ULONG_PTR SharedOriginal : 1;
            ' ULONG_PTR Bad : 1;
            ' ULONG_PTR Win32GraphicsProtection : 4; // 19H1
' #ifdef _WIN64
            ' ULONG_PTR ReservedUlong : 28;
' #endif
        ' };
        ' struct
        ' {
            ' ULONG_PTR Valid : 1;
            ' ULONG_PTR Reserved0 : 14;
            ' ULONG_PTR Shared : 1;
            ' ULONG_PTR Reserved1 : 5;
            ' ULONG_PTR PageTable : 1;
            ' ULONG_PTR Location : 2;
            ' ULONG_PTR Priority : 3;
            ' ULONG_PTR ModifiedList : 1;
            ' ULONG_PTR Reserved2 : 2;
            ' ULONG_PTR SharedOriginal : 1;
            ' ULONG_PTR Bad : 1;
' #ifdef _WIN64
            ' ULONG_PTR ReservedUlong : 32;
' #endif
        ' } Invalid;
    ' }; 
End Type
Public Type MEMORY_WORKING_SET_EX_INFORMATION
    VirtualAddress As LongPtr
    ' union
    ' {
        ' MEMORY_WORKING_SET_EX_BLOCK VirtualAttributes;
        ' ULONG_PTR Long;
    ' } u1;
    VirtualAttributes As MEMORY_WORKING_SET_EX_BLOCK
End Type

Public Type MEMORY_SHARED_COMMIT_INFORMATION
    CommitSize As LongPtr
End Type

Public Type MEMORY_IMAGE_INFORMATION
    ImageBase As LongPtr
    SizeOfImage As LongPtr
    '    union
    '    {
    ImageFlags As Long
    '        struct
    '        {
    '            ULONG ImagePartialMap : 1;
    '           ULONG ImageNotExecutable : 1;
    '            ULONG ImageSigningLevel : 4; // REDSTONE3
    '            ULONG Reserved : 26;
    '        };
    '    };
End Type
'Alias SE_SIGNING_LEVEL As Byte
Public Enum SeSigningLevel
    SE_SIGNING_LEVEL_UNCHECKED = &H00000000
    SE_SIGNING_LEVEL_UNSIGNED = &H00000001
    SE_SIGNING_LEVEL_ENTERPRISE = &H00000002
    SE_SIGNING_LEVEL_CUSTOM_1 = &H00000003
    SE_SIGNING_LEVEL_DEVELOPER = SE_SIGNING_LEVEL_CUSTOM_1
    SE_SIGNING_LEVEL_AUTHENTICODE = &H00000004
    SE_SIGNING_LEVEL_CUSTOM_2 = &H00000005
    SE_SIGNING_LEVEL_STORE = &H00000006
    SE_SIGNING_LEVEL_CUSTOM_3 = &H00000007
    SE_SIGNING_LEVEL_ANTIMALWARE = SE_SIGNING_LEVEL_CUSTOM_3
    SE_SIGNING_LEVEL_MICROSOFT = &H00000008
    SE_SIGNING_LEVEL_CUSTOM_4 = &H00000009
    SE_SIGNING_LEVEL_CUSTOM_5 = &H0000000A
    SE_SIGNING_LEVEL_DYNAMIC_CODEGEN = &H0000000B
    SE_SIGNING_LEVEL_WINDOWS = &H0000000C
    SE_SIGNING_LEVEL_CUSTOM_7 = &H0000000D
    SE_SIGNING_LEVEL_WINDOWS_TCB = &H0000000E
    SE_SIGNING_LEVEL_CUSTOM_6 = &H0000000F
End Enum
Public Enum SE_IMAGE_SIGNATURE_TYPE
    SeImageSignatureNone = 0
    SeImageSignatureEmbedded
    SeImageSignatureCache
    SeImageSignatureCatalogCached
    SeImageSignatureCatalogNotCached
    SeImageSignatureCatalogHint
    SeImageSignaturePackageCatalog
    SeImageSignaturePplMitigated
End Enum
Public Type SECURITY_CAPABILITIES
    AppContainerSid As LongPtr 'PSID
    Capabilities As LongPtr 'PSID_AND_ATTRIBUTES
    CapabilityCount As Long
    Reserved As Long
End Type

Public Type MEMORY_ENCLAVE_IMAGE_INFORMATION
    ImageInfo As MEMORY_IMAGE_INFORMATION
    UniqueID(0 To 31) As Byte
    AuthorID(0 To 31) As Byte
End Type

Public Enum MEMORY_PHYSICAL_CONTIGUITY_UNIT_STATE
    MemoryNotContiguous
    MemoryAlignedAndContiguous
    MemoryNotResident
    MemoryNotEligibleToMakeContiguous
    MemoryContiguityStateMax
End Enum
Public Type MEMORY_PHYSICAL_CONTIGUITY_UNIT_INFORMATION
    '    union
    '    {
    '        struct
    '        {
    '            ULONG State : 2;
    '            ULONG Reserved : 30;
    '        };
    AllInformation As Long
End Type
Public Type MEMORY_PHYSICAL_CONTIGUITY_INFORMATION
    VirtualAddress As LongPtr
    Size As LongPtr
    ContiguityUnitSize As LongPtr
    Flags As Long
    ContiguityUnitInformation As LongPtr 'PMEMORY_PHYSICAL_CONTIGUITY_UNIT_INFORMATION
End Type

Public Enum LockVMMapTypes
    MAP_PROCESS = 1
    MAP_SYSTEM = 2
End Enum

Public Enum NtFileQueryFlags
    SL_RESTART_SCAN = &H01
    SL_RETURN_SINGLE_ENTRY = &H02
    SL_INDEX_SPECIFIED = &H04
    SL_RETURN_ON_DISK_ENTRIES_ONLY = &H08
    SL_NO_CURSOR_UPDATE = &H10
    SL_QUERY_DIRECTORY_MASK = &H1b
End Enum

Public Const RTL_CORRELATION_VECTOR_STRING_LENGTH  = 129
Public Const RTL_CORRELATION_VECTOR_VERSION_1 As Byte = (1)
Public Const RTL_CORRELATION_VECTOR_VERSION_2 As Byte = (2)
Public Const RTL_CORRELATION_VECTOR_VERSION_CURRENT  = RTL_CORRELATION_VECTOR_VERSION_2
Public Const RTL_CORRELATION_VECTOR_V1_PREFIX_LENGTH  = (16)
Public Const RTL_CORRELATION_VECTOR_V1_LENGTH  = (64)
Public Const RTL_CORRELATION_VECTOR_V2_PREFIX_LENGTH  = (22)
Public Const RTL_CORRELATION_VECTOR_V2_LENGTH  = (128)
Public Type CORRELATION_VECTOR
    Version As Byte
    Vector(0 To (RTL_CORRELATION_VECTOR_STRING_LENGTH - 1)) As Byte
End Type


' VOID CALLBACK LdrDllNotification(
' _In_     ULONG                       NotificationReason,
' _In_     PCLDR_DLL_NOTIFICATION_DATA NotificationData,
' _In_opt_ PVOID                       Context
' );
Public Enum LdrDllNotifyReasons
    LDR_DLL_NOTIFICATION_REASON_LOADED = 1
    LDR_DLL_NOTIFICATION_REASON_UNLOADED = 2
End Enum
Public Type LDR_DLL_LOADED_NOTIFICATION_DATA
    Flags As Long 'Reserved.
    FullDllName As LongPtr 'PCUNICODE_STRING 'The full path name of the DLL module.
    BaseDllName As LongPtr 'PCUNICODE_STRING 'The base file name of the DLL module.
    DllBase As LongPtr 'A pointer to the base address for the DLL in memory.
    SizeOfImage As Long 'The size of the DLL image, in bytes.
End Type
Public Type LDR_DLL_UNLOADED_NOTIFICATION_DATA
    Flags As Long 'Reserved.
    FullDllName As LongPtr 'PCUNICODE_STRING 'The full path name of the DLL module.
    BaseDllName As LongPtr 'PCUNICODE_STRING 'The base file name of the DLL module.
    DllBase As LongPtr 'A pointer to the base address for the DLL in memory.
    SizeOfImage As Long 'The size of the DLL image, in bytes.
End Type
' typedef union _LDR_DLL_NOTIFICATION_DATA {
' LDR_DLL_LOADED_NOTIFICATION_DATA Loaded;
' LDR_DLL_UNLOADED_NOTIFICATION_DATA Unloaded;
' } LDR_DLL_NOTIFICATION_DATA,
Public Type LDR_DLL_NOTIFICATION_DATA
    Flags As Long 'Reserved.
    FullDllName As LongPtr 'PCUNICODE_STRING 'The full path name of the DLL module.
    BaseDllName As LongPtr 'PCUNICODE_STRING 'The base file name of the DLL module.
    DllBase As LongPtr 'A pointer to the base address for the DLL in memory.
    SizeOfImage As Long 'The size of the DLL image, in bytes.
End Type

Public Const UNWIND_HISTORY_TABLE_SIZE = 32

Public Enum TIMER_TYPE
    NotificationTimer
    SynchronizationTimer
End Enum

Public Enum TIMER_INFORMATION_CLASS
    TimerBasicInformation
End Enum
Public Type TIMER_BASIC_INFORMATION
    RemainingTime As LARGE_INTEGER
    TimerState As Byte
End Type

Public Enum ElevationFlags
    ELEVATION_UAC_ENABLED = 1
    ELEVATION_VIRTUALIZATION_ENABLED = 2
    ELEVATION_INSTALLER_DETECTION_ENABLED = 4
End Enum

Public Enum THREADINFOCLASS
    ThreadBasicInformation = 0 ' q: THREAD_BASIC_INFORMATION
    ThreadTimes = 1 ' q: KERNEL_USER_TIMES
    ThreadPriority = 2 ' s: KPRIORITY (requires SeIncreaseBasePriorityPrivilege)
    ThreadBasePriority = 3 ' s: KPRIORITY
    ThreadAffinityMask = 4 ' s: KAFFINITY
    ThreadImpersonationToken = 5 ' s: HANDLE
    ThreadDescriptorTableEntry = 6 ' q: DESCRIPTOR_TABLE_ENTRY (or WOW64_DESCRIPTOR_TABLE_ENTRY)
    ThreadEnableAlignmentFaultFixup = 7 ' s: BOOLEAN
    ThreadEventPair = 8
    ThreadQuerySetWin32StartAddress = 9 ' q: ULONG_PTR
    ThreadZeroTlsCell = 10 ' s: ULONG // TlsIndex // 10
    ThreadPerformanceCount = 11 ' q: LARGE_INTEGER
    ThreadAmILastThread = 12 ' q: ULONG
    ThreadIdealProcessor = 13 ' s: ULONG
    ThreadPriorityBoost = 14 ' qs: ULONG
    ThreadSetTlsArrayAddress = 15 ' s: ULONG_PTR // Obsolete
    ThreadIsIoPending = 16 ' q: ULONG
    ThreadHideFromDebugger = 17 ' q: BOOLEAN; s: void
    ThreadBreakOnTermination = 18 ' qs: ULONG
    ThreadSwitchLegacyState = 19 ' s: void // NtCurrentThread // NPX/FPU
    ThreadIsTerminated = 20 ' q: ULONG // 20
    ThreadLastSystemCall = 21 ' q: THREAD_LAST_SYSCALL_INFORMATION
    ThreadIoPriority = 22 ' qs: IO_PRIORITY_HINT (requires SeIncreaseBasePriorityPrivilege)
    ThreadCycleTime = 23 ' q: THREAD_CYCLE_TIME_INFORMATION
    ThreadPagePriority = 24 ' qs: PAGE_PRIORITY_INFORMATION
    ThreadActualBasePriority = 25 ' s: LONG (requires SeIncreaseBasePriorityPrivilege)
    ThreadTebInformation = 26 ' q: THREAD_TEB_INFORMATION (requires THREAD_GET_CONTEXT + THREAD_SET_CONTEXT)
    ThreadCSwitchMon = 27 ' Obsolete
    ThreadCSwitchPmu = 28
    ThreadWow64Context = 29 ' qs: WOW64_CONTEXT, ARM_NT_CONTEXT since 20H1
    ThreadGroupInformation = 30 ' qs: GROUP_AFFINITY // 30
    ThreadUmsInformation = 31 ' q: THREAD_UMS_INFORMATION // Obsolete
    ThreadCounterProfiling = 32 ' q: BOOLEAN; s: THREAD_PROFILING_INFORMATION?
    ThreadIdealProcessorEx = 33 ' qs: PROCESSOR_NUMBER; s: previous PROCESSOR_NUMBER on return
    ThreadCpuAccountingInformation = 34 ' q: BOOLEAN; s: HANDLE (NtOpenSession) // NtCurrentThread // since WIN8
    ThreadSuspendCount = 35 ' q: ULONG // since WINBLUE
    ThreadHeterogeneousCpuPolicy = 36 ' q: KHETERO_CPU_POLICY // since THRESHOLD
    ThreadContainerId = 37 ' q: GUID
    ThreadNameInformation = 38 ' qs: THREAD_NAME_INFORMATION
    ThreadSelectedCpuSets = 39
    ThreadSystemThreadInformation = 40 ' q: SYSTEM_THREAD_INFORMATION // 40
    ThreadActualGroupAffinity = 41 ' q: GROUP_AFFINITY // since THRESHOLD2
    ThreadDynamicCodePolicyInfo = 42 ' q: ULONG; s: ULONG (NtCurrentThread)
    ThreadExplicitCaseSensitivity = 43 ' qs: ULONG; s: 0 disables, otherwise enables
    ThreadWorkOnBehalfTicket = 44 ' RTL_WORK_ON_BEHALF_TICKET_EX
    ThreadSubsystemInformation = 45 ' q: SUBSYSTEM_INFORMATION_TYPE // since REDSTONE2
    ThreadDbgkWerReportActive = 46 ' s: ULONG; s: 0 disables, otherwise enables
    ThreadAttachContainer = 47 ' s: HANDLE (job object) // NtCurrentThread
    ThreadManageWritesToExecutableMemory = 48 ' MANAGE_WRITES_TO_EXECUTABLE_MEMORY // since REDSTONE3
    ThreadPowerThrottlingState = 49 ' POWER_THROTTLING_THREAD_STATE // since REDSTONE3 (set), WIN11 22H2 (query)
    ThreadWorkloadClass = 50 ' THREAD_WORKLOAD_CLASS // since REDSTONE5 // 50
    ThreadCreateStateChange = 51 ' since WIN11
    ThreadApplyStateChange = 52
    ThreadStrongerBadHandleChecks = 53 ' since 22H1
    ThreadEffectiveIoPriority = 54 ' q: IO_PRIORITY_HINT
    ThreadEffectivePagePriority = 55 ' q: ULONG
    MaxThreadInfoClass = 56
End Enum

Public Type THREAD_BASIC_INFORMATION
    ExitStatus As NTSTATUS
    TebBaseAddress As LongPtr 'PTEB
    ClientId As CLIENT_ID
    AffinityMask As LongPtr 'KAFFINITY
    Priority As KPRIORITY
    BasePriority As KPRIORITY
End Type

Public Type THREAD_LAST_SYSCALL_INFORMATION
    FirstArgument As LongPtr
    SystemCallNumber As Integer
    WaitTime As LongLong
End Type

Public Type THREAD_CYCLE_TIME_INFORMATION
    AccumulatedCycles As LongLong
    CurrentCycleCount As LongLong
End Type

Public Type THREAD_TEB_INFORMATION
    TebInformation As LongPtr ' buffer to place data in
    TebOffset As Long ' offset in TEB to begin reading from
    BytesToRead As Long ' number of bytes to read
End Type

Public Type THREAD_NAME_INFORMATION
    ThreadName As UNICODE_STRING
End Type

Public Enum THREAD_UMS_INFORMATION_COMMAND
    UmsInformationCommandInvalid
    UmsInformationCommandAttach
    UmsInformationCommandDetach
    UmsInformationCommandQuery
End Enum

Public Type RTL_UMS_COMPLETION_LIST
    ThreadListHead As LongPtr 'PSINGLE_LIST_ENTRY
    CompletionEvent As LongPtr
    CompletionFlags As Long
    InternalListHead As SINGLE_LIST_ENTRY
End Type

Public Enum THREAD_WORKLOAD_CLASS
    ThreadWorkloadClassDefault
    ThreadWorkloadClassGraphics
    MaxThreadWorkloadClass
End Enum

Public Enum RTL_SYSTEM_GLOBAL_DATA_ID
    GlobalDataIdUnknown = 0
    GlobalDataIdRngSeedVersion
    GlobalDataIdInterruptTime
    GlobalDataIdTimeZoneBias
    GlobalDataIdImageNumberLow
    GlobalDataIdImageNumberHigh
    GlobalDataIdTimeZoneId
    GlobalDataIdNtMajorVersion
    GlobalDataIdNtMinorVersion
    GlobalDataIdSystemExpirationDate
    GlobalDataIdKdDebuggerEnabled
    GlobalDataIdCyclesPerYield
    GlobalDataIdSafeBootMode
    GlobalDataIdLastSystemRITEventTickCount
    GlobalDataIdConsoleSharedDataFlags
    GlobalDataIdNtSystemRootDrive
    GlobalDataIdQpcBypassEnabled
    GlobalDataIdQpcData
    GlobalDataIdQpcBias
End Enum

Public Const API_SET_SCHEMA_ENTRY_FLAGS_SEALED = 1

Public Type API_SET_NAMESPACE
    Version As Long
    Size As Long
    Flags As Long
    Count As Long
    EntryOffset As Long
    HashOffset As Long
    HashFactor As Long
End Type

Public Type API_SET_HASH_ENTRY
    Hash As Long
    Index As Long
End Type

Public Type API_SET_NAMESPACE_ENTRY
    Flags As Long
    NameOffset As Long
    NameLength As Long
    HashedLength As Long
    ValueOffset As Long
    ValueCount As Long
End Type
Public Type API_SET_VALUE_ENTRY
    Flags As Long
    NameOffset As Long
    NameLength As Long
    ValueOffset As Long
    ValueLength As Long
End Type

Public Enum NtCopyFileChunkFlags
    COPY_FILE_CHUNK_DUPLICATE_EXTENTS = &H00000001
    VALID_COPY_FILE_CHUNK_FLAGS = (COPY_FILE_CHUNK_DUPLICATE_EXTENTS)
End Enum

Public Enum NtFlushFileFlags
' //
' //  If set, this operation will write the data for the given file from the
' //  Windows in-memory cache.  This will NOT commit any associated metadata
' //  changes.  This will NOT send a SYNC to the storage device to flush its
' //  cache.  Not supported on volume handles.
' //
    FLUSH_FLAGS_FILE_DATA_ONLY = &H00000001
'   If set, this operation will commit both the data and metadata changes for
'   the given file from the Windows in-memory cache.  This will NOT send a SYNC
'   to the storage device to flush its cache.  Not supported on volume handles.
    FLUSH_FLAGS_NO_SYNC = &H00000002
' #endif  // (NTDDI_VERSION >= NTDDI_WIN8)
' #if (NTDDI_VERSION >= NTDDI_WIN10_RS1)
'   If set, this operation will write the data for the given file from the
'   Windows in-memory cache.  It will also try to skip updating the timestamp
'   as much as possible.  This will send a SYNC to the storage device to flush its
'   cache.  Not supported on volume or directory handles.
    FLUSH_FLAGS_FILE_DATA_SYNC_ONLY = &H00000004
' #endif  // (NTDDI_VERSION >= NTDDI_WIN10_RS1)
' #if (NTDDI_VERSION >= NTDDI_WIN11_GA)
'   If set, this operation will write the data for the given file from the
'   Windows in-memory cache.  It will also try to skip updating the timestamp
'   as much as possible.  This will send a SYNC to the storage device to flush its
'   cache.  Not supported on volume or directory handles.
    FLUSH_FLAGS_FLUSH_AND_PURGE = &H00000008
End Enum

 
'NTDLL APIs should only be added if they don't have higher level equivalents. If the NTDLL version has substantially more functionality, it's not equivalent and should be added.
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQuerySystemInformation Lib "ntdll" (ByVal SystemInformationClass As SYSTEM_INFORMATION_CLASS, SystemInformation As Any, ByVal SystemInformationLength As Long, ReturnLength As Long) As Long
[UseGetLastError(False)]
Public Declare PtrSafe Function NtSetSystemInformation Lib "ntdll" (ByVal SystemInformationClass As SYSTEM_INFORMATION_CLASS, SystemInformation As Any, ByVal SystemInformationLength As Long) As Long
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQueryInformationProcess Lib "ntdll" (ByVal ProcessHandle As LongPtr, ByVal ProcessInformationClass As PROCESSINFOCLASS, ProcessInformation As Any, ByVal ProcessInformationLength As Long, ReturnLength As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtSetInformationProcess Lib "ntdll" (ByVal ProcessHandle As LongPtr, ByVal ProcessInformationClass As PROCESSINFOCLASS, ProcessInformation As Any, ByVal ProcessInformationLength As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQueryVirtualMemory Lib "ntdll" (ByVal ProcessHandle As LongPtr, ByVal BaseAddress As LongPtr, ByVal MemoryInformationClass As MEMORY_INFORMATION_CLASS, MemoryInformation As Any, ByVal MemoryInformationLength As LongPtr, ReturnLength As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtAllocateVirtualMemory Lib "ntdll" (ByVal ProcessHandle As LongPtr, BaseAddress As LongPtr, ByVal ZeroBits As LongPtr, RegionSize As LongPtr, ByVal AllocationType As MemAllocType, ByVal Protect As MemProtectFlags) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtFreeVirtualMemory Lib "ntdll" (ByVal ProcessHandle As LongPtr, BaseAddress As LongPtr, RegionSize As LongPtr, ByVal FreeType As MemAllocType) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtWriteVirtualMemory Lib "ntdll" (ByVal ProcessHandle As LongPtr, ByVal BaseAddress As LongPtr, Buffer As Any, ByVal BufferSize As LongPtr, NumberOfBytesWritten As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtReadVirtualMemory Lib "ntdll" (ByVal ProcessHandle As LongPtr, ByVal BaseAddress As LongPtr, Buffer As Any, ByVal BufferSize As LongPtr, NumberOfBytesRead As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtLockVirtualMemory Lib "ntdll" (ByVal ProcessHandle As LongPtr, BaseAddress As LongPtr, RegionSize As LongPtr, ByVal MapType As LockVMMapTypes) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtUnlockVirtualMemory Lib "ntdll" (ByVal ProcessHandle As LongPtr, BaseAddress As LongPtr, RegionSize As LongPtr, ByVal MapType As LockVMMapTypes) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtClose Lib "ntdll" (ByVal ObjectHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtCreateFile Lib "ntdll" (FileHandle As LongPtr, [TypeHint(GenericRights, FileAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, IoStatusBlock As IO_STATUS_BLOCK, AllocationSize As Any, ByVal FileAttributes As FILE_ATTRIBUTES, ByVal ShareAccess As FileShareMode, ByVal CreateDisposition As FileCreateDisposition, ByVal CreateOptions As FileAccessFlags, EaBuffer As Any, ByVal EaLength As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtOpenFile Lib "ntdll" (FileHandle As LongPtr, [TypeHint(GenericRights, FileAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, IoStatusBlock As IO_STATUS_BLOCK, ByVal ShareAccess As FileShareMode, ByVal OpenOptions As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtReadFile Lib "ntdll" (ByVal FileHandle As LongPtr, ByVal hEvent As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, ByRef IoStatusBlock As IO_STATUS_BLOCK, Buffer As Any, ByVal Length As Long, ByteOffset As LARGE_INTEGER, Optional Key As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtWriteFile Lib "ntdll" (ByVal FileHandle As LongPtr, ByVal hEvent As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, ByRef IoStatusBlock As IO_STATUS_BLOCK, Buffer As Any, ByVal Length As Long, ByteOffset As LARGE_INTEGER, Optional Key As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtLockFile Lib "ntdll" (ByVal FileHandle As LongPtr, ByVal hEvent As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, ByRef IoStatusBlock As IO_STATUS_BLOCK, ByteOffset As LARGE_INTEGER, Length As LARGE_INTEGER, ByVal Key As Long, ByVal FailImmediately As Byte, ByVal ExclusiveLock As Byte) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtFsControlFile Lib "ntdll" (ByVal FileHandle As LongPtr, ByVal hEvent As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, ByRef IoStatusBlock As IO_STATUS_BLOCK, ByVal FsControlCode As Long, InputBuffer As Any, ByVal InputBufferLength As Long, OutputBuffer As Any, ByVal OutputBufferLength As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtUnlockFile Lib "ntdll" (ByVal FileHandle As LongPtr, ByRef IoStatusBlock As IO_STATUS_BLOCK, ByteOffset As LARGE_INTEGER, Length As LARGE_INTEGER, ByVal Key As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQueryDirectoryFile Lib "ntdll" (ByVal FileHandle As LongPtr, ByVal hEvent As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, ByRef IoStatusBlock As IO_STATUS_BLOCK, FileInformation As Any, ByVal Length As Long, ByVal FileInformationClass As FILE_INFORMATION_CLASS, ByVal ReturnSingleEntry As Byte, FileName As Any, ByVal RestartScan As Byte) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQueryDirectoryFileEx Lib "ntdll" (ByVal FileHandle As LongPtr, ByVal hEvent As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, ByRef IoStatusBlock As IO_STATUS_BLOCK, FileInformation As Any, ByVal Length As Long, ByVal FileInformationClass As FILE_INFORMATION_CLASS, ByVal QueryFlags As NtFileQueryFlags, Filename As UNICODE_STRING) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQueryInformationByName Lib "ntdll" (ObjectAttributes As OBJECT_ATTRIBUTES, IoStatusBlock As IO_STATUS_BLOCK, FileInformation As Any, ByVal Length As Long, ByVal FileInformationClass As FILE_INFORMATION_CLASS) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQueryInformationFile Lib "ntdll" (ByVal FileHandle As LongPtr, IoStatusBlock As IO_STATUS_BLOCK, FileInformation As Any, ByVal Length As Long, ByVal FileInformationClass As FILE_INFORMATION_CLASS) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtSetInformationFile Lib "ntdll" (ByVal FileHandle As LongPtr, IoStatusBlock As IO_STATUS_BLOCK, FileInformation As Any, ByVal Length As Long, ByVal FileInformationClass As FILE_INFORMATION_CLASS) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtSetEaFile Lib "ntdll" (ByVal FileHandle As LongPtr, IoStatusBlock As IO_STATUS_BLOCK, Buffer As Any, ByVal Length As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQueryVolumeInformationFile Lib "ntdll" (ByVal FileHandle As LongPtr, IoStatusBlock As IO_STATUS_BLOCK, FsInformation As Any, ByVal Length As Long, ByVal FsInformationClass As FS_INFORMATION_CLASS) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtSetVolumeInformationFile Lib "ntdll" (ByVal FileHandle As LongPtr, IoStatusBlock As IO_STATUS_BLOCK, FsInformation As Any, ByVal Length As Long, ByVal FsInformationClass As FS_INFORMATION_CLASS) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQueryFullAttributesFile Lib "ntdll" (ObjectAttributes As OBJECT_ATTRIBUTES, Attributes As Any) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQueryQuotaInformationFile Lib "ntdll" (ByVal FileHandle As LongPtr, IoStatusBlock As IO_STATUS_BLOCK, Buffer As Any, ByVal Length As Long, ByVal ReturnSingleEntry As Byte, ByVal SidList As LongPtr, ByVal SidListLength As Long, ByVal StartSid As LongPtr, ByVal RestartScan As Byte) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtSetQuotaInformationFile Lib "ntdll" (ByVal FileHandle As LongPtr, IoStatusBlock As IO_STATUS_BLOCK, Buffer As Any, ByVal Length As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtFlushBuffersFile Lib "ntdll" (ByVal FileHandle As LongPtr, IoStatusBlock As IO_STATUS_BLOCK) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtFlushBuffersFileEx Lib "ntdll" (ByVal FileHandle As LongPtr, ByVal Flags As NtFlushFileFlags, Parameters As Any, ByVal ParametersSize As Long, IoStatusBlock As IO_STATUS_BLOCK) As NTSTATUS
Public Declare PtrSafe Function NtCancelIoFile Lib "ntdll" (ByVal hFile As LongPtr) As BOOL
Public Declare PtrSafe Function NtCancelIoFileEx Lib "ntdll" (ByVal hFile As LongPtr, lpOverlapped As OVERLAPPED) As BOOL
[UseGetLastError(False)]
Public Declare PtrSafe Function NtDeleteFile Lib "ntdll" (ObjectAttributes As OBJECT_ATTRIBUTES) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtCopyFileChunk Lib "ntdll" (ByVal SourceHandle As LongPtr, ByVal DestHandle As LongPtr, ByVal Event As LongPtr, IoStatusBlock As IO_STATUS_BLOCK, ByVal Length As Long, SourceOffset As LARGE_INTEGER, DestOffset As LARGE_INTEGER, SourceKey As Long, DestKey As Long, [TypeHint(NtCopyFileChunkFlags)] ByVal Flags As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtCreateNamedPipeFile Lib "ntdll" (FileHandle As LongPtr, [TypeHint(GenericRights, FileAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, IoStatusBlock As IO_STATUS_BLOCK, ByVal ShareAccess As FileShareMode, ByVal CreateDisposition As FileCreateDisposition, [TypeHint(FileAccessFlags, FILE_PIPE_CONFIG)] ByVal CreateOptions As Long, [TypeHint(FILE_PIPE_TYPE)] ByVal NamedPipeType As Long, [TypeHint(FILE_PIPE_READ_MODE)] ByVal ReadMode As Long, [TypeHint(FILE_PIPE_COMPLETION_MODE)] ByVal CompletionMode As Long, ByVal MaximumInstances As Long, ByVal InboundQuota As Long, ByVal OutboundQuota As Long, DefaultTimeout As LARGE_INTEGER) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtCreateMailslotFile Lib "ntdll" (FileHandle As LongPtr, [TypeHint(GenericRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, IoStatusBlock As IO_STATUS_BLOCK, ByVal CreateOptions As Long, ByVal MailslotQuota As Long, ByVal MaximumMessageSize As Long, ReadTimeout As LARGE_INTEGER) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtImpersonateThread Lib "ntdll" (ByVal hThread As LongPtr, ByVal hThreadToImpersonate As LongPtr, SecurityQualityOfService As SECURITY_QUALITY_OF_SERVICE) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtImpersonateAnonymousToken Lib "ntdll" (ByVal ThreadHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQueryObject Lib "ntdll" (ByVal Handle As LongPtr, ByVal ObjectInformationClass As OBJECT_INFORMATION_CLASS, ObjectInformation As Any, ByVal ObjectInformationLength As Long, ReturnLength As Long) As Long
[UseGetLastError(False)]
Public Declare PtrSafe Function NtDuplicateObject Lib "ntdll" (ByVal SourceProcessHandle As LongPtr, ByVal SourceHandle As LongPtr, pTargetHandle As LongPtr, ByVal DesiredAccess As Long, ByVal HandleAttributes As ObjectAttributeValues, ByVal Options As DuplicateObjectOptions) As Long
[UseGetLastError(False)]
Public Declare PtrSafe Function NtOpenProcess Lib "ntdll" (ProcessHandle As LongPtr, [TypeHint(ProcessAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, ClientID As CLIENT_ID) As Long
[UseGetLastError(False)]
Public Declare PtrSafe Function NtSuspendProcess Lib "ntdll" (ByVal hProcess As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtResumeProcess Lib "ntdll" (ByVal hProcess As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtTerminateProcess Lib "ntdll" (ByVal ProcessHandle As LongPtr, ByVal ExitStatus As NTSTATUS) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQueryInformationToken Lib "ntdll" (ByVal TokenHandle As LongPtr, ByVal TokenInformationClass As TOKEN_INFORMATION_CLASS, TokenInformation As Any, ByVal TokenInformationLength As Long, ReturnLength As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtSetInformationToken Lib "ntdll" (ByVal TokenHandle As LongPtr, ByVal TokenInformationClass As TOKEN_INFORMATION_CLASS, TokenInformation As Any, ByVal TokenInformationLength As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtOpenProcessToken Lib "ntdll" (ByVal ProcessHandle As LongPtr, [TypeHint(TokenAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, TokenHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtOpenProcessTokenEx Lib "ntdll" (ByVal ProcessHandle As LongPtr, [TypeHint(TokenAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, ByVal HandleAttributes As ObjectAttributeValues, TokenHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtOpenThread Lib "ntdll" (ThreadHandle As LongPtr, ByVal DesiredAccess As ThreadAccessRights, ObjectAttributes As OBJECT_ATTRIBUTES, ClientId As CLIENT_ID) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtOpenThreadToken Lib "ntdll" (ByVal ProcessHandle As LongPtr, [TypeHint(TokenAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, ByVal OpenAsSelf As Boolean, TokenHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtOpenThreadTokenEx Lib "ntdll" (ByVal ProcessHandle As LongPtr, [TypeHint(TokenAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, ByVal OpenAsSelf As Boolean, ByVal HandleAttributes As ObjectAttributeValues, TokenHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQueryInformationThread Lib "ntdll" (ByVal ThreadHandle As LongPtr, ByVal ThreadInformationClass As THREADINFOCLASS, ThreadInformation As Any, ByVal ThreadInformationLength As Long, ReturnLength As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtSetInformationThread Lib "ntdll" (ByVal ThreadHandle As LongPtr, ByVal ThreadInformationClass As THREADINFOCLASS, ThreadInformation As Any, ByVal ThreadInformationLength As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtGetNextProcess Lib "ntdll" (ByVal ProcessHandle As LongPtr, [TypeHint(ProcessAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, [TypeHint(ObjectAttributeValues)] ByVal HandleAttributes As Long, ByVal Flags As Long, NewProcessHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtGetNextThread Lib "ntdll" (ByVal ProcessHandle As LongPtr, ByVal ThreadHandle As LongPtr, [TypeHint(ThreadAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, [TypeHint(ObjectAttributeValues)] ByVal HandleAttributes As Long, ByVal Flags As Long, NewProcessHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtAlertThread Lib "ntdll" (ByVal ThreadHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtSuspendThread Lib "ntdll" (ByVal ThreadHandle As LongPtr, Optional PreviousSuspendCount As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtResumeThread Lib "ntdll" (ByVal ThreadHandle As LongPtr, Optional SuspendCount As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtAlertResumeThread Lib "ntdll" (ByVal ThreadHandle As LongPtr, SuspendCount As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtDeviceIoControlFile Lib "ntdll" (ByVal FileHandle As LongPtr, ByVal hEvent As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, ByRef IoStatusBlock As IO_STATUS_BLOCK, ByVal IoControlCode As Long, InputBuffer As Any, ByVal InputBufferLength As Long, OutputBuffer As Any, ByVal OutputBufferLength As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtAllocateLocallyUniqueId Lib "ntdll" (pLuid As LUID) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtCreateToken Lib "ntdll" (TokenHandle As LongPtr, [TypeHint(TokenAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, ByVal TokenType As TOKEN_TYPE, AuthenticationId As LUID, ExpirationTime As LongLong, TokenUser As Any, TokenGroups As Any, TokenPrivileges As Any, TokenOwner As TOKEN_OWNER, TokenPrimaryGroup As TOKEN_PRIMARY_GROUP, TokenDefaultDacl As TOKEN_DEFAULT_DACL, TokenSource As TOKEN_SOURCE) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtCreateTokenEx Lib "ntdll" (TokenHandle As LongPtr, [TypeHint(TokenAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, ByVal TokenType As TOKEN_TYPE, AuthenticationId As LUID, ExpirationTime As LongLong, TokenUser As Any, TokenGroups As Any, TokenPrivileges As Any, UserAttributes As TOKEN_SECURITY_ATTRIBUTES_INFORMATION, DeviceAttributes As TOKEN_SECURITY_ATTRIBUTES_INFORMATION, DeviceGroups As Any, MandatoryPolicy As TOKEN_MANDATORY_POLICY, Owner As TOKEN_OWNER, PrimaryGroup As TOKEN_PRIMARY_GROUP, DefaultDacl As TOKEN_DEFAULT_DACL, TokenSource As TOKEN_SOURCE) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtCompareTokens Lib "ntdll" (ByVal FirstTokenHandle As LongPtr, ByVal SecondTokenHandle As LongPtr, pEqual As Byte) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtDuplicateToken Lib "ntdll" (ByVal ExistingTokenHandle As LongPtr, [TypeHint(TokenAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, ByVal EffectiveOnly As Byte, ByVal TokenType As TOKEN_TYPE, NewTokenHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtFilterToken Lib "ntdll" (ByVal ExistingTokenHandle As LongPtr, ByVal Flags As RestrictedTokenFlags, SidsToDisable As TOKEN_GROUPS, PrivilegesToDisable As TOKEN_PRIVILEGES, RestrictedSids As TOKEN_GROUPS, NewTokenHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtAdjustPrivilegesToken Lib "ntdll" (ByVal TokenHandle As LongPtr, ByVal DisableAllPrivileges As Byte, NewState As TOKEN_PRIVILEGES, ByVal BufferLength As Long, PreviousState As TOKEN_PRIVILEGES, Optional Length As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtAdjustGroupsToken Lib "ntdll" (ByVal TokenHandle As LongPtr, ByVal ResetToDefault As Byte, NewState As TOKEN_GROUPS, ByVal BufferLength As Long, PreviousState As TOKEN_GROUPS, Optional Length As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQuerySecurityAttributesToken Lib "ntdll" (ByVal TokenHandle As LongPtr, Attributes As UNICODE_STRING, ByVal NumberOfAttributes As Long, Buffer As Any, ByVal Length As Long, ReturnLength As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtCreateSection Lib "ntdll" (SectionHandle As LongPtr, [TypeHint(StandardAccessTypes, NTSectionAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, MaximumSize As LARGE_INTEGER, ByVal SectionPageProtection As MemProtectFlags, ByVal AllocationAttributes As NTSectionFlags, Optional ByVal FileHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtCreateSectionEx Lib "ntdll" (SectionHandle As LongPtr, [TypeHint(StandardAccessTypes, NTSectionAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, MaximumSize As LARGE_INTEGER, ByVal SectionPageProtection As MemProtectFlags, ByVal AllocationAttributes As NTSectionFlags, ByVal FileHandle As LongPtr, ExtendedParameters As Any, ByVal ExtendedParameterCount As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtOpenSection Lib "ntdll" (SectionHandle As LongPtr, [TypeHint(StandardAccessTypes, NTSectionAccessRights, GenericRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtExtendSection Lib "ntdll" (ByVal SectionHandle As LongPtr, NewSectionSize As LARGE_INTEGER) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQuerySection Lib "ntdll" (ByVal SectionHandle As LongPtr, ByVal SectionInformationClass As SECTION_INFORMATION_CLASS, SectionInformation As Any, ByVal SectionInformationLength As LongPtr, ReturnLength As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtAreMappedFilesTheSame Lib "ntdll" (ByVal File1MappedAsAnImage As LongPtr, ByVal File2MappedAsFile As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtMapViewOfSection Lib "ntdll" (ByVal SectionHandle As LongPtr, ByVal ProcessHandle As LongPtr, BaseAddress As LongPtr, ByVal ZeroBits As LongPtr, ByVal CommitSize As LongPtr, SectionOffset As LARGE_INTEGER, ViewSize As LongPtr, ByVal AllocationType As MemAllocType, ByVal Win32Protect As MemProtectFlags) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtMapViewOfSectionEx Lib "ntdll" (ByVal SectionHandle As LongPtr, ByVal ProcessHandle As LongPtr, BaseAddress As LongPtr, ByVal ZeroBits As LongPtr, ByVal CommitSize As LongPtr, SectionOffset As LARGE_INTEGER, ViewSize As LongPtr, ByVal AllocationType As MemAllocType, ByVal Win32Protect As MemProtectFlags, ExtendedParameters As Any, ByVal ExtendedParameterCount As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtUnmapViewOfSection Lib "ntdll" (ByVal ProcessHandle As LongPtr, Optional ByVal BaseAddress As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtUnmapViewOfSectionEx Lib "ntdll" (ByVal ProcessHandle As LongPtr, ByVal BaseAddress As LongPtr, ByVal Flags As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtCreateProfile Lib "ntdll" (ProfileHandle As LongPtr, ByVal Process As LongPtr, ByVal ProfileBase As LongPtr, ByVal ProfileSize As LongPtr, Buffer As Long, ByVal BufferSize As Long, ByVal ProfileSource As KPROFILE_SOURCE, ByVal Affinity As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtCreateProfileEx Lib "ntdll" (ProfileHandle As LongPtr, ByVal Process As LongPtr, ByVal ProfileBase As LongPtr, ByVal ProfileSize As LongPtr, Buffer As Long, ByVal BufferSize As Long, ByVal ProfileSource As KPROFILE_SOURCE, ByVal GroupCount As Long, AffinityArray As GROUP_AFFINITY) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtSetIntervalProfile Lib "ntdll" (ByVal Interval As Long, ByVal ProfileSource As KPROFILE_SOURCE) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQueryIntervalProfile Lib "ntdll" (ByVal ProfileSource As KPROFILE_SOURCE, Interval As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtStartProfile Lib "ntdll" (ByVal ProfileHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtStopProfile Lib "ntdll" (ByVal ProfileHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtPowerInformation Lib "ntdll" (ByVal InformationLevel As POWER_INFORMATION_LEVEL, InputBuffer As Any, ByVal InputBufferLength As Long, OutputBuffer As Any, ByVal OutputBufferLength As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtShutdownSystem Lib "ntdll" (ByVal Action As SHUTDOWN_ACTION) As NTSTATUS
[Description("⚠️ **WARNING:** For emergency shutdown only; one step above flipping the power switch. Requires SE_SHUTDOWN_PRIVILEGE")]
[UseGetLastError(False)]
Public Declare PtrSafe Function NtSetSystemPowerState Lib "ntdll" (ByVal SystemAction As POWER_ACTION, ByVal MinSystemState As SYSTEM_POWER_STATE, ByVal Flags As SystemShutdownReasons) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtGetDevicePowerState Lib "ntdll" (ByVal DeviceHandle As LongPtr, DevicePowerState As DEVICE_POWER_STATE) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtOpenSymbolicLinkObject Lib "ntdll" (LinkHandle As LongPtr, [TypeHint(GenericRights, SymbolicLinkAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtCreateSymbolicLinkObject Lib "ntdll" (LinkHandle As LongPtr, [TypeHint(GenericRights, SymbolicLinkAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, LinkTarget As UNICODE_STRING) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQuerySymbolicLinkObject Lib "ntdll" (ByVal LinkHandle As LongPtr, LinkTarget As UNICODE_STRING, Optional ReturnLenfth As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtOpenDirectoryObject Lib "ntdll" (DirectoryHandle As LongPtr, [TypeHint(GenericRights, DirectoryAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQueryDirectoryObject Lib "ntdll" (ByVal DirectoryHandle As LongPtr, Buffer As Any, ByVal Length As Long, ByVal ReturnSingleEntry As Byte, ByVal RestartScan As Byte, Context As Long, Optional ReturnLength As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtCreateDirectoryObject Lib "ntdll" (DirectoryHandle As LongPtr, [TypeHint(GenericRights, DirectoryAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtLoadDriver Lib "ntdll" (DriverServiceName As UNICODE_STRING) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtUnloadDriver Lib "ntdll" (DriverServiceName As UNICODE_STRING) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQuerySystemTime Lib "ntdll" (SystemTime As LARGE_INTEGER) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtSetSystemTime Lib "ntdll" (SystemTime As LARGE_INTEGER, PreviousTime As LARGE_INTEGER) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQueryTimerResolution Lib "ntdll" (MinimumResolution As Long, MaximumResolution As Long, CurrentResolution As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtSetTimerResolution Lib "ntdll" (ByVal DesiredResolution As Long, ByVal SetResolution As Byte, CurrentResolution As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtCreateTimer Lib "ntdll" (TimerHandle As LongPtr, ByVal DesiredAccess As TimerAccessRights, ObjectAttributes As OBJECT_ATTRIBUTES, ByVal TimerType As TIMER_TYPE) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtCancelTimer Lib "ntdll" (ByVal TimerHandle As LongPtr, Optional CurrentState As Byte) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtSetTimer Lib "ntdll" (ByVal TimerHandle As LongPtr, DueTime As LARGE_INTEGER, ByVal TimerApcRoutine As LongPtr, ByVal TimerContext As LongPtr, ByVal ResumeTimer As Byte, Optional ByVal Period As Long, Optional PreviousState As Byte) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtQueryTimer Lib "ntdll" (ByVal TimerHandle As LongPtr, ByVal TimerInformationClass As TIMER_INFORMATION_CLASS, TimerInformation As Any, ReturnLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtGetTickCount Lib "ntdll" () As Long
[UseGetLastError(False)]
Public Declare PtrSafe Function NtYieldExecution Lib "ntdll" () As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtDelayExecution Lib "ntdll" (ByVal Alertable As Byte, DelayInterval As LARGE_INTEGER) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtWaitForSingleObject Lib "ntdll" (ByVal Handle As LongPtr, ByVal Alertable As Byte, Timeout As LARGE_INTEGER) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtRaiseHardError Lib "ntdll" (ByVal ErrorStatus As NTSTATUS, ByVal NumberOfParameters As Long, ByVal UnicodeStringParametersMask As Long, Parameters As Any, ByVal ResponseOption As HARDERROR_RESPONSE_OPTION, Response As HARDERROR_RESPONSE) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtCreateUserProcess Lib "ntdll" (ProcessHandle As LongPtr, ThreadHandle As LongPtr, [TypeHint(ProcessAccessRights, StandardAccessTypes)] ByVal ProcessDesiredAccess As Long, [TypeHint(ThreadAccessRights, StandardAccessTypes)] ByVal ThreadDesiredAccess As Long, _
                                                                    ProcessObjectAttributes As OBJECT_ATTRIBUTES, ThreadObjectAttributes As OBJECT_ATTRIBUTES, ByVal ProcessFlags As PROCESS_CREATE_FLAGS, ByVal ThreadFlags As THREAD_CREATE_FLAGS, ProcessParameters As Any, CreateInfo As PS_CREATE_INFO, AttributeList As PS_ATTRIBUTE_LIST) As NTSTATUS

Public Function NtCurrentProcess() As LongPtr: Return (-1): End Function
Public Function NtCurrentThread() As LongPtr: Return (-2): End Function
Public Function NtCurrentProcessToken() As LongPtr: Return (-4): End Function
Public Function NtCurrentThreadToken() As LongPtr: Return (-5): End Function
Public Function NtCurrentThreadEffectiveToken() As LongPtr: Return (-6): End Function

Public Function NtCurrentPeb() As LongPtr: Return RtlGetCurrentPeb(): End Function
#If (TWINBASIC_BUILD >= 606) Then
Public Function NtCurrentTeb CDecl Naked() As LongPtr
    #If Win64 Then
    Emit(&H65, &H48, &H8b, &H04, &H25, &H30, &H00)   'mov    rax,QWORD PTR gs:0x30
    Emit(&H00, &H00)
    Emit(&Hc3)                                       'ret      
    #Else
    Emit(&H64, &Ha1, &H18, &H00, &H00, &H00)    'mov    eax,fs:0x18
    Emit(&Hc3)                                  'ret
    #End If
End Function
#End If

[UseGetLastError(False)]
Public Declare PtrSafe Function NtImpersonateClientOfPort Lib "ntdll" (ByVal PortHandle As LongPtr, Message As PORT_MESSAGE) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtAlpcImpersonateClientOfPort Lib "ntdll" (ByVal PortHandle As LongPtr, Message As PORT_MESSAGE, [TypeHint(AlpcImpersonateFlags)] ByVal Flags As LongPtr) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtAlpcImpersonateClientContainerOfPort Lib "ntdll" (ByVal PortHandle As LongPtr, Message As PORT_MESSAGE, [TypeHint(AlpcImpersonateFlags)] ByVal Flags As LongPtr) As NTSTATUS

    
Public Declare PtrSafe Function wcslen CDecl Lib "ntdll" (ByVal _String As LongPtr) As LongPtr
Public Declare PtrSafe Function wcsnlen CDecl Lib "ntdll" (ByVal _String As LongPtr, ByVal _MaxCount As LongPtr) As LongPtr
Public Declare PtrSafe Function wcscat CDecl Lib "ntdll" (ByVal dest As LongPtr, ByVal src As LongPtr) As LongPtr
Public Declare PtrSafe Function wcscat_s CDecl Lib "ntdll" (ByVal _Dst As LongPtr, ByVal _SizeInWords As LongPtr, ByVal _Src As LongPtr) As Long
Public Declare PtrSafe Function wcscmp CDecl Lib "ntdll" (ByVal lhs As LongPtr, ByVal rhs As LongPtr) As Long
Public Declare PtrSafe Function wcscpy CDecl Lib "ntdll" (ByVal dest As LongPtr, ByVal src As LongPtr) As LongPtr
Public Declare PtrSafe Function towlower CDecl Lib "ntdll" (ByVal ch As Integer) As Integer
Public Declare PtrSafe Function towupper CDecl Lib "ntdll" (ByVal ch As Integer) As Integer
Public Declare PtrSafe Function _wcslwr CDecl Lib "ntdll" (ByVal _Str As LongPtr) As LongPtr
Public Declare PtrSafe Function _wcsupr CDecl Lib "ntdll" (ByVal _Str As LongPtr) As LongPtr
Public Declare PtrSafe Function _wcsrev CDecl Lib "ntdll" (ByVal _Str As LongPtr) As LongPtr
Public Declare PtrSafe Function wcschr CDecl Lib "ntdll" (ByVal str As LongPtr, ByVal Ch As Integer) As LongPtr
Public Declare PtrSafe Function wcsstr CDecl Lib "ntdll" (ByVal dest As LongPtr, ByVal src As LongPtr) As LongPtr
    

'Memory partitions
Public Enum PartitionAccessRights
    MEMORY_PARTITION_QUERY_ACCESS = &H0001
    MEMORY_PARTITION_MODIFY_ACCESS = &H0002
    MEMORY_PARTITION_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or SYNCHRONIZE Or MEMORY_PARTITION_QUERY_ACCESS Or MEMORY_PARTITION_MODIFY_ACCESS)
End Enum

Public Enum PARTITION_INFORMATION_CLASS
    SystemMemoryPartitionInformation   ' q: MEMORY_PARTITION_CONFIGURATION_INFORMATION
    SystemMemoryPartitionMoveMemory   ' s: MEMORY_PARTITION_TRANSFER_INFORMATION
    SystemMemoryPartitionAddPagefile   ' s: MEMORY_PARTITION_PAGEFILE_INFORMATION
    SystemMemoryPartitionCombineMemory   ' q; s: MEMORY_PARTITION_PAGE_COMBINE_INFORMATION
    SystemMemoryPartitionInitialAddMemory   ' q; s: MEMORY_PARTITION_INITIAL_ADD_INFORMATION
    SystemMemoryPartitionGetMemoryEvents   ' MEMORY_PARTITION_MEMORY_EVENTS_INFORMATION // since REDSTONE2
    SystemMemoryPartitionSetAttributes
    SystemMemoryPartitionNodeInformation
    SystemMemoryPartitionCreateLargePages
    SystemMemoryPartitionDedicatedMemoryInformation
    SystemMemoryPartitionOpenDedicatedMemory   ' 10
    SystemMemoryPartitionMemoryChargeAttributes
    SystemMemoryPartitionClearAttributes
    SystemMemoryPartitionSetMemoryThresholds   ' since WIN11
    SystemMemoryPartitionMax
End Enum

Public Type MEMORY_PARTITION_CONFIGURATION_INFORMATION
    Flags As Long
    NumaNode As Long
    Channel As Long
    NumberOfNumaNodes As Long
    ResidentAvailablePages As LongPtr
    CommittedPages As LongPtr
    CommitLimit As LongPtr
    PeakCommitment As LongPtr
    TotalNumberOfPages As LongPtr
    AvailablePages As LongPtr
    ZeroPages As LongPtr
    FreePages As LongPtr
    StandbyPages As LongPtr
    StandbyPageCountByPriority(0 To 7) As LongPtr ' since REDSTONE2
    RepurposedPagesByPriority(0 To 7) As LongPtr
    MaximumCommitLimit As LongPtr
    Reserved As LongPtr ' DonatedPagesToPartitions
    PartitionId As Long ' since REDSTONE3
End Type

Public Type MEMORY_PARTITION_TRANSFER_INFORMATION
    NumberOfPages As LongPtr
    NumaNode As Long
    Flags As Long
End Type

Public Type MEMORY_PARTITION_PAGEFILE_INFORMATION
    PageFileName As UNICODE_STRING
    MinimumSize As LARGE_INTEGER
    MaximumSize As LARGE_INTEGER
    Flags As Long
End Type

Public Type MEMORY_PARTITION_PAGE_COMBINE_INFORMATION
    StopHandle As LongPtr
    Flags As Long
    TotalNumberOfPages As LongPtr
End Type

Public Type MEMORY_PARTITION_PAGE_RANGE
    StartPage As LongPtr
    NumberOfPages As LongPtr
End Type

[Description("WARNING: SAFEARRAY substituted for variable C-style array. Copy from byte buffer into fixed portion, determine size, then redim and copy into PartitionRanges(0). Header only: MEMORY_PARTITION_INITIAL_ADD_INFORMATION_Hdr")]
Public Type MEMORY_PARTITION_INITIAL_ADD_INFORMATION
    Flags As Long
    NumberOfRanges As Long
    NumberOfPagesAdded As LongPtr
    PartitionRanges() As MEMORY_PARTITION_PAGE_RANGE
End Type
Public Type MEMORY_PARTITION_INITIAL_ADD_INFORMATION_Hdr
    Flags As Long
    NumberOfRanges As Long
    NumberOfPagesAdded As LongPtr
End Type

Public Type MEMORY_PARTITION_MEMORY_EVENTS_INFORMATION
    ' union
    ' {
        ' struct
        ' {
            ' ULONG CommitEvents : 1;
            ' ULONG Spare : 31;
        ' };
        ' ULONG AllFlags;
    ' } Flags;
    Flags As Long
    HandleAttributes As Long
    DesiredAccess As Long
    LowCommitCondition As LongPtr ' \KernelObjects\LowCommitCondition
    HighCommitCondition As LongPtr ' \KernelObjects\HighCommitCondition
    MaximumCommitCondition As LongPtr ' \KernelObjects\MaximumCommitCondition
End Type

[UseGetLastError(False)]
Public Declare PtrSafe Function NtCreatePartition Lib "ntdll" (ByVal ParentPartitionHandle As LongPtr, PartitionHandle As LongPtr, [TypeHint(PartitionAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, ByVal PreferredNode As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtOpenPartition Lib "ntdll" (ByVal PartitionHandle As LongPtr, [TypeHint(PartitionAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES) As NTSTATUS
[UseGetLastError(False)]
Public Declare PtrSafe Function NtManagePartition Lib "ntdll" (ByVal TargetHandle As LongPtr, ByVal SourceHandle As LongPtr, ByVal PartitionInformationClass As PARTITION_INFORMATION_CLASS, PartitionInformation As Any, ByVal PartitionInformationLength As Long) As NTSTATUS



'Registry
Public Enum NtRegBootConditionFlags
    REG_INIT_BOOT_SM = &H0000
    REG_INIT_BOOT_SETUP = &H0001
    REG_INIT_BOOT_ACCEPTED_BASE = &H0002
    REG_INIT_BOOT_ACCEPTED_MAX = REG_INIT_BOOT_ACCEPTED_BASE + 999
End Enum

Public Const REG_MAX_KEY_VALUE_NAME_LENGTH  = 32767
Public Const REG_MAX_KEY_NAME_LENGTH  = 512

Public Enum KEY_INFORMATION_CLASS
    KeyBasicInformation ' KEY_BASIC_INFORMATION
    KeyNodeInformation ' KEY_NODE_INFORMATION
    KeyFullInformation ' KEY_FULL_INFORMATION
    KeyNameInformation ' KEY_NAME_INFORMATION
    KeyCachedInformatio ' KEY_CACHED_INFORMATION
    KeyFlagsInformation ' KEY_FLAGS_INFORMATION
    KeyVirtualizationInformation ' KEY_VIRTUALIZATION_INFORMATION
    KeyHandleTagsInformation ' KEY_HANDLE_TAGS_INFORMATION
    KeyTrustInformation ' KEY_TRUST_INFORMATION
    KeyLayerInformation ' KEY_LAYER_INFORMATION
    MaxKeyInfoClass
End Enum

[Description("IMPORTANT: Name is variable C-style array.")]
Public Type KEY_BASIC_INFORMATION
    LastWriteTime As LARGE_INTEGER
    TitleIndex As Long
    NameLength As Long
    Name(REG_MAX_KEY_NAME_LENGTH) As Integer
End Type

[Description("IMPORTANT: This is a header type only; the members are followed in memory by two variable-length C-style arrays.")]
Public Type KEY_NODE_INFORMATION
    LastWriteTime As LARGE_INTEGER
    TitleIndex As Long
    ClassOffset As Long
    ClassLength As Long
    NameLength As Long
    'Name(REG_MAX_KEY_NAME_LENGTH) As Integer
    ' ...
    ' WCHAR Class[1];
End Type

[Description("IMPORTANT: Class is variable C-style array.")]
Public Type KEY_FULL_INFORMATION
    LastWriteTime As LARGE_INTEGER
    TitleIndex As Long
    ClassOffset As Long
    ClassLength As Long
    SubKeys As Long
    MaxNameLength As Long
    MaxClassLength As Long
    Values As Long
    MaxValueNameLength As Long
    MaxValueDataLength As Long
    Class(0 To REG_MAX_KEY_NAME_LENGTH) As Integer
End Type

[Description("IMPORTANT: Name is variable C-style array.")]
Public Type KEY_NAME_INFORMATION
    NameLength As Long
    Name(0 To REG_MAX_KEY_NAME_LENGTH) As Integer
End Type

[Description("IMPORTANT: Name is variable C-style array.")]
Public Type KEY_CACHED_INFORMATION
    LastWriteTime As LARGE_INTEGER
    TitleIndex As Long
    SubKeys As Long
    MaxNameLength As Long
    Values As Long
    MaxValueNameLength As Long
    MaxValueDataLength As Long
    NameLength As Long
    Name(0 To REG_MAX_KEY_NAME_LENGTH) As Integer
End Type

Public Enum NtRegFlags
    REG_FLAG_VOLATILE = &H0001
    REG_FLAG_LINK = &H0002
End Enum

Public Enum NtRegKeyFlags
    REG_KEY_DONT_VIRTUALIZE = &H0002
    REG_KEY_DONT_SILENT_FAIL = &H0004
    REG_KEY_RECURSE_FLAG = &H0008
End Enum

Public Type KEY_FLAGS_INFORMATION
    Wow64Flags As Long
    KeyFlags As NtRegFlags ' REG_FLAG_*
    ControlFlags As NtRegKeyFlags ' REG_KEY_*
End Type

Public Type KEY_VIRTUALIZATION_INFORMATION
    ' ULONG VirtualizationCandidate : 1; // Tells whether the key is part of the virtualization namespace scope (only HKLM\Software for now).
    ' ULONG VirtualizationEnabled : 1; // Tells whether virtualization is enabled on this key. Can be 1 only if above flag is 1.
    ' ULONG VirtualTarget : 1; // Tells if the key is a virtual key. Can be 1 only if above 2 are 0. Valid only on the virtual store key handles.
    ' ULONG VirtualStore : 1; // Tells if the key is a part of the virtual store path. Valid only on the virtual store key handles.
    ' ULONG VirtualSource : 1; // Tells if the key has ever been virtualized, can be 1 only if VirtualizationCandidate is 1.
    ' ULONG Reserved : 27;
    Flags As Long
End Type

Public Type KEY_TRUST_INFORMATION
    ' ULONG TrustedKey : 1;
    ' ULONG Reserved : 31;
    Flags As Long
End Type

Public Type KEY_LAYER_INFORMATION
    ' ULONG IsTombstone : 1;
    ' ULONG IsSupersedeLocal : 1;
    ' ULONG IsSupersedeTree : 1;
    ' ULONG ClassIsInherited : 1;
    ' ULONG Reserved : 28;
    Flags As Long
End Type

Public Enum KEY_SET_INFORMATION_CLASS
    KeyWriteTimeInformation ' KEY_WRITE_TIME_INFORMATION
    KeyWow64FlagsInformation ' KEY_WOW64_FLAGS_INFORMATION
    KeyControlFlagsInformation ' KEY_CONTROL_FLAGS_INFORMATION
    KeySetVirtualizationInformation ' KEY_SET_VIRTUALIZATION_INFORMATION
    KeySetDebugInformation
    KeySetHandleTagsInformation ' KEY_HANDLE_TAGS_INFORMATION
    KeySetLayerInformation ' KEY_SET_LAYER_INFORMATION
    MaxKeySetInfoClass
End Enum

Public Type KEY_WRITE_TIME_INFORMATION
    LastWriteTime As LARGE_INTEGER
End Type

Public Type KEY_WOW64_FLAGS_INFORMATION
    UserFlags As Long
End Type

Public Type KEY_HANDLE_TAGS_INFORMATION
    HandleTags As Long
End Type

Public Type KEY_SET_LAYER_INFORMATION
    ' ULONG IsTombstone : 1;
    ' ULONG IsSupersedeLocal : 1;
    ' ULONG IsSupersedeTree : 1;
    ' ULONG ClassIsInherited : 1;
    ' ULONG Reserved : 28;
    Flags As Long
End Type

Public Type KEY_CONTROL_FLAGS_INFORMATION
    ControlFlags As Long
End Type

Public Type KEY_SET_VIRTUALIZATION_INFORMATION
    ' ULONG VirtualTarget : 1;
    ' ULONG VirtualStore : 1;
    ' ULONG VirtualSource : 1; // true if key has been virtualized at least once
    ' ULONG Reserved : 29;
    Flags As Long
End Type

Public Enum KEY_VALUE_INFORMATION_CLASS
    KeyValueBasicInformation ' KEY_VALUE_BASIC_INFORMATION
    KeyValueFullInformation ' KEY_VALUE_FULL_INFORMATION
    KeyValuePartialInformation ' KEY_VALUE_PARTIAL_INFORMATION
    KeyValueFullInformationAlign64
    KeyValuePartialInformationAlign64 ' KEY_VALUE_PARTIAL_INFORMATION_ALIGN64
    KeyValueLayerInformation ' KEY_VALUE_LAYER_INFORMATION
    MaxKeyValueInfoClass
End Enum

[Description("IMPORTANT: Name is variable C-style array.")]
Public Type KEY_VALUE_BASIC_INFORMATION
    TitleIndex As Long
    Type As Long
    NameLength As Long
    Name(0 To REG_MAX_KEY_NAME_LENGTH) As Integer
End Type

[Description("IMPORTANT: This is a header type only; the members are followed in memory by two variable-length C-style arrays.")]
Public Type KEY_VALUE_FULL_INFORMATION
    TitleIndex As Long
    Type As Long
    DataOffset As Long
    DataLength As Long
    NameLength As Long
    '   _Field_size_bytes_(NameLength) WCHAR Name[1];
    ' ...
    ' UCHAR Data[1];
End Type

[Description("IMPORTANT: Data is variable C-style array.")]
Public Type KEY_VALUE_PARTIAL_INFORMATION
    TitleIndex As Long
    Type As Long
    DataLength As Long
    Data(0 To REG_MAX_KEY_VALUE_NAME_LENGTH) As Byte
End Type

[Description("IMPORTANT: Data is variable C-style array.")]
Public Type KEY_VALUE_PARTIAL_INFORMATION_ALIGN64
    Type As Long
    DataLength As Long
    Data(0 To REG_MAX_KEY_VALUE_NAME_LENGTH) As Byte
End Type

Public Type KEY_VALUE_LAYER_INFORMATION
    ' ULONG IsTombstone : 1;
    ' ULONG Reserved : 31;
    Flags As Long
End Type

Public Enum CM_EXTENDED_PARAMETER_TYPE
    CmExtendedParameterInvalidType
    CmExtendedParameterTrustClassKey
    CmExtendedParameterEvent
    CmExtendedParameterFileAccessToken
    CmExtendedParameterMax
End Enum

Public Const CM_EXTENDED_PARAMETER_TYPE_BITS = 8

' typedef struct DECLSPEC_ALIGN(8) _CM_EXTENDED_PARAMETER
Public Type CM_EXTENDED_PARAMETER
    ' struct
    ' {
        ' ULONG64 Type : CM_EXTENDED_PARAMETER_TYPE_BITS;
        ' ULONG64 Reserved : 64 - CM_EXTENDED_PARAMETER_TYPE_BITS;
    ' };
    uType As LongLong
    ' union
    ' {
        ' ULONG64 ULong64;
        ' PVOID Pointer;
        ' SIZE_T Size;
        ' HANDLE Handle;
        ' ULONG ULong;
        ' ACCESS_MASK AccessMask;
    ' };
    u As LongLong
End Type
 

Public Type KEY_VALUE_ENTRY
    ValueName As LongPtr 'PUNICODE_STRING
    DataLength As Long
    DataOffset As Long
    Type As Long
End Type

Public Enum REG_ACTION
    KeyAdded
    KeyRemoved
    KeyModified
End Enum

[Description("IMPORTANT: This is a header type only; the members are followed in memory by a variable-length C-style array.")]
Public Type REG_NOTIFY_INFORMATION
    NextEntryOffset As Long
    Action As REG_ACTION
    KeyLength As Long
    '    _Field_size_bytes_(KeyLength) WCHAR Key[1];
End Type

Public Type KEY_PID_ARRAY
    ProcessId As LongPtr
    KeyName As UNICODE_STRING
End Type

[Description("IMPORTANT: This is a header type only; the members are followed in memory by a variable-length C-style array.")]
Public Type KEY_OPEN_SUBKEYS_INFORMATION
    Count As Long
    'KeyArray(0 To 0) As KEY_PID_ARRAY
End Type

Public Enum NtLoadKeyExFlags
    NTLKEF_AppKey = &H10
    NTLKEF_Exclusive = &H20
    NTLKEF_Unknown800 = &H800
    NTLKEF_ReadOnly = &H2000
End Enum

[UseGetLastError(False)] Public Declare PtrSafe Function NtCreateKey Lib "ntdll" (KeyHandle As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, ByVal TitleIndex As Long, Class As UNICODE_STRING, ByVal CreateOptions As RegOptions, Disposition As RegistryCreateDispositions) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtCreateKeyTransacted Lib "ntdll" (KeyHandle As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, ByVal TitleIndex As Long, Class As UNICODE_STRING, ByVal CreateOptions As RegOptions, ByVal TransactionHandle As LongPtr, Disposition As RegistryCreateDispositions) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtOpenKey Lib "ntdll" (KeyHandle As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtOpenKeyTransacted Lib "ntdll" (KeyHandle As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, ByVal TransactionHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtOpenKeyEx Lib "ntdll" (KeyHandle As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, ByVal OpenOptions As RegOptions) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtOpenKeyTransactedEx Lib "ntdll" (KeyHandle As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, ByVal OpenOptions As RegOptions, ByVal TransactionHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtDeleteKey Lib "ntdll" (ByVal KeyHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtRenameKey Lib "ntdll" (ByVal KeyHandle As LongPtr, NewName As UNICODE_STRING) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtDeleteValueKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ValueName As UNICODE_STRING) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtQueryKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ByVal KeyInformationClass As KEY_INFORMATION_CLASS, KeyInformation As Any, ByVal Length As Long, ResultLength As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtSetInformationKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ByVal KeySetInformationClass As KEY_SET_INFORMATION_CLASS, KeySetInformation As Any, ByVal KeySetInformationLength As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtQueryValueKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ValueName As UNICODE_STRING, ByVal KeyValueInformationClass As KEY_VALUE_INFORMATION_CLASS, KeyValueInformation As Any, ByVal Length As Long, ResultLength As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtSetValueKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ValueName As UNICODE_STRING, ByVal TitleIndex As Long, ByVal Type As REGTYPES, Data As Any, ByVal DataSize As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtQueryMultipleValueKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ValueEntries As Any, ByVal EntryCount As Long, ValueBuffer As Any, BufferLength As Long, Optional RequiredBufferLength As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtEnumerateKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ByVal Index As Long, ByVal KeyInformationClass As KEY_INFORMATION_CLASS, KeyInformation As Any, ByVal Length As Long, ResultLength As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtEnumerateValueKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ByVal Index As Long, ByVal KeyValueInformationClass As KEY_VALUE_INFORMATION_CLASS, KeyValueInformation As Any, ByVal Length As Long, ResultLength As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtFlushKey Lib "ntdll" (ByVal KeyHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtCompactKeys Lib "ntdll" (ByVal Count As Long, KeyArray As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtCompressKey Lib "ntdll" (ByVal KeyHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtLoadKey Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES, SourceFile As OBJECT_ATTRIBUTES) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtLoadKey2 Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES, SourceFile As OBJECT_ATTRIBUTES, ByVal Flags As RegKeyRestoreAndLoadHiveFlags) As NTSTATUS
[Description("NOTE: This function existed prior to Vista but only had 4 arguments.")]
[UseGetLastError(False)] Public Declare PtrSafe Function NtLoadKeyEx Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES, SourceFile As OBJECT_ATTRIBUTES, ByVal Flags As NtLoadKeyExFlags, ByVal TrustClassKey As LongPtr, ByVal Event As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, RootHandle As LongPtr, ByVal Reserved As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtLoadKey3 Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES, SourceFile As OBJECT_ATTRIBUTES, ByVal Flags As RegKeyRestoreAndLoadHiveFlags, ExtendedParameters As CM_EXTENDED_PARAMETER, ByVal ExtendedParameterCount As Long, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, RootHandle As LongPtr, ByVal Reserved As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtReplaceKey Lib "ntdll" (NewFile As OBJECT_ATTRIBUTES, ByVal TargetHandle As LongPtr, OldFile As OBJECT_ATTRIBUTES) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtSaveKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ByVal FileHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtSaveKeyEx Lib "ntdll" (ByVal KeyHandle As LongPtr, ByVal FileHandle As LongPtr, ByVal Format As RegSaveKeyFlags) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtSaveMergedKeys Lib "ntdll" (ByVal HighPrecedenceKeyHandle As LongPtr, ByVal LowPrecedenceKeyHandle As LongPtr, ByVal FileHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtRestoreKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ByVal FileHandle As LongPtr, ByVal Flags As RegKeyRestoreAndLoadHiveFlags) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtUnloadKey Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtUnloadKey2 Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES, ByVal Flags As RegUnloadFlags) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtUnloadKeyEx Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES, ByVal Event As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtNotifyChangeKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ByVal Event As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, IoStatusBlock As IO_STATUS_BLOCK, ByVal CompletionFilter As RegNotifyChangeValues, ByVal WatchTree As Byte, Buffer As Any, ByVal BufferSize As Long, ByVal Asynchronous As Byte) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtNotifyChangeMultipleKeys Lib "ntdll" (ByVal MasterKeyHandle As LongPtr, ByVal Count As Long, SubordinateObjects As OBJECT_ATTRIBUTES, ByVal Event As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, IoStatusBlock As IO_STATUS_BLOCK, ByVal CompletionFilter As RegNotifyChangeValues, ByVal WatchTree As Byte, Buffer As Any, ByVal BufferSize As Long, ByVal Asynchronous As Byte) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtQueryOpenSubKeys Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES, HandleCount As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtQueryOpenSubKeysEx Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES, ByVal BufferLength As Long, Buffer As Any, RequiredSize As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtInitializeRegistry Lib "ntdll" (ByVal BootCondition As Integer) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtLockRegistryKey Lib "ntdll" (ByVal KeyHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtLockProductActivationKeys Lib "ntdll" (pPrivateVer As Long, pSafeMode As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtFreezeRegistry Lib "ntdll" (ByVal TimeOutInSeconds As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtThawRegistry Lib "ntdll" () As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtCreateRegistryTransaction Lib "ntdll" (RegistryTransactionHandle As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, ObjAttributes As OBJECT_ATTRIBUTES, ByVal CreateOptions As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtOpenRegistryTransaction Lib "ntdll" (RegistryTransactionHandle As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, ObjAttributes As OBJECT_ATTRIBUTES) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtCommitRegistryTransaction Lib "ntdll" (ByVal RegistryTransactionHandle As LongPtr, ByVal Flags As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function NtRollbackRegistryTransaction Lib "ntdll" (ByVal RegistryTransactionHandle As LongPtr, ByVal Flags As Long) As NTSTATUS

Public Enum RtlQueryRegistryFlags
    RTL_QUERY_REGISTRY_SUBKEY = &H00000001  ' Name is a subkey and remainder of
                                            '  table or until next subkey are value
                                            '  names for that subkey to look at.
    RTL_QUERY_REGISTRY_TOPKEY = &H00000002  ' Reset current key to original key for
                                            '  this and all following table entries.
    RTL_QUERY_REGISTRY_REQUIRED = &H00000004  ' Fail if no match found for this table
                                              '  entry.
    RTL_QUERY_REGISTRY_NOVALUE = &H00000008  ' Used to mark a table entry that has no
                                             '  value name, just wants a call out, not
                                             '  an enumeration of all values.
    RTL_QUERY_REGISTRY_NOEXPAND = &H00000010    ' Used to suppress the expansion of
                                                '  REG_MULTI_SZ into multiple callouts or
                                                '  to prevent the expansion of environment
                                                '  variable values in REG_EXPAND_SZ
    RTL_QUERY_REGISTRY_DIRECT = &H00000020  ' QueryRoutine field ignored.  EntryContext
                                            '  field points to location to store value.
                                            '  For null terminated strings, EntryContext
                                            '  points to UNICODE_STRING structure that
                                            '  that describes maximum size of buffer.
                                            '  If .Buffer field is NULL then a buffer is
                                            '  allocated.
    RTL_QUERY_REGISTRY_DELETE = &H00000040  ' Used to delete value keys after they
                                            '  are queried.
    RTL_QUERY_REGISTRY_NOSTRING = &H00000080    ' THIS IS DEPRECATED - use RTL_QUERY_REGISTRY_TYPECHECK
                                                '  Used with RTL_QUERY_REGISTRY_DIRECT in
                                                '  cases where the caller expects a
                                                '  non-string value.  Otherwise, the
                                                '  assumption that EntryContext points to
                                                '  a UNICODE_STRING structure can overrun
                                                '  the caller's buffer.
    RTL_QUERY_REGISTRY_TYPECHECK = &H00000100   ' Used with RTL_QUERY_REGISTRY_DIRECT to
                                                '  validate the registry value type
                                                '  expected by caller with actual type thats
                                                '  read from the registry.
                                                '  Use the most significant byte of DefaultType from QueryTable, as the
                                                '  caller's expected REG_TYPE
    RTL_QUERY_REGISTRY_TYPECHECK_SHIFT = 24
    RTL_QUERY_REGISTRY_TYPECHECK_MASK = (&Hff << RTL_QUERY_REGISTRY_TYPECHECK_SHIFT)
End Enum
Public Delegate Function RTL_QUERY_REGISTRY_ROUTINE (ByVal ValueName As LongPtr, ByVal ValueType As Long, ByVal ValueData As LongPtr, ByVal ValueLength As Long, ByVal Context As LongPtr, ByVal EntryContext As LongPtr) As NTSTATUS
Public Type RTL_QUERY_REGISTRY_TABLE
    ' #If WINDEVLIB_NO_DELEGATES Then
    QueryRoutine As LongPtr
    ' #Else
    ' QueryRoutine As RTL_QUERY_REGISTRY_ROUTINE
    ' #End If
    Flags As RtlQueryRegistryFlags
    Name As LongPtr
    EntryContext As LongPtr
    DefaultType As Long
    DefaultData As LongPtr
    DefaultLength As Long
End Type
Public Enum RtlRegistryRelativeTo
    RTL_REGISTRY_ABSOLUTE = 0  ' Path is a full path
    RTL_REGISTRY_SERVICES = 1  ' \Registry\Machine\System\CurrentControlSet\Services
    RTL_REGISTRY_CONTROL = 2  ' \Registry\Machine\System\CurrentControlSet\Control
    RTL_REGISTRY_WINDOWS_NT = 3  ' \Registry\Machine\Software\Microsoft\Windows NT\CurrentVersion
    RTL_REGISTRY_DEVICEMAP = 4  ' \Registry\Machine\Hardware\DeviceMap
    RTL_REGISTRY_USER = 5  ' \Registry\User\CurrentUser
    RTL_REGISTRY_MAXIMUM = 6
    RTL_REGISTRY_HANDLE = &H40000000  ' Low order bits are registry handle
    RTL_REGISTRY_OPTIONAL = &H80000000  ' Indicates the key node is optional
End Enum
[UseGetLastError(False)] Public Declare PtrSafe Function RtlCheckRegistryKey Lib "ntdll" (ByVal RelativeTo As RtlRegistryRelativeTo, ByVal Path As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlCreateRegistryKey Lib "ntdll" (ByVal RelativeTo As RtlRegistryRelativeTo, ByVal Path As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlDeleteRegistryValue Lib "ntdll" (ByVal RelativeTo As RtlRegistryRelativeTo, ByVal Path As LongPtr, ByVal ValueName As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlWriteRegistryValue Lib "ntdll" (ByVal RelativeTo As RtlRegistryRelativeTo, ByVal Path As LongPtr, ByVal ValueName As LongPtr, ByVal ValueType As REGTYPES, Value As Any, ByVal ValueLength As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlQueryRegistryValues Lib "ntdll" (ByVal RelativeTo As RtlRegistryRelativeTo, ByVal Path As LongPtr, QueryTable As RTL_QUERY_REGISTRY_TABLE, Optional ByVal Context As LongPtr = 0, Optional ByVal Environment As LongPtr = 0) As NTSTATUS


' typedef union _SE_SID {
    ' SID Sid;
    ' BYTE Buffer[SECURITY_MAX_SID_SIZE];
' } SE_SID, *PSE_SID;
Public Type SE_SID
    Buffer(0 To (SECURITY_MAX_SID_SIZE - 1)) As Byte
End Type

Public Enum AlpcImpersonateFlags
    ALPC_IMPERSONATE_ALLOW_ANONYMOUS = 1
    ALPC_IMPERSONATE_LEVEL = 2
End Enum

Public Type RTL_SRWLOCK
    ' union
    ' {
        ' struct
        ' {
            ' ULONG Locked:1;                                                 //0x0
            ' ULONG Waiting:1;                                                //0x0
            ' ULONG Waking:1;                                                 //0x0
            ' ULONG MultipleShared:1;                                         //0x0
            ' ULONG Shared:28;                                                //0x0
        ' };
        ' ULONG Value;                                                        //0x0
        ' VOID* Ptr;                                                          //0x0
    ' };
    ValueOrPtr As LongPtr
End Type

Public Type RTL_MEMORY_ZONE_SEGMENT
    NextSegment As LongPtr 'struct _RTL_MEMORY_ZONE_SEGMENT
    Size As LongPtr
    Next As LongPtr
    Limit As LongPtr
End Type
Public Type RTL_MEMORY_ZONE
    Segment As RTL_MEMORY_ZONE_SEGMENT
    Lock As RTL_SRWLOCK
    LockCount As Long
    FirstSegment As LongPtr 'PRTL_MEMORY_ZONE_SEGMENT
End Type


[UseGetLastError(False)] Public Declare PtrSafe Function RtlAdjustPrivilege Lib "ntdll" (ByVal Privilege As NTDefinedPrivilegeConsts, ByVal Enable As Byte, ByVal CurrentThread As Byte, Enabled As Byte) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlFreeUnicodeString Lib "ntdll" (UnicodeString As UNICODE_STRING)
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlFreeAnsiString Lib "ntdll" (AnsiString As ANSI_STRING)
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlFreeOemString Lib "ntdll" (OemString As OEM_STRING)
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlInitUnicodeString Lib "ntdll" (DestinationString As Any, ByVal SourceString As LongPtr)
Public Sub RtlInitEmptyUnicodeString(DestinationString As UNICODE_STRING, ByVal Buffer As LongPtr, ByVal MaximumLength As Integer)
    ZeroMemory DestinationString, LenB(Of UNICODE_STRING)
    DestinationString.MaximumLength = MaximumLength
    DestinationString.Buffer = Buffer
End Sub
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlInitAnsiString Lib "ntdll" (DestinationString As Any, ByVal SourceString As LongPtr)
[UseGetLastError(False)] Public Declare PtrSafe Function RtlInitAnsiStringEx Lib "ntdll" (DestinationString As ANSI_STRING, ByVal SourceString As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlUpcaseUnicodeString Lib "ntdll" (DestinationString As UNICODE_STRING, SourceString As UNICODE_STRING, ByVal AllocateDestinationString As Byte) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlEqualUnicodeString Lib "ntdll" (String1 As UNICODE_STRING, String2 As UNICODE_STRING, ByVal CaseInSensitive As Byte) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Function RtlCompareUnicodeString Lib "ntdll" (String1 As UNICODE_STRING, String2 As UNICODE_STRING, ByVal CaseInSensitive As Byte) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Function RtlAnsiStringToUnicodeString Lib "ntdll" (DestinationString As UNICODE_STRING, SourceString As ANSI_STRING, ByVal AllocateDestinationString As Byte) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlUnicodeStringToAnsiString Lib "ntdll" (DestinationString As ANSI_STRING, SourceString As UNICODE_STRING, ByVal AllocateDestinationString As Byte) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlUnicodeStringToOemString Lib "ntdll" (DestinationString As OEM_STRING, SourceString As UNICODE_STRING, ByVal AllocateDestinationString As Byte) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlUnicodeToMultiByteSize Lib "ntdll" (BytesInMultiByteString As Long, ByVal UnicodeString As LongPtr, ByVal BytesInUnicodeString As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlCharToInteger Lib "ntdll" (ByVal Str As String, ByVal Base As Long, Value As Long) As NTSTATUS

Public Const LOGONID_CURRENT As Long = -1&
Public Const SERVERNAME_CURRENT As LongPtr = 0

[UseGetLastError(False)] Public Declare PtrSafe Function CompareMemory Lib "ntdll" Alias "RtlCompareMemory" (Source1 As Any, Source2 As Any, ByVal Length As LongPtr) As LongPtr
[UseGetLastError(False)] Public Declare PtrSafe Function RtlCompareMemory Lib "ntdll" (Source1 As Any, Source2 As Any, ByVal Length As LongPtr) As LongPtr
Public Function EqualMemory(ByVal Source1 As LongPtr, ByVal Source2 As LongPtr, ByVal Length As LongPtr) As Boolean: Return (RtlCompareMemory(ByVal Source1, ByVal Source2, Length) = Length): End Function
Public Function RtlEqualMemory(ByVal Source1 As LongPtr, ByVal Source2 As LongPtr, ByVal Length As LongPtr) As Boolean: Return (RtlCompareMemory(ByVal Source1, ByVal Source2, Length) = Length): End Function
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIsZeroMemory Lib "ntdll" (Buffer As Any, ByVal Length As LongPtr) As Byte 'BOOLEAN
[Description("Returns true Windows version. Takes either OSVERSIONINFO or OSVERSIONINFOEX types (RTL_OSV... is an alias for these).")]
[UseGetLastError(False)] Public Declare PtrSafe Function RtlGetVersion Lib "ntdll" (lpVersionInformation As Any) As Long
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlGetNtVersionNumbers Lib "ntdll" (Major As Long, Minor As Long, Build As Long)
[UseGetLastError(False)] Public Declare PtrSafe Function RtlDosPathNameToNtPathName_U Lib "ntdll" (ByVal DosFileName As LongPtr, NtFileName As UNICODE_STRING, FilePart As LongPtr, RelativeName As Any) As Boolean
[UseGetLastError(False)] Public Declare PtrSafe Function RtlGetCurrentPeb Lib "ntdll" () As LongPtr
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlAcquirePebLock Lib "ntdll" ()
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlReleasePebLock Lib "ntdll" ()
[UseGetLastError(False)] Public Declare PtrSafe Function RtlNtStatusToDosError Lib "ntdll" (ByVal ntStatus As NTSTATUS) As Long
[Description("Generates a uniform random number using D.H. Lehmer's 1948 algorithm.")]
[UseGetLastError(False)] Public Declare PtrSafe Function RtlUniform Lib "ntdll" (Seed As Long) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlImageNtHeader Lib "ntdll" (ByVal ModuleBase As LongPtr) As LongPtr
[UseGetLastError(False)] Public Declare PtrSafe Function RtlImageRvaToVa Lib "ntdll" (ByVal NtHeaders As LongPtr, ByVal ModuleBase As LongPtr, ByVal Rva As Long, pLastSection As IMAGE_SECTION_HEADER) As LongPtr
[UseGetLastError(False)] Public Declare PtrSafe Function RtlImageRvaToSection Lib "ntdll" (nt As IMAGE_NT_HEADERS, ByVal BaseAddress As LongPtr, ByVal rva As Long) As LongPtr
[UseGetLastError(False)] Public Declare PtrSafe Function RtlImageDirectoryEntryToData Lib "ntdll" (ByVal BaseAddress As LongPtr, ByVal MappedAsImage As Byte, [TypeHint(ImageDirectories)] ByVal Directory As Integer, size As Long) As LongPtr
[UseGetLastError(False)] Public Declare PtrSafe Function RtlGetNtGlobalFlags Lib "ntdll" () As NTGLB_Flags
[UseGetLastError(False)] Public Declare PtrSafe Function RtlAllocateHeap Lib "ntdll" (ByVal HeapHandle As LongPtr, ByVal Flags As HeapFlags, ByVal Size As LongPtr) As LongPtr
[UseGetLastError(False)] Public Declare PtrSafe Function RtlCreateHeap Lib "ntdll" (ByVal Flags As HeapFlags, ByVal HeapBase As LongPtr, ByVal ReserveSize As LongPtr, ByVal CommitSize As LongPtr, ByVal Lock As LongPtr, Parameters As RTL_HEAP_PARAMETERS) As LongPtr
[UseGetLastError(False)] Public Declare PtrSafe Function RtlFreeHeap Lib "ntdll" (ByVal HeapHandle As LongPtr, ByVal Flags As HeapFlags, ByVal BaseAddress As LongPtr) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlDestroyHeap Lib "ntdll" (ByVal HeapHandle As LongPtr) As LongPtr
[UseGetLastError(False)] Public Declare PtrSafe Function RtlCreateProcessParametersEx Lib "ntdll" (pProcessParameters As Any, ImagePathName As UNICODE_STRING, DllPath As UNICODE_STRING, CurrentDirectory As UNICODE_STRING, CommandLine As UNICODE_STRING, _
                                                Environment As Any, WindowTitle As UNICODE_STRING, DesktopInfo As UNICODE_STRING, ShellInfo As UNICODE_STRING, RuntimeData As UNICODE_STRING, ByVal Flags As RTL_UPP_FLAGS) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlCreateProcessParameters Lib "ntdll" (pProcessParameters As Any, ImagePathName As UNICODE_STRING, DllPath As UNICODE_STRING, CurrentDirectory As UNICODE_STRING, CommandLine As UNICODE_STRING, _
                                                ByVal Environment As LongPtr, WindowTitle As UNICODE_STRING, DesktopInfo As UNICODE_STRING, ShellInfo As UNICODE_STRING, RuntimeData As UNICODE_STRING) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlCreateEnvironment Lib "ntdll" (ByVal bInherit As Byte, Environment As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlDestroyProcessParameters Lib "ntdll" (pProcessParameters As Any) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlQueryModuleInformation Lib "ntdll" (InformationLength As Long, ByVal SizePerModule As Long, InformationBuffer As Any) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlCrc32 Lib "ntdll" (Buffer As Any, ByVal size As LongPtr, ByVal InitialCrc As Long) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlCrc64 Lib "ntdll" (Buffer As Any, ByVal size As LongPtr, ByVal InitialCrc As LongLong) As LongLong
[UseGetLastError(False)] Public Declare PtrSafe Function RtlCompressBuffer Lib "ntdll" ([TypeHint(NT_COMPRESSION_FORMAT)] ByVal CompressionFormatAndEngine As Integer, UncompressedBuffer As Any, ByVal UncompressedBufferSize As Long, CompressedBuffer As Any, ByVal CompressedBufferSize As Long, ByVal UncompressedChunkSize As Long, FinalCompressedSize As Long, ByVal Workspace As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlDecompressBuffer Lib "ntdll" ([TypeHint(NT_COMPRESSION_FORMAT)] ByVal CompressionFormat As Integer, UncompressedBuffer As Any, ByVal UncompressedBufferSize As Long, CompressedBuffer As Any, ByVal CompressedBufferSize As Long, FinalUncompressedSize As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlDecompressBufferEx Lib "ntdll" ([TypeHint(NT_COMPRESSION_FORMAT)] ByVal CompressionFormat As Integer, UncompressedBuffer As Any, ByVal UncompressedBufferSize As Long, CompressedBuffer As Any, ByVal CompressedBufferSize As Long, FinalUncompressedSize As Long, ByVal Workspace As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlDecompressBufferEx2 Lib "ntdll" ([TypeHint(NT_COMPRESSION_FORMAT)] ByVal CompressionFormat As Integer, UncompressedBuffer As Any, ByVal UncompressedBufferSize As Long, CompressedBuffer As Any, ByVal CompressedBufferSize As Long, ByVal UncompressedChunkSize As Long, FinalUncompressedSize As Long, ByVal Workspace As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlDecompressFragment Lib "ntdll" ([TypeHint(NT_COMPRESSION_FORMAT)] ByVal CompressionFormat As Integer, UncompressedFragment As Any, ByVal UncompressedFragmentSize As Long, CompressedBuffer As Any, ByVal CompressedBufferSize As Long, ByVal FragmentOffset As Long, FinalUncompressedSize As Long, ByVal Workspace As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlDecompressFragmentEx Lib "ntdll" ([TypeHint(NT_COMPRESSION_FORMAT)] ByVal CompressionFormat As Integer, UncompressedFragment As Any, ByVal UncompressedFragmentSize As Long, CompressedBuffer As Any, ByVal CompressedBufferSize As Long, ByVal FragmentOffset As Long, ByVal UncompressedChunkSize As Long, FinalUncompressedSize As Long, ByVal Workspace As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlGetCompressionWorkSpaceSize Lib "ntdll" ([TypeHint(NT_COMPRESSION_FORMAT)] ByVal CompressionFormatAndEngine As Integer, CompressBufferWorkSpaceSize As Long, CompressFragmentWorkSpaceSize As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlGetDeviceFamilyInfoEnum Lib "ntdll" (pullUAPInfo As LongLong, pulDeviceFamily As DEVICEFAMILYINFOENUM, pulDeviceForm As DEVICEFAMILYDEVICEFORM)
[UseGetLastError(False)] Public DeclareWide PtrSafe Function RtlConvertDeviceFamilyInfoToString Lib "ntdll" (pulDeviceFamilyBufferSize As Long, pulDeviceFormBufferSize As Long, ByVal DeviceFamily As String, ByVal DeviceForm As String) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlCreateUserThread Lib "ntdll" (ByVal ProcessHandle As LongPtr, SecurityDescriptor As SECURITY_DESCRIPTOR, ByVal CreateSuspended As Byte, ByVal StackZeroBits As Long, ByVal StackReserve As LongPtr, ByVal StackCommit As LongPtr, ByVal StartAddress As LongPtr, Parameter As Any, ThreadHandle As LongPtr, ClientId As CLIENT_ID) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlTimeFieldsToTime Lib "ntdll" (TimeFields As TIME_FIELDS, pTime As LARGE_INTEGER) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlTimeToTimeFields Lib "ntdll" (pTime As LARGE_INTEGER, TimeFields As TIME_FIELDS)
[UseGetLastError(False)] Public Declare PtrSafe Function RtlInitializeCorrelationVector Lib "ntdll" (CorrelationVector As CORRELATION_VECTOR, ByVal Version As Long, Guid As UUID) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIncrementCorrelationVector Lib "ntdll" (CorrelationVector As CORRELATION_VECTOR) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlExtendCorrelationVector Lib "ntdll" (CorrelationVector As CORRELATION_VECTOR) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlValidateCorrelationVector Lib "ntdll" (CorrelationVector As CORRELATION_VECTOR) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlCaptureStackBackTrace Lib "ntdll" (ByVal FramesToSkip As Long, ByVal FramesToCapture As Long, BackTrace As LongPtr, Optional BackTraceHash As Long) As Integer
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlUnwind Lib "ntdll" (ByVal TargetFrame As LongPtr, ByVal TargetIp As LongPtr, ExceptionRecord As EXCEPTION_RECORD, ByVal ReturnValue As LongPtr)
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlUnwindEx Lib "ntdll" (ByVal TargetFrame As LongPtr, ByVal TargetIp As LongPtr, ExceptionRecord As EXCEPTION_RECORD, ByVal ReturnValue As LongPtr, ContextRecord As _CONTEXT, HistoryTable As UNWIND_HISTORY_TABLE)
[UseGetLastError(False)] Public Declare PtrSafe Function RtlQueryElevationFlags Lib "ntdll" (pFlags As ElevationFlags) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlAddFunctionTable CDecl Lib "ntdll" (FunctionTable As RUNTIME_FUNCTION, ByVal EntryCount As Long, ByVal BaseAddress As LongLong) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Function RtlDeleteFunctionTable CDecl Lib "ntdll" (FunctionTable As RUNTIME_FUNCTION) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Function RtlInstallFunctionTableCallback CDecl Lib "ntdll" (ByVal TableIdentifier As LongLong, ByVal BaseAddress As LongLong, ByVal Length As Long, ByVal Callback As LongPtr, ByVal Context As LongPtr, ByVal OutOfProcessCallbackDll As LongPtr) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Function RtlLookupFunctionEntry Lib "ntdll" (ByVal ControlPc As LongLong, ImageBase As LongLong, HistoryTable As UNWIND_HISTORY_TABLE) As LongPtr
[UseGetLastError(False)] Public Declare PtrSafe Function RtlGetSystemGlobalData Lib "ntdll" (ByVal DataId As RTL_SYSTEM_GLOBAL_DATA_ID, Buffer As Any, ByVal Size As Long) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlSetSystemGlobalData Lib "ntdll" (ByVal DataId As RTL_SYSTEM_GLOBAL_DATA_ID, Buffer As Any, ByVal Size As Long) As Long
[Description("While MSDN asserts this as required for accessing the NtSystemRoot field of KUSER_SHARED_DATA, a field present since NT4, it's only available in Win10 RS2+")]
[UseGetLastError(False)] Public Declare PtrSafe Function RtlGetNtSystemRoot Lib "ntdll" () As LongPtr
[UseGetLastError(False)] Public Declare PtrSafe Function RtlTimeToSecondsSince1970 Lib "ntdll" (Time As LARGE_INTEGER, ElapsedSeconds As Long) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Function RtlConvertSidToUnicodeString Lib "ntdll" (UnicodeString As UNICODE_STRING, ByVal Sid As LongPtr, ByVal AllocateDestinationString As Byte) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlLengthSidAsUnicodeString Lib "ntdll" (ByVal Sid As LongPtr, StringLength As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlValidSid Lib "ntdll" (ByVal Sid As LongPtr) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Function RtlEqualSid Lib "ntdll" (ByVal Sid1 As LongPtr, ByVal Sid2 As LongPtr) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Function RtlEqualPrefixSid Lib "ntdll" (ByVal Sid1 As LongPtr, ByVal Sid2 As LongPtr) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Function RtlAllocateAndInitializeSid Lib "ntdll" (IdentifierAuthority As SID_IDENTIFIER_AUTHORITY, ByVal SubAuthorityCount As Byte, ByVal SubAuthority0 As Long, ByVal SubAuthority1 As Long, ByVal SubAuthority2 As Long, ByVal SubAuthority3 As Long, ByVal SubAuthority4 As Long, ByVal SubAuthority5 As Long, ByVal SubAuthority6 As Long, ByVal SubAuthority7 As Long, psid As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlAllocateAndInitializeSidEx Lib "ntdll" (IdentifierAuthority As SID_IDENTIFIER_AUTHORITY, ByVal SubAuthorityCount As Byte, SubAuthorities As Long, psid As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlFreeSid Lib "ntdll" (ByVal psid As LongPtr) As LongPtr
[UseGetLastError(False)] Public Declare PtrSafe Function RtlInitializeSid Lib "ntdll" (ByVal Sid As LongPtr, IdentifierAuthority As SID_IDENTIFIER_AUTHORITY, ByVal SubAuthorityCount As Byte) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlInitializeSidEx CDecl Lib "ntdll" (ByVal Sid As LongPtr, IdentifierAuthority As SID_IDENTIFIER_AUTHORITY, ByVal SubAuthorityCount As Byte, ByVal ParamArray vargs As Any()) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlCreateServiceSid Lib "ntdll" (ServiceName As UNICODE_STRING, ByVal ServiceSid As LongPtr, ServiceSidLength As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlImpersonateSelf Lib "ntdll" (ByVal ImpersonationLevel As SECURITY_IMPERSONATION_LEVEL) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlImpersonateSelfEx Lib "ntdll" (ByVal ImpersonationLevel As SECURITY_IMPERSONATION_LEVEL, ByVal AdditionalAccess As TokenAccessRights, Optional ThreadToken As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlDeriveCapabilitySidsFromName Lib "ntdll" (UnicodeString As UNICODE_STRING, ByVal CapabilityGroupSid As LongPtr, ByVal CapabilitySid As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIsElevatedRid Lib "ntdll" (SidAttr As SID_AND_ATTRIBUTES) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Function RtlSidHashLookup Lib "ntdll" (SidAttrHash As SID_AND_ATTRIBUTES_HASH, ByVal Sid As LongPtr) As LongPtr
[UseGetLastError(False)] Public Declare PtrSafe Function RtlSidHashInitialize Lib "ntdll" (SidAttr As SID_AND_ATTRIBUTES, ByVal SidCount As Long, SidAttrHash As SID_AND_ATTRIBUTES_HASH) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlDefaultNpAcl Lib "ntdll" (Acl As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlNewSecurityObject Lib "ntdll" (ParentDescriptor As SECURITY_DESCRIPTOR, CreatorDescriptor As SECURITY_DESCRIPTOR, NewDescriptor As LongPtr, ByVal IsDirectoryObject As Byte, ByVal Token As LongPtr, GenericMapping As GENERIC_MAPPING) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlNewSecurityObjectEx Lib "ntdll" (ParentDescriptor As SECURITY_DESCRIPTOR, CreatorDescriptor As SECURITY_DESCRIPTOR, NewDescriptor As LongPtr, ObjectType As UUID, ByVal IsDirectoryObject As Byte, ByVal AutoInheritFlags As SEF_FLAGS, ByVal Token As LongPtr, GenericMapping As GENERIC_MAPPING) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlCreateSecurityDescriptor Lib "ntdll" (SecurityDescriptor As SECURITY_DESCRIPTOR, ByVal Revision As Long) As NTSTATUS
Public Declare PtrSafe Function RtlValidSecurityDescriptor Lib "ntdll" (SecurityDescriptor As SECURITY_DESCRIPTOR) As Byte
Public Declare PtrSafe Function RtlLengthSecurityDescriptor Lib "ntdll" (SecurityDescriptor As SECURITY_DESCRIPTOR) As Long
Public Declare PtrSafe Function RtlValidRelativeSecurityDescriptor Lib "ntdll" (SecurityDescriptorInput As SECURITY_DESCRIPTOR, ByVal SecurityDescriptorLength As Long, ByVal RequiredInformation As SECURITY_INFORMATION) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Function RtlGetControlSecurityDescriptor Lib "ntdll" (SecurityDescriptor As SECURITY_DESCRIPTOR, [TypeHint(SECURITY_DESCRIPTOR_CONTROL)] Control As Integer, Revision As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlSetControlSecurityDescriptor Lib "ntdll" (SecurityDescriptor As SECURITY_DESCRIPTOR, [TypeHint(SECURITY_DESCRIPTOR_CONTROL)] ByVal ControlBitsOfInterest As Integer, [TypeHint(SECURITY_DESCRIPTOR_CONTROL)] ByVal ControlBitsToSet As Integer) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlSetDaclSecurityDescriptor Lib "ntdll" (SecurityDescriptor As SECURITY_DESCRIPTOR, ByVal DaclPresent As Byte, ByVal Dacl As LongPtr, ByVal DaclDefaulted As Byte) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlSetSaclSecurityDescriptor Lib "ntdll" (SecurityDescriptor As SECURITY_DESCRIPTOR, ByVal SaclPresent As Byte, ByVal Sacl As LongPtr, ByVal SaclDefaulted As Byte) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlGetDaclSecurityDescriptor Lib "ntdll" (SecurityDescriptor As SECURITY_DESCRIPTOR, DaclPresent As Byte, Dacl As LongPtr, DaclDefaulted As Byte) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlGetSaclSecurityDescriptor Lib "ntdll" (SecurityDescriptor As SECURITY_DESCRIPTOR, SaclPresent As Byte, Sacl As LongPtr, SaclDefaulted As Byte) As NTSTATUS

[UseGetLastError(False)] Public Declare PtrSafe Function RtlCreateMemoryZone Lib "ntdll" (MemoryZone As LongPtr, ByVal InitializeSize As LongPtr, ByVal Flags As Long) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlAllocateMemoryZone Lib "ntdll" (ByVal MemoryZone As LongPtr, ByVal BlockSize As LongPtr, Block As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlExtendMemoryZone Lib "ntdll" (ByVal MemoryZone As LongPtr, ByVal Increment As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlDestroyMemoryZone Lib "ntdll" (ByVal MemoryZone As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlResetMemoryZone Lib "ntdll" (ByVal MemoryZone As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlLockMemoryZone Lib "ntdll" (ByVal MemoryZone As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlUnlockMemoryZone Lib "ntdll" (ByVal MemoryZone As LongPtr) As NTSTATUS
Public Declare PtrSafe Function RtlIsNameLegalDOS8Dot3 Lib "ntdll" (Name As UNICODE_STRING, OemName As OEM_STRING, NameContainsSpaces As Byte) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Function RtlLocalTimeToSystemTime Lib "ntdll" (LocalTime As LARGE_INTEGER, SystemTime As LARGE_INTEGER) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlInitializeBitMap Lib "ntdll" (BitmapHeader As RTL_BITMAP, BitmapBuffer As Any, ByVal SizeOfBitmap As Long)
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlClearBit Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal BitNumber As Long)
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlSetBit Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal BitNumber As Long)
[UseGetLastError(False)] Public Declare PtrSafe Function RtlTestBit Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal BitNumber As Long) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlClearAllBits Lib "ntdll" (BitmapHeader As RTL_BITMAP)
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlSetAllBits Lib "ntdll" (BitmapHeader As RTL_BITMAP)
[UseGetLastError(False)] Public Declare PtrSafe Function RtlFindClearBits Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal NumberToFind As Long, ByVal HintIndex As Long) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlFindSetBits Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal NumberToFind As Long, ByVal HintIndex As Long) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlFindClearBitsAndSet Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal NumberToFind As Long, ByVal HintIndex As Long) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlFindSetBitsAndClear Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal NumberToFind As Long, ByVal HintIndex As Long) As Long
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlClearBits Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal StartingIndex As Long, ByVal NumberToClear As Long)
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlSetBits Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal StartingIndex As Long, ByVal NumberToSet As Long)
[UseGetLastError(False)] Public Declare PtrSafe Function RtlFindMostSignificantBit Lib "ntdll" (ByVal Set As LongLong) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Function RtlFindLeastSignificantBit Lib "ntdll" (ByVal Set As LongLong) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Function RtlFindClearRuns Lib "ntdll" (BitmapHeader As RTL_BITMAP, RunArray As RTL_BITMAP_RUN, ByVal SizeOfRunArray As Long, ByVal LocateLongestRuns As Byte) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlFindLongestRunClear Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal StartingIndex As Long) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlFindFirstRunClear Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal StartingIndex As Long) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlCheckBit Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal BitPosition As Long) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Function RtlNumberOfClearBits Lib "ntdll" (BitmapHeader As RTL_BITMAP) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlNumberOfSetBits Lib "ntdll" (BitmapHeader As RTL_BITMAP) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlAreBitsClear Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal StartingIndex As Long, ByVal Length As Long) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Function RtlAreBitsSet Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal StartingIndex As Long, ByVal Length As Long) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Function RtlFindNextForwardRunClear Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal FromIndex As Long, StartingRunIndex As Long) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlFindLastBackwardRunClear Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal FromIndex As Long, StartingRunIndex As Long) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlNumberOfSetBitsUlongPtr Lib "ntdll" (ByVal Target As LongPtr) As Long
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlInterlockedClearBitRun Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal StartingIndex As Long, ByVal NumberToClear As Long)
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlInterlockedSetBitRun Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal StartingIndex As Long, ByVal NumberToSet As Long)
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlCopyBitMap Lib "ntdll" (Source As RTL_BITMAP, Destination As RTL_BITMAP, ByVal TargetBit As Long)
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlExtractBitMap Lib "ntdll" (Source As RTL_BITMAP, Destination As RTL_BITMAP, ByVal TargetBit As Long, ByVal NumberOfBits As Long)
[UseGetLastError(False)] Public Declare PtrSafe Function RtlNumberOfClearBitsInRange Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal StartingIndex As Long, ByVal Length As Long) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlNumberOfSetBitsInRange Lib "ntdll" (BitmapHeader As RTL_BITMAP, ByVal StartingIndex As Long, ByVal Length As Long) As Long
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlInitializeBitMapEx Lib "ntdll" (BitmapHeader As RTL_BITMAP_EX, BitMapBuffer As Any, ByVal SizeOfBitMap As LongLong)
[UseGetLastError(False)] Public Declare PtrSafe Function RtlTestBitEx Lib "ntdll" (BitmapHeader As RTL_BITMAP_EX, ByVal BitNumber As LongLong) As Byte
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlClearAllBitsEx Lib "ntdll" (BitmapHeader As RTL_BITMAP_EX)
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlClearBitEx Lib "ntdll" (BitmapHeader As RTL_BITMAP_EX, ByVal BitNumber As LongLong)
[UseGetLastError(False)] Public Declare PtrSafe Sub RtlSetBitEx Lib "ntdll" (BitmapHeader As RTL_BITMAP_EX, ByVal BitNumber As LongLong)
[UseGetLastError(False)] Public Declare PtrSafe Function RtlFindSetBitsEx Lib "ntdll" (BitmapHeader As RTL_BITMAP_EX, ByVal NumberToFind As LongLong, ByVal HintIndex As LongLong) As LongLong
[UseGetLastError(False)] Public Declare PtrSafe Function RtlFindSetBitsAndClearEx Lib "ntdll" (BitmapHeader As RTL_BITMAP_EX, ByVal NumberToFind As LongLong, ByVal HintIndex As LongLong) As LongLong

Public Type RTL_DEBUG_INFORMATION
    SectionHandleClient As LongPtr
    ViewBaseClient As LongPtr
    ViewBaseTarget As LongPtr
    ViewBaseDelta As LongPtr
    EventPairClient As LongPtr
    EventPairTarget As LongPtr
    TargetProcessId As LongPtr
    TargetThreadHandle As LongPtr
    Flags As Long
    OffsetFree As LongPtr
    CommitSize As LongPtr
    ViewSize As LongPtr
    ' union
    ' {
        ' PRTL_PROCESS_MODULES Modules;
        ' PRTL_PROCESS_MODULE_INFORMATION_EX ModulesEx;
    ' };
    Modules As LongPtr
    BackTraces As LongPtr 'PRTL_PROCESS_BACKTRACES
    Heaps As LongPtr
    Locks As LongPtr 'PRTL_PROCESS_LOCKS
    SpecificHeap As LongPtr
    TargetProcessHandle As LongPtr
    VerifierOptions As LongPtr 'PRTL_PROCESS_VERIFIER_OPTIONS
    ProcessHeap As LongPtr
    CriticalSectionHandle As LongPtr
    CriticalSectionOwnerThread As LongPtr
    Reserved(0 To 3) As LongPtr
End Type

[Description("WARNING: Buffer substituted for variable C-style array.")]
Public Type RTL_PROCESS_VERIFIER_OPTIONS
    SizeStruct As Long
    Option As Long
    OptionData(0 To 4095) As Byte
End Type

Public Enum RtlQueryProcessFlags
    RTL_QUERY_PROCESS_MODULES = &H00000001
    RTL_QUERY_PROCESS_BACKTRACES = &H00000002
    RTL_QUERY_PROCESS_HEAP_SUMMARY = &H00000004
    RTL_QUERY_PROCESS_HEAP_TAGS = &H00000008
    RTL_QUERY_PROCESS_HEAP_ENTRIES = &H00000010
    RTL_QUERY_PROCESS_LOCKS = &H00000020
    RTL_QUERY_PROCESS_MODULES32 = &H00000040
    RTL_QUERY_PROCESS_VERIFIER_OPTIONS = &H00000080  ' rev
    RTL_QUERY_PROCESS_MODULESEX = &H00000100  ' rev
    RTL_QUERY_PROCESS_HEAP_SEGMENTS = &H00000200
    RTL_QUERY_PROCESS_CS_OWNER = &H00000400  ' rev
    RTL_QUERY_PROCESS_NONINVASIVE = &H80000000
    RTL_QUERY_PROCESS_NONINVASIVE_CS_OWNER = &H80000800  ' WIN11
End Enum

Public Enum RtlHeapInfoFlags
    RTL_HEAP_BUSY = &H0001
    RTL_HEAP_SEGMENT = &H0002
    RTL_HEAP_SETTABLE_VALUE = &H0010
    RTL_HEAP_SETTABLE_FLAG1 = &H0020
    RTL_HEAP_SETTABLE_FLAG2 = &H0040
    RTL_HEAP_SETTABLE_FLAG3 = &H0080
    RTL_HEAP_SETTABLE_FLAGS = &H00e0
    RTL_HEAP_UNCOMMITTED_RANGE = &H0100
    RTL_HEAP_PROTECTED_ENTRY = &H0200
End Enum
Private Type RTL_HEAP_ENTRY_UnionStandIn
    u1 As LongPtr
    u2 As LongPtr
End Type
Public Type RTL_HEAP_ENTRY
    Size As LongPtr
    Flags As Integer
    AllocatorBackTraceIndex As Integer
    ' union
    ' {
        ' struct
        ' {
            ' SIZE_T Settable;
            ' ULONG Tag;
        ' } s1;
        ' struct
        ' {
            ' SIZE_T CommittedSize;
            ' PVOID FirstBlock;
        ' } s2;
    ' } u;
    u As RTL_HEAP_ENTRY_UnionStandIn
End Type
Public Type RTL_HEAP_TAG
    NumberOfAllocations As Long
    NumberOfFrees As Long
    BytesAllocated As LongPtr
    TagIndex As Integer
    CreatorBackTraceIndex As Integer
    TagName(0 To 23) As Integer
End Type
Public Type RTL_HEAP_INFORMATION
    BaseAddress As LongPtr
    Flags As Long
    EntryOverhead As Integer
    CreatorBackTraceIndex As Integer
    BytesAllocated As LongPtr
    BytesCommitted As LongPtr
    NumberOfTags As Long
    NumberOfEntries As Long
    NumberOfPseudoTags As Long
    PseudoTagGranularity As Long
    Reserved(0 To 4) As Long
    Tags As LongPtr 'PRTL_HEAP_TAG
    Entries As LongPtr 'PRTL_HEAP_ENTRY
End Type



Public Declare PtrSafe Function RtlCreateQueryDebugBuffer Lib "ntdll" (ByVal MaximumCommit As Long, ByVal UseEventPair As Byte) As LongPtr 'PRTL_DEBUG_INFORMATION
[UseGetLastError(False)] Public Declare PtrSafe Function RtlDestroyQueryDebugBuffer Lib "ntdll" (ByVal Buffer As LongPtr) As NTSTATUS
Public Declare PtrSafe Function RtlCommitDebugInfo Lib "ntdll" (Buffer As RTL_DEBUG_INFORMATION, ByVal Size As LongPtr) As LongPtr 'PVOID
Public Declare PtrSafe Sub RtlDeCommitDebugInfo Lib "ntdll" (Buffer As RTL_DEBUG_INFORMATION, ByVal p As LongPtr, ByVal Size As LongPtr)
[UseGetLastError(False)] Public Declare PtrSafe Function RtlQueryProcessDebugInformation Lib "ntdll" (ByVal UniqueProcessId As LongPtr, ByVal Flags As RtlQueryProcessFlags, Buffer As RTL_DEBUG_INFORMATION) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlSetProcessDebugInformation Lib "ntdll" (ByVal UniqueProcessId As LongPtr, ByVal Flags As RtlQueryProcessFlags, Buffer As RTL_DEBUG_INFORMATION) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function RtlQueryProcessHeapInformation Lib "ntdll" (Buffer As RTL_DEBUG_INFORMATION) As NTSTATUS
Public Function RtlIsAnyDebuggerPresent() As Boolean
    Dim result As Byte
    result = CType(Of PEB)(NtCurrentPeb()).BeingDebugged
    If result = 0 Then
        result = CType(Of KUSER_SHARED_DATA)(CLngPtr(&H7FFE0260)).KdDebuggerEnabled
    End If
    Return CBool(result)
End Function

Public Type CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG
    ' Size of the structure in bytes
    Size As Long
    ' Guid used to identify background task to trigger
    TriggerId As LongPtr
End Type
Public Sub CUSTOM_SYSTEM_EVENT_TRIGGER_INIT(Config As CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG, ByVal TriggerId As LongPtr)
    ZeroMemory Config, LenB(Of CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG)
    Config.Size = LenB(Of CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG)
    Config.TriggerId = TriggerId
End Sub
Public Declare PtrSafe Function RtlRaiseCustomSystemEventTrigger Lib "ntdll" (Triggeronfig As CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG) As Long



[UseGetLastError(False)] Public Declare PtrSafe Function RtlIpv4AddressToStringA Lib "ntdll" (Addr As IN_ADDR, ByVal s As String) As LongPtr
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIpv4AddressToStringW Lib "ntdll" (Addr As IN_ADDR, ByVal s As LongPtr) As LongPtr
[UseGetLastError(False)] Public DeclareWide PtrSafe Function RtlIpv4AddressToString Lib "ntdll" Alias "RtlIpv4AddressToStringW" (Addr As IN_ADDR, ByVal s As String) As LongPtr
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIpv4AddressToStringExA Lib "ntdll" (Address As IN_ADDR, ByVal Port As Integer, ByVal AddressString As String, AddressStringLength As Long) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIpv4AddressToStringExW Lib "ntdll" (Address As IN_ADDR, ByVal Port As Integer, ByVal AddressString As LongPtr, AddressStringLength As Long) As Long
[UseGetLastError(False)] Public DeclareWide PtrSafe Function RtlIpv4AddressToStringEx Lib "ntdll" Alias "RtlIpv4AddressToStringExW" (Address As IN_ADDR, ByVal Port As Integer, ByVal AddressString As String, AddressStringLength As Long) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIpv4StringToAddressA Lib "ntdll" (ByVal s As String, ByVal Strict As Byte, Terminator As LongPtr, Addr As IN_ADDR) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIpv4StringToAddressW Lib "ntdll" (ByVal s As LongPtr, ByVal Strict As Byte, Terminator As LongPtr, Addr As IN_ADDR) As Long
[UseGetLastError(False)] Public DeclareWide PtrSafe Function RtlIpv4StringToAddress Lib "ntdll" Alias "RtlIpv4StringToAddressW" (ByVal s As String, ByVal Strict As Byte, Terminator As LongPtr, Addr As IN_ADDR) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIpv4StringToAddressExA Lib "ntdll" (ByVal AddressString As String, ByVal Strict As Byte, Address As IN_ADDR, Port As Integer) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIpv4StringToAddressExW Lib "ntdll" (ByVal AddressString As LongPtr, ByVal Strict As Byte, Address As IN_ADDR, Port As Integer) As Long
[UseGetLastError(False)] Public DeclareWide PtrSafe Function RtlIpv4StringToAddressEx Lib "ntdll" Alias "RtlIpv4StringToAddressExW" (ByVal AddressString As String, ByVal Strict As Byte, Address As IN_ADDR, Port As Integer) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIpv6AddressToStringA Lib "ntdll" (Addr As IN6_ADDR, ByVal s As String) As LongPtr
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIpv6AddressToStringW Lib "ntdll" (Addr As IN6_ADDR, ByVal s As LongPtr) As LongPtr
[UseGetLastError(False)] Public DeclareWide PtrSafe Function RtlIpv6AddressToString Lib "ntdll" Alias "RtlIpv6AddressToStringW" (Addr As IN6_ADDR, ByVal s As String) As LongPtr
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIpv6AddressToStringExA Lib "ntdll" (Address As IN6_ADDR, ByVal ScopeId As Long, ByVal Port As Integer, ByVal AddressString As String, AddressStringLength As Long) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIpv6AddressToStringExW Lib "ntdll" (Address As IN6_ADDR, ByVal ScopeId As Long, ByVal Port As Integer, ByVal AddressString As LongPtr, AddressStringLength As Long) As Long
[UseGetLastError(False)] Public DeclareWide PtrSafe Function RtlIpv6AddressToStringEx Lib "ntdll" Alias "RtlIpv6AddressToStringExW" (Address As IN6_ADDR, ByVal ScopeId As Long, ByVal Port As Integer, ByVal AddressString As String, AddressStringLength As Long) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIpv6StringToAddressA Lib "ntdll" (ByVal s As String, Terminator As LongPtr, Addr As IN6_ADDR) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIpv6StringToAddressW Lib "ntdll" (ByVal s As LongPtr, Terminator As LongPtr, Addr As IN6_ADDR) As Long
[UseGetLastError(False)] Public DeclareWide PtrSafe Function RtlIpv6StringToAddress Lib "ntdll" Alias "RtlIpv6StringToAddressW" (ByVal s As String, Terminator As LongPtr, Addr As IN6_ADDR) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIpv6StringToAddressExA Lib "ntdll" (ByVal AddressString As String, Address As IN6_ADDR, ScopeId As Long, Port As Integer) As Long
[UseGetLastError(False)] Public Declare PtrSafe Function RtlIpv6StringToAddressExW Lib "ntdll" (ByVal AddressString As LongPtr, Address As IN6_ADDR, ScopeId As Long, Port As Integer) As Long
[UseGetLastError(False)] Public DeclareWide PtrSafe Function RtlIpv6StringToAddressEx Lib "ntdll" Alias "RtlIpv6StringToAddressExW" (ByVal AddressString As String, Address As IN6_ADDR, ScopeId As Long, Port As Integer) As Long


[UseGetLastError(False)] Public Declare PtrSafe Function LdrGetDllHandle Lib "ntdll" (ByVal pwPath As LongPtr, ByVal unused As LongPtr, ModuleFileName As UNICODE_STRING, pHModule As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function LdrGetProcedureAddress Lib "ntdll" (ByVal ModuleHandle As LongPtr, FunctionName As ANSI_STRING, ByVal Ordinal As Integer, FunctionAddress As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function LdrLoadDll Lib "ntdll" (ByVal PathToFile As LongPtr, ByVal Flags As LoadLibraryFlags, ModuleFileName As UNICODE_STRING, ModuleHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function LdrUnloadDll Lib "ntdll" (ByVal ModuleHandle As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function LdrRegisterDllNotification Lib "ntdll" (ByVal Flags As Long, ByVal NotificationFunction As LongPtr, ByVal Context As LongPtr, Cookie As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Function LdrUnregisterDllNotification Lib "ntdll" (ByVal Cookie As LongPtr) As NTSTATUS
[UseGetLastError(False)] Public Declare PtrSafe Sub LdrFastFailInLoaderCallout Lib "ntdll" ()
[UseGetLastError(False)] Public Declare PtrSafe Function LdrDisableThreadCalloutsForDll Lib "ntdll" (ByVal DllHandle As LongPtr) As NTSTATUS


[UseGetLastError(False)] Public Declare PtrSafe Function DbgPrint CDecl Lib "ntdll" (ByVal Format As String, ByVal ParamArray vargs As Any()) As Long



#If Win64 = 0 Then
[UseGetLastError(False)]
Public Declare Function NtWow64QueryInformationProcess64 Lib "ntdll" ( _
                            ByVal hProcess As Long, _
                            ByVal ProcessInformationClass As Long, _
                            ByRef pProcessInformation As Any, _
                            ByVal ProcessInformationLength As Long, _
                            ByRef puReturnLength As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare Function NtWow64ReadVirtualMemory64 Lib "ntdll" ( _
                            ByVal hProcess As Long, _
                            ByVal BaseAddress As LongLong, _
                            ByRef Buffer As Any, _
                            ByVal BufferLengthL As Long, _
                            ByVal BufferLengthH As Long, _
                            ByRef ReturnLength As LongLong) As NTSTATUS
[UseGetLastError(False)]
Public Declare Function NtWow64ReadVirtualMemory64 Lib "ntdll" ( _
                            ByVal hProcess As Long, _
                            ByVal BaseAddress As LongLong, _
                            ByRef Buffer As Any, _
                            ByVal BufferSize As LongLong, _
                            ByRef NumberOfBytesRead As LongLong) As NTSTATUS
[UseGetLastError(False)]
Public Declare Function NtWow64WriteVirtualMemory64 Lib "ntdll" ( _
                            ByVal ProcessHandle As Long, _
                            ByVal BaseAddress As LongLong, _
                            ByRef Buffer As Any, _
                            ByVal BufferSize As LongLong, _
                            ByRef NumberOfBytesWritten As LongLong) As NTSTATUS
[UseGetLastError(False)]
Public Declare Function NtWow64InterlockedPopEntrySList Lib "ntdll" (ListHead As SLIST_HEADER) As NTSTATUS
[UseGetLastError(False)]
Public Declare Function NtWow64GetNativeSystemInformation Lib "ntdll" ( _
                           ByVal SystemInformationClass As SYSTEM_INFORMATION_CLASS, _
                           ByRef SystemInformation As Any, _
                           ByVal SystemInformationLength As Long, _
                           ByRef ReturnLength As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare Function NtWow64GetCurrentProcessorNumberEx Lib "ntdll" (ProcNumber As PROCESSOR_NUMBER) As NTSTATUS
[UseGetLastError(False)]
Public Declare Function NtWow64DebuggerCall Lib "ntdll" (ByVal ServiceClass As Long, ByVal Arg1 As Long, ByVal Arg2 As Long, ByVal Arg3 As Long, ByVal Arg4 As Long) As NTSTATUS
[UseGetLastError(False)]
Public Declare Function NtWow64CallFunction64 Lib "ntdll" ( _
                           ByVal FunctionIndex As Long, _
                            ByVal Flags As Long, _
                            ByVal InputLength As Long, _
                            ByRef InputBuffer As Any, _
                            ByVal OutputLength As Long, _
                            ByRef OutputBuffer As Any, _
                            Optional ByRef ReturnStatus As Long) As NTSTATUS


#End If




#End Region


End Module
#End If