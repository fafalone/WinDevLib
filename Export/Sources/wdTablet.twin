'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************


' //touch-related APIs
' //TipAutoComplete.h
' //tpcerror.h
' // tpcshrd.h
' //msinkaut.h
' //rtscom.h



'tipautocomplete.h
[InterfaceId("7C6CF46D-8404-46b9-AD33-F5B6036D4007")]
[OleAutomation(False)]
Interface ITipAutoCompleteProvider Extends stdole.IUnknown
    Sub UpdatePendingText(ByVal bstrPendingText As String)
    Sub Show(ByVal fShow As BOOL)
End Interface
[InterfaceId("5E078E03-8265-4bbe-9487-D242EDBEF910")]
[OleAutomation(False)]
Interface ITipAutoCompleteClient Extends stdole.IUnknown
    Sub AdviseProvider(ByVal hWndField As LongPtr, ByVal pIProvider As ITipAutoCompleteProvider)
    Sub UnadviseProvider(ByVal hWndField As LongPtr, ByVal pIProvider As ITipAutoCompleteProvider)
    Sub UserSelection()
    Sub PreferredRects(prcACList As RECT, prcField As RECT, prcModifiedACList As RECT, pfShownAboveTip As BOOL)
    Sub RequestShowUI(ByVal hWndList As LongPtr, pfAllowShowing As BOOL)
End Interface

'CLSID_TipAutoCompleteClient
[CoClassId("807C1E6C-1D00-453f-B920-B61BB7CDD997")]
CoClass TipAutoCompleteClient
    [Default] Interface ITipAutoCompleteClient
End CoClass









Module wdTabletShared
'VB6 oleexp addon module

Public Const MICROSOFT_TABLETPENSERVICE_PROPERTY = "MicrosoftTabletPenServiceProperty"
    
Public Const MAX_PACKET_PROPERTY_COUNT  = 32
Public Const MAX_PACKET_BUTTON_COUNT  = 32
    
Public Const INK_SERIALIZED_FORMAT = "Ink Serialized Format"


Public Const STR_GUID_X  = "{598A6A8F-52C0-4BA0-93AF-AF357411A561}"
Public Const STR_GUID_Y  = "{B53F9F75-04E0-4498-A7EE-C30DBB5A9011}"
Public Const STR_GUID_Z  = "{735ADB30-0EBB-4788-A0E4-0F316490055D}"
Public Const STR_GUID_PAKETSTATUS  = "{6E0E07BF-AFE7-4CF7-87D1-AF6446208418}"
Public Const STR_GUID_TIMERTICK  = "{436510C5-FED3-45D1-8B76-71D3EA7A829D}"
Public Const STR_GUID_SERIALNUMBER  = "{78A81B56-0935-4493-BAAE-00541A8A16C4}"
Public Const STR_GUID_NORMALPRESSURE  = "{7307502D-F9F4-4E18-B3F2-2CE1B1A3610C}"
Public Const STR_GUID_TANGENTPRESSURE  = "{6DA4488B-5244-41EC-905B-32D89AB80809}"
Public Const STR_GUID_BUTTONPRESSURE  = "{8B7FEFC4-96AA-4BFE-AC26-8A5F0BE07BF5}"
Public Const STR_GUID_XTILTORIENTATION  = "{A8D07B3A-8BF0-40B0-95A9-B80A6BB787BF}"
Public Const STR_GUID_YTILTORIENTATION  = "{0E932389-1D77-43AF-AC00-5B950D6D4B2D}"
Public Const STR_GUID_AZIMUTHORIENTATION  = "{029123B4-8828-410B-B250-A0536595E5DC}"
Public Const STR_GUID_ALTITUDEORIENTATION  = "{82DEC5C7-F6BA-4906-894F-66D68DFC456C}"
Public Const STR_GUID_TWISTORIENTATION  = "{0D324960-13B2-41E4-ACE6-7AE9D43D2D3B}"
Public Const STR_GUID_PITCHROTATION  = "{7F7E57B7-BE37-4BE1-A356-7A84160E1893}"
Public Const STR_GUID_ROLLROTATION  = "{5D5D5E56-6BA9-4C5B-9FB0-851C91714E56}"
Public Const STR_GUID_YAWROTATION  = "{6A849980-7C3A-45B7-AA82-90A262950E89}"
Public Const STR_GUID_WIDTH  = "{BAABE94D-2712-48F5-BE9D-8F8B5EA0711A}"
Public Const STR_GUID_HEIGHT  = "{E61858D2-E447-4218-9D3F-18865C203DF4}"
Public Const STR_GUID_FINGERCONTACTCONFIDENCE  = "{E706C804-57F0-4F00-8A0C-853D57789BE9}"
Public Const STR_GUID_DEVICE_CONTACT_ID  = "{02585B91-049B-4750-9615-DF8948AB3C9C}"
       
Public Const INKRECOGNITIONPROPERTY_LINENUMBER  = "{DBF29F2C-5289-4BE8-B3D8-6EF63246253E}"
Public Const INKRECOGNITIONPROPERTY_BOXNUMBER  = "{2C243E3A-F733-4EB6-B1F8-B5DC5C2C4CDA}"
Public Const INKRECOGNITIONPROPERTY_SEGMENTATION  = "{B3C0FE6C-FB51-4164-BA2F-844AF8F983DA}"
Public Const INKRECOGNITIONPROPERTY_HOTPOINT  = "{CA6F40DC-5292-452a-91FB-2181C0BEC0DE}"
Public Const INKRECOGNITIONPROPERTY_MAXIMUMSTROKECOUNT = "{BF0EEC4E-4B7D-47a9-8CFA-234DD24BD22A}"
Public Const INKRECOGNITIONPROPERTY_POINTSPERINCH  = "{7ED16B76-889C-468e-8276-0021B770187E}"
Public Const INKRECOGNITIONPROPERTY_CONFIDENCELEVEL  = "{7DFE11A7-FB5D-4958-8765-154ADF0D833F}"
Public Const INKRECOGNITIONPROPERTY_LINEMETRICS  = "{8CC24B27-30A9-4b96-9056-2D3A90DA0727}"
Public Const FACTOID_NONE  = "NONE"
Public Const FACTOID_DEFAULT  = "DEFAULT"
Public Const FACTOID_SYSTEMDICTIONARY  = "SYSDICT"
Public Const FACTOID_WORDLIST  = "WORDLIST"
Public Const FACTOID_EMAIL  = "EMAI"
Public Const FACTOID_WEB  = "WEB"
Public Const FACTOID_ONECHAR  = "ONECHAR"
Public Const FACTOID_NUMBER  = "NUMBER"
Public Const FACTOID_DIGIT  = "DIGIT"
Public Const FACTOID_NUMBERSIMPLE  = "NUMSIMPLE"
Public Const FACTOID_CURRENCY  = "CURRENCY"
Public Const FACTOID_POSTALCODE  = "POSTALCODE"
Public Const FACTOID_PERCENT  = "PERCENT"
Public Const FACTOID_DATE  = "DATE"
Public Const FACTOID_TIME  = "TIME"
Public Const FACTOID_TELEPHONE  = "TELEPHONE"
Public Const FACTOID_FILENAME  = "FILENAME"
Public Const FACTOID_UPPERCHAR  = "UPPERCHAR"
Public Const FACTOID_LOWERCHAR  = "LOWERCHAR"
Public Const FACTOID_PUNCCHAR  = "PUNCCHAR"
Public Const FACTOID_JAPANESECOMMON  = "JPN_COMMON"
Public Const FACTOID_CHINESESIMPLECOMMON  = "CHS_COMMON"
Public Const FACTOID_CHINESETRADITIONALCOMMON  = "CHT_COMMON"
Public Const FACTOID_KOREANCOMMON  = "KOR_COMMON"
Public Const FACTOID_HIRAGANA  = "HIRAGANA"
Public Const FACTOID_KATAKANA  = "KATAKANA"
Public Const FACTOID_KANJICOMMON  = "KANJI_COMMON"
Public Const FACTOID_KANJIRARE  = "KANJI_RARE"
Public Const FACTOID_BOPOMOFO  = "BOPOMOFO"
Public Const FACTOID_JAMO  = "JAMO"
Public Const FACTOID_HANGULCOMMON  = "HANGUL_COMMON"
Public Const FACTOID_HANGULRARE  = "HANGUL_RARE"
    
Public Const InkMinTransparencyValue = 0

Public Const InkMaxTransparencyValue = 255

Public Const InkCollectorClipInkToMargin = 0

Public Const InkCollectorDefaultMargin = (-2147483647 - 1)
    




Public Function GUID_PACKETPROPERTY_GUID_X() As UUID
'{598a6a8f-52c0-4ba0-93af-af357411a561}
Static iid As UUID
    If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H598a6a8f, CInt(&H52c0), CInt(&H4ba0), &H93, &Haf, &Haf, &H35, &H74, &H11, &Ha5, &H61)
    GUID_PACKETPROPERTY_GUID_X = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_Y() As UUID
'{b53f9f75-04e0-4498-a7ee-c30dbb5a9011}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb53f9f75, CInt(&H04e0), CInt(&H4498), &Ha7, &Hee, &Hc3, &H0d, &Hbb, &H5a, &H90, &H11)
 GUID_PACKETPROPERTY_GUID_Y = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_Z() As UUID
'{735adb30-0ebb-4788-a0e4-0f316490055d}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H735adb30, CInt(&H0ebb), CInt(&H4788), &Ha0, &He4, &H0f, &H31, &H64, &H90, &H05, &H5d)
 GUID_PACKETPROPERTY_GUID_Z = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_PACKET_STATUS() As UUID
'{6e0e07bf-afe7-4cf7-87d1-af6446208418}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6e0e07bf, CInt(&Hafe7), CInt(&H4cf7), &H87, &Hd1, &Haf, &H64, &H46, &H20, &H84, &H18)
 GUID_PACKETPROPERTY_GUID_PACKET_STATUS = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_TIMER_TICK() As UUID
'{436510c5-fed3-45d1-8b76-71d3ea7a829d}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H436510c5, CInt(&Hfed3), CInt(&H45d1), &H8b, &H76, &H71, &Hd3, &Hea, &H7a, &H82, &H9d)
 GUID_PACKETPROPERTY_GUID_TIMER_TICK = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_SERIAL_NUMBER() As UUID
'{78a81b56-0935-4493-baae-00541a8a16c4}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H78a81b56, CInt(&H0935), CInt(&H4493), &Hba, &Hae, &H00, &H54, &H1a, &H8a, &H16, &Hc4)
 GUID_PACKETPROPERTY_GUID_SERIAL_NUMBER = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_NORMAL_PRESSURE() As UUID
'{7307502d-f9f4-4e18-b3f2-2ce1b1a3610c}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7307502d, CInt(&Hf9f4), CInt(&H4e18), &Hb3, &Hf2, &H2c, &He1, &Hb1, &Ha3, &H61, &H0c)
 GUID_PACKETPROPERTY_GUID_NORMAL_PRESSURE = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_TANGENT_PRESSURE() As UUID
'{6da4488b-5244-41ec-905b-32d89ab80809}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6da4488b, CInt(&H5244), CInt(&H41ec), &H90, &H5b, &H32, &Hd8, &H9a, &Hb8, &H08, &H09)
  GUID_PACKETPROPERTY_GUID_TANGENT_PRESSURE = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_BUTTON_PRESSURE() As UUID
'{8b7fefc4-96aa-4bfe-ac26-8a5f0be07bf5}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H8b7fefc4, CInt(&H96aa), CInt(&H4bfe), &Hac, &H26, &H8a, &H5f, &H0b, &He0, &H7b, &Hf5)
  GUID_PACKETPROPERTY_GUID_BUTTON_PRESSURE = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_X_TILT_ORIENTATION() As UUID
'{a8d07b3a-8bf0-40b0-95a9-b80a6bb787bf}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Ha8d07b3a, CInt(&H8bf0), CInt(&H40b0), &H95, &Ha9, &Hb8, &H0a, &H6b, &Hb7, &H87, &Hbf)
  GUID_PACKETPROPERTY_GUID_X_TILT_ORIENTATION = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_Y_TILT_ORIENTATION() As UUID
'{0e932389-1d77-43af-ac00-5b950d6d4b2d}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0e932389, CInt(&H1d77), CInt(&H43af), &Hac, &H00, &H5b, &H95, &H0d, &H6d, &H4b, &H2d)
  GUID_PACKETPROPERTY_GUID_Y_TILT_ORIENTATION = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_AZIMUTH_ORIENTATION() As UUID
'{029123b4-8828-410b-b250-a0536595e5dc}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H029123b4, CInt(&H8828), CInt(&H410b), &Hb2, &H50, &Ha0, &H53, &H65, &H95, &He5, &Hdc)
  GUID_PACKETPROPERTY_GUID_AZIMUTH_ORIENTATION = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_ALTITUDE_ORIENTATION() As UUID
'{82dec5c7-f6ba-4906-894f-66d68dfc456c}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H82dec5c7, CInt(&Hf6ba), CInt(&H4906), &H89, &H4f, &H66, &Hd6, &H8d, &Hfc, &H45, &H6c)
  GUID_PACKETPROPERTY_GUID_ALTITUDE_ORIENTATION = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_TWIST_ORIENTATION() As UUID
'{0d324960-13b2-41e4-ace6-7ae9d43d2d3b}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0d324960, CInt(&H13b2), CInt(&H41e4), &Hac, &He6, &H7a, &He9, &Hd4, &H3d, &H2d, &H3b)
  GUID_PACKETPROPERTY_GUID_TWIST_ORIENTATION = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_PITCH_ROTATION() As UUID
'{7f7e57b7-be37-4be1-a356-7a84160e1893}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7f7e57b7, CInt(&Hbe37), CInt(&H4be1), &Ha3, &H56, &H7a, &H84, &H16, &H0e, &H18, &H93)
  GUID_PACKETPROPERTY_GUID_PITCH_ROTATION = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_ROLL_ROTATION() As UUID
'{5d5d5e56-6ba9-4c5b-9fb0-851c91714e56}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H5d5d5e56, CInt(&H6ba9), CInt(&H4c5b), &H9f, &Hb0, &H85, &H1c, &H91, &H71, &H4e, &H56)
  GUID_PACKETPROPERTY_GUID_ROLL_ROTATION = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_YAW_ROTATION() As UUID
'{6a849980-7c3a-45b7-aa82-90a262950e89}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6a849980, CInt(&H7c3a), CInt(&H45b7), &Haa, &H82, &H90, &Ha2, &H62, &H95, &H0e, &H89)
  GUID_PACKETPROPERTY_GUID_YAW_ROTATION = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_WIDTH() As UUID
'{baabe94d-2712-48f5-be9d-8f8b5ea0711a}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hbaabe94d, CInt(&H2712), CInt(&H48f5), &Hbe, &H9d, &H8f, &H8b, &H5e, &Ha0, &H71, &H1a)
  GUID_PACKETPROPERTY_GUID_WIDTH = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_HEIGHT() As UUID
'{e61858d2-e447-4218-9d3f-18865c203df4}'}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &He61858d2, CInt(&He447), CInt(&H4218), &H9d, &H3f, &H18, &H86, &H5c, &H20, &H3d, &Hf4)
  GUID_PACKETPROPERTY_GUID_HEIGHT = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_FINGERCONTACTCONFIDENCE() As UUID
'{e706c804-57f0-4f00-8a0c-853d57789be9}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &He706c804, CInt(&H57f0), CInt(&H4f00), &H8a, &H0c, &H85, &H3d, &H57, &H78, &H9b, &He9)
  GUID_PACKETPROPERTY_GUID_FINGERCONTACTCONFIDENCE = iid
End Function
Public Function GUID_PACKETPROPERTY_GUID_DEVICE_CONTACT_ID() As UUID
'{02585b91-049b-4750-9615-df8948ab3c9c}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H02585b91, CInt(&H049b), CInt(&H4750), &H96, &H15, &Hdf, &H89, &H48, &Hab, &H3c, &H9c)
  GUID_PACKETPROPERTY_GUID_DEVICE_CONTACT_ID = iid
End Function




















    
    
End Module

Module wdTablet

Public Enum MSInkErrors
    E_INK_EXCEPTION = &H80280001
    E_INK_MISMATCHED_INK_OBJECT = &H80280002
    E_INK_COLLECTOR_BUSY = &H80280003
    E_INK_INCOMPATIBLE_OBJECT = &H80280004
    E_INK_WINDOW_NOT_SET = &H80280005
    E_INK_INVALID_MODE = &H80280006
    E_INK_COLLECTOR_ENABLED = &H80280007
    E_INK_NO_STROKES_TO_RECOGNIZE = &H80280008
    E_INK_EMPTY_RECOGNITION_RESULT = &H80280009
    E_INK_OVERLAPPING_INPUT_RECT = &H80280010
    TPC_E_INVALID_PROPERTY = &H80040241
    TPC_E_NO_DEFAULT_TABLET = &H80040212
    TPC_E_UNKNOWN_PROPERTY = &H8004021b
    TPC_E_INVALID_INPUT_RECT = &H80040219
    TPC_E_INVALID_STROKE = &H80040222
    TPC_E_INITIALIZE_FAIL = &H80040223
    TPC_E_NOT_RELEVANT = &H80040232
    TPC_E_RECOGNIZER_NOT_REGISTERED = &H80040235
    TPC_E_INVALID_RIGHTS = &H80040236
    TPC_E_OUT_OF_ORDER_CALL = &H80040237
    TPC_E_QUEUE_FULL = &H80040238
    TPC_E_INVALID_CONFIGURATION = &H80040239
    TPC_E_INVALID_DATA_FROM_RECOGNIZER = &H8004023A
    TPC_E_INVALID_PACKET_DESCRIPTION = &H80040233
    TPC_S_TRUNCATED = &H00040252
    TPC_S_INTERRUPTED = &H00040253
    TPC_S_NO_DATA_TO_PROCESS = &H00040254
    TPC_E_INSUFFICIENT_BUFFER = &H8007007A ' __HRESULT_FROM_WIN32(ERROR_INSUFFICIENT_BUFFER)
End Enum

Public Enum TabletEnableDisableFlags
    TABLET_DISABLE_PRESSANDHOLD = &H00000001
    TABLET_DISABLE_PENTAPFEEDBACK = &H00000008
    TABLET_DISABLE_PENBARRELFEEDBACK = &H00000010
    TABLET_DISABLE_TOUCHUIFORCEON = &H00000100
    TABLET_DISABLE_TOUCHUIFORCEOFF = &H00000200
    TABLET_DISABLE_TOUCHSWITCH = &H00008000&
    TABLET_DISABLE_FLICKS = &H00010000
    TABLET_ENABLE_FLICKSONCONTEXT = &H00020000
    TABLET_ENABLE_FLICKLEARNINGMODE = &H00040000
    TABLET_DISABLE_SMOOTHSCROLLING = &H00080000
    TABLET_DISABLE_FLICKFALLBACKKEYS = &H00100000
    TABLET_ENABLE_MULTITOUCHDATA = &H01000000
End Enum

Public Enum TabletIpFlags
    IP_CURSOR_DOWN = &H00000001
    IP_INVERTED = &H00000002
    IP_MARGIN = &H00000004
End Enum

Public Enum PROPERTY_UNITS
    PROPERTY_UNITS_DEFAULT = 0
    PROPERTY_UNITS_INCHES = 1
    PROPERTY_UNITS_CENTIMETERS = 2
    PROPERTY_UNITS_DEGREES = 3
    PROPERTY_UNITS_RADIANS = 4
    PROPERTY_UNITS_SECONDS = 5
    PROPERTY_UNITS_POUNDS = 6
    PROPERTY_UNITS_GRAMS = 7
    PROPERTY_UNITS_SILINEAR = 8
    PROPERTY_UNITS_SIROTATION = 9
    PROPERTY_UNITS_ENGLINEAR = 10
    PROPERTY_UNITS_ENGROTATION = 11
    PROPERTY_UNITS_SLUGS = 12
    PROPERTY_UNITS_KELVIN = 13
    PROPERTY_UNITS_FAHRENHEIT = 14
    PROPERTY_UNITS_AMPERE = 15
    PROPERTY_UNITS_CANDELA = 16
End Enum

Public Type SYSTEM_EVENT_DATA
    bModifier As Byte
    wKey As Integer
    xPos As Long
    yPos As Long
    bCursorMode As Byte
    dwButtonState As Long
End Type

Public Type STROKE_RANGE
    iStrokeBegin As Long
    iStrokeEnd As Long
End Type

Public Type PROPERTY_METRICS
    nLogicalMin As Long
    nLogicalMax As Long
    Units As PROPERTY_UNITS
    fResolution As Single
End Type

Public Type PACKET_PROPERTY
    guid As UUID
    PropertyMetrics As PROPERTY_METRICS
End Type

Public Type PACKET_DESCRIPTION
    cbPacketSize As Long
    pPacketProperties As LongPtr 'PACKET_PROPERTY*
    cButtons As Long
    pguidButtons As LongPtr 'GUID*
End Type

Public Enum INKMETRIC_FLAGS
    IMF_FONT_SELECTED_IN_HDC = &H1
    IMF_ITALIC = &H2
    IMF_BOLD = &H4
End Enum

Public Enum GET_DANDIDATE_FLAGS
    TCF_ALLOW_RECOGNITION = &H1
    TCF_FORCE_RECOGNITION = &H2
End Enum

Public Type INKMETRIC
    iHeight As Long
    iFontAscent As Long
    iFontDescent As Long
    dwFlags As Long
    color As Long
End Type

Public Enum ItemSelectionConstants
    ISC_FirstElement = 0
    ISC_AllElements = -1
End Enum

Public Enum InkBoundingBoxMode
    IBBM_Default = 0
    IBBM_NoCurveFit = 1
    IBBM_CurveFit = 2
    IBBM_PointsOnly = 3
    IBBM_Union = 4
    IBBM_Last = 2
End Enum

Public Enum InkExtractFlags
    IEF_CopyFromOriginal = 0
    IEF_RemoveFromOriginal = &H1
    IEF_Default = IEF_RemoveFromOriginal
    IEF_All = (IEF_RemoveFromOriginal Or IEF_CopyFromOriginal)
End Enum

Public Enum InkPersistenceFormat
    IPF_InkSerializedFormat = 0
    IPF_Base64InkSerializedFormat = 1
    IPF_GIF = 2
    IPF_Base64GIF = 3
    IPF_Last
End Enum

Public Enum InkPersistenceCompressionMode
    IPCM_Default = 0
    IPCM_MaximumCompression = 1
    IPCM_NoCompression = 2
End Enum

Public Enum InkPenTip
    IPT_Ball = 0
    IPT_Rectangle = 1
    IPT_Last
End Enum

Public Enum InkRasterOperation
    IRO_Black = 1
    IRO_NotMergePen = 2
    IRO_MaskNotPen = 3
    IRO_NotCopyPen = 4
    IRO_MaskPenNot = 5
    IRO_Not = 6
    IRO_XOrPen = 7
    IRO_NotMaskPen = 8
    IRO_MaskPen = 9
    IRO_NotXOrPen = 10
    IRO_NoOperation = 11
    IRO_MergeNotPen = 12
    IRO_CopyPen = 13
    IRO_MergePenNot = 14
    IRO_MergePen = 15
    IRO_White = 16
    IRO_Last = 2
End Enum

Public Enum InkMousePointer
    IMP_Default = 0
    IMP_Arrow = 1
    IMP_Crosshair = 2
    IMP_Ibeam = 3
    IMP_SizeNESW = 4
    IMP_SizeNS = 5
    IMP_SizeNWSE = 6
    IMP_SizeWE = 7
    IMP_UpArrow = 8
    IMP_Hourglass = 9
    IMP_NoDrop = 10
    IMP_ArrowHourglass = 11
    IMP_ArrowQuestion = 12
    IMP_SizeAll = 13
    IMP_Hand = 14
    IMP_Custom = 99
End Enum

Public Enum InkClipboardModes
    ICB_Copy = 0
    ICB_Cut = &H1
    ICB_ExtractOnly = &H30
    ICB_DelayedCopy = &H20
    ICB_Default = ICB_Copy
    ICB_Last = ICB_DelayedCopy + 1
End Enum

Public Enum InkClipboardFormats
    ICF_None = 0
    ICF_InkSerializedFormat = &H1
    ICF_SketchInk = &H2
    ICF_TextInk = &H6
    ICF_EnhancedMetafile = &H8
    ICF_Metafile = &H20
    ICF_Bitmap = &H40
    ICF_PasteMask = &H7
    ICF_CopyMask = &H7f
    ICF_Default = ICF_CopyMask
    ICF_Last = ICF_CopyMask + 1
End Enum

Public Enum SelectionHitResult
    SHR_None = 0
    SHR_NW
    SHR_SE
    SHR_NE
    SHR_SW
    SHR_E
    SHR_W
    SHR_N
    SHR_S
    SHR_Selection
End Enum

Public Enum InkRecognitionStatus
    IRS_NoError = 0
    IRS_Interrupted = &H1
    IRS_ProcessFailed = &H2
    IRS_InkAddedFailed = &H4
    IRS_SetAutoCompletionModeFailed = &H8
    IRS_SetStrokesFailed = &H10
    IRS_SetGuideFailed = &H20
    IRS_SetFlagsFailed = &H40
    IRS_SetFactoidFailed = &H80
    IRS_SetPrefixSuffixFailed = &H100
    IRS_SetWordListFailed = &H200
End Enum

Public Enum DISPID_InkRectangle
    DISPID_IRTop = 1
    DISPID_IRLeft = (DISPID_IRTop + 1)
    DISPID_IRBottom = (DISPID_IRLeft + 1)
    DISPID_IRRight = (DISPID_IRBottom + 1)
    DISPID_IRGetRectangle = (DISPID_IRRight + 1)
    DISPID_IRSetRectangle = (DISPID_IRGetRectangle + 1)
    DISPID_IRData = (DISPID_IRSetRectangle + 1)
End Enum

Public Enum DISPID_InkExtendedProperty
    DISPID_IEPGuid = 1
    DISPID_IEPData = (DISPID_IEPGuid + 1)
End Enum

Public Enum DISPID_InkExtendedProperties
    DISPID_IEPs_NewEnum = DISPID_NEWENUM
    DISPID_IEPsItem = DISPID_VALUE
    DISPID_IEPsCount = 1
    DISPID_IEPsAdd = (DISPID_IEPsCount + 1)
    DISPID_IEPsRemove = (DISPID_IEPsAdd + 1)
    DISPID_IEPsClear = (DISPID_IEPsRemove + 1)
    DISPID_IEPsDoesPropertyExist = (DISPID_IEPsClear + 1)
End Enum

Public Enum DISPID_InkDrawingAttributes
    DISPID_DAHeight = 1
    DISPID_DAColor = (DISPID_DAHeight + 1)
    DISPID_DAWidth = (DISPID_DAColor + 1)
    DISPID_DAFitToCurve = (DISPID_DAWidth + 1)
    DISPID_DAIgnorePressure = (DISPID_DAFitToCurve + 1)
    DISPID_DAAntiAliased = (DISPID_DAIgnorePressure + 1)
    DISPID_DATransparency = (DISPID_DAAntiAliased + 1)
    DISPID_DARasterOperation = (DISPID_DATransparency + 1)
    DISPID_DAPenTip = (DISPID_DARasterOperation + 1)
    DISPID_DAClone = (DISPID_DAPenTip + 1)
    DISPID_DAExtendedProperties = (DISPID_DAClone + 1)
End Enum

Public Enum DISPID_InkTransform
    DISPID_ITReset = 1
    DISPID_ITTranslate = (DISPID_ITReset + 1)
    DISPID_ITRotate = (DISPID_ITTranslate + 1)
    DISPID_ITReflect = (DISPID_ITRotate + 1)
    DISPID_ITShear = (DISPID_ITReflect + 1)
    DISPID_ITScale = (DISPID_ITShear + 1)
    DISPID_ITeM11 = (DISPID_ITScale + 1)
    DISPID_ITeM12 = (DISPID_ITeM11 + 1)
    DISPID_ITeM21 = (DISPID_ITeM12 + 1)
    DISPID_ITeM22 = (DISPID_ITeM21 + 1)
    DISPID_ITeDx = (DISPID_ITeM22 + 1)
    DISPID_ITeDy = (DISPID_ITeDx + 1)
    DISPID_ITGetTransform = (DISPID_ITeDy + 1)
    DISPID_ITSetTransform = (DISPID_ITGetTransform + 1)
    DISPID_ITData = (DISPID_ITSetTransform + 1)
End Enum

Public Enum InkApplicationGesture
    IAG_AllGestures = 0
    IAG_NoGesture = &Hf000&
    IAG_Scratchout = &Hf001&
    IAG_Triangle = &Hf002&
    IAG_Square = &Hf003&
    IAG_Star = &Hf004&
    IAG_Check = &Hf005&
    IAG_Curlicue = &Hf010&
    IAG_DoubleCurlicue = &Hf011&
    IAG_Circle = &Hf020&
    IAG_DoubleCircle = &Hf021&
    IAG_SemiCircleLeft = &Hf028&
    IAG_SemiCircleRight = &Hf029&
    IAG_ChevronUp = &Hf030&
    IAG_ChevronDown = &Hf031&
    IAG_ChevronLeft = &Hf032&
    IAG_ChevronRight = &Hf033&
    IAG_ArrowUp = &Hf038&
    IAG_ArrowDown = &Hf039&
    IAG_ArrowLeft = &Hf03a&
    IAG_ArrowRight = &Hf03b&
    IAG_Up = &Hf058&
    IAG_Down = &Hf059&
    IAG_Left = &Hf05a&
    IAG_Right = &Hf05b&
    IAG_UpDown = &Hf060&
    IAG_DownUp = &Hf061&
    IAG_LeftRight = &Hf062&
    IAG_RightLeft = &Hf063&
    IAG_UpLeftLong = &Hf064&
    IAG_UpRightLong = &Hf065&
    IAG_DownLeftLong = &Hf066&
    IAG_DownRightLong = &Hf067&
    IAG_UpLeft = &Hf068&
    IAG_UpRight = &Hf069&
    IAG_DownLeft = &Hf06a&
    IAG_DownRight = &Hf06b&
    IAG_LeftUp = &Hf06c&
    IAG_LeftDown = &Hf06d&
    IAG_RightUp = &Hf06e&
    IAG_RightDown = &Hf06f&
    IAG_Exclamation = &Hf0a4&
    IAG_Tap = &Hf0f0&
    IAG_DoubleTap = &Hf0f1&
End Enum

Public Enum InkSystemGesture
    ISG_Tap = &H10
    ISG_DoubleTap = &H11
    ISG_RightTap = &H12
    ISG_Drag = &H13
    ISG_RightDrag = &H14
    ISG_HoldEnter = &H15
    ISG_HoldLeave = &H16
    ISG_HoverEnter = &H17
    ISG_HoverLeave = &H18
    ISG_Flick = &H1f
    ISG_First = ISG_Tap
    ISG_Last = ISG_Flick
End Enum

Public Enum InkRecognitionConfidence
    IRC_Strong = 0
    IRC_Intermediate = 1
    IRC_Poor = 2
End Enum

Public Enum DISPID_InkGesture
    DISPID_IGId = DISPID_VALUE
    DISPID_IGGetHotPoint = (DISPID_IGId + 1)
    DISPID_IGConfidence = (DISPID_IGGetHotPoint + 1)
End Enum

Public Enum DISPID_InkCursor
    DISPID_ICsrName = DISPID_VALUE
    DISPID_ICsrId = 1
    DISPID_ICsrDrawingAttributes = (DISPID_ICsrId + 1)
    DISPID_ICsrButtons = (DISPID_ICsrDrawingAttributes + 1)
    DISPID_ICsrInverted = (DISPID_ICsrButtons + 1)
    DISPID_ICsrTablet = (DISPID_ICsrInverted + 1)
End Enum

Public Enum DISPID_InkCursors
    DISPID_ICs_NewEnum = DISPID_NEWENUM
    DISPID_ICsItem = DISPID_VALUE
    DISPID_ICsCount = 1
End Enum

Public Enum InkCursorButtonState
    ICBS_Unavailable = 0
    ICBS_Up = (ICBS_Unavailable + 1)
    ICBS_Down = (ICBS_Up + 1)
    ICBS_Last = ICBS_Down
End Enum

Public Enum DISPID_InkCursorButton
    DISPID_ICBName = DISPID_VALUE
    DISPID_ICBId = 1
    DISPID_ICBState = (DISPID_ICBId + 1)
End Enum

Public Enum DISPID_InkCursorButtons
    DISPID_ICBs_NewEnum = DISPID_NEWENUM
    DISPID_ICBsItem = DISPID_VALUE
    DISPID_ICBsCount = 1
End Enum

Public Enum TabletHardwareCapabilities
    THWC_Integrated = &H1
    THWC_CursorMustTouch = &H2
    THWC_HardProximity = &H4
    THWC_CursorsHavePhysicalIds = &H8
End Enum

Public Enum TabletPropertyMetricUnit
    TPMU_Default = 0
    TPMU_Inches = (TPMU_Default + 1)
    TPMU_Centimeters = (TPMU_Inches + 1)
    TPMU_Degrees = (TPMU_Centimeters + 1)
    TPMU_Radians = (TPMU_Degrees + 1)
    TPMU_Seconds = (TPMU_Radians + 1)
    TPMU_Pounds = (TPMU_Seconds + 1)
    TPMU_Grams = (TPMU_Pounds + 1)
End Enum

Public Enum DISPID_InkTablet
    DISPID_ITName = DISPID_VALUE
    DISPID_ITPlugAndPlayId = 1
    DISPID_ITPropertyMetrics = (DISPID_ITPlugAndPlayId + 1)
    DISPID_ITIsPacketPropertySupported = (DISPID_ITPropertyMetrics + 1)
    DISPID_ITMaximumInputRectangle = (DISPID_ITIsPacketPropertySupported + 1)
    DISPID_ITHardwareCapabilities = (DISPID_ITMaximumInputRectangle + 1)
End Enum

Public Enum TabletDeviceKind
    TDK_Mouse = 0
    TDK_Pen = (TDK_Mouse + 1)
    TDK_Touch = (TDK_Pen + 1)
End Enum

Public Enum DISPID_InkTablet2
    DISPID_IT2DeviceKind = DISPID_VALUE
End Enum

Public Enum DISPID_InkTablet3
    DISPID_IT3IsMultiTouch = DISPID_VALUE
    DISPID_IT3MaximumCursors = (DISPID_IT3IsMultiTouch + 1)
End Enum

Public Enum DISPID_InkStrokeDisp
    DISPID_ISDInkIndex = 1
    DISPID_ISDID = (DISPID_ISDInkIndex + 1)
    DISPID_ISDGetBoundingBox = (DISPID_ISDID + 1)
    DISPID_ISDDrawingAttributes = (DISPID_ISDGetBoundingBox + 1)
    DISPID_ISDFindIntersections = (DISPID_ISDDrawingAttributes + 1)
    DISPID_ISDGetRectangleIntersections = (DISPID_ISDFindIntersections + 1)
    DISPID_ISDClip = (DISPID_ISDGetRectangleIntersections + 1)
    DISPID_ISDHitTestCircle = (DISPID_ISDClip + 1)
    DISPID_ISDNearestPoint = (DISPID_ISDHitTestCircle + 1)
    DISPID_ISDSplit = (DISPID_ISDNearestPoint + 1)
    DISPID_ISDExtendedProperties = (DISPID_ISDSplit + 1)
    DISPID_ISDInk = (DISPID_ISDExtendedProperties + 1)
    DISPID_ISDBezierPoints = (DISPID_ISDInk + 1)
    DISPID_ISDPolylineCusps = (DISPID_ISDBezierPoints + 1)
    DISPID_ISDBezierCusps = (DISPID_ISDPolylineCusps + 1)
    DISPID_ISDSelfIntersections = (DISPID_ISDBezierCusps + 1)
    DISPID_ISDPacketCount = (DISPID_ISDSelfIntersections + 1)
    DISPID_ISDPacketSize = (DISPID_ISDPacketCount + 1)
    DISPID_ISDPacketDescription = (DISPID_ISDPacketSize + 1)
    DISPID_ISDDeleted = (DISPID_ISDPacketDescription + 1)
    DISPID_ISDGetPacketDescriptionPropertyMetrics = (DISPID_ISDDeleted + 1)
    DISPID_ISDGetPoints = (DISPID_ISDGetPacketDescriptionPropertyMetrics + 1)
    DISPID_ISDSetPoints = (DISPID_ISDGetPoints + 1)
    DISPID_ISDGetPacketData = (DISPID_ISDSetPoints + 1)
    DISPID_ISDGetPacketValuesByProperty = (DISPID_ISDGetPacketData + 1)
    DISPID_ISDSetPacketValuesByProperty = (DISPID_ISDGetPacketValuesByProperty + 1)
    DISPID_ISDGetFlattenedBezierPoints = (DISPID_ISDSetPacketValuesByProperty + 1)
    DISPID_ISDScaleToRectangle = (DISPID_ISDGetFlattenedBezierPoints + 1)
    DISPID_ISDTransform = (DISPID_ISDScaleToRectangle + 1)
    DISPID_ISDMove = (DISPID_ISDTransform + 1)
    DISPID_ISDRotate = (DISPID_ISDMove + 1)
    DISPID_ISDShear = (DISPID_ISDRotate + 1)
    DISPID_ISDScale = (DISPID_ISDShear + 1)
End Enum

Public Enum DISPID_InkStrokes
    DISPID_ISs_NewEnum = DISPID_NEWENUM
    DISPID_ISsItem = DISPID_VALUE
    DISPID_ISsCount = 1
    DISPID_ISsValid = (DISPID_ISsCount + 1)
    DISPID_ISsInk = (DISPID_ISsValid + 1)
    DISPID_ISsAdd = (DISPID_ISsInk + 1)
    DISPID_ISsAddStrokes = (DISPID_ISsAdd + 1)
    DISPID_ISsRemove = (DISPID_ISsAddStrokes + 1)
    DISPID_ISsRemoveStrokes = (DISPID_ISsRemove + 1)
    DISPID_ISsToString = (DISPID_ISsRemoveStrokes + 1)
    DISPID_ISsModifyDrawingAttributes = (DISPID_ISsToString + 1)
    DISPID_ISsGetBoundingBox = (DISPID_ISsModifyDrawingAttributes + 1)
    DISPID_ISsScaleToRectangle = (DISPID_ISsGetBoundingBox + 1)
    DISPID_ISsTransform = (DISPID_ISsScaleToRectangle + 1)
    DISPID_ISsMove = (DISPID_ISsTransform + 1)
    DISPID_ISsRotate = (DISPID_ISsMove + 1)
    DISPID_ISsShear = (DISPID_ISsRotate + 1)
    DISPID_ISsScale = (DISPID_ISsShear + 1)
    DISPID_ISsClip = (DISPID_ISsScale + 1)
    DISPID_ISsRecognitionResult = (DISPID_ISsClip + 1)
    DISPID_ISsRemoveRecognitionResult = (DISPID_ISsRecognitionResult + 1)
End Enum

Public Enum DISPID_InkCustomStrokes
    DISPID_ICSs_NewEnum = DISPID_NEWENUM
    DISPID_ICSsItem = DISPID_VALUE
    DISPID_ICSsCount = 1
    DISPID_ICSsAdd = (DISPID_ICSsCount + 1)
    DISPID_ICSsRemove = (DISPID_ICSsAdd + 1)
    DISPID_ICSsClear = (DISPID_ICSsRemove + 1)
End Enum

Public Enum DISPID_StrokeEvent
    DISPID_SEStrokesAdded = 1
    DISPID_SEStrokesRemoved = (DISPID_SEStrokesAdded + 1)
End Enum

Public Enum DISPID_Ink
    DISPID_IStrokes = 1
    DISPID_IExtendedProperties = (DISPID_IStrokes + 1)
    DISPID_IGetBoundingBox = (DISPID_IExtendedProperties + 1)
    DISPID_IDeleteStrokes = (DISPID_IGetBoundingBox + 1)
    DISPID_IDeleteStroke = (DISPID_IDeleteStrokes + 1)
    DISPID_IExtractStrokes = (DISPID_IDeleteStroke + 1)
    DISPID_IExtractWithRectangle = (DISPID_IExtractStrokes + 1)
    DISPID_IDirty = (DISPID_IExtractWithRectangle + 1)
    DISPID_ICustomStrokes = (DISPID_IDirty + 1)
    DISPID_IClone = (DISPID_ICustomStrokes + 1)
    DISPID_IHitTestCircle = (DISPID_IClone + 1)
    DISPID_IHitTestWithRectangle = (DISPID_IHitTestCircle + 1)
    DISPID_IHitTestWithLasso = (DISPID_IHitTestWithRectangle + 1)
    DISPID_INearestPoint = (DISPID_IHitTestWithLasso + 1)
    DISPID_ICreateStrokes = (DISPID_INearestPoint + 1)
    DISPID_ICreateStroke = (DISPID_ICreateStrokes + 1)
    DISPID_IAddStrokesAtRectangle = (DISPID_ICreateStroke + 1)
    DISPID_IClip = (DISPID_IAddStrokesAtRectangle + 1)
    DISPID_ISave = (DISPID_IClip + 1)
    DISPID_ILoad = (DISPID_ISave + 1)
    DISPID_ICreateStrokeFromPoints = (DISPID_ILoad + 1)
    DISPID_IClipboardCopyWithRectangle = (DISPID_ICreateStrokeFromPoints + 1)
    DISPID_IClipboardCopy = (DISPID_IClipboardCopyWithRectangle + 1)
    DISPID_ICanPaste = (DISPID_IClipboardCopy + 1)
    DISPID_IClipboardPaste = (DISPID_ICanPaste + 1)
End Enum

Public Enum DISPID_InkEvent
    DISPID_IEInkAdded = 1
    DISPID_IEInkDeleted = (DISPID_IEInkAdded + 1)
End Enum

Public Enum DISPID_InkRenderer
    DISPID_IRGetViewTransform = 1
    DISPID_IRSetViewTransform = (DISPID_IRGetViewTransform + 1)
    DISPID_IRGetObjectTransform = (DISPID_IRSetViewTransform + 1)
    DISPID_IRSetObjectTransform = (DISPID_IRGetObjectTransform + 1)
    DISPID_IRDraw = (DISPID_IRSetObjectTransform + 1)
    DISPID_IRDrawStroke = (DISPID_IRDraw + 1)
    DISPID_IRPixelToInkSpace = (DISPID_IRDrawStroke + 1)
    DISPID_IRInkSpaceToPixel = (DISPID_IRPixelToInkSpace + 1)
    DISPID_IRPixelToInkSpaceFromPoints = (DISPID_IRInkSpaceToPixel + 1)
    DISPID_IRInkSpaceToPixelFromPoints = (DISPID_IRPixelToInkSpaceFromPoints + 1)
    DISPID_IRMeasure = (DISPID_IRInkSpaceToPixelFromPoints + 1)
    DISPID_IRMeasureStroke = (DISPID_IRMeasure + 1)
    DISPID_IRMove = (DISPID_IRMeasureStroke + 1)
    DISPID_IRRotate = (DISPID_IRMove + 1)
    DISPID_IRScale = (DISPID_IRRotate + 1)
End Enum

Public Enum InkCollectorEventInterest
    ICEI_DefaultEvents = -1
    ICEI_CursorDown = (ICEI_DefaultEvents + 1)
    ICEI_Stroke = (ICEI_CursorDown + 1)
    ICEI_NewPackets = (ICEI_Stroke + 1)
    ICEI_NewInAirPackets = (ICEI_NewPackets + 1)
    ICEI_CursorButtonDown = (ICEI_NewInAirPackets + 1)
    ICEI_CursorButtonUp = (ICEI_CursorButtonDown + 1)
    ICEI_CursorInRange = (ICEI_CursorButtonUp + 1)
    ICEI_CursorOutOfRange = (ICEI_CursorInRange + 1)
    ICEI_SystemGesture = (ICEI_CursorOutOfRange + 1)
    ICEI_TabletAdded = (ICEI_SystemGesture + 1)
    ICEI_TabletRemoved = (ICEI_TabletAdded + 1)
    ICEI_MouseDown = (ICEI_TabletRemoved + 1)
    ICEI_MouseMove = (ICEI_MouseDown + 1)
    ICEI_MouseUp = (ICEI_MouseMove + 1)
    ICEI_MouseWheel = (ICEI_MouseUp + 1)
    ICEI_DblClick = (ICEI_MouseWheel + 1)
    ICEI_AllEvents = (ICEI_DblClick + 1)
End Enum

Public Enum InkMouseButton
    IMF_Left = 1
    IMF_Right = 2
    IMF_Middle = 4
End Enum

Public Enum InkShiftKeyModifierFlags
    IKM_Shift = &H1
    IKM_Control = &H2
    IKM_Alt = &H4
End Enum

Public Enum DISPID_InkCollectorEvent
    DISPID_ICEStroke = 1
    DISPID_ICECursorDown = (DISPID_ICEStroke + 1)
    DISPID_ICENewPackets = (DISPID_ICECursorDown + 1)
    DISPID_ICENewInAirPackets = (DISPID_ICENewPackets + 1)
    DISPID_ICECursorButtonDown = (DISPID_ICENewInAirPackets + 1)
    DISPID_ICECursorButtonUp = (DISPID_ICECursorButtonDown + 1)
    DISPID_ICECursorInRange = (DISPID_ICECursorButtonUp + 1)
    DISPID_ICECursorOutOfRange = (DISPID_ICECursorInRange + 1)
    DISPID_ICESystemGesture = (DISPID_ICECursorOutOfRange + 1)
    DISPID_ICEGesture = (DISPID_ICESystemGesture + 1)
    DISPID_ICETabletAdded = (DISPID_ICEGesture + 1)
    DISPID_ICETabletRemoved = (DISPID_ICETabletAdded + 1)
    DISPID_IOEPainting = (DISPID_ICETabletRemoved + 1)
    DISPID_IOEPainted = (DISPID_IOEPainting + 1)
    DISPID_IOESelectionChanging = (DISPID_IOEPainted + 1)
    DISPID_IOESelectionChanged = (DISPID_IOESelectionChanging + 1)
    DISPID_IOESelectionMoving = (DISPID_IOESelectionChanged + 1)
    DISPID_IOESelectionMoved = (DISPID_IOESelectionMoving + 1)
    DISPID_IOESelectionResizing = (DISPID_IOESelectionMoved + 1)
    DISPID_IOESelectionResized = (DISPID_IOESelectionResizing + 1)
    DISPID_IOEStrokesDeleting = (DISPID_IOESelectionResized + 1)
    DISPID_IOEStrokesDeleted = (DISPID_IOEStrokesDeleting + 1)
    DISPID_IPEChangeUICues = (DISPID_IOEStrokesDeleted + 1)
    DISPID_IPEClick = (DISPID_IPEChangeUICues + 1)
    DISPID_IPEDblClick = (DISPID_IPEClick + 1)
    DISPID_IPEInvalidated = (DISPID_IPEDblClick + 1)
    DISPID_IPEMouseDown = (DISPID_IPEInvalidated + 1)
    DISPID_IPEMouseEnter = (DISPID_IPEMouseDown + 1)
    DISPID_IPEMouseHover = (DISPID_IPEMouseEnter + 1)
    DISPID_IPEMouseLeave = (DISPID_IPEMouseHover + 1)
    DISPID_IPEMouseMove = (DISPID_IPEMouseLeave + 1)
    DISPID_IPEMouseUp = (DISPID_IPEMouseMove + 1)
    DISPID_IPEMouseWheel = (DISPID_IPEMouseUp + 1)
    DISPID_IPESizeModeChanged = (DISPID_IPEMouseWheel + 1)
    DISPID_IPEStyleChanged = (DISPID_IPESizeModeChanged + 1)
    DISPID_IPESystemColorsChanged = (DISPID_IPEStyleChanged + 1)
    DISPID_IPEKeyDown = (DISPID_IPESystemColorsChanged + 1)
    DISPID_IPEKeyPress = (DISPID_IPEKeyDown + 1)
    DISPID_IPEKeyUp = (DISPID_IPEKeyPress + 1)
    DISPID_IPEResize = (DISPID_IPEKeyUp + 1)
    DISPID_IPESizeChanged = (DISPID_IPEResize + 1)
End Enum

Public Enum InkOverlayEditingMode
    IOEM_Ink = 0
    IOEM_Delete = 1
    IOEM_Select = 2
    IOEM_Last = IOEM_Select + 1
End Enum

Public Enum InkOverlayAttachMode
    IOAM_Behind = 0
    IOAM_InFront = 1
    IOAM_Last = IOAM_InFront + 1
End Enum

Public Enum InkPictureSizeMode
    IPSM_AutoSize = 0
    IPSM_CenterImage = 1
    IPSM_Normal = 2
    IPSM_StretchImage = 3
    IPSM_Last = IPSM_StretchImage + 1
End Enum

Public Enum InkOverlayEraserMode
    IOERM_StrokeErase = 0
    IOERM_PointErase = 1
    IOERM_Last = IOERM_PointErase + 1
End Enum

Public Enum InkCollectionMode
    ICM_InkOnly = 0
    ICM_GestureOnly = (ICM_InkOnly + 1)
    ICM_InkAndGesture = (ICM_GestureOnly + 1)
    ICM_Last = ICM_InkAndGesture
End Enum

Public Enum DISPID_InkCollector
    DISPID_ICEnabled = 1
    DISPID_ICHwnd = (DISPID_ICEnabled + 1)
    DISPID_ICPaint = (DISPID_ICHwnd + 1)
    DISPID_ICText = (DISPID_ICPaint + 1)
    DISPID_ICDefaultDrawingAttributes = (DISPID_ICText + 1)
    DISPID_ICRenderer = (DISPID_ICDefaultDrawingAttributes + 1)
    DISPID_ICInk = (DISPID_ICRenderer + 1)
    DISPID_ICAutoRedraw = (DISPID_ICInk + 1)
    DISPID_ICCollectingInk = (DISPID_ICAutoRedraw + 1)
    DISPID_ICSetEventInterest = (DISPID_ICCollectingInk + 1)
    DISPID_ICGetEventInterest = (DISPID_ICSetEventInterest + 1)
    DISPID_IOEditingMode = (DISPID_ICGetEventInterest + 1)
    DISPID_IOSelection = (DISPID_IOEditingMode + 1)
    DISPID_IOAttachMode = (DISPID_IOSelection + 1)
    DISPID_IOHitTestSelection = (DISPID_IOAttachMode + 1)
    DISPID_IODraw = (DISPID_IOHitTestSelection + 1)
    DISPID_IPPicture = (DISPID_IODraw + 1)
    DISPID_IPSizeMode = (DISPID_IPPicture + 1)
    DISPID_IPBackColor = (DISPID_IPSizeMode + 1)
    DISPID_ICCursors = (DISPID_IPBackColor + 1)
    DISPID_ICMarginX = (DISPID_ICCursors + 1)
    DISPID_ICMarginY = (DISPID_ICMarginX + 1)
    DISPID_ICSetWindowInputRectangle = (DISPID_ICMarginY + 1)
    DISPID_ICGetWindowInputRectangle = (DISPID_ICSetWindowInputRectangle + 1)
    DISPID_ICTablet = (DISPID_ICGetWindowInputRectangle + 1)
    DISPID_ICSetAllTabletsMode = (DISPID_ICTablet + 1)
    DISPID_ICSetSingleTabletIntegratedMode = (DISPID_ICSetAllTabletsMode + 1)
    DISPID_ICCollectionMode = (DISPID_ICSetSingleTabletIntegratedMode + 1)
    DISPID_ICSetGestureStatus = (DISPID_ICCollectionMode + 1)
    DISPID_ICGetGestureStatus = (DISPID_ICSetGestureStatus + 1)
    DISPID_ICDynamicRendering = (DISPID_ICGetGestureStatus + 1)
    DISPID_ICDesiredPacketDescription = (DISPID_ICDynamicRendering + 1)
    DISPID_IOEraserMode = (DISPID_ICDesiredPacketDescription + 1)
    DISPID_IOEraserWidth = (DISPID_IOEraserMode + 1)
    DISPID_ICMouseIcon = (DISPID_IOEraserWidth + 1)
    DISPID_ICMousePointer = (DISPID_ICMouseIcon + 1)
    DISPID_IPInkEnabled = (DISPID_ICMousePointer + 1)
    DISPID_ICSupportHighContrastInk = (DISPID_IPInkEnabled + 1)
    DISPID_IOSupportHighContrastSelectionUI = (DISPID_ICSupportHighContrastInk + 1)
End Enum

Public Enum DISPID_InkRecognizer
    DISPID_RecoClsid = 1
    DISPID_RecoName = (DISPID_RecoClsid + 1)
    DISPID_RecoVendor = (DISPID_RecoName + 1)
    DISPID_RecoCapabilities = (DISPID_RecoVendor + 1)
    DISPID_RecoLanguageID = (DISPID_RecoCapabilities + 1)
    DISPID_RecoPreferredPacketDescription = (DISPID_RecoLanguageID + 1)
    DISPID_RecoCreateRecognizerContext = (DISPID_RecoPreferredPacketDescription + 1)
    DISPID_RecoSupportedProperties = (DISPID_RecoCreateRecognizerContext + 1)
End Enum

Public Enum InkRecognizerCapabilities
    IRC_DontCare = 1
    IRC_Object = 2
    IRC_FreeInput = 4
    IRC_LinedInput = 8
    IRC_BoxedInput = 16
    IRC_CharacterAutoCompletionInput = 32
    IRC_RightAndDown = 64
    IRC_LeftAndDown = 128
    IRC_DownAndLeft = 256
    IRC_DownAndRight = 512
    IRC_ArbitraryAngle = 1024
    IRC_Lattice = 2048
    IRC_AdviseInkChange = 4096
    IRC_StrokeReorder = 8192
    IRC_Personalizable = 16384
    IRC_PrefersArbitraryAngle = 32768
    IRC_PrefersParagraphBreaking = 65536
    IRC_PrefersSegmentation = 131072
    IRC_Cursive = 262144
    IRC_TextPrediction = 524288
    IRC_Alpha = 1048576
    IRC_Beta = 2097152
End Enum

Public Enum DISPID_InkRecognizer2
    DISPID_RecoId = DISPID_VALUE
    DISPID_RecoUnicodeRanges = 1
End Enum

Public Enum DISPID_InkRecognizers
    DISPID_IRecos_NewEnum = DISPID_NEWENUM
    DISPID_IRecosItem = DISPID_VALUE
    DISPID_IRecosCount = 1
    DISPID_IRecosGetDefaultRecognizer = (DISPID_IRecosCount + 1)
End Enum

Public Enum InkRecognizerCharacterAutoCompletionMode
    IRCACM_Full = 0
    IRCACM_Prefix = (IRCACM_Full + 1)
    IRCACM_Random = (IRCACM_Prefix + 1)
End Enum

Public Enum InkRecognitionModes
    IRM_None = 0
    IRM_WordModeOnly = &H1
    IRM_Coerce = &H2
    IRM_TopInkBreaksOnly = &H4
    IRM_PrefixOk = &H8
    IRM_LineMode = &H10
    IRM_DisablePersonalization = &H20
    IRM_AutoSpace = &H40
    IRM_Max = &H80
End Enum

Public Enum DISPID_InkRecognitionEvent
    DISPID_IRERecognitionWithAlternates = 1
    DISPID_IRERecognition = (DISPID_IRERecognitionWithAlternates + 1)
End Enum

Public Enum DISPID_InkRecoContext
    DISPID_IRecoCtx_Strokes = 1
    DISPID_IRecoCtx_CharacterAutoCompletionMode = (DISPID_IRecoCtx_Strokes + 1)
    DISPID_IRecoCtx_Factoid = (DISPID_IRecoCtx_CharacterAutoCompletionMode + 1)
    DISPID_IRecoCtx_WordList = (DISPID_IRecoCtx_Factoid + 1)
    DISPID_IRecoCtx_Recognizer = (DISPID_IRecoCtx_WordList + 1)
    DISPID_IRecoCtx_Guide = (DISPID_IRecoCtx_Recognizer + 1)
    DISPID_IRecoCtx_Flags = (DISPID_IRecoCtx_Guide + 1)
    DISPID_IRecoCtx_PrefixText = (DISPID_IRecoCtx_Flags + 1)
    DISPID_IRecoCtx_SuffixText = (DISPID_IRecoCtx_PrefixText + 1)
    DISPID_IRecoCtx_StopRecognition = (DISPID_IRecoCtx_SuffixText + 1)
    DISPID_IRecoCtx_Clone = (DISPID_IRecoCtx_StopRecognition + 1)
    DISPID_IRecoCtx_Recognize = (DISPID_IRecoCtx_Clone + 1)
    DISPID_IRecoCtx_StopBackgroundRecognition = (DISPID_IRecoCtx_Recognize + 1)
    DISPID_IRecoCtx_EndInkInput = (DISPID_IRecoCtx_StopBackgroundRecognition + 1)
    DISPID_IRecoCtx_BackgroundRecognize = (DISPID_IRecoCtx_EndInkInput + 1)
    DISPID_IRecoCtx_BackgroundRecognizeWithAlternates = (DISPID_IRecoCtx_BackgroundRecognize + 1)
    DISPID_IRecoCtx_IsStringSupported = (DISPID_IRecoCtx_BackgroundRecognizeWithAlternates + 1)
End Enum

Public Enum DISPID_InkRecoContext2
    DISPID_IRecoCtx2_EnabledUnicodeRanges = DISPID_VALUE
End Enum

Public Enum InkRecognitionAlternatesSelection
    IRAS_Start = 0
    IRAS_DefaultCount = 10
    IRAS_All = -1
End Enum

Public Enum DISPID_InkRecognitionResult
    DISPID_InkRecognitionResult_TopString = 1
    DISPID_InkRecognitionResult_TopAlternate = (DISPID_InkRecognitionResult_TopString + 1)
    DISPID_InkRecognitionResult_Strokes = (DISPID_InkRecognitionResult_TopAlternate + 1)
    DISPID_InkRecognitionResult_TopConfidence = (DISPID_InkRecognitionResult_Strokes + 1)
    DISPID_InkRecognitionResult_AlternatesFromSelection = (DISPID_InkRecognitionResult_TopConfidence + 1)
    DISPID_InkRecognitionResult_ModifyTopAlternate = (DISPID_InkRecognitionResult_AlternatesFromSelection + 1)
    DISPID_InkRecognitionResult_SetResultOnStrokes = (DISPID_InkRecognitionResult_ModifyTopAlternate + 1)
End Enum

Public Enum DISPID_InkRecoAlternate
    DISPID_InkRecoAlternate_String = 1
    DISPID_InkRecoAlternate_LineNumber = (DISPID_InkRecoAlternate_String + 1)
    DISPID_InkRecoAlternate_Baseline = (DISPID_InkRecoAlternate_LineNumber + 1)
    DISPID_InkRecoAlternate_Midline = (DISPID_InkRecoAlternate_Baseline + 1)
    DISPID_InkRecoAlternate_Ascender = (DISPID_InkRecoAlternate_Midline + 1)
    DISPID_InkRecoAlternate_Descender = (DISPID_InkRecoAlternate_Ascender + 1)
    DISPID_InkRecoAlternate_Confidence = (DISPID_InkRecoAlternate_Descender + 1)
    DISPID_InkRecoAlternate_Strokes = (DISPID_InkRecoAlternate_Confidence + 1)
    DISPID_InkRecoAlternate_GetStrokesFromStrokeRanges = (DISPID_InkRecoAlternate_Strokes + 1)
    DISPID_InkRecoAlternate_GetStrokesFromTextRange = (DISPID_InkRecoAlternate_GetStrokesFromStrokeRanges + 1)
    DISPID_InkRecoAlternate_GetTextRangeFromStrokes = (DISPID_InkRecoAlternate_GetStrokesFromTextRange + 1)
    DISPID_InkRecoAlternate_GetPropertyValue = (DISPID_InkRecoAlternate_GetTextRangeFromStrokes + 1)
    DISPID_InkRecoAlternate_LineAlternates = (DISPID_InkRecoAlternate_GetPropertyValue + 1)
    DISPID_InkRecoAlternate_ConfidenceAlternates = (DISPID_InkRecoAlternate_LineAlternates + 1)
    DISPID_InkRecoAlternate_AlternatesWithConstantPropertyValues = (DISPID_InkRecoAlternate_ConfidenceAlternates + 1)
End Enum

Public Enum DISPID_InkRecognitionAlternates
    DISPID_InkRecognitionAlternates_NewEnum = DISPID_NEWENUM
    DISPID_InkRecognitionAlternates_Item = DISPID_VALUE
    DISPID_InkRecognitionAlternates_Count = 1
    DISPID_InkRecognitionAlternates_Strokes = (DISPID_InkRecognitionAlternates_Count + 1)
End Enum

Public Type InkRecoGuide
    rectWritingBox As RECT
    rectDrawnBox As RECT
    cRows As Long
    cColumns As Long
    midline As Long
End Type

Public Enum DISPID_InkRecognizerGuide
    DISPID_IRGWritingBox = 1
    DISPID_IRGDrawnBox = (DISPID_IRGWritingBox + 1)
    DISPID_IRGRows = (DISPID_IRGDrawnBox + 1)
    DISPID_IRGColumns = (DISPID_IRGRows + 1)
    DISPID_IRGMidline = (DISPID_IRGColumns + 1)
    DISPID_IRGGuideData = (DISPID_IRGMidline + 1)
End Enum

Public Enum DISPID_InkWordList
    DISPID_InkWordList_AddWord = 0
    DISPID_InkWordList_RemoveWord = (DISPID_InkWordList_AddWord + 1)
    DISPID_InkWordList_Merge = (DISPID_InkWordList_RemoveWord + 1)
End Enum

Public Enum DISPID_InkWordList2
    DISPID_InkWordList2_AddWords = (DISPID_InkWordList_Merge + 1)
End Enum


























Public Enum RealTimeStylusDataInterest
    RTSDI_AllData = &Hffffffff
    RTSDI_None = 0
    RTSDI_Error = &H1
    RTSDI_RealTimeStylusEnabled = &H2
    RTSDI_RealTimeStylusDisabled = &H4
    RTSDI_StylusNew = &H8
    RTSDI_StylusInRange = &H10
    RTSDI_InAirPackets = &H20
    RTSDI_StylusOutOfRange = &H40
    RTSDI_StylusDown = &H80
    RTSDI_Packets = &H100
    RTSDI_StylusUp = &H200
    RTSDI_StylusButtonUp = &H400
    RTSDI_StylusButtonDown = &H800
    RTSDI_SystemEvents = &H1000
    RTSDI_TabletAdded = &H2000
    RTSDI_TabletRemoved = &H4000
    RTSDI_CustomStylusDataAdded = &H8000&
    RTSDI_UpdateMapping = &H10000
    RTSDI_DefaultEvents = ((((((RTSDI_RealTimeStylusEnabled Or RTSDI_RealTimeStylusDisabled) Or RTSDI_StylusDown) Or RTSDI_Packets) Or RTSDI_StylusUp) Or RTSDI_SystemEvents) Or RTSDI_CustomStylusDataAdded)
End Enum





Public Function GUID_GESTURE_DATA() As UUID
'{41E4EC0F-26AA-455A-9AA5-2CD36CF63FB9}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H41E4EC0F, CInt(&H26AA), CInt(&H455A), &H9A, &HA5, &H2C, &HD3, &H6C, &HF6, &H3F, &HB9)
  GUID_GESTURE_DATA = iid
End Function
Public Function GUID_DYNAMIC_RENDERER_CACHED_DATA() As UUID
'{BF531B92-25BF-4A95-89AD-0E476B34B4F5}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HBF531B92, CInt(&H25BF), CInt(&H4A95), &H89, &HAD, &H0E, &H47, &H6B, &H34, &HB4, &HF5)
  GUID_DYNAMIC_RENDERER_CACHED_DATA = iid
End Function

End Module