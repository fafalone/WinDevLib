'************************************************************************************
'WinDevLib - Windows Development Library for twinBASIC
'Version 8.5.454
'(c) 2022-2024 Jon Johnson (fafalone)
'Project GUID: {1FCDB98D-617D-4995-9736-2ED0E4746A10}
'
'(formerly tbShellLib)
'
'This project is a twinBASIC replacement for oleexp.tlb that is x64
'compatible, due to the many problems using midl to create a 64bit tlb.
'
'As a twinPACKAGE, the regular addin modules can be built in; all are included.
'
'Addititionally, this project covers all commonly used Windows APIs and an 
'increasingly large selection of specialized feature APIs. 
'
'This module:
'wdShellCore - Core shell interface set
'************************************************************************************
 

#Const WINDEVLIB_DEFINED = 1

#Region "Interfaces"
[InterfaceId("85CB6900-4D95-11CF-960C-0080C7F4EE85")]
[OleAutomation(False)]
Interface IShellWindows Extends stdole.IDispatch
    Function Count() As Long
    Function Item(ByVal index As Variant) As IDispatch
    Function NewEnum() As stdole.IUnknown
    Sub Register(ByVal pid As IDispatch, ByVal hwnd As Long, ByVal swClass As ShellWindowTypeConstants, plCookie As Long)
    Sub RegisterPending(ByVal lThreadId As Long, pvarloc As Variant, pvarlocRoot As Variant, ByVal swClass As ShellWindowTypeConstants, plCookie As Long)
    Sub Revoke(ByVal lCookie As Long)
    Sub OnNavigate(ByVal lCookie As Long, pvarLoc As Variant)
    Sub OnActivated(ByVal lCookie As Long, ByVal fActive As Boolean)
    Function FindWindowSW(pvarloc As Variant, pvarlocRoot As Variant, ByVal swClass As ShellWindowTypeConstants, phwnd As Long, ByVal swfwOptions As ShellWindowFindWindowOptions) As IDispatch
    Sub OnCreated(ByVal lCookie As Long, ByVal punk As stdole.IUnknown)
    Sub ProcessAttachDetach(ByVal fAttach As Boolean)
End Interface

[InterfaceId("000214E6-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IShellFolder Extends stdole.IUnknown
    [PreserveSig] Function ParseDisplayName(ByVal hwndOwner As LongPtr, ByVal pbc As LongPtr, ByVal lpszDisplayName As LongPtr, pchEaten As Long, ppidl As LongPtr, pdwAttributes As Long) As Long
    [PreserveSig] Function EnumObjects(ByVal hwndOwner As LongPtr, ByVal grfFlags As SHCONTF, ppEnumIdList As IEnumIDList) As Long
    [PreserveSig] Function BindToObject(ByVal pidl As LongPtr, ByVal pbc As LongPtr, riid As UUID, ppvOut As Any) As Long
    [PreserveSig] Function BindToStorage(ByVal pidl As LongPtr, ByVal pbc As LongPtr, riid As UUID, ppvOut As Any) As Long
    [PreserveSig] Function CompareIDs([TypeHint(SHCIDs_Flags)] ByVal lParam As LongPtr, ByVal pidl1 As LongPtr, ByVal pidl2 As LongPtr) As Long
    [PreserveSig] Function CreateViewObject(ByVal hwndOwner As LongPtr, riid As UUID, ppvOut As Any) As Long
    [PreserveSig] Function GetAttributesOf(ByVal cidl As Long, apidl As LongPtr, rgfInOut As SFGAOF) As Long
    [PreserveSig] Function GetUIObjectOf(ByVal hwndOwner As LongPtr, ByVal cidl As Long, apidl As LongPtr, riid As UUID, rgfReserved As Long, ppvOut As Any) As Long
    [PreserveSig] Function GetDisplayNameOf(ByVal pidl As LongPtr, ByVal uFlags As SHGDNF, lpName As STRRET) As Long
    [PreserveSig] Function SetNameOf(ByVal hwndOwner As LongPtr, ByVal pidl As LongPtr, ByVal lpszName As LongPtr, ByVal uFlags As SHGDNF, ppidlOut As LongPtr) As Long
End Interface
[InterfaceId("93F2F68C-1D1B-11d3-A30E-00C04F79ABD1")]
[OleAutomation(False)]
Interface IShellFolder2 Extends IShellFolder
    [PreserveSig] Function GetDefaultSearchGUID(pguid As UUID) As Long
    [PreserveSig] Function EnumSearches(ppEnum As IEnumExtraSearch) As Long
    [PreserveSig] Function GetDefaultColumn(ByVal dwRes As Long, pSort As Long, pDisplay As Long) As Long
    [PreserveSig] Function GetDefaultCOlumnState(ByVal iColumn As Long, pcsFlags As SHCOLSTATEF) As Long
    [PreserveSig] Function GetDetailsEx(ByVal pidl As LongPtr, pscid As SHCOLUMNID, pv As Variant) As Long
    [PreserveSig] Function GetDetailsOf(ByVal pidl As LongPtr, ByVal iColumn As Long, psd As SHELLDETAILS) As Long
    [PreserveSig] Function MapColumnToSCID(ByVal iColumn As Long, pscid As SHCOLUMNID) As Long
End Interface

[InterfaceId("2EC06C64-1296-4F53-89E5-ECCE4EFC2189")]
[OleAutomation(False)]
Interface IShellFolder3 Extends IShellFolder2
	Sub CreateFilteredIDList(ByVal pfc As IFilterCondition, ByVal type As Long, ByVal pps As IPropertyStore, pidlChild As LongPtr)
	Sub GetFilteredIDListType(ByVal pidlChild As LongPtr, type As Long)
	Sub ModifyFilteredIDList(ByVal pidlChild As LongPtr, ByVal pfc As IFilterCondition, pidlChildOut As LongPtr)
	Sub ReparentFilteredIDList(ByVal pidlRel As LongPtr, pidlRelOut As LongPtr)
	Sub CreateStackedIDList(pkey As PROPERTYKEY, pidlFull As LongPtr)
	Sub GetStackedKey(pkey As PROPERTYKEY)
	Sub EnumObjectsEx(ByVal hwnd As LongPtr, ByVal pbc As IBindCtx, ByVal unk As Long, ByVal pif As IItemFilter, ppEnum As IEnumIDList)
	Sub GetConditions(pkey As PROPERTYKEY, ByVal pqu As IUnknown /*IQueryUnit*/, riid As UUID, ppv As Any)
	Sub GetAutoListFlags(pdwFlags As Long)
End Interface

[InterfaceId("FCA2857D-1760-4AD3-8C63-C9B602FCBAEA")]
[OleAutomation(False)]
Interface IFilterCondition Extends IPersistStream
    Sub GetFilterName(ByVal filtername As Long, ByRef lpszName As LongPtr)
    Sub GetTypeFlags(ByRef dwFlags As Long)
    Sub GetPropertyKey(ByRef pkey As PROPERTYKEY)
    Sub GetCondition(ByRef ppCondition As ICondition)
End Interface
[InterfaceId("7FCBEB25-ED60-45C9-9F5E-57B48493C4DD")]
[OleAutomation(False)]
Interface IItemFilter Extends stdole.IUnknown
    Sub HasFilter(ByVal idx As Long, ByRef result As BOOL)
    Sub GetTextFilterCondition(ByVal textfilteroptions As Long, ByRef ppFilterCond As IFilterCondition)
    Sub GetTextPropKeys(ByRef lpKey As Long, ByRef nKey As Long)
    Sub GetFilterCondition(ByRef ppFilterCond As IFilterCondition)
    Sub GetPropertyFilter(ByRef pkey As PROPERTYKEY, ByRef ppFilterCond As IFilterCondition)
    Sub GetIDListFilters(ByRef ppObjs As IObjectArray)
End Interface

[InterfaceId("DD400FF4-A119-405F-970E-A9A5E7E828C0")]
[OleAutomation(False)]
Interface IScopeItem Extends IUnknown
	'unknown
End Interface
[InterfaceId("655D1685-2BFD-4F7F-AD22-5AB61C8D8798")]
[OleAutomation(False)]
Interface IScope Extends IUnknown
	Sub AddScopeItem(ByVal pItem As IScopeItem)
	Sub RemoveScopeItem(ByVal pItem As IScopeItem)
	Sub ItemIsIncluded(ByVal pItem As IScopeItem, ByVal index As Long)
	Sub GetKnownScope(riid As UUID)
	Sub IsEmpty()
	Sub Flatten()
	Sub IsEqual(ByVal pItem As IUnknown, ByVal cmpMode As Long)
	Sub Clone(riid As UUID, ppv As Any)
	Sub RemoveRootsMatchingUrlScheme(ByVal psz As LongPtr)
	Sub AddScopeTreeItem(ByVal pItem As IUnknown, ppvOut As Any, pOut As Long)
    Sub RemoveScopeTreeItem(ByVal pItem As IUnknown, ppvOut As Any, pOut As Long)
End Interface


[InterfaceId("43826D1E-E718-42EE-BC55-A1E261C37BFE")]
[OleAutomation(False)]
Interface IShellItem Extends stdole.IUnknown
    [PreserveSig] Function BindToHandler(ByVal pbc As LongPtr, rbhid As UUID, riid As UUID, ppvOut As Any) As Long
    [PreserveSig] Function GetParent(ppsi As IShellItem) As Long
    [PreserveSig] Function GetDisplayName(ByVal sigdnName As SIGDN, ppszName As LongPtr) As Long
    [PreserveSig] Function GetAttributes(ByVal sfgaoMask As SFGAOF, psfgaoAttributes As SFGAOF) As Long
    [PreserveSig] Function Compare(ByVal psi As IShellItem, ByVal hint As SICHINTF, piOrder As Long) As Long
End Interface
[InterfaceId("7e9fb0d3-919f-4307-ab2e-9b1860310c93")]
[OleAutomation(False)]
Interface IShellItem2 Extends IShellItem
    [PreserveSig] Function GetPropertyStore(ByVal flags As GETPROPERTYSTOREFLAGS, riid As UUID, ppv As Any) As Long
    [PreserveSig] Function GetPropertyStoreWithCreateObject(ByVal flags As GETPROPERTYSTOREFLAGS, ByVal pUnk As IUnknownUnrestricted, riid As UUID, ppv As Any) As Long
    [PreserveSig] Function GetPropertyStoreForKeys(rgKeys As PROPERTYKEY, ByVal cKeys As Long, ByVal flags As GETPROPERTYSTOREFLAGS, riid As UUID, ppv As Any) As Long
    [PreserveSig] Function GetPropertyDescriptionList(keyType As PROPERTYKEY, riid As UUID, ppv As Any) As Long
    [PreserveSig] Function Update(ByVal pbc As IBindCtx) As Long
    [PreserveSig] Function GetProperty(key As PROPERTYKEY, ppropvar As Variant) As Long
    [PreserveSig] Function GetCLSID(key As PROPERTYKEY, pclsid As UUID) As Long
    [PreserveSig] Function GetFileTime(key As PROPERTYKEY, pft As FILETIME) As Long
    [PreserveSig] Function GetInt32(key As PROPERTYKEY, pi As Long) As Long
    [PreserveSig] Function GetString(key As PROPERTYKEY, ppsz As LongPtr) As Long
    [PreserveSig] Function GetUInt32(key As PROPERTYKEY, pui As Long) As Long
    [PreserveSig] Function GetUInt64(key As PROPERTYKEY, pull As LongLong) As Long
    [PreserveSig] Function GetBool(key As PROPERTYKEY, pf As BOOL) As Long
End Interface
[InterfaceId("b63ea76d-1f85-456f-a19c-48159efa858b")]
[OleAutomation(False)]
Interface IShellItemArray Extends stdole.IUnknown
    Sub BindToHandler(ByVal pbc As LongPtr, bhid As UUID, riid As UUID, ppvOut As Any)
    Sub GetPropertyStore(ByVal flags As GETPROPERTYSTOREFLAGS, riid As UUID, ppv As Any)
    Sub GetPropertyDescriptionList(keytype As PROPERTYKEY, riid As UUID, ppv As Any)
    Sub GetAttributes(ByVal AttribFlags As SIATTRIBFLAGS, ByVal sfgaoMask As SFGAOF, psfgaoAttribs As SFGAOF)
    Sub GetCount(pdwNumItems As Long)
    Sub GetItemAt(ByVal dwIndex As Long, ppsi As IShellItem)
    Sub EnumItems(ppenumShellItems As IEnumShellItems)
End Interface

[InterfaceId("11a66efa-382e-451a-9234-1e0e12ef3085")]
[OleAutomation(False)]
Interface IShellLibrary Extends stdole.IUnknown
    [PreserveSig] Function LoadLibraryFromItem(ByVal psiLibrary As IShellItem, ByVal grfMode As STGM) As Long
    [PreserveSig] Function LoadLibraryFromKnownFolder(kfidLibrary As UUID, ByVal grfMode As STGM) As Long
    [PreserveSig] Function AddFolder(ByVal psiLocation As IShellItem) As Long
    [PreserveSig] Function RemoveFolder(ByVal psiLocation As IShellItem) As Long
    [PreserveSig] Function GetFolders(ByVal lff As LIBRARYFOLDERFILTER, riid As UUID, ppv As Any) As Long
    [PreserveSig] Function ResolveFolders(ByVal psiFolderToResolve As IShellItem, ByVal dwTimeout As Long, riid As UUID, ppv As Any) As Long
    [PreserveSig] Function GetDefaultSaveFolder(ByVal dsft As DEFAULTSAVEFOLDERTYPE, riid As UUID, ppv As Any) As Long
    [PreserveSig] Function SetDefaultSaveFolder(ByVal dsft As DEFAULTSAVEFOLDERTYPE, ByVal psi As IShellItem) As Long
    [PreserveSig] Function GetOptions(plofOptions As LIBRARYOPTIONFLAGS) As Long
    [PreserveSig] Function SetOptions(ByVal lofMask As LIBRARYOPTIONFLAGS, ByVal lofOptions As LIBRARYOPTIONFLAGS) As Long
    [PreserveSig] Function GetFolderType(pftid As UUID) As Long
    [PreserveSig] Function SetFolderType(ftid As UUID) As Long
    [PreserveSig] Function GetIcon(ppszIcon As LongPtr) As Long
    [PreserveSig] Function SetIcon(ByVal pszIcon As LongPtr) As Long
    [PreserveSig] Function Commit() As Long
    [PreserveSig] Function Save(ByVal psiFolderToSaveIn As IShellItem, ByVal pszLibraryName As LongPtr, ByVal lsf As LIBRARYSAVEFLAGS, ppsiSavedTo As IShellItem) As Long
    [PreserveSig] Function SaveInKnownFolder(kfidToSaveIn As UUID, ByVal pszLibraryName As LongPtr, ByVal lsf As LIBRARYSAVEFLAGS, ppsiSavedTo As IShellItem) As Long
End Interface

[InterfaceId("bcc18b79-ba16-442f-80c4-8a59c30c463b")]
[OleAutomation(False)]
Interface IShellItemImageFactory Extends stdole.iunknown
    [PreserveSig] Function GetImage(ByVal cxy As LongLong, ByVal flags As SIIGBF, phbm As LongPtr) As Long
End Interface

[InterfaceId("000214E5-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IShellIcon Extends stdole.IUnknown
    Sub GetIconOf(ByVal pidl As LongPtr, ByVal flags As GILFlags, lpIconIndex As IconIndexes)
End Interface

[InterfaceId("7d688a70-c613-11d0-999b-00c04fd655e1")]
[OleAutomation(False)]
Interface IShellIconOverlay Extends stdole.IUnknown
    Sub GetOverlayIndex(ByVal pidlRel As LongPtr, pIndex As Long)
    Sub GetOverlayIconIndex(ByVal pidlRel As LongPtr, pIndex As Long)
End Interface

[InterfaceId("0c6c4200-c589-11d0-999a-00c04fd655e1")]
[OleAutomation(False)]
Interface IShellIconOverlayIdentifier Extends stdole.IUnknown
    Sub IsMemberOf(ByVal pwszPath As LongPtr, ByVal dwAttrib As Long)
    Sub GetOverlayInfo(ByVal pwszIconFile As LongPtr, cchMax As Long, pIndex As Long, pdwFlags As Long)
    Sub GetPriority(piPriority As Long)
End Interface

[InterfaceId("f10b5e34-dd3b-42a7-aa7d-2f4ec54bb09b")]
[OleAutomation(False)]
Interface IShellIconOverlayManager Extends stdole.IUnknown
    Sub GetFileOverlayInfo(ByVal pwszPath As LongPtr, ByVal dwAttrib As Long, pIndex As Long, ByVal dwFlags As SIOM_Flags)
    Sub GetReservedOverlayInfo(ByVal pwszPath As LongPtr, ByVal dwAttrib As Long, pIndex As Long, ByVal dwFlags As SIOM_Flags, ByVal iReservedId As SIOM_Reserved)
    Sub RefreshOverlayImages(ByVal dwFlags As SIOM_Flags)
    Sub LoadNonloadedOverlayIdentifiers()
    Sub OverlayIndexFromImageIndex(ByVal iImage As Long, piIndex As Long, ByVal fAdd As BOOL)
End Interface


[InterfaceId("000214E2-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IShellBrowser Extends IOleWindow
    Sub InsertMenuSB(ByVal hMenuShared As LongPtr, lpMenuWidth As OLEMENUGROUPWIDTHS)
    Sub SetMenuSB(ByVal hMenuShared As LongPtr, ByVal holemenuReserved As LongPtr, ByVal hwndActiveObject As LongPtr)
    Sub RemoveWindowSB(ByVal hMenuShared As LongPtr)
    Sub SetStatusTextSB(ByVal lpszStatusText As String)
    Sub EnableModelessSB(ByVal fEnable As BOOL)
    Sub TranslateAcceleratorSB(lpMsg As MSG, ByVal wID As Integer)
    Sub BrowseObject(ByVal pidl As LongPtr, ByVal wFlags As BO_Flags)
    Sub GetViewStateStream(ByVal grfMode As Long, ppStrm As IStream)
    Sub GetControlWindow(ByVal id As GCW_IDs, lpHwnd As LongPtr)
    Sub SendControlMsg(ByVal id As GCW_IDs, ByVal uMsg As Long, ByVal wParam As LongPtr, lParam As Any, pret As LongPtr)
    Sub QueryActiveShellView(ppshv As IShellView)
    Sub OnViewWindowActive(ByVal ppshv As IShellView)
    Sub SetToolbarItems(lpButtons As Any, ByVal nButtons As Long, ByVal uFlags As STI_Flags)
End Interface

[InterfaceId("000214E3-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IShellView Extends IOleWindow
    Sub TranslateAccelerator(lpMsg As MSG)
    Sub EnableModelessSV(ByVal fEnable As BOOL)
    Sub UIActivate(ByVal uState As SVUIA_STATUS)
    Sub Refresh()
    Sub CreateViewWindow(ByVal lpPrevView As IShellView, lpfs As FOLDERSETTINGS, ByVal psb As IShellBrowser, prcView As RECT, phwnd As LongPtr)
    Sub DestroyViewWindow()
    Sub GetCurrentInfo(lpfs As FOLDERSETTINGS)
    Sub AddPropertySheetPages(ByVal dwReserved As Long, ByVal lpfn As LongPtr, ByVal lParam As LongPtr)
    Sub SaveViewState()
    Sub SelectItem(ByVal pidlItem As LongPtr, ByVal uFlags As SVSIF)
    Sub GetItemObject(ByVal uItem As SVGIO, riid As UUID, ppv As Any)
End Interface
[InterfaceId("88E39E80-3578-11CF-AE69-08002B2E1262")]
[OleAutomation(False)]
Interface IShellView2 Extends IShellView
    Sub GetView(pvid As UUID, ByVal uView As SV2GV_Flags)
    Sub CreateViewWindow2(lpParams As SV2CVW2_PARAMS)
    Sub HandleRename(ByVal pidlNew As LongPtr)
    Sub SelectItemAndPosition(ByVal pidlItem As LongPtr, ByVal uFlags As SVSIF, pt As POINT)
End Interface
[InterfaceId("ec39fa88-f8af-41c5-8421-38bed28f4673")]
[OleAutomation(False)]
Interface IShellView3 Extends IShellView2
    Sub CreateViewWindow3(ByVal psbOwner As IShellBrowser, ByVal psvPrev As IShellView, ByVal dwViewFlags As SV3CVW3_FLAGS, ByVal dwMask As FOLDERFLAGS, ByVal dwFlags As FOLDERFLAGS, pvid As UUID, prcView As RECT, phwndView As LongPtr)
End Interface

[InterfaceId("000214F1-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface ICommDlgBrowser Extends stdole.IUnknown
    Sub OnDefaultCommand(ByVal ppshv As IShellView)
    Sub OnStateChange(ByVal ppshv As IShellView, ByVal uChange As CBDOSC_FLAGS)
    Sub IncludeObject(ByVal ppshv As IShellView, ByVal pidl As LongPtr)
End Interface
[InterfaceId("10339516-2894-11D2-9039-00C04F8EEB3E")]
[OleAutomation(False)]
Interface ICommDlgBrowser2 Extends ICommDlgBrowser
    Sub Notify(ByVal ppshv As IShellView, ByVal dwNotifyType As CB2DN_TYPES)
    Sub GetDefaultMenuText(ByVal ppshv As IShellView, ByVal pszText As LongPtr, ByVal cchMax As Long)
    Sub GetViewFlags(ByRef pdwFlags As CDB2GVF_FLAGS)
End Interface

[InterfaceId("C8AD25A1-3294-41EE-8165-71174BD01C57")]
[OleAutomation(False)]
Interface ICommDlgBrowser3 Extends ICommDlgBrowser2
    Sub OnColumnClicked(ByVal ppshv As IShellView, ByVal iColumn As Long)
    Sub GetCurrentFilter(ByVal pszFileSpec As LongPtr, ByVal cchFileSpec As Long)
    Sub OnPreViewCreated(ByVal ppshv As IShellView)
End Interface

[InterfaceId("cde725b0-ccc9-4519-917e-325d72fab4ce")]
[OleAutomation(False)]
Interface IFolderView Extends stdole.IUnknown
    Sub GetCurrentViewMode(pViewMode As FOLDERVIEWMODE)
    Sub SetCurrentViewMode(ByVal ViewMode As FOLDERVIEWMODE)
    Sub GetFolder(riid As UUID, ppv As Any)
    Sub Item(ByVal iItemIndex As Long, ppidl As LongPtr)
    Sub ItemCount(ByVal uFlags As SVGIO, pcItems As Long)
    Sub Items(ByVal uFlags As SVGIO, riid As UUID, ppv As Any)
    Sub GetSelectionMarkedItem(piItem As Long)
    Sub GetFocusedItem(piItem As Long)
    Sub GetItemPosition(ByVal pidl As LongPtr, ppt As POINT)
    Sub GetSpacing(ppt As POINT)
	Sub GetDefaultSpacing(ppt As POINT)
    Sub GetAutoArrange()
    Sub SelectItem(ByVal iItem As Long, ByVal dwFlags As SVSIF)
    Sub SelectAndPositionItems(ByVal cidl As Long, apidl As LongPtr, apt As POINT, ByVal dwFlags As SVSIF)
End Interface
[InterfaceId("1af3a467-214f-4298-908e-06b03e0b39f9")]
[OleAutomation(False)]
Interface IFolderView2 Extends IFolderView
    Sub SetGroupBy(key As PROPERTYKEY, ByVal fAscending As BOOL)
    Sub GetGroupBy(key As PROPERTYKEY, pfAscending As BOOL)
    Sub SetViewProperty(ByVal pidl As LongPtr, propkey As PROPERTYKEY, propvar As Variant)
    Sub GetViewProperty(ByVal pidl As LongPtr, propkey As PROPERTYKEY, ppropvar As Variant)
    Sub SetTileViewProperties(ByVal pidl As LongPtr, ByVal pszPropList As LongPtr)
    Sub SetExtendedTileViewProperties(ByVal pidl As LongPtr, ByVal pszPropList As LongPtr)
    Sub SetText(ByVal iType As FVTEXTTYPE, ByVal pwszText As LongPtr)
    Sub SetCurrentFolderFlags(ByVal dwMask As FOLDERFLAGS, ByVal dwFlags As FOLDERFLAGS)
    Sub GetCurrentFolderFlags(pdwFlags As FOLDERFLAGS)
    Sub GetSortColumnCount(pcColumns As Long)
    Sub SetSortColumns(rgSortColumns As SORTCOLUMN, ByVal cColumns As Long)
    Sub GetSortColumns(rgSortColumns As SORTCOLUMN, ByVal cColumns As Long)
    Sub GetItem(ByVal iItem As Long, riid As UUID, ppv As Any)
    Sub GetVisibleItem(ByVal iStart As Long, ByVal fPrevious As BOOL, piItem As Long)
    Sub GetSelectedItem(ByVal iStart As Long, piItem As Long)
    Sub GetSelection(ByVal fNoneImpliesFolder As BOOL, ppsia As IShellItemArray)
    Sub GetSelectionState(ByVal pidl As LongPtr, pdwFlags As SVSIF)
    Sub InvokeVerbOnSelection(ByVal pszVerb As LongPtr)
    Sub SetViewModeAndIconSize(ByVal uViewMode As FOLDERVIEWMODE, ByVal iImageSize As Long)
    Sub GetViewModeAndIconSize(puViewMode As FOLDERVIEWMODE, piImageSize As Long)
    Sub SetGroupSubsetCount(ByVal cVisibleRows As Long)
    Sub GetGroupSubsetCount(pcVisibleRows As Long)
    Sub SetRedraw(ByVal fRedrawOn As BOOL)
    Sub IsMoveInSameFolder()
    Sub DoRename()
End Interface
[InterfaceId("ae8c987d-8797-4ed3-be72-2a47dd938db0")]
[OleAutomation(False)]
Interface IFolderViewSettings Extends stdole.IUnknown
    Sub GetColumnPropertyList(riid As UUID, ppv As Any)
    Sub GetGroupByProperty(pkey As PROPERTYKEY, pfGroupAscending As BOOL)
    Sub GetViewMode(plvm As FOLDERLOGICALVIEWMODE)
    Sub GetIconSize(puIconSize As Long)
    Sub GetFolderFlags(pdwMask As FOLDERFLAGS, pdwFlags As FOLDERFLAGS)
    Sub GetSortColumns(rgSortColumns As SORTCOLUMN, ByVal cColumnsIn As Long, pcColumnsOut As Long)
    Sub GetGroupSubsetCount(pcVisibleRows As Long)
End Interface
[InterfaceId("3cc974d2-b302-4d36-ad3e-06d93f695d3f")]
[OleAutomation(False)]
Interface IFolderViewOptions Extends stdole.IUnknown
    Sub SetFolderViewOptions(ByVal fvoMask As FOLDERVIEWOPTIONS, ByVal fvoFlags As FOLDERVIEWOPTIONS)
    Sub GetFolderViewOptions(pfvoFlags As FOLDERVIEWOPTIONS)
End Interface
[InterfaceId("1ea58f02-d55a-411d-b09e-9e65ac21605b")]
[OleAutomation(False)]
Interface IFolderViewHost Extends stdole.IUnknown
    Sub Initialize(ByVal hwndParent As LongPtr, ByVal pdo As IDataObject, prc As RECT)
End Interface

[InterfaceId("C0A651F5-B48B-11d2-B5ED-006097C686F6")]
[OleAutomation(False)]
Interface IFolderFilterSite Extends stdole.IUnknown
    Sub SetFilter(ByVal punk As stdole.IUnknown)
End Interface
[InterfaceId("9CC22886-DC8E-11d2-B1D0-00C04F8EEB3E")]
[OleAutomation(False)]
Interface IFolderFilter Extends stdole.IUnknown
    Sub ShouldShow(ByVal psf As IShellFolder, ByVal pidlFolder As LongPtr, ByVal pidlItem As LongPtr)
    Sub GetEnumFlags(ByVal psf As IShellFolder, ByVal pidlFolder As LongPtr, phwnd As LongPtr, pgrfFlags As SHCONTF)
End Interface

[InterfaceId("053B4A86-0DC9-40A3-B7ED-BC6A2E951F48")]
[OleAutomation(False)]
Interface IFolderType Extends stdole.IUnknown
	Sub GetFolderType(pType As UUID)
End Interface

[InterfaceId("00021500-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IQueryInfo Extends stdole.IUnknown
    Sub GetInfoTip(ByVal dwFlags As QITipFlags, ppwszTip As LongPtr)
    Sub GetInfoFlags(pdwFlags As QITipFlags)
End Interface

[InterfaceId("da22171f-70b4-43db-b38f-296741d1494c")]
[OleAutomation(False)]
Interface ICustomizeInfoTip Extends stdole.IUnknown
    Sub SetText(ByVal text As LongPtr)
    Sub SetExtraProperties(pPropArray As PROPERTYKEY, ByVal numElems As Long)
End Interface

[InterfaceId("b3a4b685-b685-4805-99d9-5dead2873236")]
[OleAutomation(False)]
Interface IParentAndItem Extends stdole.IUnknown
    Sub SetParentAndItem(ByVal pidlParent As LongPtr, ByVal psf As IShellFolder, ByVal pidlChild As LongPtr)
    Sub GetParentAndItem(Optional ppidlParent As LongPtr, Optional ppsf As IShellFolder, Optional ppidlChild As LongPtr)
End Interface

[InterfaceId("56FDF342-FD6D-11d0-958A-006097C9A090")]
[OleAutomation(False)]
Interface ITaskbarList Extends stdole.IUnknown
    Sub HrInit()
    Sub AddTab(ByVal hwnd As LongPtr)
    Sub DeleteTab(ByVal hwnd As LongPtr)
    Sub ActivateTab(ByVal hwnd As LongPtr)
    Sub SetActiveAlt(ByVal hwnd As LongPtr)
End Interface
[InterfaceId("602D4995-B13A-429b-A66E-1935E44F4317")]
[OleAutomation(False)]
Interface ITaskbarList2 Extends ITaskbarList
    Sub MarkFullscreenWindow(ByVal hwnd As LongPtr, ByVal fFullscreen As BOOL)
End Interface
[InterfaceId("ea1afb91-9e28-4b86-90e9-9e9f8a5eefaf")]
[OleAutomation(False)]
Interface ITaskbarList3 Extends ITaskbarList2
    Sub SetProgressValue(ByVal hwnd As LongPtr, ByVal ullCompleted As LongLong, ByVal ullTotal As LongLong)
    Sub SetProgressState(ByVal hwnd As LongPtr, ByVal tbpFlags As TBPFLAG)
    Sub RegisterTab(ByVal hwndTab As LongPtr, ByVal hwndMDI As LongPtr)
    Sub UnregisterTab(ByVal hwndTab As LongPtr)
    Sub SetTabOrder(ByVal hwndTab As LongPtr, ByVal hwndInsertBefore As LongPtr)
    Sub SetTabActive(ByVal hwndTab As LongPtr, ByVal hwndMDI As LongPtr, ByVal dwReserved As Long)
    Sub ThumbBarAddButtons(ByVal hwnd As LongPtr, ByVal cButtons As Long, ByVal pButtons As LongPtr)
    Sub ThumbBarSetImageList(ByVal hwnd As LongPtr, ByVal himl As LongPtr)
    Sub SetOverlayIcon(ByVal hwnd As LongPtr, ByVal hIcon As LongPtr, ByVal pszTip As String)
    Sub SetThumbnailTooltip(ByVal hwnd As LongPtr, ByVal pszTip As String)
    Sub SetThumbnailClip(ByVal hwnd As LongPtr, prcClip As RECT)
End Interface
[InterfaceId("c43dc798-95d1-4bea-9030-bb99e2983a1a")]
[OleAutomation(False)]
Interface ITaskbarList4 Extends ITaskbarList3
    Sub SetTabProperties(ByVal hwndTab As LongPtr, ByVal stpFlags As STPFLAG)
End Interface

[InterfaceId("C3C6EB6D-C837-4EAE-B172-5FEC52A2A4FD")]
[Description("Original IPinnedList for Windows Vista only. For Win7 though early Win10, use IPinnedList2. For Win10 1809+, use IPinnedList3")]
[OleAutomation(False)]
Interface IPinnedList Extends stdole.IUnknown
	Sub EnumObjects(ppEnum As IEnumFullIDList)
	Sub Modify(ByVal pidlUnpin As LongPtr, ByVal pidlPin As LongPtr)
	Sub GetChangeCount(puCount As Long)
	[PreserveSig] Function IsPinnable(ByVal pdo As IDataObject, ByVal flags As Long, ppidl As LongPtr) As Long
	Sub Resolve(ByVal hwnd As LongPtr, ByVal param2 As Long, ByVal pidl As LongPtr, ppidlResolved As LongPtr)
	[PreserveSig] Function IsPinned(ByVal pidl As LongPtr) As Long
End Interface
[InterfaceId("BBD20037-BC0E-42F1-913F-E2936BB0EA0C")]
[Description("IPinnedList2 for Windows 7, 8, 8.1, and 10 before 1809. For Vista, use IPinnedList. For Win10 1809+, use IPinnedList3")]
[OleAutomation(False)]
Interface IPinnedList2 Extends stdole.IUnknown
	Sub EnumObjects(ppEnum As IEnumFullIDList)
	Sub Modify(ByVal pidlUnpin As LongPtr, ByVal pidlPin As LongPtr)
	Sub GetChangeCount(puCount As Long)
	Sub GetPinnableInfo(ByVal pdo As IDataObject, ByVal flags As Long, psi2 As IShellItem2, psi As IShellItem, ppsz As LongPtr, cch As Long)
	[PreserveSig] Function IsPinnable(ByVal pdo As IDataObject, ByVal flags As Long) As Long
	Sub Resolve(ByVal hwnd As LongPtr, ByVal param2 As Long, ByVal pidl As LongPtr, ppidlResolved As LongPtr)
	[PreserveSig] Function IsPinned(ByVal pidl As Long) As Long
	Sub GetPinnedItem(ByVal pidl As LongPtr, ppidl As LongPtr)
	Sub GetAppIDForPinnedItem(ByVal pidl As LongPtr, pszAppId As LongPtr)
	Sub ItemChangeNotify(ByVal pidl1 As LongPtr, ByVal pidl2 As LongPtr)
	Sub UpdateForRemovedItemsAsNecessary()
End Interface
[InterfaceId("0DD79AE2-D156-45D4-9EEB-3B549769E940")]
[Description("IPinnedList for Windows 10 1809+. For 7 through earlier 10 builds, use IPinnedList2. For Vista, use IPinnedList")]
[OleAutomation(False)]
Interface IPinnedList3 Extends stdole.IUnknown
	Sub EnumObjects(ppEnum As IEnumFullIDList)
	Sub GetPinnableInfo(ByVal pdo As IDataObject, ByVal flags As Long, psi2 As IShellItem2, psi As IShellItem, ppsz As LongPtr, cch As Long)
	[PreserveSig] Function IsPinnable(ByVal pdo As IDataObject, ByVal flags As Long) As Long
	Sub Resolve(ByVal hwnd As LongPtr, ByVal param2 As Long, ByVal pidl As LongPtr, ppidlResolved As LongPtr)
	Sub LegacyModify(ByVal pidlUnpin As LongPtr, ByVal pidlPin As LongPtr) 'patched to NOP
	Sub GetChangeCount(puCount As Long)
	[PreserveSig] Function IsPinned(ByVal pidl As LongPtr) As Long
	Sub GetPinnedItem(ByVal pidl As LongPtr, ppidl As LongPtr)
	Sub GetAppIDForPinnedItem(ByVal pidl As LongPtr, pszAppId As LongPtr)
	Sub ItemChangeNotify(ByVal pidl1 As LongPtr, ByVal pidl2 As LongPtr)
	Sub UpdateForRemovedItemsAsNecessary()
	Sub PinShellLink(ByVal psz As LongPtr, ByVal isl As IShellLinkW)
	Sub GetPinnedItemForAppID(ByVal appId As LongPtr, ppidl As LongPtr)
	Sub Modify(ByVal pidlUnpin As LongPtr, ByVal pidlPin As LongPtr, ByVal caller As PLMC)
End Interface

[InterfaceId("FB852B2C-6BAD-4605-9551-F15F87830935")]
[OleAutomation(False)]
Interface ITrayNotify Extends stdole.IUnknown
	Sub RegisterCallback(ByVal pNotifyCB As INotificationCB)
	Sub SetPreference(pItem As NOTIFYITEM)
	Sub EnableAutoTray(ByVal fEnable As BOOL)
End Interface

[InterfaceId("D133CE13-3537-48BA-93A7-AFCD5D2053B4")]
[OleAutomation(False)]
Interface ITrayNotifyWin8 Extends stdole.IUnknown
	Sub RegisterCallback(ByVal pNotifyCB As INotificationCB, pCookie As Long)
	[Description("Source may be incorrect? If fail try ByVal")]
	Sub UnregisterCallback(pCookie As Long)
	Sub SetPreference(pItem As NOTIFYITEM)
	Sub EnableAutoTray(ByVal fEnable As BOOL)
	Sub DoAction(ByVal fArg As BOOL)
End Interface

[InterfaceId("819d1334-9d74-4254-9ac8-dc745ebc5386")]
[OleAutomation(False)]
Interface IInfoBarMessage Extends IUnknown
	Sub GetMessageID(guid As UUID, value As Long)
	Sub GetMessageW(message As LongPtr)
	Sub CreateMenu(pMenu As LongPtr)
	Sub HandleMenu(ByVal hwnd As LongPtr, ByVal nItem As Long)
End Interface
[InterfaceId("e38fe0f3-3db0-47ee-a314-25cf7f4bf521")]
[OleAutomation(False)]
Interface IInfoBarHost Extends IUnknown
	Sub Inform(ByVal msg As IInfoBarMessage)
	#If Win64 Then
	Sub CancelInform(guid As UUID)
	#Else
	Sub CancelInform(ByVal guid1 As Long, ByVal guid2 As Long, ByVal guid3 As Long, ByVal guid4 As Long)
	#End If
End Interface
[InterfaceId("18140CBD-AA23-4384-A38D-6A8D3E2BE505")]
[OleAutomation(False)]
Interface IBrowserProgressSessionProvider Extends IUnknown
	Sub BeginSession()
	Sub EndSession()
	Sub GetCurrentSession(sessionId As Long)
	Sub ActivateSession()
End Interface


[InterfaceId("D782CCBA-AFB0-43F1-94DB-FDA3779EACCB")]
[OleAutomation(False)]
Interface INotificationCB Extends stdole.IUnknown
	Sub Notify(ByVal uCode As Long, pItem As NOTIFYITEM)
End Interface

[InterfaceId("12337d35-94c6-48a0-bce7-6a9c69d4d600")]
[OleAutomation(False)]
Interface IApplicationDestinations Extends stdole.IUnknown
    Sub SetAppId(ByVal pszAppId As String)
    Sub RemoveDestination(ByVal pUnk As stdole.IUnknown)
    Sub RemoveAllDestinations()
End Interface

[InterfaceId("6332debf-87b5-4670-90c0-5e57b408a49e")]
[OleAutomation(False)]
Interface ICustomDestinationList Extends stdole.IUnknown
    [PreserveSig] Function SetAppId(ByVal pszAppId As LongPtr) As Long
    [PreserveSig] Function BeginList(pcMinSlots As Long, riid As UUID, ppv As Any) As Long
    [PreserveSig] Function AppendCategory(ByVal pszCategory As LongPtr, ByVal poa As LongPtr) As Long
    [PreserveSig] Function AppendKnownCategory(ByVal category As KNOWNDESTCATEGORY) As Long
    [PreserveSig] Function AddUserTasks(ByVal poa As LongPtr) As Long
    [PreserveSig] Function CommitList() As Long
    [PreserveSig] Function GetRemovedDestinations(riid As UUID, ppv As Any) As Long
    [PreserveSig] Function DeleteList(ByVal pszAppId As String) As Long
    [PreserveSig] Function AbortList() As Long
End Interface

[InterfaceId("00000012-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IRootStorage Extends stdole.IUnknown
    Sub SwitchToFile(ByVal pszFile As String)
End Interface

[InterfaceId("0000000b-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IStorage Extends stdole.IUnknown
    Function CreateStream(ByVal pwcsName As String, ByVal grfMode As STGM, ByVal reserved1 As Long, ByVal reserved2 As Long) As IStream
    Function OpenStream(ByVal pwcsName As String, reserved1 As Any, ByVal grfMode As STGM, ByVal reserved2 As Long) As IStream
    Function CreateStorage(ByVal pwcsName As String, ByVal grfMode As STGM, ByVal reserved1 As Long, ByVal reserved2 As Long) As IStorage
    Function OpenStorage(ByVal pwcsName As String, ByVal pstgPriority As LongPtr, ByVal grfMode As STGM, ByVal snbExclude As LongPtr, ByVal reserved As Long) As IStorage
    Sub CopyTo(ByVal ciidExclude As Long, rgiidExclude As Any, ByVal snbExclude As LongPtr, ByVal pstgDest As IStorage)
    Sub MoveElementTo(ByVal pwcsName As String, ByVal pstgDest As IStorage, ByVal pwcsNewName As String, ByVal grfFlags As STGMOVE)
    Sub Commit(ByVal grfCommitFlags As STGC)
    Sub Revert()
    Function EnumElements(ByVal reserved1 As Long, reserved2 As Any, ByVal reserved3 As Long) As IEnumSTATSTG
    Sub DestroyElement(ByVal pwcsName As String)
    Sub RenameElement(ByVal pwcsOldName As String, ByVal pwcsNewName As String)
    Sub SetElementTimes(ByVal pwcsName As String, pcTime As LongLong, paTime As LongLong, pmTime As LongLong)
    Sub SetClass(clsid As UUID)
    Sub SetStateBits(ByVal grfStateBits As Long, ByVal grfMask As Long)
    Sub Stat(pstatstg As STATSTG, ByVal grfStatFlag As STATFLAG)
End Interface

[InterfaceId("757A7D9F-919A-4118-99D7-DBB208C8CC66")]
[Description("IPropertyUI - helper for dealing with properties ala IPropertySetStorage")]
[OleAutomation(False)]
Interface IPropertyUI Extends stdole.IUnknown
    Sub ParsePropertyName(ByVal pszName As String, ByRef pUUID As UUID, ByRef ppid As Long, ByRef pchEaten As Long)
    Sub GetCannonicalName(ByRef UUID As UUID, ByVal pid As Long, ByVal pwszText As String, ByVal cchText As Long)
    Sub GetDisplayName(ByRef UUID As UUID, ByVal pid As Long, ByVal flags As PROPERTYUI_NAME_FLAGS, ByVal pwszText As String, ByVal cchText As Long)
    Sub GetPropertyDescription(ByRef UUID As UUID, ByVal pid As Long, ByVal pwszText As String, ByVal cchText As Long)
    Function GetDefaultWidth(ByRef UUID As UUID, ByVal pid As Long) As Long
    Function GetFlags(ByRef UUID As UUID, ByVal pid As Long) As PROPERTYUI_FLAGS
    Sub FormatForDisplay(ByRef UUID As UUID, ByVal pid As Long, ByRef pVar As Variant, ByVal flags As PROPERTYUI_FORMAT_FLAGS, ByVal pwszText As String, ByVal cchText As Long)
    Sub GetHelpInfo(ByRef UUID As UUID, ByVal pid As Long, ByVal pwszHelpFile As String, ByVal cch As Long, ByRef puHelpID As Long)
End Interface
[InterfaceId("6f79d558-3e96-4549-a1d1-7d75d2288814")]
[OleAutomation(False)]
Interface IPropertyDescription Extends stdole.IUnknown
    [PreserveSig] Function GetPropertyKey(pkey As PROPERTYKEY) As Long
    [PreserveSig] Function GetCanonicalName(ppszName As LongPtr) As Long
    [PreserveSig] Function GetPropertyType([TypeHint(VARENUM)] pvartype As Integer) As Long
    [PreserveSig] Function GetDisplayName(ppszName As LongPtr) As Long
    [PreserveSig] Function GetEditInvitation(ppszInvite As LongPtr) As Long
    [PreserveSig] Function GetTypeFlags(ByVal mask As PROPDESC_TYPE_FLAGS, ppdtFlags As PROPDESC_TYPE_FLAGS) As Long
    [PreserveSig] Function GetViewFlags(ppdvFlags As PROPDESC_VIEW_FLAGS) As Long
    [PreserveSig] Function GetDefaultColumnWidth(pcxChars As Long) As Long
    [PreserveSig] Function GetDisplayType(pdisplaytype As PROPDESC_DISPLAYTYPE) As Long
    [PreserveSig] Function GetColumnState(pcsFlags As SHCOLSTATEF) As Long
    [PreserveSig] Function GetGroupingRange(pgr As PROPDESC_GROUPING_RANGE) As Long
    [PreserveSig] Function GetRelativeDescriptionType(prdt As PROPDESC_RELATIVEDESCRIPTION_TYPE) As Long
    [PreserveSig] Function GetRelativeDescription(propvar1 As Variant, propvar2 As Variant, ppszDesc1 As LongPtr, ppszDesc2 As LongPtr) As Long
    [PreserveSig] Function GetSortDescription(psd As PROPDESC_SORTDESCRIPTION) As Long
    [PreserveSig] Function GetSortDescriptionLabel(ByVal fDescending As BOOL, ppszDescription As LongPtr) As Long
    [PreserveSig] Function GetAggregationType(paggType As PROPDESC_AGGREGATION_TYPE) As Long
    [PreserveSig] Function GetConditionType(pcontype As PROPDESC_CONDITION_TYPE, popDefault As CONDITION_OPERATION) As Long
    [PreserveSig] Function GetEnumTypeList(riid As UUID, ppv As Any) As Long
    [PreserveSig] Function CoerceToCanonicalValue(ppropvar As Variant) As Long
    [PreserveSig] Function FormatForDisplay(propvar As Variant, ByVal pdfFlags As PROPDESC_FORMAT_FLAGS, ppszDisplay As LongPtr) As Long
    [PreserveSig] Function IsValueCanonical(propvar As Variant) As Long
End Interface
[InterfaceId("57d2eded-5062-400e-b107-5dae79fe57a6")]
[OleAutomation(False)]
Interface IPropertyDescription2 Extends IPropertyDescription
    [PreserveSig] Function GetImageReferenceForValue(propvar As Variant, ppszImageRes As LongPtr) As Long
End Interface
[InterfaceId("f67104fc-2af9-46fd-b32d-243c1404f3d1")]
[OleAutomation(False)]
Interface IPropertyDescriptionAliasInfo Extends IPropertyDescription
    Sub GetSortByAlias(riid As UUID, ppv As Any)
    Sub GetAdditionalSortByAliases(riid As UUID, ppv As Any)
End Interface
[InterfaceId("078F91BD-29A2-440F-924E-46A291524520")]
[OleAutomation(False)]
Interface IPropertyDescriptionSearchInfo Extends IPropertyDescription
    Sub GetSearchInfoFlags(ByRef ppdsiFlags As PROPDESC_SEARCHINFO_FLAGS)
    Sub GetColumnIndexType(ByRef ppdciType As PROPDESC_COLUMNINDEX_TYPE)
    Sub GetProjectionString(ByRef ppszProjection As LongPtr)
    Sub GetMaxSize(ByRef pcbMaxSize As Long)
End Interface
[InterfaceId("507393F4-2A3D-4A60-B59E-D9C75716C2DD")]
[OleAutomation(False)]
Interface IPropertyDescriptionRelatedPropertyInfo Extends IPropertyDescription
    Sub GetRelatedProperty(ByVal pszRelationshipName As LongPtr, ByRef riid As UUID, ByRef ppv As Any)
End Interface
[InterfaceId("1f9fc1d0-c39b-4b26-817f-011967d3440e")]
[OleAutomation(False)]
Interface IPropertyDescriptionList Extends stdole.IUnknown
    Sub GetCount(pcElem As Long)
    Sub GetAt(ByVal iElem As Long, riid As UUID, ppv As Any)
End Interface
[InterfaceId("ca724e8a-c3e6-442b-88a4-6fb0db8035a3")]
[OleAutomation(False)]
Interface IPropertySystem Extends stdole.IUnknown
    Sub GetPropertyDescription(propkey As PROPERTYKEY, riid As UUID, ppv As Any)
    Sub GetPropertyDescriptionByName(ByVal pszCanonicalName As LongPtr, riid As UUID, ppv As Any)
    Sub GetPropertyDescriptionListFromString(ByVal pszPropList As LongPtr, riid As UUID, ppv As Any)
    Sub EnumeratePropertyDescriptions(ByVal filterOn As PROPDESC_ENUMFILTER, riid As UUID, ppv As Any)
    Sub FormatForDisplay(key As PROPERTYKEY, propvar As Variant, ByVal pdff As PROPDESC_FORMAT_FLAGS, pszText As LongPtr, ByVal cchText As Long)
    Sub FormatForDisplayAlloc(key As PROPERTYKEY, propvar As Variant, ByVal pdff As PROPDESC_FORMAT_FLAGS, pszText As LongPtr)
    Sub RegisterPropertySchema(ByVal pszPath As LongPtr)
    Sub UnregisterPropertySchema(ByVal pszPath As LongPtr)
    Sub RefreshPropertySchema()
End Interface
[InterfaceId("fa955fd9-38be-4879-a6ce-824cf52d609f")]
[OleAutomation(False)]
Interface IPropertySystemChangeNotify Extends stdole.IUnknown
	Sub SchemaRefreshed()
End Interface

[InterfaceId("886d8eeb-8cf2-4446-8d02-cdba1dbdcf99")]
[OleAutomation(False)]
Interface IPropertyStore Extends stdole.IUnknown
    [PreserveSig] Function GetCount(cProps As Long) As Long
    [PreserveSig] Function GetAt(ByVal iProp As Long, pkey As PROPERTYKEY) As Long
    [PreserveSig] Function GetValue(key As PROPERTYKEY, pv As Variant) As Long
    [PreserveSig] Function SetValue(key As PROPERTYKEY, propvar As Variant) As Long
    [PreserveSig] Function Commit() As Long
End Interface

[InterfaceId("c8e2d566-186e-4d49-bf41-6909ead56acc")]
[OleAutomation(False)]
Interface IPropertyStoreCapabilities Extends stdole.IUnknown
    [PreserveSig] Function IsPropertyWritable(ByVal pkey As LongPtr) As Long
End Interface

[InterfaceId("3017056D-9A91-4E90-937D-746C72ABBF4F")]
[OleAutomation(False)]
Interface IPropertyStoreCache Extends IPropertyStore
    Sub GetState(ByRef key As PROPERTYKEY, ByRef pState As PSC_STATE)
    Sub GetValueAndState(ByRef key As PROPERTYKEY, ByRef ppropvar As Variant, ByRef pState As PSC_STATE)
    Sub SetState(ByRef key As PROPERTYKEY, ByVal State As PSC_STATE)
    Sub SetValueAndState(ByRef key As PROPERTYKEY, ByRef ppropvar As Variant, ByVal State As PSC_STATE)
End Interface

[InterfaceId("71604B0F-97B0-4764-8577-2F13E98A1422")]
[OleAutomation(False)]
Interface INamedPropertyStore Extends stdole.IUnknown
    Sub GetNamedValue(ByVal pszName As String, ByRef ppropvar As Variant)
    Sub SetNamedValue(ByVal pszName As String, ByRef propvar As Variant)
    Sub GetNameCount(ByRef pdwCount As Long)
    Sub GetNameAt(ByVal iProp As Long, ByRef pBstrName As String)
End Interface

[InterfaceId("e318ad57-0aa0-450f-aca5-6fab7103d917")]
[OleAutomation(False)]
Interface IPersistSerializedPropStorage Extends stdole.IUnknown
	Sub SetFlags(ByVal flags As PERSIST_SPROPSTORE_FLAGS)
	Sub SetPropertyStorage(ByVal psps As LongPtr, ByVal cb As Long)
	Sub GetPropertyStorage(psps As LongPtr, pcb As Long)
End Interface
[InterfaceId("77effa68-4f98-4366-ba72-573b3d880571")]
[OleAutomation(False)]
Interface IPersistSerializedPropStorage2 Extends IPersistSerializedPropStorage
	Sub GetPropertyStorageSize(pcb As Long)
	Sub GetPropertyStorageBuffer(ppsps As LongPtr, ByVal cb As Long, pcbWritten As Long)
End Interface




[InterfaceId("BC110B6D-57E8-4148-A9C6-91015AB2F3A5")]
[OleAutomation(False)]
Interface IPropertyStoreFactory Extends stdole.IUnknown
    Sub GetPropertyStore(ByVal flags As GETPROPERTYSTOREFLAGS, ByVal pUnkFactory As IUnknown, ByRef riid As UUID, ByRef ppv As Any)
    Sub GetPropertyStoreForKeys(ByRef rgKeys As PROPERTYKEY, ByVal cKeys As Long, ByVal flags As GETPROPERTYSTOREFLAGS, ByRef riid As UUID, ByRef ppv As Any)
End Interface

[InterfaceId("40d4577f-e237-4bdb-bd69-58f089431b6a")]
[OleAutomation(False)]
Interface IDelayedPropertyStoreFactory Extends IPropertyStoreFactory
    Sub GetPropertyStore(ByVal flags As GETPROPERTYSTOREFLAGS, ByVal dwStoreId As DPSF_StoreIDs, ByRef riid As UUID, ByRef ppv As Any)
End Interface

    
[InterfaceId("11e1fbf9-2d56-4a6b-8db3-7cd193a471f2")]
[OleAutomation(False)]
Interface IPropertyEnumType Extends stdole.IUnknown
    Sub GetEnumType(pEnumType As PROPENUMTYPE)
    Sub GetValue(ppropvar As Variant)
    Sub GetRangeMinValue(ppropvarMin As Variant)
    Sub GetRangeSetValue(ppropvarSet As Variant)
    Sub GetDisplayText(ppszDisplay As LongPtr)
End Interface

[InterfaceId("9b6e051c-5ddd-4321-9070-fe2acb55e794")]
[OleAutomation(False)]
Interface IPropertyEnumType2 Extends IPropertyEnumType
    Sub GetImageReference(ppszImageRes As LongPtr)
End Interface

[InterfaceId("a99400f4-3d84-4557-94ba-1242fb2cc9a6")]
[OleAutomation(False)]
Interface IPropertyEnumTypeList Extends stdole.IUnknown
    Sub GetCount(pcTypes As Long)
    Sub GetAt(ByVal iType As Long, riid As UUID, ppv As Any)
    Sub GetConditionAt(ByVal nIndex As Long, riid As UUID, ppv As Any)
    Sub FindMatchingIndex(propvarCmp As Variant, pnIndex As Long)
End Interface

[InterfaceId("3127CA40-446E-11CE-8135-00AA004BB851")]
[OleAutomation(False)]
Interface IErrorLog Extends stdole.IUnknown
    Sub AddError(ByVal pszPropName As String, pExcepInfo As EXCEPINFO)
End Interface

[InterfaceId("55272A00-42CB-11CE-8135-00AA004BB851")]
[OleAutomation(False)]
Interface IPropertyBag Extends stdole.IUnknown
    Sub Read(ByVal pszPropName As LongPtr, pVar As Variant, ByVal pErrorLog As IErrorLog)
    Sub Write(ByVal pszPropName As LongPtr, pVar As Variant)
End Interface
[InterfaceId("22F55882-280B-11d0-A8A9-00A0C90C2004")]
[OleAutomation(False)]
Interface IPropertyBag2 Extends stdole.IUnknown
    Sub Read(ByVal cProperties As Long, pPropBag As PROPBAG2, ByVal pErrLog As IErrorLog, ByVal pvarValue As LongPtr, phError As LongPtr)
    Sub Write(ByVal cProperties As Long, pPropBag As PROPBAG2, pvarValue As Variant)
    Function CountProperties() As Long
    Sub GetPropertyInfo(ByVal iProperty As Long, ByVal cProperties As Long, pPropBag As PROPBAG2, pcProperties As Long)
    Sub LoadObject(ByVal pstrName As LongPtr, ByVal dwHint As Long, ByVal pUnkObject As stdole.IUnknown, ByVal pErrLog As IErrorLog)
End Interface
[InterfaceId("9BFBBC02-EFF1-101A-84ED-00AA00341D07")]
[OleAutomation(False)]
Interface IPropertyNotifySink Extends stdole.IUnknown
    Sub OnChanged(ByVal dispid As Long)
    Sub OnRequestEdit(ByVal dispid As Long)
End Interface


[InterfaceId("4657278B-411B-11D2-839A-00C04FD918D0")]
[OleAutomation(False)]
Interface IDropTargetHelper Extends stdole.IUnknown
    Sub DragEnter(ByVal hwndTarget As LongPtr, ByVal pDataObject As IDataObject, ppt As POINT, ByVal dwEffect As DROPEFFECTS)
    Sub DragLeave()
    Sub DragOver(ppt As POINT, ByVal dwEffect As DROPEFFECTS)
    Sub Drop(ByVal pDataObject As IDataObject, ppt As POINT, ByVal dwEffect As DROPEFFECTS)
    Sub Show(ByVal fShow As BOOL)
End Interface

[InterfaceId("DE5BF786-477A-11D2-839D-00C04FD918D0")]
[OleAutomation(False)]
Interface IDragSourceHelper Extends stdole.IUnknown
    Sub InitializeFromBitmap(pshdi As SHDRAGIMAGE, pDataObject As IDataObject)
    Sub InitializeFromWindow(ByVal hwnd As LongPtr, ppt As POINT, pDataObject As IDataObject)
End Interface

[InterfaceId("83E07D0D-0C5F-4163-BF1A-60B274051E40")]
[OleAutomation(False)]
Interface IDragSourceHelper2 Extends IDragSourceHelper
	Sub SetFlags(ByVal dwFlags As DSH_FLAGS)
End Interface

[InterfaceId("00000122-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IDropTarget Extends stdole.IUnknown
    Sub DragEnter(ByVal pDataObject As IDataObject, ByVal grfKeyState As KeyStateMouse, ByVal pt As LongLong, pdwEffect As DROPEFFECTS)
    Sub DragOver(ByVal grfKeyState As KeyStateMouse, ByVal pt As LongLong, pdwEffect As DROPEFFECTS)
    Sub DragLeave()
    Sub Drop(ByVal pDataObj As IDataObject, ByVal grfKeyState As KeyStateMouse, ByVal pt As LongLong, pdwEffect As DROPEFFECTS)
End Interface

[InterfaceId("00000121-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IDropSource Extends stdole.IUnknown
    Sub QueryContinueDrag(ByVal fEscape As BOOL)
    Sub GiveFeedback(ByVal grfKeyState As KeyStateMouse)
End Interface

[InterfaceId("0000012B-0000-0000-C000-000000000046")]
Interface IDropSourceNotify Extends stdole.IUnknown
    Sub DragEnterTarget(ByVal hwndTarget As LongPtr)
    Sub DragLeaveTarget()
End Interface


[InterfaceId("46EB5926-582E-4017-9FDF-E8998DAA0950")]
[OleAutomation(False)]
Interface IImageList Extends stdole.IUnknown
    Sub Add(ByVal hbmImage As LongPtr, ByVal hbmMask As LongPtr, pi As Long)
    Sub ReplaceIcon(ByVal i As Long, ByVal hIcon As LongPtr, pi As Long)
    Sub SetOverlayImage(ByVal iImage As Long, ByVal iOverlay As Long)
    Sub Replace(ByVal i As Long, ByVal hbmImage As LongPtr, ByVal hbmMask As LongPtr)
    Sub AddMasked(ByVal hbmImage As LongPtr, ByVal crMask As Long, pi As Long)
    Sub Draw(pimldp As IMAGELISTDRAWPARAMS)
    Sub Remove(ByVal i As Long)
    Sub GetIcon(ByVal i As Long, ByVal flags As IMAGELISTDRAWFLAGS, pIcon As LongPtr)
    Sub GetImageInfo(ByVal i As Long, pImageInfo As IMAGEINFO)
    Sub Copy(ByVal iDst As Long, ByVal pUnkSrc As stdole.IUnknown, ByVal iSrc As Long, ByVal uFlags As Long)
    Sub Merge(ByVal i1 As Long, ByVal punk2 As stdole.IUnknown, ByVal i2 As Long, ByVal dx As Long, ByVal dy As Long, riid As UUID, ppv As Any)
    Sub Clone(riid As UUID, ppv As Any)
    Sub GetImageRect(ByVal i As Long, prc As RECT)
    Sub GetIconSize(cx As Long, cy As Long)
    Sub SetIconSize(ByVal cx As Long, ByVal cy As Long)
    Sub GetImageCount(pi As Long)
    Sub SetImageCount(ByVal uNewCount As Long)
    Sub SetBkColor(ByVal clrBk As Long, pclr As Long)
    Sub GetBkColor(pclr As Long)
    Sub BeginDrag(ByVal iTrack As Long, ByVal dxHotspot As Long, ByVal dyHotspot As Long)
    Sub EndDrag()
    Sub DragEnter(ByVal hwndLock As LongPtr, ByVal x As Long, ByVal y As Long)
    Sub DragLeave(ByVal hwndLock As LongPtr)
    Sub DragMove(ByVal x As Long, ByVal y As Long)
    Sub SetDragCursorImage(ByVal pUnk As stdole.IUnknown, ByVal iDrag As Long, ByVal dxHotspot As Long, ByVal dyHotspot As Long)
    Sub DragShowNolock(ByVal fShow As BOOL)
    Sub GetDragImage(ppt As POINT, pptHotspot As POINT, riid As UUID, ppv As Any)
    Sub GetItemFlags(ByVal i As Long, dwFlags As Long)
    Sub GetOverlayImage(ByVal iOverlay As Long, piIndex As Long)
End Interface
[InterfaceId("192b9d83-50fc-457b-90a0-2b82a8b5dae1")]
[OleAutomation(False)]
Interface IImageList2 Extends IImageList
    [PreserveSig] Function Resize(ByVal cxNewIconSize As Long, ByVal cyNewIconSize As Long) As Long
    [PreserveSig] Function GetOriginalSize(ByVal iImage As Long, dwFlags As ILGOSFLAGS, pcx As Long, pcy As Long) As Long
    [PreserveSig] Function SetOriginalSize(ByVal iImage As Long, ByVal cx As Long, ByVal cy As Long) As Long
    [PreserveSig] Function SetCallback(ByVal pUnk As IUnknownUnrestricted) As Long
    [PreserveSig] Function GetCallback(riid As UUID, ppv As Any) As Long
    [PreserveSig] Function ForceImagePresent(ByVal iImage As Long, ByVal dwFlags As ILFIPFLAGS) As Long
    [PreserveSig] Function DiscardImages(ByVal iFirstImage As Long, ByVal iLastImage As Long, ByVal dwFlags As ILDIFLAGS) As Long
    [PreserveSig] Function PreloadImages(pimldp As IMAGELISTDRAWPARAMS) As Long
    [PreserveSig] Function GetStatistics(pils As IMAGELISTSTATS) As Long
    [PreserveSig] Function Initialize(ByVal cx As Long, ByVal cy As Long, ByVal flags As Long, ByVal cInitial As Long, ByVal cGrow As Long) As Long
    [PreserveSig] Function Replace2(ByVal i As Long, ByVal hbmImage As LongPtr, ByVal hbmMask As LongPtr, ByVal pUnk As IUnknownUnrestricted, ByVal dwFlags As Long) As Long
    [PreserveSig] Function ReplaceFromImageList(ByVal i As Long, ByVal pil As IImageList, ByVal iSrc As Long, ByVal pUnk As IUnknownUnrestricted, ByVal dwFlags As Long) As Long
End Interface

[InterfaceId("505f1513-6b3e-4892-a272-59f8889a4d3e")]
[OleAutomation(False)]
Interface IImageRecompress Extends stdole.IUnknown
    [PreserveSig] Function RecompressImage(ByVal psi As IShellItem, ByVal cx As Long, ByVal cy As Long, ByVal iQuality As Long, ByVal pstg As IStorage, ppStrmOut As IStream) As Long
End Interface

[InterfaceId("BAE86DDD-DC11-421c-B7AB-CC55D1D65C44")]
[OleAutomation(False)]
Interface ITranscodeImage Extends stdole.IUnknown
    [PreserveSig] Function TranscodeImage(ByVal pShellItem As IShellItem, ByVal uiMaxWidth As Long, ByVal uiMaxHeight As Long, ByVal flags As TI_FLAGS, ByVal pvImage As IStream, puiWidth As Long, puiHeight As Long) As Long
End Interface

[InterfaceId("9be8ed5c-edab-4d75-90f3-bd5bdbb21c82")]
[OleAutomation(False)]
Interface IShellImageDataFactory Extends stdole.IUnknown
    Sub CreateIShellImageData(ppshimg As IShellImageData)
    Sub CreateImageFromFile(ByVal pszPath As LongPtr, ppshimg As IShellImageData)
    Sub CreateImageFromStream(ByVal pStream As IStream, ppshimg As IShellImageData)
    Sub GetDataFormatFromPath(ByVal pszPath As LongPtr, pDataFormat As UUID)
End Interface
[InterfaceId("bfdeec12-8040-4403-a5ea-9e07dafcf530")]
[OleAutomation(False)]
Interface IShellImageData Extends stdole.IUnknown
    [PreserveSig] Function Decode(ByVal dwFlags As SHIMGDEC, ByVal cxDesired As Long, ByVal cyDesired As Long) As Long
    [PreserveSig] Function Draw(ByVal hDC As LongPtr, prcDest As RECT, prcSource As RECT) As Long
    [PreserveSig] Function NextFrame() As Long
    [PreserveSig] Function NextPage() As Long
    [PreserveSig] Function PrevPage() As Long
    [PreserveSig] Function IsTransparent() As Long
    [PreserveSig] Function IsAnimated() As Long
    [PreserveSig] Function IsVector() As Long
    [PreserveSig] Function IsMultipage() As Long
    [PreserveSig] Function IsEditable() As Long
    [PreserveSig] Function IsPrintable() As Long
    [PreserveSig] Function IsDecoded() As Long
    [PreserveSig] Function GetCurrentPage(pnPage As Long) As Long
    [PreserveSig] Function GetPageCount(pcPages As Long) As Long
    [PreserveSig] Function SelectPage(ByVal iPage As Long) As Long
    [PreserveSig] Function GetSize(pSize As SIZE) As Long
    [PreserveSig] Function GetRawDataFormat(pDataFormat As UUID) As Long
    [PreserveSig] Function GetPixelFormat(pFormat As PixelFormat) As Long
    [PreserveSig] Function GetDelay(pdwDelay As Long) As Long
    [PreserveSig] Function GetProperties(ByVal dwMode As Long, ppPropSet As IPropertySetStorage) As Long
    [PreserveSig] Function Rotate(ByVal dwAngle As Long) As Long
    [PreserveSig] Function Scale(ByVal cx As Long, ByVal cy As Long, ByVal hints As InterpolationMode) As Long
    [PreserveSig] Function DiscardEdit() As Long
    [PreserveSig] Function SetEncoderParams(ByVal pbagEnc As IPropertyBag) As Long
    [PreserveSig] Function DisplayName(ByVal wszName As String, ByVal cch As Long) As Long
    [PreserveSig] Function GetResolution(puResolutionX As Long, puResolutionY As Long) As Long
    [PreserveSig] Function GetEncoderParams(pguidFmt As UUID, ppEncParams As LongPtr) As Long
    [PreserveSig] Function RegisterAbort(ByVal pAbort As IShellImageDataAbort, ppAbortPrev As IShellImageDataAbort) As Long
    [PreserveSig] Function CloneFrame(ppImg As LongPtr) As Long
    [PreserveSig] Function ReplaceFrame(ByVal pImg As LongPtr) As Long
End Interface
[InterfaceId("53fb8e58-50c0-4003-b4aa-0c8df28e7f3a")]
[OleAutomation(False)]
Interface IShellImageDataAbort Extends stdole.IUnknown
    Sub QueryAbort()
End Interface


[InterfaceId("000214EB-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IExtractIconA Extends stdole.IUnknown
    Function GetIconLocation(ByVal uFlags As GILFlags, ByVal szIconFile As LongPtr, ByVal cchMax As Long, piIndex As Long) As GILRes
    Sub Extract(ByVal pszFile As LongPtr, ByVal nIconIndex As Long, phIconLarge As LongPtr, phIconSmall As LongPtr, ByVal nIconSize As Long)
End Interface
[InterfaceId("000214FA-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IExtractIconW Extends stdole.IUnknown
    Function GetIconLocation(ByVal uFlags As GILFlags, ByVal szIconFile As LongPtr, ByVal cchMax As Long, piIndex As Long) As GILRes
    Sub Extract(ByVal pszFile As LongPtr, ByVal nIconIndex As Long, phIconLarge As LongPtr, phIconSmall As LongPtr, ByVal nIconSize As Long)
End Interface

[InterfaceId("BB2E617C-0920-11d1-9A0B-00C04FC2D6C1")]
[OleAutomation(False)]
Interface IExtractImage Extends stdole.IUnknown
    Sub GetLocation(ByVal pszPathBuffer As LongPtr, ByVal cch As Long, pdwPriority As Long, prgSize As SIZE, ByVal dwRecClrDepth As Long, pdwFlags As IEIFlags)
    Function Extract() As LongPtr
End Interface
[InterfaceId("953BB1EE-93B4-11d1-98A3-00C04FB687DA")]
[OleAutomation(False)]
Interface IExtractImage2 Extends IExtractImage
    Function GetDateStamp() As LongLong
End Interface

[InterfaceId("e357fccd-a995-4576-b01f-234630154e96")]
[OleAutomation(False)]
Interface IThumbnailProvider Extends stdole.IUnknown
    Sub GetThumbnail(ByVal cx As Long, phBmp As LongPtr, pdwAlpha As WTS_ALPHATYPE)
End Interface

[InterfaceId("e35b4b2e-00da-4bc1-9f13-38bc11f5d417")]
[OleAutomation(False)]
Interface IThumbnailHandlerFactory Extends stdole.IUnknown
    Sub GetThumbnailHandler(ByVal pidlChild As LongPtr, ByVal pbc As LongPtr, riid As UUID, ppv As Any)
End Interface

[InterfaceId("091162a4-bc96-411f-aae8-c5122cd03363")]
[OleAutomation(False)]
Interface ISharedBitmap Extends stdole.IUnknown
    Sub GetSharedBitmap(phbm As LongPtr)
    Sub GetSize(pSize As SIZE)
    Sub GetFormat(pat As WTS_ALPHATYPE)
    Sub InitializeBitmap(ByVal hbm As LongPtr, ByVal wtsAT As WTS_ALPHATYPE)
    Sub Detach(phbm As LongPtr)
End Interface

[InterfaceId("F676C15D-596A-4ce2-8234-33996F445DB1")]
[OleAutomation(False)]
Interface IThumbnailCache Extends stdole.IUnknown
    Sub GetThumbnail(ByVal pShellItem As IShellItem, ByVal cxyRequestedThumbSize As Long, ByVal flags As WTS_FLAGS, ppvThumb As ISharedBitmap, pOutFlags As WTS_CACHEFLAGS, pThumbnailId As WTS_THUMBNAILID)
    Sub GetThumbnailById(thumbnailID As WTS_THUMBNAILID, ByVal cxyRequestedThumbSize As Long, ppvThumb As ISharedBitmap, pOutFlags As WTS_CACHEFLAGS)
End Interface

[InterfaceId("90E11430-9569-41D8-AE75-6D4D2AE7CCA0")]
[OleAutomation(False)]
Interface IThumbnailStreamCache Extends IUnknown
    Sub GetThumbnailStream(ByVal Path As String, ByVal cacheId As LongLong, ByVal Options As ThumbnailStreamCacheOptions, ByVal requestedThumbnailSize As Long, ByRef thumbnailSize As SIZE, ByRef thumbnailStream As IStream)
    Sub SetThumbnailStream(ByVal Path As String, ByVal cacheId As LongLong, ByVal thumbnailSize As LongLong /*ByVal SIZE*/, ByVal thumbnailStream As IStream)
End Interface

[InterfaceId("0f03f8fe-2b26-46f0-965a-212aa8d66b76")]
Interface IThumbnailCachePrimer Extends IUnknown
	Sub PageInThumbnail(ByVal psi As IShellItem, ByVal wtsFlags As WTS_FLAGS, ByVal cxyRequestedThumbSize As Long)
End Interface


[InterfaceId("F4376F00-BEF5-4d45-80F3-1E023BBF1209")]
[OleAutomation(False)]
Interface IThumbnailSettings Extends stdole.IUnknown
    Sub SetContext(ByVal dwContext As WTS_CONTEXTFLAGS)
End Interface

[InterfaceId("b7d14566-0509-4cce-a71f-0a554233bd9b")]
[OleAutomation(False)]
Interface IInitializeWithFile Extends stdole.IUnknown
    [PreserveSig] Function Initialize(ByVal pszFilePath As LongPtr, ByVal grfMode As Long) As Long
End Interface

[InterfaceId("b824b49d-22ac-4161-ac8a-9916e8fa3f7f")]
[OleAutomation(False)]
Interface IInitializeWithStream Extends stdole.IUnknown
    [PreserveSig] Function Initialize(ByVal pstream As IStream, ByVal grfMode As Long) As Long
End Interface

[InterfaceId("7f73be3f-fb79-493c-a6c7-7ee14e245841")]
[OleAutomation(False)]
Interface IInitializeWithItem Extends stdole.IUnknown
    [PreserveSig] Function Initialize(ByVal psi As IShellItem, ByVal grfMode As Long) As Long
End Interface

[InterfaceId("3E68D4BD-7135-4D10-8018-9FB6D9F33FA1")]
[OleAutomation(False)]
Interface IInitializeWithWindow Extends stdole.IUnknown
    [PreserveSig] Function Initialize(ByVal hwnd As LongPtr) As Long
End Interface

[InterfaceId("71C0D2BC-726D-45CC-A6C0-2E31C1DB2159")]
[OleAutomation(False)]
Interface IInitializeWithBindCtx Extends stdole.IUnknown
    Sub Initialize(ByVal pbc As IBindCtx)
End Interface

[InterfaceId("C3E12EB5-7D8D-44F8-B6DD-0E77B34D6DE4")]
[Description("Initialize With IPropertyStore")]
[OleAutomation(False)]
Interface IInitializeWithPropertyStore Extends stdole.IUnknown
    [PreserveSig] Function Initialize(ByVal pps As IPropertyStore) As Long
End Interface

[InterfaceId("8895b1c6-b41f-4c1c-a562-0d564250836f")]
[OleAutomation(False)]
Interface IPreviewHandler Extends stdole.IUnknown
    [PreserveSig] Function SetWindow(ByVal hwnd As LongPtr, prc As RECT) As Long
    [PreserveSig] Function SetRect(prc As RECT) As Long
    [PreserveSig] Function DoPreview() As Long
    [PreserveSig] Function Unload() As Long
    [PreserveSig] Function SetFocus() As Long
    [PreserveSig] Function QueryFocus(phwnd As LongPtr) As Long
    [PreserveSig] Function TranslateAccelerator(pMsg As MSG) As Long
End Interface

[InterfaceId("196bf9a5-b346-4ef0-aa1e-5dcdb76768b1")]
[OleAutomation(False)]
Interface IPreviewHandlerVisuals Extends stdole.IUnknown
    Sub SetBackgroundColor(ByVal color As Long)
    Sub SetFont(ByVal plf As LongPtr)
    Sub SetTextColor(ByVal color As Long)
End Interface

[InterfaceId("fec87aaf-35f9-447a-adb7-20234491401a")]
[OleAutomation(False)]
Interface IPreviewHandlerFrame Extends stdole.IUnknown
    Sub GetWindowContext(pInfo As PREVIEWHANDLERFRAMEINFO)
    Sub TranslateAccelerator(pMsg As MSG)
End Interface

[InterfaceId("e693cf68-d967-4112-8763-99172aee5e5a")]
[OleAutomation(False)]
Interface IVisualProperties Extends stdole.IUnknown
    Sub SetWatermark(ByVal hbmp As LongPtr, ByVal vpwf As VPWATERMARKFLAGS)
    Sub SetColor(ByVal vpcf As VPCOLORFLAGS, ByVal cr As Long)
    Sub GetColor(ByVal vpcf As VPCOLORFLAGS, cr As Long)
    Sub SetItemHeight(ByVal cyItemInPixels As Long)
    Sub GetItemHeight(cyItemInPixels As Long)
    Sub SetFont(ByVal plf As LongPtr, ByVal bRedraw As Long)
    Sub GetFont(plf As LongPtr)
    Sub SetTheme(ByVal pszSubAppName As LongPtr, ByVal pszSubIdLists As LongPtr)
End Interface


[InterfaceId("000214EE-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IShellLinkA Extends stdole.IUnknown
    Sub GetPath(ByVal pszFile As String, ByVal cch As Long, pfd As WIN32_FIND_DATAA, ByVal fFlags As SLGP_FLAGS)
    Function GetIDList() As LongPtr
    Sub SetIDList(ByVal pidl As LongPtr)
    Sub GetDescription(ByVal pszName As String, ByVal cch As Long)
    Sub SetDescription(ByVal pszName As String)
    Sub GetWorkingDirectory(ByVal pszDir As String, ByVal cch As Long)
    Sub SetWorkingDirectory(ByVal pszDir As String)
    Sub GetArguments(ByVal pszArgs As String, ByVal cch As Long)
    Sub SetArguments(ByVal pszArgs As String)
    [TypeHint(VirtualKeyCodes)] Function GetHotkey() As Integer
    Sub SetHotkey([TypeHint(VirtualKeyCodes)] ByVal wHotkey As Integer)
    Function GetShowCmd() As Long
    Sub SetShowCmd(ByVal iShowCmd As SHOWWINDOW)
    Sub GetIconLocation(ByVal pszIconPath As String, ByVal cch As Long, piIcon As Long)
    Sub SetIconLocation(ByVal pszIconPath As String, ByVal iIcon As Long)
    Sub SetRelativePath(ByVal pszPathRel As String, ByVal dwReserved As Long)
    Sub Resolve(ByVal hwnd As LongPtr, ByVal fFlags As SLR_FLAGS)
    Sub SetPath(ByVal pszFile As LongPtr)
End Interface
[InterfaceId("000214F9-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IShellLinkW Extends stdole.IUnknown
    Sub GetPath(ByVal pszFile As LongPtr, ByVal cch As Long, pfd As WIN32_FIND_DATAW, ByVal fFlags As SLGP_FLAGS)
    Function GetIDList() As LongPtr
    Sub SetIDList(ByVal pidl As LongPtr)
    Sub GetDescription(ByVal pszName As LongPtr, ByVal cch As Long)
    Sub SetDescription(ByVal pszName As LongPtr)
    Sub GetWorkingDirectory(ByVal pszDir As LongPtr, ByVal cch As Long)
    Sub SetWorkingDirectory(ByVal pszDir As LongPtr)
    Sub GetArguments(ByVal pszArgs As LongPtr, ByVal cch As Long)
    Sub SetArguments(ByVal pszArgs As LongPtr)
    [TypeHint(VirtualKeyCodes)] Function GetHotkey() As Integer
    Sub SetHotkey([TypeHint(VirtualKeyCodes)] ByVal wHotkey As Integer)
    Function GetShowCmd() As SHOWWINDOW
    Sub SetShowCmd(ByVal iShowCmd As SHOWWINDOW)
    Sub GetIconLocation(ByVal pszIconPath As LongPtr, ByVal cch As Long, piIcon As Long)
    Sub SetIconLocation(ByVal pszIconPath As LongPtr, ByVal iIcon As Long)
    Sub SetRelativePath(ByVal pszPathRel As LongPtr, ByVal dwReserved As Long)
    Sub Resolve(ByVal hwnd As LongPtr, ByVal fFlags As SLR_FLAGS)
    Sub SetPath(ByVal pszFile As LongPtr)
End Interface
[InterfaceId("45e2b4ae-b1c3-11d0-b92f-00a0c90312e1")]
[OleAutomation(False)]
Interface IShellLinkDataList Extends stdole.IUnknown
    [PreserveSig] Function AddDataBlock(pDataBlock As Any) As Long
    [PreserveSig] Function CopyDataBlock(ByVal dwSig As SHELL_LINK_DATABLOCK_SIG, ppDataBlock As Any) As Long
    [PreserveSig] Function RemoveDataBlock(ByVal dwSig As SHELL_LINK_DATABLOCK_SIG) As Long
    [PreserveSig] Function GetFlags(pdwFlags As SHELL_LINK_DATA_FLAGS) As Long
    [PreserveSig] Function SetFlags(ByVal dwFlags As SHELL_LINK_DATA_FLAGS) As Long
End Interface


[InterfaceId("000214E4-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IContextMenu Extends stdole.IUnknown
    Sub QueryContextMenu(ByVal hMenu As LongPtr, ByVal indexMenu As Long, ByVal idCmdFirst As Long, ByVal idCmdLast As Long, ByVal uFlags As QueryContextMenuFlags)
    Sub InvokeCommand(ByVal lpici As LongPtr)
    Sub GetCommandString(ByVal idCmd As Long, ByVal uType As GetCommandStringFlags, pwReserved As Long, ByVal pszName As LongPtr, ByVal cchMax As Long)
End Interface

[InterfaceId("000214F4-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IContextMenu2 Extends IContextMenu
    Sub HandleMenuMsg(ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr)
End Interface

[InterfaceId("BCFCE0A0-EC17-11d0-8D10-00A0C90F2719")]
[OleAutomation(False)]
Interface IContextMenu3 Extends IContextMenu2
    Sub HandleMenuMsg2(ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr, plResult As LongPtr)
End Interface

[InterfaceId("3409E930-5A39-11D1-83FA-00A0C90DC849")]
[OleAutomation(False)]
Interface IContextMenuCB Extends stdole.IUnknown
    Sub CallBack(ByVal psf As IShellFolder, ByVal hWndOwner As LongPtr, ByVal pdtobj As IDataObject, ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr)
End Interface

[InterfaceId("0811AEBE-0B87-4C54-9E72-548CF649016B")]
[OleAutomation(False)]
Interface IContextMenuSite Extends stdole.IUnknown
    Sub DoContextMenuPopup(ByVal punkContextMenu As LongPtr, ByVal fFlags As Long, ByVal pt As LongLong)
End Interface

[InterfaceId("DCB07FDC-3BB5-451C-90BE-966644FED7B0")]
[OleAutomation(False)]
Interface INewMenuClient Extends stdole.IUnknown
    Sub IncludeItems(ByRef pFlags As NMCII_FLAGS)
    Sub SelectAndEditItem(ByVal pidlItem As LongPtr, ByVal flags As NMCSAEI_FLAGS)
End Interface

[InterfaceId("73db1241-1e85-4581-8e4f-a81e1d0f8c57")]
[OleAutomation(False)]
Interface IAttachmentExecute Extends IUnknown
	Sub SetClientTitle(ByVal pszTitle As LongPtr)
	Sub SrtClientGuid(guid As UUID)
	Sub SetLocalPath(ByVal pszLocalPath As LongPtr)
	Sub SetFileName(ByVal pszFileName As LongPtr)
	Sub SetSource(ByVal pszSource As LongPtr)
	Sub SetReferrer(ByVal pszReferrer As LongPtr)
	Sub CheckPolicy()
	Sub Prompt(ByVal hwnd As LongPtr, ByVal prompt As ATTACHMENT_PROMPT, paction As ATTACHMENT_ACTION)
	Sub Save()
	Sub Execute(ByVal hwnd As LongPtr, ByVal pszVerb As LongPtr, phProcess As LongPtr)
	Sub SaveWithUI(ByVal hwnd As LongPtr)
	Sub ClearClientState()
End Interface

[InterfaceId("4CA300A1-9B8D-11D1-8B22-00C04FD918D0")]
[OleAutomation(False)]
Interface IShellMenuCallback Extends stdole.IUnknown
    Sub CallbackSM(ByRef psmd As SMDATA, ByVal uMsg As ShellMenuCallbackMessages, ByVal wParam As LongPtr, ByVal lParam As LongPtr)
End Interface

[InterfaceId("EE1F7637-E138-11D1-8379-00C04FD918D0")]
[OleAutomation(False)]
Interface IShellMenu Extends stdole.IUnknown
    [PreserveSig]
    Function Initialize(ByVal psmc As IShellMenuCallback, ByVal uID As Long, ByVal uIdAncestor As Long, ByVal dwFlags As ShellMenuInitFlags) As Long
    [PreserveSig]
    Function GetMenuInfo(ByRef ppsmc As IShellMenuCallback, ByRef puId As Long, ByRef puIdAncestor As Long, ByRef pdwFlags As ShellMenuInitFlags) As Long
    [PreserveSig]
    Function SetShellFolder(ByVal psf As IShellFolder, ByVal pidlFolder As LongPtr, ByVal hkey As LongPtr, ByVal dwFlags As SMSET_Flags) As Long
    [PreserveSig]
    Function GetShellFolder(ByRef pdwFlags As ShellMenuInitFlags, ByRef ppidl As LongPtr, ByRef riid As UUID, ByRef ppv As Any) As Long
    [PreserveSig]
    Function SetMenu(ByVal hMenu As LongPtr, ByVal hwnd As LongPtr, ByVal dwFlags As SMSET_Flags) As Long
    [PreserveSig]
    Function GetMenu(ByRef phmenu As LongPtr, ByRef phwnd As LongPtr, ByRef pdwFlags As SMSET_Flags) As Long
    [PreserveSig]
    Function InvalidateItem(ByRef psmd As SMDATA, ByVal dwFlags As ShellMenuInvalidateFlags) As Long
    [PreserveSig]
    Function GetState(ByRef psmd As SMDATA) As Long
    [PreserveSig]
    Function SetMenuToolbar(ByVal pUnk As IUnknown, ByVal dwFlags As SMSET_Flags) As Long
End Interface
[InterfaceId("6f51c646-0efe-4370-882a-c1f61cb27c3b")]
[OleAutomation(False)]
Interface IShellMenu2 Extends IShellMenu
    Sub GetSubMenu(ByVal idCmd As Long, riid As UUID, ppv As Any)
    Sub SetToolbar(ByVal hwnd As LongPtr, ByVal dwFlags As SMSET_Flags)
    Sub SetMinWidth(ByVal cxMenu As Long)
    Sub SetNoBorder(ByVal fNoBorder As Long)
    Sub SetTheme(ByVal pszTheme As String)
End Interface

[InterfaceId("8278F932-2A3E-11D2-838F-00C04FD918D0")]
[OleAutomation(False)]
Interface ITrackShellMenu Extends IShellMenu
    Sub SetObscured(ByVal hwndTB As LongPtr, ByVal punkBand As IUnknown, ByVal dwSMSetFlags As SMSET_Flags)
    Sub Popup(ByVal hwnd As LongPtr, ByRef ppt As POINT, ByRef prcExclude As RECT, ByVal dwFlags As MENUPOPUPPOPUPFLAGS)
End Interface

[InterfaceId("7690AA79-F8FC-4615-A327-36F7D18F5D91")]
[OleAutomation(False)]
Interface IDefaultFolderMenuInitialize Extends stdole.IUnknown
    Sub Initialize(ByVal hwnd As LongPtr, ByVal pcmcb As IContextMenuCB, ByVal pidlFolder As LongPtr, ByVal psf As IShellFolder, ByVal cidl As Long, ByVal apidl As LongPtr, ByRef punkAssociation As Any, ByVal cKeys As Long, ByRef aKeys As LongPtr)
    Sub SetMenuRestrictions(ByVal dfmrValues As DEFAULT_FOLDER_MENU_RESTRICTIONS)
    Sub GetMenuRestrictions(ByVal dfmrMask As DEFAULT_FOLDER_MENU_RESTRICTIONS, ByRef pdfmrValues As DEFAULT_FOLDER_MENU_RESTRICTIONS)
    Sub SetHandlerClsid(ByRef rclsid As UUID)
End Interface

[InterfaceId("3AA7AF7E-9B36-420c-A8E3-F77D4674A488")]
[OleAutomation(False)]
Interface IKnownFolder Extends stdole.IUnknown
    Sub GetId(pkfid As UUID)
    Sub GetCategory(pCategory As KF_CATEGORY)
    Sub GetShellItem(ByVal dwFlags As KNOWN_FOLDER_FLAG, riid As UUID, ppv As Any)
    Sub GetPath(ByVal dwFlags As KNOWN_FOLDER_FLAG, ppszPath As LongPtr)
    Sub SetPath(ByVal dwFlags As KNOWN_FOLDER_FLAG, ByVal pszPath As LongPtr)
    Sub GetIDList(ByVal dwFlags As KNOWN_FOLDER_FLAG, ppidl As LongPtr)
    Sub GetFolderType(pftid As UUID)
    Sub GetRedirectionCapabilities(pCapabilities As KF_REDIRECTION_CAPABILITIES)
    Sub GetFolderDefinition(pKFD As KNOWNFOLDER_DEFINITION)
End Interface

[InterfaceId("8BE2D872-86AA-4d47-B776-32CCA40C7018")]
[OleAutomation(False)]
Interface IKnownFolderManager Extends stdole.IUnknown
    [PreserveSig] Function FolderIdFromCsidl(ByVal nCsidl As Long, pfid As UUID) As Long
    [PreserveSig] Function FolderIdToCsidl(rfid As UUID, pnCsidl As Long) As Long
    [PreserveSig] Function GetFolderIds(ppKfid As LongPtr, pCount As Long) As Long
    [PreserveSig] Function GetFolder(rfid As UUID, ppkf As IKnownFolder) As Long
    [PreserveSig] Function GetFolderByName(ByVal pszCanonicalName As LongPtr, ppkf As IKnownFolder) As Long
    [PreserveSig] Function RegisterFolder(rfid As UUID, pKFD As KNOWNFOLDER_DEFINITION) As Long
    [PreserveSig] Function UnregisterFolder(rfid As UUID) As Long
    [PreserveSig] Function FindFolderFromPath(ByVal pszPath As LongPtr, ByVal mode As FFFP_MODE, ppkf As IKnownFolder) As Long
    [PreserveSig] Function FindFolderFromIDList(ByVal pidl As LongPtr, ppkf As IKnownFolder) As Long
    [PreserveSig] Function Redirect(rfid As UUID, ByVal hwnd As LongPtr, ByVal flags As KF_REDIRECT_FLAGS, ByVal pszTargetPath As LongPtr, ByVal cFolders As Long, pExclusion As UUID, ppszError As LongPtr) As Long
End Interface

[InterfaceId("04b0f1a7-9490-44bc-96e1-4296a31252e2")]
[OleAutomation(False)]
Interface IFileOperationProgressSink Extends stdole.IUnknown
    Sub StartOperations()
    Sub FinishOperations(ByVal hrResult As Long)
    Sub PreRenameItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiItem As IShellItem, ByVal pszNewName As LongPtr)
    Sub PostRenameItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiItem As IShellItem, ByVal pszNewName As LongPtr, ByVal hrRename As Long, ByVal psiNewlyCreated As IShellItem)
    Sub PreMoveItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiItem As IShellItem, ByVal psiDestinationFolder As IShellItem, ByVal pszNewName As LongPtr)
    Sub PostMoveItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiItem As IShellItem, ByVal psiDestinationFolder As IShellItem, ByVal pszNewName As LongPtr, ByVal hrMove As Long, ByVal psiNewlyCreated As IShellItem)
    Sub PreCopyItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiItem As IShellItem, ByVal psiDestinationFolder As IShellItem, ByVal pszNewName As LongPtr)
    Sub PostCopyItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiItem As IShellItem, ByVal psiDestinationFolder As IShellItem, ByVal pszNewName As LongPtr, ByVal hrCopy As Long, ByVal psiNewlyCreated As IShellItem)
    Sub PreDeleteItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiItem As IShellItem)
    Sub PostDeleteItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiItem As IShellItem, ByVal hrDelete As Long, ByVal psiNewlyCreated As IShellItem)
    Sub PreNewItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiDestinationFolder As IShellItem, ByVal pszNewName As LongPtr)
    Sub PostNewItem(ByVal dwFlags As TRANSFER_SOURCE_FLAGS, ByVal psiDestinationFolder As IShellItem, ByVal pszNewName As LongPtr, ByVal pszTemplateName As LongPtr, ByVal hrNew As Long, ByVal psiNewItem As IShellItem)
    Sub UpdateProgress(ByVal iWorkTotal As Long, ByVal iWorkSoFar As Long)
    Sub ResetTimer()
    Sub PauseTimer()
    Sub ResumeTimer()
End Interface

[InterfaceId("947aab5f-0a5c-4c13-b4d6-4bf7836fc9f8")]
[OleAutomation(False)]
Interface IFileOperation Extends stdole.IUnknown
    [PreserveSig] Function Advise(ByVal pfops As IFileOperationProgressSink, pdwCookie As Long) As Long
    [PreserveSig] Function Unadvise(ByVal dwCookie As Long) As Long
    [PreserveSig] Function SetOperationFlags([TypeHint(FILEOP_FLAGS, FILEOP_FLAGSEX)] ByVal dwOperationFlags As Long) As Long
    [PreserveSig] Function SetProgressMessage(ByVal pszMessage As LongPtr) As Long
    [PreserveSig] Function SetProgressDialog(ByVal popd As IOperationsProgressDialog) As Long
    [PreserveSig] Function SetProperties(ByVal pproparray As IPropertyChangeArray) As Long
    [PreserveSig] Function SetOwnerWindow(ByVal hwndOwner As LongPtr) As Long
    [PreserveSig] Function ApplyPropertiesToItem(ByVal psiItem As IShellItem) As Long
    [PreserveSig] Function ApplyPropertiesToItems(ByVal punkItems As stdole.IUnknown) As Long
    [PreserveSig] Function RenameItem(ByVal psiItem As IShellItem, ByVal pszNewName As LongPtr, ByVal pfopsItem As IFileOperationProgressSink) As Long
    [PreserveSig] Function RenameItems(ByVal pUnkItems As stdole.IUnknown, ByVal pszNewName As LongPtr) As Long
    [PreserveSig] Function MoveItem(ByVal psiItem As IShellItem, ByVal psiDestinationFolder As IShellItem, ByVal pszNewName As LongPtr, ByVal pfopsItem As IFileOperationProgressSink) As Long
    [PreserveSig] Function MoveItems(ByVal pUnkItems As stdole.IUnknown, ByVal psiDestinationFolder As IShellItem) As Long
    [PreserveSig] Function CopyItem(ByVal psiItem As IShellItem, ByVal psiDestinationFolder As IShellItem, ByVal pszCopyName As LongPtr, ByVal pfopsItem As IFileOperationProgressSink) As Long
    [PreserveSig] Function CopyItems(ByVal pUnkItems As stdole.IUnknown, ByVal psiDestinationFolder As IShellItem) As Long
    [PreserveSig] Function DeleteItem(ByVal psiItem As IShellItem, ByVal pfopsItem As IFileOperationProgressSink) As Long
    [PreserveSig] Function DeleteItems(ByVal pUnkItems As stdole.IUnknown) As Long
    [PreserveSig] Function NewItem(ByVal psiDestinationFolder As IShellItem, ByVal dwFileAttributes As FILE_ATTRIBUTES, ByVal pszName As LongPtr, ByVal pszTemplateName As LongPtr, ByVal pfopsitem As IFileOperationProgressSink) As Long
    [PreserveSig] Function PerformOperations() As Long
    [PreserveSig] Function GetAnyOperationsAborted(pfAnyOperationsAborted As BOOL) As Long
End Interface
[InterfaceId("cd8f23c1-8f61-4916-909d-55bdd0918753")]
[OleAutomation(False)]
Interface IFileOperation2 Extends IFileOperation
    [PreserveSig] Function SetOperationFlags2(ByVal operationFlags2 As FILE_OPERATION_FLAGS2) As Long
End Interface

[InterfaceId("0C9FB851-E5C9-43EB-A370-F0677B13874C")]
[OleAutomation(False)]
Interface IOperationsProgressDialog Extends stdole.IUnknown
    Sub StartProgressDialog(ByVal hwndOwner As LongPtr, ByVal flags As OPPROGDLGF)
    Sub StopProgressDialog()
    Sub SetOperation(ByVal action As SPACTION)
    Sub SetMode(ByVal mode As PDMODE)
    Sub UpdateProgress(ByVal ullPointsCurrent As LongLong, ByVal ullPointsTotal As LongLong, ByVal ullSizeCurrent As LongLong, ByVal ullSizeTotal As LongLong, ByVal ullItemCurrent As LongLong, ByVal ullItemsTotal As LongLong)
    Sub UpdateLocation(ByVal psiSource As IShellItem, ByVal psiTarget As IShellItem, ByVal psiItem As IShellItem)
    Sub ResetTimer()
    Sub PauseTimer()
    Sub ResumeTimer()
    Sub GetMilliseconds(pullElapsed As LongLong, pullRemaining As LongLong)
    Sub GetOperationStatus(popStatus As PDOPSTATUS)
End Interface
[InterfaceId("f5b0bf81-8cb5-4b1b-9449-1a159e0c733c")]
[OleAutomation(False)]
Interface IIOCancelInformation Extends IUnknown
    Sub SetCancelInformation(ByVal dwThreadID As Long, ByVal uMsgCancel As Long)
    Sub GetCancelInformation(Optional pdwThreadID As Long, Optional puMsgCancel As Long)
End Interface

[InterfaceId("EBBC7C04-315E-11d2-B62F-006097DF5BD4")]
[OleAutomation(False)]
Interface IProgressDialog Extends stdole.IUnknown
    Sub StartProgressDialog(ByVal hwndParent As LongPtr, ByVal punkEnableModeless As stdole.IUnknown, ByVal dwFlags As PROGDLG, ByVal pvReserved As LongPtr)
    Sub StopProgressDialog()
    Sub SetTitle(ByVal pwszTitle As String)
    Sub SetAnimation(ByVal hInstAnimation As LongPtr, ByVal idAnimation As Long)
    [PreserveSig] Function HasUserCancelled() As Long
    Sub SetProgress(ByVal dwCompleted As Long, ByVal dwTotal As Long)
    Sub SetProgress64(ByVal ullCompleted As LongLong, ByVal ullTotal As LongLong)
    Sub SetLine(ByVal dwLineNum As Long, ByVal pwzString As String, ByVal fCompactPath As BOOL, ByVal pvReserved As LongPtr)
    Sub SetCancelMsg(ByVal pszCancelMsg As String, ByVal pvReserved As LongPtr)
    Sub Timer(ByVal dwTimerAction As ProgDlgTimeActions, ByVal pvReserved As LongPtr)
End Interface

[InterfaceId("49ff1172-eadc-446d-9285-156453a6431c")]
[OleAutomation(False)]
Interface IActionProgressDialog Extends stdole.IUnknown
    Sub Initialize(ByVal flags As SPINITF, ByVal pszTitle As String, ByVal pszCancel As String)
    Sub Stop()
End Interface
[InterfaceId("49ff1173-eadc-446d-9285-156453a6431c")]
[OleAutomation(False)]
Interface IActionProgress Extends stdole.IUnknown
    Sub Begin(ByVal action As SPACTION, ByVal flags As SPBEGINF)
    Sub UpdateProgress(ByVal ulCompleted As LongLong, ByVal ulTotal As LongLong)
    Sub UpdateText(ByVal sptxt As SPTEXT, ByVal pszText As String, ByVal fMayCompare As BOOL)
    Function QueryCancel() As Long
    Sub ResetCancel()
    Sub End()
End Interface


[InterfaceId("2659B475-EEB8-48b7-8F07-B378810F48CF")]
[OleAutomation(False)]
Interface IShellItemFilter Extends stdole.IUnknown
    Sub IncludeItem(ByVal psi As IShellItem)
    Sub GetEnumFlagsForItem(ByVal psi As IShellItem, pgrfFlags As SHCONTF)
End Interface

[InterfaceId("b4db1657-70d7-485e-8e3e-6fcb5a5c1802")]
[OleAutomation(False)]
Interface IModalWindow Extends stdole.IUnknown
    Sub Show(ByVal hwndOwner As LongPtr)
End Interface

[InterfaceId("42f85136-db7e-439c-85f1-e4075d135fc8")]
[OleAutomation(False)]
Interface IFileDialog Extends IModalWindow
    Sub SetFileTypes(ByVal cFileTypes As Long, ByVal rgFilterSpec As LongPtr)
    Sub SetFileTypeIndex(ByVal iFileType As Long)
    Sub GetFileTypeIndex(piFileType As Long)
    Sub Advise(ByVal pfde As IFileDialogEvents, pdwCookie As Long)
    Sub Unadvise(ByVal dwCookie As Long)
    Sub SetOptions(ByVal fos As FILEOPENDIALOGOPTIONS)
    Sub GetOptions(pfos As FILEOPENDIALOGOPTIONS)
    Sub SetDefaultFolder(ByVal psi As IShellItem)
    Sub SetFolder(ByVal psi As IShellItem)
    Sub GetFolder(ppsi As IShellItem)
    Sub GetCurrentSelection(ppsi As IShellItem)
    Sub SetFileName(ByVal pszName As String)
    Sub GetFileName(pszName As String)
    Sub SetTitle(ByVal pszTitle As String)
    Sub SetOkButtonLabel(ByVal pszText As String)
    Sub SetFileNameLabel(ByVal pszLabel As String)
    Sub GetResult(ppsi As IShellItem)
    Sub AddPlace(ByVal psi As IShellItem, ByVal fdap As FDAP)
    Sub SetDefaultExtension(ByVal pszDefaultExtension As String)
    Sub Close(ByVal hr As Long)
    Sub SetClientGuid(guid As UUID)
    Sub ClearClientData()
    Sub SetFilter(ByVal pFilter As IShellItemFilter)
End Interface
[InterfaceId("61744fc7-85b5-4791-a9b0-272276309b13")]
[OleAutomation(False)]
Interface IFileDialog2 Extends IFileDialog
    Sub SetCancelButtonLabel(ByVal pszLabel As String)
    Sub SetNavigationRoot(ByVal psi As IShellItem)
End Interface

[InterfaceId("84bccd23-5fde-4cdb-aea4-af64b83d78ab")]
[OleAutomation(False)]
Interface IFileSaveDialog Extends IFileDialog
    Sub SetSaveAsItem(ByVal psi As IShellItem)
    Sub SetProperties(ByVal pStore As IPropertyStore)
    Sub SetCollectedProperties(ByVal pList As IPropertyDescriptionList, ByVal fAppendDefault As BOOL)
    Sub GetProperties(ppStore As IPropertyStore)
    Sub ApplyProperties(ByVal psi As IShellItem, ByVal pStore As IPropertyStore, ByVal hwnd As LongPtr, ByVal pSink As IFileOperationProgressSink)
End Interface

[InterfaceId("d57c7288-d4ad-4768-be02-9d969532d960")]
[OleAutomation(False)]
Interface IFileOpenDialog Extends IFileDialog
    Sub GetResults(ppenum As IShellItemArray)
    Sub GetSelectedItems(ppsai As IShellItemArray)
End Interface

[InterfaceId("973510db-7d7f-452b-8975-74a85828d354")]
[OleAutomation(False)]
Interface IFileDialogEvents Extends stdole.IUnknown
    Sub OnFileOk(ByVal pfd As IFileDialog)
    Sub OnFolderChanging(ByVal pfd As IFileDialog, ByVal psiFolder As IShellItem)
    Sub OnFolderChange(ByVal pfd As IFileDialog)
    Sub OnSelectionChange(ByVal pfd As IFileDialog)
    Sub OnShareViolation(ByVal pfd As IFileDialog, ByVal psi As IShellItem, pResponse As FDE_SHAREVIOLATION_RESPONSE)
    Sub OnTypeChange(ByVal pfd As IFileDialog)
    Sub OnOverwrite(ByVal pfd As IFileDialog, ByVal psi As IShellItem, pResponse As FDE_OVERWRITE_RESPONSE)
End Interface

[InterfaceId("e6fdd21a-163f-4975-9c8c-a69f1ba37034")]
[OleAutomation(False)]
Interface IFileDialogCustomize Extends stdole.IUnknown
    Sub EnableOpenDropDown(ByVal dwIDCtl As Long)
    Sub AddMenu(ByVal dwIDCtl As Long, ByVal pszLabel As String)
    Sub AddPushButton(ByVal dwIDCtl As Long, ByVal pszLabel As String)
    Sub AddComboBox(ByVal dwIDCtl As Long)
    Sub AddRadioButtonList(ByVal dwIDCtl As Long)
    Sub AddCheckButton(ByVal dwIDCtl As Long, ByVal pszLabel As String, ByVal fChecked As BOOL)
    Sub AddEditBox(ByVal dwIDCtl As Long, ByVal pszText As String)
    Sub AddSeparator(ByVal dwIDCtl As Long)
    Sub AddText(ByVal dwIDCtl As Long, ByVal pszText As String)
    Sub SetControlLabel(ByVal dwIDCtl As Long, ByVal pszLabel As String)
    Sub GetControlState(ByVal dwIDCtl As Long, pdwState As CDCONTROLSTATEF)
    Sub SetControlState(ByVal dwIDCtl As Long, ByVal dwState As CDCONTROLSTATEF)
    Sub GetEditBoxText(ByVal dwIDCtl As Long, ppszText As LongPtr)
    Sub SetEditBoxText(ByVal dwIDCtl As Long, ByVal pszText As String)
    Sub GetCheckButtonState(ByVal dwIDCtl As Long, pbChecked As Long)
    Sub SetCheckButtonState(ByVal dwIDCtl As Long, ByVal bChecked As Long)
    Sub AddControlItem(ByVal dwIDCtl As Long, ByVal dwIDItem As Long, ByVal pszLabel As String)
    Sub RemoveControlItem(ByVal dwIDCtl As Long, ByVal dwIDItem As Long)
    Sub RemoveAllControlItems()
    Sub GetControlItemState(ByVal dwIDCtl As Long, ByVal dwIDItem As Long, pdwState As CDCONTROLSTATEF)
    Sub SetControlItemState(ByVal dwIDCtl As Long, ByVal dwIDItem As Long, ByVal dwState As CDCONTROLSTATEF)
    Sub GetSelectedControlItem(ByVal dwIDCtl As Long, pdwIDItem As Long)
    Sub SetSelectedControlItem(ByVal dwIDCtl As Long, ByVal dwIDItem As Long)
    Sub StartVisualGroup(ByVal dwIDCtl As Long, ByVal pszLabel As String)
    Sub EndVisualGroup()
    Sub MakeProminent(ByVal dwIDCtl As Long)
    Sub SetControlItemText(ByVal dwIDCtl As Long, ByVal dwIDItem As Long, ByVal pszLabel As String)
End Interface

[InterfaceId("36116642-D713-4b97-9B83-7484A9D00433")]
[OleAutomation(False)]
Interface IFileDialogControlEvents Extends stdole.IUnknown
    Sub OnItemSelected(ByVal pfdc As IFileDialogCustomize, ByVal dwIDCtl As Long, ByVal dwIDItem As Long)
    Sub OnButtonClicked(ByVal pfdc As IFileDialogCustomize, ByVal dwIDCtl As Long)
    Sub OnCheckButtonToggled(ByVal pfdc As IFileDialogCustomize, ByVal dwIDCtl As Long, ByVal bChecked As Long)
    Sub OnControlActivating(ByVal pfdc As IFileDialogCustomize, ByVal dwIDCtl As Long)
End Interface

[InterfaceId("10DF43C8-1DBE-11D3-8B34-006097DF5BD4")]
[OleAutomation(False)]
Interface IBrowserFrameOptions Extends stdole.IUnknown
    Sub GetFrameOptions(ByVal dwMask As BROWSERFRAMEOPTIONS, ByRef pdwOptions As BROWSERFRAMEOPTIONS)
End Interface
    
[InterfaceId("6589b6d2-5f8d-4b9e-b7e0-23cdd9717d8c")]
[OleAutomation(False)]
Interface IUpdateIDList Extends stdole.IUnknown
	Sub Update(ByVal pbc As IBindCtx, ByVal pidlIn As LongPtr, ppidlOut As LongPtr)
End Interface
    

[InterfaceId("92218CAB-ECAA-4335-8133-807FD234C2EE")]
[OleAutomation(False)]
Interface IAssocHandlerInvoker Extends stdole.IUnknown
    [PreserveSig] Function SupportsSelection() As Long
    [PreserveSig] Function Invoke() As Long
End Interface

[InterfaceId("F04061AC-1659-4a3f-A954-775AA57FC083")]
[OleAutomation(False)]
Interface IAssocHandler Extends stdole.IUnknown
    [PreserveSig] Function GetName(ppsz As LongPtr) As Long
    [PreserveSig] Function GetUIName(ppsz As LongPtr) As Long
    [PreserveSig] Function GetIconLocation(ppszPath As LongPtr, pIndex As Long) As Long
    [PreserveSig] Function IsRecommended() As Long
    [PreserveSig] Function MakeDefault(ByVal pszDescription As String) As Long
    [PreserveSig] Function Invoke(ByVal pdo As IDataObject) As Long
    [PreserveSig] Function CreateInvoker(ByVal pdo As IDataObject, ppInvoker As IAssocHandlerInvoker) As Long
End Interface

[InterfaceId("973810ae-9599-4b88-9e4d-6ee98c9552da")]
[OleAutomation(False)]
Interface IEnumAssocHandlers Extends stdole.IUnknown
    [PreserveSig] Function Next(ByVal celt As Long, rgelt As IAssocHandler, pceltFetch As Long) As Long
End Interface

[InterfaceId("7307055c-b24a-486b-9f25-163e597a28a9")]
[OleAutomation(False)]
Interface IQueryContinue Extends stdole.IUnknown
    Sub QueryContinue()
End Interface

[InterfaceId("19108294-0441-4AFF-8013-FA0A730B0BEA")]
[OleAutomation(False)]
Interface IUserNotificationCallback Extends stdole.IUnknown
    Sub OnBalloonUserClick(pt As POINT)
    Sub OnLeftClick(pt As POINT)
    Sub OnContextMenu(pt As POINT)
End Interface

[InterfaceId("ba9711ba-5893-4787-a7e1-41277151550b")]
[OleAutomation(False)]
Interface IUserNotification Extends stdole.IUnknown
    Sub SetBalloonInfo(ByVal pszTitle As String, ByVal pszText As String, ByVal dwInfoFlags As NII_FLAGS)
    Sub SetBalloonRetry(ByVal dwShowTime As Long, ByVal dwInterval As Long, ByVal cRetryCount As Long)
    Sub SetIconInfo(ByVal hIcon As LongPtr, ByVal pszTooltip As String)
    Sub Show(ByVal pqc As IQueryContinue, ByVal dwContinuePollInterval As Long)
    Sub PlaySound(ByVal pszSoundName As String)
End Interface
[InterfaceId("215913CC-57EB-4FAB-AB5A-E5FA7BEA2A6C")]
[OleAutomation(False)]
Interface IUserNotification2 Extends stdole.IUnknown
    Sub SetBalloonInfo(ByVal pszTitle As String, ByVal pszText As String, ByVal dwInfoFlags As NII_FLAGS)
    Sub SetBalloonRetry(ByVal dwShowTime As Long, ByVal dwInterval As Long, ByVal cRetryCount As Long)
    Sub SetIconInfo(ByVal hIcon As LongPtr, ByVal pszTooltip As String)
    Sub Show(ByVal pqc As IQueryContinue, ByVal dwContinuePollInterval As Long, ByVal pSink As IUserNotificationCallback)
    Sub PlaySound(ByVal pszSoundName As String)
End Interface

[InterfaceId("6A9D9026-0E6E-464C-B000-42ECC07DE673")]
[OleAutomation(False)]
Interface IObjectWithFolderEnumMode Extends stdole.IUnknown
    Sub SetMode(ByVal feMode As FOLDER_ENUM_MODE)
    Sub GetMode(ByRef pfeMode As FOLDER_ENUM_MODE)
End Interface

[InterfaceId("fc0ca0a7-c316-4fd2-9031-3e628e6d4f23")]
[OleAutomation(False)]
Interface IObjectWithPropertyKey Extends stdole.IUnknown
    Sub SetPropertyKey(key As PROPERTYKEY)
    Sub GetPropertyKey(key As PROPERTYKEY)
End Interface

[InterfaceId("36db0196-9665-46d1-9ba7-d3709eecf9ed")]
[OleAutomation(False)]
Interface IObjectWithAppUserModelID Extends stdole.IUnknown
	Sub SetAppID(ByVal pszAppID As LongPtr)
	Sub GetAppID(ppszAppID As LongPtr)
End Interface

[InterfaceId("ED2AA515-602F-469C-A130-CE69FD0FA878")]
[OleAutomation(False)]
Interface IObjectWithPackageFullName Extends stdole.IUnknown
	Sub GetPackageFullName(packageFullName As LongPtr)
End Interface


[InterfaceId("71e806fb-8dee-46fc-bf8c-7748a8a1ae13")]
[OleAutomation(False)]
Interface IObjectWithProgID Extends stdole.IUnknown
	Sub SetProgID(ByVal pszProgID As LongPtr)
	Sub GetProgID(ppszProgID As LongPtr)
End Interface

[InterfaceId("F279B885-0AE9-4b85-AC06-DDECF9408941")]
[OleAutomation(False)]
Interface IObjectWithCancelEvent Extends stdole.IUnknown
	Sub GetCancelEvent(phEvent As LongPtr)
End Interface

[InterfaceId("1c9cd5bb-98e9-4491-a60f-31aacc72b83c")]
[OleAutomation(False)]
Interface IObjectWithSelection Extends stdole.IUnknown
	Sub SetSelection(ByVal psia As IShellItemArray)
	Sub GetSelection(riid As UUID, ppv As Any)
End Interface

[InterfaceId("321a6a6a-d61f-4bf3-97ae-14be2986bb36")]
[OleAutomation(False)]
Interface IObjectWithBackReferences Extends stdole.IUnknown
	Sub RemoveBackReferences()
End Interface


[InterfaceId("000214FE-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IRemoteComputer Extends stdole.IUnknown
	Sub Initialize(ByVal pszMachine As LongPtr, ByVal bEnumerating As Long)
End Interface


[InterfaceId("f917bc8a-1bba-4478-a245-1bde03eb9431")]
[OleAutomation(False)]
Interface IPropertyChange Extends IObjectWithPropertyKey
    Sub ApplyToPropVariant(pvarIn As Variant, ppropvarOut As Variant)
End Interface

[InterfaceId("380f5cad-1b5e-42f2-805d-637fd392d31e")]
[OleAutomation(False)]
Interface IPropertyChangeArray Extends stdole.IUnknown
    Sub GetCount(pcOperations As Long)
    Sub GetAt(ByVal iIndex As Long, riid As UUID, ppv As Any)
    Sub InsertAt(ByVal iIndex As Long, ByVal ppropChange As IPropertyChange)
    Sub Append(ByVal ppropChange As IPropertyChange)
    Sub RemoveAt(ByVal iIndex As Long)
    Sub IsKeyInArray(key As PROPERTYKEY)
End Interface

[InterfaceId("00000138-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IPropertyStorage Extends stdole.IUnknown
    Sub ReadMultiple(ByVal cpsec As Long, rgpspec As PROPSPEC, rgpropvar As Variant)
    Sub WriteMultiple(ByVal cpsec As Long, rgpspec As PROPSPEC, rgpropvar As Variant, ByVal propidNameFirst As Long)
    Sub DeleteMultiple(ByVal cpsec As Long, rgpspec As PROPSPEC)
    Function ReadPropertyNames(ByVal cpropid As Long, rgpropid As Long) As LongPtr
    Sub WritePropertyNames(ByVal cpropid As Long, rgpropid As Long, rglpwstrName As String)
    Sub DeletePropertyNames(ByVal cpropid As Long, rgpropid As Long)
    Sub Commit(ByVal grfCommitFlags As STGC)
    Sub Revert()
    Function Enum() As IEnumSTATPROPSTG
    Sub SetTimes(pcTime As LongLong, paTime As LongLong, pmtime As LongLong)
    Sub SetClass(clsid As UUID)
    Sub Stat(pstatpsstg As STATPROPSETSTG)
End Interface

[InterfaceId("0000013A-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IPropertySetStorage Extends stdole.IUnknown
    Function Create(rfmtid As UUID, pclsid As UUID, ByVal grfFlags As PROPSETFLAG, ByVal grfMode As STGM) As IPropertyStorage
    Function Open(rfmtid As UUID, ByVal grfMode As STGM) As IPropertyStorage
    Sub Delete(rfmtid As UUID)
    Function Enum() As IEnumSTATPROPSETSTG
End Interface

[InterfaceId("9af64809-5864-4c26-a720-c1f78c086ee3")]
[OleAutomation(False)]
Interface ICategoryProvider Extends stdole.IUnknown
    [PreserveSig] Function CanCategorizeOnSCID(pscid As SHCOLUMNID) As Long
    [PreserveSig] Function GetDefaultCategory(pguid As UUID, pscid As SHCOLUMNID) As Long
    [PreserveSig] Function GetCategoryForSCID(pscid As SHCOLUMNID, pguid As UUID) As Long
    Function EnumCategories() As IEnumGUID
    [PreserveSig] Function GetCategoryName(pguid As UUID, pszName As LongPtr, ByVal cch As Long) As Long
    [PreserveSig] Function CreateCategory(pguid As UUID, riid As UUID, ppv As Any) As Long
End Interface

[InterfaceId("a3b14589-9174-49a8-89a3-06a1ae2b9ba7")]
[OleAutomation(False)]
Interface ICategorizer Extends stdole.IUnknown
    Sub GetDescription(pszDesc As LongPtr, ByVal cch As Long)
    Sub GetCategory(ByVal cidl As Long, apidl As LongPtr, rgCategoryIds As Long)
    Sub GetCategoryInfo(ByVal dwCategoryId As Long, pci As CATEGORY_INFO)
    Sub CompareCategory(ByVal csfFlags As CATSORT_FLAGS, ByVal dwCategoryId1 As Long, ByVal dwCategoryId2 As Long)
End Interface

[InterfaceId("E8025004-1C42-11d2-BE2C-00A0C9A83DA1")]
[OleAutomation(False)]
Interface IColumnProvider Extends stdole.IUnknown
    Sub Initialize(psci As SHCOLUMNINIT)
    Sub GetColumnInfo(ByVal dwIndex As Long, psci As SHCOLUMNINFO)
    Sub GetItemData(pscid As SHCOLUMNID, pscd As SHCOLUMNDATA, pVarData As Variant)
End Interface

[InterfaceId("d8ec27bb-3f3b-4042-b10a-4acfd924d453")]
[OleAutomation(False)]
Interface IColumnManager Extends stdole.IUnknown
    Sub SetColumnInfo(propkey As PROPERTYKEY, pcmci As CM_COLUMNINFO)
    Sub GetColumnInfo(propkey As PROPERTYKEY, pcmci As CM_COLUMNINFO)
    Sub GetColumnCount(ByVal dwFlags As CM_ENUM_FLAGS, puCount As Long)
    Sub GetColumns(ByVal dwFlags As CM_ENUM_FLAGS, rgKeyOrder As PROPERTYKEY, ByVal cColumns As Long)
    Sub SetColumns(rgkeyOrder As PROPERTYKEY, ByVal cVisible As Long)
End Interface

[InterfaceId("d92995f8-cf5e-4a76-bf59-ead39ea2b97e")]
[OleAutomation(False)]
Interface INamespaceWalkCB Extends stdole.IUnknown
    Sub FoundItem(ByVal psf As IShellFolder, ByVal pidl As LongPtr)
    Sub EnterFolder(ByVal psf As IShellFolder, ByVal pidl As LongPtr)
    Sub LeaveFolder(ByVal psf As IShellFolder, ByVal pidl As LongPtr)
    Sub InitializeProgressDialog(ppszTitle As LongPtr, ppszCancel As LongPtr)
End Interface
[InterfaceId("7ac7492b-c38e-438a-87db-68737844ff70")]
[OleAutomation(False)]
Interface INamespaceWalkCB2 Extends INamespaceWalkCB
    Sub WalkComplete(ByVal hr As Long)
End Interface
[InterfaceId("57ced8a7-3f4a-432c-9350-30f24483f74f")]
[OleAutomation(False)]
Interface INamespaceWalk Extends stdole.IUnknown
    Sub Walk(ByVal pUnkToWalk As stdole.IUnknown, ByVal dwFlags As NAMESPACEWALKFLAG, ByVal cDepth As Long, ByVal pnswcb As INamespaceWalkCB)
    Sub GetIDArrayResult(pcItems As Long, prgpidl As LongPtr)
End Interface

[InterfaceId("64a1cbf0-3a1a-4461-9158-376969693950")]
[OleAutomation(False)]
Interface IFileIsInUse Extends stdole.IUnknown
    Sub GetAppName(ppszName As LongPtr)
    Sub GetUsage(pfut As FILE_USAGE_TYPE)
    Sub GetCapabilities(pdwCapFlags As FileInUseCapabilities)
    Sub GetSwitchToHWND(phwnd As LongPtr)
    Sub CloseFile()
End Interface

[InterfaceId("c1646bc4-f298-4f91-a204-eb2dd1709d1a")]
[OleAutomation(False)]
Interface IDesktopGadget Extends stdole.IUnknown
    Sub RunGadget(ByVal gadgetPath As String)
End Interface


[InterfaceId("000214E8-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IShellExtInit Extends stdole.IUnknown
    Sub Initialize(ByVal pidlFolder As LongPtr, ByVal lpIDataObject As IDataObject, ByVal hkeyProgId As LongPtr)
End Interface

[InterfaceId("c46ca590-3c3f-11d2-bee6-0000f805ca57")]
[OleAutomation(False)]
Interface IQueryAssociations Extends stdole.IUnknown
    Sub Init(ByVal flags As ASSOCF, ByVal pszAssoc As String, ByVal hkProgId As LongPtr, ByVal hwnd As LongPtr)
    Sub GetString(ByVal flags As ASSOCF, ByVal str As ASSOCSTR, ByVal pszExtra As String, ByVal pszOut As String, pcchOut As Long)
    Sub GetKey(ByVal flags As ASSOCF, ByVal str As ASSOCSTR, ByVal pszExtra As String, phkeyOut As LongPtr)
    Sub GetData(ByVal flags As ASSOCF, ByVal str As ASSOCSTR, ByVal pszExtra As String, pvOut As Any, pcbOut As Long)
    Sub GetEnum(ByVal flags As ASSOCF, ByVal str As ASSOCSTR, ByVal pszExtra As String, riid As UUID, ppvOut As Any)
End Interface

[InterfaceId("C1FB73D0-EC3A-4BA2-B512-8CDB9187B6D1")]
[Description("HW Event Handler Interface")]
[OleAutomation(False)]
Interface IHWEventHandler Extends stdole.IUnknown
    Sub Initialize(ByVal pszParams As String)
    Sub HandleEvent(ByVal pszDeviceID As String, ByVal pszAltDeviceID As String, ByVal pszEventType As String)
    Sub HandleEventWithContent(ByVal pszDeviceID As String, ByVal pszAltDeviceID As String, ByVal pszEventType As String, ByVal pszContentTypeHandler As String, ByVal pDataObject As IDataObject)
End Interface
[InterfaceId("CFCC809F-295D-42e8-9FFC-424B33C487E6")]
[OleAutomation(False)]
Interface IHWEventHandler2 Extends IHWEventHandler
    Sub HandleEventWithHWND(ByVal pszDeviceID As String, ByVal pszAltDeviceID As String, ByVal pszEventType As String, ByVal hwndOwner As LongPtr)
End Interface
[InterfaceId("DC2601D7-059E-42fc-A09D-2AFD21B6D5F7")]
[OleAutomation(False)]
Interface IDynamicHWHandler Extends stdole.IUnknown
    Sub GetDynamicInfo(ByVal pszDeviceID As String, ByVal dwContentType As Long, ppszAction As LongPtr)
End Interface
    
        
[InterfaceId("DDEFE873-6997-4e68-BE26-39B633ADBE12")]
[OleAutomation(False)]
Interface IQueryCancelAutoPlay Extends stdole.IUnknown
    Sub AllowAutoPlay(ByVal pszPath As LongPtr, ByVal dwContentType As ARCONTENT, ByVal pszLabel As LongPtr, ByVal dwSerialNumber As Long)
End Interface

[InterfaceId("000214EF-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface ICopyHookA Extends stdole.IUnknown
    Sub CopyCallback(ByVal hwnd As LongPtr, ByVal wFunc As FILEOP, ByVal wFlags As FILEOP_FLAGS, ByVal pszSourceFile As LongPtr, ByVal dwSrcAttribs As Long, ByVal pszDestFile As LongPtr, ByVal dwDestAttribs As Long)
End Interface
[InterfaceId("000214FC-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface ICopyHookW Extends stdole.IUnknown
    Sub CopyCallback(ByVal hwnd As LongPtr, ByVal wFunc As FILEOP, ByVal wFlags As FILEOP_FLAGS, ByVal pszSourceFile As LongPtr, ByVal dwSrcAttribs As Long, ByVal pszDestFile As LongPtr, ByVal dwDestAttribs As Long)
End Interface


[InterfaceId("00bb2762-6a77-11d0-a535-00c04fd7d062")]
[OleAutomation(False)]
Interface IAutoComplete Extends stdole.IUnknown
    Sub Init(ByVal hwndEdit As LongPtr, ByVal punkACL As IEnumString, ByVal pwszRegKeyPath As String, ByVal pwszQuickComplete As String)
    Sub Enable(ByVal fEnable As BOOL)
End Interface
[InterfaceId("EAC04BC0-3791-11d2-BB95-0060977B464C")]
[OleAutomation(False)]
Interface IAutoComplete2 Extends IAutoComplete
    Sub SetOptions(ByVal dwFlag As AUTOCOMPLETEOPTIONS)
    Function GetOptions() As AUTOCOMPLETEOPTIONS
End Interface
[InterfaceId("8E74C210-CF9D-4eaf-A403-7356428F0A5A")]
[OleAutomation(False)]
Interface IEnumACString Extends IEnumString
    Sub NextItem(ByVal pszUrl As LongPtr, ByVal cchMax As Long, pulSortIndex As Long)
    Sub SetEnumOptions(ByVal dwOptions As ACENUMOPTION)
    Sub GetEnumOptions(pdwOptions As ACENUMOPTION)
End Interface
[InterfaceId("77A130B0-94FD-11D0-A544-00C04FD7d062")]
[OleAutomation(False)]
Interface IACList Extends stdole.IUnknown
    Sub Expand(ByVal pszExpand As LongPtr)
End Interface
[InterfaceId("470141a0-5186-11d2-bbb6-0060977b464c")]
[OleAutomation(False)]
Interface IACList2 Extends IACList
    Sub SetOptions(ByVal dwFlag As AUTOCOMPLETELISTOPTIONS)
    Sub GetOptions(pdwFlag As AUTOCOMPLETELISTOPTIONS)
End Interface
[InterfaceId("3CD141F4-3C6A-11d2-BCAA-00C04FD929DB")]
[OleAutomation(False)]
Interface IAutoCompleteDropDown Extends stdole.IUnknown
    Sub GetDropdownStatus(pdwFlags As Long, ppwszString As LongPtr)
    Sub ResetEnumerator()
End Interface

[InterfaceId("0000010f-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IAdviseSink Extends stdole.IUnknown
	Sub OnDataChange(pFormatEtc As FORMATETC, pStgMed As STGMEDIUM)
    Sub OnViewChange(dwAspect As DVASPECT, ByVal lindex As Long)
    Sub OnRename(ByVal pmk As LongPtr) 'As IMoniker
    Sub OnSave()
    Sub OnClose()
End Interface
[InterfaceId("00000125-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IAdviseSink2 Extends IAdviseSink
    Sub OnLinkSrcChange(ByVal pmk As IMoniker)
End Interface
[InterfaceId("3AF24290-0C96-11CE-A0CF-00AA00600AB8")]
[OleAutomation(False)]
Interface IAdviseSinkEx Extends IAdviseSink
    Sub OnViewStatusChange(ByVal dwViewStatus As VIEWSTATUS)
End Interface


[InterfaceId("D2B57227-3D23-4b95-93C0-492BD454C356")]
[OleAutomation(False)]
Interface IInsertItem Extends stdole.IUnknown
	Sub InsertItem(ByVal pidl As LongPtr)
End Interface


[InterfaceId("3d73a659-e5d0-4d42-afc0-5121ba425c8d")]
[OleAutomation(False)]
Interface ICDBurn Extends stdole.IUnknown
    Sub GetRecordedDriveLetter(pszDrive As String, ByVal cch As Long)
    Sub Burn(ByVal hwnd As LongPtr)
    Function HasRecordableDrive() As Long
End Interface
[InterfaceId("2271dcca-74fc-4414-8fb7-c56b05ace2d7")]
[OleAutomation(False)]
Interface ICDBurnExt Extends IUnknown
    Sub GetSupportedActionTypes(pdwActions As CDBE_ACTIONS)
End Interface

[InterfaceId("E9EAD8E6-2A25-410E-9B58-A9FBEF1DD1A2")]
[Description("IUserEventTimerCallback ")]
[OleAutomation(False)]
Interface IUserEventTimerCallback Extends stdole.IUnknown
    Sub UserEventTimerProc(ByVal uUserEventTimerID As Long, ByVal uTimerElapse As Long)
End Interface

[InterfaceId("0F504B94-6E42-42E6-99E0-E20FAFE52AB4")]
[Description("IUserEventTimer ")]
[OleAutomation(False)]
Interface IUserEventTimer Extends stdole.IUnknown
    Sub SetUserEventTimer(ByVal hwnd As LongPtr, ByVal uCallbackMessage As Long, ByVal uTimerElapse As Long, ByVal pUserEventTimerCallback As IUserEventTimerCallback, ByRef puUserEventTimerID As Long)
    Sub KillUserEventTimer(ByVal hwnd As LongPtr, ByVal uUserEventTimerID As Long)
    Function GetUserEventTimerElapsed(ByVal hwnd As LongPtr, ByVal uUserEventTimerID As Long) As Long
    Sub InitTimerTickInterval(ByVal uTimerTickIntervalMs As Long)
End Interface

[InterfaceId("A5CD92FF-29BE-454C-8D04-D82879FB3F1B")]
[OleAutomation(False)]
Interface IVirtualDesktopManager Extends stdole.IUnknown
    Sub IsWindowOnCurrentVirtualDesktop(ByVal topLevelWindow As LongPtr, onCurrentDesktop As Long)
    Sub GetWindowDesktopId(ByVal topLevelWindow As LongPtr, ByRef desktopId As UUID)
    Sub MoveWindowToDesktop(ByVal topLevelWindow As LongPtr, ByRef desktopId As UUID)
End Interface

[InterfaceId("76E54780-AD74-48E3-A695-3BA9A0AFF10D")]
[OleAutomation(False)]
Interface IPreviousVersionsInfo Extends stdole.IUnknown
    Function AreSnapShotsAvailable(ByVal pszPath As LongPtr, ByVal fOkToBeSlow As BOOL) As Long
End Interface

[InterfaceId("40F074E0-4700-11CF-80F9-00AA004BA1C8")]
[OleAutomation(False)]
Interface IZombie Extends stdole.IUnknown
    Sub MakeZombie(pUnk As Any, ByVal dwReserved As Long)
End Interface

[InterfaceId("7A3BD1D9-35A9-4FB3-A467-F48CAC35E2D0")]
[OleAutomation(False)]
Interface IHomeGroup Extends stdole.IUnknown
    Sub IsMember(ByVal member As Long)
    Sub ShowSharingWizard(ByVal owner As LongPtr, ByRef sharingchoices As HOMEGROUPSHARINGCHOICES)
End Interface

[InterfaceId("4E530B0A-E611-4C77-A3AC-9031D022281B")]
[OleAutomation(False)]
Interface IApplicationAssociationRegistration Extends stdole.IUnknown
    Sub QueryCurrentDefault(ByVal pszQuery As LongPtr, ByVal atQueryType As ASSOCIATIONTYPE, ByVal alQueryLevel As ASSOCIATIONLEVEL, ByRef ppszAssociation As LongPtr)
    Sub QueryAppIsDefault(ByVal pszQuery As LongPtr, ByVal atQueryType As ASSOCIATIONTYPE, ByVal alQueryLevel As ASSOCIATIONLEVEL, ByVal pszAppRegistryName As LongPtr, ByRef pfDefault As BOOL)
    Sub QueryAppIsDefaultAll(ByVal alQueryLevel As ASSOCIATIONLEVEL, ByVal pszAppRegistryName As LongPtr, ByRef pfDefault As BOOL)
    Sub SetAppAsDefault(ByVal pszAppRegistryName As LongPtr, ByVal pszSet As LongPtr, ByVal atSetType As ASSOCIATIONTYPE)
    Sub SetAppAsDefaultAll(ByVal pszAppRegistryName As LongPtr)
    Sub ClearUserAssociations()
End Interface

[InterfaceId("1F76A169-F994-40AC-8FC8-0959E8874710")]
[OleAutomation(False)]
Interface IApplicationAssociationRegistrationUI Extends stdole.IUnknown
    Sub LaunchAdvancedAssociationUI(ByVal pszAppRegistryName As LongPtr)
End Interface

[InterfaceId("A3E14960-935F-11D1-B8B8-006008059382")]
[OleAutomation(False)]
Interface IShellApp Extends stdole.IUnknown
    Sub GetAppInfo(ByRef pai As APPINFODATA)
    Sub GetPossibleActions(ByRef pdwActions As APPACTIONFLAGS)
    Sub GetSlowAppInfo(ByRef psaid As SLOWAPPINFO)
    Sub GetCachedSlowAppInfo(ByRef psaid As SLOWAPPINFO)
    Sub IsInstalled()
End Interface

[InterfaceId("1BC752E0-9046-11D1-B8B3-006008059382")]
[OleAutomation(False)]
Interface IPublishedApp Extends IShellApp
    Sub Install(ByRef pstInstall As SYSTEMTIME)
    Sub GetPublishedAppInfo(ByRef ppai As PUBAPPINFO)
    Sub Unschedule()
End Interface

[InterfaceId("12B81347-1B3A-4A04-AA61-3F768B67FD7E")]
[OleAutomation(False)]
Interface IPublishedApp2 Extends IPublishedApp
    Sub Install2(ByRef pstInstall As SYSTEMTIME, ByVal hwndParent As LongPtr)
End Interface

[InterfaceId("0B124F8C-91F0-11D1-B8B5-006008059382")]
[OleAutomation(False)]
Interface IEnumPublishedApps Extends stdole.IUnknown
    Sub Next(ByRef pia As IPublishedApp)
    Sub Reset()
End Interface

[InterfaceId("07250A10-9CF9-11D1-9076-006008059382")]
[OleAutomation(False)]
Interface IAppPublisher Extends stdole.IUnknown
    Sub GetNumberOfCategories(ByRef pdwCat As Long)
    Sub GetCategories(ByRef pAppCategoryList As APPCATEGORYINFOLIST)
    Sub GetNumberOfApps(ByRef pdwApps As Long)
    Sub EnumApps(ByRef pAppCategoryId As UUID, ByRef ppepa As IEnumPublishedApps)
End Interface

[InterfaceId("3964D99F-AC96-11D1-9851-00C04FD91972")]
Interface IADCCtl Extends IDispatch
	[DispId(&H100)] Property Let Dirty(ByVal bDirty As Boolean)
    [DispId(&H100)] Property Get Dirty() As Boolean
    [DispId(&H101)] Property Let Category(ByVal bstrCategory As String)
    [DispId(&H101)] Property Get Category() As String
    [DispId(&H102)] Property Let Sort(ByVal bstrSortExpr As String)
    [DispId(&H102)] Property Get Sort() As String
    [DispId(&H103)] Property Let Forcex86(ByVal bForce As Boolean)
    [DispId(&H103)] Property Get Forcex86() As Boolean
    [DispId(&H104)] Property Get ShowPostSetup() As Boolean
    [DispId(&H105)] Property Let OnDomain(ByVal bOnDomain As Boolean)
    [DispId(&H105)] Property Get OnDomain() As Boolean
    [DispId(&H106)] Property Get DefaultCategory() As String
    [DispId(-3900), Restricted] Function msDataSourceObject(ByVal qualifier As String) As IUnknown
    [DispId(-3901), Restricted] Sub addDataSourceListener(ByVal pEvent As IUnknown)
	Sub Reset(ByVal qualifier As String)
	Function IsRestricted(ByVal bstrPolicy As String) As Boolean
	/*
    // Valid Exec command strings:
    //
    //  "install"       - install app at nRecord
    //  "uninstall"     - uninstall app
    //  "modify"        - modify app
    //  "repair"        - repair app
    //  "upgrade"       - upgrade app
    //  "generic install" - invoke the 'install from floppy or CD' wizard
    //  "ntoptions"     - add/remove NT options
    //  "winupdate"     - update windows
	*/
    Sub Exec(ByVal qualifier As String, ByVal bstrCmd As String, ByVal nRecord As Long)
End Interface

[InterfaceId("1BC752DF-9046-11D1-B8B3-006008059382")]
[OleAutomation(False)]
[Description("Shell Installed Application Interface")]
Interface IInstalledApp Extends IShellApp
	[Description("Same as Add/Remove")]
	Sub Uninstall(ByVal hWnd As LongPtr)
	Sub Modify(ByVal hwnd As LongPtr)
	Sub Repair(ByVal bReInstall As BOOL)
	Sub Upgrade()
End Interface
[InterfaceId("1BC752E1-9046-11D1-B8B3-006008059382")]
[OleAutomation(False)]
[Description("Shell Installed Apps Enumeration Interface")]
Interface IEnumInstalledApps Extends IUnknown
	Sub Next(pia As IInstalledApp)
	Sub Reset()
End Interface

[InterfaceId("352EC2B8-8B9A-11D1-B8AE-006008059382")]
[OleAutomation(False)]
[Description("Application Manager")]
Interface IShellAppManager Extends IUnknown
	Sub GetNumberofInstalledApps(pdwResult As Long)
	Sub EnumInstalledApps(peia As IEnumInstalledApps)
	Sub GetPublishedAppCategories(pCategoryList As SHELLAPPCATEGORYLIST)
	Sub EnumPublishedApps(ByVal pszCategory As LongPtr, ppepa As IEnumPublishedApps)
	Sub InstallFromFloppyOrCDROM(ByVal hwndParent As LongPtr)
End Interface

[InterfaceId("d97b5aac-c792-433c-975d-35c4eadc7a9d")]
[OleAutomation(False)]
[Description("Handlers that implement this interface must also register the component category value CATID_FilePlaceholderMergeHandler.")]
Interface IFileSyncMergeHandler Extends IUnknown
    Function Merge(ByVal localFilePath As LongPtr, ByVal serverFilePath As LongPtr) As MERGE_UPDATE_STATUS
    Sub ShowResolveConflictUIAsync(ByVal localFilePath As LongPtr, ByVal monitorToDisplayOn As LongPtr)
End Interface


[InterfaceId("B4CD448A-9C86-4466-9201-2E62105B87AE")]
[OleAutomation(False)]
Interface ISharingConfigurationManager Extends stdole.IUnknown
    [PreserveSig] Function CreateShare(ByVal dsid As DEF_SHARE_ID, ByVal role As SHARE_ROLE) As Long
    [PreserveSig] Function DeleteShare(ByVal dsid As DEF_SHARE_ID) As Long
    [PreserveSig] Function ShareExists(ByVal dsid As DEF_SHARE_ID) As Long
    [PreserveSig] Function GetSharePermissions(ByVal dsid As DEF_SHARE_ID, ByRef pRole As SHARE_ROLE) As Long
    [PreserveSig] Function SharePrinters() As Long
    [PreserveSig] Function StopSharingPrinters() As Long
    [PreserveSig] Function ArePrintersShared() As Long
End Interface

[InterfaceId("6AF6E03F-D664-4EF4-9626-F7E0ED36755E")]
[OleAutomation(False)]
Interface ISearchBoxInfo Extends stdole.IUnknown
    Sub GetCondition(ByRef riid As UUID, ByRef ppv As Any)
    Sub GetText(ByRef ppsz As LongPtr)
End Interface

[InterfaceId("D2BC4C84-3F72-4A52-A604-7BCBF3982CBB")]
[OleAutomation(False)]
Interface INewWindowManager Extends stdole.IUnknown
    Sub EvaluateNewWindow(ByVal pszUrl As String, ByVal pszName As String, ByVal pszUrlContext As String, ByVal pszFeatures As String, ByVal fReplace As Long, ByVal dwFlags As NWMF, ByVal dwUserActionTime As Long)
End Interface
    

[InterfaceId("2047E320-F2A9-11CE-AE65-08002B2E1262")]
[OleAutomation(False)]
Interface IShellFolderViewCB Extends stdole.IUnknown
    Sub MessageSFVCB(ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr)
End Interface

[InterfaceId("D82BE2B1-5764-11D0-A96E-00C04FD705A2")]
[OleAutomation(False)]
Interface IShellChangeNotify Extends stdole.IUnknown
    Sub OnChange(ByVal lEvent As SHCN_Events, ByVal pidl1 As LongPtr, ByVal pidl2 As LongPtr)
End Interface

[InterfaceId("8d7b2ba7-db05-46a8-823c-d2b6de08ee91")]
[OleAutomation(False)]
Interface IBannerNotificationHandler Extends stdole.IUnknown
    Sub OnBannerEvent(notification As BANNER_NOTIFICATION)
End Interface

[InterfaceId("6dfc60fb-f2e9-459b-beb5-288f1a7c7d54")]
[OleAutomation(False)]
Interface ISortColumnArray Extends stdole.IUnknown
    Sub GetCount(columnCount As Long)
    Sub GetAt(ByVal index As Long, sortcolumn As SORTCOLUMN)
    Sub GetSortType(type As SORT_ORDER_TYPE)
End Interface

[InterfaceId("75BD59AA-F23B-4963-ABA4-0B355752A91B")]
[OleAutomation(False)]
Interface IPropertyKeyStore Extends stdole.IUnknown
    Sub GetKeyCount(keyCount As Long)
    Sub GetKeyAt(ByVal index As Long, pkey As PROPERTYKEY)
    Sub AppendKey(pkey As PROPERTYKEY)
    Sub DeleteKey(ByVal index As Long)
    Sub IsKeyInStore(key As PROPERTYKEY)
    Sub RemoveKey(key As PROPERTYKEY)
End Interface


[InterfaceId("2DD81FE3-A83C-4DA9-A330-47249D345BA1")]
[OleAutomation(False)]
Interface IEnumResources Extends stdole.IUnknown
    [PreserveSig] Function Next(ByVal celt As Long, ByRef psir As SHELL_ITEM_RESOURCE, ByRef pceltFetched As Long) As Long
    [PreserveSig] Function Skip(ByVal celt As Long) As Long
    [PreserveSig] Function Reset() As Long
    [PreserveSig] Function Clone(ByRef ppenumr As IEnumResources) As Long
End Interface

[InterfaceId("FF5693BE-2CE0-4D48-B5C5-40817D1ACDB9")]
[OleAutomation(False)]
Interface IShellItemResources Extends stdole.IUnknown
    [PreserveSig] Function GetAttributes(ByRef pdwAttributes As Long) As Long
    [PreserveSig] Function GetSize(ByRef pullSize As LongLong) As Long
    [PreserveSig] Function GetTimes(ByRef pftCreation As FILETIME, ByRef pftWrite As FILETIME, ByRef pftAccess As FILETIME) As Long
    [PreserveSig] Function SetTimes(ByRef pftCreation As FILETIME, ByRef pftWrite As FILETIME, ByRef pftAccess As FILETIME) As Long
    [PreserveSig] Function GetResourceDescription(ByRef pcsir As SHELL_ITEM_RESOURCE, ByRef ppszDescription As Long) As Long
    [PreserveSig] Function EnumResources(ByRef ppenumr As IEnumResources) As Long
    [PreserveSig] Function SupportsResource(ByRef pcsir As SHELL_ITEM_RESOURCE) As Long
    [PreserveSig] Function OpenResource(ByRef pcsir As SHELL_ITEM_RESOURCE, ByRef riid As UUID, ByRef ppv As Any) As Long
    [PreserveSig] Function CreateResource(ByRef pcsir As SHELL_ITEM_RESOURCE, ByRef riid As UUID, ByRef ppv As Any) As Long
    [PreserveSig] Function MarkForDelete() As Long
End Interface

[InterfaceId("01E18D10-4D8B-11D2-855D-006008059367")]
[OleAutomation(False)]
Interface IFileSystemBindData Extends stdole.IUnknown
    Sub SetFindData(ByRef pfd As WIN32_FIND_DATAW)
    Sub GetFindData(ByRef pfd As WIN32_FIND_DATAW)
End Interface

[InterfaceId("3ACF075F-71DB-4AFA-81F0-3FC4FDF2A5B8")]
[OleAutomation(False)]
Interface IFileSystemBindData2 Extends IFileSystemBindData
    Sub SetFileID(ByVal liFileID As LongLong)
    Sub GetFileID(ByRef pliFileID As LongLong)
    Sub SetJunctionCLSID(ByRef clsid As UUID)
    Sub GetJunctionCLSID(ByRef pclsid As UUID)
End Interface

[InterfaceId("D594D0D8-8DA7-457B-B3B4-CE5DBAAC0B88")]
[Description("Implement in class module, must do vtable swap if you want to be able to cancel")]
[OleAutomation(False)]
Interface ITransferAdviseSink Extends stdole.IUnknown
    Sub UpdateProgress(ByVal ullSizeCurrent As LongLong, ByVal ullSizeTotal As LongLong, ByVal nFilesCurrent As Long, ByVal nFilesTotal As Long, ByVal nFoldersCurrent As Long, ByVal nFoldersTotal As Long)
    Sub UpdateTransferState(ByVal ts As TRANSFER_ADVISE_STATE)
    Sub ConfirmOverwrite(ByVal psiSource As IShellItem, ByVal psiDestParent As IShellItem, ByVal pszName As Long)
    Sub ConfirmEncryptionLoss(ByVal psiSource As IShellItem)
    Sub FileFailure(ByVal psi As IShellItem, ByVal pszItem As LongPtr, ByVal hrError As Long, ByRef pszRename As LongPtr, ByVal cchRename As Long)
    Sub SubStreamFailure(ByVal psi As IShellItem, ByVal pszStreamName As LongPtr, ByVal hrError As Long)
    Sub PropertyFailure(ByVal psi As IShellItem, ByRef pkey As PROPERTYKEY, ByVal hrError As Long)
End Interface

[InterfaceId("00ADB003-BDE9-45C6-8E29-D09F9353E108")]
[OleAutomation(False)]
Interface ITransferSource Extends stdole.IUnknown
    Sub Advise(ByVal pSink As ITransferAdviseSink, ByRef pdwCookie As Long)
    Sub Unadvise(ByVal dwCookie As Long)
    Sub SetProperties(ByVal pproparray As IPropertyChangeArray)
    Sub OpenItem(ByVal psi As IShellItem, ByVal flags As TRANSFER_SOURCE_FLAGS, ByRef riid As UUID, ByRef ppv As Any)
    Sub MoveItem(ByVal psi As IShellItem, ByVal psiParentDst As IShellItem, ByVal pszNameDst As LongPtr, ByVal flags As TRANSFER_SOURCE_FLAGS, ByRef ppsiNew As IShellItem)
    Sub RecycleItem(ByVal psiSource As IShellItem, ByVal psiParentDest As IShellItem, ByVal flags As TRANSFER_SOURCE_FLAGS, ByRef ppsiNewDest As IShellItem)
    Sub RemoveItem(ByVal psiSource As IShellItem, ByVal flags As TRANSFER_SOURCE_FLAGS)
    Sub RenameItem(ByVal psiSource As IShellItem, ByVal pszNewName As LongPtr, ByVal flags As TRANSFER_SOURCE_FLAGS, ByRef ppsiNewDest As IShellItem)
    Sub LinkItem(ByVal psiSource As IShellItem, ByVal psiParentDest As IShellItem, ByVal pszNewName As LongPtr, ByVal flags As TRANSFER_SOURCE_FLAGS, ByRef ppsiNewDest As IShellItem)
    Sub ApplyPropertiesToItem(ByVal psiSource As IShellItem, ByRef ppsiNew As IShellItem)
    Sub GetDefaultDestinationName(ByVal psiSource As IShellItem, ByVal psiParentDest As IShellItem, ByRef ppszDestinationName As LongPtr)
    Sub EnterFolder(ByVal psiChildFolderDest As IShellItem)
    Sub LeaveFolder(ByVal psiChildFolderDest As IShellItem)
End Interface

[InterfaceId("48ADDD32-3CA5-4124-ABE3-B5A72531B207")]
[OleAutomation(False)]
Interface ITransferDestination Extends stdole.IUnknown
    Sub Advise(ByVal pSink As ITransferAdviseSink, ByRef pdwCookie As Long)
    Sub Unadvise(ByVal dwCookie As Long)
    '[ PreserveSig ]
    Sub CreateItem(ByVal pszName As LongPtr, ByVal dwAttributes As Long, ByVal ullSize As LongLong, ByVal flags As TRANSFER_SOURCE_FLAGS, ByRef riidItem As UUID, ByRef ppvItem As Any, ByRef riidResources As UUID, ByRef ppvResources As Any)' As Long
End Interface

[InterfaceId("A73CE67A-8AB1-44F1-8D43-D2FCBF6B1CD0")]
[OleAutomation(False)]
Interface IRelatedItem Extends stdole.IUnknown
    Sub GetItemIDList(ByRef ppidl As LongPtr)
    Sub GetItem(ByRef ppsi As IShellItem)
End Interface
    
[InterfaceId("7D903FCA-D6F9-4810-8332-946C0177E247")]
[OleAutomation(False)]
Interface IIdentityName Extends IRelatedItem
End Interface

[InterfaceId("3C5A1C94-C951-4CB7-BB6D-3B93F30CCE93")]
[OleAutomation(False)]
Interface IDelegateItem Extends IRelatedItem
End Interface

[InterfaceId("240A7174-D653-4A1D-A6D3-D4943CFBFE3D")]
[OleAutomation(False)]
Interface ICurrentItem Extends IRelatedItem
End Interface

[InterfaceId("77F295D5-2D6F-4E19-B8AE-322F3E721AB5")]
[OleAutomation(False)]
Interface ITransferMediumItem Extends IRelatedItem
End Interface

[InterfaceId("05EDDA5C-98A3-4717-8ADB-C5E7DA991EB1")]
[OleAutomation(False)]
Interface IUseToBrowseItem Extends IRelatedItem
End Interface

[InterfaceId("C6FD5997-9F6B-4888-8703-94E80E8CDE3F")]
[OleAutomation(False)]
Interface IDisplayItem Extends IRelatedItem
End Interface

[InterfaceId("9D264146-A94F-4195-9F9F-3BB12CE0C955")]
[OleAutomation(False)]
Interface IViewStateIdentityItem Extends IRelatedItem
End Interface

[InterfaceId("36149969-0A8F-49C8-8B00-4AECB20222FB")]
[OleAutomation(False)]
Interface IPreviewItem Extends IRelatedItem
End Interface

[InterfaceId("3D25F6D6-4B2A-433C-9184-7C33AD35D001")]
[OleAutomation(False)]
Interface IDataObjectProvider Extends stdole.IUnknown
	Sub GetDataObject(ByRef dataObject As IDataObject)
	Sub SetDataObject(ByVal dataObject As IDataObject)
End Interface

[InterfaceId("3A3DCD6C-3EAB-43DC-BCDE-45671CE800C8")]
[OleAutomation(False)]
Interface IDataTransferManagerInterop Extends stdole.IUnknown
	Sub GetForWindow(ByVal appWindow As LongPtr, ByRef riid As UUID, ByRef dataTransferManager As Any)
	Sub ShowShareUIForWindow(ByVal appWindow As LongPtr)
End Interface

[InterfaceId("1BB12A62-2AD8-432B-8CCF-0C2C52AFCD5B")]
[OleAutomation(False)]
Interface IPackageExecutionStateChangeNotification Extends stdole.IUnknown
	Sub OnStateChanged(ByVal pszPackageFullName As LongPtr, ByVal pesNewState As PACKAGE_EXECUTION_STATE)
End Interface

[InterfaceId("F27C3930-8029-4AD1-94E3-3DBA417810C1")]
[OleAutomation(False)]
Interface IPackageDebugSettings Extends stdole.IUnknown
	Sub EnableDebugging(ByVal packageFullName As LongPtr, ByVal debuggerCommandLine As LongPtr, ByVal environment As LongPtr)
	Sub DisableDebugging(ByVal packageFullName As LongPtr)
	Sub Suspend(ByVal packageFullName As LongPtr)
	Sub Resume(ByVal packageFullName As LongPtr)
	Sub TerminateAllProcesses(ByVal packageFullName As LongPtr)
	Sub SetTargetSessionId(ByVal sessionID As Long)
	Sub EnumerateBackgroundTasks(ByVal packageFullName As LongPtr, ByRef taskCount As Long, ByRef taskIds As UUID, ByRef taskNames As LongPtr)
	Sub ActivateBackgroundTask(ByRef taskId As UUID)
	Sub StartServicing(ByVal packageFullName As LongPtr)
	Sub StopServicing(ByVal packageFullName As LongPtr)
	Sub StartSessionRedirection(ByVal packageFullName As LongPtr, ByVal sessionID As Long)
	Sub StopSessionRedirection(ByVal packageFullName As LongPtr)
	Sub GetPackageExecutionState(ByVal packageFullName As LongPtr, ByRef packageExecutionState As PACKAGE_EXECUTION_STATE)
	Sub RegisterForPackageStateChanges(ByVal packageFullName As LongPtr, ByVal pPackageExecutionStateChangeNotification As IPackageExecutionStateChangeNotification, ByRef pdwCookie As Long)
	Sub UnregisterForPackageStateChanges(ByVal dwCookie As Long)
End Interface

[InterfaceId("6E3194BB-AB82-4D22-93F5-FABDA40E7B16")]
[OleAutomation(False)]
Interface IPackageDebugSettings2 Extends IPackageDebugSettings
	Sub EnumerateApps(ByVal packageFullName As LongPtr, ByRef appCount As Long, ByRef appUserModelIds As LongPtr, ByRef appDisplayNames As LongPtr)
End Interface

[InterfaceId("52B83A42-2543-416A-81D9-C0DE7969C8B3")]
[OleAutomation(False)]
Interface ISuspensionDependencyManager Extends stdole.IUnknown
	Sub RegisterAsChild(ByVal processHandle As LongPtr)
	Sub GroupChildWithParent(ByVal childProcessHandle As LongPtr)
	Sub UngroupChildFromParent(ByVal childProcessHandle As LongPtr)
End Interface

[InterfaceId("18B21AA9-E184-4FF0-9F5E-F882D03771B3")]
[OleAutomation(False)]
Interface IExecuteCommandApplicationHostEnvironment Extends stdole.IUnknown
	Sub GetValue(ByRef pahe As AHE_TYPE)
End Interface

[InterfaceId("2A3DEE9A-E31D-46D6-8508-BCC597DB3557")]
[OleAutomation(False)]
Interface IApplicationDesignModeSettings Extends stdole.IUnknown
	Sub SetNativeDisplaySize(ByVal nativeDisplaySizePixels As LongLong) ' As SIZE)
	Sub SetScaleFactor(ByVal scaleFactor As DEVICE_SCALE_FACTOR)
	Sub SetApplicationViewState(ByVal viewState As APPLICATION_VIEW_STATE)
	Sub ComputeApplicationSize(ByRef applicationSizePixels As SIZE)
	Sub IsApplicationViewStateSupported(ByVal viewState As APPLICATION_VIEW_STATE, ByVal nativeDisplaySizePixels As LongLong, ByVal scaleFactor As DEVICE_SCALE_FACTOR, ByVal supported As Long)
	Sub TriggerEdgeGesture(ByVal edgeGestureKind As EDGE_GESTURE_KIND)
End Interface
	
[InterfaceId("490514E1-675A-4D6E-A58D-E54901B4CA2F")]
[OleAutomation(False)]
Interface IApplicationDesignModeSettings2 Extends IApplicationDesignModeSettings
	Sub SetNativeDisplayOrientation(ByVal nativeDisplayOrientation As NATIVE_DISPLAY_ORIENTATION)
	Sub SetApplicationViewOrientation(ByVal viewOrientation As APPLICATION_VIEW_ORIENTATION)
	Sub SetAdjacentDisplayEdges(ByVal adjacentDisplayEdges As ADJACENT_DISPLAY_EDGES)
	Sub SetIsOnLockScreen(ByVal isOnLockScreen As Long)
	Sub SetApplicationViewMinWidth(ByVal viewMinWidth As APPLICATION_VIEW_MIN_WIDTH)
	Sub GetApplicationSizeBounds(ByRef minApplicationSizePixels As SIZE, ByRef maxApplicationSizePixels As SIZE)
	Sub GetApplicationViewOrientation(ByVal applicationSizePixels As LongLong, ByRef viewOrientation As APPLICATION_VIEW_ORIENTATION)
End Interface

[InterfaceId("266FBC7E-490D-46ED-A96B-2274DB252003")]
[OleAutomation(False)]
Interface ILaunchTargetMonitor Extends stdole.IUnknown
	Sub GetMonitor(ByRef monitor As LongPtr)
End Interface

[InterfaceId("E5AA01F7-1FB8-4830-8720-4E6734CBD5F3")]
[OleAutomation(False)]
Interface ILaunchSourceViewSizePreference Extends stdole.IUnknown
	Sub GetSourceViewToPosition(ByRef hwnd As LongPtr)
	Sub GetSourceViewSizePreference(ByRef sourceSizeAfterLaunch As APPLICATION_VIEW_SIZE_PREFERENCE)
End Interface

[InterfaceId("2F0666C6-12F7-4360-B511-A394A0553725")]
[OleAutomation(False)]
Interface ILaunchTargetViewSizePreference Extends stdole.IUnknown
	Sub GetTargetViewSizePreference(ByRef targetSizeOnLaunch As APPLICATION_VIEW_SIZE_PREFERENCE)
End Interface

[InterfaceId("989191AC-28FF-4CF0-9584-E0D078BC2396")]
[OleAutomation(False)]
Interface ILaunchSourceAppUserModelId Extends stdole.IUnknown
	Sub GetAppUserModelId(ByRef launchingApp As LongPtr)
End Interface

[InterfaceId("997706EF-F880-453B-8118-39E1A2D2655A")]
[OleAutomation(False)]
Interface IHandlerInfo Extends stdole.IUnknown
	Sub GetApplicationDisplayName(ByRef Value As LongPtr)
	Sub GetApplicationPublisher(ByRef Value As LongPtr)
	Sub GetApplicationIconReference(ByRef Value As LongPtr)
End Interface
[InterfaceId("31cca04c-04d3-4ea9-90de-97b15e87a532")]
[OleAutomation(False)]
Interface IHandlerInfo2 Extends IHandlerInfo
    Sub GetApplicationId(value As LongPtr)
End Interface

[InterfaceId("35094A87-8BB1-4237-96C6-C417EEBDB078")]
[OleAutomation(False)]
Interface IHandlerActivationHost Extends stdole.IUnknown
	Sub BeforeCoCreateInstance(ByRef clsidHandler As UUID, ByVal itemsBeingActivated As IShellItemArray, ByVal handlerInfo As IHandlerInfo)
	Sub BeforeCreateProcess(ByVal applicationPath As LongPtr, ByVal commandLine As LongPtr, ByVal handlerInfo As IHandlerInfo)
End Interface

[InterfaceId("EB0FE173-1A3A-11D0-89B3-00A0C90A90AC")]
[OleAutomation(False)]
Interface IDeskBar Extends IOleWindow
    Sub SetClient(ByVal punkClient As IUnknown)
    Sub GetClient(ppunkClient As IUnknown)
    Sub OnPosRectChangeDB(prc As RECT)
End Interface
[InterfaceId("EB0FE175-1A3A-11D0-89B3-00A0C90A90AC")]
[OleAutomation(False)]
Interface IDeskBarClient Extends IOleWindow
    Sub SetDeskBarSite(ByVal punkSite As IUnknown)
    Sub SetModeDBC(ByVal dwMode As Long)
    Sub UIActivateDBC(ByVal dwState As Long)
    Sub GetSize(ByVal dwWhich As Long, prc As RECT)
End Interface

[InterfaceId("7FE80CC8-C247-11d0-B93A-00A0C90312E1")]
Interface IShellFolderBand Extends stdole.IUnknown
    Sub InitializeSFB(ByVal psf As IShellFolder, ByVal pidl As LongPtr)
    Sub SetBandInfo(pbi As BANDINFOSFB)
    Sub GetBandInfo(pbi As BANDINFOSFB)
End Interface

[InterfaceId("99EACBA7-E073-43B6-A896-55AFE48A0833")]
[OleAutomation(False)]
Interface IContactManagerInterop Extends stdole.IUnknown
	Sub ShowContactCardForWindow(ByVal appWindow As LongPtr, ByVal contact As IUnknown, ByRef Selection As RECT, ByVal preferredPlacement As FLYOUT_PLACEMENT)
End Interface

[InterfaceId("2E941141-7F97-4756-BA1D-9DECDE894A3D")]
[OleAutomation(False)]
Interface IApplicationActivationManager Extends stdole.IUnknown
	Sub ActivateApplication(ByVal appUserModelId As LongPtr, ByVal Arguments As LongPtr, ByVal options As ACTIVATEOPTIONS, ByRef processId As Long)
	Sub ActivateForFile(ByVal appUserModelId As LongPtr, ByVal itemArray As IShellItemArray, ByVal verb As LongPtr, ByRef processId As Long)
	Sub ActivateForProtocol(ByVal appUserModelId As LongPtr, ByVal itemArray As IShellItemArray, ByRef processId As Long)
End Interface

[InterfaceId("6584CE6B-7D82-49C2-89C9-C6BC02BA8C38")]
[OleAutomation(False)]
Interface IAppVisibilityEvents Extends stdole.IUnknown
	Sub AppVisibilityOnMonitorChanged(ByVal hMonitor As LongPtr, ByVal previousMode As MONITOR_APP_VISIBILITY, ByVal currentMode As MONITOR_APP_VISIBILITY)
	Sub LauncherVisibilityChange(ByVal currentVisibleState As Long)
End Interface

[InterfaceId("2246EA2D-CAEA-4444-A3C4-6DE827E44313")]
[OleAutomation(False)]
Interface IAppVisibility Extends stdole.IUnknown
	Sub GetAppVisibilityOnMonitor(ByVal hMonitor As LongPtr, ByRef pMode As MONITOR_APP_VISIBILITY)
	Sub IsLauncherVisible(ByRef pfVisible As BOOL)
	Sub Advise(ByVal pCallback As IAppVisibilityEvents, ByRef pdwCookie As Long)
	Sub Unadvise(ByVal dwCookie As Long)
End Interface

[InterfaceId("CD193BC0-B4BC-11d2-9833-00C04FC31D2E")]
[OleAutomation(False)]
Interface IAssemblyName Extends IUnknown
	Sub SetProperty(ByVal PropertyId As ASM_NAME, pvProperty As Any, ByVal cbProperty As Long)
    Sub GetProperty(ByVal PropertyId As ASM_NAME, pvProperty As Any, pcbProperty As Long)
	Sub Finalize()
	Sub GetDisplayName(ByVal szDisplayName As LongPtr, pccDisplayName As Long, ByVal dwDisplayFlags As ASM_DISPLAY_FLAGS)
	Sub Reserved(refIID As UUID, ByVal pUnkReserved1 As IUnknown, ByVal pUnkReserved2 As IUnknown, ByVal szReserved As LongPtr, ByVal llReserved As LongLong, pvReserved As Any, ByVal cbReserved As Long, ppReserved As Any)
	Sub GetName(ByRef lpcwBuffer As Long, ByVal pwzName As LongPtr)
	Sub GetVersion(pdwVersionHi As Long, pdwVersionLow As Long)
	Sub IsEqual(ByVal pName As IAssemblyName, ByVal dwFlags As ASM_CMP_FLAGS)
	Sub Clone(ppName As IAssemblyName)
End Interface

[InterfaceId("9e3aaeb4-d1cd-11d2-bab9-00c04f8eceae")]
[OleAutomation(False)]
Interface IAssemblyCacheItem Extends IUnknown
	Sub CreateStream(ByVal dwFlags As Long, ByVal pszStreamName As LongPtr, ByVal dwFormat As SxSFusionFmt, ByVal dwFormatFlags As Long, ppIStream As IStream, puliMaxSize As ULARGE_INTEGER)
	Sub Commit(ByVal dwFlags As SxSCacheCommit, pulDisposition As SxSCacheDisposition)
	Sub AbortItem()
End Interface

[InterfaceId("e707dcde-d1cd-11d2-bab9-00c04f8eceae")]
[OleAutomation(False)]
Interface IAssemblyCache Extends IUnknown
	Sub UninstallAssembly(ByVal dwFlags As Long, ByVal pszAssemblyName As LongPtr, pRefData As FUSION_INSTALL_REFERENCE, pulDisposition As SxSUninstallDisposition)
	Sub QueryAssemblyInfo(ByVal dwFlags As SxSQueryAsmFlags, ByVal pszAssemblyName As LongPtr, pAsmInfo As ASSEMBLY_INFO)
	Sub Reserved(ByVal pUnk As IUnknown)
	Sub InstallAssembly(ByVal dwFlags As SxSAsmInstallFlags, ByVal pszManifestFilePath As LongPtr, pRefData As FUSION_INSTALL_REFERENCE)
End Interface



[InterfaceId("B92B56A9-8B55-4E14-9A89-0199BBB6F93B")]
[OleAutomation(False)]
Interface IDesktopWallpaper Extends stdole.IUnknown
	Sub SetWallpaper(ByVal monitorID As LongPtr, ByVal wallpaper As LongPtr)
	Sub GetWallpaper(ByVal monitorID As LongPtr, ByRef wallpaper As LongPtr)
	Sub GetMonitorDevicePathAt(ByVal monitorIndex As Long, ByRef monitorID As LongPtr)
	Sub GetMonitorDevicePathCount(ByRef Count As Long)
	Sub GetMonitorRECT(ByVal monitorID As LongPtr, ByRef displayRect As RECT)
	Sub SetBackgroundColor(ByVal color As Long)
	Sub GetBackgroundColor(ByRef color As Long)
	Sub SetPosition(ByVal position As DESKTOP_WALLPAPER_POSITION)
	Sub GetPosition(ByRef position As DESKTOP_WALLPAPER_POSITION)
	Sub SetSlideshow(ByVal Items As IShellItemArray)
	Sub GetSlideshow(ByRef Items As IShellItemArray)
	Sub SetSlideshowOptions(ByVal options As DESKTOP_SLIDESHOW_OPTIONS, ByVal slideshowTick As Long)
	Sub GetSlideshowOptions(ByRef options As DESKTOP_SLIDESHOW_OPTIONS, ByRef slideshowTick As Long)
	Sub AdvanceSlideshow(ByVal monitorID As LongPtr, ByVal direction As DESKTOP_SLIDESHOW_DIRECTION)
	Sub GetStatus(ByRef State As DESKTOP_SLIDESHOW_STATE)
	Sub Enable(ByVal Enable As Long)
End Interface
	
[InterfaceId("C9D81948-443A-40C7-945C-5E171B8C66B4")]
[OleAutomation(False)]
Interface IAddressBarParser Extends stdole.IUnknown
    Function ParseFromOutsideSource(ByVal pcszUrlIn As String, ByVal dwParseFlags As Long) As Long
    Sub GetUrl(ByVal pszUrlOut As String, ByVal cchUrlOutSize As Long)
    Sub SetUrl(ByVal pcszUrlIn As String, ByVal dwGenType As Long)
    Sub GetDisplayName(ByVal pszUrlOut As String, ByVal cchUrlOutSize As Long)
    Function GetPidl() As LongPtr
    Sub SetPidl(ByVal pidl As Long)
    Sub GetArgs(ByVal pszArgsOut As String, ByVal cchArgsOutSize As Long)
    Sub AddPath(ByVal pidl As LongPtr)
End Interface

[InterfaceId("6D67E846-5B9C-4db8-9CBC-DDE12F4254F1")]
[OleAutomation(False)]
Interface ITrayDeskBand Extends IUnknown
    Sub ShowDeskBand(clsid As UUID)
    Sub HideDeskBand(clsid As UUID)
    [PreserveSig] Function IsDeskBandShown(clsid As UUID) As Long
    Sub DeskBandRegistrationChanged()
End Interface
[InterfaceId("B9075C7C-D48E-403f-AB99-D6C77A1084AC")]
[OleAutomation(False)]
Interface IBandHost Extends IUnknown
    Sub CreateBand(rclsidBand As UUID, ByVal fAvailable As BOOL, ByVal fVisible As BOOL, riid As UUID, ppv As Any)
    Sub SetBandAvailability(rclsidBand As UUID, ByVal fAvailable As BOOL)
    Sub DestroyBand(rclsidBand As UUID)
End Interface
[InterfaceId("4CF504B0-DE96-11D0-8B3F-00A0C911E8E5")]
[OleAutomation(False)]
Interface IBandSite Extends IUnknown
    Sub AddBand(ByVal punk As IUnknown)
    Sub EnumBands(ByVal uBand As Long, pdwBandID As Long)
    Sub QueryBand(ByVal dwBandID As Long, ppstb As IDeskBand, pdwState As BandSiteState, pszName As LongPtr, ByVal cchName As Long)
    Sub SetBandState(ByVal dwBandID As Long, ByVal dwMask As BandSiteMask, ByVal dwState As BandSiteState)
    Sub RemoveBand(ByVal dwBandID As Long)
    Sub GetBandObject(ByVal dwBandID As Long, riid As UUID, ppv As Any)
    Sub SetBandSiteInfo(pbsinfo As BANDSITEINFO)
    Sub GetBandSiteInfo(pbsinfo As BANDSITEINFO)
End Interface
[InterfaceId("012dd920-7b26-11d0-8ca9-00a0c92dbfe8")]
[OleAutomation(False)]
Interface IDockingWindow Extends IOleWindow
    Sub ShowDW(ByVal fShow As BOOL)
    Sub CloseDW(ByVal dwReserved As Long)
    Sub ResizeBorderDW(prcBorder As RECT, ByVal punkToolbarSite As IUnknown, ByVal fReserved As BOOL)
End Interface
[InterfaceId("EB0FE172-1A3A-11D0-89B3-00A0C90A90AC")]
[OleAutomation(False)]
Interface IDeskBand Extends IDockingWindow
    Sub GetBandInfo(ByVal dwBandID As Long, ByVal dwViewMode As BandViewMode, pdbi As DESKBANDINFO)
End Interface
[InterfaceId("79D16DE4-ABEE-4021-8D9D-9169B261D657")]
[OleAutomation(False)]
Interface IDeskBand2 Extends IDeskBand
    Sub CanRenderComposited(pfCanRenderComposited As BOOL)
    Sub SetCompositionState(ByVal fCompositionEnabled As BOOL)
    Sub GetCompositionState(pfCompositionEnabled As BOOL)
End Interface
[InterfaceId("77E425FC-CBF9-4307-BA6A-BB5727745661")]
[OleAutomation(False)]
Interface IDeskBandInfo Extends IUnknown
    Sub GetDefaultBandWidth(ByVal dwBandID As Long, ByVal dwViewMode As BandViewMode, pnWidth As Long)
End Interface

[InterfaceId("47d2657a-7b27-11d0-8ca9-00a0c92dbfe8")]
[OleAutomation(False)]
Interface IDockingWindowFrame Extends IOleWindow
	Sub AddToolbar(ByVal punkSrc As IUnknown, ByVal pwszItem As LongPtr, ByVal dwAddFlags As DockingFrameAddToolbarFlags)
    Sub RemoveToolbar(ByVal punkSrc As IUnknown, ByVal dwRemoveFlags As DockingFrameRemoveToolbarFlags)
    Sub FindToolbar(ByVal pwszItem As LongPtr, riid As UUID, ppv As Any)
End Interface

[InterfaceId("2a342fc2-7b26-11d0-8ca9-00a0c92dbfe8")]
[OleAutomation(False)]
Interface IDockingWindowSite Extends IOleWindow
	Sub GetBorderDW(ByVal punkObj As IUnknown, prcBorder As RECT)
    Sub RequestBorderSpaceDW(ByVal punkObj As IUnknown, pbw As RECT)
    Sub SetBorderSpace(ByVal punkObj As IUnknown, pbw As RECT)
End Interface


[InterfaceId("568804CD-CBD7-11d0-9816-00C04FD91972")]
[OleAutomation(False)]
Interface IMenuBand Extends IUnknown
    Sub IsMenuMessage(pmsg As MSG)
    Sub TranslateMenuMessage(pmsg As MSG, plRet As LongPtr)
End Interface


[InterfaceId("A9521922-0812-4d44-9EC3-7FD38C726F3D")]
[OleAutomation(False)]
Interface IRegTreeItem Extends IUnknown
    Sub GetCheckState(pbChecked As BOOL)
    Sub SetCheckState(ByVal bCheck As BOOL)
End Interface


[InterfaceId("5CD52983-9449-11D2-963A-00C04F79ADF0")]
[OleAutomation(False)]
Interface IResolveShellLink Extends stdole.IUnknown
    Sub ResolveShellLink(ByVal punkLink As IUnknown, ByVal hwnd As LongPtr, ByVal fFlags As SLR_FLAGS)
End Interface

[InterfaceId("41DED17D-D6B3-4261-997D-88C60E4B1D58")]
[OleAutomation(False)]
Interface IDefaultExtractIconInit Extends stdole.IUnknown
    Sub SetFlags(ByVal uFlags As GILFlags)
    Sub SetKey(ByVal hkey As LongPtr)
    Sub SetNormalIcon(ByVal pszFile As LongPtr, ByVal iIcon As Long)
    Sub SetOpenIcon(ByVal pszFile As LongPtr, ByVal iIcon As Long)
    Sub SetShortcutIcon(ByVal pszFile As LongPtr, ByVal iIcon As Long)
    Sub SetDefaultIcon(ByVal pszFile As LongPtr, ByVal iIcon As Long)
End Interface
    
[InterfaceId("ADD8BA80-002B-11D0-8F0F-00C04FD7D062")]
[OleAutomation(False)]
Interface IDelegateFolder Extends stdole.IUnknown
    [PreserveSig]
    Function SetItemAlloc(ByVal pmalloc As IMalloc) As Long
End Interface
    
[InterfaceId("4CD19ADA-25A5-4A32-B3B7-347BEE5BE36B")]
[OleAutomation(False)]
Interface IStartMenuPinnedList Extends stdole.IUnknown
    Sub RemoveFromList(ByVal pitem As IShellItem)
End Interface
[InterfaceId("ec35e37a-6579-4f3c-93cd-6e62c4ef7636")]
[OleAutomation(False)]
Interface IStartMenuPin Extends stdole.IUnknown
	Sub EnumObjects(ppEnumIDL As IEnumIDList)
    ' //  Pin:        pidlFrom = NULL, pidlTo = pidl
    ' //  Unpin:      pidlFrom = pidl, pidlTo = NULL
    ' //  Update:     pidlFrom = old,  pidlTo = new
    ' //  Move:       pidlFrom = pidl, pidlTo = SMPINPOS(iPos)
    '#define SMPIN_POS(i) (LPCITEMIDLIST)MAKEINTRESOURCE((i)+1)")
	Sub Modify(ByVal pidlFrom As LongPtr, ByVal pidlTo As LongPtr)
	Sub GetChangeCount(pulOut As Long)
	Sub IsPinnable(ByVal pdto As IDataObject, ByVal dwFlags As SMPINNABLE, ppidl As LongPtr)
    ' //	
    ' //  Find the pidl on the pin list and resolve the shortcut that
    ' //  tracks it.
    ' //
    ' //  Returns S_OK if the pidl changed and was resolved.
    ' //  Returns S_FALSE if the pidl did not change.
    ' //  Returns an error if the Resolve failed.
    ' //
	Sub Resolve(ByVal hwnd As LongPtr, ByVal dwFlags As Long, ByVal pidl As LongPtr, ppidlResolved As LongPtr)
End Interface

    
[InterfaceId("ADE87BF7-7B56-4275-8FAB-B9B0E591844B")]
[OleAutomation(False)]
Interface ISystemInformation Extends stdole.IDispatch
    Function OemHardwareSupportLink() As String
    Function RebootRequired() As Long
End Interface

[InterfaceId("D11AD862-66DE-4DF4-BF6C-1F5621996AF1")]
[OleAutomation(False)]
Interface IOpenControlPanel Extends stdole.IUnknown
    Sub Open(ByVal pszName As LongPtr, ByVal pszPage As LongPtr, ByVal pUnkSite As stdole.IUnknown)
    Sub GetPath(ByVal pszName As LongPtr, pszPath As LongPtr, ByVal cchPath As Long)
    Sub GetCurrentView(pView As CPVIEW)
End Interface

[InterfaceId("A08CE4D0-FA25-44AB-B57C-C7B1C323E0B9")]
[OleAutomation(False)]
Interface IExplorerCommand Extends stdole.IUnknown
    Sub GetTitle(ByVal psiItemArray As IShellItemArray, ByRef ppszName As LongPtr)
    Sub GetIcon(ByVal psiItemArray As IShellItemArray, ByRef ppszIcon As LongPtr)
    Sub GetToolTip(ByVal psiItemArray As IShellItemArray, ByRef ppszInfotip As LongPtr)
    Sub GetCanonicalName(ByRef pguidCommandName As UUID)
    Sub GetState(ByVal psiItemArray As IShellItemArray, ByVal fOkToBeSlow As BOOL, ByRef pCmdState As EXPCMDSTATE)
    Sub Invoke(ByVal psiItemArray As IShellItemArray, ByVal pbc As IBindCtx)
    Sub GetFlags(ByRef pFlags As EXPCMDFLAGS)
    Sub EnumSubCommands(ByRef ppenum As IEnumExplorerCommand)
End Interface

[InterfaceId("BDDACB60-7657-47AE-8445-D23E1ACF82AE")]
[OleAutomation(False)]
Interface IExplorerCommandState Extends stdole.IUnknown
    Sub GetState(ByVal psiItemArray As IShellItemArray, ByVal fOkToBeSlow As BOOL, ByRef pCmdState As EXPCMDSTATE)
End Interface

[InterfaceId("85075ACF-231F-40EA-9610-D26B7B58F638")]
[OleAutomation(False)]
Interface IInitializeCommand Extends stdole.IUnknown
    Sub Initialize(ByVal pszCommandName As LongPtr, ByVal ppb As IPropertyBag)
End Interface

[InterfaceId("A88826F8-186F-4987-AADE-EA0CEF8FBFE8")]
[OleAutomation(False)]
Interface IEnumExplorerCommand Extends stdole.IUnknown
    Sub Next(ByVal celt As Long, ByRef pUICommand As IExplorerCommand, ByRef pceltFetched As Long)
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Sub Clone(ByRef ppenum As IEnumExplorerCommand)
End Interface

[InterfaceId("64961751-0835-43C0-8FFE-D57686530E64")]
[OleAutomation(False)]
Interface IExplorerCommandProvider Extends stdole.IUnknown
    Sub GetCommands(ByVal pUnkSite As IUnknown, ByRef riid As UUID, ByRef ppv As Any)
    Sub GetCommand(ByRef rguidCommandId As UUID, ByRef riid As UUID, ByRef ppv As Any)
End Interface

[InterfaceId("000214F5-0000-0000-C000-000000000046")]
[Description("IShellExecuteHook Ansi version")]
[OleAutomation(False)]
Interface IShellExecuteHookA Extends stdole.IUnknown
    Sub Execute(ByRef pei As SHELLEXECUTEINFO)
End Interface
[InterfaceId("000214FB-0000-0000-C000-000000000046")]
[Description("IShellExecuteHook Unicode version")]
[OleAutomation(False)]
Interface IShellExecuteHookW Extends stdole.IUnknown
    Sub Execute(ByRef pei As SHELLEXECUTEINFO)
End Interface
    
[InterfaceId("000214E1-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface INewShortcutHookA Extends stdole.IUnknown
    Sub SetReferent(ByVal pcszReferent As LongPtr, ByVal hwnd As LongPtr)
    Sub GetReferent(ByVal pszReferent As LongPtr, ByVal cchReferent As Long)
    Sub SetFolder(ByVal pcszFolder As LongPtr)
    Sub GetFolder(ByVal pszFolder As LongPtr, ByVal cchFolder As Long)
    Sub GetName(ByVal pszName As LongPtr, ByVal cchName As Long)
    Sub GetExtension(ByVal pszExtension As LongPtr, ByVal cchExtension As Long)
End Interface
[InterfaceId("000214F7-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface INewShortcutHookW Extends stdole.IUnknown
    Sub SetReferent(ByVal pcszReferent As LongPtr, ByVal hwnd As LongPtr)
    Sub GetReferent(ByVal pszReferent As LongPtr, ByVal cchReferent As Long)
    Sub SetFolder(ByVal pcszFolder As LongPtr)
    Sub GetFolder(ByVal pszFolder As LongPtr, ByVal cchFolder As Long)
    Sub GetName(ByVal pszName As LongPtr, ByVal cchName As Long)
    Sub GetExtension(ByVal pszExtension As LongPtr, ByVal cchExtension As Long)
End Interface
    
[InterfaceId("6E793361-73C6-11D0-8469-00AA00442901")]
[OleAutomation(False)]
Interface IEmptyVolumeCacheCallBack Extends stdole.IUnknown
    Sub ScanProgress(ByVal dwlSpaceUsed As LongLong, ByVal dwFlags As IEmptyVolumeCacheCallBackFlags, ByVal pcwszStatus As LongPtr)
    Sub PurgeProgress(ByVal dwlSpaceFreed As LongLong, ByVal dwlSpaceToFree As LongLong, ByVal dwFlags As IEmptyVolumeCacheCallBackFlags, ByVal pcwszStatus As LongPtr)
End Interface

[InterfaceId("8FCE5227-04DA-11D1-A004-00805F8ABE06")]
[OleAutomation(False)]
Interface IEmptyVolumeCache Extends stdole.IUnknown
    Sub Initialize(ByVal hkRegKey As LongPtr, ByVal pcwszVolume As LongPtr, ByRef ppwszDisplayName As LongPtr, ByRef ppwszDescription As LongPtr, ByRef pdwFlags As IEmptyVolumeCacheFlags)
    Sub GetSpaceUsed(ByRef pdwlSpaceUsed As LongLong, ByVal picb As IEmptyVolumeCacheCallBack)
    Sub Purge(ByVal dwlSpaceToFree As LongLong, ByVal picb As IEmptyVolumeCacheCallBack)
    Sub ShowProperties(ByVal hwnd As LongPtr)
    Sub Deactivate(ByRef pdwFlags As IEmptyVolumeCacheFlags)
End Interface

[InterfaceId("02B7E3BA-4DB3-11D2-B2D9-00C04F8EEC8C")]
[OleAutomation(False)]
Interface IEmptyVolumeCache2 Extends IEmptyVolumeCache
    Sub InitializeEx(ByVal hkRegKey As LongPtr, ByVal pcwszVolume As LongPtr, ByVal pcwszKeyName As LongPtr, ByRef ppwszDisplayName As LongPtr, ByRef ppwszDescription As LongPtr, ByRef ppwszBtnText As LongPtr, ByRef pdwFlags As IEmptyVolumeCacheFlags)
End Interface

[InterfaceId("abad189d-9fa3-4278-b3ca-8ca448a88dcb")]
[OleAutomation(False)]
Interface IAppActivationUIInfo Extends stdole.IUnknown
    Sub GetMonitor(value As LongPtr)
    Sub GetInvokePoint(value As POINT)
    Sub GetShowCommand(value As SHOWWINDOW)
    Sub GetKeyState(value As Long)
End Interface

[InterfaceId("91956D21-9276-11d1-921A-006097DF5BD4")]
[OleAutomation(False)]
Interface ICurrentWorkingDirectory Extends IUnknown
    Sub GetDirectory(pwzPath As LongPtr, ByVal cchSize As Long)
    Sub SetDirectory(ByVal pwzPath As LongPtr)
End Interface

[InterfaceId("47c01f95-e185-412c-b5c5-4f27df965aea")]
[OleAutomation(False)]
Interface IWinEventHandler Extends IUnknown
	Sub OnWinEvent(ByVal hwnd As LongPtr, ByVal dwMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr, plResult As LongPtr)
    Sub IsWindowOwner(ByVal hwnd As LongPtr)
End Interface

[InterfaceId("47c01f95-e185-412c-b5c5-4f27df965aea")]
[OleAutomation(False)]
Interface IFolderBandPriv Extends IUnknown
    Sub SetCascade(ByVal fCascase As BOOL)
    Sub SetAccelerators(ByVal fAccelerators As BOOL)
    Sub SetNoIcons(ByVal fNoIcons As BOOL)
    Sub SetNoText(ByVal fNoText As BOOL)
End Interface

[InterfaceId("226C537B-1E76-4D9E-A760-33DB29922F18")]
[OleAutomation(False)]
Interface IFrameworkInputPaneHandler Extends stdole.IUnknown
    [PreserveSig] Function Showing(ByRef prcInputPaneScreenLocation As RECT, ByVal fEnsureFocusedElementInView As BOOL) As Long
    [PreserveSig] Function Hiding(ByVal fEnsureFocusedElementInView As BOOL) As Long
End Interface

[InterfaceId("5752238B-24F0-495A-82F1-2FD593056796")]
[OleAutomation(False)]
Interface IFrameworkInputPane Extends stdole.IUnknown
    [PreserveSig] Function Advise(ByRef pWindow As Any, ByVal pHandler As IFrameworkInputPaneHandler, ByRef pdwCookie As Long) As Long
    [PreserveSig] Function AdviseWithHWND(ByVal hwnd As LongPtr, ByVal pHandler As IFrameworkInputPaneHandler, ByRef pdwCookie As Long) As Long
    [PreserveSig] Function FunctionUnadvise(ByVal dwCookie As Long) As Long
    [PreserveSig] Function Location(ByRef prcInputPaneScreenLocation As RECT) As Long
End Interface

[InterfaceId("00000020-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IMultiQI Extends stdole.IUnknown
    [PreserveSig] Function QueryMultipleInterfaces(ByVal cMQIs As Long, ByVal pMQIs As LongPtr) As Long
End Interface

[InterfaceId("00BB2761-6A77-11D0-A535-00C04FD7D062")]
[OleAutomation(False)]
Interface IObjMgr Extends stdole.IUnknown
    Sub Append(ByVal pUnk As IUnknown)
    Sub Remove(ByVal pUnk As IUnknown)
End Interface

[InterfaceId("00000146-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IGlobalInterfaceTable Extends stdole.IUnknown
    Sub RegisterInterfaceInGlobal(ByVal pUnk As IUnknown, ByRef riid As UUID, ByRef pdwCookie As Long)
    Sub RevokeInterfaceFromGlobal(ByVal dwCookie As Long)
    Sub GetInterfaceFromGlobal(ByVal dwCookie As Long, ByRef riid As UUID, ByRef ppv As Any)
End Interface

[InterfaceId("FCE4BDE0-4B68-4B80-8E9C-7426315A7388")]
[OleAutomation(False)]
Interface IShellRunDll Extends stdole.IUnknown
    Sub Run(ByVal pszArgs As LongPtr)
End Interface

[InterfaceId("C7B236CE-EE80-11D0-985F-006008059382")]
[OleAutomation(False)]
Interface IQueryCodePage Extends stdole.IUnknown
    Sub GetCodePage(puiCodePage As Long)
    Sub SetCodePage(ByVal uiCodePage As Long)
End Interface

[InterfaceId("8a68fdda-1fdc-4c20-8ceb-416643b5a625")]
[OleAutomation(False)]
Interface IStreamUnbufferedInfo Extends stdole.IUnknown
    Sub GetSectorSize(pcbSectorSize As Long)
End Interface

[InterfaceId("a561e69a-b4b8-4113-91a5-64c6bcca3430")]
[OleAutomation(False)]
Interface IUserAccountChangeCallback Extends stdole.IUnknown
    Sub OnPictureChange(ByVal pszUsername As LongPtr)
End Interface

[InterfaceId("F0EE7333-E6FC-479b-9F25-A860C234A38E")]
[OleAutomation(False)]
Interface IOpenSearchSource Extends stdole.IUnknown
    Sub GetResults(ByVal hwnd As LongPtr, ByVal pszQuery As LongPtr, ByVal dwStartIndex As Long, ByVal dwCount As Long, riid As UUID, ppv As Any)
End Interface

[InterfaceId("8a87781b-39a7-4a1f-aab3-a39b9c34a7d9")]
[OleAutomation(False)]
Interface IDestinationStreamFactory Extends stdole.IUnknown
    Sub GetDestinationStream(ppstm As IStream)
End Interface

[InterfaceId("F6EF6140-E26F-4D82-bAC4-E9BA5FD239A8")]
[OleAutomation(False)]
Interface ICreateProcessInputs Extends stdole.IUnknown
    Sub GetCreateFlags(pdwCreationFlags As CreateProcessFlags)
    Sub SetCreateFlags(ByVal dwCreationFlags As CreateProcessFlags)
    Sub AddCreateFlags(ByVal dwCreationFlags As CreateProcessFlags)
    Sub SetHotKey([TypeHint(VirtualKeyCodes)] ByVal wHotKey As Integer)
    Sub	AddStartupFlags(ByVal dwStartupInfoFlags As STARTUP_FLAGS)
    Sub SetTitle(ByVal pszTitle As LongPtr)
    Sub SetEnvironmentVariable(ByVal pszName As LongPtr, ByVal pszValue As LongPtr)
End Interface

[InterfaceId("c2b937a9-3110-4398-8a56-f34c6342d244")]
[OleAutomation(False)]
Interface ICreatingProcess Extends stdole.IUnknown
    Sub OnCreating(ByVal pcpi As ICreateProcessInputs)
End Interface


[InterfaceId("00000100-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IEnumUnknown Extends stdole.IUnknown
    [PreserveSig] Function Next(ByVal celt As Long, rgelt As stdole.IUnknown, pceltFetched As Long) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Function Clone() As IEnumUnknown
End Interface

[InterfaceId("00000103-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IEnumFormatETC Extends stdole.IUnknown
    [PreserveSig]
    Function Next(ByVal celt As Long, rgelt As FORMATETC, Optional ByRef pceltFetched As Long) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Function Clone() As IEnumFormatETC
End Interface

[InterfaceId("000214F2-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IEnumIDList Extends stdole.IUnknown
    [PreserveSig] Function Next(ByVal celt As Long, rgelt As LongPtr, Optional pceltFetched As Long) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Sub Clone(ppEnum As IEnumIDList)
End Interface

[InterfaceId("d0191542-7954-4908-bc06-b2360bbe45ba")]
[OleAutomation(False)]
Interface IEnumFullIDList Extends stdole.IUnknown
    [PreserveSig] Function Next(ByVal celt As Long, rgelt As LongPtr, Optional pceltFetched As Long) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Sub Clone(ppEnum As IEnumFullIDList)
End Interface

[InterfaceId("70629033-e363-4a28-a567-0db78006e6d7")]
[OleAutomation(False)]
Interface IEnumShellItems Extends stdole.IUnknown
    [PreserveSig] Function Next(ByVal celt As Long, rgelt As IShellItem, Optional pceltFetched As Long) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Sub Clone(ppEnum As IEnumShellItems)
End Interface

[InterfaceId("0E700BE1-9DB6-11d1-A1CE-00C04FD75D13")]
[OleAutomation(False)]
Interface IEnumExtraSearch Extends stdole.IUnknown
    Sub Next(ByVal celt As Long, rgelt As EXTRASEARCH, pceltFetched As Long)
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Function Clone() As IEnumExtraSearch
End Interface

[InterfaceId("0002E000-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IEnumGUID Extends stdole.IUnknown
    Sub Next(ByVal celt As Long, rgelt As UUID, pceltFetched As Long)
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Function Clone() As IEnumGUID
End Interface

[InterfaceId("0000000d-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IEnumSTATSTG Extends stdole.IUnknown
    [PreserveSig] Function Next(ByVal celt As Long, rgelt As STATSTG, pceltFetched As Long) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Function Clone() As IEnumSTATSTG
End Interface

[InterfaceId("00000139-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IEnumSTATPROPSTG Extends stdole.IUnknown
    [PreserveSig] Function Next(ByVal celt As Long, pSTATPROPSTG As STATPROPSTG, pceltFetched As Long) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Function Clone() As IEnumSTATPROPSTG
End Interface

[InterfaceId("0000013B-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IEnumSTATPROPSETSTG Extends stdole.IUnknown
    [PreserveSig] Function Next(ByVal celt As Long, pSTATPROPSETSTG As STATPROPSETSTG, pceltFetched As Long) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Function Clone() As IEnumSTATPROPSETSTG
End Interface

[InterfaceId("00000105-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IEnumSTATDATA Extends stdole.IUnknown
    [PreserveSig] Function Next(ByVal celt As Long, rgelt As STATDATA, pceltFetched As Long) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Function Clone() As IEnumSTATDATA
End Interface

[InterfaceId("00000101-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IEnumString Extends stdole.IUnknown
    [PreserveSig] Function Next(ByVal celt As Long, rgelt As LongPtr, pceltFetched As Long) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Function Clone() As IEnumString
End Interface

[InterfaceId("00000102-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IEnumMoniker Extends stdole.IUnknown
    [PreserveSig] Function Next(ByVal celt As Long, rgelt As IMoniker, pceltFetched As Long) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Function Clone() As IEnumMoniker
End Interface

[InterfaceId("0002E011-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IEnumCATEGORYINFO Extends stdole.IUnknown
    [PreserveSig] Function Next(ByVal celt As Long, ByRef rgelt As CATEGORYINFO, Optional ByRef pceltFetched As Long = 0) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Function Clone() As IEnumCATEGORYINFO
End Interface

[InterfaceId("00020404-0000-0000-C000-000000000046")]
Interface IEnumVARIANT Extends stdole.IUnknown
    [PreserveSig] Function Next(ByVal celt As Long, ByRef rgelt As Variant, Optional ByRef pceltFetched As Long = 0) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Function Clone() As IEnumVARIANT
End Interface


[InterfaceId("2c1c7e2e-2d0e-4059-831e-1e6f82335c2e")]
[OleAutomation(False)]
Interface IEnumObjects Extends stdole.IUnknown
    [PreserveSig] Function Next(ByVal celt As Long, ByRef riid As UUID, ByRef rgelt As Any, Optional ByRef pceltFetched As Long = 0) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Function Clone() As IEnumObjects
End Interface

[InterfaceId("a6087428-3be3-4d73-b308-7c04a540bf1a")]
[OleAutomation(False)]
Interface IObjectProvider Extends IUnknown
    Sub QueryObject(guidObject As UUID, riid As UUID, ppv As Any)
End Interface

[InterfaceId("0000010E-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IDataObject Extends stdole.IUnknown
    [PreserveSig] Function GetData(pFormatEtcIn As FORMATETC, pMedium As STGMEDIUM) As Long
    [PreserveSig] Function GetDataHere(pFormatEtc As FORMATETC, pMedium As STGMEDIUM) As Long
    [PreserveSig] Function QueryGetData(pFormatEtc As FORMATETC) As Long
    Sub GetCanonicalFormatEtc(pFormatEtcIn As FORMATETC, pFormatEtcOut As FORMATETC)
    [PreserveSig] Function SetData(pFormatEtc As FORMATETC, pMedium As STGMEDIUM, ByVal fRelease As BOOL) As Long
    Function EnumFormatEtc(ByVal dwDirection As DATADIR) As IEnumFormatETC
    Sub DAdvise(pFormatEtc As FORMATETC, ByVal advf As ADVF, ByVal pAdvSink As IAdviseSink)
    Sub DUnadvise(ByVal dwConnection As Long)
    Function EnumDAdvise() As IEnumSTATDATA
End Interface

[InterfaceId("3D8B0590-F691-11D2-8EA9-006097DF5BD4")]
[OleAutomation(False)]
Interface IDataObjectAsyncCapability Extends stdole.IUnknown
    Sub SetAsyncMode(ByVal fDoOpAsync As BOOL)
    Sub GetAsyncMode(ByRef pfIsOpAsync As BOOL)
    [Description("Optional IBindContext pbcReserved replaced with LONG; use ObjPtr")]
    Sub StartOperation(ByVal pbcReserved As LongPtr)
    Sub InOperation(ByRef pfInAsyncOp As BOOL)
    [Description("Optional IBindContext pbcReserved replaced with LONG; use ObjPtr")]
    Sub EndOperation(ByVal hresult As Long, ByVal pbcReserved As LongPtr, ByVal dwEffects As Long)
End Interface

[InterfaceId("0c733a30-2a1c-11ce-ade5-00aa0044773d")]
[OleAutomation(False)]
Interface ISequentialStream Extends stdole.IUnknown
    Function Read(pv As Any, ByVal cb As Long) As Long
    Function Write(pv As Any, ByVal cb As Long) As Long
End Interface
[InterfaceId("0000000c-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IStream Extends ISequentialStream
    Function Seek(ByVal dlibMove As LongLong, ByVal dwOrigin As STREAM_SEEK) As LongLong
    Sub SetSize(ByVal libNewSize As LongLong)
    Sub CopyTo(ByVal pStm As IStream, ByVal cb As LongLong, pcbRead As LongLong, pcbWritten As LongLong)
    Sub Commit(ByVal grfCommitFlags As STGC)
    Sub Revert()
    Sub LockRegion(ByVal libOffset As LongLong, ByVal cb As LongLong, ByVal dwLockType As LOCKTYPE)
	Sub UnlockRegion(ByVal libOffset As LongLong, ByVal cb As LongLong, ByVal dwLockType As LOCKTYPE)
    Sub Stat(pstatstg As STATSTG, ByVal grfStatFlag As STATFLAG)
    Function Clone() As IStream
End Interface

[InterfaceId("FE0B6665-E0CA-49B9-A178-2B5CB48D92A5")]
[OleAutomation(False)]
Interface IStreamAsync Extends IStream
    Sub ReadAsync(ByRef pv As Any, ByVal cb As Long, ByRef pcbRead As Long, ByVal lpOverlapped As LongPtr)
    Sub WriteAsync(ByRef lpBuffer As Any, ByVal cb As Long, ByRef pcbWritten As Long, ByVal lpOverlapped As LongPtr)
    Sub OverlappedResult(ByVal lpOverlapped As LongPtr, ByRef lpNumberOfBytesTransferred As Long, ByVal bWait As Long)
    Sub CancelIo()
End Interface

[InterfaceId("61E00D45-8FFF-4E60-924E-6537B61612DD")]
[OleAutomation(False)]
Interface IEnumReadyCallback Extends stdole.IUnknown
    Sub EnumReady()
End Interface

[InterfaceId("8C8BF236-1AEC-495F-9894-91D57C3C686F")]
[OleAutomation(False)]
Interface IEnumerableView Extends stdole.IUnknown
    Sub SetEnumReadyCallback(ByVal percb As IEnumReadyCallback)
    Sub CreateEnumIDListFromContents(ByVal pidlFolder As LongPtr, ByVal dwEnumFlags As SHCONTF, ByRef ppenumIDList As IEnumIDList)
End Interface

[InterfaceId("7F9185B0-CB92-43C5-80A9-92277A4F7B54")]
[OleAutomation(False)]
Interface IExecuteCommand Extends stdole.IUnknown
    Sub SetKeyState(ByVal grfKeyState As KeyStateMouse)
    Sub SetParameters(ByVal pszParameters As LongPtr)
    Sub SetPosition(ByVal pt As LongLong)
    Sub SetShowWindow(ByVal nShow As Long)
    Sub SetNoShowUI(ByVal fNoShowUI As BOOL)
    Sub SetDirectory(ByVal pszDirectory As LongPtr)
    Sub Execute()
End Interface
[InterfaceId("4B6832A2-5F04-4C9D-B89D-727A15D103E7")]
[OleAutomation(False)]
Interface IExecuteCommandHost Extends stdole.IUnknown
    Sub GetUIMode(ByRef pUIMode As EC_HOST_UI_MODE)
End Interface

[InterfaceId("6E0F9881-42A8-4F2A-97F8-8AF4E026D92D")]
[OleAutomation(False)]
Interface IInitializeNetworkFolder Extends stdole.IUnknown
    [PreserveSig]
    Function Initialize(ByVal pidl As LongPtr, ByVal pidlTarget As LongPtr, ByVal uDisplayType As Long, ByVal pszResName As LongPtr, ByVal pszProvider As LongPtr) As Long
End Interface

[InterfaceId("3C708557-C99D-4FA3-9231-56518418B4E4")]
[OleAutomation(False)]
Interface IComputerAccounts Extends IUnknown
	Sub GetEnumerator(pEnumerator As IEnumAccounts)
	Sub GetCount(pCount As Long)
	Sub GetAt(ByVal index As Long, ppPropStore As IPropertyStore)
	Sub Reset()
	Sub Create(ByVal pName As LongPtr, ppPropStore As IPropertyStore)
	Sub Delete(ByVal pPropStore As IPropertyStore)
	Sub FindByName(ByVal pUserName As LongPtr, ppPropStore As IPropertyStore)
    Sub FindByRid(ByVal rid As Long, ppPropStore As IPropertyStore)
	Sub Advise(ByVal pCompAcctNotify As IComputerAccountNotify, pToken As Long)
	Sub Unadvise(ByVal token As Long)
End Interface

[InterfaceId("50C852B0-C95F-4FEE-be00-87DC18B2661B")]
[OleAutomation(False)]
Interface IEnumAccounts Extends IUnknown
	[PreserveSig] Function Next(ByVal celt As Long, ppStore As IPropertyStore, pcFetched As Long) As Long
	Sub Skip(ByVal celt As Long)
	Sub Reset()
	Sub Clone(ppEnum As IEnumAccounts)
End Interface

[InterfaceId("F0009734-E8DE-48E5-B603-BFA5966A8F7C")]
[OleAutomation(False)]
Interface IComputerAccountNotify Extends IUnknown
	[Description("called when there is a change (user info changed, member added to a group, etc)")]
	Sub OnEvent()
	Sub GetMinimumTimeout(pdwTimeout As Long)
End Interface

[InterfaceId("E10F6C3A-F1ae-4adc-aa9d-2fe65525666e")]
[OleAutomation(False)]
Interface IProfileNotify Extends IUnknown
	Sub OnCreate(ByVal pStringSid As LongPtr, ByVal unused1 As LongPtr, ByVal unused2 As Long)
    Sub OnDelete(ByVal pStringSid As LongPtr, ByVal unused1 As LongPtr, ByVal unused2 As Long)
    Sub UnknownMethod(ByVal unused1 As LongPtr, ByVal unused2 As LongPtr, ByVal unused3 As Long)
    Sub OnUpgrade(ByVal unused1 As LongPtr, ByVal unused2 As LongPtr, ByVal unused3 As Long)
    Sub OnLoad(ByVal pStringSid As LongPtr, ByVal unused1 As LongPtr, ByVal unused2 As Long, ByVal psid As LongPtr)
    Sub OnUnload(ByVal unused1 As LongPtr, ByVal unused2 As LongPtr, ByVal unused3 As Long) 'E_NOTIMPL
End Interface




[InterfaceId("0000010c-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IPersist Extends stdole.IUnknown
    Sub GetClassID(pClassID As UUID)
End Interface
[InterfaceId("00000109-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IPersistStream Extends IPersist
    [PreserveSig] Function IsDirty() As Long
    Sub Load(ByVal pStm As IStream)
    Sub Save(ByVal pStm As IStream, ByVal fClearDirty As BOOL)
    Function GetSizeMax() As LongLong
End Interface
[InterfaceId("7FD52380-4E07-101B-AE2D-08002B2EC713")]
[Description("IPersistStreamInit interface")]
[OleAutomation(False)]
Interface IPersistStreamInit Extends IPersist
    [PreserveSig] Function IsDirty() As Long
    Sub Load(ByVal pStm As IStream)
    Sub Save(ByVal pStm As IStream, ByVal fClearDirty As BOOL)
    Function GetSizeMax() As LongLong
    Sub InitNew()
End Interface
[InterfaceId("1079acfc-29bd-11d3-8e0d-00c04f6837d5")]
[OleAutomation(False)]
Interface IPersistIDList Extends stdole.IUnknown
    Sub GetClassID(pClassID As UUID)
    Sub SetIDList(ByVal pidl As LongPtr)
    Sub GetIDList(pidl As LongPtr)
End Interface
[InterfaceId("000214EA-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IPersistFolder Extends IPersist
    Sub Initialize(ByVal pidl As LongPtr)
End Interface
[InterfaceId("1AC3D9F0-175C-11d1-95BE-00609797EA4F")]
[OleAutomation(False)]
Interface IPersistFolder2 Extends IPersistFolder
    Sub GetCurFolder(ppidl As LongPtr)
End Interface
[InterfaceId("CEF04FDF-FE72-11d2-87a5-00c04f6837cf")]
[OleAutomation(False)]
Interface IPersistFolder3 Extends IPersistFolder2
    Sub InitializeEx(ByVal pbc As IBindCtx, ByVal pidlRoot As LongPtr, ppfti As PERSIST_FOLDER_TARGET_INFO)
End Interface
[InterfaceId("0000010b-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IPersistFile Extends IPersist
    [PreserveSig] Function IsDirty() As Long
    Sub Load(ByVal pszFileName As String, ByVal dwMode As STGM)
    Sub Save(ByVal pszFileName As String, ByVal fRemember As BOOL)
    Sub SaveCompleted(ByVal pszFileName As String)
    Function GetCurFile() As LongPtr
End Interface
[InterfaceId("0000010A-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IPersistStorage Extends IPersist
    [PreserveSig] Function IsDirty() As Long
    Sub InitNew(ByVal pStg As IStorage)
    Sub Load(ByVal pStg As IStorage)
    Sub Save(ByVal pStgSave As IStorage, ByVal fSameAsLoad As BOOL)
    Sub SaveCompleted(ByVal pStgNew As IStorage)
    Sub HandsOffStorage()
End Interface
[InterfaceId("37D84F60-42CB-11CE-8135-00AA004BB851")]
[Description("IPersistPropertyBag interface")]
[OleAutomation(False)]
Interface IPersistPropertyBag Extends IPersist
    Sub InitNew()
    Sub Load(ByVal pPropBag As IPropertyBag, ByVal pErrorLog As IErrorLog)
    Sub Save(ByVal pPropBag As IPropertyBag, ByVal fClearDirty As BOOL, ByVal fSaveAllProperties As BOOL)
End Interface
[InterfaceId("22F55881-280B-11D0-A8A9-00A0C90C2004")]
[OleAutomation(False)]
Interface IPersistPropertyBag2 Extends IPersist
    Sub InitNew()
    Sub Load(ByVal pPropBag As IPropertyBag2, ByVal pErrLog As IErrorLog)
    Sub Save(ByVal pPropBag As IPropertyBag2, ByVal fClearDirty As BOOL, ByVal fSaveAllProperties As BOOL)
    [PreserveSig] Function IsDirty() As Long
End Interface
[InterfaceId("BD1AE5E0-A6AE-11CE-BD37-504200C10000")]
[OleAutomation(False)]
Interface IPersistMemory Extends IPersist
    [PreserveSig] Function IsDirty() As Long
    Sub Load(ByRef pMem As Any, ByVal cbSize As Long)
    Sub Save(ByRef pMem As Any, ByVal fClearDirty As BOOL, ByVal cbSize As Long)
    Function GetSizeMax() As Long
    Sub InitNew()
End Interface
[InterfaceId("79EAC9C9-BAF9-11CE-8C82-00AA004BA90B")]
[OleAutomation(False)]
Interface IPersistMoniker Extends stdole.IUnknown
    Sub GetClassID(ByRef pClassID As UUID)
    [PreserveSig] Function IsDirty() As Long
    Sub Load(ByVal fFullyAvailable As BOOL, ByVal pimkName As IMoniker, ByVal pibc As IBindCtx, ByVal grfMode As Long)
    Sub Save(ByVal pimkName As IMoniker, ByVal pbc As IBindCtx, ByVal fRemember As BOOL)
    Sub SaveCompleted(ByVal pimkName As IMoniker, ByVal pibc As IBindCtx)
    Function GetCurMoniker() As IMoniker
End Interface

[InterfaceId("1df0d7f1-b267-4d28-8b10-12e23202a5c4")]
[OleAutomation(False)]
Interface IItemNameLimits Extends stdole.IUnknown
    Sub GetValidCharacters(ppwszValidCharacters As LongPtr, ppwszInvalidCharacters As LongPtr)
    Sub GetMaxLength(ByVal pszName As LongPtr, piMaxNameLen As Long)
End Interface

[InterfaceId("FC4801A3-2BA9-11CF-A229-00AA003D7352")]
[OleAutomation(False)]
Interface IObjectWithSite Extends stdole.IUnknown
    Sub SetSite(ByVal pUnkSite As stdole.IUnknown)
    Sub GetSite(riid As UUID, ppvSite As stdole.IUnknown)
End Interface

[InterfaceId("92CA9DCD-5622-4bba-A805-5E9F541BD8C9")]
[OleAutomation(False)]
Interface IObjectArray Extends stdole.IUnknown
    [PreserveSig] Function GetCount(pcObjects As Long) As Long
    [PreserveSig] Function GetAt(ByVal uiIndex As Long, riid As UUID, ppv As Any) As Long
End Interface

[InterfaceId("5632b1a4-e38a-400a-928a-d4cd63230295")]
[OleAutomation(False)]
Interface IObjectCollection Extends IObjectArray
    Sub AddObject(ByVal pUnk As IUnknown)
    Sub AddFromArray(ByVal poaSource As IObjectArray)
    Sub RemoveObjectAt(ByVal uiIndex As Long)
    Sub Clear()
End Interface

[InterfaceId("0002E012-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface ICatRegister Extends stdole.IUnknown
    Sub RegisterCategories(ByVal cCategories As Long, ByRef rgCategoryInfo As CATEGORYINFO)
    Sub UnRegisterCategories(ByVal cCategories As Long, ByRef rgcatid As UUID)
    Sub RegisterClassImplCategories(ByRef rclsid As UUID, ByVal cCategories As Long, ByRef rgcatid As UUID)
    Sub UnRegisterClassImplCategories(ByRef rclsid As UUID, ByVal cCategories As Long, ByRef rgcatid As UUID)
    Sub RegisterClassReqCategories(ByRef rclsid As UUID, ByVal cCategories As Long, ByRef rgcatid As UUID)
    Sub UnRegisterClassReqCategories(ByRef rclsid As UUID, ByVal cCategories As Long, ByRef rgcatid As UUID)
End Interface

[InterfaceId("0002E013-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface ICatInformation Extends stdole.IUnknown
    Function EnumCategories(ByVal lcid As Long) As IEnumCATEGORYINFO
    Function GetCategoryDesc(ByRef rcatid As UUID, ByVal lcid As Long) As Long
    Function EnumClassesOfCategories(ByVal cImplemented As Long, ByRef rgcatidImpl As UUID, ByVal cRequired As Long, ByRef rgcatidReq As UUID) As IEnumGUID
    Sub IsClassOfCategories(ByRef rclsid As UUID, ByVal cImplemented As Long, ByRef rgcatidImpl As UUID, ByVal cRequired As Long, ByRef rgcatidReq As UUID)
    Function EnumImplCategoriesOfClass(ByRef rclsid As UUID) As IEnumGUID
    Function EnumReqCategoriesOfClass(ByRef rclsid As UUID) As IEnumGUID
End Interface

[InterfaceId("00000016-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IMessageFilter Extends stdole.IUnknown
    [PreserveSig]
    Function HandleInComingCall(ByVal dwCallType As CALLTYPE, ByVal htaskCaller As LongPtr, ByVal dwTickCount As Long, ByRef lpInterfaceInfo As INTERFACEINFO) As SERVERCALL
    [PreserveSig]
    Function RetryRejectedCall(ByVal htaskCallee As LongPtr, ByVal dwTickCount As Long, ByVal dwRejectType As SERVERCALL) As Long
    [PreserveSig]
    Function MessagePending(ByVal htaskCallee As LongPtr, ByVal dwTickCount As Long, ByVal dwPendingType As PENDINGTYPE) As PENDINGMSG
End Interface

[InterfaceId("3C594F9F-9F30-47A1-979A-C9E83D3D0A06")]
[OleAutomation(False)]
Interface IApplicationDocumentLists Extends stdole.IUnknown
    Sub SetAppID(ByVal pszAppID As LongPtr)
    Sub GetList(ByVal ListType As APPDOCLISTTYPE, ByVal cItemsDesired As Long, ByRef riid As UUID, ByRef ppv As Any)
End Interface

[InterfaceId("301DFBE5-524C-4B0F-8B2D-21C40B3A2988")]
Interface IStorageProviderPropertyHandler Extends stdole.IUnknown
    Sub RetrieveProperties(propertiesToRetrieve As PROPERTYKEY, ByVal propertiesToRetrieveCount As Long, retrievedProperties As IPropertyStore)
    Sub SaveProperties(ByVal propertiesToSave As IPropertyStore)
End Interface

[InterfaceId("162C6FB5-44D3-435B-903D-E613FA093FB5")]
Interface IStorageProviderHandler Extends stdole.IUnknown
    Sub GetPropertyHandlerFromPath(ByVal pszPath As LongPtr, propertyHandler As IStorageProviderPropertyHandler)
    Sub GetPropertyHandlerFromUri(ByVal uri As LongPtr, propertyHandler As IStorageProviderPropertyHandler)
    Sub GetPropertyHandlerFromFileId(ByVal fileId As LongPtr, propertyHandler As IStorageProviderPropertyHandler)
End Interface

[InterfaceId("5efb46d7-47C0-4b68-acda-ded47c90ec91")]
[OleAutomation(False)]
Interface IStorageProviderBanners Extends IUnknown
	Sub SetBanner(ByVal providerIdentity As LongPtr, ByVal subscriptionId As LongPtr, ByVal contentId As LongPtr)
	Sub ClearBanner(ByVal providerIdentity As LongPtr, ByVal subscriptionId As LongPtr)
	Sub ClearAllBanners(ByVal providerIdentity As LongPtr)
	Sub GetBanner(ByVal providerIdentity As LongPtr, ByVal subscriptionId As LongPtr, contentId As LongPtr)
End Interface

[InterfaceId("7bf992a9-af7a-4dba-b2e5-4d080b1ecbc6")]
[OleAutomation(False)]
Interface IStorageProviderCopyHook Extends IUnknown
	Sub CopyCallback(ByVal hwnd As LongPtr, ByVal operation As FILEOP, [TypeHint(FILEOP_FLAGS, ShellPrinterOperations)] ByVal flags As Long, ByVal srcFile As LongPtr, ByVal srcAttribs As FILE_ATTRIBUTES, ByVal destFile As LongPtr, ByVal destAttribs As FILE_ATTRIBUTES, result As MessageBoxResults)
End Interface

[InterfaceId("1791e8f6-21c7-4340-882a-a6a93e3fd73b")]
[OleAutomation(False)]
Interface ILaunchUIContext Extends IUnknown
    Sub SetAssociatedWindow(ByVal value As LongPtr)
    Sub SetTabGroupingPreference(ByVal value As Long) 'Windows::UI::ViewManagement::ViewGrouping DOES NOT EXIST!
End Interface
[InterfaceId("0d12c4c8-a3d9-4e24-94c1-0e20c5a956c4")]
[OleAutomation(False)]
Interface ILaunchUIContextProvider Extends IUnknown
    Sub UpdateContext(ByVal context As ILaunchUIContext)
End Interface

[InterfaceId("40A050A0-3C31-101B-A82E-08002B2B2337")]
Interface IVBGetControl Extends stdole.IUnknown
    Sub EnumControls(ByVal dwOleContF As Long, ByVal dwWhich As VBGCWhich, ppenumUnk As IEnumUnknown)
End Interface

[InterfaceId("8A701DA0-4FEB-101B-A82E-08002B2B2337")]
Interface IGetOleObject Extends stdole.IUnknown
    Sub GetOleObject(riid As UUID, ppvObj As Any)
End Interface

[InterfaceId("9849FD60-3768-101B-8D72-AE6164FFE3CF")]
Interface IVBFormat Extends stdole.IUnknown
    Sub Format(vData As Variant, ByVal bstrFormat As String, lpBuffer As Any, ByVal cb As Integer, ByVal lcid As Long, ByVal sFirstDayOfWeek As Integer, ByVal sFirstWeekOfYear As Integer, rcb As Integer)
End Interface

[InterfaceId("91733A60-3F4C-101B-A3F6-00AA0034E4E9")]
Interface IGetVBAObject Extends stdole.IUnknown
    Sub GetObject(riid As UUID, ppvObj As Any, ByVal dwReserved As Long)
End Interface


[InterfaceId("6d5140c1-7436-11ce-8034-00aa006009fa")]
[OleAutomation(False)]
Interface IServiceProvider Extends stdole.IUnknown
    Sub QueryService(guidService As UUID, riid As UUID, ppvObject As Any)
End Interface

[InterfaceId("0000000e-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IBindCtx Extends stdole.IUnknown
    Sub RegisterBoundObject(ByVal punk As stdole.IUnknown)
    Sub RevokeBoundObject(ByVal punk As stdole.IUnknown)
    Sub ReleaseBoundObjects()
    Sub SetBindOptions(pbindopts As BIND_OPTS)
    Sub GetBindOptions(pbindopts As BIND_OPTS)
    Function GetRunningObjectTable() As IRunningObjectTable
    Sub RegisterObjectParam(ByVal pszKey As LongPtr, ByVal pUnk As stdole.IUnknown)
    Function GetObjectParam(ByVal pszKey As LongPtr) As stdole.IUnknown
    Function EnumObjectParam() As IEnumString
    Sub RevokeObjectParam(ByVal pszKey As LongPtr)
End Interface

[InterfaceId("0000000f-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IMoniker Extends IPersistStream
    Sub BindToObject(ByVal pbc As IBindCtx, ByVal pmkToLeft As IMoniker, riidResult As UUID, ppvResult As Any)
    Sub BindToStorage(ByVal pbc As IBindCtx, ByVal pmkToLeft As IMoniker, riid As UUID, ppvObj As Any)
    Function Reduce(ByVal pbc As IBindCtx, ByVal dwReduceHowFar As Long, ppmkToLeft As IMoniker) As IMoniker
    Function CompositeWith(ByVal pmkRight As IMoniker, ByVal fOnlyIfNotGeneric As BOOL) As IMoniker
    Function Enum(ByVal fForward As BOOL) As IEnumMoniker
    [PreserveSig] Function IsEqual(ByVal pmkOtherMoniker As IMoniker) As Long
    Function Hash() As Long
    [PreserveSig] Function IsRunning(ByVal pbc As LongPtr, ByVal pmkToLeft As LongPtr, ByVal pmkNewlyRunning As LongPtr) As Long
    Function GetTimeOfLastChange(ByVal pbc As IBindCtx, ByVal pmkToLeft As IMoniker) As LongLong
    Function Inverse() As IMoniker
    Function CommonPrefixWith(ByVal pmkOther As IMoniker) As IMoniker
    Function RelativePathTo(ByVal pmkOther As IMoniker) As IMoniker
    [PreserveSig] Function GetDisplayName(ByVal pbc As LongPtr, ByVal pmkToLeft As LongPtr, ppszDisplayName As LongPtr) As Long
    Function ParseDisplayName(ByVal pbc As IBindCtx, ByVal pmkToLeft As IMoniker, ByVal pszDisplayName As LongPtr, pchEaten As Long) As IMoniker
    Function IsSystemMoniker() As Long
End Interface

[InterfaceId("00000010-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IRunningObjectTable Extends stdole.IUnknown
    Function Register(ByVal grfFlags As ROTFLAGS, ByVal pUnkObjects As stdole.IUnknown, ByVal pmkObjectName As IMoniker) As Long
    Sub Revoke(ByVal dwRegister As Long)
    Sub IsRunning(ByVal pmkObjectName As IMoniker)
    Function GetObject(ByVal pmkObjectName As IMoniker) As stdole.IUnknown
    Sub NoteChangeTime(ByVal dwRegister As Long, pFileTime As LongLong)
    Function GetTimeOfLastChange(ByVal pmkObjectName As IMoniker) As LongLong
    Function EnumRunning() As IEnumMoniker
End Interface

[InterfaceId("00000114-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleWindow Extends IUnknown
    Function GetWindow() As LongPtr
    Sub ContextSensitiveHelp(ByVal fEnterMode As BOOL)
End Interface

[InterfaceId("CB5BDC81-93C1-11CF-8F20-00805F2CD064")]
[OleAutomation(False)]
Interface IObjectSafety Extends IUnknown
    Sub GetInterfaceSafetyOptions(riid As UUID, pdwSupportedOptions As ObjectSafetyFlags, pdwEnabledOptions As ObjectSafetyFlags)
    Sub SetInterfaceSafetyOptions(riid As UUID, ByVal dwOptionSetMask As ObjectSafetyFlags, ByVal dwEnabledOptions As ObjectSafetyFlags)
End Interface

[InterfaceId("00000000-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IUnknownUnrestricted Extends Nothing
    [PreserveSig] Function QueryInterface(riid As UUID, ppvObject As Any) As Long
    [PreserveSig] Function AddRef() As Long
    [PreserveSig] Function Release() As Long
End Interface
[InterfaceId("00000000-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IUnknownUnrestrictedImpl Extends Nothing
    Sub QueryInterface(riid As UUID, ppvObject As LongPtr)
    Sub AddRef()
    Sub Release()
End Interface
#End Region

#Region "Coclasses"

[CoClassId("924ccc1b-6562-4c85-8657-d177925222b6")]
[COMCreatable]
CoClass DesktopGaget
    [Default] Interface IDesktopGadget
End CoClass

[CoClassId("C2CF3110-460E-4FC1-B9D0-8A1C0C9CC4BD")]
[COMCreatable]
CoClass DesktopWallpaper
	[Default] Interface IDesktopWallpaper
End CoClass

[CoClassId("273EB5E7-88B0-4843-BFEF-E2C81D43AAE5")]
[COMCreatable]
CoClass AppStartupLink
	[Default] Interface IShellLinkW
End CoClass

[CoClassId("B1AEC16F-2383-4852-B0E9-8F0B1DC66B4D")]
[COMCreatable]
CoClass PackageDebugSettings
	[Default] Interface IPackageDebugSettings2
End CoClass

[CoClassId("6B273FC5-61FD-4918-95A2-C3B5E9D7F581")]
[COMCreatable]
CoClass SuspensionDependencyManager
	[Default] Interface ISuspensionDependencyManager
End CoClass

[CoClassId("45BA127D-10A8-46EA-8AB7-56EA9078943C")]
[COMCreatable]
CoClass ApplicationActivationManager
	[Default] Interface IApplicationActivationManager
End CoClass

[CoClassId("958A6FB5-DCB2-4FAF-AAFD-7FB054AD1A3B")]
[COMCreatable]
CoClass ApplicationDesignModeSettings
	[Default] Interface IApplicationDesignModeSettings2
End CoClass
	
'CLSID_DragDropHelper 
[Description("CLSID_DragDropHelper")]
[CoClassId("4657278A-411B-11D2-839A-00C04FD918D0")]
CoClass DragDropHelper
	 [Default] Interface IDropTargetHelper
	Interface IDragSourceHelper
	Interface IDragSourceHelper2
End CoClass
'CLSID_KnownFolderManager 
[Description("CLSID_KnownFolderManager")]
[CoClassId("4df0c730-df9d-4ae3-9153-aa6b82e9795a")]
CoClass KnownFolderManager
	 [Default] Interface IKnownFolderManager
End CoClass
' 'CLSID_FileOperation 
[Description("CLSID_FileOperation")]
[CoClassId("3ad05575-8857-4850-9277-11b85bdb8e09")]
CoClass FileOperation
	 [Default] Interface IFileOperation
End CoClass
'CLSID_ShellLibrary 
[Description("CLSID_ShellLibrary")]
[CoClassId("D9B3211D-E57F-4426-AAEF-30A806ADD397")]
CoClass ShellLibrary
	 [Default] Interface IShellLibrary
End CoClass
'CLSID_FileOpenDialog 
[Description("CLSID_FileOpenDialog")]
[CoClassId("DC1C5A9C-E88A-4dde-A5A1-60F82A20AEF7")]
CoClass FileOpenDialog
	 [Default] Interface IFileOpenDialog
End CoClass
'CLSID_FileSaveDialog 
[Description("CLSID_FileSaveDialog")]
[CoClassId("C0B4E2F3-BA21-4773-8DBA-335EC946EB8B")]
CoClass FileSaveDialog
	 [Default] Interface IFileSaveDialog
End CoClass
'CLSID_EnumerableObjectCollection 
[Description("CLSID_EnumerableObjectCollection")]
[CoClassId("2D3468C1-36A7-43B6-AC24-D3F02FD9607A")]
CoClass EnumerableObjectCollection
	 [Default] Interface IObjectCollection
End CoClass
'CLSID_TaskbarList 
[Description("CLSID_TaskbarList")]
[CoClassId("56FDF344-FD6D-11d0-958A-006097C9A090")]
CoClass TaskbarList
	 [Default] Interface ITaskbarList4
End CoClass
'CLSID_DestinationList 
[Description("CLSID_DestinationList")]
[CoClassId("77F10CF0-3DB5-4966-B520-B7C54FD35ED6")]
CoClass DestinationList
	 [Default] Interface ICustomDestinationList
End CoClass
'CLSID_ShellWindows 
[Description("CLSID_ShellWindows")]
[CoClassId("9BA05972-F6A8-11CF-A442-00A0C90A8F39")]
CoClass ShellWindows
	 [Default] Interface IShellWindows
End CoClass
'CLSID_ProgressDialog 
[Description("CLSID_ProgressDialog")]
[CoClassId("F8383852-FCD3-11d1-A6B9-006097DF5BD4")]
CoClass ProgressDialog
	 [Default] Interface IProgressDialog
     Interface IOperationsProgressDialog
End CoClass
'CLSID_NamespaceWalker 
[Description("CLSID_NamespaceWalker")]
[CoClassId("72eb61e0-8672-4303-9175-f2e4c68b2e7c")]
CoClass NamespaceWalker
	 [Default] Interface INamespaceWalk
End CoClass
'CLSID_UserNotification 
[Description("CLSID_UserNotification")]
[CoClassId("0010890e-8789-413c-adbc-48f5b511b3af")]
CoClass UserNotification
	 [Default] Interface IUserNotification
     Interface IUserNotification2
End CoClass
[Description("CLSID_UserNotification / IUserNotification2")]
[CoClassId("0010890E-8789-413C-ADBC-48F5B511B3AF")]
[COMCreatable]
CoClass UserNotification2
    [Default] Interface IUserNotification2
    Interface IUserNotification
End CoClass
'CLSID_FolderViewHost 
[Description("CLSID_FolderViewHost")]
[CoClassId("20b1cb23-6968-4eb9-b7d4-a66d00d07cee")]
CoClass FolderViewHost
	 [Default] Interface IFolderViewHost
End CoClass
'CLSID_CDBurn 
[Description("CLSID_CDBurn")]
[CoClassId("fbeb8a05-beee-4442-804e-409d6c4515e9")]
CoClass CDBurn
	 [Default] Interface ICDBurn
End CoClass
'CLSID_ImageRecompress 
[Description("CLSID_ImageRecompress")]
[CoClassId("6e33091c-d2f8-4740-b55e-2e11d1477a2c")]
CoClass ImageRecompress
	 [Default] Interface IImageRecompress
End CoClass
'CLSID_ImageTranscode 
[Description("CLSID_ImageTranscode")]
[CoClassId("17B75166-928F-417d-9685-64AA135565C1")]
CoClass ImageTranscode
	 [Default] Interface ITranscodeImage
End CoClass
'CLSID_ShellImageDataFactory 
[Description("CLSID_ShellImageDataFactory")]
[CoClassId("66e4e4fb-f385-4dd0-8d74-a2efd1bc6178")]
CoClass ShellImageDataFactory
	 [Default] Interface IShellImageDataFactory
End CoClass
'CLSID_QueryCancelAutoPlay 
[Description("CLSID_QueryCancelAutoPlay")]
[CoClassId("331F1768-05A9-4ddd-B86E-DAE34DDC998A")]
CoClass QueryCancelAutoPlay
	 [Default] Interface IQueryCancelAutoPlay
End CoClass
'CLSID_CFSIconOverlayManager 
[Description("CLSID_CFSIconOverlayManager")]
[CoClassId("63B51F81-C868-11D0-999C-00C04FD655E1")]
CoClass CFSIconOverlayManager
	 [Default] Interface IShellIconOverlayManager
End CoClass
'CLSID_VirtualDesktopManager 
[Description("CLSID_VirtualDesktopManager")]
[CoClassId("aa509086-5ca9-4c25-8f95-589d3c07b48a")]
CoClass VirtualDesktopManager
	 [Default] Interface IVirtualDesktopManager
End CoClass
'CLSID_PreviousVersions 
[Description("CLSID_PreviousVersions")]
[CoClassId("596AB062-B4D2-4215-9F74-E9109B0A8153")]
CoClass PreviousVersions
	 [Default] Interface IPreviousVersionsInfo
End CoClass
'CLSID_StdGlobalInterfaceTable 
[Description("CLSID_StdGlobalInterfaceTable")]
[CoClassId("00000323-0000-0000-C000-000000000046")]
CoClass StdGlobalInterfaceTable
	 [Default] Interface IGlobalInterfaceTable
End CoClass
'CLSID_LocalThumbnailCache 
[Description("CLSID_SharedBitmap")]
[CoClassId("50EF4544-AC9F-4A8E-B21B-8A26180DB13F")]
CoClass LocalThumbnailCache
	 [Default] Interface IThumbnailCache
End CoClass
'CLSID_SharedBitmap 
[Description("CLSID_SharedBitmap")]
[CoClassId("4db26476-6787-4046-b836-e8412a9e8a27")]
CoClass SharedBitmap
	 [Default] Interface ISharedBitmap
End CoClass
'CLSID_ShellLinkW 
[Description("CLSID_ShellLinkW")]
[CoClassId("00021401-0000-0000-C000-000000000046")]
CoClass ShellLinkW
	 [Default] Interface IShellLinkW
    Interface IShellLinkA
    Interface IPersistFile
End CoClass
'CLSID_ShellLink
[Description("CLSID_ShellLink - Note: Default=IShellLinkW")]
[CoClassId("00021401-0000-0000-C000-000000000046")]
CoClass ShellLink
     [Default] Interface IShellLinkW
    Interface IShellLinkA
    Interface IPersistFile
End CoClass
'CLSID_AutoComplete 
[Description("CLSID_AutoComplete")]
[CoClassId("00BB2763-6A77-11D0-A535-00C04FD7D062")]
CoClass AutoComplete
	 [Default] Interface IAutoComplete2
     Interface IAutoComplete
End CoClass
'CLSID_ACListISF 
[Description("CLSID_ACListISF")]
[CoClassId("03C036F1-A186-11D0-824A-00AA005B4383")]
CoClass ACListISF
	 [Default] Interface IACList
     Interface IEnumString
End CoClass
'CLSID_ACLHistory 
[Description("CLSID_ACLHistory")]
[CoClassId("00BB2764-6A77-11D0-A535-00C04FD7D062")]
CoClass ACLHistory
	 [Default] Interface IACList
     Interface IEnumString
End CoClass
'CLSID_ACLMRU 
[Description("CLSID_ACLMRU")]
[CoClassId("6756A641-DE71-11d0-831B-00AA005B4383")]
CoClass ACLMRU
	 [Default] Interface IACList
     Interface IEnumString
End CoClass
'CLSID_ACLMulti 
[Description("CLSID_ACLMulti")]
[CoClassId("00BB2765-6A77-11D0-A535-00C04FD7D062")]
CoClass ACLMulti
	 [Default] Interface IACList
     Interface IEnumString
End CoClass
'CLSID_StdComponentCategoriesMgr 
[Description("CLSID_StdComponentCategoriesMgr")]
[CoClassId("0002e005-0000-0000-c000-000000000046")]
CoClass StdComponentCategoriesMgr
    [Default] Interface ICatInformation
    Interface ICatRegister
End CoClass
'CLSID_ApplicationAssociationRegistrationUI 
[Description("CLSID_ApplicationAssociationRegistrationUI")]
[CoClassId("1968106d-f3b5-44cf-890e-116fcb9ecef1")]
CoClass ApplicationAssociationRegistrationUI
	 [Default] Interface IApplicationAssociationRegistrationUI
End CoClass
'CLSID_ApplicationAssociationRegistration 
[Description("CLSID_ApplicationAssociationRegistration")]
[CoClassId("591209c7-767b-42b2-9fba-44ee4615f2c7")]
CoClass ApplicationAssociationRegistration
	 [Default] Interface IApplicationAssociationRegistration
End CoClass
'CLSID_HomeGroup 
[Description("CLSID_HomeGroup")]
[CoClassId("DE77BA04-3C92-4d11-A1A5-42352A53E0E3")]
CoClass HomeGroup
	 [Default] Interface IHomeGroup
End CoClass
'CLSID_ApplicationDocumentLists 
[Description("CLSID_ApplicationDocumentLists")]
[CoClassId("86bec222-30f2-47e0-9f25-60d11cd75c28")]
CoClass ApplicationDocumentLists
	 [Default] Interface IApplicationDocumentLists
End CoClass
'CLSID_SharingConfigurationManager 
[Description("CLSID_SharingConfigurationManager")]
[CoClassId("49F371E1-8C5C-4d9c-9A3B-54A6827F513C")]
CoClass SharingConfigurationManager
	 [Default] Interface ISharingConfigurationManager
End CoClass
'CLSID_SystemInformation 
[Description("CLSID_SystemInformation")]
[CoClassId("C01B9BA0-BEA7-41BA-B604-D0A36F469133")]
CoClass SystemInformation
	 [Default] Interface ISystemInformation
End CoClass
'CLSID_
[Description("CLSID_PropertyChangeArray")]
[CoClassId("8b6a3ebb-cd13-4704-93c5-bc3413104e4c")]
CoClass PropertyChangeArray
	 [Default] Interface IPropertyChangeArray
End CoClass
'CLSID_DefFolderMenu 
[Description("CLSID_DefFolderMenu")]
[CoClassId("c63382be-7933-48d0-9ac8-85fb46be2fdd")]
CoClass DefFolderMenu
	 [Default] Interface IDefaultFolderMenuInitialize
End CoClass
'CLSID_FrameworkInputPane 
[Description("CLSID_FrameworkInputPane")]
[CoClassId("D5120AA3-46BA-44C5-822D-CA8092C1FC72")]
CoClass FrameworkInputPane
	 [Default] Interface IFrameworkInputPane
End CoClass
'CLSID_ExecuteFolder 
[Description("CLSID_ExecuteFolder")]
[CoClassId("11dbb47c-a525-400b-9e80-a54615a090c0")]
CoClass ExecuteFolder
	 [Default] Interface IExecuteCommand
End CoClass
'CLSID_AppShellVerbHandler 
[Description("CLSID_AppShellVerbHandler")]
[CoClassId("4ED3A719-CEA8-4BD9-910D-E252F997AFC2")]
CoClass AppShellVerbHandler
	 [Default] Interface IExecuteCommand
End CoClass
'CLSID_ExecuteUnknown 
[Description("CLSID_ExecuteUnknown")]
[CoClassId("e44e9428-bdbc-4987-a099-40dc8fd255e7")]
CoClass ExecuteUnknown
	 [Default] Interface IExecuteCommand
End CoClass
'CLSID_NetworkPlaces 
[Description("CLSID_NetworkPlaces")]
[CoClassId("208d2c60-3aea-1069-a2d7-08002b30309d")]
CoClass NetworkPlaces
	 [Default] Interface IInitializeNetworkFolder
     Interface IShellFolder2
End CoClass
'CLSID_PropertiesUI 
[Description("CLSID_PropertiesUI")]
[CoClassId("D912F8CF-0396-4915-884E-FB425D32943B")]
CoClass PropertiesUI
	 [Default] Interface IPropertyUI
End CoClass
'CLSID_UserEventTimer 
[Description("CLSID_UserEventTimer")]
[CoClassId("864A1288-354C-4D19-9D68-C2742BB14997")]
CoClass UserEventTimer
	 [Default] Interface IUserEventTimer
End CoClass
'CLSID_UserEventTimerCallback 
[Description("CLSID_UserEventTimerCallback")]
[CoClassId("15FFFD13-5140-41B8-B89A-C8D5759CD2B2")]
CoClass UserEventTimerCallback
	 [Default] Interface IUserEventTimerCallback
End CoClass
'CLSID_AddressBarParser 
[Description("CLSID_AddressBarParser")]
[CoClassId("E0E11A09-5CB8-4B6C-8332-E00720A168F2")]
CoClass AddressBarParser
	 [Default] Interface IAddressBarParser
End CoClass

'CLSID_ImageList 
[Description("CLSID_ImageList")]
[CoClassId("7C476BA2-02B1-48f4-8048-B24619DDC058")]
CoClass ImageList
	 [Default] Interface IImageList2
End CoClass

'CLSID_MenuBand 
[Description("CLSID_MenuBand")]
[CoClassId("71D88C20-41CF-4CDF-A81F-D8609836347D")]
CoClass MenuBand
	 [Default] Interface IShellMenu
End CoClass
'CLSID_TrackShellMenu
[CoClassId("8278F931-2A3E-11d2-838F-00C04FD918D0")]
CoClass TrackShellMenu
    [Default] Interface ITrackShellMenu
    Interface IShellMenu
End CoClass
    
'CLSID_OpenControlPanel 
[Description("CLSID_OpenControlPanel")]
[CoClassId("06622D85-6856-4460-8DE1-A81921B41C4B")]
CoClass OpenControlPanel
	 [Default] Interface IOpenControlPanel
End CoClass

'CLSID_DriveSizeCategorizer 
[Description("CLSID_DriveSizeCategorizer")]
[CoClassId("94357B53-CA29-4b78-83AE-E8FE7409134F")]
CoClass DriveSizeCategorizer
	 [Default] Interface ICategorizer
End CoClass

'CLSID_DriveTypeCategorizer 
[Description("CLSID_DriveTypeCategorizer")]
[CoClassId("B0A8F3CF-4333-4bab-8873-1CCB1CADA48B")]
CoClass DriveTypeCategorizer
	 [Default] Interface ICategorizer
End CoClass

'CLSID_FreeSpaceCategorizer 
[Description("CLSID_FreeSpaceCategorizer")]
[CoClassId("B5607793-24AC-44c7-82E2-831726AA6CB7")]
CoClass FreeSpaceCategorizer
	 [Default] Interface ICategorizer
End CoClass

'CLSID_TimeCategorizer 
[Description("CLSID_TimeCategorizer")]
[CoClassId("3bb4118f-ddfd-4d30-a348-9fb5d6bf1afe")]
CoClass TimeCategorizer
	 [Default] Interface ICategorizer
End CoClass

'CLSID_SizeCategorizer 
[Description("CLSID_SizeCategorizer")]
[CoClassId("55d7b852-f6d1-42f2-aa75-8728a1b2d264")]
CoClass SizeCategorizer
	 [Default] Interface ICategorizer
End CoClass

'CLSID_AlphabeticalCategorizer 
[Description("CLSID_AlphabeticalCategorizer")]
[CoClassId("3c2654c6-7372-4f6b-b310-55d6128f49d2")]
CoClass AlphabeticalCategorizer
	 [Default] Interface ICategorizer
End CoClass

'CLSID_MergedCategorizer 
[Description("CLSID_MergedCategorizer")]
[CoClassId("8e827c11-33e7-4bc1-b242-8cd9a1c2b304")]
CoClass MergedCategorizer
	 [Default] Interface ICategorizer
End CoClass

'CLSID_ImageProperties 
[Description("CLSID_ImageProperties")]
[CoClassId("7ab770c7-0e23-4d7a-8aa2-19bfad479829")]
CoClass ImageProperties
	 [Default] Interface stdole.IUnknown
     Interface IPersistFile
End CoClass

'CLSID_TrayNotify
[Description("CLSID_TrayNotify")]
[CoClassId("25DEAD04-1EAC-4911-9E3A-AD0A4AB560FD")]
CoClass TrayNotify
	[Default] Interface ITrayNotify
End CoClass

'CLSID_TaskbandPin
[Description("CLSID_TaskbandPin")]
[CoClassId("90AA3A4E-1CBA-4233-B8BB-535773D48449")]
CoClass TaskbandPin
	[Default] Interface IPinnedList2
    Interface IPinnedList3
    Interface IPinnedList
End CoClass

'CLSID_TaskBand
[Description("CLSID_TaskBand")]
[CoClassId("68284FAA-6A48-11D0-8C78-00C04FD918B4")]
CoClass TaskBand
    [Default] Interface IDeskBand2
    Interface IDeskBand
    Interface IDockingWindow
    Interface IOleWindow
    Interface IDropTarget
    Interface IInputObject
    Interface IObjectWithSite
    Interface IOleCommandTarget
    Interface IPersistStream
    Interface IPersist
    Interface IWinEventHandler
End CoClass

'CLSID_StartMenuPin
[Description("CLSID_StartMenuPin")]
[CoClassId("A2A9545D-A0C2-42B4-9708-A0B2BADD77C8")]
CoClass StartMenuPin
	[Default] Interface IStartMenuPinnedList
	Interface IPinnedList3
    Interface IPinnedList2
    Interface IPinnedList
	Interface IObjectWithSite
	Interface IContextMenu
	Interface IShellExtInit
	Interface IStartMenuPin
End CoClass


'// CLSID_InMemoryPropertyStore
[Description("CLSID_InMemoryPropertyStore")]
[CoClassId("9a02e012-6303-4e1e-b9a1-630f802592c5")]
CoClass InMemoryPropertyStore
[Default] Interface IPropertyStore
End CoClass

'// CLSID_InMemoryPropertyStoreMarshalByValue
[Description("CLSID_InMemoryPropertyStoreMarshalByValue")]
[CoClassId("D4CA0E2D-6DA7-4b75-A97C-5F306F0EAEDC")]
CoClass InMemoryPropertyStoreMarshalByValue
[Default] Interface IPropertyStore
End CoClass

'// CLSID_PropertySystem
[Description("CLSID_PropertySystem")]
[CoClassId("9a02e012-6303-4e1e-b9a1-630f802592c5")]
CoClass PropertySystem
[Default] Interface IPropertySystem
End CoClass

'// CLSID_TrayDeskBand
[Description("CLSID_TrayDeskBand")]
[CoClassId("E6442437-6C68-4f52-94DD-2CFED267EFB9")]
CoClass TrayDeskBand
    [Default] Interface ITrayDeskBand
End CoClass

'    // CLSID_TrayBandSiteService
[Description("CLSID_TrayBandSiteService")]
[CoClassId("F60AD0A0-E5E1-45cb-B51A-E15B9F8B2934")]
CoClass TrayBandSiteService
    [Default] Interface IBandSite
End CoClass

'CLSID_AddressBand
[Description("CLSID_AddressBand")]
[CoClassId("01E04581-4EEE-11d0-BFE9-00AA005B4383")]
CoClass AddressBand
    [Default] Interface IDeskBand
End CoClass

'CLSID_ADCCtl
[Description("CLSID_ADCCtl")]
[CoClassId("3964D9A0-AC96-11D1-9851-00C04FD91972")]
CoClass ADCCtl
    [Default] Interface IADCCtl
End CoClass

'CLSID_EnumInstalledApps
[CoClassId("0B124F8F-91F0-11D1-B8B5-006008059382")]
[Description("Shell Installed Applications Enumeration Object")]
CoClass EnumInstalledApps
    [Default] Interface IEnumInstalledApps
End CoClass

'CLSID_ShellAppManager
[CoClassId("352EC2B7-8B9A-11D1-B8AE-006008059382")]
[Description("Shell Application Manager")]
CoClass ShellAppManager
    [Default] Interface IShellAppManager
End CoClass

' CLSID_ProfileNotificationHandler
[Description("CLSID_ProfileNotificationHandler")]
[CoClassId("56EA1054-1959-467f-be3b-a2a787c4b6ea")]
CoClass ProfileNotificationHandler
	[Default] Interface IProfileNotify
End CoClass

' CLSID_LocalUserAccounts
[Description("CLSID_LocalUserAccounts")]
[CoClassId("4F6BCD94-C2A5-42CE-8dbc-31e794be4630")]
CoClass LocalUserAccounts
	[Default] Interface IComputerAccounts
End CoClass

' CLSID_LocalGroups
[CoClassId("8F3080A6-af99-4F2e-a806-f3d5702a0444")]
[Description("Computer resident groups (Administrators, Users, Guests, etc)")]
CoClass LocalGroups
	[Default] Interface IComputerAccounts
End CoClass

' CLSID_LoggedOnAccounts
[Description("CLSID_LoggedOnAccounts")]
[CoClassId("987d8dfa-3e2c-4929-9c51-61ac8e00cbc3")]
CoClass LoggedOnAccounts
    [Default] Interface IComputerAccounts
End CoClass

' CLSID_ProfileAccounts
[CoClassId("99CDC6E0-DA00-4DFA-8eb8-831d774f8891")]
[Description("Accounts with a profile directory (including LocalSystem, LocalService, NetworkService)")]
CoClass ProfileAccounts
	[Default] Interface IComputerAccounts
End CoClass

' CLSID_UserAccounts
[CoClassId("C3C39131-B182-4801-b437-6d1e65b72f57")]
[Description("Aggregates the info in CLSID_LocalUserAccounts and CLSID_ProfileAccounts")]
CoClass UserAccounts
	[Default] Interface IComputerAccounts
End CoClass

[CoClassId("CBE0FED3-4B91-4E90-8354-8A8C84EC6872")]
CoClass ThumbnailStreamCache
    [Default] Interface IThumbnailStreamCache
End CoClass

'CLSID_StorageProviderBanners
[Description("CLSID_StorageProviderBanners")]
[CoClassId("7CCDF9F4-E576-455A-8BC7-F6EC68D6F063")]
CoClass StorageProviderBanners
	[Default] Interface IStorageProviderBanners
End CoClass

'CLSID_AttachmentServices
[Description("CLSID_AttachmentServices")]
[CoClassId("4125dd96-e03a-4103-8f70-e0597d803b9c")]
CoClass AttachmentServices
	[Default] Interface IAttachmentExecute
End CoClass

'CLSID_DocPropShellExtension
[Description("CLSID_DocPropShellExtension")]
[CoClassId("883373C3-BF89-11D1-BE35-080036B11A03")]
CoClass DocPropShellExtension
	[Default] Interface IShellExtInit
End CoClass


'CLSID_ShellDesktop
[Description("CLSID_ShellDesktop")]
[CoClassId("00021400-0000-0000-C000-000000000046")]
CoClass ShellDesktop
	[Default] Interface IShellFolder
	Interface IShellFolder2
	Interface IContextMenuCB
	Interface IExplorerPaneVisibility
	Interface IItemNameLimits
	Interface IObjectWithSite
	Interface IOleCommandTarget
	Interface IPersist
	Interface IPersistFolder
	Interface IPersistFolder2
	Interface IShellIcon
	Interface IShellIconOverlay
	Interface IStorage
	Interface IThumbnailHandlerFactory
	'Interface ITransferProvider
End CoClass


#End Region

#Region "Declares"
Module wdShellCore
Option Explicit

Public Const MAX_PATH                  As Long = 260

Public Type UUID
	Data1 As Long
	Data2 As Integer
	Data3 As Integer
	Data4(0 To 7) As Byte
End Type
Public Type CLSID
	Data1 As Long
	Data2 As Integer
	Data3 As Integer
	Data4(0 To 7) As Byte
End Type
Public Type PROPERTYKEY
	fmtid As UUID
	pid As Long
End Type
Public Type FILETIME
	dwLowDateTime As Long
	dwHighDateTime As Long
End Type
Public Type SYSTEMTIME
	wYear As Integer
	wMonth As Integer
	wDayOfWeek As Integer
	wDay As Integer
	wHour As Integer
	wMinute As Integer
	wSecond As Integer
	wMilliseconds As Integer
End Type

#If WINDEVLIB_NOQUADLI Then
[ Description ("**WARNING** This definition is provided for compatibility with existing codebases only. It is problematic on modern platforms because Windows supports LongLong so uses QuadPart. THIS IMPACTS UDT ALIGNMENT. It is strongly advised to not use this version.") ]
Public Type LARGE_INTEGER
   lowpart As Long
   highpart As Long
'    QuadPart As LongLong
'TODO: When Unions are supported, this needs to be one.
End Type
#Else
Public Type LARGE_INTEGER
#If (TWINBASIC = 1) Or (Win64 = 1) Then
	QuadPart As LongLong
#Else
   lowpart As Long
   highpart As Long
#End If
End Type
#End If


' Public Type QLARGE_INTEGER
' 	#If (TWINBASIC = 1) Or (Win64 = 1) Then
' 	QuadPart As LongLong
' 	#Else
'    lowpart As Long
'    highpart As Long
'    #End If
' End Type


Public Type ULARGE_INTEGER
'    lowpart As Long
'    highpart As Long
    QuadPart As LongLong
End Type
Public Type RECT
	Left As Long
	Top As Long
	Right As Long
	Bottom As Long
End Type
'Alias RECTL As RECT
Public Type RECTL
    Left As Long
    Top As Long
    Right As Long
    Bottom As Long
End Type
Public Type RECTF
    Left As Single
    Top As Single
    Right As Single
    Bottom As Single
End Type
'Alias BORDERWIDTHS As RECT
Public Type BORDERWIDTHS
    Left As Long
    Top As Long
    Right As Long
    Bottom As Long
End Type
Public Enum FontWeight
    FW_DONTCARE = 0
    FW_THIN = 100
    FW_EXTRALIGHT = 200
    FW_LIGHT = 300
    FW_NORMAL = 400
    FW_MEDIUM = 500
    FW_SEMIBOLD = 600
    FW_BOLD = 700
    FW_EXTRABOLD = 800
    FW_HEAVY = 900
    FW_ULTRALIGHT = FW_EXTRALIGHT
    FW_REGULAR = FW_NORMAL
    FW_DEMIBOLD = FW_SEMIBOLD
    FW_ULTRABOLD = FW_EXTRABOLD
    FW_BLACK = FW_HEAVY
End Enum
Public Const LF_FACESIZE = 32
Public Const LF_FULLFACESIZE = 64
Public Type LOGFONTA
    LFHeight As Long
    LFWidth As Long
    LFEscapement As Long
    LFOrientation As Long
    LFWeight As FontWeight
    LFItalic As Byte
    LFUnderline As Byte
    LFStrikeOut As Byte
    LFCharset As Byte
    LFOutPrecision As Byte
    LFClipPrecision As Byte
    LFQuality As Byte
    LFPitchAndFamily As Byte
    LFFaceName(LF_FACESIZE - 1) As Byte
End Type
Public Type LOGFONTW
    LFHeight As Long
    LFWidth As Long
    LFEscapement As Long
    LFOrientation As Long
    LFWeight As FontWeight
    LFItalic As Byte
    LFUnderline As Byte
    LFStrikeOut As Byte
    LFCharset As Byte
    LFOutPrecision As Byte
    LFClipPrecision As Byte
    LFQuality As Byte
    LFPitchAndFamily As Byte
    LFFaceName(LF_FACESIZE - 1) As Integer
End Type
'Alias LOGFONT As LOGFONTW
Public Type LOGFONT
    LFHeight As Long
    LFWidth As Long
    LFEscapement As Long
    LFOrientation As Long
    LFWeight As FontWeight
    LFItalic As Byte
    LFUnderline As Byte
    LFStrikeOut As Byte
    LFCharset As Byte
    LFOutPrecision As Byte
    LFClipPrecision As Byte
    LFQuality As Byte
    LFPitchAndFamily As Byte
    LFFaceName(LF_FACESIZE - 1) As Integer
End Type

Public Type FONTSIGNATURE
    fsUsb(0 To 3) As Long
    fsCsb(0 To 1) As Long
End Type

Public Enum STREAM_SEEK
    STREAM_SEEK_SET = 0
    STREAM_SEEK_CUR = 1
    STREAM_SEEK_END = 2
End Enum
Public Enum LOCKTYPE
    LOCK_WRITE = &H1
    LOCK_EXCLUSIVE = &H2
    LOCK_ONLYONCE = &H4
End Enum
Public Enum STGTY
	STGTY_STORAGE = 1
	STGTY_STREAM = 2
	STGTY_LOCKBYTES = 3
	STGTY_PROPERTY = 4
End Enum
Public Enum STGC
	STGC_DEFAULT = 0
	STGC_OVERWRITE = 1
	STGC_ONLYIFCURRENT = 2
	STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE = 4
	STGC_CONSOLIDATE = 8
End Enum
Public Enum STATFLAG
	STATFLAG_DEFAULT = 0
	STATFLAG_NONAME = 1
	STATFLAG_NOOPEN = 2
End Enum
Public Type STATSTG
    pwcsName As LongPtr
    type As STGTY
    cbSize As LongLong
    mtime As LongLong
    ctime As LongLong
    atime As LongLong
    grfMode As STGM
    grfLocksSupported As LOCKTYPE
    clsid As UUID
    grfStateBits As Long
    reserved As Long
End Type

Public Enum MKSYS
	MKSYS_NONE = 0
	MKSYS_GENERICCOMPOSITE = 1
	MKSYS_FILEMONIKER = 2
	MKSYS_ANTIMONIKER = 3
	MKSYS_ITEMMONIKER = 4
	MKSYS_POINTERMONIKER = 5
	MKSYS_URLMONIKER = 6
	MKSYS_CLASSMONIKER = 7
	MKSYS_OBJREFMONIKER = 8
	MKSYS_SESSIONMONIKER = 9
End Enum
Public Enum MKREDUCE
	MKRREDUCE_ONE = &H30
	MKRREDUCE_TOUSER = &H20
	MKRREDUCE_THROUGHUSER = &H10
	MKRREDUCE_ALL = 0
End Enum

Public Enum CSIDLs
	CSIDL_DESKTOP = &H0000
	CSIDL_INTERNET = &H0001
	CSIDL_PROGRAMS = &H0002
	CSIDL_CONTROLS = &H0003
	CSIDL_PRINTERS = &H0004
	CSIDL_PERSONAL = &H0005
	CSIDL_FAVORITES = &H0006
	CSIDL_STARTUP = &H0007
	CSIDL_RECENT = &H0008
	CSIDL_SENDTO = &H0009
	CSIDL_BITBUCKET = &H000a
	CSIDL_STARTMENU = &H000b
	CSIDL_MYDOCUMENTS = &H000c
	CSIDL_MYMUSIC = &H000d
	CSIDL_MYVIDEO = &H000e
	CSIDL_DESKTOPDIRECTORY = &H0010
	CSIDL_DRIVES = &H0011
	CSIDL_NETWORK = &H0012
	CSIDL_NETHOOD = &H0013
	CSIDL_FONTS = &H0014
	CSIDL_TEMPLATES = &H0015
	CSIDL_COMMON_STARTMENU = &H0016
	CSIDL_COMMON_PROGRAMS = &H0017
	CSIDL_COMMON_STARTUP = &H0018
	CSIDL_COMMON_DESKTOPDIRECTORY = &H0019
	CSIDL_APPDATA = &H001a
	CSIDL_PRINTHOOD = &H001b
	CSIDL_LOCAL_APPDATA = &H001c
	CSIDL_ALTSTARTUP = &H001d
	CSIDL_COMMON_ALTSTARTUP = &H001e
	CSIDL_COMMON_FAVORITES = &H001f
	CSIDL_INTERNET_CACHE = &H0020
	CSIDL_COOKIES = &H0021
	CSIDL_HISTORY = &H0022
	CSIDL_COMMON_APPDATA = &H0023
	CSIDL_WINDOWS = &H0024
	CSIDL_SYSTEM = &H0025
	CSIDL_PROGRAM_FILES = &H0026
	CSIDL_MYPICTURES = &H0027
	CSIDL_PROFILE = &H0028
	CSIDL_SYSTEMX86 = &H0029
	CSIDL_PROGRAM_FILESX86 = &H002a
	CSIDL_PROGRAM_FILES_COMMON = &H002b
	CSIDL_PROGRAM_FILES_COMMONX86 = &H002c
	CSIDL_COMMON_TEMPLATES = &H002d
	CSIDL_COMMON_DOCUMENTS = &H002e
	CSIDL_COMMON_ADMINTOOLS = &H002f
	CSIDL_ADMINTOOLS = &H0030
	CSIDL_CONNECTIONS = &H0031
	CSIDL_COMMON_MUSIC = &H0035
	CSIDL_COMMON_PICTURES = &H0036
	CSIDL_COMMON_VIDEO = &H0037
	CSIDL_RESOURCES = &H0038
	CSIDL_RESOURCES_LOCALIZED = &H0039
	CSIDL_COMMON_OEM_LINKS = &H003a
	CSIDL_CDBURN_AREA = &H003b
	CSIDL_COMPUTERSNEARME = &H003d
	CSIDL_FLAG_PER_USER_INIT = &H0800
	CSIDL_FLAG_NO_ALIAS = &H1000
	CSIDL_FLAG_CREATE = &H8000&
	CSIDL_FLAG_DONT_VERIFY = &H4000
	CSIDL_FLAG_MASK = &HFF00&
End Enum

Public Type DVTARGETDEVICE
    tdSize As Long
    tdDriverNameOffset As Integer
    tdDeviceNameOffset As Integer
    tdPortNameOffset As Integer
    tdExtDevModeOffset As Integer
    tdData(0) As Byte
End Type

Public Type FORMATETC
	cfFormat As Integer
    pDVTARGETDEVICE As LongPtr
    dwAspect As DVASPECT
    lIndex As Long
    tymed As TYMED
End Type

Public Type STGMEDIUM
    tymed As TYMED
	data As LongPtr
	pUnkForRelease As LongPtr
End Type
Public Enum DVASPECT
    DVASPECT_CONTENT = 1
    DVASPECT_THUMBNAIL = 2
    DVASPECT_ICON = 4
    DVASPECT_DOCPRINT = 8
    DVASPECT_OPAQUE = 16
    DVASPECT_TRANSPARENT = 32
End Enum

Public Enum TYMED
    TYMED_HGLOBAL = 1
    TYMED_FILE = 2
    TYMED_ISTREAM = 4
    TYMED_ISTORAGE = 8
    TYMED_GDI = 16
    TYMED_MFPICT = 32
    TYMED_ENHMF = 64
    TYMED_NULL = 0
End Enum
Public Enum ADVF
    ADVF_NODATA = 1
    ADVF_PRIMEFIRST = 2
    ADVF_ONLYONCE = 4
    ADVF_DATAONSTOP = 64
    ADVFCACHE_NOHANDLER = 8
    ADVFCACHE_FORCEBUILTIN = 16
    ADVFCACHE_ONSAVE = 32
End Enum

Public Type STATDATA
	FORMATETC As FORMATETC
	grfAdvf As ADVF
	pIAdviseSink As IAdviseSink
	dwConnection As Long
End Type

Public Enum DATADIR
	DATADIR_GET = 1
	DATADIR_SET = 2
End Enum

Public Type OVERLAPPED
    Internal As LongPtr
    InternalHigh As LongPtr
    #If Win64 Then
    OffsetsOrPtr As LongLong
    #Else
    OffsetOrPtr As Long
    OffsetHigh As Long
    #End If
    hEvent As LongPtr
End Type

Public Type POINT
	x As Long
    y As Long
End Type
'Alias POINTL As POINT
Public Type POINTL
    x As Long
    y As Long
End Type
Public Type POINTF
	x As Single
	y As Single
End Type
Public Type POINTS 'short
    x As Integer
    y As Integer
End Type

Public Type SIZE
    cx As Long
    cy As Long
End Type
'Alias SIZEL As SIZE
Public Type SIZEL
    cx As Long
    cy As Long
End Type

Public Type MSG
    hWnd        As LongPtr
    message     As Long
    wParam      As LongPtr
    lParam      As LongPtr
    Time        As Long
    PT          As POINT
End Type


Public Type SHDRAGIMAGE
	sizeDragImage As SIZE
	ptOffset As POINT
	hbmpDragImage As LongPtr
	crColorKey As Long
End Type

Public Enum DSH_FLAGS
	DSH_ALLOWDROPDESCRIPTIONTEXT = &H0001 ' Allow text specified in DropDescription to be displayed on drag image
End Enum

Public Enum DROPEFFECTS
	DROPEFFECT_NONE = 0
	DROPEFFECT_COPY = 1
	DROPEFFECT_MOVE = 2
	DROPEFFECT_LINK = 4
	DROPEFFECT_SCROLL = &H80000000
End Enum

Public Enum DROPIMAGETYPE
	DROPIMAGE_INVALID = -1
	DROPIMAGE_NONE = 0
	DROPIMAGE_COPY = 1
	DROPIMAGE_MOVE = 2
	DROPIMAGE_LINK = 4
	DROPIMAGE_LABEL = 6
	DROPIMAGE_WARNING = 7
	DROPIMAGE_NOIMAGE = 8
End Enum
Public Type DROPDESCRIPTION
	type As DROPIMAGETYPE
	szMessage(0 To 259) As Integer
	szInsert(0 To 259) As Integer
End Type
#If WINDEVLIB_LITE Then
Public Enum DV_ERROR
	DV_E_FORMATETC = &H80040064
	DV_E_DVTARGETDEVICE = &H80040065
	DV_E_STGMEDIUM = &H80040066
	DV_E_STATDATA = &H80040067
	DV_E_LINDEX = &H80040068
	DV_E_TYMED = &H80040069
	DV_E_CLIPFORMAT = &H8004006A
	DV_E_DVASPECT = &H8004006B
	DV_E_DVTARGETDEVICE_SIZE = &H8004006C
	DV_E_NOIVIEWOBJECT = &H8004006D
End Enum
#End If

Public Enum ReparsePointTags
    IO_REPARSE_TAG_MOUNT_POINT = (&HA0000003)
    IO_REPARSE_TAG_HSM = (&HC0000004)
    IO_REPARSE_TAG_HSM2 = (&H80000006)
    IO_REPARSE_TAG_SIS = (&H80000007)
    IO_REPARSE_TAG_WIM = (&H80000008)
    IO_REPARSE_TAG_CSV = (&H80000009)
    IO_REPARSE_TAG_DFS = (&H8000000A)
    IO_REPARSE_TAG_SYMLINK = (&HA000000C)
    IO_REPARSE_TAG_DFSR = (&H80000012)
    IO_REPARSE_TAG_DEDUP = (&H80000013)
    IO_REPARSE_TAG_NFS = (&H80000014)
    IO_REPARSE_TAG_FILE_PLACEHOLDER = (&H80000015)
    IO_REPARSE_TAG_WOF = (&H80000017)
    IO_REPARSE_TAG_WCI = (&H80000018)
    IO_REPARSE_TAG_WCI_1 = (&H90001018)
    IO_REPARSE_TAG_GLOBAL_REPARSE = (&HA0000019)
    IO_REPARSE_TAG_CLOUD = (&H9000001A)
    IO_REPARSE_TAG_CLOUD_1 = (&H9000101A)
    IO_REPARSE_TAG_CLOUD_2 = (&H9000201A)
    IO_REPARSE_TAG_CLOUD_3 = (&H9000301A)
    IO_REPARSE_TAG_CLOUD_4 = (&H9000401A)
    IO_REPARSE_TAG_CLOUD_5 = (&H9000501A)
    IO_REPARSE_TAG_CLOUD_6 = (&H9000601A)
    IO_REPARSE_TAG_CLOUD_7 = (&H9000701A)
    IO_REPARSE_TAG_CLOUD_8 = (&H9000801A)
    IO_REPARSE_TAG_CLOUD_9 = (&H9000901A)
    IO_REPARSE_TAG_CLOUD_A = (&H9000A01A)
    IO_REPARSE_TAG_CLOUD_B = (&H9000B01A)
    IO_REPARSE_TAG_CLOUD_C = (&H9000C01A)
    IO_REPARSE_TAG_CLOUD_D = (&H9000D01A)
    IO_REPARSE_TAG_CLOUD_E = (&H9000E01A)
    IO_REPARSE_TAG_CLOUD_F = (&H9000F01A)
    IO_REPARSE_TAG_CLOUD_MASK = (&H0000F000&)
    IO_REPARSE_TAG_APPEXECLINK = (&H8000001B)
    IO_REPARSE_TAG_PROJFS = (&H9000001C)
    IO_REPARSE_TAG_STORAGE_SYNC = (&H8000001E)
    IO_REPARSE_TAG_WCI_TOMBSTONE = (&HA000001F)
    IO_REPARSE_TAG_UNHANDLED = (&H80000020)
    IO_REPARSE_TAG_ONEDRIVE = (&H80000021)
    IO_REPARSE_TAG_PROJFS_TOMBSTONE = (&HA0000022)
    IO_REPARSE_TAG_AF_UNIX = (&H80000023)
    IO_REPARSE_TAG_WCI_LINK = (&HA0000027)
    IO_REPARSE_TAG_WCI_LINK_1 = (&HA0001027)
    IO_REPARSE_TAG_DATALESS_CIM = (&HA0000028)
End Enum

Public Enum CreateFileDisposition
    CREATE_NEW = 1
    CREATE_ALWAYS = 2
    OPEN_EXISTING = 3
    OPEN_ALWAYS = 4
    TRUNCATE_EXISTING = 5
End Enum

Public Enum FILE_ATTRIBUTES
    INVALID_FILE_ATTRIBUTES = -1
    FILE_ATTRIBUTE_READONLY = &H00000001
    FILE_ATTRIBUTE_HIDDEN = &H00000002
    FILE_ATTRIBUTE_SYSTEM = &H00000004
    FILE_ATTRIBUTE_DIRECTORY = &H00000010 'Read only
    FILE_ATTRIBUTE_ARCHIVE = &H00000020
    FILE_ATTRIBUTE_DEVICE = &H00000040
    FILE_ATTRIBUTE_NORMAL = &H00000080
    FILE_ATTRIBUTE_TEMPORARY = &H00000100
    FILE_ATTRIBUTE_SPARSE_FILE = &H00000200 'Read only
    FILE_ATTRIBUTE_REPARSE_POINT = &H00000400 'Read only
    FILE_ATTRIBUTE_COMPRESSED = &H00000800
    FILE_ATTRIBUTE_OFFLINE = &H00001000
    FILE_ATTRIBUTE_NOT_CONTENT_INDEXED = &H00002000
    FILE_ATTRIBUTE_ENCRYPTED = &H00004000
    FILE_ATTRIBUTE_INTEGRITY_STREAM = &H00008000&
    FILE_ATTRIBUTE_VIRTUAL = &H00010000
    FILE_ATTRIBUTE_NO_SCRUB_DATA = &H00020000
    FILE_ATTRIBUTE_EA = &H00040000
    FILE_ATTRIBUTE_RECALL_ON_OPEN = &H00040000
    FILE_ATTRIBUTE_PINNED = &H000080000
    FILE_ATTRIBUTE_UNPINNED = &H00100000
    FILE_ATTRIBUTE_RECALL_ON_DATA_ACCESS = &H400000
    FILE_ATTRIBUTE_STRICTLY_SEQUENTIAL = &H20000000
End Enum
Public Type WIN32_FIND_DATAA
	dwFileAttributes As FILE_ATTRIBUTES
	ftCreationTime As FILETIME
	ftLastAccessTime As FILETIME
	ftLastWriteTime As FILETIME
	nFileSizeHigh As Long
	nFileSizeLow As Long
	dwReserved0 As ReparsePointTags
	dwReserved1 As Long
	cFileName(0 To 259) As Byte
	cAlternateFileName(0 To 13) As Byte
End Type
Public Type WIN32_FIND_DATAW
	dwFileAttributes As FILE_ATTRIBUTES
	ftCreationTime As FILETIME
	ftLastAccessTime As FILETIME
	ftLastWriteTime As FILETIME
	nFileSizeHigh As Long
	nFileSizeLow As Long
	dwReserved0 As Long
	dwReserved1 As Long
	cFileName(0 To (MAX_PATH - 1)) As Integer
	cAlternateFileName(0 To 13) As Integer
End Type
'Alias WIN32_FIND_DATA As WIN32_FIND_DATAW
Public Type WIN32_FIND_DATA
	dwFileAttributes As FILE_ATTRIBUTES
	ftCreationTime As FILETIME
	ftLastAccessTime As FILETIME
	ftLastWriteTime As FILETIME
	nFileSizeHigh As Long
	nFileSizeLow As Long
	dwReserved0 As Long
	dwReserved1 As Long
	cFileName(0 To (MAX_PATH - 1)) As Integer
	cAlternateFileName(0 To 13) As Integer
End Type

Public Type LUID
    lowPart As Long
    highPart As Long
End Type

Public Enum SLGP_FLAGS
	SLGP_SHORTPATH = &H0001
	SLGP_UNCPRIORITY = &H0002
	SLGP_RAWPATH = &H0004
	SLGP_RELATIVEPRIORITY = &H0008
End Enum
Public Enum SLR_FLAGS
	SLR_NONE = &H0
	SLR_NO_UI = &H0001 ' don't post any UI durring the resolve operation, not msgs are pumped
	SLR_ANY_MATCH = &H0002 ' no longer used
	SLR_UPDATE = &H0004 ' save the link back to it's file if the track made it dirty
	SLR_NOUPDATE = &H0008
	SLR_NOSEARCH = &H0010 ' don't execute the search heuristics
	SLR_NOTRACK = &H0020 ' don't use NT5 object ID to track the link
	SLR_NOLINKINFO = &H0040 ' don't use the net and volume relative info
	SLR_INVOKE_MSI = &H0080 ' if we have a darwin link, then call msi to fault in the applicaion
	SLR_NO_UI_WITH_MSG_PUMP = &H0101 ' SLR_NO_UI + requires an enable modeless site or HWND
	SLR_OFFER_DELETE_WITHOUT_FILE = &H0200 ' offer the option to delete when unable to resolve, even if the shortcut is not stored in a file
	SLR_KNOWNFOLDER = &H0400 ' update known folder information if path changes due to folder redirection
	SLR_MACHINE_IN_LOCAL_TARGET = &H0800 ' resolve machine name in UNC targets pointing to local machine (used with SLDF_KEEP_LOCAL_IDLIST_FOR_UNC_TARGET)
	SLR_UPDATE_MACHINE_AND_SID = &H1000 ' update machine GUID and user SID if necessary
	SLR_NO_OBJECT_ID = &H2000 ' don't use the Volume Id and Object Id to locate the file.
End Enum

Public Enum CLSCTX
	CLSCTX_INPROC_SERVER = &H1
	CLSCTX_INPROC_HANDLER = &H2
	CLSCTX_LOCAL_SERVER = &H4
	CLSCTX_INPROC_SERVER16 = &H8
	CLSCTX_REMOTE_SERVER = &H10
	CLSCTX_INPROC_HANDLER16 = &H20
	CLSCTX_INPROC_SERVERX86 = &H40
	CLSCTX_INPROC_HANDLERX86 = &H80
	CLSCTX_ESERVER_HANDLER = &H100
	CLSCTX_RESERVED = &H200
	CLSCTX_NO_CODE_DOWNLOAD = &H400
	CLSCTX_NO_WX86_TRANSLATION = &H800
	CLSCTX_NO_CUSTOM_MARSHAL = &H1000
	CLSCTX_ENABLE_CODE_DOWNLOAD = &H2000
	CLSCTX_NO_FAILURE_LOG = &H4000
	CLSCTX_DISABLE_AAA = &H8000&
	CLSCTX_ENABLE_AAA = &H10000
	CLSCTX_FROM_DEFAULT_CONTEXT = &H20000
	CLSCTX_ACTIVATE_32_BIT_SERVER = &H40000
	CLSCTX_ACTIVATE_64_BIT_SERVER = &H80000
	CLSCTX_ENABLE_CLOAKING = &H100000
	CLSCTX_APPCONTAINER = &H400000
	CLSCTX_ACTIVATE_AAA_AS_IU = &H800000
	CLSCTX_PS_DLL = &H80000000
    CLSCTX_INPROC = CLSCTX_INPROC_SERVER Or CLSCTX_INPROC_HANDLER
    CLSCTX_SERVER = CLSCTX_INPROC_SERVER Or CLSCTX_LOCAL_SERVER Or CLSCTX_REMOTE_SERVER
    CLSCTX_ALL = CLSCTX_SERVER Or CLSCTX_INPROC_HANDLER
End Enum
Public Enum STGM
	STGM_DIRECT = &H00000000
	STGM_TRANSACTED = &H00010000
	STGM_SIMPLE = &H08000000
	STGM_READ = &H00000000
	STGM_WRITE = &H00000001
	STGM_READWRITE = &H00000002
	STGM_SHARE_DENY_NONE = &H00000040
	STGM_SHARE_DENY_READ = &H00000030
	STGM_SHARE_DENY_WRITE = &H00000020
	STGM_SHARE_EXCLUSIVE = &H00000010
	STGM_PRIORITY = &H00040000
	STGM_DELETEONRELEASE = &H04000000
	STGM_NOSCRATCH = &H00100000
	STGM_CREATE = &H00001000
	STGM_CONVERT = &H00020000
	STGM_FAILIFTHERE = &H00000000
	STGM_NOSNAPSHOT = &H00200000
	STGM_DIRECT_SWMR = &H00400000
End Enum

Public Enum BIND_FLAGS
	BIND_MAYBOTHERUSER = 1
	BIND_JUSTTESTEXISTENCE = 2
End Enum
Public Type BIND_OPTS
	cbStruct As Long '  sizeof(BIND_OPTS)
	grfFlags As BIND_FLAGS
	grfMode As STGM
	dwTickCountDeadline As Long
End Type
Public Type BIND_OPTS2
	cbStruct As Long '  sizeof(BIND_OPTS2)
	grfFlags As BIND_FLAGS
	grfMode As STGM
	dwTickCountDeadline As Long
	dwTrackFlags As Long
	dwClassContext As Long
	locale As Long
	pServerInfo As LongPtr
End Type

Public Enum SHCONTF
	SHCONTF_CHECKING_FOR_CHILDREN = &H00010
	SHCONTF_FOLDERS = &H0020
	SHCONTF_NONFOLDERS = &H0040
	SHCONTF_INCLUDEHIDDEN = &H0080
	SHCONTF_INIT_ON_FIRST_NEXT = &H0100
	SHCONTF_NETPRINTERSRCH = &H0200
	SHCONTF_SHAREABLE = &H0400
	SHCONTF_STORAGE = &H0800
	SHCONTF_NAVIGATION_ENUM = &H01000
	SHCONTF_FASTITEMS = &H02000
	SHCONTF_FLATLIST = &H04000
	SHCONTF_ENABLE_ASYNC = &H08000&
	SHCONTF_INCLUDESUPERHIDDEN = &H10000
End Enum
Public Enum SFGAOF
    SFGAO_CANCOPY = DROPEFFECT_COPY  ' Objects can be copied    (0x1)
    SFGAO_CANMOVE = DROPEFFECT_MOVE  ' Objects can be moved     (0x2)
    SFGAO_CANLINK = DROPEFFECT_LINK  ' Objects can be linked    (0x4)
    SFGAO_STORAGE = &H00000008  ' supports BindToObject(IID_IStorage)
    SFGAO_CANRENAME = &H00000010  ' Objects can be renamed
    SFGAO_CANDELETE = &H00000020  ' Objects can be deleted
    SFGAO_HASPROPSHEET = &H00000040  ' Objects have property sheets
    SFGAO_DROPTARGET = &H00000100  ' Objects are drop target
    SFGAO_CAPABILITYMASK = &H00000177
    SFGAO_PLACEHOLDER = &H00000800  ' File or folder is not fully present and recalled on open or access
    SFGAO_SYSTEM = &H00001000  ' System object
    SFGAO_ENCRYPTED = &H00002000  ' Object is encrypted (use alt color)
    SFGAO_ISSLOW = &H00004000  ' 'Slow' object
    SFGAO_GHOSTED = &H00008000&  ' Ghosted icon
    SFGAO_LINK = &H00010000  ' Shortcut (link)
    SFGAO_SHARE = &H00020000  ' Shared
    SFGAO_READONLY = &H00040000  ' Read-only
    SFGAO_HIDDEN = &H00080000  ' Hidden object
    SFGAO_DISPLAYATTRMASK = &H000FC000
    SFGAO_FILESYSANCESTOR = &H10000000  ' May contain children with SFGAO_FILESYSTEM
    SFGAO_FOLDER = &H20000000  ' Support BindToObject(IID_IShellFolder)
    SFGAO_FILESYSTEM = &H40000000  ' Is a win32 file system object (file/folder/root)
    SFGAO_HASSUBFOLDER = &H80000000  ' May contain children with SFGAO_FOLDER (may be slow)
    SFGAO_CONTENTSMASK = &H80000000
    SFGAO_VALIDATE = &H01000000  ' Invalidate cached information (may be slow)
    SFGAO_REMOVABLE = &H02000000  ' Is this removeable media?
    SFGAO_COMPRESSED = &H04000000  ' Object is compressed (use alt color)
    SFGAO_BROWSABLE = &H08000000  ' Supports IShellFolder, but only implements CreateViewObject() (non-folder view)
    SFGAO_NONENUMERATED = &H00100000  ' Is a non-enumerated object (should be hidden)
    SFGAO_NEWCONTENT = &H00200000  ' Should show bold in explorer tree
    SFGAO_CANMONIKER = &H00400000  ' Obsolete
    SFGAO_HASSTORAGE = &H00400000  ' Obsolete
    SFGAO_STREAM = &H00400000  ' Supports BindToObject(IID_IStream)
    SFGAO_STORAGEANCESTOR = &H00800000  ' May contain children with SFGAO_STORAGE or SFGAO_STREAM
    SFGAO_STORAGECAPMASK = &H70C50008  ' For determining storage capabilities, ie for open/save semantics
    SFGAO_PKEYSFGAOMASK = &H81044000  ' Attributes that are masked out for PKEY_SFGAOFlags because they are considered to cause slow calculations or lack context (SFGAO_VALIDATE | SFGAO_ISSLOW | SFGAO_HASSUBFOLDER and others)
End Enum
Public Enum SHGDNF
	SHGDN_NORMAL = 0
	SHGDN_INFOLDER = 1
    SHGDN_FOREDITING = &H1000
	SHGDN_FORADDRESSBAR = &H4000
	SHGDN_FORPARSING = &H8000&
End Enum
Public Enum ESTRRET
	STRRET_WSTR = 0
	STRRET_OFFSET = 1
	STRRET_CSTR = 2
End Enum
Public Type STRRET
	uType As ESTRRET
	cStr(0 To 259) As Byte
End Type
Public Enum SHCOLSTATEF
	SHCOLSTATE_TYPE_STR = &H00000001
	SHCOLSTATE_TYPE_INT = &H00000002
	SHCOLSTATE_TYPE_DATE = &H00000003
	SHCOLSTATE_TYPEMASK = &H0000000F
	SHCOLSTATE_ONBYDEFAULT = &H00000010
	SHCOLSTATE_SLOW = &H00000020
	SHCOLSTATE_EXTENDED = &H00000040
	SHCOLSTATE_SECONDARYUI = &H00000080
	SHCOLSTATE_HIDDEN = &H00000100
	SHCOLSTATE_PREFER_VARCMP = &H00000200
	SHCOLSTATE_PREFER_FMTCMP = &H00000400
	SHCOLSTATE_NOSORTBYFOLDERNESS = &H00000800
	SHCOLSTATE_VIEWONLY = &H00010000
	SHCOLSTATE_BATCHREAD = &H00020000
	SHCOLSTATE_NO_GROUPBY = &H00040000
	SHCOLSTATE_FIXED_WIDTH = &H00001000
	SHCOLSTATE_NODPISCALE = &H00002000
	SHCOLSTATE_FIXED_RATIO = &H00004000
	SHCOLSTATE_DISPLAYMASK = &H0000F000&
End Enum
Public Type SHCOLUMNID
	fmtid As UUID
	pid As Long
End Type
Public Type SHCOLUMNINIT
	dwFlags As Long ' initialization flags
	dwReserved As Long ' reserved for future use.
	wszFolder(0 To 519) As Byte ' fully qualified folder path (or empty if multiple folders)
End Type
[PackingAlignment(1)]
Public Type SHCOLUMNINFO
	scid As SHCOLUMNID ' OUT the unique identifier of this column
	vt As Integer ' OUT the native type of the data returned
	fmt As Long ' OUT this listview format (LVCFMT_LEFT, usually)
	cChars As Long ' OUT the default width of the column, in characters
	csFlags As SHCOLSTATEF ' OUT SHCOLSTATE flags
	wszTitle(0 To 159) As Byte ' OUT the title of the column
	wszDescription(0 To 255) As Byte ' OUT full description of this column
End Type
[PackingAlignment(8)]
Public Type SHCOLUMNDATA
	 dwFlags As Long ' combination of SHCDF_ flags.
	 dwFileAttributes As Long ' file attributes.
	 dwReserved As Long ' reserved for future use.
	 pwszExt As LongPtr ' address of file name extension
	 wszFile(0 To 519) As Byte ' Absolute path of file.
End Type

Public Type SHELLDETAILS
	fmt As Long ' LVCFMT_* value (header only)
	cxChar As Long ' Number of "average" characters (header only)
	str As STRRET ' String information
End Type
Public Type EXTRASEARCH
	guidSearch As UUID
	wszFriendlyName(0 To 159) As Byte
	wszUrl(0 To 4095) As Byte
End Type

Public Enum SVUIA_STATUS
	SVUIA_DEACTIVATE = 0
	SVUIA_ACTIVATE_NOFOCUS = 1
	SVUIA_ACTIVATE_FOCUS = 2
	SVUIA_INPLACEACTIVATE = 3 ' new flag for IShellView2
End Enum
Public Enum FOLDERVIEWMODE
	FVM_AUTO = -1
	FVM_FIRST = 1
	FVM_ICON = 1
	FVM_SMALLICON = 2
	FVM_LIST = 3
	FVM_DETAILS = 4
	FVM_THUMBNAIL = 5
	FVM_TILE = 6
	FVM_THUMBSTRIP = 7
	FVM_CONTENT = 8
	FVM_LAST = 8
End Enum
Public Enum FOLDERFLAGS
	FWF_NONE = 0
	FWF_AUTOARRANGE = &H1
	FWF_ABBREVIATEDNAMES = &H2
	FWF_SNAPTOGRID = &H4
	FWF_OWNERDATA = &H8
	FWF_BESTFITWINDOW = &H10
	FWF_DESKTOP = &H20
	FWF_SINGLESEL = &H40
	FWF_NOSUBFOLDERS = &H80
	FWF_TRANSPARENT = &H100
	FWF_NOCLIENTEDGE = &H200
	FWF_NOSCROLL = &H400
	FWF_ALIGNLEFT = &H800
	FWF_NOICONS = &H1000
	FWF_SHOWSELALWAYS = &H2000
	FWF_NOVISIBLE = &H4000
	FWF_SINGLECLICKACTIVATE = &H8000&
	FWF_NOWEBVIEW = &H10000
	FWF_HIDEFILENAMES = &H20000
	FWF_CHECKSELECT = &H40000
	FWF_NOENUMREFRESH = &H80000
	FWF_NOGROUPING = &H100000
	FWF_FULLROWSELECT = &H200000
	FWF_NOFILTERS = &H400000
	FWF_NOCOLUMNHEADER = &H800000
	FWF_NOHEADERINALLVIEWS = &H1000000
	FWF_EXTENDEDTILES = &H2000000
	FWF_TRICHECKSELECT = &H4000000
	FWF_AUTOCHECKSELECT = &H8000000
	FWF_NOBROWSERVIEWSTATE = &H10000000
	FWF_SUBSETGROUPS = &H20000000
	FWF_USESEARCHFOLDER = &H40000000
	FWF_ALLOWRTLREADING = &H80000000
End Enum

Public Enum BO_Flags
	SBSP_DEFBROWSER = &H0000
	SBSP_SAMEBROWSER = &H0001
	SBSP_NEWBROWSER = &H0002
	SBSP_DEFMODE = &H0000
	SBSP_OPENMODE = &H0010
	SBSP_EXPLOREMODE = &H0020
	SBSP_HELPMODE = &H0040
	SBSP_NOTRANSFERHIST = &H0080
	SBSP_ABSOLUTE = &H0000
	SBSP_RELATIVE = &H1000
	SBSP_PARENT = &H2000
	SBSP_NAVIGATEBACK = &H4000
	SBSP_NAVIGATEFORWARD = &H8000&
	SBSP_ALLOW_AUTONAVIGATE = &H10000
	SBSP_KEEPSAMETEMPLATE = &H20000
	SBSP_KEEPWORDWHEELTEXT = &H40000
	SBSP_ACTIVATE_NOFOCUS = &H80000
	SBSP_CREATENOHISTORY = &H100000
	SBSP_PLAYNOSOUND = &H200000
	SBSP_CALLERUNTRUSTED = &H00800000
	SBSP_TRUSTFIRSTDOWNLOAD = &H01000000
	SBSP_UNTRUSTEDFORDOWNLOAD = &H02000000
	SBSP_NOAUTOSELECT = &H04000000
	SBSP_WRITENOHISTORY = &H08000000
	SBSP_TRUSTEDFORACTIVEX = &H10000000
	SBSP_REDIRECT = &H40000000
	SBSP_INITIATEDBYHLINKFRAME = &H80000000
End Enum
Public Enum GCW_IDs
	FCW_STATUS = &H0001
	FCW_TOOLBAR = &H0002
	FCW_TREE = &H0003
	FCW_VIEW = &H0004
	FCW_BROWSER = &H0005
	FCW_INTERNETBAR = &H0006
	FCW_MENUBAR = &H0007
	FCW_PROGRESS = &H0008
	FCW_ADDRESSBAR = &H0009
	FCW_TOOLBAND = &H000a
	FCW_LINKSBAR = &H000b
End Enum
Public Enum STI_Flags
	FCT_MERGE = &H0001
	FCT_CONFIGABLE = &H0002
	FCT_ADDTOEND = &H0004
End Enum
Public Type FOLDERSETTINGS
	ViewMode As FOLDERVIEWMODE
	fFlags As FOLDERFLAGS
End Type
Public Enum SVSIF
	SVSI_DESELECT = &H0000
	SVSI_SELECT = &H0001
	SVSI_EDIT = &H0003 ' includes select
	SVSI_DESELECTOTHERS = &H0004
	SVSI_ENSUREVISIBLE = &H0008
	SVSI_FOCUSED = &H0010
	SVSI_TRANSLATEPT = &H0020
	SVSI_SELECTIONMARK = &H40
	SVSI_POSITIONITEM = &H80
	SVSI_CHECK = &H100
	SVSI_CHECK2 = &H200
	SVSI_KEYBOARDSELECT = &H401
	SVSI_NOTAKEFOCUS = &H40000000
End Enum
Public Enum SV2GV_Flags
	SV2GV_CURRENTVIEW = -1
	SV2GV_DEFAULTVIEW = -2
End Enum
Public Enum SVGIO
	SVGIO_BACKGROUND = &H00000000
	SVGIO_SELECTION = &H00000001
	SVGIO_ALLVIEW = &H00000002
	SVGIO_CHECKED = &H3
	SVGIO_TYPE_MASK = &Hf
	SVGIO_FLAG_VIEWORDER = &H80000000
End Enum
Public Type SV2CVW2_PARAMS
	cbSize As Long
	psvPrev As IShellView
	pFOLDERSETTINGS As LongPtr
	psbOwner As IShellBrowser
	prcView As LongPtr
	pvUUID As LongPtr
	hwndView As LongPtr
End Type
Public Enum SV3CVW3_FLAGS
	SV3CVW3_DEFAULT = &H00000000
	SV3CVW3_NONINTERACTIVE = &H00000001 ' Instead of bringing up UI, fail silently.
	SV3CVW3_FORCEVIEWMODE = &H00000002 ' Prefer view mode set by CreateViewWindow3 over saved view state
	SV3CVW3_FORCEFOLDERFLAGS = &H00000004 ' Prefer folder flags set by CreateViewWindow3 over saved view state
End Enum
Public Enum SIGDN
	SIGDN_NORMALDISPLAY = &H00000000
	SIGDN_PARENTRELATIVEPARSING = &H80018001
	SIGDN_DESKTOPABSOLUTEPARSING = &H80028000
	SIGDN_PARENTRELATIVEEDITING = &H80031001
	SIGDN_DESKTOPABSOLUTEEDITING = &H8004c000
	SIGDN_FILESYSPATH = &H80058000
	SIGDN_URL = &H80068000
	SIGDN_PARENTRELATIVEFORADDRESSBAR = &H8007c001
	SIGDN_PARENTRELATIVE = &H80080001
	SIGDN_PARENTRELATIVEFORUI = &H80094001
End Enum
Public Enum SICHINTF
	SICHINT_DISPLAY = &H00000000
	SICHINT_ALLFIELDS = &H80000000
	SICHINT_CANONICAL = &H10000000
	SICHINT_TEST_FILESYSPATH_IF_NOT_EQUAL = &H20000000
End Enum
Public Enum SIIGBF
	SIIGBF_RESIZETOFIT = &H00
	SIIGBF_BIGGERSIZEOK = &H01
	SIIGBF_MEMORYONLY = &H02
	SIIGBF_ICONONLY = &H04
	SIIGBF_THUMBNAILONLY = &H08
	SIIGBF_INCACHEONLY = &H10
	' Windows 8+
	SIIGBF_CROPTOSQUARE = &H20
	SIIGBF_WIDETHUMBNAILS = &H40
	SIIGBF_ICONBACKGROUND = &H80
	SIIGBF_SCALEUP = &H100
End Enum
Public Enum GETPROPERTYSTOREFLAGS
	GPS_DEFAULT = 0
	GPS_HANDLERPROPERTIESONLY = &H1
	GPS_READWRITE = &H2
	GPS_TEMPORARY = &H4
	GPS_FASTPROPERTIESONLY = &H8
	GPS_OPENSLOWITEM = &H10
	GPS_DELAYCREATION = &H20
	GPS_BESTEFFORT = &H40
	GPS_NO_OPLOCK = &H80
	GPS_PREFERQUERYPROPERTIES = &H100
	GPS_MASK_VALID = &H1ff
	GPS_EXTRINSICPROPERTIES = &H00000200
	GPS_EXTRINSICPROPERTIESONLY = &H00000400
End Enum
Public Enum ROTFLAGS
	ROTFLAGS_REGISTRATIONKEEPSALIVE = &H1
	ROTFLAGS_ALLOWANYCLIENT = &H2
End Enum
Public Enum PROPDESC_ENUMFILTER
	PDEF_ALL = 0 ' All properties in system
	PDEF_SYSTEM = 1 ' Only system properties
	PDEF_NONSYSTEM = 2 ' Only non-system properties
	PDEF_VIEWABLE = 3 ' Only viewable properties
	PDEF_QUERYABLE = 4 ' Deprecated
	PDEF_INFULLTEXTQUERY = 5 ' Deprecated
	PDEF_COLUMN = 6 ' Only properties that are columns
End Enum
Public Enum PROPDESC_COLUMNINDEX_TYPE
	PDCIT_NONE = 0
	PDCIT_ONDISK = 1
	PDCIT_INMEMORY = 2
	PDCIT_ONDEMAND = 3
	PDCIT_ONDISKALL = 4
	PDCIT_ONDISKVECTOR = 5
End Enum
Public Enum PROPDESC_SEARCHINFO_FLAGS
	PDSIF_DEFAULT = &H00000000
	PDSIF_ININVERTEDINDEX = &H00000001
	PDSIF_ISCOLUMN = &H00000002
	PDSIF_ISCOLUMNSPARSE = &H00000004
	PDSIF_ALWAYSINCLUDE = &H00000008
End Enum
Public Enum CONDITION_OPERATION
	COP_IMPLICIT = 0
	COP_EQUAL = 1
	COP_NOTEQUAL = 2
	COP_LESSTHAN = 3
	COP_GREATERTHAN = 4
	COP_LESSTHANOREQUAL = 5
	COP_GREATERTHANOREQUAL = 6
	COP_VALUE_STARTSWITH = 7
	COP_VALUE_ENDSWITH = 8
	COP_VALUE_CONTAINS = 9
	COP_VALUE_NOTCONTAINS = 10
	COP_DOSWILDCARDS = 11
	COP_WORD_EQUAL = 12
	COP_WORD_STARTSWITH = 13
	COP_APPLICATION_SPECIFIC = 14
End Enum
Public Enum PROPDESC_CONDITION_TYPE
	PDCOT_NONE = 0
	PDCOT_STRING = 1
	PDCOT_SIZE = 2
	PDCOT_DATETIME = 3
	PDCOT_Boolean = 4
	PDCOT_NUMBER = 5
End Enum
Public Enum PROPDESC_AGGREGATION_TYPE
	PDAT_DEFAULT = 0 ' Display "multiple-values"
	PDAT_FIRST = 1 ' Display first property value in the selection.
	PDAT_SUM = 2 ' Display the numerical sum of the values. This is never returned for VT_LPWSTR, VT_BOOL, and VT_FILETIME types.
	PDAT_AVERAGE = 3 ' Display the numerical average of the values. This is never returned for VT_LPWSTR, VT_BOOL, and VT_FILETIME types.
	PDAT_DATERANGE = 4 ' Display the date range of the values. This is only returned for VT_FILETIME types.
	PDAT_UNION = 5 ' Display values as union of all values. The order is undefined.
	PDAT_MAX = 6 ' Displays the maximum of all the values.
	PDAT_MIN = 7 ' Displays the minimum of all the values.
End Enum
Public Enum PROPDESC_RELATIVEDESCRIPTION_TYPE
	PDRDT_GENERAL = 0
	PDRDT_DATE = 1
	PDRDT_SIZE = 2
	PDRDT_COUNT = 3
	PDRDT_REVISION = 4
	PDRDT_LENGTH = 5
	PDRDT_DURATION = 6
	PDRDT_SPEED = 7
	PDRDT_RATE = 8
	PDRDT_RATING = 9
	PDRDT_PRIORITY = 10
End Enum
Public Enum PROPDESC_SORTDESCRIPTION
	PDSD_GENERAL = 0
	PDSD_A_Z = 1
	PDSD_LOWEST_HIGHEST = 2
	PDSD_SMALLEST_BIGGEST = 3
	PDSD_OLDEST_NEWEST = 4
End Enum
Public Enum PROPDESC_FORMAT_FLAGS
	PDFF_DEFAULT = &H00000000
	PDFF_PREFIXNAME = &H00000001 ' Prefix the value with the property name
	PDFF_FILENAME = &H00000002 ' Treat as a file name
	PDFF_ALWAYSKB = &H00000004 ' Always format byte sizes as KB
	PDFF_RESERVED_RIGHTTOLEFT = &H00000008 ' Reserved for legacy use.
	PDFF_SHORTTIME = &H00000010 ' Show time as "5:17 pm"
	PDFF_LONGTIME = &H00000020 ' Show time as "5:17:14 pm"
	PDFF_HIDETIME = &H00000040 ' Hide the time-portion of the datetime
	PDFF_SHORTDATE = &H00000080 ' Show date as "3/21/04"
	PDFF_LONGDATE = &H00000100 ' Show date as "Monday, March 21, 2004"
	PDFF_HIDEDATE = &H00000200 ' Hide the date-portion of the datetime
	PDFF_RELATIVEDATE = &H00000400 ' Use friendly date descriptions like "Yesterday"
	PDFF_USEEDITINVITATION = &H00000800 ' Use edit invitation text if failed or empty
	PDFF_READONLY = &H00001000 ' Use readonly format, fill with default text if empty and !PDFF_FAILIFEMPTYPROP
	PDFF_NOAUTOREADINGORDER = &H00002000 ' Don't detect reading order automatically. Useful if you will be converting to Ansi and don't want Unicode reading order characters
End Enum
Public Enum PROPDESC_GROUPING_RANGE
	PDGR_DISCRETE = 0 ' Display individual values
	PDGR_ALPHANUMERIC = 1 ' Display static alphanumeric ranges for values
	PDGR_SIZE = 2 ' Display static size ranges for values
	PDGR_DYNAMIC = 3 ' Display dynamically created ranges for the values
	PDGR_DATE = 4 ' Display month/year groups
	PDGR_PERCENT = 5 ' Display percent buckets
	PDGR_ENUMERATED = 6 ' Display buckets from GetEnumTypeList
End Enum
Public Enum PROPDESC_DISPLAYTYPE
	PDDT_STRING = 0
	PDDT_NUMBER = 1
	PDDT_Boolean = 2
	PDDT_DATETIME = 3
	PDDT_ENUMERATED = 4 ' Use GetEnumTypeList
End Enum
Public Enum PROPDESC_VIEW_FLAGS
	PDVF_DEFAULT = &H00000000
	PDVF_CENTERALIGN = &H00000001 ' This property should be centered
	PDVF_RIGHTALIGN = &H00000002 ' This property should be right aligned
	PDVF_BEGINNEWGROUP = &H00000004 ' Show this property as the beginning of the next collection of properties in the view
	PDVF_FILLAREA = &H00000008 ' Fill the remainder of the view area with the content of this property
	PDVF_SORTDESCENDING = &H00000010 ' If this flag is set, the default sort for this property is highest-to-lowest. If this flag is not set, the default sort is lowest-to-highest
	PDVF_SHOWONLYIFPRESENT = &H00000020 ' Only show this property if it is present
	PDVF_SHOWBYDEFAULT = &H00000040 ' the property should be shown by default in a view (where applicable)
	PDVF_SHOWINPRIMARYLIST = &H00000080 ' the property should be shown by default in primary column selection UI
	PDVF_SHOWINSECONDARYLIST = &H00000100 ' the property should be shown by default in secondary column selection UI
	PDVF_HIDELABEL = &H00000200 ' Hide the label if the view is normally inclined to show the label
	'  obsolete                 = 0x00000400,
	PDVF_HIDDEN = &H00000800 ' Don't display this property as a column in the UI
	PDVF_CANWRAP = &H00001000 ' the property can be wrapped to the next row
	PDVF_MASK_ALL = &H00001BFF
End Enum
Public Enum PROPDESC_TYPE_FLAGS
	PDTF_DEFAULT = &H00000000
	PDTF_MULTIPLEVALUES = &H00000001 ' This property can have multiple values (as VT_VECTOR)
	PDTF_ISINNATE = &H00000002 ' This property cannot be written to
	PDTF_ISGROUP = &H00000004 ' This property is a group heading
	PDTF_CANGROUPBY = &H00000008 ' The user can group by this property
	PDTF_CANSTACKBY = &H00000010 ' The user can stack by this property
	PDTF_ISTREEPROPERTY = &H00000020 ' This property contains a hierarchy
	PDTF_INCLUDEINFULLTEXTQUERY = &H00000040 ' Deprecated
	PDTF_ISVIEWABLE = &H00000080 ' This property is meant to be viewed by the user
	PDTF_ISQUERYABLE = &H00000100 ' Deprecated
	PDTF_CANBEPURGED = &H00000200 ' This property can be purged, even if it is innate (property handler should respect this)
	PDTF_SEARCHRAWVALUE = &H00000400 ' The raw (rather than formatted) value of this property should be used for searching
	PDTF_ISSYSTEMPROPERTY = &H80000000 ' This property is owned by the system
	PDTF_MASK_ALL = &H800007FF
End Enum
Public Enum PROPENUMTYPE
	PET_DISCRETEVALUE = 0 ' Use GetValue & GetDisplayText
	PET_RANGEDVALUE = 1 ' Use GetRangeValues & GetDisplayText
	PET_DEFAULTVALUE = 2 ' Use GetDisplayText
	PET_ENDRANGE = 3 ' Use GetValue
End Enum


Public Enum CM_MASK
	CM_MASK_WIDTH = &H00000001
	CM_MASK_DEFAULTWIDTH = &H00000002
	CM_MASK_IDEALWIDTH = &H00000004
	CM_MASK_NAME = &H00000008
	CM_MASK_STATE = &H00000010
End Enum
Public Enum CM_STATE
	CM_STATE_NONE = &H00000000
	CM_STATE_VISIBLE = &H00000001 ' The column is visible
	CM_STATE_FIXEDWIDTH = &H00000002 ' Can't resize the column
	CM_STATE_NOSORTBYFOLDERNESS = &H00000004 ' Do not sort folders seperately
	CM_STATE_ALWAYSVISIBLE = &H00000008 ' readonly. column cannot be hidden
End Enum
Public Enum CM_ENUM_FLAGS
	CM_ENUM_ALL = &H00000001
	CM_ENUM_VISIBLE = &H00000002
End Enum
Public Enum CM_SET_WIDTH_VALUE
	CM_WIDTH_USEDEFAULT = -1
	CM_WIDTH_AUTOSIZE = -2
End Enum
Public Const MAX_COLUMN_NAME_LEN = 80
Public Type CM_COLUMNINFO
	cbSize As Long ' size in bytes of struct
	dwMask As CM_MASK ' CM_MASK
	dwState As CM_STATE ' CM_STATE
	uWidth As CM_SET_WIDTH_VALUE ' CM_MASK_WIDTH, for SetColumnInfo it can be a CM_SET_WIDTH_VALUE
	uDefaultWidth As Long ' CM_MASK_DEFAULTWIDTH
	uIdealWidth As Long ' CM_MASK_IDEALWIDTH
	wszName(0 To (MAX_COLUMN_NAME_LEN - 1)) As Integer
End Type

Public Enum IconIndexes
	Unknown = 0
	Document = 1
	Application = 2
	ClosedFolder = 3
	OpenFolder = 4
End Enum
Public Enum GILFlags
	GIL_OPENICON = &H0001
	GIL_FORSHELL = &H0002
	GIL_ASYNC = &H0020
	GIL_DEFAULTICON = &H0040
	GIL_FORSHORTCUT = &H0080
	GIL_CHECKSHIELD = &H0200
End Enum
Public Enum GILRes
	GIL_SIMULATEDOC = &H0001
	GIL_PERINSTANCE = &H0002
	GIL_PERCLASS = &H0004
	GIL_NOTFILENAME = &H0008
	GIL_DONTCACHE = &H0010
	GIL_SHIELD = &H0200
	GIL_FORCENOSHIELD = &H0400
End Enum
Public Enum IEIFlags
	IEIFLAG_ASYNC = &H0001
	IEIFLAG_CACHE = &H0002
	IEIFLAG_ASPECT = &H0004
	IEIFLAG_OFFLINE = &H0008
	IEIFLAG_GLEAM = &H0010
	IEIFLAG_SCREEN = &H0020
	IEIFLAG_ORIGSIZE = &H0040
	IEIFLAG_NOSTAMP = &H0080
	IEIFLAG_NOBORDER = &H0100
	IEIFLAG_QUALITY = &H0200
	IEIFLAG_REFRESH = &H0400
End Enum
Public Enum SIATTRIBFLAGS
	SIATTRIBFLAGS_AND = &H00000001 ' if multiple items and the attirbutes together.
	SIATTRIBFLAGS_OR = &H00000002 ' if multiple items or the attributes together.
	SIATTRIBFLAGS_APPCOMPAT = &H00000003 ' Call GetAttributes directly on the ShellFolder for multiple attributes
	SIATTRIBFLAGS_MASK = &H00000003 ' for the AND/OR/APPCOMPAT value
	SIATTRIBFLAGS_ALLITEMS = &H00004000 ' normally only the first few items are used to compute the attributes, pass this to force all of them
	'  doing all will result in poor performance for large arrays so use this carefuly
End Enum
Public Enum QITipFlags
	QITIPF_DEFAULT = &H00000000
	QITIPF_USENAME = &H00000001
	QITIPF_LINKNOTARGET = &H00000002
	QITIPF_LINKUSETARGET = &H00000004
	QITIPF_USESLOWTIP = &H00000008
	QITIPF_SINGLELINE = &H00000010
End Enum
Public Enum QIFlags
	QIF_CACHED = &H00000001
	QIF_DONTEXPANDFOLDER = &H00000002
End Enum
Public Enum IMAGELISTDRAWFLAGS
	ILD_NORMAL = &H00000000
	ILD_TRANSPARENT = &H00000001
	ILD_BLEND25 = &H00000002
	ILD_FOCUS = &H00000002 'ILD_BLEND25,
	ILD_BLEND50 = &H00000004
	ILD_SELECTED = &H00000004 'ILD_BLEND50,
	ILD_BLEND = &H00000004 'ILD_BLEND50,
	ILD_MASK = &H00000010
	ILD_IMAGE = &H00000020
	ILD_ROP = &H00000040 '(WIN32_IE >= &H300)
	ILD_OVERLAYMASK = &H00000F00
	ILD_PRESERVEALPHA = &H00001000
	ILD_SCALE = &H00002000
	ILD_DPISCALE = &H00004000
	ILD_ASYNC = &H00008000&
End Enum
Public Enum IMAGELISTSTATEFLAGS
	ILS_NORMAL = &H00000000
	ILS_GLOW = &H00000001 'Not supported
	ILS_SHADOW = &H00000002 'Not supported
	ILS_SATURATE = &H00000004
	ILS_ALPHA = &H00000008
End Enum
Public Enum ILRFLAGS
	ILR_DEFAULT = &H0000
	ILR_HORIZONTAL_LEFT = &H0000
	ILR_HORIZONTAL_CENTER = &H0001
	ILR_HORIZONTAL_RIGHT = &H0002
	ILR_VERTICAL_TOP = &H0000
	ILR_VERTICAL_CENTER = &H0010
	ILR_VERTICAL_BOTTOM = &H0020
	ILR_SCALE_CLIP = &H0000
	ILR_SCALE_ASPECTRATIO = &H0100
End Enum
Public Enum ILGOSFLAGS
	ILGOS_ALWAYS = &H00000000 ' always get the original size (can be slow)
	ILGOS_FROMSTANDBY = &H00000001 ' only if present or on standby
End Enum
Public Enum ILFIPFLAGS
	ILFIP_ALWAYS = &H00000000 ' always get the image (can be slow)
	ILFIP_FROMSTANDBY = &H00000001 ' only if on standby
End Enum
Public Enum ILDIFLAGS
	ILDI_PURGE = &H00000001 ' discard and purge
	ILDI_STANDBY = &H00000002 ' discard to standby list
	ILDI_RESETACCESS = &H00000004 ' reset "has been accessed" flag
	ILDI_QUERYACCESS = &H00000008 ' ask whether access flag is set (but do not reset)
End Enum
Public Type IMAGELISTSTATS
	cbSize As Long
	cAlloc As Long ' number of images allocated
	cUsed As Long ' number of images in use
	cStandby As Long ' number of standby images
End Type

Public Enum RASTEROPFLAGS
	SRCAND = &H8800C6
	SRCCOPY = &HCC0020
	SRCINVERT = &H660046
	SRCPAINT = &HEE0086
	BLACKNESS = &H42
	CAPTUREBLT = &H40000000
	DSTINVERT = &H550009
	MERGECOPY = &HC000CA
	MERGEPAINT = &HBB0226
	NOMIRRORBITMAP = &H80000000
	NOTSRCCOPY = &H330008
	NOTSRCERASE = &H1100A6
	PATCOPY = &HF00021
	PATINVERT = &H5A0049
	PATPAINT = &HFB0A09
	SRCERASE = &H440328
	WHITENESS = &HFF0062
End Enum
Public Type IMAGELISTDRAWPARAMS
	cbSize As Long
	himl As LongPtr
	i As Long
	hdcDst As LongPtr
	x As Long
	y As Long
	cx As Long
	cy As Long
	xBitmap As Long ' x offest from the upperleft of bitmap
	yBitmap As Long ' y offset from the upperleft of bitmap
	rgbBk As Long
	rgbFg As Long
	fStyle As IMAGELISTDRAWFLAGS
	dwRop As RASTEROPFLAGS
	fState As IMAGELISTSTATEFLAGS
	Frame As Long
	crEffect As Long
End Type
Public Type IMAGEINFO
	hbmImage As LongPtr
	hbmMask As LongPtr
	Unused1 As Long
	Unused2 As Long
	rcImage As RECT
End Type
Public Enum ILIMAGEQUALITY
	ILIF_ALPHA = &H00000001
	ILIF_LOWQUALITY = &H00000002
End Enum
Public Enum ILDRAWRESULTS
	ILDRF_IMAGELOWQUALITY = &H00000001
	ILDRF_OVERLAYLOWQUALITY = &H00000010
End Enum

Public Enum WTS_ALPHATYPE
	WTSAT_UNKNOWN = 0
	WTSAT_RGB = 1
	WTSAT_ARGB = 2
End Enum
Public Enum WTS_FLAGS
	WTS_NONE = &H00000000
	WTS_EXTRACT = &H00000000 ' Extract the thumbnail if it is not cached.
	WTS_INCACHEONLY = &H00000001 ' Only return the thumbnail if it is cached.
	WTS_FASTEXTRACT = &H00000002 ' If not cached, only extract the thumbnail if it is embedded in EXIF format, typically 160x120.
	WTS_FORCEEXTRACTION = &H00000004 ' Ignore cache and extract thumbnail from source file.
	WTS_SLOWRECLAIM = &H00000008 ' Thumbnail has an extended lifetime. Use for volumes that might go offline, like non-fixed disks.
	WTS_EXTRACTDONOTCACHE = &H00000020 ' Extract but do not add to cache.
	WTS_SCALETOREQUESTEDSIZE = &H00000040 ' Windows 7 and later. If necessary, shrink the bitmap (preserving aspect ratio) so width and height fit the given size.
	WTS_SKIPFASTEXTRACT = &H00000080 ' Windows 7 and later. Do not attempt to extract the thumbnail embedded in EXIF format.
	WTS_EXTRACTINPROC = &H00000100 ' Windows 7 and later. Run the thumbnail extractor InProc. Use for debugging thumbnail extractors.
	WTS_CROPTOSQUARE = &H00000200 ' Windows 8 and later. If necessary, crop the bitmap to a square.
	WTS_INSTANCESURROGATE = &H00000400 ' Windows 8 and later. Create a surrogate for this instance of the cache, rather than using the shared dllhost surrogate
	WTS_REQUIRESURROGATE = &H00000800 ' Windows 8 and later. Require extractions to take place in the surrogate
	WTS_APPSTYLE = &H00002000 ' Windows 8 and later. Pass the App-style flag to IThumbnailSettings if the provider supports it.
	WTS_WIDETHUMBNAILS = &H00004000 ' Windows 8 and later. Stretch and crop the bitmap to a .7 aspect ratio.
	WTS_IDEALCACHESIZEONLY = &H00008000& ' Windows 8 and later. Return from the ideal cache snap size only. The returned image may still be larger but it will be pulled from the correct cache entry
	WTS_SCALEUP = &H00010000 ' Windows 8 and later. If necessary, stretch the bitmap so width and height fit the given size.
End Enum
Public Enum WTS_CACHEFLAGS
	WTS_DEFAULT = &H00000000
	WTS_LOWQUALITY = &H00000001
	WTS_CACHED = &H00000002
End Enum
Public Enum WTS_CONTEXTFLAGS
	WTSCF_DEFAULT = &H00000000
	WTSCF_APPSTYLE = &H00000001
	WTSCF_SQUARE = &H00000002
	WTSCF_WIDE = &H00000004
	WTSCF_FAST = &H00000008
End Enum

Public Type WTS_THUMBNAILID
	rgbKey(0 To 15) As Byte
End Type

Public Enum ThumbnailStreamCacheOptions
    TSC_ExtractIfNotCached = &H00000000
    TSC_ReturnOnlyIfCached = &H00000001
    TSC_ResizeThumbnail = &H00000002 ' resize to match the requested size
    TSC_AllowSmallerSize = &H00000004 ' can return a cached thumbnail that is smaller than the requested size.
End Enum


Public Type PREVIEWHANDLERFRAMEINFO
	haccel As LongPtr
	cAccelEntries As Long
End Type

Public Enum VPWATERMARKFLAGS
	VPWF_DEFAULT = &H00000000 ' Windows XP behavior
	VPWF_ALPHABLEND = &H00000001 ' alpha blend the bitmap, assumed 24-bit color + 8-bit alpha
End Enum
Public Enum VPCOLORFLAGS
	VPCF_TEXT = 1
	VPCF_BACKGROUND = 2
	VPCF_SORTCOLUMN = 3
	VPCF_SUBTEXT = 4
	VPCF_TEXTBACKGROUND = 5
End Enum

Public Enum SHCIDs_Flags
	SHCIDS_ALLFIELDS = &H80000000
	SHCIDS_CANONICALONLY = &H10000000
	SHCIDS_BITMASK = &HFFFF0000
	SHCIDS_COLUMNMASK = &H0000FFFF&
End Enum

Public Enum QueryContextMenuFlags
	CMF_NORMAL = &H00000000
	CMF_DEFAULTONLY = &H00000001
	CMF_VERBSONLY = &H00000002
	CMF_EXPLORE = &H00000004
	CMF_NOVERBS = &H00000008
	CMF_CANRENAME = &H00000010
	CMF_NODEFAULT = &H00000020
	CMF_INCLUDESTATIC = &H00000040
	' Vista+
	CMF_ITEMMENU = &H00000080
	CMF_EXTENDEDVERBS = &H00000100
	CMF_DISABLEDVERBS = &H00000200
	' Win7+
	CMF_ASYNCVERBSTATE = &H00000400
	CMF_OPTIMIZEFORINVOKE = &H00000800
	CMF_SYNCCASCADEMENU = &H00001000
	CMF_DONOTPICKDEFAULT = &H00002000
	' Now how'd these get here?
	CMF_DVFILE = &H00010000 ' "File" pulldown
	CMF_ICM3 = &H00020000 ' QueryContextMenu can assume IContextMenu3 semantics (i.e.,
	'  will receive WM_INITMENUPOPUP, WM_MEASUREITEM, WM_DRAWITEM,
	'  and WM_MENUCHAR, via HandleMenuMsg2)
	CMF_RESERVED = &Hffff0000
End Enum

Public Const SETWALLPAPER_DEFAULT = (-1)

Public Enum SHOWWINDOW
	SW_HIDE = 0
	SW_SHOWNORMAL = 1
	SW_NORMAL = 1
	SW_SHOWMINIMIZED = 2
	SW_SHOWMAXIMIZED = 3
	SW_MAXIMIZE = 3
	SW_SHOWNOACTIVATE = 4
	SW_SHOW = 5
	SW_MINIMIZE = 6
	SW_SHOWMINNOACTIVE = 7
	SW_SHOWNA = 8
	SW_RESTORE = 9
	SW_SHOWDEFAULT = 10
    SW_FORCEMINIMIZE = 11
	SW_MAX = 11
End Enum

Public Enum GetCommandStringFlags
	GCS_VERBA = &H00000000
	GCS_HELPTEXTA = &H00000001
	GCS_VALIDATEA = &H00000002
	GCS_VERBW = &H00000004
	GCS_HELPTEXTW = &H00000005
	GCS_VALIDATEW = &H00000006
	GCS_VERBICONW = &H00000014
	GCS_UNICODE = &H00000004
    GCS_VERB = GCS_VERBW
    GCS_HELPTEXT = GCS_HELPTEXTW
    GCS_VALIDATE = GCS_VALIDATEW
End Enum

Public Const CMDSTR_NEWFOLDERA  = "NewFolder"
Public Const CMDSTR_VIEWLISTA  = "ViewList"
Public Const CMDSTR_VIEWDETAILSA  = "ViewDetails"
Public Const CMDSTR_NEWFOLDERW  = "NewFolder"
Public Const CMDSTR_VIEWLISTW  = "ViewList"
Public Const CMDSTR_VIEWDETAILSW  = "ViewDetails"
Public Const CMDSTR_NEWFOLDER  = CMDSTR_NEWFOLDERW
Public Const CMDSTR_VIEWLIST  = CMDSTR_VIEWLISTW
Public Const CMDSTR_VIEWDETAILS  = CMDSTR_VIEWDETAILSW

Public Enum InvokeCommandMask
	CMIC_MASK_HOTKEY = &H00000020
	CMIC_MASK_ICON = &H00000010
	CMIC_MASK_FLAG_NO_UI = &H00000400
	CMIC_MASK_UNICODE = &H00004000
	CMIC_MASK_NO_CONSOLE = &H00008000&
	CMIC_MASK_HASLINKNAME = &H00010000 'SEE_MASK_HASLINKNAME,
	CMIC_MASK_FLAG_SEP_VDM = &H00040000 'SEE_MASK_FLAG_SEPVDM,
	CMIC_MASK_HASTITLE = &H00020000 'SEE_MASK_HASTITLE,
	CMIC_MASK_ASYNCOK = &H00100000
	CMIC_MASK_SHIFT_DOWN = &H10000000
	CMIC_MASK_CONTROL_DOWN = &H40000000
	CMIC_MASK_FLAG_LOG_USAGE = &H04000000
	CMIC_MASK_NOZONECHECKS = &H00800000 ' SEE_MASK_NOZONECHECKS
	CMIC_MASK_PTINVOKE = &H20000000
	CMIC_MASK_DATAOBJECT = &H40000000 ' lpPara is IDataObject*
End Enum
Public Type CMINVOKECOMMANDINFO
	cbSize As Long
	fMask As InvokeCommandMask
	hwnd As LongPtr
	lpVerb As LongPtr
	lpParameters As LongPtr
	lpDirectory As LongPtr
	nShow As SHOWWINDOW
	dwHotKey As Long
	hIcon As LongPtr
End Type
Public Type CMINVOKECOMMANDINFOEX
	cbSize As Long
	fMask As InvokeCommandMask
	hwnd As LongPtr
	lpVerb As LongPtr
	lpParameters As LongPtr
	lpDirectory As LongPtr
	nShow As SHOWWINDOW
	dwHotKey As Long
	hIcon As LongPtr
    lpTitle As LongPtr
    lpVerbW As LongPtr
    lpParametersW As LongPtr
    lpDirectoryW As LongPtr
    lpTitleW As LongPtr
    ptInvoke As POINT
End Type


Public Enum KF_REDIRECTION_CAPABILITIES
	KF_REDIRECTION_CAPABILITIES_ALLOW_ALL = &H000000FF ' if any of these flags set this means that
	'  the folder can potentially be redirected unless
	'  any deny flag is set
	KF_REDIRECTION_CAPABILITIES_REDIRECTABLE = &H00000001 ' the folder can potentially be redirected
	'  currently we only allow redirection for
	'  common and user's folders.
	'  Fixed and virtual can not be redirected
	KF_REDIRECTION_CAPABILITIES_DENY_ALL = &H000FFF00 ' If any of there flags set then redirection is blocked
	KF_REDIRECTION_CAPABILITIES_DENY_POLICY_REDIRECTED = &H00000100 ' Folder can not be redirected because it is redirected by group policy
	KF_REDIRECTION_CAPABILITIES_DENY_POLICY = &H00000200 ' Folder can not be redirected because the policy prohibits redirecting this folder
	KF_REDIRECTION_CAPABILITIES_DENY_PERMISSIONS = &H00000400 ' Folder can not be redirected because the caller does not have sufficient permissions
End Enum
Public Enum KF_REDIRECT_FLAGS
	KF_REDIRECT_USER_EXCLUSIVE = &H00000001 ' Give user exclusive permission
	KF_REDIRECT_COPY_SOURCE_DACL = &H00000002 ' Copy the DACL of the source directory to target
	'  Ownership checks for the target folder if the folder exists, by default, the API does not do any ownership checks
	KF_REDIRECT_OWNER_USER = &H00000004 ' The owner of the folder must be the user itself
	KF_REDIRECT_SET_OWNER_EXPLICIT = &H00000008 ' The owner of any newly created folder will be set explicitly
	'  by default if user belongs to Administrators group Administrators will be the owner
	'  Check if the redirection is already done, S_OK if yes, S_FALSE if some actions need to be done.
	KF_REDIRECT_CHECK_ONLY = &H00000010
	'  Enable user interaction when redirecting
	KF_REDIRECT_WITH_UI = &H00000020
	'  CSC related settings
	KF_REDIRECT_UNPIN = &H00000040 ' Unpin the source folder
	KF_REDIRECT_PIN = &H00000080 ' Pin the target folder
	KF_REDIRECT_COPY_CONTENTS = &H00000200 ' Copy the contents (both files and subfolders) under the known folder
	KF_REDIRECT_DEL_SOURCE_CONTENTS = &H00000400 ' Delete source, valid only if KF_REDIRECT_COPY_CONTENTS set
	KF_REDIRECT_EXCLUDE_ALL_KNOWN_SUBFOLDERS = &H00000800 ' Exclude all known subfolders from redirection
End Enum
Public Enum KF_DEFINITION_FLAGS
	KFDF_LOCAL_REDIRECT_ONLY = &H00000002 ' Can only be redirected to a local disk
	KFDF_ROAMABLE = &H00000004 ' Can be roamed via PC to PC sync
	KFDF_PRECREATE = &H00000008 ' Pre create folder
	KFDF_STREAM = &H00000010 ' folder is actually a file
	KFDF_PUBLISHEXPANDEDPATH = &H00000020 ' Expanded path is published in the registry under HKCU
	KFDF_NO_REDIRECT_UI = &H00000040
End Enum
Public Enum KF_CATEGORY
	KF_CATEGORY_VIRTUAL = 1 ' virtual folders, have not file system path
	KF_CATEGORY_FIXED = 2 ' fixed, predefined OS folders, might be different for different users
	KF_CATEGORY_COMMON = 3 ' Public folders shared by all users, can be redirected
	KF_CATEGORY_PERUSER = 4 ' User folders, can be redirected
End Enum
Public Type KNOWNFOLDER_DEFINITION
	category As KF_CATEGORY
	pszName As LongPtr
	pszDescription As LongPtr
	fidParent As UUID
	pszRelativePath As LongPtr
	pszParsingName As LongPtr
	pszTooltip As LongPtr
	pszLocalizedName As LongPtr
	pszIcon As LongPtr
	pszSecurity As LongPtr
	dwAttributes As Long
	kfdFlags As KF_DEFINITION_FLAGS
	ftidType As UUID
End Type
Public Enum KNOWN_FOLDER_FLAG
	KF_FLAG_DEFAULT = &H00000000
	KF_FLAG_SIMPLE_IDLIST = &H00000100
	KF_FLAG_NOT_PARENT_RELATIVE = &H00000200
	KF_FLAG_DEFAULT_PATH = &H00000400
	KF_FLAG_INIT = &H00000800
	KF_FLAG_NO_ALIAS = &H00001000
	KF_FLAG_DONT_UNEXPAND = &H00002000
	KF_FLAG_DONT_VERIFY = &H00004000
	KF_FLAG_CREATE = &H00008000&
	KF_FLAG_NO_APPCONTAINER_REDIRECTION = &H00010000
	KF_FLAG_NO_PACKAGE_REDIRECTION = &H00010000
	KF_FLAG_FORCE_PACKAGE_REDIRECTION = &H00020000
	KF_FLAG_FORCE_APPCONTAINER_REDIRECTION = &H00020000
	KF_FLAG_RETURN_FILTER_REDIRECTION_TARGET = &H00040000
	KF_FLAG_FORCE_APP_DATA_REDIRECTION = &H00080000
	KF_FLAG_ALIAS_ONLY = &H80000000
End Enum
Public Enum FFFP_MODE
	FFFP_EXACTMATCH = 0
	FFFP_NEARESTPARENTMATCH = 1
End Enum
Public Enum FILEOP
    FO_MOVE = &H0001
    FO_COPY = &H0002
    FO_DELETE = &H0003
    FO_RENAME = &H0004
End Enum
Public Enum ShellPrinterOperations
    PO_DELETE = &H0013  ' printer is being deleted
    PO_RENAME = &H0014  ' printer is being renamed
    PO_PORTCHANGE = &H0020  ' port this printer connected to is being changed
'  if this id is set, the strings received by
'  the copyhook are a doubly-null terminated
'  list of strings.  The first is the printer
'  name and the second is the printer port.
    PO_REN_PORT = &H0034  ' PO_RENAME and PO_PORTCHANGE at same time.
End Enum

Public Enum FILEOP_FLAGS
    FOF_MULTIDESTFILES = &H0001
    FOF_CONFIRMMOUSE = &H0002
    FOF_SILENT = &H0004
    FOF_RENAMEONCOLLISION = &H0008
    FOF_NOCONFIRMATION = &H0010
    FOF_WANTMAPPINGHANDLE = &H0020
    FOF_ALLOWUNDO = &H0040
    FOF_FILESONLY = &H0080
    FOF_SIMPLEPROGRESS = &H0100
    FOF_NOCONFIRMMKDIR = &H0200
    FOF_NOERRORUI = &H0400
    FOF_NOCOPYSECURITYATTRIBS = &H0800
    FOF_NORECURSION = &H1000
    FOF_NO_CONNECTED_ELEMENTS = &H2000
    FOF_WANTNUKEWARNING = &H4000
    FOF_NORECURSEREPARSE = &H8000&
End Enum
Public Enum FILEOP_FLAGSEX
	FOFX_ADDUNDORECORD = &H20000000 'WINDOWS 8+
	FOFX_NOSKIPJUNCTIONS = &H00010000
	FOFX_PREFERHARDLINK = &H00020000
	FOFX_SHOWELEVATIONPROMPT = &H00040000
	FOFX_EARLYFAILURE = &H00100000
	FOFX_PRESERVEFILEEXTENSIONS = &H00200000
	FOFX_KEEPNEWERFILE = &H00400000
	FOFX_NOCOPYHOOKS = &H00800000
	FOFX_NOMINIMIZEBOX = &H01000000
	FOFX_MOVEACLSACROSSVOLUMES = &H02000000
	FOFX_DONTDISPLAYSOURCEPATH = &H04000000
	FOFX_DONTDISPLAYDESTPATH = &H08000000
	FOFX_RECYCLEONDELETE = &H00080000 'WINDOWS 8+
	FOFX_REQUIREELEVATION = &H10000000 'VISTA SP1+
	FOFX_COPYASDOWNLOAD = &H40000000 'WINDOWS 7+
	FOFX_DONTDISPLAYLOCATIONS = &H80000000
End Enum
Public Enum IFO_Flags
	IFO_ALLOWUNDO = &H00000040
	IFO_FILESONLY = &H00000080
	IFO_NOCONFIRMATION = &H00000010
	IFO_NOCONFIRMMKDIR = &H00000200
	IFO_NO_CONNECTED_ELEMENTS = &H00002000
	IFO_NOCOPYSECURITYATTRIBS = &H00000800
	IFO_NOERRORUI = &H00000400
	IFO_NORECURSION = &H00001000
	IFO_RENAMEONCOLLISION = &H00000008
	IFO_SILENT = &H00000004
	IFO_WANTNUKEWARNING = &H00004000
	IFOX_ADDUNDORECORD = &H20000000 'WINDOWS 8+
	IFOX_NOSKIPJUNCTIONS = &H00010000
	IFOX_PREFERHARDLINK = &H00020000
	IFOX_SHOWELEVATIONPROMPT = &H00040000
	IFOX_EARLYFAILURE = &H00100000
	IFOX_PRESERVEFILEEXTENSIONS = &H00200000
	IFOX_KEEPNEWERFILE = &H00400000
	IFOX_NOCOPYHOOKS = &H00800000
	IFOX_NOMINIMIZEBOX = &H01000000
	IFOX_MOVEACLSACROSSVOLUMES = &H02000000
	IFOX_DONTDISPLAYSOURCEPATH = &H04000000
	IFOX_DONTDISPLAYDESTPATH = &H08000000
	IFOX_RECYCLEONDELETE = &H00080000 'WINDOWS 8+
	IFOX_REQUIREELEVATION = &H10000000 'VISTA SP1+
	IFOX_COPYASDOWNLOAD = &H40000000 'WINDOWS 7+
	IFOX_DONTDISPLAYLOCATIONS = &H80000000
End Enum

Public Enum FILE_OPERATION_FLAGS2
    FOF2_NONE = 0
    FOF2_MERGEFOLDERSONCOLLISION = &H1
End Enum

Public Const CONFLICT_RESOLUTION_CLSID_KEY = "ConflictResolutionCLSID"
Public Enum MERGE_UPDATE_STATUS
    MUS_COMPLETE = 0
    MUS_USERINPUTNEEDED = 1
    MUS_FAILED = 2
End Enum

Public Enum MessageBoxResults
    IDOK = 1
    IDCANCEL = 2
    IDABORT = 3
    IDRETRY = 4
    IDIGNORE = 5
    IDYES = 6
    IDNO = 7
    IDCLOSE = 8
    IDHELP = 9
    /*  = WINVER >= &H0400 */
    IDTRYAGAIN = 10
    IDCONTINUE = 11
    /*  = WINVER >= &H0500 */
    IDTIMEOUT = 32000
    IDASYNC = 32001
    MB_TIMEDOUT = 32000 'alias
End Enum


Public Enum TRANSFER_SOURCE_FLAGS
	TSF_NORMAL = 0
	TSF_FAIL_EXIST = 0
	TSF_RENAME_EXIST = &H1
	TSF_OVERWRITE_EXIST = &H2
	TSF_ALLOW_DECRYPTION = &H4
	TSF_NO_SECURITY = &H8
	TSF_COPY_CREATION_TIME = &H10
	TSF_COPY_WRITE_TIME = &H20
	TSF_USE_FULL_ACCESS = &H40
	TSF_DELETE_RECYCLE_IF_POSSIBLE = &H80
	TSF_COPY_HARD_LINK = &H100
	TSF_COPY_LOCALIZED_NAME = &H200
	TSF_MOVE_AS_COPY_DELETE = &H400
	TSF_SUSPEND_SHELLEVENTS = &H800
End Enum
Public Enum OPPROGDLGF
	'  The flag space includes OPPROGDLG_ and PROGDLG_ values
	'  please guarantee they don't conflict. See shlobj.w for PROGDLG_*
	OPPROGDLG_DEFAULT = &H00000000
	OPPROGDLG_NORMAL = &H00000000 ' default normal progress dlg behavior
	OPPROGDLG_MODAL = &H00000001 ' the dialog is modal to its hwndParent (default is modeless)
	OPPROGDLG_AUTOTIME = &H00000002 ' automatically updates the "Line3" text with the "time remaining" (you cant call SetLine3 if you passs this!)
	OPPROGDLG_NOTIME = &H00000004 ' we dont show the "time remaining" if this is set. We need this if dwTotal < dwCompleted for sparse files
	OPPROGDLG_NOMINIMIZE = &H00000008 ' Do not have a minimize button in the caption bar.
	OPPROGDLG_NOPROGRESSBAR = &H00000010 ' Don't display the progress bar
	OPPROGDLG_MARQUEEPROGRESS = &H00000020 ' Use marquee progress (comctl32 v6 required)
	OPPROGDLG_NOCANCEL = &H00000040 ' No cancel button (operation cannot be canceled) (use sparingly)
	OPPROGDLG_ENABLEPAUSE = &H00000080 ' Add a pause button (operation can be paused)
	OPPROGDLG_ALLOWUNDO = &H00000100 ' The operation can be undone in the dialog.  (The Stop button becomes Undo)
	OPPROGDLG_DONTDISPLAYSOURCEPATH = &H00000200 ' Don't display the path of source file in progress dialog
	OPPROGDLG_DONTDISPLAYDESTPATH = &H00000400 ' Don't display the path of destination file in progress dialog
	OPPROGDLG_NOMULTIDAYESTIMATES = &H00000800 ' deprecated - progress dialog no longer displays > 1 day estimates
	OPPROGDLG_DONTDISPLAYLOCATIONS = &H00001000 ' Don't display the location line in the progress dialog
End Enum
Public Enum PDOPSTATUS
	PDOPS_RUNNING = 1 ' Operation is running, no user intervention
	PDOPS_PAUSED = 2 ' Operation has been paused by the user
	PDOPS_CANCELLED = 3 ' Operation has been cancelled by the user - now go undo
	PDOPS_STOPPED = 4 ' Operation has been stopped by the user - terminate completely
	PDOPS_ERRORS = 5 ' Operation has gone as far as it can without throwing error dialogs
End Enum
Public Enum PDMODE
	PDM_DEFAULT = &H00000000
	PDM_RUN = &H00000001 ' Operation is running
	PDM_PREFLIGHT = &H00000002 ' Pre-flight mode, calculating operation time, etc
	PDM_UNDOING = &H00000004 ' Operation is rolling back, undo has been selected
	PDM_ERRORSBLOCKING = &H00000008 ' Only errors remain, error dialogs are blocking progress from completing
	PDM_INDETERMINATE = &H00000010 ' The length of the operation is indeterminate, don't show a timer, progressbar is in marquee mode
End Enum
Public Enum SPACTION
	SPACTION_NONE = 0
	SPACTION_MOVING = 1
	SPACTION_COPYING = 2
	SPACTION_RECYCLING = 3
	SPACTION_APPLYINGATTRIBS = 4
	SPACTION_DOWNLOADING = 5
	SPACTION_SEARCHING_INTERNET = 6
	SPACTION_CALCULATING = 7
	SPACTION_UPLOADING = 8
	SPACTION_SEARCHING_FILES = 9
	SPACTION_DELETING = 10 ' Vista or higher
	SPACTION_RENAMING = 11 ' Vista or higher
	SPACTION_FORMATTING = 12 ' Vista or higher
	SPACTION_COPY_MOVING = 13 ' Move as copy-delete, Windows 7 or higher
End Enum
Public Enum LIBRARYSAVEFLAGS
	LSF_FAILIFTHERE = &H00000000 ' if a library with the same name exists fail to save
	LSF_OVERRIDEEXISTING = &H00000001 ' will override existing library with the same name if there or create a new one if not
	LSF_MAKEUNIQUENAME = &H00000002 ' if a library with the same name exists create a unique name by adding a number in parenthesis
End Enum
Public Enum DEFAULTSAVEFOLDERTYPE
	DSFT_DETECT = 1 ' Specifies the save folder for the current user depending on whether or not they are the owner of the library
	DSFT_PRIVATE = 2 ' Specifies the private save folder for the owner of the library
	DSFT_PUBLIC = 3 ' Specifies the public save folder for non-owners of the library
End Enum
Public Enum LIBRARYOPTIONFLAGS
	LOF_DEFAULT = &H00000000
	LOF_PINNEDTONAVPANE = &H00000001 ' Specifies that this library is pinned to the navigation pane.
	LOF_MASK_ALL = &H00000001
End Enum
Public Enum LIBRARYFOLDERFILTER
	LFF_FORCEFILESYSTEM = 1 ' Return only file system items.
	LFF_STORAGEITEMS = 2 ' Return any items that can be bound to an IStorage. (default)
	LFF_ALLITEMS = 3 ' Return all items.
End Enum

Public Enum SSFLAGS1
	fShowAllObjects = &H1
	fShowExtensions = &H2
	fNoConfirmRecycle = &H4
	fShowSysFiles = &H8
	fShowCompColor = &H10
	fDoubleClickInWebView = &H20
	fDesktopHTML = &H40
	fWin95Classic = &H80
	fDontPrettyPath = &H100
	fShowAttribCol = &H200
	fMapNetDrvBtn = &H400
	fShowInfoTip = &H800
	fHideIcons = &H1000
	fWebView = &H2000
	fFilter = &H4000
	fShowSuperHidden = &H8000&
	fNoNetCrawling = &H10000
End Enum
Public Enum SSFLAGS2
	fSepProcess = &H1
	fStartPanelOn = &H2
	fShowStartPage = &H4
	fAutoCheckSelect = &H8
	fIconsOnly = &H10
	fShowTypeOverlay = &H20
	fShowStatusBar = &H40
End Enum
Public Type SHELLSTATE
	fFlags1 As SSFLAGS1
	dwWin95Unused As Long
	uWin95Unused As Long
	lParamSort As Long
	iSortDirection As Long
	Version As Long
	uNotUsed As Long
	fFlags2 As SSFLAGS2
End Type
Public Enum SFS_MASK
	SSF_SHOWALLOBJECTS = &H00000001
	SSF_SHOWEXTENSIONS = &H00000002
	SSF_HIDDENFILEEXTS = &H00000004
	SSF_SERVERADMINUI = &H00000004
	SSF_SHOWCOMPCOLOR = &H00000008
	SSF_SORTCOLUMNS = &H00000010
	SSF_SHOWSYSFILES = &H00000020
	SSF_DOUBLECLICKINWEBVIEW = &H00000080
	SSF_SHOWATTRIBCOL = &H00000100
	SSF_DESKTOPHTML = &H00000200
	SSF_WIN95CLASSIC = &H00000400
	SSF_DONTPRETTYPATH = &H00000800
	SSF_SHOWINFOTIP = &H00002000
	SSF_MAPNETDRVBUTTON = &H00001000
	SSF_NOCONFIRMRECYCLE = &H00008000&
	SSF_HIDEICONS = &H00004000
	SSF_FILTER = &H00010000
	SSF_WEBVIEW = &H00020000
	SSF_SHOWSUPERHIDDEN = &H00040000
	SSF_SEPPROCESS = &H00080000
	' #if (NTDDI_WINXP)
	SSF_NONETCRAWLING = &H00100000
	SSF_STARTPANELON = &H00200000
	SSF_SHOWSTARTPAGE = &H00400000
	' #endif  // NTDDI_WINXP
	' #if (NTDDI_VISTA)
	SSF_AUTOCHECKSELECT = &H00800000
	SSF_ICONSONLY = &H01000000
	SSF_SHOWTYPEOVERLAY = &H02000000
	' #endif  // NTDDI_VISTA
	' #if (NTDDI_WIN8)
	SSF_SHOWSTATUSBAR = &H04000000
End Enum

[Description("⚠️ **WARNING:** This structure is only for internal use, not calling SHGetSettings-- these are all single bit bitfield memembers")]
Public Type SHELLFLAGSTATEFlags
	fShowAllObjects As Boolean
	fShowExtensions As Boolean
	fNoConfirmRecycle As Boolean
	fShowSysFiles As Boolean
	fShowCompColor As Boolean
	fDoubleClickInWebView As Boolean
	fDesktopHTML As Boolean
	fWin95Classic As Boolean
	fDontPrettyPath As Boolean
	fShowAttribCol As Boolean
	fMapNetDrvBtn As Boolean
	fShowInfoTip As Boolean
	fHideIcons1 As Boolean
	'#if (NTDDI_VERSION >= NTDDI_VISTA)
	fAutoCheckSelect As Boolean
	fIconsOnly As Boolean
	fRestFlags As Long ' when adding additional flags keep SHELLSTATE and SHGetSettings in sync.
	'#else
	' UINT fRestFlags : 3; // when adding additional flags keep SHELLSTATE and SHGetSettings in sync.
	'#endif
End Type

Public Type SHELLFLAGSTATE
    flags As Long
End Type

[PackingAlignment(1)]
Public Type SHChangeNotifyEntry
	pidl As LongPtr
	fRecursive As Long
End Type

Public Enum SHCNRF
	SHCNRF_InterruptLevel = &H0001
	SHCNRF_ShellLevel = &H0002
	SHCNRF_RecursiveInterrupt = &H1000
	SHCNRF_NewDelivery = &H8000&
End Enum
Public Enum SHCN_Events
	SHCNE_RENAMEITEM = &H00000001
	SHCNE_CREATE = &H00000002
	SHCNE_DELETE = &H00000004
	SHCNE_MKDIR = &H00000008
	SHCNE_RMDIR = &H00000010
	SHCNE_MEDIAINSERTED = &H00000020
	SHCNE_MEDIAREMOVED = &H00000040
	SHCNE_DRIVEREMOVED = &H00000080
	SHCNE_DRIVEADD = &H00000100
	SHCNE_NETSHARE = &H00000200
	SHCNE_NETUNSHARE = &H00000400
	SHCNE_ATTRIBUTES = &H00000800
	SHCNE_UPDATEDIR = &H00001000
	SHCNE_UPDATEITEM = &H00002000
	SHCNE_SERVERDISCONNECT = &H00004000
	SHCNE_UPDATEIMAGE = &H00008000&
	SHCNE_DRIVEADDGUI = &H00010000
	SHCNE_RENAMEFOLDER = &H00020000
	SHCNE_FREESPACE = &H00040000
	SHCNE_EXTENDED_EVENT = &H04000000
	SHCNE_ASSOCCHANGED = &H08000000
	SHCNE_DISKEVENTS = &H0002381F
	SHCNE_GLOBALEVENTS = &H0C0581E0 ' Events that dont match pidls first
	SHCNE_ALLEVENTS = &H7FFFFFFF
	SHCNE_INTERRUPT = &H80000000 ' The presence of this flag indicates
End Enum
Public Enum SHCN_ExtendedEvents
	SHCNEE_ORDERCHANGED = 2 ' pidl2 is the changed folder
	SHCNEE_WININETCHANGED = 3 ' dwItem2 contains CACHE_NOTIFY_* bits
	SHCNEE_MSI_CHANGE = 4 ' pidl2 is a SHChangeProductKeyAsIDList
	SHCNEE_MSI_UNINSTALL = 5 ' pidl2 is a SHChangeProductKeyAsIDList
	SHCNEE_PROMOTEDITEM = 6 ' pidl2 is the pidl of the Promoted item
	SHCNEE_DEMOTEDITEM = 7 ' pidl2 is the pidl of the demoted item
	SHCNEE_ALIASINUSE = 8 ' some alias style folder is now being used
	SHCNEE_SHORTCUTINVOKE = 9 ' an app has been launched via a shortcut
	'  pidl1 = SHShortcutInvokeAsIDList, pidl2=unused
	SHCNEE_PINLISTCHANGED = 10 ' a change was made to the pin list
	'  pidl1 = SHChangeDWORDAsIDList, pidl2=unused
	SHCNEE_USERINFOCHANGED = 11 ' A user picture was updated. pidl1 = SHChangeDWORDAsIDList, pidl2=unused
	SHCNEE_UPDATEFOLDERLOCATION = 12 ' a special folder changed pidl1 = {SHChangeDWORDAsIDList, csidlFolder}, pidl2=unused
End Enum
Public Enum SHCN_Flags
	SHCNF_IDLIST = &H0000 ' LPITEMIDLIST
	SHCNF_PATHA = &H0001 ' path name
	SHCNF_PRINTERA = &H0002 ' printer friendly name
	SHCNF_DWORD = &H0003 ' DWORD
	SHCNF_PRINTJOBA = &H0004 ' dwItem1: printer name
	'  dwItem2: SHCNF_PRINTJOB_DATA
	SHCNF_PATHW = &H0005 ' path name
	SHCNF_PRINTERW = &H0006 ' printer friendly name
	SHCNF_PRINTJOBW = &H0007 ' dwItem1: printer name        ;Internal
	'  dwItem2: SHCNF_PRINTJOB_DATA ;Internal
	SHCNF_INSTRUMENT = &H0080 ' dwItem1: LPSHCNF_INSTRUMENT  ;Internal
	SHCNF_TYPE = &H00FF
	SHCNF_FLUSH = &H1000
	SHCNF_FLUSHNOWAIT = &H3000 ' includes SHCNF_FLUSH
	SHCNF_NOTIFYRECURSIVE = &H10000 ' Notify clients registered for any child
	SHCNF_PATH = &H0005 '= SHCNF_PATHW,
	SHCNF_PRINTER = &H0006 ' = SHCNF_PRINTERW,
End Enum
Public Type SHNOTIFYSTRUCT
	dwItem1 As LongPtr 'pidl
	dwItem2 As LongPtr 'pidl
End Type

Public Enum SystemMetrics
	SM_CXSCREEN = 0 ' 0x00
	SM_CYSCREEN = 1 ' 0x01
	SM_CXVSCROLL = 2 ' 0x02
	SM_CYHSCROLL = 3 ' 0x03
	SM_CYCAPTION = 4 ' 0x04
	SM_CXBORDER = 5 ' 0x05
	SM_CYBORDER = 6 ' 0x06
	SM_CXDLGFRAME = 7 ' 0x07
	SM_CXFIXEDFRAME = 7 ' 0x07
	SM_CYDLGFRAME = 8 ' 0x08
	SM_CYFIXEDFRAME = 8 ' 0x08
	SM_CYVTHUMB = 9 ' 0x09
	SM_CXHTHUMB = 10 ' 0x0A
	SM_CXICON = 11 ' 0x0B
	SM_CYICON = 12 ' 0x0C
	SM_CXCURSOR = 13 ' 0x0D
	SM_CYCURSOR = 14 ' 0x0E
	SM_CYMENU = 15 ' 0x0F
	SM_CXFULLSCREEN = 16 ' 0x10
	SM_CYFULLSCREEN = 17 ' 0x11
	SM_CYKANJIWINDOW = 18 ' 0x12
	SM_MOUSEPRESENT = 19 ' 0x13
	SM_CYVSCROLL = 20 ' 0x14
	SM_CXHSCROLL = 21 ' 0x15
	SM_DEBUG = 22 ' 0x16
	SM_SWAPBUTTON = 23 ' 0x17
	SM_RESERVED1 = 24
	SM_RESERVED2 = 25
	SM_RESERVED3 = 26
	SM_RESERVED4 = 27
	SM_CXMIN = 28 ' 0x1C
	SM_CYMIN = 29 ' 0x1D
	SM_CXSIZE = 30 ' 0x1E
	SM_CYSIZE = 31 ' 0x1F
	SM_CXSIZEFRAME = 32 ' 0x20
	SM_CXFRAME = 32 ' 0x20
	SM_CYSIZEFRAME = 33 ' 0x21
	SM_CYFRAME = 33 ' 0x21
	SM_CXMINTRACK = 34 ' 0x22
	SM_CYMINTRACK = 35 ' 0x23
	SM_CXDOUBLECLK = 36 ' 0x24
	SM_CYDOUBLECLK = 37 ' 0x25
	SM_CXICONSPACING = 38 ' 0x26
	SM_CYICONSPACING = 39 ' 0x27
	SM_MENUDROPALIGNMENT = 40 ' 0x28
	SM_PENWINDOWS = 41 ' 0x29
	SM_DBCSENABLED = 42 ' 0x2A
	SM_CMOUSEBUTTONS = 43 ' 0x2B
	SM_SECURE = 44 ' 0x2C
	SM_CXEDGE = 45 ' 0x2D
	SM_CYEDGE = 46 ' 0x2E
	SM_CXMINSPACING = 47 ' 0x2F
	SM_CYMINSPACING = 48 ' 0x30
	SM_CXSMICON = 49 ' 0x31
	SM_CYSMICON = 50 ' 0x32
	SM_CYSMCAPTION = 51 ' 0x33
	SM_CXSMSIZE = 52 ' 0x34
	SM_CYSMSIZE = 53 ' 0x35
	SM_CXMENUSIZE = 54 ' 0x36
	SM_CYMENUSIZE = 55 ' 0x37
	SM_ARRANGE = 56 ' 0x38
	SM_CXMINIMIZED = 57 ' 0x39
	SM_CYMINIMIZED = 58 ' 0x3A
	SM_CXMAXTRACK = 59 ' 0x3B
	SM_CYMAXTRACK = 60 ' 0x3C
	SM_CXMAXIMIZED = 61 ' 0x3D
	SM_CYMAXIMIZED = 62 ' 0x3E
	SM_NETWORK = 63 ' 0x3F
	SM_CLEANBOOT = 67 ' 0x43
	SM_CXDRAG = 68 ' 0x44
	SM_CYDRAG = 69 ' 0x45
	SM_SHOWSOUNDS = 70 ' 0x46
	SM_CXMENUCHECK = 71 ' 0x47
	SM_CYMENUCHECK = 72 ' 0x48
	SM_SLOWMACHINE = 73 ' 0x49
	SM_MIDEASTENABLED = 74 ' 0x4A
	SM_MOUSEWHEELPRESENT = 75 ' 0x4B
	SM_XVIRTUALSCREEN = 76 ' 0x4C
	SM_YVIRTUALSCREEN = 77 ' 0x4D
	SM_CXVIRTUALSCREEN = 78 ' 0x4E
	SM_CYVIRTUALSCREEN = 79 ' 0x4F
	SM_CMONITORS = 80 ' 0x50
	SM_SAMEDISPLAYFORMAT = 81 ' 0x51
	SM_IMMENABLED = 82 ' 0x52
	SM_CXFOCUSBORDER = 83 ' 0x53
	SM_CYFOCUSBORDER = 84 ' 0x54
	SM_TABLETPC = 86 ' 0x56
	SM_MEDIACENTER = 87 ' 0x57
	SM_STARTER = 88 ' 0x58
	SM_SERVERR2 = 89 ' 0x59
	SM_MOUSEHORIZONTALWHEELPRESENT = 91 ' 0x5B
	SM_CXPADDEDBORDER = 92 ' 0x5C
	SM_DIGITIZER = 94 ' 0x5E
	SM_MAXIMUMTOUCHES = 95 ' 0x5F
    SM_CMETRICS = 97
	SM_REMOTESESSION = &H1000 ' 0x1000
	SM_SHUTTINGDOWN = &H2000 ' 0x2000
	SM_REMOTECONTROL = &H2001 ' 0x2001
	SM_CONVERTABLESLATEMODE = &H2003
	SM_SYSTEMDOCKED = &H2004
End Enum
Public Type NMHDR
    hWndFrom                    As LongPtr
    IDFrom                      As LongPtr
    Code                        As Long
End Type

Public Enum CATEGORYINFO_FLAGS
	CATINFO_NORMAL = &H00000000 ' Apply default properties to this category
	CATINFO_COLLAPSED = &H00000001 ' This category should appear collapsed. useful for the "None" category.
	CATINFO_HIDDEN = &H00000002 ' This category should follow the "Hidden" files setting for being displayed
	CATINFO_EXPANDED = &H00000004 ' This category should appear expanded.
	CATINFO_NOHEADER = &H00000008 ' This category has no header.
	CATINFO_NOTCOLLAPSIBLE = &H00000010 ' This category can not be collapsed.
	CATINFO_NOHEADERCOUNT = &H00000020 ' The count of items in the category should not be displayed in the header
	'  Win7 Flags
	CATINFO_SUBSETTED = &H00000040 ' The category should appear subsetted.
	'  Threshold Flags
	CATINFO_SEPARATE_IMAGES = &H00000080 ' The category should use its own image list.
	CATINFO_SHOWEMPTY = &H00000100 ' Show the category even when empty.
End Enum

Public Enum CATSORT_FLAGS
	CATSORT_DEFAULT = &H00000000 ' Default Sort order
	CATSORT_NAME = &H00000001 ' Sort by name
End Enum

Public Type CATEGORY_INFO
	cif As CATEGORYINFO_FLAGS
	wszName(0 To 519) As Byte
End Type

Public Enum SORTDIRECTION
	SORT_DESCENDING = -1
	SORT_ASCENDING = 1
End Enum

Public Type SORTCOLUMN
	propkey As PROPERTYKEY
	direction As SORTDIRECTION
End Type

Public Enum AUTOCOMPLETEOPTIONS
	ACO_NONE = &H00
	ACO_AUTOSUGGEST = &H01
	ACO_AUTOAPPEND = &H02
	ACO_SEARCH = &H04
	ACO_FILTERPREFIXES = &H08
	ACO_USETAB = &H10
	ACO_UPDOWNKEYDROPSLIST = &H20
	ACO_RTLREADING = &H40
	ACO_WORD_FILTER = &H80
	ACO_NOPREFIXFILTERING = &H100
End Enum

Public Enum ACENUMOPTION
	ACEO_NONE = 0
	ACEO_MOSTRECENTFIRST = &H1
	ACEO_FIRSTUNUSED = &H10000
End Enum

Public Enum AUTOCOMPLETELISTOPTIONS
	ACLO_NONE = 0
	ACLO_CURRENTDIR = 1
	ACLO_MYCOMPUTER = 2
	ACLO_DESKTOP = 4
	ACLO_FAVORITES = 8
	ACLO_FILESYSONLY = 16
	ACLO_FILESYSDIRS = 32
	ACLO_VIRTUALNAMESPACE = 64
End Enum


Public Type OLEMENUGROUPWIDTHS
	width(0 To 5) As Long
End Type

Public Enum ASSOCF
	ASSOCF_INIT_NOREMAPCLSID = &H00000001 ' do not remap clsids to progids
	ASSOCF_INIT_BYEXENAME = &H00000002 ' executable is being passed in
	ASSOCF_OPEN_BYEXENAME = &H00000002 ' executable is being passed in
	ASSOCF_INIT_DEFAULTTOSTAR = &H00000004 ' treat "*" as the BaseClass
	ASSOCF_INIT_DEFAULTTOFOLDER = &H00000008 ' treat "Folder" as the BaseClass
	ASSOCF_NOUSERSETTINGS = &H00000010 ' dont use HKCU
	ASSOCF_NOTRUNCATE = &H00000020 ' dont truncate the return string
	ASSOCF_VERIFY = &H00000040 ' verify data is accurate (DISK HITS)
	ASSOCF_REMAPRUNDLL = &H00000080 ' actually gets info about rundlls target if applicable
	ASSOCF_NOFIXUPS = &H00000100 ' attempt to fix errors if found
	ASSOCF_IGNOREBASECLASS = &H00000200 ' dont recurse into the baseclass
	ASSOCF_INIT_IGNOREUNKNOWN = &H00000400 '  dont use the "Unknown" progid, instead fail
	' #if (NTDDI_WIN8)
	ASSOCF_INIT_FIXED_PROGID = &H00000800 '  the Init() pszAssoc value is a ProgId that should not be mapped using the current user defaults
	ASSOCF_IS_PROTOCOL = &H00001000 '  the Init() pszAssoc value is a protocol that should be mapped using the current user defaults
	ASSOCF_INIT_FOR_FILE = &H00002000 '  use this flag when specifying ASSOCF_INIT_FIXED_PROGID if the ProgId corresponds with a file extension based association
	' #endif
End Enum

Public Enum ASSOCSTR
	ASSOCSTR_COMMAND = 1 ' shell\verb\command string
	ASSOCSTR_EXECUTABLE = 2 ' the executable part of command string
	ASSOCSTR_FRIENDLYDOCNAME = 3 ' friendly name of the document type
	ASSOCSTR_FRIENDLYAPPNAME = 4 ' friendly name of executable
	ASSOCSTR_NOOPEN = 5 ' noopen value
	ASSOCSTR_SHELLNEWVALUE = 6 ' query values under the shellnew key
	ASSOCSTR_DDECOMMAND = 7 ' template for DDE commands
	ASSOCSTR_DDEIFEXEC = 8 ' DDECOMMAND to use if just create a process
	ASSOCSTR_DDEAPPLICATION = 9 ' Application name in DDE broadcast
	ASSOCSTR_DDETOPIC = 10 ' Topic Name in DDE broadcast
	ASSOCSTR_INFOTIP = 11 ' info tip for an item, or list of properties to create info tip from
	ASSOCSTR_QUICKTIP = 12 ' same as ASSOCSTR_INFOTIP, except, this list contains only quickly retrievable properties
	ASSOCSTR_TILEINFO = 13 '  similar to ASSOCSTR_INFOTIP - lists important properties for tileview
	ASSOCSTR_CONTENTTYPE = 14 '  MIME Content type
	ASSOCSTR_DEFAULTICON = 15 '  Default icon source
	ASSOCSTR_SHELLEXTENSION = 16 '  Guid string pointing to the Shellex\Shellextensionhandler value.
	ASSOCSTR_DROPTARGET = 17 '  The CLSID of DropTarget
	ASSOCSTR_DELEGATEEXECUTE = 18 '  The CLSID of DelegateExecute
	ASSOCSTR_SUPPORTED_URI_PROTOCOLS = 19
	' #if (NTDDI_VERSION >= NTDDI_WIN10)
	ASSOCSTR_PROGID = 20 ' The ProgId provided by the app associated with the file type or uri scheme based on user default settings.
	ASSOCSTR_APPID = 21 ' The AppUserModelID of the app associated with the file type or uri scheme based on user default settings.
	ASSOCSTR_APPPUBLISHER = 22 ' THe publisher of the app associated with the file type or uri scheme based on user default settings.
	ASSOCSTR_APPICONREFERENCE = 23 ' The icon reference of the app associated with the file type or uri scheme based on user default settings.
	' #end if
	ASSOCSTR_MAX = 24 ' last item in enum...
End Enum

Public Enum ASSOCKEY
	ASSOCKEY_SHELLEXECCLASS = 1 ' the key that should be passed to ShellExec(hkeyClass)
	ASSOCKEY_APP = 2 ' the "Application" key for the association
	ASSOCKEY_CLASS = 3 ' the progid or class key
	ASSOCKEY_BASECLASS = 4 ' the BaseClass key
	ASSOCKEY_MAX = 5 ' last item in enum...
End Enum

Public Enum ASSOCDATA
	ASSOCDATA_MSIDESCRIPTOR = 1 ' Component Descriptor to pass to MSI APIs
	ASSOCDATA_NOACTIVATEHANDLER = 2 ' restrict attempts to activate window
	ASSOCDATA_QUERYCLASSSTORE = 3 ' should check with the NT Class Store
	ASSOCDATA_HASPERUSERASSOC = 4 ' defaults to user specified association
	ASSOCDATA_EDITFLAGS = 5 '  Edit flags.
	ASSOCDATA_VALUE = 6 '  use pszExtra as the Value name
	ASSOCDATA_MAX = 7
End Enum

Public Enum ASSOCENUM
	ASSOCENUM_NONE
End Enum

Public Enum ASSOCCLASS
	ASSOCCLASS_SHELL_KEY = 0 '  hkeyClass
	ASSOCCLASS_PROGID_KEY = 1 '  hkeyClass
	ASSOCCLASS_PROGID_STR = 2 '  pszClass (HKCR\pszClass)
	ASSOCCLASS_CLSID_KEY = 3 '  hkeyClass
	ASSOCCLASS_CLSID_STR = 4 '  pszClass (HKCR\CLSID\pszClass)
	ASSOCCLASS_APP_KEY = 5 '  hkeyClass
	ASSOCCLASS_APP_STR = 6 '  pszClass (HKCR\Applications\PathFindFileName(pszClass))
	ASSOCCLASS_SYSTEM_STR = 7 '  pszClass
	ASSOCCLASS_FOLDER = 8 '  none
	ASSOCCLASS_STAR = 9 '  none
	' #if (NTDDI_WIN8)
	ASSOCCLASS_FIXED_PROGID_STR = 10 '  pszClass (HKCR\pszClass), do not apply mapping of pszClass based on user defaults
	ASSOCCLASS_PROTOCOL_STR = 11 '  pszClass is a protocol, apply mapping of pszClass based on user defaults
	' #endif
End Enum

Public Type ASSOCIATIONELEMENT
	ac As ASSOCCLASS ' required
	hkClass As LongPtr ' may be NULL
	pszClass As LongPtr ' may be NULL
End Type

Public Type SECURITY_ATTRIBUTES
	nLength As Long
	lpSecurityDescriptor As LongPtr
	bInheritHandle As Long
End Type

Public Enum VARENUM
	VT_EMPTY = 0
	VT_NULL = 1
	VT_I2 = 2
	VT_I4 = 3
	VT_R4 = 4
	VT_R8 = 5
	VT_CY = 6
	VT_DATE = 7
	VT_BSTR = 8
	VT_DISPATCH = 9
	VT_ERROR = 10
	VT_BOOL = 11
	VT_VARIANT = 12
	VT_UNKNOWN = 13
	VT_DECIMAL = 14
	VT_I1 = 16
	VT_UI1 = 17
	VT_UI2 = 18
	VT_UI4 = 19
	VT_I8 = 20
	VT_UI8 = 21
	VT_INT = 22
	VT_UINT = 23
	VT_VOID = 24
	VT_HRESULT = 25
	VT_PTR = 26
	VT_SAFEARRAY = 27
	VT_CARRAY = 28
	VT_USERDEFINED = 29
	VT_LPSTR = 30
	VT_LPWSTR = 31
	VT_RECORD = 36
	VT_INT_PTR = 37
	VT_UINT_PTR = 38
	VT_FILETIME = 64
	VT_BLOB = 65
	VT_STREAM = 66
	VT_STORAGE = 67
	VT_STREAMED_OBJECT = 68
	VT_STORED_OBJECT = 69
	VT_BLOB_OBJECT = 70
	VT_CF = 71
	VT_CLSID = 72
	VT_STREAMED_PROPSET = 73
	VT_STORED_PROPSET = 74
	VT_BLOB_PROPSET = 75
	VT_VERBOSE_ENUM = 76
	VT_BSTR_BLOB = &HFFF
	VT_VECTOR = &H1000
	VT_ARRAY = &H2000
	VT_BYREF = &H4000
	VT_RESERVED = &H8000&
    VT_HARDTYPE = VT_RESERVED
    VT_COLOR = VT_I4
    VT_XPOS_PIXELS = VT_I4
    VT_YPOS_PIXELS = VT_I4
    VT_XSIZE_PIXELS = VT_I4
    VT_YSIZE_PIXELS = VT_I4
    VT_XPOS_HIMETRIC = VT_I4
    VT_YPOS_HIMETRIC = VT_I4
    VT_XSIZE_HIMETRIC = VT_I4
    VT_YSIZE_HIMETRIC = VT_I4
    VT_TRISTATE = VT_I2
    VT_OPTEXCLUSIVE = VT_BOOL
    VT_FONT = VT_DISPATCH
    VT_PICTURE = VT_DISPATCH
    VT_HANDLE = VT_I4
	VT_ILLEGAL = &Hffff&
	VT_ILLEGALMASKED = &H0fff
	VT_TYPEMASK = &H0fff
End Enum


Public Enum FDE_OVERWRITE_RESPONSE
	FDEOR_DEFAULT = 0 ' The application has not handled the event, and the dialog should put up UI asking the user
	'  whether or not the file should be overwritten and be returned from the dialog
	FDEOR_ACCEPT = 1 ' The application has decided that the file should be returned from the dialog
	FDEOR_REFUSE = 2 ' The application has decided that the file should not be returned from the dialog
End Enum

Public Enum FDE_SHAREVIOLATION_RESPONSE
	FDESVR_DEFAULT = 0 ' The application has not handled the event.  The dialog will put up UI indicating the file
	'  is in use, and a different file must be chosen.
	FDESVR_ACCEPT = 1 ' The application has decided that the file should be returned from the dialog
	FDESVR_REFUSE = 2 ' The application has decided that the file should not be returned from the dialog
End Enum

Public Enum FDAP
	FDAP_BOTTOM = 0 ' The place is added to the bottom of the default list.
	FDAP_TOP = 1 ' The place is added to the top of the default list.
End Enum

Public Enum FILEOPENDIALOGOPTIONS
	FOS_OVERWRITEPROMPT = &H00000002 ' (on by default in the save dialog)
	FOS_STRICTFILETYPES = &H00000004 ' In the save dialog, only allow the user to choose a file that has
	'  one of the file extensions provided in SetFileTypes.
	FOS_NOCHANGEDIR = &H00000008 ' Don't change the current working directory
	FOS_PICKFOLDERS = &H00000020 ' Invoke the open dialog in folder picking mode.
	FOS_FORCEFILESYSTEM = &H00000040 ' Ensure that items returned are filesystem items.
	FOS_ALLNONSTORAGEITEMS = &H00000080 ' Allow choosing items that have no storage.
	FOS_NOVALIDATE = &H00000100
	FOS_ALLOWMULTISELECT = &H00000200
	FOS_PATHMUSTEXIST = &H00000800 ' (on by default)
	FOS_FILEMUSTEXIST = &H00001000 ' (on by default in the open dialog and folder picker)
	FOS_CREATEPROMPT = &H00002000
	FOS_SHAREAWARE = &H00004000
	FOS_NOREADONLYRETURN = &H00008000& ' (on by default in the save dialog)
	FOS_NOTESTFILECREATE = &H00010000 ' Avoid testing the creation of the chosen file in the save dialog
	'  (specifying this flag will circumvent some useful error handling, such as access denied)
	FOS_HIDEMRUPLACES = &H00020000 ' (not used in Win7)
	FOS_HIDEPINNEDPLACES = &H00040000 ' Don't display the standard namespace locations in the navigation pane.
	'  (generally used along with AddPlace)
	FOS_NODEREFERENCELINKS = &H00100000 ' Don't treat shortcuts as their target files.
	FOS_DONTADDTORECENT = &H02000000 ' Don't add the chosen file to the recent documents list (SHAddToRecentDocs)
	FOS_FORCESHOWHIDDEN = &H10000000 ' Show all files including system and hidden files.
	FOS_DEFAULTNOMINIMODE = &H20000000 ' (not used in Win7)
	FOS_FORCEPREVIEWPANEON = &H40000000
	FOS_SUPPORTSTREAMABLEITEMS = &H80000000 ' Indicates the caller will use BHID_Stream to open contents, no need to download the file
End Enum

Public Type COMDLG_FILTERSPEC
    pszName As LongPtr
    pszSpec As LongPtr
End Type

Public Enum CDCONTROLSTATEF
	CDCS_INACTIVE = &H00000000
	CDCS_ENABLED = &H00000001
	CDCS_VISIBLE = &H00000002
	CDCS_ENABLEDVISIBLE = &H00000003
End Enum

Public Enum THUMBBUTTONFLAGS
	THBF_ENABLED = &H00000000
	THBF_DISABLED = &H00000001
	THBF_DISMISSONCLICK = &H00000002
	THBF_NOBACKGROUND = &H00000004
	THBF_HIDDEN = &H00000008
	THBF_NONINTERACTIVE = &H00000010
End Enum

Public Enum THUMBBUTTONMASK
	THB_BITMAP = &H00000001
	THB_ICON = &H00000002
	THB_TOOLTIP = &H00000004
	THB_FLAGS = &H00000008
End Enum

Public Type THUMBBUTTON
	dwMask As THUMBBUTTONMASK
	iId As Long
	iBitmap As Long
	hIcon As LongPtr
	szTip(0 To 259) As Integer
	dwFlags As THUMBBUTTONFLAGS
End Type

Public Enum TBPFLAG
	TBPF_NOPROGRESS = &H00000000
	TBPF_INDETERMINATE = &H00000001
	TBPF_NORMAL = &H00000002
	TBPF_ERROR = &H00000004
	TBPF_PAUSED = &H00000008
End Enum

Public Enum STPFLAG
	STPF_NONE = &H00000000
	STPF_USEAPPTHUMBNAILALWAYS = &H00000001
	STPF_USEAPPTHUMBNAILWHENACTIVE = &H00000002
	STPF_USEAPPPEEKALWAYS = &H00000004
	STPF_USEAPPPEEKWHENACTIVE = &H00000008
End Enum

Public Enum KNOWNDESTCATEGORY
	KDC_FREQUENT = 1
	KDC_RECENT = 2
End Enum

Public Enum ShellWindowTypeConstants
    SWC_EXPLORER = &H0
    SWC_BROWSER = &H00000001
    SWC_3RDPARTY = &H00000002
    SWC_CALLBACK = &H00000004
    SWC_DESKTOP = &H00000008
End Enum

Public Enum ShellWindowFindWindowOptions
	SWFO_NEEDDISPATCH = &H00000001
	SWFO_INCLUDEPENDING = &H00000002
	SWFO_COOKIEPASSED = &H00000004
End Enum

Public Enum FVTEXTTYPE
	FVST_EMPTYTEXT = 0
End Enum

Public Enum SYNC_ENGINE_STATE_FLAGS
    SESF_NONE = &H00 ' No state
    SESF_SERVICE_QUOTA_NEARING_LIMIT = &H01 ' This value is set when the user's quota is nearing capacity. The values for this is dependent on the user's total quota space.
    SESF_SERVICE_QUOTA_EXCEEDED_LIMIT = &H02 ' The user's quota is completely filled
    SESF_AUTHENTICATION_ERROR = &H04 ' The credentials for the user's account are invalid
    SESF_PAUSED_DUE_TO_METERED_NETWORK = &H08 ' Sync engine is paused due to metered network settings
    SESF_PAUSED_DUE_TO_DISK_SPACE_FULL = &H10 ' The drive that contains the sync engine content has reached the maximum allowed space
    SESF_PAUSED_DUE_TO_CLIENT_POLICY = &H20 ' User has gone over the daily limit of requests or data transfers to the service
    SESF_PAUSED_DUE_TO_SERVICE_POLICY = &H40 ' Service has requested us to throttle all requests
    SESF_SERVICE_UNAVAILABLE = &H80 ' Service can't be reached at this time
    SESF_PAUSED_DUE_TO_USER_REQUEST = &H100 ' Sync engine was paused due to an explicit user request
    SESF_ALL_FLAGS = (SESF_NONE Or SESF_SERVICE_QUOTA_NEARING_LIMIT Or SESF_SERVICE_QUOTA_EXCEEDED_LIMIT Or SESF_AUTHENTICATION_ERROR Or SESF_PAUSED_DUE_TO_METERED_NETWORK Or SESF_PAUSED_DUE_TO_DISK_SPACE_FULL Or SESF_PAUSED_DUE_TO_CLIENT_POLICY Or SESF_PAUSED_DUE_TO_SERVICE_POLICY Or SESF_SERVICE_UNAVAILABLE Or SESF_PAUSED_DUE_TO_USER_REQUEST)
End Enum

Public Enum FOLDERVIEWOPTIONS
	FVO_DEFAULT = &H00000000 ' default needs none of these options and will use Itemsview
	FVO_VISTALAYOUT = &H00000001 ' always use listview to maintain vista parity
	FVO_CUSTOMPOSITION = &H00000002 ' requires the custom positioning of items within the X,Y space of the view
	FVO_CUSTOMORDERING = &H00000004 ' requires the custom reordering feature of the view
	FVO_SUPPORTHYPERLINKS = &H00000008 ' requires the use of hyperlinks in tiles and details modes
	FVO_NOANIMATIONS = &H00000010 ' turn off animations within the view
	FVO_NOSCROLLTIPS = &H00000020 ' turn off scroll tips
End Enum

Public Enum PROGDLG
	PROGDLG_NORMAL = &H00000000 ' default normal progress dlg behavior
	PROGDLG_MODAL = &H00000001 ' the dialog is modal to its hwndParent (default is modeless)
	PROGDLG_AUTOTIME = &H00000002 ' automatically updates the "Line3" text with the "time remaining" (you cant call SetLine3 if you passs this!)
	PROGDLG_NOTIME = &H00000004 ' we dont show the "time remaining" if this is set. We need this if dwTotal < dwCompleted for sparse files
	PROGDLG_NOMINIMIZE = &H00000008 ' Do not have a minimize button in the caption bar.
	PROGDLG_NOPROGRESSBAR = &H00000010 ' Don't display the progress bar
	PROGDLG_MARQUEEPROGRESS = &H00000020 ' Use marquee progress (comctl32 v6 required)
	PROGDLG_NOCANCEL = &H00000040 ' No cancel button (operation cannot be canceled) (use sparingly)
End Enum
Public Enum ProgDlgTimeActions
    PDTIMER_RESET = &H00000001  ' Reset the timer so the progress will be calculated from now until the first ::SetProgress() is called so
'  those this time will correspond to the values passed to ::SetProgress().  Only do this before ::SetProgress() is called.
' #if (_WIN32_IE >= _WIN32_IE_IE70)
    PDTIMER_PAUSE = &H00000002  ' Progress has been suspended
    PDTIMER_RESUME = &H00000003
End Enum


Public Enum NAMESPACEWALKFLAG
	NSWF_DEFAULT = &H00000000
	NSWF_NONE_IMPLIES_ALL = &H00000001
	NSWF_ONE_IMPLIES_ALL = &H00000002
	NSWF_DONT_TRAVERSE_LINKS = &H00000004 ' don't traverse the targets of link items (items with SFGAO_LINK)
	NSWF_DONT_ACCUMULATE_RESULT = &H00000008 ' don't store the results of the walk, GetIDArrayResult() will fail if called
	'  for items with both SFGAO_FOLDER and SFGAO_STREAM discovered via the walk
	'  (as opposed to those passed as the input) for example .zip, .search-ms and .library-ms files
	'  traverse through them and find the items they reference. this will result in
	'  EnterFolder()/LeaveFolder() callbacks instead of FoundItem()
	NSWF_TRAVERSE_STREAM_JUNCTIONS = &H00000010
	NSWF_FILESYSTEM_ONLY = &H00000020 ' only return file system items (SFGAO_FILESYSTEM)
	NSWF_SHOW_PROGRESS = &H00000040 ' display the progress dialog while walking
	NSWF_FLAG_VIEWORDER = &H00000080 ' order the items based on the view order that might be different from the default sort
	NSWF_IGNORE_AUTOPLAY_HIDA = &H00000100
	NSWF_ASYNC = &H00000200 ' run the walk on a background thread
	NSWF_DONT_RESOLVE_LINKS = &H00000400 ' avoid the expense of resolving links, means link targets might not be up to date
	NSWF_ACCUMULATE_FOLDERS = &H00000800
	NSWF_DONT_SORT = &H00001000 ' Don't maintain sort order of items
	NSWF_USE_TRANSFER_MEDIUM = &H00002000 ' Use SHCONTF_STORAGE in enumerations
	'  for items with both SFGAO_FOLDER and SFGAO_STREAM passed to the walk
	'  (as opposed to those discovered by walking), for example .zip, .search-ms and .library-ms files
	'  do not traverse them, instead treat them as items. this will result in
	'  FoundItem() callbacks instead of EnterFolder()/LeaveFolder()
	NSWF_DONT_TRAVERSE_STREAM_JUNCTIONS = &H00004000
	NSWF_ANY_IMPLIES_ALL = &H00008000& 'Windows 8+ only
End Enum

Public Enum FOLDERLOGICALVIEWMODE
	FLVM_UNSPECIFIED = -1
	FLVM_FIRST = 1
	FLVM_DETAILS = 1
	FLVM_TILES = 2
	FLVM_ICONS = 3
	FLVM_LIST = 4
	FLVM_CONTENT = 5
	FLVM_LAST = 5
End Enum

Public Enum FILE_USAGE_TYPE
	FUT_PLAYING = 0
	FUT_EDITING = 1
	FUT_GENERIC = 2
End Enum

Public Enum NI_FLAGS
	NIF_MESSAGE = &H00000001
	NIF_ICON = &H00000002
	NIF_TIP = &H00000004
	NIF_STATE = &H00000008
	NIF_INFO = &H00000010
	NIF_GUID = &H00000020
	NIF_REALTIME = &H00000040
	NIF_SHOWTIP = &H00000080
End Enum
Public Enum NI_State
	NIS_HIDDEN = &H00000001
	NIS_SHAREDICON = &H00000002
End Enum
Public Enum NII_FLAGS
	NIIF_NONE = &H00000000
	'  icon flags are mutually exclusive
	'  and take only the lowest 2 bits
	NIIF_INFO = &H00000001
	NIIF_WARNING = &H00000002
	NIIF_ERROR = &H00000003
	NIIF_USER = &H00000004
	NIIF_ICON_MASK = &H0000000F
	NIIF_NOSOUND = &H00000010
	NIIF_LARGE_ICON = &H00000020
	NIIF_RESPECT_QUIET_TIME = &H00000080 'Win7+
End Enum

Public Type NOTIFYICONDATAA
	cbSize As Long
	hWnd As LongPtr
	uID As Long
	uFlags As NI_FLAGS
	uCallbackMessage As Long
	hIcon As LongPtr
	szTip(0 To 127) As Byte
	dwState As NI_State
	dwStateMask As NI_State
	szInfo(0 To 255) As Byte
	uTimeoutAndVersion As Long ' used with NIM_SETVERSION, values 0, 3 and 4
	szInfoTitle(0 To 63) As Byte
	dwInfoFlags As NII_FLAGS
	guidItem As UUID
	hBalloonIcon As LongPtr
End Type
Public Type NOTIFYICONDATAW
    cbSize As Long
    hWnd As LongPtr
    uID As Long
    uFlags As NI_FLAGS
    uCallbackMessage As Long
    hIcon As LongPtr
    szTip(0 To 127) As Integer
    dwState As NI_State
    dwStateMask As NI_State
    szInfo(0 To 255) As Integer
    uTimeoutAndVersion As Long ' used with NIM_SETVERSION, values 0, 3 and 4
    szInfoTitle(0 To 63) As Integer
    dwInfoFlags As NII_FLAGS
    guidItem As UUID
    hBalloonIcon As LongPtr
End Type
Public Type NOTIFYICONDATA
    cbSize As Long
    hWnd As LongPtr
    uID As Long
    uFlags As NI_FLAGS
    uCallbackMessage As Long
    hIcon As LongPtr
    szTip(0 To 127) As Integer
    dwState As NI_State
    dwStateMask As NI_State
    szInfo(0 To 255) As Integer
    uTimeoutAndVersion As Long ' used with NIM_SETVERSION, values 0, 3 and 4
    szInfoTitle(0 To 63) As Integer
    dwInfoFlags As NII_FLAGS
    guidItem As UUID
    hBalloonIcon As LongPtr
End Type

Public Const NOTIFYICON_VERSION  = 3
' #if (NTDDI_VERSION >= NTDDI_VISTA)
Public Const NOTIFYICON_VERSION_4  = 4

Public Const NOTIFYICONDATAA_V1_SIZE = &H58
Public Const NOTIFYICONDATAW_V1_SIZE = &H98
Public Const NOTIFYICONDATA_V1_SIZE = NOTIFYICONDATAW_V1_SIZE
Public Const NOTIFYICONDATAA_V2_SIZE = &H1e8
Public Const NOTIFYICONDATAW_V2_SIZE = &H3a8
Public Const NOTIFYICONDATA_V2_SIZE = NOTIFYICONDATAW_V2_SIZE
Public Const NOTIFYICONDATAA_V3_SIZE = &H1f8
Public Const NOTIFYICONDATAW_V3_SIZE = &H3b8
Public Const NOTIFYICONDATA_V3_SIZE = NOTIFYICONDATAW_V3_SIZE


Public Enum NI_NOTIFY
	NIN_SELECT = (&H400 + 0)
	NINF_KEY = &H1
	NIN_KEYSELECT = (NIN_SELECT Or NINF_KEY)
	NIN_BALLOONSHOW = (&H400 + 2)
	NIN_BALLOONHIDE = (&H400 + 3)
	NIN_BALLOONTIMEOUT = (&H400 + 4)
	NIN_BALLOONUSERCLICK = (&H400 + 5)
	NIN_POPUPOPEN = (&H400 + 6)
	NIN_POPUPCLOSE = (&H400 + 7)
End Enum

Public Enum NI_MESSAGES
	NIM_ADD = &H00000000
	NIM_MODIFY = &H00000001
	NIM_DELETE = &H00000002
	NIM_SETFOCUS = &H00000003
	NIM_SETVERSION = &H00000004
End Enum

Public Type NOTIFYICONIDENTIFIER
	cbSize As Long
	hWnd As LongPtr
	uID As Long
	guidItem As UUID
End Type

Public Enum SHELL_LINK_DATA_FLAGS
	SLDF_DEFAULT = &H00000000
	SLDF_HAS_ID_LIST = &H00000001
	SLDF_HAS_LINK_INFO = &H00000002
	SLDF_HAS_NAME = &H00000004
	SLDF_HAS_RELPATH = &H00000008
	SLDF_HAS_WORKINGDIR = &H00000010
	SLDF_HAS_ARGS = &H00000020
	SLDF_HAS_ICONLOCATION = &H00000040
	SLDF_UNICODE = &H00000080
	SLDF_FORCE_NO_LINKINFO = &H00000100
	SLDF_HAS_EXP_SZ = &H00000200
	SLDF_RUN_IN_SEPARATE = &H00000400
	SLDF_HAS_LOGO3ID = &H00000800
	SLDF_HAS_DARWINID = &H00001000
	SLDF_RUNAS_USER = &H00002000
	SLDF_HAS_EXP_ICON_SZ = &H00004000
	SLDF_NO_PIDL_ALIAS = &H00008000&
	SLDF_FORCE_UNCNAME = &H00010000
	SLDF_RUN_WITH_SHIMLAYER = &H00020000
	SLDF_FORCE_NO_LINKTRACK = &H00040000
	SLDF_ENABLE_TARGET_METADATA = &H00080000
	SLDF_DISABLE_LINK_PATH_TRACKING = &H00100000
	SLDF_DISABLE_KNOWNFOLDER_RELATIVE_TRACKING = &H00200000
	SLDF_NO_KF_ALIAS = &H00400000
	SLDF_ALLOW_LINK_TO_LINK = &H00800000
	SLDF_UNALIAS_ON_SAVE = &H01000000
	SLDF_PREFER_ENVIRONMENT_PATH = &H02000000
	SLDF_KEEP_LOCAL_IDLIST_FOR_UNC_TARGET = &H04000000
	SLDF_PERSIST_VOLUME_ID_RELATIVE = &H08000000
	SLDF_VALID = &H0FFFF7FF
	SLDF_RESERVED = &H80000000
End Enum
Public Enum SHELL_LINK_DATABLOCK_SIG
	EXP_SZ_LINK_SIG = &HA0000001
	NT_CONSOLE_PROPS_SIG = &HA0000002
	NT_FE_CONSOLE_PROPS_SIG = &HA0000004
	EXP_SPECIAL_FOLDER_SIG = &HA0000005
	EXP_DARWIN_ID_SIG = &HA0000006
	EXP_SZ_ICON_SIG = &HA0000007
	EXP_PROPERTYSTORAGE_SIG = &HA0000009
End Enum
Public Type DATABLOCK_HEADER
	cbSize As Long ' Size of this extra data block
	dwSignature As SHELL_LINK_DATABLOCK_SIG ' signature of this extra data block
End Type
Public Type COORD
	x As Integer
	y As Integer
End Type
Public Type NT_CONSOLE_PROPS
	dbh As DATABLOCK_HEADER
	wFillAttribute As Long ' fill attribute for console
	wPopupFillAttribute As Long ' fill attribute for console popups
	dwScreenBufferSize As COORD ' screen buffer size for console
	dwWindowSize As COORD ' window size for console
	dwWindowOrigin As COORD ' window origin for console
	nFont As Long
	nInputBufferSize As Long
	dwFontSize As COORD
	uFontFamily As Long
	uFontWeight As Long
	FaceName(0 To 31) As Integer '[LF_FACESIZE]
	uCursorSize As Long
	bFullScreen As Long
	bQuickEdit As Long
	bInsertMode As Long
	bAutoPosition As Long
	uHistoryBufferSize As Long
	uNumberOfHistoryBuffers As Long
	bHistoryNoDup As Long
	ColorTable(0 To 15) As Long
End Type
Public Type NT_FE_CONSOLE_PROPS
	dbh As DATABLOCK_HEADER
	uCodePage As Long
End Type
Public Type EXP_DARWIN_LINK
	dbh As DATABLOCK_HEADER
	szDarwinID(0 To 259) As Byte ' ANSI darwin ID associated with link
	szwDarwinID(0 To 259) As Integer ' UNICODE darwin ID associated with link
End Type
Public Type EXP_SPECIAL_FOLDER
	cbSize As Long ' Size of this extra data block
	dwSignature As SHELL_LINK_DATABLOCK_SIG ' signature of this extra data block
	idSpecialFolder As Long ' special folder id this link points into
	cbOffset As Long ' ofset into pidl from SLDF_HAS_ID_LIST for child
End Type
Public Type EXP_SZ_LINK
	cbSize As Long ' Size of this extra data block
	dwSignature As SHELL_LINK_DATABLOCK_SIG ' signature of this extra data block
	szTarget(0 To 259) As Byte ' ANSI target name w/EXP_SZ in it
	swzTarget(0 To 259) As Integer ' UNICODE target name w/EXP_SZ in it
End Type
Public Type EXP_PROPERTYSTORAGE
	cbSize As Long ' Size of this extra data block
	dwSignature As SHELL_LINK_DATABLOCK_SIG ' signature of this extra data block
	abPropertyStorage(0 To 1023) As Byte
End Type

Public Enum SPINITF
	SPINITF_NORMAL = &H00000000 ' default normal progress behavior
	SPINITF_MODAL = &H00000001 ' call punkSite->EnableModeless() or EnableWindow()
	SPINITF_NOMINIMIZE = &H00000008 ' Do not have a minimize button in the caption bar.
End Enum
Public Enum SPBEGINF
	SPBEGINF_NORMAL = &H00000000 ' default normal progress behavior
	SPBEGINF_AUTOTIME = &H00000002 ' automatically updates the "time remaining" text
	SPBEGINF_NOPROGRESSBAR = &H00000010 ' Don't display the progress bar (SetProgress() wont be called)
	SPBEGINF_MARQUEEPROGRESS = &H00000020 ' use marquee progress (comctl32 v6 required)
	SPBEGINF_NOCANCELBUTTON = &H00000040 ' no cancel button
End Enum
Public Enum SPTEXT
	SPTEXT_ACTIONDESCRIPTION = 1
	SPTEXT_ACTIONDETAIL
End Enum
Public Enum STGMOVE
	STGMOVE_MOVE = 0
	STGMOVE_COPY = 1
	STGMOVE_SHALLOWCOPY = 2
End Enum

Public Type EXCEPINFO
	wCode As Integer
	wReserved As Integer
	Source As String
	Description As String
	HelpFile As String
	dwHelpContext As Long
	pvReserved As LongPtr
	pfnDeferredFillIn As LongPtr
	scode As Long
End Type

Public Enum PROPBAG2_TYPE
	PROPBAG2_TYPE_UNDEFINED = 0
	PROPBAG2_TYPE_DATA = 1 ' Value is simple data
	PROPBAG2_TYPE_URL = 2 ' Value is a URL reference
	PROPBAG2_TYPE_OBJECT = 3 ' Value is an object
	PROPBAG2_TYPE_STREAM = 4 ' Value is a stream
	PROPBAG2_TYPE_STORAGE = 5 ' Value is a storage
	PROPBAG2_TYPE_MONIKER = 6 ' Value is a moniker
End Enum

Public Type PROPBAG2
	dwType As Long ' Property type (from PROPBAG2_TYPE)
	vt As Integer ' VARIANT property type
	cfType As Integer ' Clipboard format (aka MIME-type)
	dwHint As Long ' Property name hint
	pstrName As LongPtr ' Property name
	clsid As UUID ' CLSID (for PROPBAG2_TYPE_OBJECT)
End Type

Public Enum CDBURNINGEXTENSIONRET
	CDBE_RET_DEFAULT = &H00000000
	CDBE_RET_DONTRUNOTHEREXTS = &H00000001
	CDBE_RET_STOPWIZARD = &H00000002
End Enum
Public Enum CDBE_ACTIONS
	CDBE_TYPE_MUSIC = &H00000001
	CDBE_TYPE_DATA = &H00000002
	CDBE_TYPE_ALL = &HFFFFFFFF
End Enum

Public Enum TI_FLAGS
	TI_BITMAP = 1
	TI_JPEG = 2
End Enum

Public Enum SHIMGDEC
	SHIMGDEC_DEFAULT = &H00000000 ' creates a full Image
	SHIMGDEC_THUMBNAIL = &H00000001 ' decodes only thumbnail image
	SHIMGDEC_LOADFULL = &H00000002 ' load the whole file into memory
End Enum

Public Const SHIMGKEY_QUALITY  = "Compression"
Public Const SHIMGKEY_RAWFORMAT  = "RawDataFormat"

Public Const E_NOTVALIDFORANIMATEDIMAGE = &H80040001

Public Const PID_IS_URL  = 2
Public Const PID_IS_NAME  = 4
Public Const PID_IS_WORKINGDIR  = 5
Public Const PID_IS_HOTKEY  = 6
Public Const PID_IS_SHOWCMD  = 7
Public Const PID_IS_ICONINDEX  = 8
Public Const PID_IS_ICONFILE  = 9
Public Const PID_IS_WHATSNEW  = 10
Public Const PID_IS_AUTHOR  = 11
Public Const PID_IS_DESCRIPTION  = 12
Public Const PID_IS_COMMENT  = 13
Public Const PID_IS_ROAMED  = 15
'  PROPIDs for Internet Sites (FMTID_InternetSite) to be used with
'  IPropertySetStorage/IPropertyStorage
'  The known property ids and their variant types are:
'       PID_INTSITE_WHATSNEW     [VT_LPWSTR]   What's New text
'       PID_INTSITE_AUTHOR       [VT_LPWSTR]   Author
'       PID_INTSITE_LASTVISIT    [VT_FILETIME] Time site was last visited
'       PID_INTSITE_LASTMOD      [VT_FILETIME] Time site was last modified
'       PID_INTSITE_VISITCOUNT   [VT_UI4]      Number of times user has visited
'       PID_INTSITE_DESCRIPTION  [VT_LPWSTR]   Description text of site
'       PID_INTSITE_COMMENT      [VT_LPWSTR]   User annotated comment
'       PID_INTSITE_RECURSE      [VT_UI4]      Levels to recurse (0-3)
'       PID_INTSITE_WATCH        [VT_UI4]      PIDISM_ flags
'       PID_INTSITE_SUBSCRIPTION [VT_UI8]      Subscription cookie
'       PID_INTSITE_URL          [VT_LPWSTR]   URL
'       PID_INTSITE_TITLE        [VT_LPWSTR]   Title
'       PID_INTSITE_CODEPAGE     [VT_UI4]      Codepage of the document
'       PID_INTSITE_TRACKING     [VT_UI4]      Tracking
'       PID_INTSITE_ICONINDEX    [VT_I4]       Retrieve the index to the icon
'       PID_INTSITE_ICONFILE     [VT_LPWSTR]   Retrieve the file containing the icon index.
'       PID_INTSITE_RAWURL       [VT_LPWSTR]   The raw, un-encoded, unicode url.
'       PID_INTSITE_ROAMED       [VT_UI4]      Indicates that this entry was roamed from a different machine
Public Const PID_INTSITE_WHATSNEW  = 2
Public Const PID_INTSITE_AUTHOR  = 3
Public Const PID_INTSITE_LASTVISIT  = 4
Public Const PID_INTSITE_LASTMOD  = 5
Public Const PID_INTSITE_VISITCOUNT  = 6
Public Const PID_INTSITE_DESCRIPTION  = 7
Public Const PID_INTSITE_COMMENT  = 8
Public Const PID_INTSITE_FLAGS  = 9
Public Const PID_INTSITE_CONTENTLEN  = 10
Public Const PID_INTSITE_CONTENTCODE  = 11
Public Const PID_INTSITE_RECURSE  = 12
Public Const PID_INTSITE_WATCH  = 13
Public Const PID_INTSITE_SUBSCRIPTION  = 14
Public Const PID_INTSITE_URL  = 15
Public Const PID_INTSITE_TITLE  = 16
Public Const PID_INTSITE_CODEPAGE  = 18
Public Const PID_INTSITE_TRACKING  = 19
Public Const PID_INTSITE_ICONINDEX  = 20
Public Const PID_INTSITE_ICONFILE  = 21
Public Const PID_INTSITE_ROAMED  = 34
'  Flags for PID_IS_FLAGS
Public Const PIDISF_RECENTLYCHANGED  = &H00000001
Public Const PIDISF_CACHEDSTICKY  = &H00000002
Public Const PIDISF_CACHEIMAGES  = &H00000010
Public Const PIDISF_FOLLOWALLLINKS  = &H00000020
'  Values for PID_INTSITE_WATCH
Public Const PIDISM_GLOBAL  = 0  ' Monitor based on global setting
Public Const PIDISM_WATCH  = 1  ' User says watch
Public Const PIDISM_DONTWATCH  = 2  ' User says don't watch
'  Values for PID_INTSITE_ROAMED
Public Const PIDISR_UP_TO_DATE  = 0  ' No action needed
Public Const PIDISR_NEEDS_ADD  = 1  ' The entry was added due to roaming
Public Const PIDISR_NEEDS_UPDATE  = 2  ' The entry was roamed and contains updated information
Public Const PIDISR_NEEDS_DELETE  = 3  ' The entry was roamed and should be deleted

Public Enum PROPSETFLAG
	PROPSETFLAG_DEFAULT = 0
	PROPSETFLAG_NONSIMPLE = 1
	PROPSETFLAG_ANSI = 2
	PROPSETFLAG_UNBUFFERED = 4
	PROPSETFLAG_CASE_SENSITIVE = 8
End Enum
Public Enum PRPSPEC
	PRSPEC_LPWSTR = 0
	PRSPEC_PROPID = 1
	PRSPEC_INVALID = &Hffffffff
End Enum
Public Type PROPSPEC
	ulKind As PRPSPEC
	ID_or_LPWSTR As LongPtr
End Type
Public Type STATPROPSTG
	lpwstrName As LongPtr
	propid As Long
	vt As Integer
End Type
Public Type STATPROPSETSTG
	fmtid As UUID
	clsid As UUID
	grfFlags As Long
	mtime As LongLong
	ctime As LongLong
	atime As LongLong
	dwOSVersion As Long
End Type

Public Type PERSIST_FOLDER_TARGET_INFO
	pidlTargetFolder As LongPtr
	szTargetParsingName(0 To 259) As Integer
	szNetworkProvider(0 To 259) As Integer
	dwAttributes As Long
	csidl As Long
End Type

Public Enum SHACF
	SHACF_DEFAULT = &H00000000 ' Currently (SHACF_FILESYSTEM | SHACF_URLALL)
	SHACF_FILESYSTEM = &H00000001 ' This includes the File System as well as the rest of the shell (Desktop\My Computer\Control Panel\)
	SHACF_URLHISTORY = &H00000002 ' URLs in the User's History
	SHACF_URLMRU = &H00000004 ' URLs in the User's Recently Used list.
	SHACF_URLALL = &H00000006 ' (SHACF_URLHISTORY | SHACF_URLMRU)
	SHACF_USETAB = &H00000008 ' Use the tab to move thru the autocomplete possibilities instead of to the next dialog/window control.
	SHACF_FILESYS_ONLY = &H00000010 ' Don't AutoComplete non-File System items.
	SHACF_FILESYS_DIRS = &H00000020 ' Same as SHACF_FILESYS_ONLY except it only includes directories, UNC servers, and UNC server shares.
	SHACF_VIRTUAL_NAMESPACE = &H00000040 ' Also include the virtual namespace
	SHACF_AUTOSUGGEST_FORCE_ON = &H10000000 ' Ignore the registry default and force the feature on.
	SHACF_AUTOSUGGEST_FORCE_OFF = &H20000000 ' Ignore the registry default and force the feature off.
	SHACF_AUTOAPPEND_FORCE_ON = &H40000000 ' Ignore the registry default and force the feature on. (Also know as AutoComplete)
	SHACF_AUTOAPPEND_FORCE_OFF = &H80000000 ' Ignore the registry default and force the feature off. (Also know as AutoComplete)
End Enum

Public Enum ARCONTENT
	ARCONTENT_AUTORUNINF = &H00000002 ' That's the one we have today, and always had
	ARCONTENT_AUDIOCD = &H00000004 ' Audio CD (not MP3 and the like, the stuff you buy at the store)
	ARCONTENT_DVDMOVIE = &H00000008 ' DVD Movie (not MPEGs, the stuff you buy at the store)
	ARCONTENT_BLANKCD = &H00000010 ' Blank CD-R/CD-RW
	ARCONTENT_BLANKDVD = &H00000020 ' Blank DVD-R/DVD-RW
	ARCONTENT_UNKNOWNCONTENT = &H00000040 ' Whatever files.  Mean that it's formatted.
	ARCONTENT_AUTOPLAYPIX = &H00000080 ' Whatever files.  Mean that it's formatted.
	ARCONTENT_AUTOPLAYMUSIC = &H00000100 ' Whatever files.  Mean that it's formatted.
	ARCONTENT_AUTOPLAYVIDEO = &H00000200 ' Whatever files.  Mean that it's formatted.
	' Vista+
	ARCONTENT_VCD = &H00000400 ' VCD format
	ARCONTENT_SVCD = &H00000800 ' Super-VCD format
	ARCONTENT_DVDAUDIO = &H00001000 ' DVD-Audio
	ARCONTENT_BLANKBD = &H00002000 ' Blank BD-R/BD-RW
	ARCONTENT_BLURAY = &H00004000 ' Blu-ray Disc
	ARCONTENT_CAMERASTORAGE = &H00008000& ' Camera Storage
	ARCONTENT_CUSTOMEVENT = &H00010000 ' Custom Event
	ARCONTENT_NONE = &H00000000 ' Empty (but formatted)
	ARCONTENT_MASK = &H0001FFFE ' Bits that denote valid content types
	ARCONTENT_PHASE_UNKNOWN = &H00000000 ' We can be in any phase.  This is XP behavior.
	ARCONTENT_PHASE_PRESNIFF = &H10000000 ' These are contents we know w/o scanning the media for complete data (e.g. Audio track, DVD Movie).
	ARCONTENT_PHASE_SNIFFING = &H20000000 ' We are in the middle of searching the media.  There could be more contents to be found than currently reported.
	ARCONTENT_PHASE_FINAL = &H40000000 ' We have finished searching; contents we report are final.
	ARCONTENT_PHASE_MASK = &H70000000 ' Bits that denote what phase we are in the Autoplay process.
End Enum

Public Enum SIOM_Flags
	SIOM_OVERLAYINDEX = &H1
	SIOM_ICONINDEX = &H2
End Enum

Public Enum SIOM_Reserved
	SIOM_RESERVED_SHARED = 0
	SIOM_RESERVED_LINK = 1
	SIOM_RESERVED_SLOWFILE = 2
	SIOM_RESERVED_DEFAULT = 3
End Enum

Public Type MULTI_QI
    piid As LongPtr
    pItf As LongPtr
    hr As Long
End Type

Public Type CATEGORYINFO
    catid As UUID
    lcid As Long
    szDescription(255) As Byte
End Type

Public Enum PSC_STATE
    PSC_NORMAL = 0                                       ' &H00000000&
    PSC_NOTINSOURCE = 1                                  ' &H00000001&
    PSC_DIRTY = 2                                        ' &H00000002&
    PSC_READONLY = 3                                     ' &H00000003&
End Enum

Public Const STR_PARSE_PARTIAL_IDLIST As String = "ParseOriginalItem"
Public Const STR_PARSE_WITH_PROPERTIES As String = "ParseWithProperties"
Public Const STR_REFERRER_IDENTIFIER As String = "Referrer Identifier"
Public Const STR_TAB_REUSE_IDENTIFIER As String = "Tab Reuse Identifier"
Public Const STR_FILE_SYS_BIND_DATA_WIN7_FORMAT As String = "Win7FileSystemIdList"
Public Const STR_FILE_SYS_BIND_DATA As String = "File System Bind Data"
Public Const STR_GPS_NO_OPLOCK As String = "GPS_NO_OPLOCK"
Public Const STR_GPS_BESTEFFORT As String = "GPS_BESTEFFORT"
Public Const STR_GPS_DELAYCREATION As String = "GPS_DELAYCREATION"
Public Const STR_GPS_OPENSLOWITEM As String = "GPS_OPENSLOWITEM"
Public Const STR_GPS_FASTPROPERTIESONLY As String = "GPS_FASTPROPERTIESONLY"
Public Const STR_GPS_HANDLERPROPERTIESONLY As String = "GPS_HANDLERPROPERTIESONLY"
Public Const STR_GET_ASYNC_HANDLER As String = "GetAsyncHandler"
Public Const STR_DONT_RESOLVE_LINK As String = "Don't Resolve Link"
Public Const STR_ITEM_CACHE_CONTEXT As String = "ItemCacheContext"
Public Const STR_ENUM_ITEMS_FLAGS As String = "SHCONTF"
Public Const STR_STORAGEITEM_CREATION_FLAGS = "SHGETSTORAGEITEM"
Public Const STR_PROPERTYBAG_PARAM As String = "SHBindCtxPropertyBag"
Public Const STR_PARSE_AND_CREATE_ITEM As String = "ParseAndCreateItem"
Public Const STR_PARSE_EXPLICIT_ASSOCIATION_SUCCESSFUL As String = "ExplicitAssociationSuccessful"
Public Const STR_PARSE_WITH_EXPLICIT_ASSOCAPP As String = "ExplicitAssociationApp"
Public Const STR_PARSE_WITH_EXPLICIT_PROGID As String = "ExplicitProgid"
Public Const STR_BIND_FOLDER_ENUM_MODE As String = "Folder Enum Mode"
Public Const STR_BIND_FOLDERS_READ_ONLY As String = "Folders As Read Only"
Public Const STR_INTERNETFOLDER_PARSE_ONLY_URLMON_BINDABLE As String = "Validate URL"
Public Const STR_PARSE_DONT_REQUIRE_VALIDATED_URLS As String = "Do not require validated URLs"
Public Const STR_PARSE_SHOW_NET_DIAGNOSTICS_UI As String = "Show network diagnostics UI"
Public Const STR_PARSE_PREFER_WEB_BROWSING As String = "Do not bind to Internet shell folder handlers"
Public Const STR_PARSE_ALLOW_INTERNET_SHELL_FOLDERS As String = "Allow binding to Internet shell folder handlers and negate STR_PARSE_PREFER_WEB_BROWSING"
Public Const STR_BIND_DELEGATE_CREATE_OBJECT As String = "Delegate Object Creation"
Public Const STR_NO_VALIDATE_FILENAME_CHARS As String = "NoValidateFilenameChars"
Public Const STR_PARSE_PROPERTYSTORE As String = "DelegateNamedProperties"
Public Const STR_INTERNAL_NAVIGATE As String = "Internal Navigation"
Public Const STR_TRACK_CLSID As String = "Track the CLSID"
Public Const STR_PARSE_SHELL_PROTOCOL_TO_FILE_OBJECTS As String = "Parse Shell Protocol To File Objects"
Public Const STR_PARSE_SKIP_NET_CACHE As String = "Skip Net Resource Cache"
Public Const STR_PARSE_TRANSLATE_ALIASES As String = "Parse Translate Aliases"
Public Const STR_DONT_PARSE_RELATIVE As String = "Don't Parse Relative"
Public Const STR_PARSE_PREFER_FOLDER_BROWSING As String = "Parse Prefer Folder Browsing"
Public Const STR_SKIP_BINDING_CLSID As String = "Skip Binding CLSID"
Public Const STR_AVOID_DRIVE_RESTRICTION_POLICY As String = "Avoid Drive Restriction Policy"
Public Const STR_BIND_FORCE_FOLDER_SHORTCUT_RESOLVE As String = "Force Folder Shortcut Resolve"
Public Const STR_IFILTER_FORCE_TEXT_FILTER_FALLBACK As String = "Always bind persistent handlers"
Public Const STR_IFILTER_LOAD_DEFINED_FILTER As String = "Only bind registered persistent handlers"


Public Enum SHIL
	SHIL_LARGE = 0
	SHIL_SMALL = 1
	SHIL_EXTRALARGE = 2
	SHIL_SYSSMALL = 3
	SHIL_JUMBO = 4
	SHIL_LAST = SHIL_JUMBO
End Enum

Public Enum OLEVERBATTRIB
	OLEVERBATTRIB_NEVERDIRTIES = 1
	OLEVERBATTRIB_ONCONTAINERMENU = 2
End Enum

Public Type OLEVERB
	lVerb As Long
	lpszVerbName As LongPtr
	fuFlags As MenuFlags
	grfAttribs As OLEVERBATTRIB
End Type

Public Enum ASSOCIATIONLEVEL
    AL_MACHINE = 0
    AL_EFFECTIVE = 1
    AL_USER = 2
End Enum

Public Enum ASSOCIATIONTYPE
    AT_FILEEXTENSION = 0
    AT_URLPROTOCOL = 1
    AT_STARTMENUCLIENT = 2
    AT_MIMETYPE = 3
End Enum

Public Const HOMEGROUP_SECURITY_GROUP_MULTI  = "HUG"
Public Const HOMEGROUP_SECURITY_GROUP  = "HomeUsers"

Public Enum HOMEGROUPSHARINGCHOICES
	HGSC_NONE = &H00000000
	HGSC_MUSICLIBRARY = &H00000001
	HGSC_PICTURESLIBRARY = &H00000002
	HGSC_VIDEOSLIBRARY = &H00000004
	HGSC_DOCUMENTSLIBRARY = &H00000008
	HGSC_PRINTERS = &H00000010
End Enum

Public Enum APPDOCLISTTYPE
	ADLT_RECENT = 0 ' The recently used documents list
	ADLT_FREQUENT ' The frequently used documents list
End Enum

Public Enum APPINFODATAFLAGS
	AIM_DISPLAYNAME = &H00000001
	AIM_VERSION = &H00000002
	AIM_PUBLISHER = &H00000004
	AIM_PRODUCTID = &H00000008
	AIM_REGISTEREDOWNER = &H00000010
	AIM_REGISTEREDCOMPANY = &H00000020
	AIM_LANGUAGE = &H00000040
	AIM_SUPPORTURL = &H00000080
	AIM_SUPPORTTELEPHONE = &H00000100
	AIM_HELPLINK = &H00000200
	AIM_INSTALLLOCATION = &H00000400
	AIM_INSTALLSOURCE = &H00000800
	AIM_INSTALLDATE = &H00001000
	'         AIM_REQUIREDBYPOLICY      = 0x00002000,  Obsolete. Do not reuse.
	AIM_CONTACT = &H00004000
	AIM_COMMENTS = &H00008000&
	AIM_IMAGE = &H00020000
	AIM_READMEURL = &H00040000
	AIM_UPDATEINFOURL = &H00080000
End Enum

Public Type APPINFODATA
	cbSize As Long
	dwMask As APPINFODATAFLAGS ' APPINFODATAFLAGS, IN/OUT
	pszDisplayName As LongPtr
	pszVersion As LongPtr
	pszPublisher As LongPtr
	pszProductID As LongPtr
	pszRegisteredOwner As LongPtr
	pszRegisteredCompany As LongPtr
	pszLanguage As LongPtr
	pszSupportUrl As LongPtr
	pszSupportTelephone As LongPtr
	pszHelpLink As LongPtr
	pszInstallLocation As LongPtr
	pszInstallSource As LongPtr
	pszInstallDate As LongPtr
	pszContact As LongPtr
	pszComments As LongPtr
	pszImage As LongPtr
	pszReadmeUrl As LongPtr
    pszUpdateInfoUrl As LongPtr
End Type

Public Enum APPACTIONFLAGS
	APPACTION_INSTALL = &H00000001
	APPACTION_UNINSTALL = &H00000002
	APPACTION_MODIFY = &H00000004
	APPACTION_REPAIR = &H00000008
	APPACTION_UPGRADE = &H00000010
	APPACTION_CANGETSIZE = &H00000020
	APPACTION_MODIFYREMOVE = &H00000080
	APPACTION_ADDLATER = &H00000100
	APPACTION_UNSCHEDULE = &H00000200
End Enum

Public Type SLOWAPPINFO
	ullSize As LongLong
	ftLastUsed As FILETIME
	iTimesUsed As Long
	pszImage As LongPtr
End Type

Public Enum PUBAPPINFOFLAGS
	PAI_SOURCE = &H00000001
	PAI_ASSIGNEDTIME = &H00000002
	PAI_PUBLISHEDTIME = &H00000004
	PAI_SCHEDULEDTIME = &H00000008
	PAI_EXPIRETIME = &H00000010
End Enum

Public Type PUBAPPINFO
	cbSize As Long
	dwMask As PUBAPPINFOFLAGS ' PUBAPPINFOFLAGS, IN/OUT
	pszSource As LongPtr
	stAssigned As SYSTEMTIME
	stPublished As SYSTEMTIME
	stScheduled As SYSTEMTIME
	stExpire As SYSTEMTIME
End Type

Public Type APPCATEGORYINFO
	Locale As Long
	pszDescription As LongPtr
	AppCategoryId As UUID
End Type

Public Type APPCATEGORYINFOLIST
	cCategory As Long
	pCategoryInfo As LongPtr
End Type

Public Type SHELLAPPCATEGORY
    pszCategory As LongPtr ' category description
    idCategory As Long ' category id for ShellAppManager
End Type
Public Type SHELLAPPCATEGORYLIST
    cCategories As Long
    pCategory As LongPtr
End Type

Public Const DISPID_IADCCTL_DIRTY  = &H100
Public Const DISPID_IADCCTL_PUBCAT  = &H101
Public Const DISPID_IADCCTL_SORT  = &H102
Public Const DISPID_IADCCTL_FORCEX86  = &H103
Public Const DISPID_IADCCTL_SHOWPOSTSETUP  = &H104
Public Const DISPID_IADCCTL_ONDOMAIN  = &H105
Public Const DISPID_IADCCTL_DEFAULTCAT  = &H106



Public Enum DEF_SHARE_ID
	DEFSHAREID_USERS = 1
	DEFSHAREID_PUBLIC = 2
End Enum

Public Enum SHARE_ROLE
	SHARE_ROLE_INVALID = -1
	SHARE_ROLE_READER = 0
	SHARE_ROLE_CONTRIBUTOR = 1
	SHARE_ROLE_CO_OWNER = 2
	SHARE_ROLE_OWNER = 3
	SHARE_ROLE_CUSTOM = 4
	SHARE_ROLE_MIXED = 5
End Enum

Public Type SHELL_ITEM_RESOURCE
	guidType As UUID
	szName(0 To 259) As Integer
End Type

Public Enum TRANSFER_ADVISE_STATE
    TS_NONE = 0
    TS_PERFORMING = 1
    TS_PREPARING = 2
    TS_INDETERMINATE = 4
End Enum

Public Enum FOLDER_ENUM_MODE
    FEM_VIEWRESULT = 0
    FEM_NAVIGATION = 1
End Enum

Public Enum EXPCMDSTATE
	ECS_ENABLED = &H00
	ECS_DISABLED = &H01
	ECS_HIDDEN = &H02
	ECS_CHECKBOX = &H04
	ECS_CHECKED = &H08
	ECS_RADIOCHECK = &H10
End Enum

Public Enum EXPCMDFLAGS
	ECF_DEFAULT = &H000
	ECF_HASSUBCOMMANDS = &H001
	ECF_HASSPLITBUTTON = &H002
	ECF_HIDELABEL = &H004
	ECF_ISSEPARATOR = &H008
	ECF_HASLUASHIELD = &H010
	ECF_SEPARATORBEFORE = &H020
	ECF_SEPARATORAFTER = &H040
	ECF_ISDROPDOWN = &H080
	ECF_TOGGLEABLE = &H100 ' New for NTDDI_WIN8
	ECF_AUTOMENUICONS = &H200 ' New for NTDDI_WIN8
End Enum

Public Enum EC_HOST_UI_MODE
	ECHUIM_DESKTOP = 0
	ECHUIM_IMMERSIVE = 1
	ECHUIM_SYSTEM_LAUNCHER = 2
End Enum

Public Enum SHELLEXECUTEMASK
	SEE_MASK_CLASSNAME = &H00000001
	SEE_MASK_CLASSKEY = &H00000003
	SEE_MASK_IDLIST = &H00000004
	SEE_MASK_INVOKEIDLIST = &H0000000c
	SEE_MASK_ICON = &H00000010
	SEE_MASK_HOTKEY = &H00000020
	SEE_MASK_NOCLOSEPROCESS = &H00000040
	SEE_MASK_CONNECTNETDRV = &H00000080
	SEE_MASK_FLAG_DDEWAIT = &H00000100
	SEE_MASK_DOENVSUBST = &H00000200
	SEE_MASK_FLAG_NO_UI = &H00000400
    SEE_MASK_FLAG_SHELLEXEC = &H00000800 'internal_win40
    SEE_MASK_FORCENOIDLIST = &H00001000 'internal_win40
    SEE_MASK_NO_HOOKS = &H00002000 'internal_win40
    SEE_MASK_UNICODE = &H00004000
    SEE_MASK_NO_CONSOLE = &H00008000&
    SEE_MASK_HASLINKNAME = &H00010000 ';internal_win40
    SEE_MASK_FLAG_SEPVDM = &H00020000 'internal_win40
    SEE_MASK_RESERVED = &H00040000 'internal_win40
    SEE_MASK_HASTITLE = &H00080000 'internal_win40
	SEE_MASK_ASYNCOK = &H00100000
	SEE_MASK_HMONITOR = &H00200000
    SEE_MASK_FILEANDURL = &H00400000 'internal
	SEE_MASK_NOZONECHECKS = &H00800000
	SEE_MASK_NOQUERYCLASSSTORE = &H01000000
	SEE_MASK_WAITFORINPUTIDLE = &H02000000
	SEE_MASK_FLAG_LOG_USAGE = &H04000000
	SEE_MASK_FLAG_HINST_IS_SITE = &H08000000
End Enum

Public Enum SE_ERR
	SE_ERR_FNF = 2 ' file not found
	SE_ERR_PNF = 3 ' path not found
	SE_ERR_ACCESSDENIED = 5 ' access denied
	SE_ERR_OOM = 8 ' out of memory
	SE_ERR_DLLNOTFOUND = 32
	SE_ERR_SHARE = 26
	SE_ERR_ASSOCINCOMPLETE = 27
	SE_ERR_DDETIMEOUT = 28
	SE_ERR_DDEFAIL = 29
	SE_ERR_DDEBUSY = 30
	SE_ERR_NOASSOC = 31
End Enum

Public Type SHELLEXECUTEINFOA
    cbSize As Long
    fMask As SHELLEXECUTEMASK
    hwnd As LongPtr
    lpVerb As String
    lpFile As String
    lpParameters As String
    lpDirectory As String
    nShow As SHOWWINDOW
    hInstApp As LongPtr
    lpIDList As LongPtr
    lpClass As String
    hkeyClass As LongPtr
    dwHotKey As Long
    hIcon_hMonitor As LongPtr
    hProcess As LongPtr
End Type
Public Type SHELLEXECUTEINFOW
	cbSize As Long
	fMask As SHELLEXECUTEMASK
	hwnd As LongPtr
	lpVerb As LongPtr
	lpFile As LongPtr
	lpParameters As LongPtr
	lpDirectory As LongPtr
	nShow As SHOWWINDOW
	hInstApp As LongPtr
	lpIDList As LongPtr
	lpClass As LongPtr
	hkeyClass As LongPtr
	dwHotKey As Long
	hIcon_hMonitor As LongPtr
	hProcess As LongPtr
End Type
Public Type SHELLEXECUTEINFO
    cbSize As Long
    fMask As SHELLEXECUTEMASK
    hwnd As LongPtr
    lpVerb As LongPtr
    lpFile As LongPtr
    lpParameters As LongPtr
    lpDirectory As LongPtr
    nShow As SHOWWINDOW
    hInstApp As LongPtr
    lpIDList As LongPtr
    lpClass As LongPtr
    hkeyClass As LongPtr
    dwHotKey As Long
    hIcon_hMonitor As LongPtr
    hProcess As LongPtr
End Type
Public Enum IEmptyVolumeCacheFlags
	EVCF_HASSETTINGS = &H0001
	EVCF_ENABLEBYDEFAULT = &H0002
	EVCF_REMOVEFROMLIST = &H0004
	EVCF_ENABLEBYDEFAULT_AUTO = &H0008
	EVCF_DONTSHOWIFZERO = &H0010
	EVCF_SETTINGSMODE = &H0020
	EVCF_OUTOFDISKSPACE = &H0040
End Enum

Public Enum IEmptyVolumeCacheCallBackFlags
	EVCCBF_LASTNOTIFICATION = &H0001
End Enum

Public Enum BROWSERFRAMEOPTIONS
	BFO_NONE = &H00000000 ' Do nothing.
	BFO_BROWSER_PERSIST_SETTINGS = &H00000001 ' Does this item want the browser stream? (Same window position as IE browser windows?)
	BFO_RENAME_FOLDER_OPTIONS_TOINTERNET = &H00000002 ' Rename "Folder Options" to "Internet Options" in the Tools or View menu?
	BFO_BOTH_OPTIONS = &H00000004 ' Keep both "Folder Options" and "Internet Options" in the Tools or View menu?
	BIF_PREFER_INTERNET_SHORTCUT = &H00000008 ' NSE would prefer a .url shortcut over a .lnk shortcut
	BFO_BROWSE_NO_IN_NEW_PROCESS = &H00000010 ' Specify this flag if you don't want the "Browse in New Process" via invoking a shortcut.
	BFO_ENABLE_HYPERLINK_TRACKING = &H00000020 ' Does this NSE want it's display name tracked to determine when hyperlinks should be tagged as previously used?
	BFO_USE_IE_OFFLINE_SUPPORT = &H00000040 ' Use "Internet Explorer"'s offline support?
	BFO_SUBSTITUE_INTERNET_START_PAGE = &H00000080 ' Does this NSE want to use the Start Page support?
	BFO_USE_IE_LOGOBANDING = &H00000100 ' Use the Brand block in the Toolbar.  (Spinning globe or whatever it is this year)
	BFO_ADD_IE_TOCAPTIONBAR = &H00000200 ' Should " - Internet Explorer" be appended to display name in the Captionbar
	BFO_USE_DIALUP_REF = &H00000400 ' Should the DialUp ref count get a ref while the browse is navigated to this location?  This will also enable the ICW and Software update.
	BFO_USE_IE_TOOLBAR = &H00000800 ' Should the IE toolbar be used?
	BFO_NO_PARENT_FOLDER_SUPPORT = &H00001000 ' Can you NOT navigate to a parent folder?  Used for Backspace button to parent folder or the View.GoTo.ParentFolder feature.
	BFO_NO_REOPEN_NEXT_RESTART = &H00002000 ' Browser windows are NOT reopened the next time the shell boots if the windows were left open on the previous logoff.  Does this NSE want the same feature?
	BFO_GO_HOME_PAGE = &H00004000 ' Add "Home Page" to menu (Go).
	BFO_PREFER_IEPROCESS = &H00008000& ' prefers to use IEXPLORE.EXE over EXPLORER.EXE
	BFO_SHOW_NAVIGATION_CANCELLED = &H00010000 ' If navigation is aborted, show the "Action Cancelled" HTML page.
	BFO_USE_IE_STATUSBAR = &H00020000 ' Use the persisted IE status bar settings
End Enum

Public Enum CBDOSC_FLAGS
    CDBOSC_SETFOCUS = 0                                  ' &H00000000&
    CDBOSC_KILLFOCUS = 1                                 ' &H00000001&
    CDBOSC_SELCHANGE = 2                                 ' &H00000002&
    CDBOSC_RENAME = 3                                    ' &H00000003&
    CDBOSC_STATECHANGE = 4                               ' &H00000004&
End Enum

Public Enum CB2DN_TYPES
    CDB2N_CONTEXTMENU_DONE = 1                           ' &H00000001&
    CDB2N_CONTEXTMENU_START = 2                          ' &H00000002&
End Enum
    
Public Enum CDB2GVF_FLAGS
	CDB2GVF_SHOWALLFILES = &H00000001
	CDB2GVF_ISFILESAVE = &H00000002 ' is file save, else file open")
	CDB2GVF_ALLOWPREVIEWPANE = &H00000004
	CDB2GVF_NOSELECTVERB = &H00000008
	CDB2GVF_NOINCLUDEITEM = &H00000010
	CDB2GVF_ISFOLDERPICKER = &H00000020
	CDB2GVF_ADDSHIELD = &H00000040 ' when CDB2GVF_NOSELECTVERB is not specified this flag controls the display of a LUA shield on the Select menu item")
End Enum

Public Enum DEFAULT_FOLDER_MENU_RESTRICTIONS
	DFMR_DEFAULT = 0
	DFMR_NO_STATIC_VERBS = &H8
	DFMR_STATIC_VERBS_ONLY = &H10
	DFMR_NO_RESOURCE_VERBS = &H20
	DFMR_OPTIN_HANDLERS_ONLY = &H40
	DFMR_RESOURCE_AND_FOLDER_VERBS_ONLY = &H80
	DFMR_USE_SPECIFIED_HANDLERS = &H100
	DFMR_USE_SPECIFIED_VERBS = &H200
	DFMR_NO_ASYNC_VERBS = &H400
End Enum

  Public Type INTERFACEINFO
    pUnk As LongPtr
    iid As UUID
    wMethod As Integer
End Type

Public Enum PENDINGMSG
	PENDINGMSG_CANCELCALL = 0
	PENDINGMSG_WAITNOPROCESS = 1
	PENDINGMSG_WAITDEFPROCESS = 2
End Enum

Public Enum PENDINGTYPE
	PENDINGTYPE_TOPLEVEL = 1
	PENDINGTYPE_NESTED = 2
End Enum

Public Enum SERVERCALL
	SERVERCALL_ISHANDLED = 0
	SERVERCALL_REJECTED = 1
	SERVERCALL_RETRYLATER = 2
End Enum

Public Enum CALLTYPE
	CALLTYPE_TOPLEVEL = 1
	CALLTYPE_NESTED = 2
	CALLTYPE_ASYNC = 3
	CALLTYPE_TOPLEVEL_CALLPENDING = 4
	CALLTYPE_ASYNC_CALLPENDING = 5
End Enum

Public Enum NMCII_FLAGS
    NMCII_NONE = 0                                       ' &H00000000&
    NMCII_ITEMS = 1                                      ' &H00000001&
    NMCII_FOLDERS = 2                                    ' &H00000002&
End Enum

Public Enum NMCSAEI_FLAGS
    NMCSAEI_SELECT = 0                                   ' &H00000000&
    NMCSAEI_EDIT = 1                                     ' &H00000001&
End Enum

Public Enum NWMF
	NWMF_UNLOADING = &H00000001 ' The query is occuring during onBeforeUnload or onUnload
	NWMF_USERINITED = &H00000002 ' The query is occuring in the context of what trident considers to be a user initiated action
	NWMF_FIRST = &H00000004 ' This is the first query since the begining of the last user initiated action
	NWMF_OVERRIDEKEY = &H00000008 ' The override key was pressed at the time the query was made
	NWMF_SHOWHELP = &H00000010 ' New window is an HTML help window
	NWMF_HTMLDIALOG = &H00000020 ' New window is an HTML dialog
	NWMF_FROMDIALOGCHILD = &H00000040 ' Called from an HTML dialog - do not show UI in parent window
	NWMF_USERREQUESTED = &H00000080 ' There is no doubt the user requested this window (from RClick->Open in New Window, or Shift+Clicked a link)
	NWMF_USERALLOWED = &H00000100 ' This popup is the result of the user requesting a replay that resulted in a refresh
	NWMF_FORCEWINDOW = &H00010000 ' This popup should be forced to open in a new window
	NWMF_FORCETAB = &H00020000 ' This popup should be forced to open in a new tab
	NWMF_SUGGESTWINDOW = &H00040000 ' This popup should open in a new window unless user forced pop-ups to a tab
	NWMF_SUGGESTTAB = &H00080000 ' This popup should open in a new tab unless user forced pop-ups to a window
	NWMF_INACTIVETAB = &H00100000 ' This popup came from an inactive tab
End Enum

Public Enum ShellMenuDataMask
    SMDM_SHELLFOLDER = &H00000001
    SMDM_HMENU = &H00000002
    SMDM_TOOLBAR = &H00000004
End Enum
Public Type SMDATA
    dwMask As ShellMenuDataMask
    dwFlags As Long
    hMenu As LongPtr
    hwnd As LongPtr
    uID As Long
    uIdParent As Long
    uIdAncestor As Long
    pUnk As LongPtr
    pidlFolder As LongPtr
    pidlItem As LongPtr
    psf As IShellFolder
    pvUserData As LongPtr
End Type
Public Enum SMSET_Flags
	SMSET_MERGE = &H00000002
	SMSET_NOEMPTY = &H00000004  ' Dont show (Empty) on shell folder")
	SMSET_USEBKICONEXTRACTION = &H00000008  ' Use the background icon extractor")
	SMSET_HASEXPANDABLEFOLDERS = &H00000010  ' Need to call SHIsExpandableFolder")
	SMSET_DONTREGISTERCHANGENOTIFY = &H00000020  ' ShellFolder is a discontiguous child of a parent shell folder")
	SMSET_COLLAPSEONEMPTY = &H00000040  ' When Empty, causes a menus to collapse")
	SMSET_USEPAGER = &H00000080  'Enable pagers in static menus")
	SMSET_NOPREFIX = &H00000100  'Enable ampersand in static menus")
	SMSET_SEPARATEMERGEFOLDER = &H00000200  'Insert separator when MergedFolder host changes")
End Enum
Public Enum ShellMenuInitFlags
    SMINIT_DEFAULT = &H00000000
    SMINIT_RESTRICT_DRAGDROP = &H00000002
    SMINIT_TOPLEVEL = &H00000004
    SMINIT_CACHED = &H00000010
    SMINIT_AUTOEXPAND = &H00000100
    SMINIT_AUTOTOOLTIP = &H00000200
    SMINIT_DROPONCONTAINER = &H00000400
       
    SMINIT_VERTICAL = &H10000000
    SMINIT_HORIZONTAL = &H20000000
End Enum
Public Const ANCESTORDEFAULT = -1
Public Enum ShellMenuInvalidateFlags
    SMINV_REFRESH = &H00000001
    SMINV_ID = &H00000008
End Enum
Public Enum ShellMenuCallbackMessages
    SMC_INITMENU = &H00000001
    SMC_CREATE = &H00000002
    SMC_EXITMENU = &H00000003
    SMC_GETINFO = &H00000005
    SMC_GETSFINFO = &H00000006
    SMC_GETOBJECT = &H00000007
    SMC_GETSFOBJECT = &H00000008
    SMC_SFEXEC = &H00000009
    SMC_SFSELECTITEM = &H0000000A
    SMC_REFRESH = &H00000010
    SMC_DEMOTE = &H00000011
    SMC_PROMOTE = &H00000012
    SMC_DEFAULTICON = &H00000016
    SMC_NEWITEM = &H00000017
    SMC_CHEVRONEXPAND = &H00000019
    SMC_DISPLAYCHEVRONTIP = &H0000002A
    SMC_SETSFOBJECT = &H0000002D
    SMC_SHCHANGENOTIFY = &H0000002E
    SMC_CHEVRONGETTIP = &H0000002F
    SMC_SFDDRESTRICTED = &H00000030
    SMC_SFEXEC_MIDDLE = &H00000031
    SMC_GETAUTOEXPANDSTATE = &H00000041
    SMC_AUTOEXPANDCHANGE = &H00000042
    SMC_GETCONTEXTMENUMODIFIER = &H00000043
    SMC_GETBKCONTEXTMENU = &H00000044
    SMC_OPEN = &H00000045
End Enum
Public Enum ShellMenuAutoExpandFlags
    SMAE_EXPANDED = &H00000001
    SMAE_CONTRACTED = &H00000002
    SMAE_USER = &H00000004
    SMAE_VALID = &H00000007
End Enum
Public Enum SMINFOFLAGS
    SMIF_ICON = &H1
    SMIF_ACCELERATOR = &H2
    SMIF_DROPTARGET = &H4
    SMIF_SUBMENU = &H8
    SMIF_CHECKED = &H20
    SMIF_DROPCASCADE = &H40
    SMIF_HIDDEN = &H80
    SMIF_DISABLED = &H100
    SMIF_TRACKPOPUP = &H200
    SMIF_DEMOTED = &H400
    SMIF_ALTSTATE = &H800
    SMIF_DRAGNDROP = &H1000
    SMIF_NEW = &H2000
End Enum
Public Enum SMINFOTYPE
    SMIT_SEPARATOR = &H1
    SMIT_STRING = &H2
End Enum
Public Enum SMINFOMASK
    SMIM_TYPE = &H1
    SMIM_FLAGS = &H2
    SMIM_ICON = &H4
End Enum
Public Type SHCSCHANGENOTIFYSTRUCT
    lEvent As SHCN_Events
    pidl1 As LongPtr
    pidl2 As LongPtr
End Type
Public Type SMCSHCHANGENOTIFYSTRUCT
    lEvent As SHCN_Events
    pidl1 As LongPtr
    pidl2 As LongPtr
End Type
Public Type SMINFO
    dwMask As SMINFOMASK
    dwType As SMINFOTYPE
    dwFlags As SMINFOFLAGS
    iIcon As Long
End Type

Public Enum ATTACHMENT_PROMPT
    ATTACHMENT_PROMPT_NONE = 0
    ATTACHMENT_PROMPT_SAVE = &H1
    ATTACHMENT_PROMPT_EXEC = &H2
    ATTACHMENT_PROMPT_EXEC_OR_SAVE = &H3
End Enum
Public Enum ATTACHMENT_ACTION
    ATTACHMENT_ACTION_CANCEL = 0
    ATTACHMENT_ACTION_SAVE = &H1
    ATTACHMENT_ACTION_EXEC = &H2
End Enum


Public Enum MENUPOPUPPOPUPFLAGS
	MPPF_SETFOCUS = &H00000001 ' Menu can take the focus
	MPPF_INITIALSELECT = &H00000002 ' Select the first item
	MPPF_NOANIMATE = &H00000004 ' Do not animate this show
	MPPF_KEYBOARD = &H00000010 ' The menu is activated by keyboard
	MPPF_REPOSITION = &H00000020 ' Resposition the displayed bar.
	MPPF_FORCEZORDER = &H00000040 ' internal: Tells menubar to ignore Submenu positions
	MPPF_FINALSELECT = &H00000080 ' Select the last item
	MPPF_TOP = &H20000000 ' Popup menu up from point
	MPPF_LEFT = &H40000000 ' Popup menu left from point
	MPPF_RIGHT = &H60000000 ' Popup menu right from point
	MPPF_BOTTOM = &H80000000 ' Popup menu below point
	MPPF_POS_MASK = &HE0000000 ' Menu Position Mask
	MPPF_ALIGN_LEFT = &H02000000 ' Default alignment
	MPPF_ALIGN_RIGHT = &H04000000 ' Popup menu aligned to right of exclude rect
End Enum

Public Enum PROPERTYUI_NAME_FLAGS
    PUIFNF_DEFAULT = 0                                   ' &H00000000&
    PUIFNF_MNEMONIC = 1                                  ' &H00000001&
End Enum

Public Enum PROPERTYUI_FLAGS
    PUIF_DEFAULT = 0                                     ' &H00000000&
    PUIF_RIGHTALIGN = 1                                  ' &H00000001&
    PUIF_NOLABELININFOTIP = 2                            ' &H00000002&
End Enum

Public Enum PROPERTYUI_FORMAT_FLAGS
    PUIFFDF_DEFAULT = 0                                  ' &H00000000&
    PUIFFDF_RIGHTTOLEFT = 1                              ' &H00000001&
    PUIFFDF_SHORTFORMAT = 2                              ' &H00000002&
    PUIFFDF_NOTIME = 4                                   ' &H00000004&
    PUIFFDF_FRIENDLYDATE = 8                             ' &H00000008&
    PUIFFDF_NOUNITS = 16                                 ' &H00000010&
End Enum
    

Public Enum CPVIEW
	CPVIEW_CLASSIC = 0
	CPVIEW_ALLITEMS = 0 'CPVIEW_CLASSIC,
	CPVIEW_CATEGORY = 1
	CPVIEW_HOME = 1 'CPVIEW_CATEGORY,
End Enum

Public Enum ACTIVATEOPTIONS
    AO_NONE = &H00000000 '// No flags set
    AO_DESIGNMODE = &H00000001 '// The application Is being activated for design mode, And thus will Not be able to
                               '// to create an immersive window. Window creation must be done by design tools which
                               '// load the necessary components by communicating with a designer-specified service on
                               '// the site chain established on the activation manager.  The splash screen normally
                               '// shown when an application is activated will also not appear.  Most activations
                               '// will not use this flag.
	AO_NOERRORUI = &H00000002 '// Do Not show an error dialog if the app fails to activate.
	AO_NOSPLASHSCREEN = &H00000004 '// Do Not show the splash screen when activating the app.
	AO_PRELAUNCH = &H02000000 '// The application Is being activated in Prelaunch mode.

End Enum

Public Enum MONITOR_APP_VISIBILITY
	MAV_UNKNOWN = 0
	MAV_NO_APP_VISIBLE = 1
	MAV_APP_VISIBLE = 2
End Enum

Public Enum PACKAGE_EXECUTION_STATE
	PES_UNKNOWN = 0
	PES_RUNNING = 1
	PES_SUSPENDING = 2
	PES_SUSPENDED = 3
	PES_TERMINATED = 4
End Enum

Public Enum AHE_TYPE
	AHE_DESKTOP = 0
	AHE_IMMERSIVE = 1
End Enum

Public Enum APPLICATION_VIEW_STATE
	AVS_FULLSCREEN_LANDSCAPE = 0
	AVS_FILLED
	AVS_SNAPPED
	AVS_FULLSCREEN_PORTRAIT
End Enum
Public Enum EDGE_GESTURE_KIND
	EGK_TOUCH = 0
	EGK_KEYBOARD
	EGK_MOUSE
End Enum
Public Enum DEVICE_SCALE_FACTOR
	DEVICE_SCALE_FACTOR_INVALID = 0
	SCALE_100_PERCENT = 100
	SCALE_120_PERCENT = 120
	SCALE_125_PERCENT = 125
	SCALE_140_PERCENT = 140
	SCALE_150_PERCENT = 150
	SCALE_160_PERCENT = 160
	SCALE_175_PERCENT = 175
	SCALE_180_PERCENT = 180
	SCALE_200_PERCENT = 200
	SCALE_225_PERCENT = 225
	SCALE_250_PERCENT = 250
	SCALE_300_PERCENT = 300
	SCALE_350_PERCENT = 350
	SCALE_400_PERCENT = 400
	SCALE_450_PERCENT = 450
	SCALE_500_PERCENT = 500
End Enum
Public Enum NATIVE_DISPLAY_ORIENTATION
	NDO_LANDSCAPE = 0
	NDO_PORTRAIT = 1
End Enum
Public Enum APPLICATION_VIEW_ORIENTATION
	AVO_LANDSCAPE = 0
	AVO_PORTRAIT = 1
End Enum
Public Enum ADJACENT_DISPLAY_EDGES
	ADE_NONE = 0
	ADE_LEFT = &H1
	ADE_RIGHT = &H2
End Enum
Public Enum APPLICATION_VIEW_MIN_WIDTH
	AVMW_DEFAULT = 0
	AVMW_320 = 1
	AVMW_500 = 2
End Enum

Public Enum APPLICATION_VIEW_SIZE_PREFERENCE
	AVSP_DEFAULT = 0
	AVSP_USE_LESS = 1
	AVSP_USE_HALF = 2
	AVSP_USE_MORE = 3
	AVSP_USE_MINIMUM = 4
	AVSP_USE_NONE = 5
	AVSP_CUSTOM = 6
End Enum

Public Enum FLYOUT_PLACEMENT
	FP_DEFAULT = 0
	FP_ABOVE = 1
	FP_BELOW = 2
	FP_LEFT = 3
	FP_RIGHT = 4
End Enum

Public Enum DESKTOP_SLIDESHOW_OPTIONS
	DSO_SHUFFLEIMAGES = &H01 ' When set, indicates that the order in which images in the slideshow are displayed can be randomized.
End Enum
Public Enum DESKTOP_SLIDESHOW_STATE
	DSS_ENABLED = &H01 ' Slideshows are enabled. This is normally true, unless the Enable method is used.
	DSS_SLIDESHOW = &H02 ' A slideshow is currently configured (e.g., using SetSlideshow).
	DSS_DISABLED_BY_REMOTE_SESSION = &H04 ' A remote session has temporarily disabled the slideshow
End Enum
Public Enum DESKTOP_SLIDESHOW_DIRECTION
	DSD_FORWARD = 0 ' Advance slideshow forward.
	DSD_BACKWARD = 1 ' Advance slideshow backward.
End Enum
Public Enum DESKTOP_WALLPAPER_POSITION
	DWPOS_CENTER = 0 ' Center the image, do not stretch (WPSTYLE_CENTER in IActiveDesktop).
	DWPOS_TILE = 1 ' Tile the image across all monitors (WPSTYLE_TILE in IActiveDesktop).
	DWPOS_STRETCH = 2 ' Stretch the image to exactly fit on the monitor (WPSTYLE_STRETCH in IActiveDesktop).
	DWPOS_FIT = 3 ' Stretch the image to exactly the height or width of the monitor without
	'  changing its aspect ratio or cropping (WPSTYLE_KEEPASPECT in IActiveDesktop).
	'  This often results in letterbox bars on the sides or top/bottom of the image.
	DWPOS_FILL = 4 ' Like DWPOS_FIT, but stretches the image until it completely fills the screen, allowing
	'  cropping to avoid letterbox bars (WPSTYLE_CROPTOFIT in IActiveDesktop).
	DWPOS_SPAN = 5 ' Spans a single image across all monitors (new, no IActiveDesktop equivalent).
End Enum

Public Enum PLMC
	PLMC_EXPLORER = 4
End Enum

Public Enum SxSFusionFmt
    STREAM_FORMAT_COMPLIB_MODULE = 0
    STREAM_FORMAT_COMPLIB_MANIFEST = 1
    STREAM_FORMAT_WIN32_MODULE = 2
    STREAM_FORMAT_WIN32_MANIFEST = 4
End Enum

Public Enum SxSAsmInstallFlags
	IASSEMBLYCACHE_INSTALL_FLAG_REFRESH = &H00000001
    IASSEMBLYCACHE_INSTALL_FLAG_FORCE_REFRESH = &H00000002
End Enum
Public Enum SxSQueryAsmFlags
    QUERYASMINFO_FLAG_VALIDATE = &H00000001
    QUERYASMINFO_FLAG_GETSIZE = &H00000002
End Enum
Public Enum SxSAsmInfoFlags
	ASSEMBLYINFO_FLAG_INSTALLED = (&H00000001)
	ASSEMBLYINFO_FLAG_PAYLOADRESIDENT = (&H00000002)
End Enum
Public Type ASSEMBLY_INFO
    cbAssemblyInfo As Long
    dwAssemblyFlags As SxSAsmInfoFlags
    uliAssemblySizeInKB As ULARGE_INTEGER
    pszCurrentAssemblyPathBuf As LongPtr
    cchBuf As Long
End Type
Public Enum SxSCacheCommit
	IASSEMBLYCACHEITEM_COMMIT_FLAG_REFRESH = (&H00000001)
    IASSEMBLYCACHEITEM_COMMIT_FLAG_FORCE_REFRESH = (&H00000002)
End Enum
Public Enum SxSUninstallDisposition
	IASSEMBLYCACHE_UNINSTALL_DISPOSITION_UNINSTALLED = (1)
	IASSEMBLYCACHE_UNINSTALL_DISPOSITION_STILL_IN_USE = (2)
	IASSEMBLYCACHE_UNINSTALL_DISPOSITION_ALREADY_UNINSTALLED = (3)
	IASSEMBLYCACHE_UNINSTALL_DISPOSITION_DELETE_PENDING = (4)
	IASSEMBLYCACHE_UNINSTALL_DISPOSITION_HAS_INSTALL_REFERENCES = 5
	IASSEMBLYCACHE_UNINSTALL_DISPOSITION_REFERENCE_NOT_FOUND = 6
End Enum
Public Enum SxSCacheDisposition
	IASSEMBLYCACHEITEM_COMMIT_DISPOSITION_INSTALLED = (1)
	IASSEMBLYCACHEITEM_COMMIT_DISPOSITION_REFRESHED = (2)
	IASSEMBLYCACHEITEM_COMMIT_DISPOSITION_ALREADY_INSTALLED = (3)
End Enum
Public Type FUSION_INSTALL_REFERENCE
    cbSize As Long
    dwFlags As Long
    guidScheme As UUID
    szIdentifier As LongPtr
    szNonCannonicalData As LongPtr
End Type
Public Enum ASM_NAME
    ASM_NAME_PUBLIC_KEY = 0
    ASM_NAME_PUBLIC_KEY_TOKEN = (ASM_NAME_PUBLIC_KEY + 1)
    ASM_NAME_HASH_VALUE = (ASM_NAME_PUBLIC_KEY_TOKEN + 1)
    ASM_NAME_NAME = (ASM_NAME_HASH_VALUE + 1)
    ASM_NAME_MAJOR_VERSION = (ASM_NAME_NAME + 1)
    ASM_NAME_MINOR_VERSION = (ASM_NAME_MAJOR_VERSION + 1)
    ASM_NAME_BUILD_NUMBER = (ASM_NAME_MINOR_VERSION + 1)
    ASM_NAME_REVISION_NUMBER = (ASM_NAME_BUILD_NUMBER + 1)
    ASM_NAME_CULTURE = (ASM_NAME_REVISION_NUMBER + 1)
    ASM_NAME_PROCESSOR_ID_ARRAY = (ASM_NAME_CULTURE + 1)
    ASM_NAME_OSINFO_ARRAY = (ASM_NAME_PROCESSOR_ID_ARRAY + 1)
    ASM_NAME_HASH_ALGID = (ASM_NAME_OSINFO_ARRAY + 1)
    ASM_NAME_ALIAS = (ASM_NAME_HASH_ALGID + 1)
    ASM_NAME_CODEBASE_URL = (ASM_NAME_ALIAS + 1)
    ASM_NAME_CODEBASE_LASTMOD = (ASM_NAME_CODEBASE_URL + 1)
    ASM_NAME_NULL_PUBLIC_KEY = (ASM_NAME_CODEBASE_LASTMOD + 1)
    ASM_NAME_NULL_PUBLIC_KEY_TOKEN = (ASM_NAME_NULL_PUBLIC_KEY + 1)
    ASM_NAME_CUSTOM = (ASM_NAME_NULL_PUBLIC_KEY_TOKEN + 1)
    ASM_NAME_NULL_CUSTOM = (ASM_NAME_CUSTOM + 1)
    ASM_NAME_MVID = (ASM_NAME_NULL_CUSTOM + 1)
    ASM_NAME_MAX_PARAMS = (ASM_NAME_MVID + 1)
End Enum
Public Enum ASM_BIND_FLAGS
    ASM_BINDF_FORCE_CACHE_INSTALL = &H1
    ASM_BINDF_RFS_INTEGRITY_CHECK = &H2
    ASM_BINDF_RFS_MODULE_CHECK = &H4
    ASM_BINDF_BINPATH_PROBE_ONLY = &H8
    ASM_BINDF_SHARED_BINPATH_HINT = &H10
    ASM_BINDF_PARENT_ASM_HINT = &H20
End Enum
Public Enum ASM_DISPLAY_FLAGS
    ASM_DISPLAYF_VERSION = &H1
    ASM_DISPLAYF_CULTURE = &H2
    ASM_DISPLAYF_PUBLIC_KEY_TOKEN = &H4
    ASM_DISPLAYF_PUBLIC_KEY = &H8
    ASM_DISPLAYF_CUSTOM = &H10
    ASM_DISPLAYF_PROCESSORARCHITECTURE = &H20
    ASM_DISPLAYF_LANGUAGEID = &H40
End Enum
Public Enum ASM_CMP_FLAGS
    ASM_CMPF_NAME = &H1
    ASM_CMPF_MAJOR_VERSION = &H2
    ASM_CMPF_MINOR_VERSION = &H4
    ASM_CMPF_BUILD_NUMBER = &H8
    ASM_CMPF_REVISION_NUMBER = &H10
    ASM_CMPF_PUBLIC_KEY_TOKEN = &H20
    ASM_CMPF_CULTURE = &H40
    ASM_CMPF_CUSTOM = &H80
    ASM_CMPF_ALL = (((((((ASM_CMPF_NAME Or ASM_CMPF_MAJOR_VERSION) Or ASM_CMPF_MINOR_VERSION) Or ASM_CMPF_REVISION_NUMBER) Or ASM_CMPF_BUILD_NUMBER) Or ASM_CMPF_PUBLIC_KEY_TOKEN) Or ASM_CMPF_CULTURE) Or ASM_CMPF_CUSTOM)
    ASM_CMPF_DEFAULT = &H100
End Enum



Public Type NOTIFYITEM
	pszExeName As LongPtr
	pszIconText As LongPtr
	hIcon As LongPtr
	hwnd As LongPtr
	dwUserPref As Long
	uID As Long
	guidItem As UUID
End Type

Public Enum SMPINNABLE
	SMPINNABLE_EXEONLY = &H1
	SMPINNABLE_REJECTSLOWMEDIA = &H2
End Enum

Public Enum PERSIST_SPROPSTORE_FLAGS
    FPSPS_DEFAULT = &H00000000
    FPSPS_READONLY = &H00000001
    FPSPS_TREAT_NEW_VALUES_AS_DIRTY = &H00000002
End Enum

[PackingAlignment(1)]
Public Type DELEGATEITEMID
	cbSize As Integer
    wOuter As Integer
    cbInner As Integer
    rgb(0) As Byte
End Type

Public Const E_PREVIEWHANDLER_DRM_FAIL = (&H86420001) '// blocked by digital rights management
Public Const E_PREVIEWHANDLER_NOAUTH   = (&H86420002) '// blocked by file permissions
Public Const E_PREVIEWHANDLER_NOTFOUND = (&H86420003) '// item was not found
Public Const E_PREVIEWHANDLER_CORRUPT  = (&H86420004) '// item was corrupt

Public Enum DevModeFields
	DM_ORIENTATION = &H00000001
	DM_PAPERSIZE = &H00000002
	DM_PAPERLENGTH = &H00000004
	DM_PAPERWIDTH = &H00000008
	DM_SCALE = &H00000010
	DM_POSITION = &H00000020
	DM_NUP = &H00000040
	DM_DISPLAYORIENTATION = &H00000080
	DM_COPIES = &H00000100
	DM_DEFAULTSOURCE = &H00000200
	DM_PRINTQUALITY = &H00000400
	DM_COLOR = &H00000800
	DM_DUPLEX = &H00001000
	DM_YRESOLUTION = &H00002000
	DM_TTOPTION = &H00004000
	DM_COLLATE = &H00008000&
	DM_FORMNAME = &H00010000
	DM_LOGPIXELS = &H00020000
	DM_BITSPERPEL = &H00040000
	DM_PELSWIDTH = &H00080000
	DM_PELSHEIGHT = &H00100000
	DM_DISPLAYFLAGS = &H00200000
	DM_DISPLAYFREQUENCY = &H00400000
	DM_ICMMETHOD = &H00800000
	DM_ICMINTENT = &H01000000
	DM_MEDIATYPE = &H02000000
	DM_DITHERTYPE = &H04000000
	DM_PANNINGWIDTH = &H08000000
	DM_PANNINGHEIGHT = &H10000000
	DM_DISPLAYFIXEDOUTPUT = &H20000000
End Enum
Public Enum DevModeOrientation
	DMORIENT_PORTRAIT = 1
	DMORIENT_LANDSCAPE = 2
End Enum
Public Enum DevModePaperTypes
	DMPAPER_FIRST = DMPAPER_LETTER
	DMPAPER_LETTER = 1 /* Letter 8 1/2 x 11 in */
	DMPAPER_LETTERSMALL = 2 /* Letter Small 8 1/2 x 11 in */
	DMPAPER_TABLOID = 3 /* Tabloid 11 x 17 in */
	DMPAPER_LEDGER = 4 /* Ledger 17 x 11 in */
	DMPAPER_LEGAL = 5 /* Legal 8 1/2 x 14 in */
	DMPAPER_STATEMENT = 6 /* Statement 5 1/2 x 8 1/2 in */
	DMPAPER_EXECUTIVE = 7 /* Executive 7 1/4 x 10 1/2 in */
	DMPAPER_A3 = 8 /* A3 297 x 420 mm */
	DMPAPER_A4 = 9 /* A4 210 x 297 mm */
	DMPAPER_A4SMALL = 10 /* A4 Small 210 x 297 mm */
	DMPAPER_A5 = 11 /* A5 148 x 210 mm */
	DMPAPER_B4 = 12 /* B4 (JIS) 250 x 354 */
	DMPAPER_B5 = 13 /* B5 (JIS) 182 x 257 mm */
	DMPAPER_FOLIO = 14 /* Folio 8 1/2 x 13 in */
	DMPAPER_QUARTO = 15 /* Quarto 215 x 275 mm */
	DMPAPER_10X14 = 16 /* 1&H14 in */
	DMPAPER_11X17 = 17 /* 11x17 in */
	DMPAPER_NOTE = 18 /* Note 8 1/2 x 11 in */
	DMPAPER_ENV_9 = 19 /* Envelope #9 3 7/8 x 8 7/8 */
	DMPAPER_ENV_10 = 20 /* Envelope #10 4 1/8 x 9 1/2 */
	DMPAPER_ENV_11 = 21 /* Envelope #11 4 1/2 x 10 3/8 */
	DMPAPER_ENV_12 = 22 /* Envelope #12 4 \276 x 11 */
	DMPAPER_ENV_14 = 23 /* Envelope #14 5 x 11 1/2 */
	DMPAPER_CSHEET = 24 /* C size sheet */
	DMPAPER_DSHEET = 25 /* D size sheet */
	DMPAPER_ESHEET = 26 /* E size sheet */
	DMPAPER_ENV_DL = 27 /* Envelope DL 110 x 220mm */
	DMPAPER_ENV_C5 = 28 /* Envelope C5 162 x 229 mm */
	DMPAPER_ENV_C3 = 29 /* Envelope C3 324 x 458 mm */
	DMPAPER_ENV_C4 = 30 /* Envelope C4 229 x 324 mm */
	DMPAPER_ENV_C6 = 31 /* Envelope C6 114 x 162 mm */
	DMPAPER_ENV_C65 = 32 /* Envelope C65 114 x 229 mm */
	DMPAPER_ENV_B4 = 33 /* Envelope B4 250 x 353 mm */
	DMPAPER_ENV_B5 = 34 /* Envelope B5 176 x 250 mm */
	DMPAPER_ENV_B6 = 35 /* Envelope B6 176 x 125 mm */
	DMPAPER_ENV_ITALY = 36 /* Envelope 110 x 230 mm */
	DMPAPER_ENV_MONARCH = 37 /* Envelope Monarch 3.875 x 7.5 in */
	DMPAPER_ENV_PERSONAL = 38 /* 6 3/4 Envelope 3 5/8 x 6 1/2 in */
	DMPAPER_FANFOLD_US = 39 /* US Std Fanfold 14 7/8 x 11 in */
	DMPAPER_FANFOLD_STD_GERMAN = 40 /* German Std Fanfold 8 1/2 x 12 in */
	DMPAPER_FANFOLD_LGL_GERMAN = 41 /* German Legal Fanfold 8 1/2 x 13 in */
	DMPAPER_ISO_B4 = 42 /* B4 (ISO) 250 x 353 mm */
	DMPAPER_JAPANESE_POSTCARD = 43 /* Japanese Postcard 100 x 148 mm */
	DMPAPER_9X11 = 44 /* 9 x 11 in */
	DMPAPER_10X11 = 45 /* 10 x 11 in */
	DMPAPER_15X11 = 46 /* 15 x 11 in */
	DMPAPER_ENV_INVITE = 47 /* Envelope Invite 220 x 220 mm */
	DMPAPER_RESERVED_48 = 48 /* RESERVED--DO NOT USE */
	DMPAPER_RESERVED_49 = 49 /* RESERVED--DO NOT USE */
	DMPAPER_LETTER_EXTRA = 50 /* Letter Extra 9 \275 x 12 in */
	DMPAPER_LEGAL_EXTRA = 51 /* Legal Extra 9 \275 x 15 in */
	DMPAPER_TABLOID_EXTRA = 52 /* Tabloid Extra 11.69 x 18 in */
	DMPAPER_A4_EXTRA = 53 /* A4 Extra 9.27 x 12.69 in */
	DMPAPER_LETTER_TRANSVERSE = 54 /* Letter Transverse 8 \275 x 11 in */
	DMPAPER_A4_TRANSVERSE = 55 /* A4 Transverse 210 x 297 mm */
	DMPAPER_LETTER_EXTRA_TRANSVERSE = 56 /* Letter Extra Transverse 9\275 x 12 in */
	DMPAPER_A_PLUS = 57 /* SuperA/SuperA/A4 227 x 356 mm */
	DMPAPER_B_PLUS = 58 /* SuperB/SuperB/A3 305 x 487 mm */
	DMPAPER_LETTER_PLUS = 59 /* Letter Plus 8.5 x 12.69 in */
	DMPAPER_A4_PLUS = 60 /* A4 Plus 210 x 330 mm */
	DMPAPER_A5_TRANSVERSE = 61 /* A5 Transverse 148 x 210 mm */
	DMPAPER_B5_TRANSVERSE = 62 /* B5 (JIS) Transverse 182 x 257 mm */
	DMPAPER_A3_EXTRA = 63 /* A3 Extra 322 x 445 mm */
	DMPAPER_A5_EXTRA = 64 /* A5 Extra 174 x 235 mm */
	DMPAPER_B5_EXTRA = 65 /* B5 (ISO) Extra 201 x 276 mm */
	DMPAPER_A2 = 66 /* A2 420 x 594 mm */
	DMPAPER_A3_TRANSVERSE = 67 /* A3 Transverse 297 x 420 mm */
	DMPAPER_A3_EXTRA_TRANSVERSE = 68 /* A3 Extra Transverse 322 x 445 mm */
	DMPAPER_DBL_JAPANESE_POSTCARD = 69 /* Japanese Double Postcard 200 x 148 mm */
	DMPAPER_A6 = 70 /* A6 105 x 148 mm */
	DMPAPER_JENV_KAKU2 = 71 /* Japanese Envelope Kaku #2 */
	DMPAPER_JENV_KAKU3 = 72 /* Japanese Envelope Kaku #3 */
	DMPAPER_JENV_CHOU3 = 73 /* Japanese Envelope Chou #3 */
	DMPAPER_JENV_CHOU4 = 74 /* Japanese Envelope Chou #4 */
	DMPAPER_LETTER_ROTATED = 75 /* Letter Rotated 11 x 8 1/2 11 in */
	DMPAPER_A3_ROTATED = 76 /* A3 Rotated 420 x 297 mm */
	DMPAPER_A4_ROTATED = 77 /* A4 Rotated 297 x 210 mm */
	DMPAPER_A5_ROTATED = 78 /* A5 Rotated 210 x 148 mm */
	DMPAPER_B4_JIS_ROTATED = 79 /* B4 (JIS) Rotated 364 x 257 mm */
	DMPAPER_B5_JIS_ROTATED = 80 /* B5 (JIS) Rotated 257 x 182 mm */
	DMPAPER_JAPANESE_POSTCARD_ROTATED = 81 /* Japanese Postcard Rotated 148 x 100 mm */
	DMPAPER_DBL_JAPANESE_POSTCARD_ROTATED = 82 /* Double Japanese Postcard Rotated 148 x 200 mm */
	DMPAPER_A6_ROTATED = 83 /* A6 Rotated 148 x 105 mm */
	DMPAPER_JENV_KAKU2_ROTATED = 84 /* Japanese Envelope Kaku #2 Rotated */
	DMPAPER_JENV_KAKU3_ROTATED = 85 /* Japanese Envelope Kaku #3 Rotated */
	DMPAPER_JENV_CHOU3_ROTATED = 86 /* Japanese Envelope Chou #3 Rotated */
	DMPAPER_JENV_CHOU4_ROTATED = 87 /* Japanese Envelope Chou #4 Rotated */
	DMPAPER_B6_JIS = 88 /* B6 (JIS) 128 x 182 mm */
	DMPAPER_B6_JIS_ROTATED = 89 /* B6 (JIS) Rotated 182 x 128 mm */
	DMPAPER_12X11 = 90 /* 12 x 11 in */
	DMPAPER_JENV_YOU4 = 91 /* Japanese Envelope You #4 */
	DMPAPER_JENV_YOU4_ROTATED = 92 /* Japanese Envelope You #4 Rotated*/
	DMPAPER_P16K = 93 /* PRC 16K 146 x 215 mm */
	DMPAPER_P32K = 94 /* PRC 32K 97 x 151 mm */
	DMPAPER_P32KBIG = 95 /* PRC 32K(Big) 97 x 151 mm */
	DMPAPER_PENV_1 = 96 /* PRC Envelope #1 102 x 165 mm */
	DMPAPER_PENV_2 = 97 /* PRC Envelope #2 102 x 176 mm */
	DMPAPER_PENV_3 = 98 /* PRC Envelope #3 125 x 176 mm */
	DMPAPER_PENV_4 = 99 /* PRC Envelope #4 110 x 208 mm */
	DMPAPER_PENV_5 = 100 /* PRC Envelope #5 110 x 220 mm */
	DMPAPER_PENV_6 = 101 /* PRC Envelope #6 120 x 230 mm */
	DMPAPER_PENV_7 = 102 /* PRC Envelope #7 160 x 230 mm */
	DMPAPER_PENV_8 = 103 /* PRC Envelope #8 120 x 309 mm */
	DMPAPER_PENV_9 = 104 /* PRC Envelope #9 229 x 324 mm */
	DMPAPER_PENV_10 = 105 /* PRC Envelope #10 324 x 458 mm */
	DMPAPER_P16K_ROTATED = 106 /* PRC 16K Rotated */
	DMPAPER_P32K_ROTATED = 107 /* PRC 32K Rotated */
	DMPAPER_P32KBIG_ROTATED = 108 /* PRC 32K(Big) Rotated */
	DMPAPER_PENV_1_ROTATED = 109 /* PRC Envelope #1 Rotated 165 x 102 mm */
	DMPAPER_PENV_2_ROTATED = 110 /* PRC Envelope #2 Rotated 176 x 102 mm */
	DMPAPER_PENV_3_ROTATED = 111 /* PRC Envelope #3 Rotated 176 x 125 mm */
	DMPAPER_PENV_4_ROTATED = 112 /* PRC Envelope #4 Rotated 208 x 110 mm */
	DMPAPER_PENV_5_ROTATED = 113 /* PRC Envelope #5 Rotated 220 x 110 mm */
	DMPAPER_PENV_6_ROTATED = 114 /* PRC Envelope #6 Rotated 230 x 120 mm */
	DMPAPER_PENV_7_ROTATED = 115 /* PRC Envelope #7 Rotated 230 x 160 mm */
	DMPAPER_PENV_8_ROTATED = 116 /* PRC Envelope #8 Rotated 309 x 120 mm */
	DMPAPER_PENV_9_ROTATED = 117 /* PRC Envelope #9 Rotated 324 x 229 mm */
	DMPAPER_PENV_10_ROTATED = 118 /* PRC Envelope #10 Rotated 458 x 324 mm */
    DMPAPER_USER = 256
End Enum
Public Enum DevModeBinSelections
	DMBIN_FIRST = DMBIN_UPPER
	DMBIN_UPPER = 1
	DMBIN_ONLYONE = 1
	DMBIN_LOWER = 2
	DMBIN_MIDDLE = 3
	DMBIN_MANUAL = 4
	DMBIN_ENVELOPE = 5
	DMBIN_ENVMANUAL = 6
	DMBIN_AUTO = 7
	DMBIN_TRACTOR = 8
	DMBIN_SMALLFMT = 9
	DMBIN_LARGEFMT = 10
	DMBIN_LARGECAPACITY = 11
	DMBIN_CASSETTE = 14
	DMBIN_FORMSOURCE = 15
	DMBIN_LAST = DMBIN_FORMSOURCE
	DMBIN_USER = 256 /* device specific bins start here */
End Enum
Public Enum DevModePrintQuality
	DMRES_DRAFT = (-1)
	DMRES_LOW = (-2)
	DMRES_MEDIUM = (-3)
	DMRES_HIGH = (-4)
End Enum
Public Enum DevModePrintColor
	DMCOLOR_MONOCHROME = 1
	DMCOLOR_COLOR = 2
End Enum
Public Enum DevModePrintDuplex
	DMDUP_SIMPLEX = 1
	DMDUP_VERTICAL = 2
	DMDUP_HORIZONTAL = 3
End Enum
Public Enum DevModeTTF
	DMTT_BITMAP = 1 /* print TT fonts as graphics */
	DMTT_DOWNLOAD = 2 /* download TT fonts as soft fonts */
	DMTT_SUBDEV = 3 /* substitute device fonts for TT fonts */
	DMTT_DOWNLOAD_OUTLINE = 4 /* download TT fonts as outline soft fonts */
End Enum
Public Enum DevModePrintCollate
	DMCOLLATE_FALSE = 0
	DMCOLLATE_TRUE = 1
End Enum
Public Enum DevModeDisplayOrientation
    DMDO_0 = 0
	DMDO_DEFAULT = DMDO_0
	DMDO_90 = 1
	DMDO_180 = 2
	DMDO_270 = 3
End Enum
Public Enum DevModeDisplayFixedOutput
	DMDFO_DEFAULT = 0
	DMDFO_STRETCH = 1
	DMDFO_CENTER = 2
End Enum
Public Enum DevModeDisplayFlags
	DM_GRAYSCALE = &H00000001 /* This flag is no longer valid */
	DM_INTERLACED = &H00000002
	DMDISPLAYFLAGS_TEXTMODE = &H00000004
End Enum
Public Enum DevModeNup
	DMNUP_SYSTEM = 1
	DMNUP_ONEUP = 2
End Enum
Public Enum DevModeICMMethods
	DMICMMETHOD_NONE = 1 /* ICM disabled */
	DMICMMETHOD_SYSTEM = 2 /* ICM handled by system */
	DMICMMETHOD_DRIVER = 3 /* ICM handled by driver */
	DMICMMETHOD_DEVICE = 4 /* ICM handled by device */
	DMICMMETHOD_USER = 256 /* Device-specific methods start here */
End Enum
Public Enum DevModeICMIntents
	DMICM_SATURATE = 1 /* Maximize color saturation */
	DMICM_CONTRAST = 2 /* Maximize color contrast */
	DMICM_COLORIMETRIC = 3 /* Use specific color metric */
	DMICM_ABS_COLORIMETRIC = 4 /* Use specific color metric */
	DMICM_USER = 256 /* Device-specific intents start here */
End Enum
Public Enum DevModePrintMediaTypes
	DMMEDIA_STANDARD = 1 /* Standard paper */
	DMMEDIA_TRANSPARENCY = 2 /* Transparency */
	DMMEDIA_GLOSSY = 3 /* Glossy paper */
	DMMEDIA_USER = 256 /* Device-specific media start here */
End Enum
Public Enum DevModePrintDitherTypes
	DMDITHER_NONE = 1 /* No dithering */
	DMDITHER_COARSE = 2 /* Dither with a coarse brush */
	DMDITHER_FINE = 3 /* Dither with a fine brush */
	DMDITHER_LINEART = 4 /* LineArt dithering */
	DMDITHER_ERRORDIFFUSION = 5 /* LineArt dithering */
	DMDITHER_RESERVED6 = 6 /* LineArt dithering */
	DMDITHER_RESERVED7 = 7 /* LineArt dithering */
	DMDITHER_RESERVED8 = 8 /* LineArt dithering */
	DMDITHER_RESERVED9 = 9 /* LineArt dithering */
	DMDITHER_GRAYSCALE = 10 /* Device does grayscaling */
	DMDITHER_USER = 256 /* Device-specific dithers start here */
End Enum
Public Const CCHFORMNAME = 32
Public Const CCHDEVICENAME = 32
[Description("DM_SPECVERSION value for NT4 through (at the time of writing this) the most recent version, Win11")]
Public Const DM_SPECVERSION = &H0401
Public Type DEVMODEA
    dmDeviceName(CCHDEVICENAME - 1) As Byte
    dmSpecVersion As Integer
    dmDriverVersion As Integer
    dmSize As Integer
    dmDriverExtra As Integer
    dmFields As DevModeFields
    PrinterOrDisplayFields(0 To 15) As Byte 'union {
                                            '   ' printer only fields */
                                            '   struct {
                                            '     short dmOrientation;
                                            '     short dmPaperSize;
                                            '     short dmPaperLength;
                                            '     short dmPaperWidth;
                                            '     short dmScale;
                                            '     short dmCopies;
                                            '     short dmDefaultSource;
                                            '     short dmPrintQuality;
                                            '   } DUMMYSTRUCTNAME;
                                            '   ' display only fields */
                                            '   struct {
                                            '     POINTL dmPosition;
                                            '     DWORD  dmDisplayOrientation;
                                            '     DWORD  dmDisplayFixedOutput;
                                            '   } DUMMYSTRUCTNAME2;
                                            ' } DUMMYUNIONNAME;
    dmColor As Integer
    dmDuplex As Integer
    dmYResolution As Integer
    dmTTOption As Integer
    dmCollate As Integer
    dmFormName(CCHFORMNAME - 1) As Byte
    dmLogPixels As Integer
    dmBitsPerPel As Long
    dmPelsWidth As Long
    dmPelsHeight As Long
    DisplayFlagsOrNup As Long   ' union {
                                '     DWORD  dmDisplayFlags;
                                '     DWORD  dmNup;
                                ' } DUMMYUNIONNAME2;
    dmDisplayFrequency As Long
    '#if(WINVER >= 0x0400)
    dmICMMethod As DevModeICMMethods
    dmICMIntent As DevModeICMIntents
    dmMediaType As DevModePrintMediaTypes
    dmDitherType As DevModePrintDitherTypes
    dmReserved1 As Long
    dmReserved2 As Long
    '#if (WINVER >= 0x0500) || (_WIN32_WINNT >= _WIN32_WINNT_NT4)
    dmPanningWidth As Long
    dmPanningHeight As Long
    '#endif
    '#endif /* WINVER >= 0x0400 */
End Type
Public Type DEVMODEW
    dmDeviceName(CCHDEVICENAME - 1) As Integer
    dmSpecVersion As Integer
    dmDriverVersion As Integer
    dmSize As Integer
    dmDriverExtra As Integer
    dmFields As DevModeFields
    PrinterOrDisplayFields(0 To 15) As Byte 'union {
                                            '   ' printer only fields */
                                            '   struct {
                                            '     short dmOrientation;
                                            '     short dmPaperSize;
                                            '     short dmPaperLength;
                                            '     short dmPaperWidth;
                                            '     short dmScale;
                                            '     short dmCopies;
                                            '     short dmDefaultSource;
                                            '     short dmPrintQuality;
                                            '   } DUMMYSTRUCTNAME;
                                            '   ' display only fields */
                                            '   struct {
                                            '     POINTL dmPosition;
                                            '     DWORD  dmDisplayOrientation;
                                            '     DWORD  dmDisplayFixedOutput;
                                            '   } DUMMYSTRUCTNAME2;
                                            ' } DUMMYUNIONNAME;
    dmColor As Integer
    dmDuplex As Integer
    dmYResolution As Integer
    dmTTOption As Integer
    dmCollate As Integer
    dmFormName(CCHFORMNAME - 1) As Integer
    dmLogPixels As Integer
    dmBitsPerPel As Long
    dmPelsWidth As Long
    dmPelsHeight As Long
    DisplayFlagsOrNup As Long   ' union {
                                '     DWORD  dmDisplayFlags;
                                '     DWORD  dmNup;
                                ' } DUMMYUNIONNAME2;
    dmDisplayFrequency As Long
    '#if(WINVER >= 0x0400)
    dmICMMethod As DevModeICMMethods
    dmICMIntent As DevModeICMIntents
    dmMediaType As DevModePrintMediaTypes
    dmDitherType As DevModePrintDitherTypes
    dmReserved1 As Long
    dmReserved2 As Long
    '#if (WINVER >= 0x0500) || (_WIN32_WINNT >= _WIN32_WINNT_NT4)
    dmPanningWidth As Long
    dmPanningHeight As Long
    '#endif
    '#endif /* WINVER >= 0x0400 */
End Type
'Alias DEVMODE As DEVMODEW
Public Type DEVMODE
    dmDeviceName(CCHDEVICENAME - 1) As Integer
    dmSpecVersion As Integer
    dmDriverVersion As Integer
    dmSize As Integer
    dmDriverExtra As Integer
    dmFields As DevModeFields
    PrinterOrDisplayFields(0 To 15) As Byte
    dmColor As Integer
    dmDuplex As Integer
    dmYResolution As Integer
    dmTTOption As Integer
    dmCollate As Integer
    dmFormName(CCHFORMNAME - 1) As Integer
    dmLogPixels As Integer
    dmBitsPerPel As Long
    dmPelsWidth As Long
    dmPelsHeight As Long
    DisplayFlagsOrNup As Long
    dmDisplayFrequency As Long
    '#if(WINVER >= 0x0400)
    dmICMMethod As DevModeICMMethods
    dmICMIntent As DevModeICMIntents
    dmMediaType As DevModePrintMediaTypes
    dmDitherType As DevModePrintDitherTypes
    dmReserved1 As Long
    dmReserved2 As Long
    '#if (WINVER >= 0x0500) || (_WIN32_WINNT >= _WIN32_WINNT_NT4)
    dmPanningWidth As Long
    dmPanningHeight As Long
    '#endif
    '#endif /* WINVER >= 0x0400 */
End Type

Public Type BANDSITEINFO
	dwMask As BandSiteMask ' BSIM_* flags
	dwState As BandSiteState ' BSSF_* flags
	dwStyle As BandSiteStyle ' BSIS_* flags
End Type
Public Enum BandSiteMask
	BSIM_STATE = &H00000001
	BSIM_STYLE = &H00000002
End Enum
Public Enum BandSiteStyle
	BSIS_AUTOGRIPPER = &H00000000
	BSIS_NOGRIPPER = &H00000001
	BSIS_ALWAYSGRIPPER = &H00000002
	BSIS_LEFTALIGN = &H00000004
	BSIS_SINGLECLICK = &H00000008
	BSIS_NOCONTEXTMENU = &H00000010
	BSIS_NODROPTARGET = &H00000020
	BSIS_NOCAPTION = &H00000040
	BSIS_PREFERNOLINEBREAK = &H00000080
	BSIS_LOCKED = &H00000100

	BSIS_PRESERVEORDERDURINGLAYOUT = &H00000200
	BSIS_FIXEDORDER = &H00000400
End Enum
Public Enum BandSiteState
	BSSF_VISIBLE = &H00000001
	BSSF_NOTITLE = &H00000002
	BSSF_UNDELETEABLE = &H00001000
End Enum

Public Enum BANDSITECID
    BSID_BANDADDED
    BSID_BANDREMOVED
End Enum

Public Enum BandMInfoMask
	DBIM_MINSIZE = &H0001
	DBIM_MAXSIZE = &H0002
	DBIM_INTEGRAL = &H0004
	DBIM_ACTUAL = &H0008
	DBIM_TITLE = &H0010
	DBIM_MODEFLAGS = &H0020
	DBIM_BKCOLOR = &H0040
End Enum

Public Type DESKBANDINFO
	dwMask As BandMInfoMask
	ptMinSize As POINT
	ptMaxSize As POINT
	ptIntegral As POINT
	ptActual As POINT
	wszTitle(0 To 255) As Integer
	dwModeFlags As BandModeFlags
	crBkgnd As Long
End Type
Public Enum BandModeFlags
	DBIMF_NORMAL = &H0000
	DBIMF_FIXED = &H0001
	DBIMF_FIXEDBMP = &H0004  ' a fixed background bitmap (if supported)")
	DBIMF_VARIABLEHEIGHT = &H0008
	DBIMF_UNDELETEABLE = &H0010
	DBIMF_DEBOSSED = &H0020
	DBIMF_BKCOLOR = &H0040
	DBIMF_USECHEVRON = &H0080
	DBIMF_BREAK = &H0100
	DBIMF_ADDTOFRONT = &H0200
	DBIMF_TOPALIGN = &H0400
	'(NTDDI_VERSION  = >= NTDDI_VISTA)")
	DBIMF_NOGRIPPER = &H0800
	DBIMF_ALWAYSGRIPPER = &H1000
	DBIMF_NOMARGINS = &H2000
End Enum
Public Enum BandViewMode
	DBIF_VIEWMODE_NORMAL = &H0000
	DBIF_VIEWMODE_VERTICAL = &H0001
	DBIF_VIEWMODE_FLOATING = &H0002
	DBIF_VIEWMODE_TRANSPARENT = &H0004
End Enum
Public Enum DESKBANDCID
	DBID_BANDINFOCHANGED = 0
	DBID_SHOWONLY = 1
	DBID_MAXIMIZEBAND = 2 ' Maximize the specified band (VT_UI4 == dwID)
	DBID_PUSHCHEVRON = 3
	DBID_DELAYINIT = 4 ' Note: _bandsite_ calls _band_ with this code
	DBID_FINISHINIT = 5 ' Note: _bandsite_ calls _band_ with this code
	DBID_SETWINDOWTHEME = 6 ' Note: _bandsite_ calls _band_ with this code
	DBID_PERMITAUTOHIDE = 7
End Enum

Public Const DBPC_SELECTFIRST As Long = -1
Public Const DBPC_SELECTLAST As Long = -2

Public Enum DockingFrameRemoveToolbarFlags
	DWFRF_NORMAL = &H0000
	DWFRF_DELETECONFIGDATA = &H0001
End Enum
Public Enum DockingFrameAddToolbarFlags
	DWFAF_HIDDEN = &H0001  ' add hidden
	DWFAF_GROUP1 = &H0002  ' insert at end of group 1
	DWFAF_GROUP2 = &H0004  ' insert at end of group 2
	DWFAF_AUTOHIDE = &H0010  ' The toolbar will be subject to AutoHide in Full Screen mode
End Enum

Public Enum MENUBANDHANDLERCID
	MBHANDCID_PIDLSELECT = 0 ' A PIDL from a menuband was selected
End Enum

Public Enum SFB_Mask
	ISFB_MASK_STATE = &H00000001 ' TRUE if dwStateMask and dwState is valid
	ISFB_MASK_BKCOLOR = &H00000002 ' TRUE if crBkgnd field is valid
	ISFB_MASK_VIEWMODE = &H00000004 ' TRUE if wViewMode field is valid
	ISFB_MASK_SHELLFOLDER = &H00000008
	ISFB_MASK_IDLIST = &H00000010
	ISFB_MASK_COLORS = &H00000020 ' TRUE if crXXXX fields are valid (except bkgnd)
End Enum
Public Enum SFB_State
	ISFB_STATE_DEFAULT = &H00000000
	ISFB_STATE_DEBOSSED = &H00000001
	ISFB_STATE_ALLOWRENAME = &H00000002
	ISFB_STATE_NOSHOWTEXT = &H00000004 ' TRUE if _fNoShowText
	ISFB_STATE_CHANNELBAR = &H00000010 ' TRUE if we want NavigateTarget support
	ISFB_STATE_QLINKSMODE = &H00000020 ' TRUE if we want to turn off drag & drop onto content items
	ISFB_STATE_FULLOPEN = &H00000040 ' TRUE if band should maximize when opened
	ISFB_STATE_NONAMESORT = &H00000080 ' TRUE if band should _not_ sort icons by name
	ISFB_STATE_BTNMINSIZE = &H00000100 ' TRUE if band should report min thickness of button
End Enum

Public Type BANDINFOSFB
	dwMask As SFB_Mask ' [in] ISFB_MASK mask of valid fields from crBkgnd on
	dwStateMask As SFB_State ' [in] ISFB_STATE mask of dwState bits being set/queried
	dwState As SFB_State ' [in/out] ISFB_STATE bits
	crBkgnd As Long ' [in/out]
	crBtnLt As Long ' [in/out]
	crBtnDk As Long ' [in/out]
	wViewMode As Integer ' [in/out]
	wAlign As Integer ' not used (yet)
	psf As IShellFolder ' [out]
	pidl As LongPtr ' [out]
End Type

Public Enum SFB_ViewMode
	ISFBVIEWMODE_SMALLICONS = &H0001
	ISFBVIEWMODE_LARGEICONS = &H0002
	ISFBVIEWMODE_LOGOS = &H0003
End Enum

Public Enum SFB_CmdTgtIds
	SFBID_PIDLCHANGED = 0
End Enum

Public Enum DBC_Msgs
	DBC_GS_IDEAL = 0 ' get the ideal size
	DBC_GS_SIZEDOWN = 1 ' clip the height of a rect to a multiple of the rebar's integral size
	DBC_HIDE = 0 ' Band is hidden (being destroyed)
	DBC_SHOW = 1 ' Band is visible
	DBC_SHOWOBSCURE = 2 ' Band is completely obscured
End Enum

Public Enum DBC_IDs
	DBCID_EMPTY = 0 ' bandsite is empty
	DBCID_ONDRAG = 1 ' (down)DragMoveEnter/Leave vaIn:I4:eDrag
	DBCID_CLSIDOFBAR = 2 ' clsid of bar inside
	DBCID_RESIZE = 3 ' resize from keyboard accelerator
	DBCID_GETBAR = 4 ' returns vaOut:VT_UNKNOWN of hosting dockbar (IDeskBar)
	DBCID_UPDATESIZE = 5 ' resize from non-user source (search activation failure)
End Enum

Public Enum BANNER_NOTIFICATION_EVENT
	BNE_Rendered = 0
	BNE_Hovered = 1
	BNE_Closed = 2 ' Implicit close due to navigation
	BNE_Dismissed = 3 ' Explicit close by user using dismiss button
	BNE_Button1Clicked = 4
	BNE_Button2Clicked = 5
End Enum
Public Type BANNER_NOTIFICATION
	event As BANNER_NOTIFICATION_EVENT
	providerIdentity As LongPtr
	contentId As LongPtr
End Type

Public Enum SORT_ORDER_TYPE
	SOT_DEFAULT = 0
	SOT_IGNORE_FOLDERNESS = 1
End Enum

Public Enum DPSF_StoreIDs
    STOREID_INNATE
    STOREID_FILE
    STOREID_FALLBACK
End Enum


Public Enum QualityMode
	QualityModeInvalid = -1
	QualityModeDefault = 0
	QualityModeLow = 1 ' Best performance
	QualityModeHigh = 2 ' Best rendering quality
End Enum

Public Enum InterpolationMode
	InterpolationModeInvalid = QualityModeInvalid
	InterpolationModeDefault = QualityModeDefault
	InterpolationModeLowQuality = QualityModeLow
	InterpolationModeHighQuality = QualityModeHigh
	InterpolationModeBilinear
	InterpolationModeBicubic
	InterpolationModeNearestNeighbor
	InterpolationModeHighQualityBilinear
	InterpolationModeHighQualityBicubic
End Enum

Public Enum VirtualKeyCodes
	VK_LBUTTON = &H1
	VK_RBUTTON = &H2
	VK_CANCEL = &H3
	VK_MBUTTON = &H4
    VK_XBUTTON1 = &H05 /* NOT contiguous with L & RBUTTON */
    VK_XBUTTON2 = &H06 /* NOT contiguous with L & RBUTTON */
	'0x07 - reserved
	VK_BACK = &H8
	VK_TAB = &H9
	'0x0A-0x0B - reserved
	VK_CLEAR = &HC
	VK_RETURN = &HD
	'0x0E-0x0F - reserved
	VK_SHIFT = &H10
	VK_CONTROL = &H11
	VK_MENU = &H12
	VK_PAUSE = &H13
	VK_CAPITAL = &H14
    VK_KANA = &H15
    VK_HANGEUL = &H15 /* old name - should be here for compatibility */
    VK_HANGUL = &H15
    VK_IME_ON = &H16
    VK_JUNJA = &H17
    VK_FINAL = &H18
    VK_HANJA = &H19
    VK_KANJI = &H19
    VK_IME_OFF = &H1A
	VK_ESCAPE = &H1B
    VK_CONVERT = &H1C
    VK_NONCONVERT = &H1D
    VK_ACCEPT = &H1E
    VK_MODECHANGE = &H1F
	VK_SPACE = &H20
	VK_PRIOR = &H21
	VK_NEXT = &H22
	VK_END = &H23
	VK_HOME = &H24
	VK_LEFT = &H25
	VK_UP = &H26
	VK_RIGHT = &H27
	VK_DOWN = &H28
	VK_SELECT = &H29
	VK_PRINT = &H2A
	VK_EXECUTE = &H2B
	VK_SNAPSHOT = &H2C
	VK_INSERT = &H2D
	VK_DELETE = &H2E
	VK_HELP = &H2F
	VK_0 = &H30
	VK_1 = &H31
	VK_2 = &H32
	VK_3 = &H33
	VK_4 = &H34
	VK_5 = &H35
	VK_6 = &H36
	VK_7 = &H37
	VK_8 = &H38
	VK_9 = &H39
	'0x3a-0x40 - unassigned
	VK_A = &H41
	VK_B = &H42
	VK_C = &H43
	VK_D = &H44
	VK_E = &H45
	VK_F = &H46
	VK_G = &H47
	VK_H = &H48
	VK_I = &H49
	VK_J = &H4A
	VK_K = &H4B
	VK_L = &H4C
	VK_M = &H4D
	VK_N = &H4E
	VK_O = &H4F
	VK_P = &H50
	VK_Q = &H51
	VK_R = &H52
	VK_S = &H53
	VK_T = &H54
	VK_U = &H55
	VK_V = &H56
	VK_W = &H57
	VK_X = &H58
	VK_Y = &H59
	VK_Z = &H5A
	VK_STARTKEY = &H5B 'VBCompat - Not in SDK
    VK_LWIN = &H5B
    VK_RWIN = &H5C
    VK_APPS = &H5D
	VK_CONTEXTKEY = &H5D 'VBCompat - Not in SDK
	'0x5e - reserved
	VK_SLEEP = &H5F
	VK_NUMPAD0 = &H60
	VK_NUMPAD1 = &H61
	VK_NUMPAD2 = &H62
	VK_NUMPAD3 = &H63
	VK_NUMPAD4 = &H64
	VK_NUMPAD5 = &H65
	VK_NUMPAD6 = &H66
	VK_NUMPAD7 = &H67
	VK_NUMPAD8 = &H68
	VK_NUMPAD9 = &H69
	VK_MULTIPLY = &H6A
	VK_ADD = &H6B
	VK_SEPARATOR = &H6C
	VK_SUBTRACT = &H6D
	VK_DECIMAL = &H6E
	VK_DIVIDE = &H6F
	VK_F1 = &H70
	VK_F2 = &H71
	VK_F3 = &H72
	VK_F4 = &H73
	VK_F5 = &H74
	VK_F6 = &H75
	VK_F7 = &H76
	VK_F8 = &H77
	VK_F9 = &H78
	VK_F10 = &H79
	VK_F11 = &H7A
	VK_F12 = &H7B
	VK_F13 = &H7C
	VK_F14 = &H7D
	VK_F15 = &H7E
	VK_F16 = &H7F
	VK_F17 = &H80
	VK_F18 = &H81
	VK_F19 = &H82
	VK_F20 = &H83
	VK_F21 = &H84
	VK_F22 = &H85
	VK_F23 = &H86
	VK_F24 = &H87
    VK_NAVIGATION_VIEW = &H88  ' reserved
    VK_NAVIGATION_MENU = &H89  ' reserved
    VK_NAVIGATION_UP = &H8A  ' reserved
    VK_NAVIGATION_DOWN = &H8B  ' reserved
    VK_NAVIGATION_LEFT = &H8C  ' reserved
    VK_NAVIGATION_RIGHT = &H8D  ' reserved
    VK_NAVIGATION_ACCEPT = &H8E  ' reserved
    VK_NAVIGATION_CANCEL = &H8F  ' reserved
	VK_NUMLOCK = &H90
	VK_OEM_SCROLL = &H91
    VK_OEM_NEC_EQUAL = &H92
    VK_OEM_FJ_JISHO = &H92  ' 'Dictionary' key
    VK_OEM_FJ_MASSHOU = &H93  ' 'Unregister word' key
    VK_OEM_FJ_TOUROKU = &H94  ' 'Register word' key
    VK_OEM_FJ_LOYA = &H95  ' 'Left OYAYUBI' key
    VK_OEM_FJ_ROYA = &H96  ' 'Right OYAYUBI' key
	'0x97-0x9f - unassigned
    VK_LSHIFT = &HA0
    VK_RSHIFT = &HA1
    VK_LCONTROL = &HA2
    VK_RCONTROL = &HA3
    VK_LMENU = &HA4
    VK_RMENU = &HA5
    VK_BROWSER_BACK = &HA6
    VK_BROWSER_FORWARD = &HA7
    VK_BROWSER_REFRESH = &HA8
    VK_BROWSER_STOP = &HA9
    VK_BROWSER_SEARCH = &HAA
    VK_BROWSER_FAVORITES = &HAB
    VK_BROWSER_HOME = &HAC
    VK_VOLUME_MUTE = &HAD
    VK_VOLUME_DOWN = &HAE
    VK_VOLUME_UP = &HAF
    VK_MEDIA_NEXT_TRACK = &HB0
    VK_MEDIA_PREV_TRACK = &HB1
    VK_MEDIA_STOP = &HB2
    VK_MEDIA_PLAY_PAUSE = &HB3
    VK_LAUNCH_MAIL = &HB4
    VK_LAUNCH_MEDIA_SELECT = &HB5
    VK_LAUNCH_APP1 = &HB6
    VK_LAUNCH_APP2 = &HB7
	'0xB8-0xB9 - reserved
	VK_OEM_1 = &HBA
	VK_OEM_PLUS = &HBB
	VK_OEM_COMMA = &HBC
	VK_OEM_MINUS = &HBD
	VK_OEM_PERIOD = &HBE
	VK_OEM_2 = &HBF
	VK_OEM_3 = &HC0
	'0xC1-0xC2 - reserved
    VK_GAMEPAD_A = &HC3  ' reserved
    VK_GAMEPAD_B = &HC4  ' reserved
    VK_GAMEPAD_X = &HC5  ' reserved
    VK_GAMEPAD_Y = &HC6  ' reserved
    VK_GAMEPAD_RIGHT_SHOULDER = &HC7  ' reserved
    VK_GAMEPAD_LEFT_SHOULDER = &HC8  ' reserved
    VK_GAMEPAD_LEFT_TRIGGER = &HC9  ' reserved
    VK_GAMEPAD_RIGHT_TRIGGER = &HCA  ' reserved
    VK_GAMEPAD_DPAD_UP = &HCB  ' reserved
    VK_GAMEPAD_DPAD_DOWN = &HCC  ' reserved
    VK_GAMEPAD_DPAD_LEFT = &HCD  ' reserved
    VK_GAMEPAD_DPAD_RIGHT = &HCE  ' reserved
    VK_GAMEPAD_MENU = &HCF  ' reserved
    VK_GAMEPAD_VIEW = &HD0  ' reserved
    VK_GAMEPAD_LEFT_THUMBSTICK_BUTTON = &HD1  ' reserved
    VK_GAMEPAD_RIGHT_THUMBSTICK_BUTTON = &HD2  ' reserved
    VK_GAMEPAD_LEFT_THUMBSTICK_UP = &HD3  ' reserved
    VK_GAMEPAD_LEFT_THUMBSTICK_DOWN = &HD4  ' reserved
    VK_GAMEPAD_LEFT_THUMBSTICK_RIGHT = &HD5  ' reserved
    VK_GAMEPAD_LEFT_THUMBSTICK_LEFT = &HD6  ' reserved
    VK_GAMEPAD_RIGHT_THUMBSTICK_UP = &HD7  ' reserved
    VK_GAMEPAD_RIGHT_THUMBSTICK_DOWN = &HD8  ' reserved
    VK_GAMEPAD_RIGHT_THUMBSTICK_RIGHT = &HD9  ' reserved
    VK_GAMEPAD_RIGHT_THUMBSTICK_LEFT = &HDA  ' reserved
	VK_OEM_4 = &HDB
	VK_OEM_5 = &HDC
	VK_OEM_6 = &HDD
	VK_OEM_7 = &HDE
	VK_OEM_8 = &HDF
	VK_ICO_F17 = &HE0
	VK_ICO_F18 = &HE1
	VK_OEM102 = &HE2
	VK_ICO_HELP = &HE3
	VK_ICO_00 = &HE4
    VK_PROCESSKEY = &HE5
	VK_ICO_CLEAR = &HE6
    VK_PACKET = &HE7
	'0xE8 - unassigned
	VK_OEM_RESET = &HE9
	VK_OEM_JUMP = &HEA
	VK_OEM_PA1 = &HEB
	VK_OEM_PA2 = &HEC
	VK_OEM_PA3 = &HED
	VK_OEM_WSCTRL = &HEE
	VK_OEM_CUSEL = &HEF
	VK_OEM_ATTN = &HF0
	VK_OEM_FINNISH = &HF1
	VK_OEM_COPY = &HF2
	VK_OEM_AUTO = &HF3
	VK_OEM_ENLW = &HF4
	VK_OEM_BACKTAB = &HF5
	VK_ATTN = &HF6
	VK_CRSEL = &HF7
	VK_EXSEL = &HF8
	VK_EREOF = &HF9
	VK_PLAY = &HFA
	VK_ZOOM = &HFB
	VK_NONAME = &HFC
	VK_PA1 = &HFD
	VK_OEM_CLEAR = &HFE
	'0xFF - reserved
End Enum

Public Enum CreateProcessFlags
	DEBUG_PROCESS = &H00000001
	DEBUG_ONLY_THIS_PROCESS = &H00000002
	CREATE_SUSPENDED = &H00000004
	DETACHED_PROCESS = &H00000008
	CREATE_NEW_CONSOLE = &H00000010
	NORMAL_PRIORITY_CLASS_FLAG = &H00000020
	IDLE_PRIORITY_CLASS_FLAG = &H00000040
	HIGH_PRIORITY_CLASS_FLAG = &H00000080
	REALTIME_PRIORITY_CLASS_FLAG = &H00000100
	CREATE_NEW_PROCESS_GROUP = &H00000200
	CREATE_UNICODE_ENVIRONMENT = &H00000400
	CREATE_SEPARATE_WOW_VDM = &H00000800
	CREATE_SHARED_WOW_VDM = &H00001000
	CREATE_FORCEDOS = &H00002000
	BELOW_NORMAL_PRIORITY_CLASS_FLAG = &H00004000
	ABOVE_NORMAL_PRIORITY_CLASS_FLAG = &H00008000&
	INHERIT_PARENT_AFFINITY = &H00010000
	INHERIT_CALLER_PRIORITY = &H00020000  ' Deprecated
	CREATE_PROTECTED_PROCESS = &H00040000
	EXTENDED_STARTUPINFO_PRESENT = &H00080000
	PROCESS_MODE_BACKGROUND_BEGIN = &H00100000
	PROCESS_MODE_BACKGROUND_END = &H00200000
	CREATE_SECURE_PROCESS = &H00400000
	CREATE_BREAKAWAY_FROM_JOB = &H01000000
	CREATE_PRESERVE_CODE_AUTHZ_LEVEL = &H02000000
	CREATE_DEFAULT_ERROR_MODE = &H04000000
	CREATE_NO_WINDOW = &H08000000
	PROFILE_USER = &H10000000
	PROFILE_KERNEL = &H20000000
	PROFILE_SERVER = &H40000000
	CREATE_IGNORE_SYSTEM_DEFAULT = &H80000000
End Enum

Public Enum STARTUP_FLAGS
    STARTF_USESHOWWINDOW = &H1
    STARTF_USESIZE = &H2
    STARTF_USEPOSITION = &H4
    STARTF_USECOUNTCHARS = &H8
    STARTF_USEFILLATTRIBUTE = &H10
    STARTF_RUNFULLSCREEN = &H20            ' ignored For non-x86 platforms
    STARTF_FORCEONFEEDBACK = &H40
    STARTF_FORCEOFFFEEDBACK = &H80
    STARTF_USESTDHANDLES = &H100
    STARTF_USEHOTKEY = &H200
    STARTF_TITLEISLINKNAME = &H800
    STARTF_TITLEISAPPID = &H1000
    STARTF_PREVENTPINNING = &H2000
    STARTF_UNTRUSTEDSOURCE = &H8000&
    STARTF_HOLOGRAPHIC = &H00040000
End Enum

Public Enum ObjectSafetyFlags
    INTERFACESAFE_FOR_UNTRUSTED_CALLER = &H00000001  ' Caller of interface may be untrusted 
    INTERFACESAFE_FOR_UNTRUSTED_DATA = &H00000002  ' Data passed into interface may be untrusted 
    INTERFACE_USES_DISPEX = &H00000004  ' Object knows to use IDispatchEx 
    INTERFACE_USES_SECURITY_MANAGER = &H00000008  ' Object knows to use IInternetHostSecurityManager 
End Enum

Public Enum ShellDetailsPIDs
    PID_FINDDATA = 0
    PID_NETRESOURCE = 1
    PID_DESCRIPTIONID = 2
    PID_WHICHFOLDER = 3
    PID_NETWORKLOCATION = 4
    PID_COMPUTERNAME = 5
End Enum
Public Enum ShellDetailsDisplacedPIDs
    PID_DISPLACED_FROM = 2
    PID_DISPLACED_DATE = 3
End Enum
Public Const PID_SYNC_COPY_IN = 2
Public Enum ShellDetailsMiscPIDs
    PID_MISC_STATUS = 2
    PID_MISC_ACCESSCOUNT = 3
    PID_MISC_OWNER = 4
    PID_HTMLINFOTIPFILE = 5
    PID_MISC_PICS = 6
End Enum
Public Enum ShellDetailsWebviewPIDs
    PID_DISPLAY_PROPERTIES = 0
    PID_INTROTEXT = 1
End Enum
Public Enum ShellDetailsMusicPIDs
    PIDSI_ARTIST = 2
    PIDSI_SONGTITLE = 3
    PIDSI_ALBUM = 4
    PIDSI_YEAR = 5
    PIDSI_COMMENT = 6
    PIDSI_TRACK = 7
    PIDSI_GENRE = 11
    PIDSI_LYRICS = 12
End Enum
Public Enum ShellDetailsDrmPIDs
    PIDDRSI_PROTECTED = 2
    PIDDRSI_DESCRIPTION = 3
    PIDDRSI_PLAYCOUNT = 4
    PIDDRSI_PLAYSTARTS = 5
    PIDDRSI_PLAYEXPIRES = 6
End Enum
Public Enum ShellDetailsVideoPIDs
    PIDVSI_STREAM_NAME = &H00000002  ' "System.Video.StreamName"   (old name "StreamName")
    PIDVSI_FRAME_WIDTH = &H00000003  ' "System.Video.FrameWidth"   (old name "FrameWidth")
    PIDVSI_FRAME_HEIGHT = &H00000004  ' "System.Video.FrameHeight"  (old name "FrameHeight")
    PIDVSI_TIMELENGTH = &H00000007  '                             (old name "TimeLength")
    PIDVSI_FRAME_COUNT = &H00000005  ' "System.Media.FrameCount"   (old name "FrameCount")
    PIDVSI_FRAME_RATE = &H00000006  ' "System.Video.FrameRate"    (old name "FrameRate")
    PIDVSI_DATA_RATE = &H00000008  ' "System.Video.DataRate"     (old name "DataRate")
    PIDVSI_SAMPLE_SIZE = &H00000009  ' "System.Video.SampleSize"   (old name "SampleSize")
    PIDVSI_COMPRESSION = &H0000000A  ' "System.Video.Compression"  (old name "Compression")
    PIDVSI_STREAM_NUMBER = &H0000000B  ' "System.Video.StreamNumber" (old name "StreamNumber")
End Enum
Public Enum ShellDetailsAudioPIDs
    PIDASI_FORMAT = &H00000002  ' VT_BSTR
    PIDASI_TIMELENGTH = &H00000003  ' VT_UI4, milliseconds
    PIDASI_AVG_DATA_RATE = &H00000004  ' VT_UI4,  Hz
    PIDASI_SAMPLE_RATE = &H00000005  ' VT_UI4,  bits
    PIDASI_SAMPLE_SIZE = &H00000006  ' VT_UI4,  bits
    PIDASI_CHANNEL_COUNT = &H00000007  ' VT_UI4
    PIDASI_STREAM_NUMBER = &H00000008  ' VT_UI2
    PIDASI_STREAM_NAME = &H00000009  ' VT_LPWSTR
    PIDASI_COMPRESSION = &H0000000A  ' VT_LPWSTR
End Enum
Public Const PID_CONTROLPANEL_CATEGORY = 2
Public Enum ShellDetailsVolumePIDs
    PID_VOLUME_FREE = 2
    PID_VOLUME_CAPACITY = 3
    PID_VOLUME_FILESYSTEM = 4
End Enum
Public Const PID_SHARE_CSC_STATUS = 2
Public Enum ShellDetailsVLinkTargetPIDs
    PID_LINK_TARGET = 2
    PID_LINK_TARGET_TYPE = 3
End Enum
Public Const PID_QUERY_RANK = 2

Public Enum FileInUseCapabilities
    OF_CAP_CANSWITCHTO = &H0001
    OF_CAP_CANCLOSE = &H0002
End Enum

Public Enum VBGCWhich
    GC_WCH_SIBLING = &H00000001
    GC_WCH_CONTAINER = &H00000002 ' no FONLYAFTER/BEFORE
    GC_WCH_CONTAINED = &H00000003 ' no FONLYAFTER/BEFORE
    GC_WCH_ALL = &H00000004
    GC_WCH_FREVERSEDIR = &H08000000 ' OR'd with others
    GC_WCH_FONLYAFTER = &H10000000 ' OR'd with others
    GC_WCH_FONLYBEFORE = &H20000000 ' OR'd with others
    GC_WCH_FSELECTED = &H40000000 ' OR'd with others
End Enum

Public Const sCLSID_DragDropHelper = "new: {4657278A-411B-11D2-839A-00C04FD918D0}"
Public Const sCLSID_KnownFolderManager = "new: {4df0c730-df9d-4ae3-9153-aa6b82e9795a}"
Public Const sCLSID_FileOperation = "new: {3ad05575-8857-4850-9277-11b85bdb8e09}"
Public Const sCLSID_ShellLibrary = "new: {D9B3211D-E57F-4426-AAEF-30A806ADD397}"
Public Const sCLSID_FileOpenDialog = "new: {DC1C5A9C-E88A-4dde-A5A1-60F82A20AEF7}"
Public Const sCLSID_FileSaveDialog = "new: {C0B4E2F3-BA21-4773-8DBA-335EC946EB8B}"
Public Const sCLSID_EnumerableObjectCollection = "new: {2D3468C1-36A7-43B6-AC24-D3F02FD9607A}"
Public Const sCLSID_TaskbarList = "new: {56FDF344-FD6D-11d0-958A-006097C9A090}"
Public Const sCLSID_DestinationList = "new: {77F10CF0-3DB5-4966-B520-B7C54FD35ED6}"
Public Const sCLSID_ShellWindows = "new: {9BA05972-F6A8-11CF-A442-00A0C90A8F39}"
Public Const sCLSID_ProgressDialog = "new: {F8383852-FCD3-11d1-A6B9-006097DF5BD4}"
Public Const sCLSID_NamespaceWalker = "new: {72eb61e0-8672-4303-9175-f2e4c68b2e7c}"
Public Const sCLSID_UserNotification = "new: {0010890e-8789-413c-adbc-48f5b511b3af}"
Public Const sCLSID_FolderViewHost = "new: {20b1cb23-6968-4eb9-b7d4-a66d00d07cee}"
Public Const sCLSID_CDBurn = "new: {fbeb8a05-beee-4442-804e-409d6c4515e9}"
Public Const sCLSID_ImageRecompress = "new: {6e33091c-d2f8-4740-b55e-2e11d1477a2c}"
Public Const sCLSID_ImageTranscode = "new: {17B75166-928F-417d-9685-64AA135565C1}"
Public Const sCLSID_ShellImageDataFactory = "new: {66e4e4fb-f385-4dd0-8d74-a2efd1bc6178}"
Public Const sCLSID_QueryCancelAutoPlay = "new: {331F1768-05A9-4ddd-B86E-DAE34DDC998A}"
Public Const sCLSID_CFSIconOverlayManager = "new: {63B51F81-C868-11D0-999C-00C04FD655E1}"
Public Const sCLSID_VirtualDesktopManager = "new: {aa509086-5ca9-4c25-8f95-589d3c07b48a}"
Public Const sCLSID_PreviousVersions = "new: {596AB062-B4D2-4215-9F74-E9109B0A8153}"
Public Const sCLSID_StdGlobalInterfaceTable = "new: {00000323-0000-0000-C000-000000000046}"
Public Const sCLSID_LocalThumbnailCache = "new: {50EF4544-AC9F-4A8E-B21B-8A26180DB13F}"
Public Const sCLSID_SharedBitmap = "new: {4db26476-6787-4046-b836-e8412a9e8a27}"
Public Const sCLSID_ShellLinkW = "new: {00021401-0000-0000-C000-000000000046}"
Public Const sCLSID_AutoComplete = "new: {00BB2763-6A77-11D0-A535-00C04FD7D062}"
Public Const sCLSID_ACListISF = "new: {03C036F1-A186-11D0-824A-00AA005B4383}"
Public Const sCLSID_ACLHistory = "new: {00BB2764-6A77-11D0-A535-00C04FD7D062}"
Public Const sCLSID_ACLMRU = "new: {6756A641-DE71-11d0-831B-00AA005B4383}"
Public Const sCLSID_ACLMulti = "new: {00BB2765-6A77-11D0-A535-00C04FD7D062}"
Public Const sCLSID_StdComponentCategoriesMgr = "new: {0002e005-0000-0000-c000-000000000046}"
Public Const sCLSID_ApplicationAssociationRegistrationUI = "new: {1968106d-f3b5-44cf-890e-116fcb9ecef1}"
Public Const sCLSID_ApplicationAssociationRegistration = "new: {591209c7-767b-42b2-9fba-44ee4615f2c7}"
Public Const sCLSID_HomeGroup = "new: {DE77BA04-3C92-4d11-A1A5-42352A53E0E3}"
Public Const sCLSID_ApplicationDocumentLists = "new: {86bec222-30f2-47e0-9f25-60d11cd75c28}"
Public Const sCLSID_SharingConfigurationManager = "new: {49F371E1-8C5C-4d9c-9A3B-54A6827F513C}"
Public Const sCLSID_SystemInformation = "new: {C01B9BA0-BEA7-41BA-B604-D0A36F469133}"
Public Const sCLSID_PropertyChangeArray = "new: {8b6a3ebb-cd13-4704-93c5-bc3413104e4c}"
Public Const sCLSID_DefFolderMenu = "new: {c63382be-7933-48d0-9ac8-85fb46be2fdd}"
Public Const sCLSID_FrameworkInputPane = "new: {D5120AA3-46BA-44C5-822D-CA8092C1FC72}"
Public Const sCLSID_ExecuteFolder = "new: {11dbb47c-a525-400b-9e80-a54615a090c0}"
Public Const sCLSID_AppShellVerbHandler = "new: {4ED3A719-CEA8-4BD9-910D-E252F997AFC2}"
Public Const sCLSID_ExecuteUnknown = "new: {e44e9428-bdbc-4987-a099-40dc8fd255e7}"
Public Const sCLSID_NetworkPlaces = "new: {208d2c60-3aea-1069-a2d7-08002b30309d}"
Public Const sCLSID_PropertiesUI = "new: {D912F8CF-0396-4915-884E-FB425D32943B}"
Public Const sCLSID_UserEventTimer = "new: {864A1288-354C-4D19-9D68-C2742BB14997}"
Public Const sCLSID_UserEventTimerCallback = "new: {15FFFD13-5140-41B8-B89A-C8D5759CD2B2}"
Public Const sCLSID_AddressBarParser = "new: {E0E11A09-5CB8-4B6C-8332-E00720A168F2}"
Public Const sCLSID_ImageList = "new: {7C476BA2-02B1-48f4-8048-B24619DDC058}"
Public Const sCLSID_MenuBand = "new: {71D88C20-41CF-4CDF-A81F-D8609836347D}"
Public Const sCLSID_OpenControlPanel = "new: {06622D85-6856-4460-8DE1-A81921B41C4B}"
Public Const sCLSID_DriveSizeCategorizer = "new: {94357B53-CA29-4b78-83AE-E8FE7409134F}"
Public Const sCLSID_DriveTypeCategorizer = "new: {B0A8F3CF-4333-4bab-8873-1CCB1CADA48B}"
Public Const sCLSID_FreeSpaceCategorizer = "new: {B5607793-24AC-44c7-82E2-831726AA6CB7}"
Public Const sCLSID_TimeCategorizer = "new: {3bb4118f-ddfd-4d30-a348-9fb5d6bf1afe}"
Public Const sCLSID_SizeCategorizer = "new: {55d7b852-f6d1-42f2-aa75-8728a1b2d264}"
Public Const sCLSID_AlphabeticalCategorizer = "new: {3c2654c6-7372-4f6b-b310-55d6128f49d2}"
Public Const sCLSID_MergedCategorizer = "new: {8e827c11-33e7-4bc1-b242-8cd9a1c2b304}"
Public Const sCLSID_ImageProperties = "new: {7ab770c7-0e23-4d7a-8aa2-19bfad479829}"
Public Const sCLSID_DesktopWallpaper = "new: {C2CF3110-460E-4FC1-B9D0-8A1C0C9CC4BD}"
Public Const sCLSID_AppStartupLink = "new: {273EB5E7-88B0-4843-BFEF-E2C81D43AAE5}"
Public Const sCLSID_PackageDebugSettings = "new: {B1AEC16F-2383-4852-B0E9-8F0B1DC66B4D}"
Public Const sCLSID_SuspensionDependencyManager = "new: {6B273FC5-61FD-4918-95A2-C3B5E9D7F581}"
Public Const sCLSID_ApplicationActivationManager = "new: {6B273FC5-61FD-4918-95A2-C3B5E9D7F581}"
Public Const sCLSID_ApplicationDesignModeSettings = "new: {958A6FB5-DCB2-4FAF-AAFD-7FB054AD1A3B}"
Public Const sCLSID_TaskbandPin = "new: {90AA3A4E-1CBA-4233-B8BB-535773D48449}"
Public Const sCLSID_TrayNotify = "new: {25DEAD04-1EAC-4911-9E3A-AD0A4AB560FD}"
Public Const sCLSID_StartMenuPin = "new: {A2A9545D-A0C2-42B4-9708-A0B2BADD77C8}"
Public Const sCLSID_DesktopGaget = "new: {924ccc1b-6562-4c85-8657-d177925222b6}"

Public Enum StandardAccessTypes
    DELETE = (&H00010000)
    READ_CONTROL = (&H00020000)
    WRITE_DAC = (&H00040000)
    WRITE_OWNER = (&H00080000)
    SYNCHRONIZE = (&H00100000)

    STANDARD_RIGHTS_REQUIRED = (&H000F0000)

    STANDARD_RIGHTS_READ = (READ_CONTROL)
    STANDARD_RIGHTS_WRITE = (READ_CONTROL)
    STANDARD_RIGHTS_EXECUTE = (READ_CONTROL)

    STANDARD_RIGHTS_ALL = (&H001F0000)

    SPECIFIC_RIGHTS_ALL = (&H0000FFFF&)

' //
' // AccessSystemAcl access type
' //

    ACCESS_SYSTEM_SECURITY = (&H01000000)
    MAXIMUM_ALLOWED = (&H02000000)
End Enum
Public Enum GenericRights
    GENERIC_READ = (&H80000000)
    GENERIC_WRITE = (&H40000000)
    GENERIC_EXECUTE = (&H20000000)
    GENERIC_ALL = (&H10000000)
End Enum

Public Enum SECURITY_INFORMATION
    OWNER_SECURITY_INFORMATION = (&H00000001)
    GROUP_SECURITY_INFORMATION = (&H00000002)
    DACL_SECURITY_INFORMATION = (&H00000004)
    SACL_SECURITY_INFORMATION = (&H00000008)
    LABEL_SECURITY_INFORMATION = (&H00000010)
    ATTRIBUTE_SECURITY_INFORMATION = (&H00000020)
    SCOPE_SECURITY_INFORMATION = (&H00000040)
    PROCESS_TRUST_LABEL_SECURITY_INFORMATION = (&H00000080)
    ACCESS_FILTER_SECURITY_INFORMATION = (&H00000100)
    BACKUP_SECURITY_INFORMATION = (&H00010000)
    PROTECTED_DACL_SECURITY_INFORMATION = (&H80000000)
    PROTECTED_SACL_SECURITY_INFORMATION = (&H40000000)
    UNPROTECTED_DACL_SECURITY_INFORMATION = (&H20000000)
    UNPROTECTED_SACL_SECURITY_INFORMATION = (&H10000000)
End Enum

Public Enum PixelFormat
    PixelFormatIndexed = &H00010000 '// Indexes into a palette
    PixelFormatGDI = &H00020000 '// Is a GDI-supported format
    PixelFormatAlpha = &H00040000 '// Has an alpha component
    PixelFormatPAlpha = &H00080000 '// Pre-multiplied alpha
    PixelFormatExtended = &H00100000 '// Extended color 16 bits/channel
    PixelFormatCanonical = &H00200000

    PixelFormatUndefined = 0
    PixelFormatDontCare = 0

    PixelFormat1bppIndexed = (1 Or (1 << 8) Or PixelFormatIndexed Or PixelFormatGDI)
    PixelFormat4bppIndexed = (2 Or (4 << 8) Or PixelFormatIndexed Or PixelFormatGDI)
    PixelFormat8bppIndexed = (3 Or (8 << 8) Or PixelFormatIndexed Or PixelFormatGDI)
    PixelFormat16bppGrayScale = (4 Or (16 << 8) Or PixelFormatExtended)
    PixelFormat16bppRGB555 = (5 Or (16 << 8) Or PixelFormatGDI)
    PixelFormat16bppRGB565 = (6 Or (16 << 8) Or PixelFormatGDI)
    PixelFormat16bppARGB1555 = (7 Or (16 << 8) Or PixelFormatAlpha Or PixelFormatGDI)
    PixelFormat24bppRGB = (8 Or (24 << 8) Or PixelFormatGDI)
    PixelFormat32bppRGB = (9 Or (32 << 8) Or PixelFormatGDI)
    PixelFormat32bppARGB = (10 Or (32 << 8) Or PixelFormatAlpha Or PixelFormatGDI Or PixelFormatCanonical)
    PixelFormat32bppPARGB = (11 Or (32 << 8) Or PixelFormatAlpha Or PixelFormatPAlpha Or PixelFormatGDI)
    PixelFormat48bppRGB = (12 Or (48 << 8) Or PixelFormatExtended)
    PixelFormat64bppARGB = (13 Or (64 << 8) Or PixelFormatAlpha Or PixelFormatCanonical Or PixelFormatExtended)
    PixelFormat64bppPARGB = (14 Or (64 << 8) Or PixelFormatAlpha Or PixelFormatPAlpha Or PixelFormatExtended)
    PixelFormat32bppCMYK = (15 Or (32 << 8))
    PixelFormatMax = 16
End Enum

#If WINDEVLIB_LITE = 0 Then
Public Declare PtrSafe Function ShowWindow Lib "user32" (ByVal hWnd As LongPtr, ByVal nCmdShow As SHOWWINDOW) As Long
#End If

Public Enum HeapFlags
    HEAP_NO_SERIALIZE = &H00000001
    HEAP_GROWABLE = &H00000002
    HEAP_GENERATE_EXCEPTIONS = &H00000004
    HEAP_ZERO_MEMORY = &H00000008
    HEAP_REALLOC_IN_PLACE_ONLY = &H00000010
    HEAP_TAIL_CHECKING_ENABLED = &H00000020
    HEAP_FREE_CHECKING_ENABLED = &H00000040
    HEAP_DISABLE_COALESCE_ON_FREE = &H00000080
    HEAP_CREATE_ALIGN_16 = &H00010000
    HEAP_CREATE_ENABLE_TRACING = &H00020000
    HEAP_CREATE_ENABLE_EXECUTE = &H00040000
    HEAP_MAXIMUM_TAG = &H0FFF
    HEAP_PSEUDO_TAG_FLAG = &H8000&
    HEAP_TAG_SHIFT = 18
    HEAP_CREATE_SEGMENT_HEAP = &H00000100
    HEAP_CREATE_HARDENED = &H00000200
End Enum




[Description("Indicates whether an HRESULT value represents a successful operation (>= 0)")]
Public Function SUCCEEDED(hr As Long) As Boolean
    Return hr >= 0
End Function
[Description("Indicates whether an HRESULT value represents a failed operation (< 0)")]
Public Function FAILED(hr As Long) As Boolean
    Return hr < 0
End Function
End Module
#End Region