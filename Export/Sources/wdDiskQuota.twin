'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'dskquota.h / exp_dskquota.odl


[InterfaceId("7988B574-EC89-11cf-9C00-00AA00A14F56")]
[OleAutomation(False)]
Interface IDiskQuotaUser Extends stdole.IUnknown
    Sub GetID(pulID As Long)
    Sub GetName(ByVal pszAccountContainer As LongPtr, ByVal cchAccountContainer As Long, ByVal pszLogonName As LongPtr, ByVal cchLogonName As Long, ByVal pszDisplayName As LongPtr, ByVal cchDisplayName As Long)
    Sub GetSidLength(pdwLength As Long)
    Sub GetSid(pbSidBuffer As Byte, ByVal cbSidBuffer As Long)
    Sub GetQuotaThreashold(pllThreshold As LongLong)
    Sub GetQuotaThresholdText(ByVal pszText As LongPtr, ByVal cchText As Long)
    Sub GetQuotaLimit(pllLimit As LongLong)
    Sub GetQuotaLimitText(ByVal pszText As LongPtr, ByVal cchText As Long)
    Sub GetQuotaUsed(pllUsed As LongLong)
    Sub GetQuotaUsedText(ByVal pszText As LongPtr, ByVal cchText As Long)
    Sub GetQuotaInformation(pbQuotaInfo As Any, ByVal cbQuotaInfo As Long)
    Sub SetQuotaThreshold(ByVal llThreshold As LongLong, ByVal fWriteThrough As BOOL)
    Sub SetQuotaLimit(ByVal llLimit As LongLong, ByVal fWriteThrough As BOOL)
    Sub Invalidate()
    Sub GetAccountStatus(pdwStatus As DiskQuotaAccountStatus)
End Interface

[InterfaceId("7988B577-EC89-11cf-9C00-00AA00A14F56")]
[OleAutomation(False)]
Interface IEnumDiskQuotaUsers Extends stdole.IUnknown
    Sub Next(ByVal cUsers As Long, rgUsers As IDiskQuotaUser, pcUsersFetched As Long)
    Sub Skip(ByVal cUsers As Long)
    Sub Reset()
    Sub Clone(ppEnum As IEnumDiskQuotaUsers)
End Interface

[InterfaceId("7988B576-EC89-11cf-9C00-00AA00A14F56")]
[OleAutomation(False)]
Interface IDiskQuotaUserBatch Extends stdole.IUnknown
    Sub Add(ByVal pUser As IDiskQuotaUser)
    Sub Remove(ByVal pUser As IDiskQuotaUser)
    Sub RemoveAll()
    Sub FlushToDisk()
End Interface

[InterfaceId("7988B572-EC89-11cf-9C00-00AA00A14F56")]
[OleAutomation(False)]
Interface IDiskQuotaControl Extends IConnectionPointContainer
    Sub Initialize(ByVal pszPath As LongPtr, ByVal bReadWrite As BOOL)
    Sub SetQuotaState(ByVal dwState As DiskQuotaStates)
    Sub GetQuotaState(pdwState As DiskQuotaStates)
    Sub SetQuotaLogFlags(ByVal dwFlags As DiskQuotaLogFlags)
    Sub GetQuotaLogFlags(pdwFlags As DiskQuotaLogFlags)
    Sub SetDefaultQuotaThreshold(ByVal llThreshold As LongLong)
    Sub GetDefaultQuotaThreshold(pllThreshold As LongLong)
    Sub GetDefaultQuotaThresholdText(ByVal pszText As LongPtr, ByVal cchText As Long)
    Sub SetDefaultQuotaLimit(ByVal llLimit As LongLong)
    Sub GetDefaultQuotaLimit(pllLimit As LongLong)
    Sub GetDefaultQuotaLimitText(ByVal pszText As LongPtr, ByVal cchText As Long)
    Sub AddUserSid(ByVal pUserSid As LongPtr, ByVal fNameResolution As DiskQuotaNameResolution, ppUser As IDiskQuotaUser)
    Sub AddUserName(ByVal pszLogonName As LongPtr, ByVal fNameResolution As DiskQuotaNameResolution, ppUser As IDiskQuotaUser)
    Sub DeleteUser(ByVal pUser As IDiskQuotaUser)
    Sub FindUserSid(ByVal pUserSid As LongPtr, ByVal fNameResolution As DiskQuotaNameResolution, ppUser As IDiskQuotaUser)
    Sub FindUserName(ByVal pszLogonName As LongPtr, ppUser As IDiskQuotaUser)
    Sub CreateEnumUsers(rgpUserSids As LongPtr, ByVal cpSids As Long, ByVal fNameResolution As DiskQuotaNameResolution, ppEnum As IEnumDiskQuotaUsers)
    Sub CreateUserBatch(ppBatch As IDiskQuotaUserBatch)
    Sub InvalidateSidNameCache()
    Sub GiveUserNameResolutionPriority(ByVal pUser As IDiskQuotaUser)
    Sub ShutdownNameResolution()
End Interface

[InterfaceId("7988B579-EC89-11cf-9C00-00AA00A14F56")]
[OleAutomation(False)]
Interface IDiskQuotaEvents Extends stdole.IUnknown
    Sub OnUserNameChanged(ByVal pUser As IDiskQuotaUser)
End Interface

[CoClassId("7988B571-EC89-11cf-9C00-00AA00A14F56")]
CoClass DiskQuotaControl
    [Default] Interface IDiskQuotaControl
End CoClass



#If WDL_QUALIFY Then
[MustBeQualified]
#End If
Module wdDiskQuota

Public Enum DiskQuotaStates
	DISKQUOTA_STATE_DISABLED = &H000000000
	DISKQUOTA_STATE_TRACK = &H00000001
	DISKQUOTA_STATE_ENFORCE = &H00000002
	DISKQUOTA_STATE_MASK = &H00000003
	DISKQUOTA_FILESTATE_INCOMPLETE = &H00000100
	DISKQUOTA_FILESTATE_REBUILDING = &H00000200
	DISKQUOTA_FILESTATE_MASK = &H00000300
End Enum

Public Enum DiskQuotaLogFlags
	DISKQUOTA_LOGFLAG_USER_THRESHOLD = &H00000001
	DISKQUOTA_LOGFLAG_USER_LIMIT = &H00000002
End Enum

Public Type DISKQUOTA_USER_INFORMATION
	QuotaUsed As LongLong
	QuotaThreshold As LongLong
	QuotaLimit As LongLong
End Type

Public Enum DiskQuotaNameResolution
	DISKQUOTA_USERNAME_RESOLVE_NONE = 0
	DISKQUOTA_USERNAME_RESOLVE_SYNC = 1
	DISKQUOTA_USERNAME_RESOLVE_ASYNC = 2
End Enum

Public Enum DiskQuotaAccountStatus
	DISKQUOTA_USER_ACCOUNT_RESOLVED = 0
	DISKQUOTA_USER_ACCOUNT_UNAVAILABLE = 1
	DISKQUOTA_USER_ACCOUNT_DELETED = 2
	DISKQUOTA_USER_ACCOUNT_INVALID = 3
	DISKQUOTA_USER_ACCOUNT_UNKNOWN = 4
	DISKQUOTA_USER_ACCOUNT_UNRESOLVED = 5
End Enum

End Module