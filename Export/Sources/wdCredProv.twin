
'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'credentialprovider.idl 

[InterfaceId("63913A93-40C1-481A-818D-4072FF8C70CC")]
[OleAutomation(False)]
Interface ICredentialProviderCredential Extends stdole.IUnknown
    Sub Advise(ByVal pcpce As ICredentialProviderCredentialEvents)
    Sub Unadvise()
    Sub SetSelected(ByRef pbAutoLogon As BOOL)
    Sub SetDeselected()
    Sub GetFieldState(ByVal dwFieldID As Long, ByRef pcpfs As CREDENTIAL_PROVIDER_FIELD_STATE, ByRef pcpfis As CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE)
    Sub GetStringValue(ByVal dwFieldID As Long, ByRef ppsz As LongPtr)
    Sub GetBitmapValue(ByVal dwFieldID As Long, ByRef phbmp As LongPtr)
    Sub GetCheckboxValue(ByVal dwFieldID As Long, ByRef pbChecked As BOOL, ByRef ppszLabel As LongPtr)
    Sub GetSubmitButtonValue(ByVal dwFieldID As Long, ByRef pdwAdjacentTo As Long)
    Sub GetComboBoxValueCount(ByVal dwFieldID As Long, ByRef pcItems As Long, ByRef pdwSelectedItem As Long)
    Sub GetComboBoxValueAt(ByVal dwFieldID As Long, ByVal dwItem As Long, ByRef ppszItem As LongPtr)
    Sub SetStringValue(ByVal dwFieldID As Long, ByVal psz As LongPtr)
    Sub SetCheckboxValue(ByVal dwFieldID As Long, ByVal bChecked As BOOL)
    Sub SetComboBoxSelectedValue(ByVal dwFieldID As Long, ByVal dwSelectedItem As Long)
    Sub CommandLinkClicked(ByVal dwFieldID As Long)
    Sub GetSerialization(ByRef pcpgsr As CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE, ByRef pcpcs As CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION, ByRef ppszOptionalStatusText As LongPtr, ByRef pcpsiOptionalStatusIcon As CREDENTIAL_PROVIDER_STATUS_ICON)
    Sub ReportResult(ByVal ntsStatus As Long, ByVal ntsSubstatus As Long, ByRef ppszOptionalStatusText As LongPtr, ByRef pcpsiOptionalStatusIcon As CREDENTIAL_PROVIDER_STATUS_ICON)
End Interface

    
[InterfaceId("9090BE5B-502B-41FB-BCCC-0049A6C7254B")]
[OleAutomation(False)]
Interface IQueryContinueWithStatus Extends IQueryContinue
    Sub SetStatusMessage(ByVal psz As LongPtr)
End Interface

[InterfaceId("9387928B-AC75-4BF9-8AB2-2B93C4A55290")]
[OleAutomation(False)]
Interface IConnectableCredentialProviderCredential Extends ICredentialProviderCredential
    Sub Connect(ByVal pqcws As IQueryContinueWithStatus)
    Sub Disconnect()
End Interface

[InterfaceId("FA6FA76B-66B7-4B11-95F1-86171118E816")]
[OleAutomation(False)]
Interface ICredentialProviderCredentialEvents Extends stdole.IUnknown
    Sub SetFieldState(ByVal pcpc As ICredentialProviderCredential, ByVal dwFieldID As Long, ByVal cpfs As CREDENTIAL_PROVIDER_FIELD_STATE)
    Sub SetFieldInteractiveState(ByVal pcpc As ICredentialProviderCredential, ByVal dwFieldID As Long, ByVal cpfis As CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE)
    Sub SetFieldString(ByVal pcpc As ICredentialProviderCredential, ByVal dwFieldID As Long, ByVal psz As LongPtr)
    Sub SetFieldCheckbox(ByVal pcpc As ICredentialProviderCredential, ByVal dwFieldID As Long, ByVal bChecked As BOOL, ByVal pszLabel As LongPtr)
    Sub SetFieldBitmap(ByVal pcpc As ICredentialProviderCredential, ByVal dwFieldID As Long, ByVal hbmp As Long)
    Sub SetFieldComboBoxSelectedItem(ByVal pcpc As ICredentialProviderCredential, ByVal dwFieldID As Long, ByVal dwSelectedItem As Long)
    Sub DeleteFieldComboBoxItem(ByVal pcpc As ICredentialProviderCredential, ByVal dwFieldID As Long, ByVal dwItem As Long)
    Sub AppendFieldComboBoxItem(ByVal pcpc As ICredentialProviderCredential, ByVal dwFieldID As Long, ByVal pszItem As LongPtr)
    Sub SetFieldSubmitButton(ByVal pcpc As ICredentialProviderCredential, ByVal dwFieldID As Long, ByVal dwAdjacentTo As Long)
    Sub OnCreatingWindow(ByRef phwndOwner As LongPtr)
End Interface

[InterfaceId("D27C3481-5A1C-45B2-8AAA-C20EBBE8229E")]
[OleAutomation(False)]
Interface ICredentialProvider Extends stdole.IUnknown
    Sub SetUsageScenario(ByVal cpus As CREDENTIAL_PROVIDER_USAGE_SCENARIO, ByVal dwFlags As CREDENTIAL_USAGE_SCENARIO)
    Sub SetSerialization(ByRef pcpcs As CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION)
    Sub Advise(ByVal pcpe As ICredentialProviderEvents, ByVal upAdviseContext As LongPtr)
    Sub Unadvise()
    Sub GetFieldDescriptorCount(ByRef pdwCount As Long)
    Sub GetFieldDescriptorAt(ByVal dwIndex As Long, ByRef ppcpfd As CREDENTIAL_PROVIDER_FIELD_DESCRIPTOR)
    Sub GetCredentialCount(ByRef pdwCount As Long, ByRef pdwDefault As Long, ByRef pbAutoLogonWithDefault As BOOL)
    Sub GetCredentialAt(ByVal dwIndex As Long, ByRef ppCPC As ICredentialProviderCredential)
End Interface

[InterfaceId("34201E5A-A787-41A3-A5A4-BD6DCF2A854E")]
[OleAutomation(False)]
Interface ICredentialProviderEvents Extends stdole.IUnknown
    Sub CredentialsChanged(ByVal upAdviseContext As Long)
End Interface

[InterfaceId("A5DA53F9-D475-4080-A120-910C4A739880")]
[OleAutomation(False)]
Interface ICredentialProviderFilter Extends stdole.IUnknown
    Sub Filter(ByVal cpus As CREDENTIAL_PROVIDER_USAGE_SCENARIO, ByVal dwFlags As CREDENTIAL_USAGE_SCENARIO, ByRef rgclsidProviders As UUID, ByRef rgbAllow As BOOL, ByVal cProviders As Long)
    Sub UpdateRemoteCredential(ByRef pcpcsIn As CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION, ByRef pcpcsOut As CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION)
End Interface

[InterfaceId("FD672C54-40EA-4D6E-9B49-CFB1A7507BD7")]
[OleAutomation(False)]
Interface ICredentialProviderCredential2 Extends ICredentialProviderCredential
    Sub GetUserSid(ByRef sid As LongPtr)
End Interface

[InterfaceId("DBC6FB30-C843-49E3-A645-573E6F39446A")]
[OleAutomation(False)]
Interface ICredentialProviderCredentialWithFieldOptions Extends stdole.IUnknown
    Sub GetFieldOptions(ByVal fieldID As Long, ByRef Options As CREDENTIAL_PROVIDER_CREDENTIAL_FIELD_OPTIONS)
End Interface

[InterfaceId("B53C00B6-9922-4B78-B1F4-DDFE774DC39B")]
[OleAutomation(False)]
Interface ICredentialProviderCredentialEvents2 Extends ICredentialProviderCredentialEvents
    Sub BeginFieldUpdates()
    Sub EndFieldUpdates()
    Sub SetFieldOptions(ByVal credential As ICredentialProviderCredential, ByVal fieldID As Long, ByVal Options As CREDENTIAL_PROVIDER_CREDENTIAL_FIELD_OPTIONS)
End Interface

[InterfaceId("13793285-3EA6-40FD-B420-15F47DA41FBB")]
[OleAutomation(False)]
Interface ICredentialProviderUser Extends stdole.IUnknown
    Sub GetSid(ByRef sid As LongPtr)
    Sub GetProviderID(ByRef providerID As UUID)
    Sub GetStringValue(ByRef key As PROPERTYKEY, ByRef stringValue As LongPtr)
    Sub GetValue(ByRef key As PROPERTYKEY, ByRef Value As Variant)
End Interface

[InterfaceId("90C119AE-0F18-4520-A1F1-114366A40FE8")]
[OleAutomation(False)]
Interface ICredentialProviderUserArray Extends stdole.IUnknown
    Sub SetProviderFilter(ByRef guidProviderToFilterTo As UUID)
    Sub GetAccountOptions(ByRef credentialProviderAccountOptions As CREDENTIAL_PROVIDER_ACCOUNT_OPTIONS)
    Sub GetCount(ByRef userCount As Long)
    Sub GetAt(ByVal userIndex As Long, ByRef user As ICredentialProviderUser)
End Interface

[InterfaceId("095C1484-1C0C-4388-9C6D-500E61BF84BD")]
[OleAutomation(False)]
Interface ICredentialProviderSetUserArray Extends stdole.IUnknown
    Sub SetUserArray(ByVal users As ICredentialProviderUserArray)
End Interface


[Description("CLSID_PasswordCredentialProvider")]
[CoClassId("60B78E88-EAD8-445C-9CFD-0B87F74EA6CD")]
[COMCreatable]
CoClass PasswordCredentialProvider
    [Default] Interface ICredentialProvider
End CoClass

[Description("CLSID_V1PasswordCredentialProvider")]
[CoClassId("6F45DC1E-5384-457A-BC13-2CD81B0D28ED")]
[COMCreatable]
CoClass V1PasswordCredentialProvider
    [Default] Interface ICredentialProvider
End CoClass

[Description("CLSID_PINLogonCredentialProvider")]
[CoClassId("CB82EA12-9F71-446D-89E1-8D0924E1256E")]
[COMCreatable]
CoClass PINLogonCredentialProvider
    [Default] Interface ICredentialProvider
End CoClass

[Description("CLSID_NPCredentialProvider")]
[CoClassId("3DD6BEC0-8193-4FFE-AE25-E08E39EA4063")]
[COMCreatable]
CoClass NPCredentialProvider
    [Default] Interface ICredentialProvider
End CoClass

[Description("CLSID_SmartcardCredentialProvider")]
[CoClassId("8FD7E19C-3BF7-489B-A72C-846AB3678C96")]
[COMCreatable]
CoClass SmartcardCredentialProvider
    [Default] Interface ICredentialProvider
End CoClass

[Description("CLSID_V1SmartcardCredentialProvider")]
[CoClassId("8BF9A910-A8FF-457F-999F-A5CA10B4A885")]
[COMCreatable]
CoClass V1SmartcardCredentialProvider
    [Default] Interface ICredentialProvider
End CoClass

[Description("CLSID_SmartcardPinProvider")]
[CoClassId("94596C7E-3744-41CE-893E-BBF09122F76A")]
[COMCreatable]
CoClass SmartcardPinProvider
    [Default] Interface ICredentialProvider
End CoClass

[Description("CLSID_SmartcardReaderSelectionProvider")]
[CoClassId("1B283861-754F-4022-AD47-A5EAAA618894")]
[COMCreatable]
CoClass SmartcardReaderSelectionProvider
    [Default] Interface ICredentialProvider
End CoClass

[Description("CLSID_SmartcardWinRTProvider")]
[CoClassId("1EE7337F-85AC-45E2-A23C-37C753209769")]
[COMCreatable]
CoClass SmartcardWinRTProvider
    [Default] Interface ICredentialProvider
End CoClass

[Description("CLSID_GenericCredentialProvider")]
[CoClassId("25CBB996-92ED-457E-B28C-4774084BD562")]
[COMCreatable]
CoClass GenericCredentialProvider
    [Default] Interface ICredentialProvider
End CoClass

[Description("CLSID_RASProvider")]
[CoClassId("5537E283-B1E7-4EF8-9C6E-7AB0AFE5056D")]
[COMCreatable]
CoClass RASProvider
    [Default] Interface ICredentialProvider
End CoClass

[Description("CLSID_OnexCredentialProvider")]
[CoClassId("07AA0886-CC8D-4E19-A410-1C75AF686E62")]
[COMCreatable]
CoClass OnexCredentialProvider
    [Default] Interface ICredentialProvider
End CoClass

[Description("CLSID_OnexPlapSmartcardCredentialProvider")]
[CoClassId("33C86CD6-705F-4BA1-9ADB-67070B837775")]
[COMCreatable]
CoClass OnexPlapSmartcardCredentialProvider
    [Default] Interface ICredentialProvider
End CoClass

[Description("CLSID_VaultProvider")]
[CoClassId("503739D0-4C5E-4CFD-B3BA-D881334F0DF2")]
[COMCreatable]
CoClass VaultProvider
    [Default] Interface ICredentialProvider
End CoClass

[Description("CLSID_WinBioCredentialProvider")]
[CoClassId("BEC09223-B018-416D-A0AC-523971B639F5")]
[COMCreatable]
CoClass WinBioCredentialProvider
    [Default] Interface ICredentialProvider
End CoClass

[Description("CLSID_V1WinBioCredentialProvider")]
[CoClassId("AC3AC249-E820-4343-A65B-377AC634DC09")]
[COMCreatable]
CoClass V1WinBioCredentialProvider
    [Default] Interface ICredentialProvider
End CoClass



Module wdCredProv

Public Enum CREDENTIAL_USAGE_SCENARIO
    CREDUIWIN_GENERIC = &H00000001  ' Plain text username/password is being requested
    CREDUIWIN_CHECKBOX = &H00000002  ' Show the Save Credential checkbox
    CREDUIWIN_AUTHPACKAGE_ONLY = &H00000010  ' Only Cred Providers that support the input auth package should enumerate
    CREDUIWIN_IN_CRED_ONLY = &H00000020  ' Only the incoming cred for the specific auth package should be enumerated
    CREDUIWIN_ENUMERATE_ADMINS = &H00000100  ' Cred Providers should enumerate administrators only
    CREDUIWIN_ENUMERATE_CURRENT_USER = &H00000200  ' Only the incoming cred for the specific auth package should be enumerated
    CREDUIWIN_SECURE_PROMPT = &H00001000  ' The Credui prompt should be displayed on the secure desktop
    CREDUIWIN_PREPROMPTING = &H00002000  ' CredUI is invoked by SspiPromptForCredentials and the client is prompting before a prior handshake
    CREDUIWIN_PACK_32_WOW = &H10000000  ' Tell the credential provider it should be packing its Auth Blob 32 bit even though it is running 64 native
' #if (NTDDI_VERSION >= NTDDI_WIN10_RS1)
    CREDUIWIN_IGNORE_CLOUDAUTHORITY_NAME = &H00040000  ' Tell the credential provider it should not pack AAD authority name
' #endif
' #if (NTDDI_VERSION >= NTDDI_WIN10_RS5)
    CREDUIWIN_DOWNLEVEL_HELLO_AS_SMART_CARD = &H80000000  ' Force collected Hello credentials to be packed in a smart card auth buffer.
    CREDUIWIN_VALID_FLAGS = (CREDUIWIN_GENERIC Or CREDUIWIN_CHECKBOX Or CREDUIWIN_AUTHPACKAGE_ONLY Or CREDUIWIN_IN_CRED_ONLY Or CREDUIWIN_ENUMERATE_ADMINS Or CREDUIWIN_ENUMERATE_CURRENT_USER Or CREDUIWIN_SECURE_PROMPT Or CREDUIWIN_PREPROMPTING Or CREDUIWIN_PACK_32_WOW Or CREDUIWIN_IGNORE_CLOUDAUTHORITY_NAME Or CREDUIWIN_DOWNLEVEL_HELLO_AS_SMART_CARD)
    
End Enum
    
Public Enum CREDENTIAL_PROVIDER_USAGE_SCENARIO
    CPUS_INVALID = 0
    CPUS_LOGON
    CPUS_UNLOCK_WORKSTATION
    CPUS_CHANGE_PASSWORD
    CPUS_CREDUI
    CPUS_PLAP
End Enum

Public Enum CREDENTIAL_PROVIDER_FIELD_TYPE
    CPFT_INVALID = 0
    CPFT_LARGE_TEXT
    CPFT_SMALL_TEXT
    CPFT_COMMAND_LINK
    CPFT_EDIT_TEXT
    CPFT_PASSWORD_TEXT
    CPFT_TILE_IMAGE
    CPFT_CHECKBOX
    CPFT_COMBOBOX
    CPFT_SUBMIT_BUTTON
End Enum

Public Enum CREDENTIAL_PROVIDER_FIELD_STATE
    CPFS_HIDDEN = 0
    CPFS_DISPLAY_IN_SELECTED_TILE
    CPFS_DISPLAY_IN_DESELECTED_TILE
    CPFS_DISPLAY_IN_BOTH
End Enum

Public Enum CREDENTIAL_PROVIDER_FIELD_INTERACTIVE_STATE
    CPFIS_NONE = 0
    CPFIS_READONLY
    CPFIS_DISABLED
    CPFIS_FOCUSED
End Enum

Public Type CREDENTIAL_PROVIDER_FIELD_DESCRIPTOR
    dwFieldID As Long
    cpft As CREDENTIAL_PROVIDER_FIELD_TYPE
    pszLabel As LongPtr
    guidFieldType As UUID
End Type

Public Enum CREDENTIAL_PROVIDER_GET_SERIALIZATION_RESPONSE
    CPGSR_NO_CREDENTIAL_NOT_FINISHED = 0
    CPGSR_NO_CREDENTIAL_FINISHED
    CPGSR_RETURN_CREDENTIAL_FINISHED
    CPGSR_RETURN_NO_CREDENTIAL_FINISHED
End Enum

Public Enum CREDENTIAL_PROVIDER_STATUS_ICON
    CPSI_NONE = 0
    CPSI_ERROR
    CPSI_WARNING
    CPSI_SUCCESS
End Enum

Public Type CREDENTIAL_PROVIDER_CREDENTIAL_SERIALIZATION
    ulAuthenticationPackage As Long
    clsidCredentialProvider As UUID
    cbSerialization As Long
    rgbSerialization As LongPtr
End Type

Public Enum CREDENTIAL_PROVIDER_ACCOUNT_OPTIONS
    CPAO_NONE = &H00000000 ' Default
    CPAO_EMPTY_LOCAL = &H00000001 ' Need to enumerate the local empty tile
    CPAO_EMPTY_CONNECTED = &H00000002 ' Need to enumerate the connected empty tile
End Enum

Public Enum CREDENTIAL_PROVIDER_CREDENTIAL_FIELD_OPTIONS
    CPCFO_NONE = &H00000000 ' Default
    CPCFO_ENABLE_PASSWORD_REVEAL = &H00000001 ' Enable the "password reveal" button in the modern control
    CPCFO_IS_EMAIL_ADDRESS = &H00000002 ' This is a email address, so set the keyboard input scope appropriately
    CPCFO_ENABLE_TOUCH_KEYBOARD_AUTO_INVOKE = &H00000004 ' Touch keyboard will be invoked automatically on the provider. This should be only set on the CPFG_CREDENTIAL_PROVIDER_LOGO field
    CPCFO_NUMBERS_ONLY = &H00000008 ' The edit field will show numbers only. This should be only set on the CPFT_PASSWORD_TEXT field
    CPCFO_SHOW_ENGLISH_KEYBOARD = &H00000010 ' The edit field will show English keyboard.
End Enum
    
End Module