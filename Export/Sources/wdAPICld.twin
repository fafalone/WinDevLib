'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************


'WinDevLib::wdAPICld - Cloud Filter API
'cfapi.h, 100%

#If WINDEVLIB_LITE = 0 Then
#If WDL_QUALIFY Then
[MustBeQualified]
#End If
Module wdAPICld
    
    Public Const CF_EOF As LongLong = (-1)
    Public Const CF_REQUEST_KEY_DEFAULT  = (0)
    
    'Alias CF_CONNECTION_KEY As LongLong
    'Alias CF_REQUEST_KEY As LARGE_INTEGER
    'Alias CF_TRANSFER_KEY As LARGE_INTEGER
    Public Type CF_TRANSFER_KEY
        QuadPart As LongLong
    End Type
    Public Type CF_REQUEST_KEY
        QuadPart As LongLong
    End Type
    
    Public Const CF_PLACEHOLDER_MAX_FILE_IDENTITY_LENGTH = 4096
    
    Public Type CF_FS_METADATA
        BasicInfo As FILE_BASIC_INFO
        FileSize As LARGE_INTEGER
    End Type
        
    Public Enum CF_PLACEHOLDER_CREATE_FLAGS
        CF_PLACEHOLDER_CREATE_FLAG_NONE = &H00000000
        CF_PLACEHOLDER_CREATE_FLAG_DISABLE_ON_DEMAND_POPULATION = &H00000001
        CF_PLACEHOLDER_CREATE_FLAG_MARK_IN_SYNC = &H00000002
        CF_PLACEHOLDER_CREATE_FLAG_SUPERSEDE = &H00000004
        CF_PLACEHOLDER_CREATE_FLAG_ALWAYS_FULL = &H00000008
    End Enum
    
    Public Type CF_PLACEHOLDER_CREATE_INFO
        RelativeFileName As LongPtr
        FsMetadata As CF_FS_METADATA
        FileIdentity As LongPtr 'LPCVOID
        FileIdentityLength As Long
        Flags As CF_PLACEHOLDER_CREATE_FLAGS
        Result As Long
        CreateUsn As LongLong 'USN
    End Type
    
    Public Enum CF_SYNC_PROVIDER_STATUS
        CF_PROVIDER_STATUS_DISCONNECTED = &H00000000
        CF_PROVIDER_STATUS_IDLE = &H00000001
        CF_PROVIDER_STATUS_POPULATE_NAMESPACE = &H00000002
        CF_PROVIDER_STATUS_POPULATE_METADATA = &H00000004
        CF_PROVIDER_STATUS_POPULATE_CONTENT = &H00000008
        CF_PROVIDER_STATUS_SYNC_INCREMENTAL = &H00000010
        CF_PROVIDER_STATUS_SYNC_FULL = &H00000020
        CF_PROVIDER_STATUS_CONNECTIVITY_LOST = &H00000040
        CF_PROVIDER_STATUS_CLEAR_FLAGS = &H80000000
        CF_PROVIDER_STATUS_TERMINATED = &HC0000001
        CF_PROVIDER_STATUS_ERROR = &HC0000002
    End Enum
    
    Public Type CF_PROCESS_INFO
        StructSize As Long
        ProcessId As Long
        ImagePath As LongPtr 'PCWSTR
        PackageName As LongPtr 'PCWSTR
        ApplicationId As LongPtr 'PCWSTR
        CommandLine As LongPtr 'PCWSTR
        SessionId As Long
    End Type
    
    Public Type CF_PLATFORM_INFO
        BuildNumber As Long
        RevisionNumber As Long
        IntegrationNumber As Long
    End Type
    
    Public Declare PtrSafe Function CfGetPlatformInfo Lib "cldapi" (PlatformVersion As CF_PLATFORM_INFO) As Long
    
    Public Enum CF_REGISTER_FLAGS
        CF_REGISTER_FLAG_NONE = &H00000000
        CF_REGISTER_FLAG_UPDATE = &H00000001
        CF_REGISTER_FLAG_DISABLE_ON_DEMAND_POPULATION_ON_ROOT = &H00000002
        CF_REGISTER_FLAG_MARK_IN_SYNC_ON_ROOT = &H00000004
    End Enum
    
    Public Enum CF_HYDRATION_POLICY_PRIMARY
        CF_HYDRATION_POLICY_PARTIAL = 0
        CF_HYDRATION_POLICY_PROGRESSIVE = 1
        CF_HYDRATION_POLICY_FULL = 2
        CF_HYDRATION_POLICY_ALWAYS_FULL = 3
    End Enum
    
    Public Enum CF_HYDRATION_POLICY_MODIFIER
        CF_HYDRATION_POLICY_MODIFIER_NONE = &H0000
        CF_HYDRATION_POLICY_MODIFIER_VALIDATION_REQUIRED = &H0001
        CF_HYDRATION_POLICY_MODIFIER_STREAMING_ALLOWED = &H0002
        CF_HYDRATION_POLICY_MODIFIER_AUTO_DEHYDRATION_ALLOWED = &H0004
        CF_HYDRATION_POLICY_MODIFIER_ALLOW_FULL_RESTART_HYDRATION = &H0008
    End Enum
    
    Public Type CF_HYDRATION_POLICY
        /* [TypeHint(CF_HYDRATION_POLICY_PRIMARY)] */ Primary As Integer
        /* [TypeHint(CF_HYDRATION_POLICY_MODIFIER)] */ Modifier As Integer
    End Type
    
    Public Enum CF_POPULATION_POLICY_PRIMARY
        CF_POPULATION_POLICY_PARTIAL = 0
        CF_POPULATION_POLICY_FULL = 2
        CF_POPULATION_POLICY_ALWAYS_FULL = 3
    End Enum
    
    Public Enum CF_POPULATION_POLICY_MODIFIER
        CF_POPULATION_POLICY_MODIFIER_NONE = &H0000
    End Enum
    
    Public Type CF_POPULATION_POLICY
        /* [TypeHint(CF_POPULATION_POLICY_PRIMARY)] */ Primary As Integer
        /* [TypeHint(CF_POPULATION_POLICY_MODIFIER)] */ Modifier As Integer
    End Type
    
    Public Enum CF_PLACEHOLDER_MANAGEMENT_POLICY
        CF_PLACEHOLDER_MANAGEMENT_POLICY_DEFAULT = &H00000000
        CF_PLACEHOLDER_MANAGEMENT_POLICY_CREATE_UNRESTRICTED = &H00000001
        CF_PLACEHOLDER_MANAGEMENT_POLICY_CONVERT_TO_UNRESTRICTED = &H00000002
        CF_PLACEHOLDER_MANAGEMENT_POLICY_UPDATE_UNRESTRICTED = &H00000004
    End Enum
    
    Public Enum CF_INSYNC_POLICY
        CF_INSYNC_POLICY_NONE = &H00000000
        CF_INSYNC_POLICY_TRACK_FILE_CREATION_TIME = &H00000001
        CF_INSYNC_POLICY_TRACK_FILE_READONLY_ATTRIBUTE = &H00000002
        CF_INSYNC_POLICY_TRACK_FILE_HIDDEN_ATTRIBUTE = &H00000004
        CF_INSYNC_POLICY_TRACK_FILE_SYSTEM_ATTRIBUTE = &H00000008
        CF_INSYNC_POLICY_TRACK_DIRECTORY_CREATION_TIME = &H00000010
        CF_INSYNC_POLICY_TRACK_DIRECTORY_READONLY_ATTRIBUTE = &H00000020
        CF_INSYNC_POLICY_TRACK_DIRECTORY_HIDDEN_ATTRIBUTE = &H00000040
        CF_INSYNC_POLICY_TRACK_DIRECTORY_SYSTEM_ATTRIBUTE = &H00000080
        CF_INSYNC_POLICY_TRACK_FILE_LAST_WRITE_TIME = &H00000100
        CF_INSYNC_POLICY_TRACK_DIRECTORY_LAST_WRITE_TIME = &H00000200
        CF_INSYNC_POLICY_TRACK_FILE_ALL = &H0055550f
        CF_INSYNC_POLICY_TRACK_DIRECTORY_ALL = &H00aaaaf0
        CF_INSYNC_POLICY_TRACK_ALL = &H00ffffff
        CF_INSYNC_POLICY_PRESERVE_INSYNC_FOR_SYNC_ENGINE = &H80000000
    End Enum
    
    Public Enum CF_HARDLINK_POLICY
        CF_HARDLINK_POLICY_NONE = &H00000000
        CF_HARDLINK_POLICY_ALLOWED = &H00000001
    End Enum
    
    Public Type CF_SYNC_POLICIES
        StructSize As Long
        Hydration As CF_HYDRATION_POLICY
        Population As CF_POPULATION_POLICY
        InSync As CF_INSYNC_POLICY
        HardLink As CF_HARDLINK_POLICY
        PlaceholderManagement As CF_PLACEHOLDER_MANAGEMENT_POLICY
    End Type
    
    Public Type CF_SYNC_REGISTRATION
        StructSize As Long
        ProviderName As LongPtr
        ProviderVersion As LongPtr
        SyncRootIdentity As LongPtr 'LPCVOID
        SyncRootIdentityLength As Long
        FileIdentity As LongPtr 'LPCVOID
        FileIdentityLength As Long
        ProviderId As UUID
    End Type
    
    Public DeclareWide PtrSafe Function CfRegisterSyncRoot Lib "cldapi" (ByVal SynRootPath As String, Registration As CF_SYNC_REGISTRATION, Policies As CF_SYNC_POLICIES, ByVal RegisterFlags As CF_REGISTER_FLAGS) As Long
    Public DeclareWide PtrSafe Function CfRegisterSyncRoot Lib "cldapi" (ByVal SynRootPath As LongPtr, Registration As CF_SYNC_REGISTRATION, Policies As CF_SYNC_POLICIES, ByVal RegisterFlags As CF_REGISTER_FLAGS) As Long
    Public DeclareWide PtrSafe Function CfUnregisterSyncRoot Lib "cldapi" (ByVal SynRootPath As String) As Long
    Public DeclareWide PtrSafe Function CfUnregisterSyncRoot Lib "cldapi" (ByVal SynRootPath As LongPtr) As Long
    
    Public Const CF_MAX_PRIORITY_HINT = 15
    
    Public Type CF_CALLBACK_INFO
        StructSize As Long
        ConnectionKey As LongLong 'CF_CONNECTION_KEY
        CallbackContext As LongPtr
        VolumeGuidName As LongPtr 'PCWSTR
        VolumeDosName As LongPtr 'PCWSTR
        VolumeSerialNumber As Long
        SyncRootFileId As LARGE_INTEGER
        SyncRootIdentity As LongPtr 'LPCVOID
        SyncRootIdentityLength As Long
        FileId As LARGE_INTEGER
        FileSize As LARGE_INTEGER
        FileIdentity As LongPtr 'LPCVOID
        FileIdentityLength As Long
        NormalizedPath As LongPtr 'PCWSTR
        TransferKey As CF_TRANSFER_KEY
        PriorityHint As Byte
        CorrelationVector As LongPtr 'PCORRELATION_VECTOR
        ProcessInfo As LongPtr 'CF_PROCESS_INFO*
        RequestKey As CF_REQUEST_KEY
    End Type
    
    Public Enum CF_CALLBACK_CANCEL_FLAGS
        CF_CALLBACK_CANCEL_FLAG_NONE = &H00000000
        CF_CALLBACK_CANCEL_FLAG_IO_TIMEOUT = &H00000001
        CF_CALLBACK_CANCEL_FLAG_IO_ABORTED = &H00000002
    End Enum
    
    Public Enum CF_CALLBACK_FETCH_DATA_FLAGS
        CF_CALLBACK_FETCH_DATA_FLAG_NONE = &H00000000
        CF_CALLBACK_FETCH_DATA_FLAG_RECOVERY = &H00000001
        CF_CALLBACK_FETCH_DATA_FLAG_EXPLICIT_HYDRATION = &H00000002
    End Enum
    
    Public Enum CF_CALLBACK_VALIDATE_DATA_FLAGS
        CF_CALLBACK_VALIDATE_DATA_FLAG_NONE = &H00000000
        CF_CALLBACK_VALIDATE_DATA_FLAG_EXPLICIT_HYDRATION = &H00000002
    End Enum
    
    Public Enum CF_CALLBACK_FETCH_PLACEHOLDERS_FLAGS
        CF_CALLBACK_FETCH_PLACEHOLDERS_FLAG_NONE = &H00000000
    End Enum
    
    Public Enum CF_CALLBACK_OPEN_COMPLETION_FLAGS
        CF_CALLBACK_OPEN_COMPLETION_FLAG_NONE = &H00000000
        CF_CALLBACK_OPEN_COMPLETION_FLAG_PLACEHOLDER_UNKNOWN = &H00000001
        CF_CALLBACK_OPEN_COMPLETION_FLAG_PLACEHOLDER_UNSUPPORTED = &H00000002
    End Enum
    
    Public Enum CF_CALLBACK_CLOSE_COMPLETION_FLAGS
        CF_CALLBACK_CLOSE_COMPLETION_FLAG_NONE = &H00000000
        CF_CALLBACK_CLOSE_COMPLETION_FLAG_DELETED = &H00000001
    End Enum
    
    Public Enum CF_CALLBACK_DEHYDRATE_FLAGS
        CF_CALLBACK_DEHYDRATE_FLAG_NONE = &H00000000
        CF_CALLBACK_DEHYDRATE_FLAG_BACKGROUND = &H00000001
    End Enum
    
    Public Enum CF_CALLBACK_DEHYDRATE_COMPLETION_FLAGS
        CF_CALLBACK_DEHYDRATE_COMPLETION_FLAG_NONE = &H00000000
        CF_CALLBACK_DEHYDRATE_COMPLETION_FLAG_BACKGROUND = &H00000001
        CF_CALLBACK_DEHYDRATE_COMPLETION_FLAG_DEHYDRATED = &H00000002
    End Enum
    
    Public Enum CF_CALLBACK_DELETE_FLAGS
        CF_CALLBACK_DELETE_FLAG_NONE = &H00000000
        CF_CALLBACK_DELETE_FLAG_IS_DIRECTORY = &H00000001
        CF_CALLBACK_DELETE_FLAG_IS_UNDELETE = &H00000002
    End Enum
    
    Public Enum CF_CALLBACK_DELETE_COMPLETION_FLAGS
        CF_CALLBACK_DELETE_COMPLETION_FLAG_NONE = &H00000000
    End Enum
    
    Public Enum CF_CALLBACK_RENAME_FLAGS
        CF_CALLBACK_RENAME_FLAG_NONE = &H00000000
        CF_CALLBACK_RENAME_FLAG_IS_DIRECTORY = &H00000001
        CF_CALLBACK_RENAME_FLAG_SOURCE_IN_SCOPE = &H00000002
        CF_CALLBACK_RENAME_FLAG_TARGET_IN_SCOPE = &H00000004
    End Enum
    
    Public Enum CF_CALLBACK_RENAME_COMPLETION_FLAGS
        CF_CALLBACK_RENAME_COMPLETION_FLAG_NONE = &H00000000
    End Enum
    
    Public Enum CF_CALLBACK_DEHYDRATION_REASON
        CF_CALLBACK_DEHYDRATION_REASON_NONE
        CF_CALLBACK_DEHYDRATION_REASON_USER_MANUAL
        CF_CALLBACK_DEHYDRATION_REASON_SYSTEM_LOW_SPACE
        CF_CALLBACK_DEHYDRATION_REASON_SYSTEM_INACTIVITY
        CF_CALLBACK_DEHYDRATION_REASON_SYSTEM_OS_UPGRADE
    End Enum
    
    Public Type CF_CALLBACK_PARAMETERS
        ParamSize As Long
        pad As Long
        u(55) As Byte
        ' typedef struct CF_CALLBACK_PARAMETERS {

        ' ULONG ParamSize;

        ' union {

            ' struct {

                ' CF_CALLBACK_CANCEL_FLAGS Flags;

                ' union {

                    ' struct {
                        ' LARGE_INTEGER FileOffset;
                        ' LARGE_INTEGER Length;
                    ' } FetchData;

                ' } DUMMYUNIONNAME;

            ' } Cancel;

            ' struct {
                ' CF_CALLBACK_FETCH_DATA_FLAGS Flags;
                ' LARGE_INTEGER RequiredFileOffset;
                ' LARGE_INTEGER RequiredLength;
                ' LARGE_INTEGER OptionalFileOffset;
                ' LARGE_INTEGER OptionalLength;
                ' LARGE_INTEGER LastDehydrationTime;
                ' CF_CALLBACK_DEHYDRATION_REASON LastDehydrationReason;
            ' } FetchData;

            ' struct {
                ' CF_CALLBACK_VALIDATE_DATA_FLAGS Flags;
                ' LARGE_INTEGER RequiredFileOffset;
                ' LARGE_INTEGER RequiredLength;
            ' } ValidateData;

            ' struct {
                ' CF_CALLBACK_FETCH_PLACEHOLDERS_FLAGS Flags;
                ' PCWSTR Pattern;
            ' } FetchPlaceholders;

            ' struct {
                ' CF_CALLBACK_OPEN_COMPLETION_FLAGS Flags;
            ' } OpenCompletion;

            ' struct {
                ' CF_CALLBACK_CLOSE_COMPLETION_FLAGS Flags;
            ' } CloseCompletion;

            ' struct {
                ' CF_CALLBACK_DEHYDRATE_FLAGS Flags;
                ' CF_CALLBACK_DEHYDRATION_REASON Reason;
            ' } Dehydrate;

            ' struct {
                ' CF_CALLBACK_DEHYDRATE_COMPLETION_FLAGS Flags;
                ' CF_CALLBACK_DEHYDRATION_REASON Reason;
            ' } DehydrateCompletion;

            ' struct {
                ' CF_CALLBACK_DELETE_FLAGS Flags;
            ' } Delete;

            ' struct {
                ' CF_CALLBACK_DELETE_COMPLETION_FLAGS Flags;
            ' } DeleteCompletion;

            ' struct {
                ' CF_CALLBACK_RENAME_FLAGS Flags;
                ' PCWSTR TargetPath;
            ' } Rename;

            ' struct {
                ' CF_CALLBACK_RENAME_COMPLETION_FLAGS Flags;
                ' PCWSTR SourcePath;
            ' } RenameCompletion;

        ' } DUMMYUNIONNAME;

    ' } CF_CALLBACK_PARAMETERS;
    End Type
    
    ' typedef
    ' VOID
    ' (CALLBACK *CF_CALLBACK) (
        ' _In_ CONST CF_CALLBACK_INFO *CallbackInfo,
        ' _In_ CONST CF_CALLBACK_PARAMETERS *CallbackParameters
        ' );
        
    Public Enum CF_CALLBACK_TYPE
        CF_CALLBACK_TYPE_FETCH_DATA
        CF_CALLBACK_TYPE_VALIDATE_DATA
        CF_CALLBACK_TYPE_CANCEL_FETCH_DATA
        CF_CALLBACK_TYPE_FETCH_PLACEHOLDERS
        CF_CALLBACK_TYPE_CANCEL_FETCH_PLACEHOLDERS
        CF_CALLBACK_TYPE_NOTIFY_FILE_OPEN_COMPLETION
        CF_CALLBACK_TYPE_NOTIFY_FILE_CLOSE_COMPLETION
        CF_CALLBACK_TYPE_NOTIFY_DEHYDRATE
        CF_CALLBACK_TYPE_NOTIFY_DEHYDRATE_COMPLETION
        CF_CALLBACK_TYPE_NOTIFY_DELETE
        CF_CALLBACK_TYPE_NOTIFY_DELETE_COMPLETION
        CF_CALLBACK_TYPE_NOTIFY_RENAME
        CF_CALLBACK_TYPE_NOTIFY_RENAME_COMPLETION
        CF_CALLBACK_TYPE_NONE = &Hffffffff
    End Enum
        
    Public Type CF_CALLBACK_REGISTRATION
        Type As CF_CALLBACK_TYPE
        Callback As LongPtr 'CF_CALLBACK
    End Type
    
    ' #define CF_CALLBACK_REGISTRATION_END {CF_CALLBACK_TYPE_NONE, NULL}
    
    Public Enum CF_CONNECT_FLAGS
        CF_CONNECT_FLAG_NONE = &H00000000
        CF_CONNECT_FLAG_REQUIRE_PROCESS_INFO = &H00000002
        CF_CONNECT_FLAG_REQUIRE_FULL_FILE_PATH = &H00000004
        CF_CONNECT_FLAG_BLOCK_SELF_IMPLICIT_HYDRATION = &H00000008
    End Enum
    
    Public DeclareWide PtrSafe Function CfConnectSyncRoot Lib "cldapi" (ByVal SynRootPath As String, CallbackTable As CF_CALLBACK_REGISTRATION, ByVal CallbackContext As LongPtr, ByVal ConnectFlags As CF_CONNECT_FLAGS, ConnectionKey As LongLong) As Long
    Public DeclareWide PtrSafe Function CfConnectSyncRoot Lib "cldapi" (ByVal SynRootPath As LongPtr, CallbackTable As CF_CALLBACK_REGISTRATION, ByVal CallbackContext As LongPtr, ByVal ConnectFlags As CF_CONNECT_FLAGS, ConnectionKey As LongLong) As Long
    Public Declare PtrSafe Function CfDisconnectSyncRoot Lib "cldapi" (ByVal ConnectionKey As LongLong) As Long
    Public Declare PtrSafe Function CfGetTransferKey Lib "cldapi" (ByVal FileHandle As LongPtr, TransferKey As CF_TRANSFER_KEY) As Long
    Public Declare PtrSafe Sub CfReleaseTransferKey Lib "cldapi" (ByVal FileHandle As LongPtr, TransferKey As CF_TRANSFER_KEY)
      
    Public Enum CF_OPERATION_TYPE
        CF_OPERATION_TYPE_TRANSFER_DATA
        CF_OPERATION_TYPE_RETRIEVE_DATA
        CF_OPERATION_TYPE_ACK_DATA
        CF_OPERATION_TYPE_RESTART_HYDRATION
        CF_OPERATION_TYPE_TRANSFER_PLACEHOLDERS
        CF_OPERATION_TYPE_ACK_DEHYDRATE
        CF_OPERATION_TYPE_ACK_DELETE
        CF_OPERATION_TYPE_ACK_RENAME
    End Enum
    
    Public Type CF_SYNC_STATUS
        StructSize As Long
        Code As Long
        DescriptionOffset As Long
        DescriptionLength As Long
        DeviceIdOffset As Long
        DeviceIdLength As Long
    End Type
    
    Public Type CF_OPERATION_INFO
        StructSize As Long
        Type As CF_OPERATION_TYPE
        ConnectionKey As LongLong 'CF_CONNECTION_KEY
        TransferKey As CF_TRANSFER_KEY
        CorrelationVector As LongPtr 'CONST CORRELATION_VECTOR*
        SyncStatus As LongPtr 'CONST CF_SYNC_STATUS*
        RequestKey As CF_REQUEST_KEY
    End Type
    
    Public Enum CF_OPERATION_TRANSFER_DATA_FLAGS
        CF_OPERATION_TRANSFER_DATA_FLAG_NONE = &H00000000
    End Enum
    
    Public Enum CF_OPERATION_RETRIEVE_DATA_FLAGS
        CF_OPERATION_RETRIEVE_DATA_FLAG_NONE = &H00000000
    End Enum
    
    Public Enum CF_OPERATION_ACK_DATA_FLAGS
        CF_OPERATION_ACK_DATA_FLAG_NONE = &H00000000
    End Enum
    
    Public Enum CF_OPERATION_RESTART_HYDRATION_FLAGS
        CF_OPERATION_RESTART_HYDRATION_FLAG_NONE = &H00000000
        CF_OPERATION_RESTART_HYDRATION_FLAG_MARK_IN_SYNC = &H00000001
    End Enum
    
    Public Enum CF_OPERATION_TRANSFER_PLACEHOLDERS_FLAGS
        CF_OPERATION_TRANSFER_PLACEHOLDERS_FLAG_NONE = &H00000000
        CF_OPERATION_TRANSFER_PLACEHOLDERS_FLAG_STOP_ON_ERROR = &H00000001
        CF_OPERATION_TRANSFER_PLACEHOLDERS_FLAG_DISABLE_ON_DEMAND_POPULATION = &H00000002
    End Enum
    
    Public Enum CF_OPERATION_ACK_DEHYDRATE_FLAGS
        CF_OPERATION_ACK_DEHYDRATE_FLAG_NONE = &H00000000
    End Enum
    
    Public Enum CF_OPERATION_ACK_RENAME_FLAGS
        CF_OPERATION_ACK_RENAME_FLAG_NONE = &H00000000
    End Enum
    
    Public Enum CF_OPERATION_ACK_DELETE_FLAGS
        CF_OPERATION_ACK_DELETE_FLAG_NONE = &H00000000
    End Enum
    
    Public Type CF_OPERATION_PARAMETERS
        ParamSize As Long
        pad As Long
        #If Win64 Then
        u(39) As Byte
        #Else
        u(31) As Byte
        #End If
        ' typedef struct CF_OPERATION_PARAMETERS {

        ' ULONG ParamSize;

        ' union {

            ' struct {
                ' CF_OPERATION_TRANSFER_DATA_FLAGS Flags;
                ' NTSTATUS CompletionStatus;
                ' _Field_size_bytes_( Length.QuadPart ) LPCVOID Buffer;
                ' LARGE_INTEGER Offset;
                ' LARGE_INTEGER Length;
            ' } TransferData;

            ' struct {
                ' CF_OPERATION_RETRIEVE_DATA_FLAGS Flags;
                ' _Field_size_bytes_( Length.QuadPart ) LPVOID Buffer;
                ' LARGE_INTEGER Offset;
                ' LARGE_INTEGER Length;
                ' LARGE_INTEGER ReturnedLength;
            ' } RetrieveData;

            ' struct {
                ' CF_OPERATION_ACK_DATA_FLAGS Flags;
                ' NTSTATUS CompletionStatus;
                ' LARGE_INTEGER Offset;
                ' LARGE_INTEGER Length;
            ' } AckData;

            ' struct {
                ' CF_OPERATION_RESTART_HYDRATION_FLAGS Flags;
                ' CONST CF_FS_METADATA* FsMetadata;
                ' _Field_size_bytes_( FileIdentityLength ) LPCVOID FileIdentity;
                ' DWORD FileIdentityLength;
            ' } RestartHydration;

            ' struct {
                ' CF_OPERATION_TRANSFER_PLACEHOLDERS_FLAGS Flags;
                ' NTSTATUS CompletionStatus;
                ' LARGE_INTEGER PlaceholderTotalCount;
                ' CF_PLACEHOLDER_CREATE_INFO* PlaceholderArray;
                ' DWORD PlaceholderCount;
                ' DWORD EntriesProcessed;
            ' } TransferPlaceholders;

            ' struct {
                ' CF_OPERATION_ACK_DEHYDRATE_FLAGS Flags;
                ' NTSTATUS CompletionStatus;
                ' _Field_size_bytes_( FileIdentityLength ) LPCVOID FileIdentity;
                ' DWORD FileIdentityLength;
            ' } AckDehydrate;

            ' struct {
                ' CF_OPERATION_ACK_RENAME_FLAGS Flags;
                ' NTSTATUS CompletionStatus;
            ' } AckRename;

            ' struct {
                ' CF_OPERATION_ACK_DELETE_FLAGS Flags;
                ' NTSTATUS CompletionStatus;
            ' } AckDelete;

        ' } DUMMYUNIONNAME;

    ' } CF_OPERATION_PARAMETERS;
    End Type
        
    Public Declare PtrSafe Function CfExecute Lib "cldapi" (OpInfo As CF_OPERATION_INFO, OpParams As CF_OPERATION_PARAMETERS) As Long
    Public Declare PtrSafe Function CfUpdateSyncProviderStatus Lib "cldapi" (ByVal ConnectionKey As LongLong, ByVal ProviderStatus As CF_SYNC_PROVIDER_STATUS) As Long
    Public Declare PtrSafe Function CfQuerySyncProviderStatus Lib "cldapi" (ByVal ConnectionKey As LongLong, ProviderStatus As CF_SYNC_PROVIDER_STATUS) As Long
    Public DeclareWide PtrSafe Function CfReportSyncStatus Lib "cldapi" (ByVal SyncRootPath As String, SyncStatus As CF_SYNC_STATUS) As Long
    Public DeclareWide PtrSafe Function CfReportSyncStatus Lib "cldapi" (ByVal SyncRootPath As LongPtr, SyncStatus As CF_SYNC_STATUS) As Long
    
    Public Enum CF_CREATE_FLAGS
        CF_CREATE_FLAG_NONE = &H00000000
        CF_CREATE_FLAG_STOP_ON_ERROR = &H00000001
    End Enum
    
    Public DeclareWide PtrSafe Function CfCreatePlaceholders Lib "cldapi" (ByVal BaseDirectoryPath As String, PlaceholderArray As CF_PLACEHOLDER_CREATE_INFO, ByVal PlaceholderCount As Long, ByVal CreateFlags As CF_CREATE_FLAGS, Optional EntriesProcessed As Long) As Long
    Public DeclareWide PtrSafe Function CfCreatePlaceholders Lib "cldapi" (ByVal BaseDirectoryPath As LongPtr, PlaceholderArray As CF_PLACEHOLDER_CREATE_INFO, ByVal PlaceholderCount As Long, ByVal CreateFlags As CF_CREATE_FLAGS, Optional EntriesProcessed As Long) As Long
       
    Public Enum CF_OPEN_FILE_FLAGS
        CF_OPEN_FILE_FLAG_NONE = &H00000000
        CF_OPEN_FILE_FLAG_EXCLUSIVE = &H00000001
        CF_OPEN_FILE_FLAG_WRITE_ACCESS = &H00000002
        CF_OPEN_FILE_FLAG_DELETE_ACCESS = &H00000004
        CF_OPEN_FILE_FLAG_FOREGROUND = &H00000008
    End Enum
    
    Public DeclareWide PtrSafe Function CfOpenFileWithOplock Lib "cldapi" (ByVal FilePath As String, ByVal Flags As CF_OPEN_FILE_FLAGS, ProtectedHandle As LongPtr) As Long
    Public DeclareWide PtrSafe Function CfOpenFileWithOplock Lib "cldapi" (ByVal FilePath As LongPtr, ByVal Flags As CF_OPEN_FILE_FLAGS, ProtectedHandle As LongPtr) As Long
    Public Declare PtrSafe Function CfReferenceProtectedHandle Lib "cldapi" (ByVal ProtectedHandle As LongPtr) As Byte
    Public Declare PtrSafe Function CfGetWin32HandleFromProtectedHandle Lib "cldapi" (ByVal ProtectedHandle As LongPtr) As LongPtr
    Public Declare PtrSafe Sub CfReleaseProtectedHandle Lib "cldapi" (ByVal ProtectedHandle As LongPtr)
    Public Declare PtrSafe Sub CfCloseHandle Lib "cldapi" (ByVal FileHandle As LongPtr)
    
    Public Type CF_FILE_RANGE
        StartingOffset As LARGE_INTEGER
        Length As LARGE_INTEGER
    End Type
    
    Public Enum CF_CONVERT_FLAGS
        CF_CONVERT_FLAG_NONE = &H00000000
        CF_CONVERT_FLAG_MARK_IN_SYNC = &H00000001
        CF_CONVERT_FLAG_DEHYDRATE = &H00000002
        CF_CONVERT_FLAG_ENABLE_ON_DEMAND_POPULATION = &H00000004
        CF_CONVERT_FLAG_ALWAYS_FULL = &H00000008
        CF_CONVERT_FLAG_FORCE_CONVERT_TO_CLOUD_FILE = &H00000010
    End Enum
    
    Public Declare PtrSafe Function CfConvertToPlaceholder Lib "cldapi" (ByVal FileHandle As LongPtr, FileIdentity As Any, ByVal FileIdentityLength As Long, ByVal ConvertFlags As CF_CONVERT_FLAGS, ConvertUsn As LongLong, Overlapped As OVERLAPPED) As Long
    
    Public Enum CF_UPDATE_FLAGS
        CF_UPDATE_FLAG_NONE = &H00000000
        CF_UPDATE_FLAG_VERIFY_IN_SYNC = &H00000001
        CF_UPDATE_FLAG_MARK_IN_SYNC = &H00000002
        CF_UPDATE_FLAG_DEHYDRATE = &H00000004
        CF_UPDATE_FLAG_ENABLE_ON_DEMAND_POPULATION = &H00000008
        CF_UPDATE_FLAG_DISABLE_ON_DEMAND_POPULATION = &H00000010
        CF_UPDATE_FLAG_REMOVE_FILE_IDENTITY = &H00000020
        CF_UPDATE_FLAG_CLEAR_IN_SYNC = &H00000040
        CF_UPDATE_FLAG_REMOVE_PROPERTY = &H00000080
        CF_UPDATE_FLAG_PASSTHROUGH_FS_METADATA = &H00000100
        CF_UPDATE_FLAG_ALWAYS_FULL = &H00000200
        CF_UPDATE_FLAG_ALLOW_PARTIAL = &H00000400
    End Enum
    
    Public Declare PtrSafe Function CfUpdatePlaceholder Lib "cldapi" (ByVal FileHandle As LongPtr, FsMetadata As CF_FS_METADATA, FileIdentity As Any, ByVal FileIdentityLength As Long, DehydrateRangeArray As CF_FILE_RANGE, ByVal DehydrateRangeCount As Long, ByVal UpdateFlags As CF_UPDATE_FLAGS, UpdateUsn As LongLong, Overlapped As OVERLAPPED) As Long
    
    Public Enum CF_REVERT_FLAGS
        CF_REVERT_FLAG_NONE = &H00000000
    End Enum
    
    Public Declare PtrSafe Function CfRevertPlaceholder Lib "cldapi" (ByVal FileHandle As LongPtr, ByVal RevertFlags As CF_REVERT_FLAGS, Overlapped As OVERLAPPED) As Long
    
    Public Enum CF_HYDRATE_FLAGS
        CF_HYDRATE_FLAG_NONE = &H00000000
    End Enum
    
    [Description("Note: This function expects a ByVal LARGE_INTEGER; in its place you can just pass the .QuadPart member.")]
    Public Declare PtrSafe Function CfHydratePlaceholder Lib "cldapi" (ByVal FileHandle As LongPtr, ByVal StartingOffset As LongLong, ByVal Length As LongLong, ByVal HydrateFlags As CF_HYDRATE_FLAGS, Overlapped As OVERLAPPED) As Long
    
    Public Enum CF_DEHYDRATE_FLAGS
        CF_DEHYDRATE_FLAG_NONE = &H00000000
        CF_DEHYDRATE_FLAG_BACKGROUND = &H00000001
    End Enum
    
    [Description("Note: This function expects a ByVal LARGE_INTEGER; in its place you can just pass the .QuadPart member.")]
    Public Declare PtrSafe Function CfDehydratePlaceholder Lib "cldapi" (ByVal FileHandle As LongPtr, ByVal StartingOffset As LongLong, ByVal Length As LongLong, ByVal DehydrateFlags As CF_DEHYDRATE_FLAGS, Overlapped As OVERLAPPED) As Long
        
    Public Enum CF_PIN_STATE
        CF_PIN_STATE_UNSPECIFIED = 0
        CF_PIN_STATE_PINNED = 1
        CF_PIN_STATE_UNPINNED = 2
        CF_PIN_STATE_EXCLUDED = 3
        CF_PIN_STATE_INHERIT = 4 ' set only
    End Enum
    
    Public Enum CF_SET_PIN_FLAGS
        CF_SET_PIN_FLAG_NONE = &H00000000
        CF_SET_PIN_FLAG_RECURSE = &H00000001
        CF_SET_PIN_FLAG_RECURSE_ONLY = &H00000002
        CF_SET_PIN_FLAG_RECURSE_STOP_ON_ERROR = &H00000004
    End Enum
    
    Public Declare PtrSafe Function CfSetPinState Lib "cldapi" (ByVal FileHandle As LongPtr, ByVal PinState As CF_PIN_STATE, ByVal PinFlags As CF_SET_PIN_FLAGS, Overlapped As OVERLAPPED) As Long
    
    Public Enum CF_IN_SYNC_STATE
        CF_IN_SYNC_STATE_NOT_IN_SYNC = 0
        CF_IN_SYNC_STATE_IN_SYNC = 1
    End Enum
    
    Public Enum CF_SET_IN_SYNC_FLAGS
        CF_SET_IN_SYNC_FLAG_NONE = &H00000000
    End Enum
    
    Public Declare PtrSafe Function CfSetInSyncState Lib "cldapi" (ByVal FileHandle As LongPtr, ByVal InSyncState As CF_IN_SYNC_STATE, ByVal InSyncFlags As CF_SET_IN_SYNC_FLAGS, Optional InSyncUsn As LongLong) As Long
    Public Declare PtrSafe Function CfSetCorrelationVector Lib "cldapi" (ByVal FileHandle As LongPtr, CorrelationVector As CORRELATION_VECTOR) As Long
    Public Declare PtrSafe Function CfGetCorrelationVector Lib "cldapi" (ByVal FileHandle As LongPtr, CorrelationVector As CORRELATION_VECTOR) As Long
       
    Public Enum CF_PLACEHOLDER_STATE
        CF_PLACEHOLDER_STATE_NO_STATES = &H00000000
        CF_PLACEHOLDER_STATE_PLACEHOLDER = &H00000001
        CF_PLACEHOLDER_STATE_SYNC_ROOT = &H00000002
        CF_PLACEHOLDER_STATE_ESSENTIAL_PROP_PRESENT = &H00000004
        CF_PLACEHOLDER_STATE_IN_SYNC = &H00000008
        CF_PLACEHOLDER_STATE_PARTIAL = &H00000010
        CF_PLACEHOLDER_STATE_PARTIALLY_ON_DISK = &H00000020
        CF_PLACEHOLDER_STATE_INVALID = &Hffffffff
    End Enum
    
    Public Declare PtrSafe Function CfGetPlaceholderStateFromAttributeTag Lib "cldapi" (ByVal FileAttributes As Long, ByVal ReparseTag As Long) As CF_PLACEHOLDER_STATE
    Public Declare PtrSafe Function CfGetPlaceholderStateFromFileInfo Lib "cldapi" (InfoBuffer As Any, ByVal InfoClass As FILE_INFO_BY_HANDLE_CLASS) As CF_PLACEHOLDER_STATE
    Public Declare PtrSafe Function CfGetPlaceholderStateFromFindData Lib "cldapi" (FindData As WIN32_FIND_DATA) As CF_PLACEHOLDER_STATE
    
    Public Enum CF_PLACEHOLDER_INFO_CLASS
        CF_PLACEHOLDER_INFO_BASIC = 0
        CF_PLACEHOLDER_INFO_STANDARD = 1
    End Enum
    
    [Description("⚠️ **WARNING:** This uses a SAFEARRAY in place of a C-style array; copy the FileIdentity separate after redimming to correct size. Alternative custom struct: CF_PLACEHOLDER_BASIC_INFO_Buf with a 4096 byte buffer.")]
    Public Type CF_PLACEHOLDER_BASIC_INFO
        PinState As CF_PIN_STATE
        InSyncState As CF_IN_SYNC_STATE
        FileId As LARGE_INTEGER
        SyncRootFileId As LARGE_INTEGER
        FileIdentityLength As Long
        FileIdentity() As Byte
    End Type
    Public Type CF_PLACEHOLDER_BASIC_INFO_Buf
        PinState As CF_PIN_STATE
        InSyncState As CF_IN_SYNC_STATE
        FileId As LARGE_INTEGER
        SyncRootFileId As LARGE_INTEGER
        FileIdentityLength As Long
        FileIdentity(0 To 4095) As Byte
    End Type
    
    [Description("⚠️ **WARNING:** This uses a SAFEARRAY in place of a C-style array; copy the FileIdentity separate after redimming to correct size. Alternative custom struct: CF_PLACEHOLDER_STANDARD_INFO_Buf with a 4096 byte buffer.")]
    Public Type CF_PLACEHOLDER_STANDARD_INFO
        OnDiskDataSize As LARGE_INTEGER
        ValidatedDataSize As LARGE_INTEGER
        ModifiedDataSize As LARGE_INTEGER
        PropertiesSize As LARGE_INTEGER
        PinState As CF_PIN_STATE
        InSyncState As CF_IN_SYNC_STATE
        FileId As LARGE_INTEGER
        SyncRootFileId As LARGE_INTEGER
        FileIdentityLength As Long
        FileIdentity() As Byte
    End Type
    
    Public Type CF_PLACEHOLDER_STANDARD_INFO_Buf
        OnDiskDataSize As LARGE_INTEGER
        ValidatedDataSize As LARGE_INTEGER
        ModifiedDataSize As LARGE_INTEGER
        PropertiesSize As LARGE_INTEGER
        PinState As CF_PIN_STATE
        InSyncState As CF_IN_SYNC_STATE
        FileId As LARGE_INTEGER
        SyncRootFileId As LARGE_INTEGER
        FileIdentityLength As Long
        FileIdentity(0 To 4095) As Byte
    End Type
    
    Public Declare PtrSafe Function CfGetPlaceholderInfo Lib "cldapi" (ByVal FileHandle As LongPtr, ByVal InfoClass As CF_PLACEHOLDER_INFO_CLASS, InfoBuffer As Any, ByVal InfoBufferLength As Long, Optional ReturnedLength As Long) As Long
    
    Public Enum CF_SYNC_ROOT_INFO_CLASS
        CF_SYNC_ROOT_INFO_BASIC = 0
        CF_SYNC_ROOT_INFO_STANDARD = 1
        CF_SYNC_ROOT_INFO_PROVIDER = 2
    End Enum
    
    Public Type CF_SYNC_ROOT_BASIC_INFO
        SyncRootFileId As LARGE_INTEGER
    End Type
    
    Public Const CF_MAX_PROVIDER_NAME_LENGTH  = 255
    Public Const CF_MAX_PROVIDER_VERSION_LENGTH  = 255
    Public Type CF_SYNC_ROOT_PROVIDER_INFO
        ProviderStatus As CF_SYNC_PROVIDER_STATUS
        ProviderName(0 To CF_MAX_PROVIDER_NAME_LENGTH) As Integer
        ProviderVersion(0 To CF_MAX_PROVIDER_VERSION_LENGTH) As Integer
    End Type
    
    [Description("⚠️ **WARNING:** This uses a SAFEARRAY in place of a C-style array; copy the SyncRootIdentity separate after redimming to correct size. Alternative custom struct: CF_SYNC_ROOT_STANDARD_INFO_Buf with a 4096 byte buffer.")]
    Public Type CF_SYNC_ROOT_STANDARD_INFO
        SyncRootFileId As LARGE_INTEGER
        HydrationPolicy As CF_HYDRATION_POLICY
        PopulationPolicy As CF_POPULATION_POLICY
        InSyncPolicy As CF_INSYNC_POLICY
        HardLinkPolicy As CF_HARDLINK_POLICY
        ProviderStatus As CF_SYNC_PROVIDER_STATUS
        ProviderName(0 To (CF_MAX_PROVIDER_NAME_LENGTH - 1)) As Integer
        ProviderVersion(0 To (CF_MAX_PROVIDER_VERSION_LENGTH - 1)) As Integer
        SyncRootIdentityLength As Long
        SyncRootIdentity() As Byte
    End Type
    
    Public Type CF_SYNC_ROOT_STANDARD_INFO_Buf
        SyncRootFileId As LARGE_INTEGER
        HydrationPolicy As CF_HYDRATION_POLICY
        PopulationPolicy As CF_POPULATION_POLICY
        InSyncPolicy As CF_INSYNC_POLICY
        HardLinkPolicy As CF_HARDLINK_POLICY
        ProviderStatus As CF_SYNC_PROVIDER_STATUS
        ProviderName(0 To (CF_MAX_PROVIDER_NAME_LENGTH - 1)) As Integer
        ProviderVersion(0 To (CF_MAX_PROVIDER_VERSION_LENGTH - 1)) As Integer
        SyncRootIdentityLength As Long
        SyncRootIdentity(0 To 4095) As Byte
    End Type
    
    Public DeclareWide PtrSafe Function CfGetSyncRootInfoByPath Lib "cldapi" (ByVal FilePath As String, ByVal InfoClass As CF_SYNC_ROOT_INFO_CLASS, InfoBuffer As Any, ByVal InfoBufferLength As Long, Optional ReturnedLength As Long) As Long
    Public DeclareWide PtrSafe Function CfGetSyncRootInfoByPath Lib "cldapi" (ByVal FilePath As LongPtr, ByVal InfoClass As CF_SYNC_ROOT_INFO_CLASS, InfoBuffer As Any, ByVal InfoBufferLength As Long, Optional ReturnedLength As Long) As Long
    Public Declare PtrSafe Function CfGetSyncRootInfoByHandle Lib "cldapi" (ByVal FileHandle As LongPtr, ByVal InfoClass As CF_SYNC_ROOT_INFO_CLASS, InfoBuffer As Any, ByVal InfoBufferLength As Long, Optional ReturnedLength As Long) As Long
           
    Public Enum CF_PLACEHOLDER_RANGE_INFO_CLASS
        CF_PLACEHOLDER_RANGE_INFO_ONDISK = 1
        CF_PLACEHOLDER_RANGE_INFO_VALIDATED = 2
        CF_PLACEHOLDER_RANGE_INFO_MODIFIED = 3
    End Enum
    
    [Description("Note: This function expects a ByVal LARGE_INTEGER; in its place you can just pass the .QuadPart member.")]
    Public Declare PtrSafe Function CfGetPlaceholderRangeInfo Lib "cldapi" (ByVal FileHandle As LongPtr, ByVal InfoClass As CF_PLACEHOLDER_RANGE_INFO_CLASS, ByVal StartingOffset As LongLong, ByVal Length As LongLong, InfoBuffer As Any, ByVal InfoBufferLength As Long, Optional ReturnedLength As Long) As Long
    [Description("Note: This function expects a ByVal LARGE_INTEGER; in its place you can just pass the .QuadPart member.")]
    Public Declare PtrSafe Function CfGetPlaceholderRangeInfoForHydration Lib "cldapi" (ByVal ConnectionKey As LongLong, ByVal TransferKey As LongLong, ByVal FileId As LongLong, ByVal InfoClass As CF_PLACEHOLDER_RANGE_INFO_CLASS, ByVal StartingOffset As LongLong, ByVal RangeLength As LongLong, InfoBuffer As Any, ByVal InfoBufferSize As Long, Optional InfoBufferWritten As Long) As Long
    
    [Description("Note: This function expects a ByVal LARGE_INTEGER; in its place you can just pass the .QuadPart member.")]
    Public Declare PtrSafe Function CfReportProviderProgress Lib "cldapi" (ByVal ConnectionKey As LongLong, ByVal TransferKey As LongLong, ByVal ProviderProgressTotal As LongLong, ByVal ProviderProgressCompleted As LongLong) As Long
    [Description("Note: This function expects a ByVal LARGE_INTEGER; in its place you can just pass the .QuadPart member.")]
    Public Declare PtrSafe Function CfReportProviderProgress2 Lib "cldapi" (ByVal ConnectionKey As LongLong, ByVal TransferKey As LongLong, ByVal RequestKey As LongLong, ByVal ProviderProgressTotal As LongLong, ByVal ProviderProgressCompleted As LongLong, ByVal TargetSessionId As Long) As Long
        
    
End Module
#End If