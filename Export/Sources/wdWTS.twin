'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'wdWTD.twin - Windows Terminal Services

#If WINDEVLIB_LITE = 0 Then
Module wdWTS

Public Declare PtrSafe Function WTSGetActiveConsoleSessionId Lib "kernel32" () As Long
Public Declare PtrSafe Function WTSGetServiceSessionId Lib "kernel32" () As Long
Public Declare PtrSafe Function WTSIsServerContainer Lib "kernel32" () As Byte
    
'WtsApi32.h
Public Const WTS_CURRENT_SERVER  = 0 ' ((HANDLE)NULL)
Public Const WTS_CURRENT_SERVER_HANDLE  = 0 '((HANDLE)NULL)
Public Const WTS_CURRENT_SERVER_NAME  = 0 '(NULL)
Public Const WTS_CURRENT_SESSION  = (-1)
Public Const WTS_ANY_SESSION  = (-2)

' Private Const USERNAME_LENGTH  = 20
' Private Const CLIENTNAME_LENGTH  = 20
' Private Const CLIENTADDRESS_LENGTH  = 30
    
    Public Enum WTSShutdownFlags
        WTS_WSD_LOGOFF = &H00000001  ' log off all users except
    '  current user; deletes
    '  WinStations (a reboot is
    '  required to recreate the
    '  WinStations)
        WTS_WSD_SHUTDOWN = &H00000002  ' shutdown system
        WTS_WSD_REBOOT = &H00000004  ' shutdown and reboot
        WTS_WSD_POWEROFF = &H00000008  ' shutdown and power off (on
    '  machines that support power
    '  off through software)
        WTS_WSD_FASTREBOOT = &H00000010  ' reboot without logging users
    '  off or shutting down
    End Enum
    
    Public Const MAX_ELAPSED_TIME_LENGTH  = 15
    Public Const MAX_DATE_TIME_LENGTH  = 56
    Public Const WINSTATIONNAME_LENGTH  = 32
    Public Const DOMAIN_LENGTH  = 17
    Public Const WTS_DRIVE_LENGTH  = 3
    Public Const WTS_LISTENER_NAME_LENGTH  = 32
    Public Const WTS_COMMENT_LENGTH  = 60
    
    Public Enum WTSCreateListenerFlags
        WTS_LISTENER_CREATE = &H00000001
        WTS_LISTENER_UPDATE = &H00000010
    End Enum
    
    Public Enum WTSListenerAccessRights
        WTS_SECURITY_QUERY_INFORMATION = &H00000001
        WTS_SECURITY_SET_INFORMATION = &H00000002
        WTS_SECURITY_RESET = &H00000004
        WTS_SECURITY_VIRTUAL_CHANNELS = &H00000008
        WTS_SECURITY_REMOTE_CONTROL = &H00000010
        WTS_SECURITY_LOGON = &H00000020
        WTS_SECURITY_LOGOFF = &H00000040
        WTS_SECURITY_MESSAGE = &H00000080
        WTS_SECURITY_CONNECT = &H00000100
        WTS_SECURITY_DISCONNECT = &H00000200
        WTS_SECURITY_GUEST_ACCESS = (WTS_SECURITY_LOGON)
        WTS_SECURITY_CURRENT_GUEST_ACCESS = (WTS_SECURITY_VIRTUAL_CHANNELS Or WTS_SECURITY_LOGOFF)
        WTS_SECURITY_USER_ACCESS = (WTS_SECURITY_CURRENT_GUEST_ACCESS Or WTS_SECURITY_QUERY_INFORMATION Or WTS_SECURITY_CONNECT)
        WTS_SECURITY_CURRENT_USER_ACCESS = (WTS_SECURITY_SET_INFORMATION Or WTS_SECURITY_RESET Or WTS_SECURITY_VIRTUAL_CHANNELS Or WTS_SECURITY_LOGOFF Or WTS_SECURITY_DISCONNECT)
        WTS_SECURITY_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or WTS_SECURITY_QUERY_INFORMATION Or WTS_SECURITY_SET_INFORMATION Or WTS_SECURITY_RESET Or WTS_SECURITY_VIRTUAL_CHANNELS Or WTS_SECURITY_REMOTE_CONTROL Or WTS_SECURITY_LOGON Or WTS_SECURITY_MESSAGE Or WTS_SECURITY_CONNECT Or WTS_SECURITY_DISCONNECT)
    End Enum

    Public Enum WTS_CONNECTSTATE_CLASS
        WTSActive  ' User logged on to WinStation
        WTSConnected  ' WinStation connected to client
        WTSConnectQuery  ' In the process of connecting to client
        WTSShadow   ' Shadowing another WinStation
        WTSDisconnected   ' WinStation logged on without client
        WTSIdle  ' Waiting for client to connect
        WTSListen  ' WinStation is listening for connection
        WTSReset  ' WinStation is being reset
        WTSDown  ' WinStation is down due to error
        WTSInit  ' WinStation in initialization
    End Enum

    Public Type WTS_SERVER_INFOA
        pServerName As String ' server name
    End Type
    Public Type WTS_SERVER_INFOW
        pServerName As LongPtr ' server name
    End Type
    'Alias WTS_SERVER_INFO As WTS_SERVER_INFOW
    Public Type WTS_SERVER_INFO
        pServerName As LongPtr ' server name
    End Type
    
    Public Type WTS_SESSION_INFOA
        SessionId As Long ' session id
        pWinStationName As String ' name of WinStation this session is
        ' connected to
        State As WTS_CONNECTSTATE_CLASS ' connection state (see enum)
    End Type
    Public Type WTS_SESSION_INFOW
        SessionId As Long ' session id
        pWinStationName As LongPtr ' name of WinStation this session is
        ' connected to
        State As WTS_CONNECTSTATE_CLASS ' connection state (see enum)
    End Type
    'Alias WTS_SESSION_INFO As WTS_SESSION_INFOW
    Public Type WTS_SESSION_INFO
        SessionId As Long ' session id
        pWinStationName As LongPtr ' name of WinStation this session is
        ' connected to
        State As WTS_CONNECTSTATE_CLASS ' connection state (see enum)
    End Type
    
    Public Type WTS_SESSION_INFO_1A
        ExecEnvId As Long
        State As WTS_CONNECTSTATE_CLASS
        SessionId As Long
        pSessionName As String
        pHostName As String
        pUserName As String
        pDomainName As String
        pFarmName As String
    End Type
    Public Type WTS_SESSION_INFO_1W
        ExecEnvId As Long
        State As WTS_CONNECTSTATE_CLASS
        SessionId As Long
        pSessionName As LongPtr
        pHostName As LongPtr
        pUserName As LongPtr
        pDomainName As LongPtr
        pFarmName As LongPtr
    End Type
    'Alias WTS_SESSION_INFO_1 As WTS_SESSION_INFO_1W
    Public Type WTS_SESSION_INFO_1
        ExecEnvId As Long
        State As WTS_CONNECTSTATE_CLASS
        SessionId As Long
        pSessionName As LongPtr
        pHostName As LongPtr
        pUserName As LongPtr
        pDomainName As LongPtr
        pFarmName As LongPtr
    End Type
    
    Public Type WTS_PROCESS_INFOA
        SessionId As Long ' session id
        ProcessId As Long ' process id
        pProcessName As String ' name of process
        pUserSid As LongPtr 'PSID ' user's SID
    End Type
    Public Type WTS_PROCESS_INFOW
        SessionId As Long ' session id
        ProcessId As Long ' process id
        pProcessName As LongPtr ' name of process
        pUserSid As LongPtr 'PSID ' user's SID
    End Type
    'Alias WTS_PROCESS_INFO As WTS_PROCESS_INFOW
    Public Type WTS_PROCESS_INFO
        SessionId As Long ' session id
        ProcessId As Long ' process id
        pProcessName As LongPtr ' name of process
        pUserSid As LongPtr 'PSID ' user's SID
    End Type
    
    Public Enum WTSProtocolTypes
        WTS_PROTOCOL_TYPE_CONSOLE = 0  ' Console
        WTS_PROTOCOL_TYPE_ICA = 1  ' ICA Protocol
        WTS_PROTOCOL_TYPE_RDP = 2  ' RDP Protocol
    End Enum
        
    Public Enum WTS_INFO_CLASS
        WTSInitialProgram
        WTSApplicationName
        WTSWorkingDirectory
        WTSOEMId
        WTSSessionId
        WTSUserName
        WTSWinStationName
        WTSDomainName
        WTSConnectState
        WTSClientBuildNumber
        WTSClientName
        WTSClientDirectory
        WTSClientProductId
        WTSClientHardwareId
        WTSClientAddress
        WTSClientDisplay
        WTSClientProtocolType
        WTSIdleTime
        WTSLogonTime
        WTSIncomingBytes
        WTSOutgoingBytes
        WTSIncomingFrames
        WTSOutgoingFrames
        WTSClientInfo
        WTSSessionInfo
        WTSSessionInfoEx
        WTSConfigInfo
        WTSValidationInfo   ' Info Class value used to fetch Validation Information through the WTSQuerySessionInformation
        WTSSessionAddressV4
        WTSIsRemoteSession
    End Enum
    
    Public Type WTSCONFIGINFOA
        version As Long
        fConnectClientDrivesAtLogon As Long
        fConnectPrinterAtLogon As Long
        fDisablePrinterRedirection As Long
        fDisableDefaultMainClientPrinter As Long
        ShadowSettings As Long
        LogonUserName(USERNAME_LENGTH) As Byte
        LogonDomain(DOMAIN_LENGTH) As Byte
        WorkDirectory(MAX_PATH) As Byte
        InitialProgram(MAX_PATH) As Byte
        ApplicationName(MAX_PATH) As Byte
    End Type
    Public Type WTSCONFIGINFOW
        version As Long
        fConnectClientDrivesAtLogon As Long
        fConnectPrinterAtLogon As Long
        fDisablePrinterRedirection As Long
        fDisableDefaultMainClientPrinter As Long
        ShadowSettings As Long
        LogonUserName(USERNAME_LENGTH) As Integer
        LogonDomain(DOMAIN_LENGTH) As Integer
        WorkDirectory(MAX_PATH) As Integer
        InitialProgram(MAX_PATH) As Integer
        ApplicationName(MAX_PATH) As Integer
    End Type
    'Alias WTSCONFIGINFO As WTSCONFIGINFOW
    Public Type WTSCONFIGINFO
        version As Long
        fConnectClientDrivesAtLogon As Long
        fConnectPrinterAtLogon As Long
        fDisablePrinterRedirection As Long
        fDisableDefaultMainClientPrinter As Long
        ShadowSettings As Long
        LogonUserName(USERNAME_LENGTH) As Integer
        LogonDomain(DOMAIN_LENGTH) As Integer
        WorkDirectory(MAX_PATH) As Integer
        InitialProgram(MAX_PATH) As Integer
        ApplicationName(MAX_PATH) As Integer
    End Type
    
    Public Type WTSINFOA
        State As WTS_CONNECTSTATE_CLASS ' connection state (see enum)
        SessionId As Long ' session id
        IncomingBytes As Long
        OutgoingBytes As Long
        IncomingFrames As Long
        OutgoingFrames As Long
        IncomingCompressedBytes As Long
        OutgoingCompressedBytes As Long
        WinStationName(0 To (WINSTATIONNAME_LENGTH - 1)) As Byte
        Domain(0 To (DOMAIN_LENGTH - 1)) As Byte
        UserName(0 To (USERNAME_LENGTH)) As Byte ' name of WinStation this session is
        ' connected to
        ConnectTime As LARGE_INTEGER
        DisconnectTime As LARGE_INTEGER
        LastInputTime As LARGE_INTEGER
        LogonTime As LARGE_INTEGER
        CurrentTime As LARGE_INTEGER
    End Type
    Public Type WTSINFOW
        State As WTS_CONNECTSTATE_CLASS ' connection state (see enum)
        SessionId As Long ' session id
        IncomingBytes As Long
        OutgoingBytes As Long
        IncomingFrames As Long
        OutgoingFrames As Long
        IncomingCompressedBytes As Long
        OutgoingCompressedBytes As Long
        WinStationName(0 To (WINSTATIONNAME_LENGTH - 1)) As Integer
        Domain(0 To (DOMAIN_LENGTH - 1)) As Integer
        UserName(0 To (USERNAME_LENGTH)) As Integer ' name of WinStation this session is
        ' connected to
        ConnectTime As LARGE_INTEGER
        DisconnectTime As LARGE_INTEGER
        LastInputTime As LARGE_INTEGER
        LogonTime As LARGE_INTEGER
        CurrentTime As LARGE_INTEGER
    End Type
    'Alias WTSINFO As WTSINFOW
    Public Type WTSINFO
        State As WTS_CONNECTSTATE_CLASS ' connection state (see enum)
        SessionId As Long ' session id
        IncomingBytes As Long
        OutgoingBytes As Long
        IncomingFrames As Long
        OutgoingFrames As Long
        IncomingCompressedBytes As Long
        OutgoingCompressedBytes As Long
        WinStationName(0 To (WINSTATIONNAME_LENGTH - 1)) As Integer
        Domain(0 To (DOMAIN_LENGTH - 1)) As Integer
        UserName(0 To (USERNAME_LENGTH)) As Integer ' name of WinStation this session is
        ' connected to
        ConnectTime As LARGE_INTEGER
        DisconnectTime As LARGE_INTEGER
        LastInputTime As LARGE_INTEGER
        LogonTime As LARGE_INTEGER
        CurrentTime As LARGE_INTEGER
    End Type
    
    Public Enum WTSSessionStateExFlags
        WTS_SESSIONSTATE_UNKNOWN = &HFFFFFFFF
        WTS_SESSIONSTATE_LOCK = &H00000000
        WTS_SESSIONSTATE_UNLOCK = &H00000001
    End Enum
    
    Public Type WTSINFOEX_LEVEL1_A
        SessionId As Long
        SessionState As WTS_CONNECTSTATE_CLASS
        SessionFlags As Long
        WinStationName(0 To (WINSTATIONNAME_LENGTH)) As Byte
        UserName(0 To (USERNAME_LENGTH)) As Byte
        DomainName(0 To (DOMAIN_LENGTH)) As Byte
        LogonTime As LARGE_INTEGER
        ConnectTime As LARGE_INTEGER
        DisconnectTime As LARGE_INTEGER
        LastInputTime As LARGE_INTEGER
        CurrentTime As LARGE_INTEGER
        IncomingBytes As Long
        OutgoingBytes As Long
        IncomingFrames As Long
        OutgoingFrames As Long
        IncomingCompressedBytes As Long
        OutgoingCompressedBytes As Long
    End Type
    Public Type WTSINFOEX_LEVEL1_W
        SessionId As Long
        SessionState As WTS_CONNECTSTATE_CLASS
        SessionFlags As Long
        WinStationName(0 To (WINSTATIONNAME_LENGTH)) As Integer
        UserName(0 To (USERNAME_LENGTH)) As Integer
        DomainName(0 To (DOMAIN_LENGTH)) As Integer
        LogonTime As LARGE_INTEGER
        ConnectTime As LARGE_INTEGER
        DisconnectTime As LARGE_INTEGER
        LastInputTime As LARGE_INTEGER
        CurrentTime As LARGE_INTEGER
        IncomingBytes As Long
        OutgoingBytes As Long
        IncomingFrames As Long
        OutgoingFrames As Long
        IncomingCompressedBytes As Long
        OutgoingCompressedBytes As Long
    End Type
    'Alias WTSINFOEX_LEVEL1 As WTSINFOEX_LEVEL1_W
    Public Type WTSINFOEX_LEVEL1
        SessionId As Long
        SessionState As WTS_CONNECTSTATE_CLASS
        SessionFlags As Long
        WinStationName(0 To (WINSTATIONNAME_LENGTH)) As Integer
        UserName(0 To (USERNAME_LENGTH)) As Integer
        DomainName(0 To (DOMAIN_LENGTH)) As Integer
        LogonTime As LARGE_INTEGER
        ConnectTime As LARGE_INTEGER
        DisconnectTime As LARGE_INTEGER
        LastInputTime As LARGE_INTEGER
        CurrentTime As LARGE_INTEGER
        IncomingBytes As Long
        OutgoingBytes As Long
        IncomingFrames As Long
        OutgoingFrames As Long
        IncomingCompressedBytes As Long
        OutgoingCompressedBytes As Long
    End Type
    
    
    Public Type WTSINFOEXA
        Level As Long
        Data As WTSINFOEX_LEVEL1_A
    End Type
    Public Type WTSINFOEXW
        Level As Long
        Data As WTSINFOEX_LEVEL1_W
    End Type
    Public Type WTSINFOEX
        Level As Long
        Data As WTSINFOEX_LEVEL1
    End Type
    
    Public Type WTSCLIENTA
        ClientName(0 To (CLIENTNAME_LENGTH)) As Byte
        Domain(0 To (DOMAIN_LENGTH)) As Byte
        UserName(0 To (USERNAME_LENGTH)) As Byte
        WorkDirectory(0 To (MAX_PATH)) As Byte
        InitialProgram(0 To (MAX_PATH)) As Byte
        EncryptionLevel As Byte ' security level of encryption pd
        ClientAddressFamily As Long
        ClientAddress(0 To (CLIENTADDRESS_LENGTH)) As Byte
        HRes As Integer
        VRes As Integer
        ColorDepth As Integer
        ClientDirectory(0 To (MAX_PATH)) As Byte
        ClientBuildNumber As Long
        ClientHardwareId As Long ' client software serial number
        ClientProductId As Integer ' client software product id
        OutBufCountHost As Integer ' number of outbufs on host
        OutBufCountClient As Integer ' number of outbufs on client
        OutBufLength As Integer ' length of outbufs in bytes
        DeviceId(0 To (MAX_PATH)) As Byte
    End Type
    Public Type WTSCLIENTW
        ClientName(0 To (CLIENTNAME_LENGTH)) As Integer
        Domain(0 To (DOMAIN_LENGTH)) As Integer
        UserName(0 To (USERNAME_LENGTH)) As Integer
        WorkDirectory(0 To (MAX_PATH)) As Integer
        InitialProgram(0 To (MAX_PATH)) As Integer
        EncryptionLevel As Byte ' security level of encryption pd
        ClientAddressFamily As Long
        ClientAddress(0 To (CLIENTADDRESS_LENGTH)) As Integer
        HRes As Integer
        VRes As Integer
        ColorDepth As Integer
        ClientDirectory(0 To (MAX_PATH)) As Integer
        ClientBuildNumber As Long
        ClientHardwareId As Long ' client software serial number
        ClientProductId As Integer ' client software product id
        OutBufCountHost As Integer ' number of outbufs on host
        OutBufCountClient As Integer ' number of outbufs on client
        OutBufLength As Integer ' length of outbufs in bytes
        DeviceId(0 To (MAX_PATH)) As Integer
    End Type
    'Alias WTSCLIENT As WTSCLIENTW
    Public Type WTSCLIENT
        ClientName(0 To (CLIENTNAME_LENGTH)) As Integer
        Domain(0 To (DOMAIN_LENGTH)) As Integer
        UserName(0 To (USERNAME_LENGTH)) As Integer
        WorkDirectory(0 To (MAX_PATH)) As Integer
        InitialProgram(0 To (MAX_PATH)) As Integer
        EncryptionLevel As Byte ' security level of encryption pd
        ClientAddressFamily As Long
        ClientAddress(0 To (CLIENTADDRESS_LENGTH)) As Integer
        HRes As Integer
        VRes As Integer
        ColorDepth As Integer
        ClientDirectory(0 To (MAX_PATH)) As Integer
        ClientBuildNumber As Long
        ClientHardwareId As Long ' client software serial number
        ClientProductId As Integer ' client software product id
        OutBufCountHost As Integer ' number of outbufs on host
        OutBufCountClient As Integer ' number of outbufs on client
        OutBufLength As Integer ' length of outbufs in bytes
        DeviceId(0 To (MAX_PATH)) As Integer
    End Type
    
    Public Const PRODUCTINFO_COMPANYNAME_LENGTH  = 256
    Public Const PRODUCTINFO_PRODUCTID_LENGTH  = 4
    Public Type WTS_PRODUCT_INFOA
        CompanyName(0 To (PRODUCTINFO_COMPANYNAME_LENGTH - 1)) As Byte
        ProductID(0 To (PRODUCTINFO_PRODUCTID_LENGTH - 1)) As Byte
    End Type
    Public Type WTS_PRODUCT_INFOW
        CompanyName(0 To (PRODUCTINFO_COMPANYNAME_LENGTH - 1)) As Integer
        ProductID(0 To (PRODUCTINFO_PRODUCTID_LENGTH - 1)) As Integer
    End Type
    Public Type WTS_PRODUCT_INFO
        CompanyName(0 To (PRODUCTINFO_COMPANYNAME_LENGTH - 1)) As Integer
        ProductID(0 To (PRODUCTINFO_PRODUCTID_LENGTH - 1)) As Integer
    End Type
    
    Public Const VALIDATIONINFORMATION_LICENSE_LENGTH  = 16384  '16 Kb
    Public Const VALIDATIONINFORMATION_HARDWAREID_LENGTH  = 20
    Public Type WTS_VALIDATION_INFORMATIONA
        ProductInfo As WTS_PRODUCT_INFOA
        License(0 To (VALIDATIONINFORMATION_LICENSE_LENGTH - 1)) As Byte
        LicenseLength As Long
        HardwareID(0 To (VALIDATIONINFORMATION_HARDWAREID_LENGTH - 1)) As Byte
        HardwareIDLength As Long
    End Type
    Public Type WTS_VALIDATION_INFORMATIONW
        ProductInfo As WTS_PRODUCT_INFOW
        License(0 To (VALIDATIONINFORMATION_LICENSE_LENGTH - 1)) As Integer
        LicenseLength As Long
        HardwareID(0 To (VALIDATIONINFORMATION_HARDWAREID_LENGTH - 1)) As Integer
        HardwareIDLength As Long
    End Type
    Public Type WTS_VALIDATION_INFORMATION
        ProductInfo As WTS_PRODUCT_INFO
        License(0 To (VALIDATIONINFORMATION_LICENSE_LENGTH - 1)) As Integer
        LicenseLength As Long
        HardwareID(0 To (VALIDATIONINFORMATION_HARDWAREID_LENGTH - 1)) As Integer
        HardwareIDLength As Long
    End Type
    
    Public Type WTS_CLIENT_ADDRESS
        AddressFamily As ADDRESS_FAMILIES ' AF_INET, AF_INET6, AF_IPX, AF_NETBIOS, AF_UNSPEC
        Address(0 To 19) As Byte ' client network address
    End Type
    
    Public Type WTS_CLIENT_DISPLAY
        HorizontalResolution As Long ' horizontal dimensions, in pixels
        VerticalResolution As Long ' vertical dimensions, in pixels
        ColorDepth As Long ' 1=16, 2=256, 4=64K, 8=16M
    End Type
    
    Public Enum WTS_CONFIG_CLASS
        ' Initial program settings
        WTSUserConfigInitialProgram   ' string returned/expected
        WTSUserConfigWorkingDirectory   ' string returned/expected
        WTSUserConfigfInheritInitialProgram   ' DWORD returned/expected
        ' 
        WTSUserConfigfAllowLogonTerminalServer   'DWORD returned/expected
        ' Timeout settings
        WTSUserConfigTimeoutSettingsConnections   'DWORD returned/expected
        WTSUserConfigTimeoutSettingsDisconnections   'DWORD returned/expected
        WTSUserConfigTimeoutSettingsIdle   'DWORD returned/expected
        ' Client device settings
        WTSUserConfigfDeviceClientDrives   'DWORD returned/expected
        WTSUserConfigfDeviceClientPrinters   'DWORD returned/expected
        WTSUserConfigfDeviceClientDefaultPrinter    'DWORD returned/expected
        ' Connection settings
        WTSUserConfigBrokenTimeoutSettings   'DWORD returned/expected
        WTSUserConfigReconnectSettings  'DWORD returned/expected
        ' Modem settings
        WTSUserConfigModemCallbackSettings  'DWORD returned/expected
        WTSUserConfigModemCallbackPhoneNumber   ' string returned/expected
        ' Shadow settings
        WTSUserConfigShadowingSettings  'DWORD returned/expected
        ' User Profile settings
        WTSUserConfigTerminalServerProfilePath ' string returned/expected
        ' Terminal Server home directory
        WTSUserConfigTerminalServerHomeDir  ' string returned/expected
        WTSUserConfigTerminalServerHomeDirDrive   ' string returned/expected
        WTSUserConfigfTerminalServerRemoteHomeDir   ' DWORD 0:LOCAL 1:REMOTE
        WTSUserConfigUser  ' returns WTSUSERCONFIG struct
    End Enum
    
    Public Enum WTS_CONFIG_SOURCE
        WTSUserConfigSourceSAM
    End Enum
    
    Public Type WTSUSERCONFIGA
        Source As Long
        InheritInitialProgram As Long
        AllowLogonTerminalServer As Long
        TimeoutSettingsConnections As Long
        TimeoutSettingsDisconnections As Long
        TimeoutSettingsIdle As Long
        DeviceClientDrives As Long
        DeviceClientPrinters As Long
        ClientDefaultPrinter As Long
        BrokenTimeoutSettings As Long
        ReconnectSettings As Long
        ShadowingSettings As Long
        TerminalServerRemoteHomeDir As Long
        InitialProgram(0 To (MAX_PATH)) As Byte
        WorkDirectory(0 To (MAX_PATH)) As Byte
        TerminalServerProfilePath(0 To (MAX_PATH)) As Byte
        TerminalServerHomeDir(0 To (MAX_PATH)) As Byte
        TerminalServerHomeDirDrive(0 To (WTS_DRIVE_LENGTH)) As Byte
    End Type
    Public Type WTSUSERCONFIGW
        Source As Long
        InheritInitialProgram As Long
        AllowLogonTerminalServer As Long
        TimeoutSettingsConnections As Long
        TimeoutSettingsDisconnections As Long
        TimeoutSettingsIdle As Long
        DeviceClientDrives As Long
        DeviceClientPrinters As Long
        ClientDefaultPrinter As Long
        BrokenTimeoutSettings As Long
        ReconnectSettings As Long
        ShadowingSettings As Long
        TerminalServerRemoteHomeDir As Long
        InitialProgram(0 To (MAX_PATH)) As Integer
        WorkDirectory(0 To (MAX_PATH)) As Integer
        TerminalServerProfilePath(0 To (MAX_PATH)) As Integer
        TerminalServerHomeDir(0 To (MAX_PATH)) As Integer
        TerminalServerHomeDirDrive(0 To (WTS_DRIVE_LENGTH)) As Integer
    End Type
    Public Type WTSUSERCONFIG
        Source As Long
        InheritInitialProgram As Long
        AllowLogonTerminalServer As Long
        TimeoutSettingsConnections As Long
        TimeoutSettingsDisconnections As Long
        TimeoutSettingsIdle As Long
        DeviceClientDrives As Long
        DeviceClientPrinters As Long
        ClientDefaultPrinter As Long
        BrokenTimeoutSettings As Long
        ReconnectSettings As Long
        ShadowingSettings As Long
        TerminalServerRemoteHomeDir As Long
        InitialProgram(0 To (MAX_PATH)) As Integer
        WorkDirectory(0 To (MAX_PATH)) As Integer
        TerminalServerProfilePath(0 To (MAX_PATH)) As Integer
        TerminalServerHomeDir(0 To (MAX_PATH)) As Integer
        TerminalServerHomeDirDrive(0 To (WTS_DRIVE_LENGTH)) As Integer
    End Type
    
    Public Enum WTSEventFlags
        WTS_EVENT_NONE = &H00000000  ' return no event
        WTS_EVENT_CREATE = &H00000001  ' new WinStation created
        WTS_EVENT_DELETE = &H00000002  ' existing WinStation deleted
        WTS_EVENT_RENAME = &H00000004  ' existing WinStation renamed
        WTS_EVENT_CONNECT = &H00000008  ' WinStation connect to client
        WTS_EVENT_DISCONNECT = &H00000010  ' WinStation logged on without
    '      client
        WTS_EVENT_LOGON = &H00000020  ' user logged on to existing
    '      WinStation
        WTS_EVENT_LOGOFF = &H00000040  ' user logged off from
    '      existing WinStation
        WTS_EVENT_STATECHANGE = &H00000080  ' WinStation state change
        WTS_EVENT_LICENSE = &H00000100  ' license state change
        WTS_EVENT_ALL = &H7fffffff  ' wait for all event types
        WTS_EVENT_FLUSH = &H80000000  ' unblock all waiters
    End Enum
    
    Public Enum WTSHotkeyModifiers
        REMOTECONTROL_KBDSHIFT_HOTKEY = &H1  ' Shift key
        REMOTECONTROL_KBDCTRL_HOTKEY = &H2  ' Ctrl key
        REMOTECONTROL_KBDALT_HOTKEY = &H4  ' Alt key
    End Enum
    
    Public Enum WTS_VIRTUAL_CLASS
        WTSVirtualClientData   ' Virtual channel client module data
        '      (C2H data)
        WTSVirtualFileHandle
    End Enum
    
    Public Type WTS_SESSION_ADDRESS
        AddressFamily As ADDRESS_FAMILIES ' AF_INET only.
        Address(0 To 19) As Byte ' client network address
    End Type
     
    Public Declare PtrSafe Function WTSStopRemoteControlSession Lib "Wtsapi32" (ByVal LogonId As Long) As BOOL
    Public Declare PtrSafe Function WTSStartRemoteControlSessionA Lib "Wtsapi32" (ByVal pTargetServerName As String, ByVal TargetLogonId As Long, ByVal HotkeyVk As Byte, [TypeHint(WTSHotkeyModifiers)] ByVal HotkeyModifiers As Integer) As BOOL
    Public Declare PtrSafe Function WTSStartRemoteControlSessionW Lib "Wtsapi32" (ByVal pTargetServerName As LongPtr, ByVal TargetLogonId As Long, ByVal HotkeyVk As Byte, [TypeHint(WTSHotkeyModifiers)] ByVal HotkeyModifiers As Integer) As BOOL
    Public DeclareWide PtrSafe Function WTSStartRemoteControlSession Lib "Wtsapi32" Alias "WTSStartRemoteControlSessionW" (ByVal pTargetServerName As String, ByVal TargetLogonId As Long, ByVal HotkeyVk As Byte, [TypeHint(WTSHotkeyModifiers)] ByVal HotkeyModifiers As Integer) As BOOL
    Public Declare PtrSafe Function WTSConnectSessionA Lib "Wtsapi32" (ByVal LogonId As Long, ByVal TargetLogonId As Long, ByVal pPassword As String, ByVal bWait As BOOL) As BOOL
    Public Declare PtrSafe Function WTSConnectSessionW Lib "Wtsapi32" (ByVal LogonId As Long, ByVal TargetLogonId As Long, ByVal pPassword As LongPtr, ByVal bWait As BOOL) As BOOL
    Public DeclareWide PtrSafe Function WTSConnectSession Lib "Wtsapi32" Alias "WTSConnectSessionW" (ByVal LogonId As Long, ByVal TargetLogonId As Long, ByVal pPassword As String, ByVal bWait As BOOL) As BOOL
    Public Declare PtrSafe Function WTSEnumerateServersA Lib "Wtsapi32" (ByVal pDomainName As String, ByVal Reserved As Long, ByVal Version As Long, ppServerInfo As LongPtr, pCount As Long) As BOOL
    Public Declare PtrSafe Function WTSEnumerateServersW Lib "Wtsapi32" (ByVal pDomainName As LongPtr, ByVal Reserved As Long, ByVal Version As Long, ppServerInfo As LongPtr, pCount As Long) As BOOL
    Public DeclareWide PtrSafe Function WTSEnumerateServers Lib "Wtsapi32" Alias "WTSEnumerateServersW" (ByVal pDomainName As String, ByVal Reserved As Long, ByVal Version As Long, ppServerInfo As LongPtr, pCount As Long) As BOOL
    Public Declare PtrSafe Function WTSOpenServerA Lib "Wtsapi32" (ByVal pServerName As String) As LongPtr
    Public Declare PtrSafe Function WTSOpenServerW Lib "Wtsapi32" (ByVal pServerName As LongPtr) As LongPtr
    Public DeclareWide PtrSafe Function WTSOpenServer Lib "Wtsapi32" Alias "WTSOpenServerW" (ByVal pServerName As String) As LongPtr
    Public Declare PtrSafe Function WTSOpenServerExA Lib "Wtsapi32" (ByVal pServerName As String) As LongPtr
    Public Declare PtrSafe Function WTSOpenServerExW Lib "Wtsapi32" (ByVal pServerName As LongPtr) As LongPtr
    Public DeclareWide PtrSafe Function WTSOpenServerEx Lib "Wtsapi32" Alias "WTSOpenServerExW" (ByVal pServerName As String) As LongPtr
    Public Declare PtrSafe Sub WTSCloseServer Lib "Wtsapi32" (ByVal hServer As LongPtr)
    Public Declare PtrSafe Function WTSEnumerateSessionsA Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal Reserved As Long, ByVal Version As Long, ppSessionInfo As LongPtr, pCount As Long) As BOOL
    Public Declare PtrSafe Function WTSEnumerateSessionsW Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal Reserved As Long, ByVal Version As Long, ppSessionInfo As LongPtr, pCount As Long) As BOOL
    Public DeclareWide PtrSafe Function WTSEnumerateSessions Lib "Wtsapi32" Alias "WTSEnumerateSessionsW" (ByVal hServer As LongPtr, ByVal Reserved As Long, ByVal Version As Long, ppSessionInfo As LongPtr, pCount As Long) As BOOL
    Public Declare PtrSafe Function WTSEnumerateSessionsExA Lib "Wtsapi32" (ByVal hServer As LongPtr, pLevel As Long, ByVal Filter As Long, ppSessionInfo As LongPtr, pCount As Long) As BOOL
    Public Declare PtrSafe Function WTSEnumerateSessionsExW Lib "Wtsapi32" (ByVal hServer As LongPtr, pLevel As Long, ByVal Filter As Long, ppSessionInfo As LongPtr, pCount As Long) As BOOL
    Public DeclareWide PtrSafe Function WTSEnumerateSessionsEx Lib "Wtsapi32" Alias "WTSEnumerateSessionsExW" (ByVal hServer As LongPtr, pLevel As Long, ByVal Filter As Long, ppSessionInfo As LongPtr, pCount As Long) As BOOL
    Public Declare PtrSafe Function WTSEnumerateProcessesA Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal Reserved As Long, ByVal Version As Long, ppProcessInfo As LongPtr, pCount As Long) As BOOL
    Public Declare PtrSafe Function WTSEnumerateProcessesW Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal Reserved As Long, ByVal Version As Long, ppProcessInfo As LongPtr, pCount As Long) As BOOL
    Public DeclareWide PtrSafe Function WTSEnumerateProcesses Lib "Wtsapi32" Alias "WTSEnumerateProcessesW" (ByVal hServer As LongPtr, ByVal Reserved As Long, ByVal Version As Long, ppProcessInfo As LongPtr, pCount As Long) As BOOL
    Public Declare PtrSafe Function WTSTerminateProcess Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal ProcessId As Long, ByVal ExitCode As Long) As BOOL
    Public Declare PtrSafe Function WTSQuerySessionInformationA Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal SessionId As Long, ByVal WTSInfoClass As WTS_INFO_CLASS, ppBuffer As LongPtr, pBytesReturned As Long) As BOOL
    Public Declare PtrSafe Function WTSQuerySessionInformationW Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal SessionId As Long, ByVal WTSInfoClass As WTS_INFO_CLASS, ppBuffer As LongPtr, pBytesReturned As Long) As BOOL
    Public DeclareWide PtrSafe Function WTSQuerySessionInformation Lib "Wtsapi32" Alias "WTSQuerySessionInformationW" (ByVal hServer As LongPtr, ByVal SessionId As Long, ByVal WTSInfoClass As WTS_INFO_CLASS, ppBuffer As LongPtr, pBytesReturned As Long) As BOOL
    Public Declare PtrSafe Function WTSQueryUserConfigA Lib "Wtsapi32" (ByVal pServerName As String, ByVal pUserName As String, ByVal WTSConfigClass As WTS_CONFIG_CLASS, ppBuffer As LongPtr, pBytesReturned As Long) As BOOL
    Public Declare PtrSafe Function WTSQueryUserConfigW Lib "Wtsapi32" (ByVal pServerName As LongPtr, ByVal pUserName As LongPtr, ByVal WTSConfigClass As WTS_CONFIG_CLASS, ppBuffer As LongPtr, pBytesReturned As Long) As BOOL
    Public DeclareWide PtrSafe Function WTSQueryUserConfig Lib "Wtsapi32" Alias "WTSQueryUserConfigW" (ByVal pServerName As String, ByVal pUserName As String, ByVal WTSConfigClass As WTS_CONFIG_CLASS, ppBuffer As LongPtr, pBytesReturned As Long) As BOOL
    [Description("Note: This call doesn't use String because it also accepts other types; tB can't e.g. substitute a Long for a string pointer.")]
    Public Declare PtrSafe Function WTSSetUserConfigA Lib "Wtsapi32" (ByVal pServerName As String, ByVal pUserName As String, ByVal WTSConfigClass As WTS_CONFIG_CLASS, ByVal pBuffer As String, ByVal DataLength As Long) As BOOL
    Public Declare PtrSafe Function WTSSetUserConfigW Lib "Wtsapi32" (ByVal pServerName As LongPtr, ByVal pUserName As LongPtr, ByVal WTSConfigClass As WTS_CONFIG_CLASS, ByVal pBuffer As LongPtr, ByVal DataLength As Long) As BOOL
    [Description("Note: This call doesn't use String because it also accepts other types; tB can't e.g. substitute a Long for a string pointer.")]
    Public DeclareWide PtrSafe Function WTSSetUserConfig Lib "Wtsapi32" Alias "WTSSetUserConfigW" (ByVal pServerName As String, ByVal pUserName As String, ByVal WTSConfigClass As WTS_CONFIG_CLASS, ByVal pBuffer As String, ByVal DataLength As Long) As BOOL
    Public Declare PtrSafe Function WTSSendMessageA Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal SessionId As Long, ByVal pTitle As String, ByVal TitleLength As Long, ByVal pMessage As String, ByVal MessageLength As Long, ByVal Style As MessageBoxFlags, ByVal Timeout As Long, pResponse As MessageBoxResults, ByVal bWait As BOOL) As BOOL
    Public Declare PtrSafe Function WTSSendMessageW Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal SessionId As Long, ByVal pTitle As LongPtr, ByVal TitleLength As Long, ByVal pMessage As LongPtr, ByVal MessageLength As Long, ByVal Style As MessageBoxFlags, ByVal Timeout As Long, pResponse As MessageBoxResults, ByVal bWait As BOOL) As BOOL
    Public DeclareWide PtrSafe Function WTSSendMessage Lib "Wtsapi32" Alias "WTSSendMessageW" (ByVal hServer As LongPtr, ByVal SessionId As Long, ByVal pTitle As String, ByVal TitleLength As Long, ByVal pMessage As String, ByVal MessageLength As Long, ByVal Style As MessageBoxFlags, ByVal Timeout As Long, pResponse As MessageBoxResults, ByVal bWait As BOOL) As BOOL
    Public Declare PtrSafe Function WTSDisconnectSession Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal SessionId As Long, ByVal bWait As BOOL) As BOOL
    Public Declare PtrSafe Function WTSLogoffSession Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal SessionId As Long, ByVal bWait As BOOL) As BOOL
    Public Declare PtrSafe Function WTSShutdownSystem Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal ShutdownFlag As WTSShutdownFlags) As BOOL
    Public Declare PtrSafe Function WTSWaitSystemEvent Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal EventMask As WTSEventFlags, pEventFlags As WTSEventFlags) As BOOL
    
    Public Enum WTSChannelOptions
        WTS_CHANNEL_OPTION_DYNAMIC = &H00000001  ' dynamic channel
        WTS_CHANNEL_OPTION_DYNAMIC_PRI_LOW = &H00000000  ' priorities
        WTS_CHANNEL_OPTION_DYNAMIC_PRI_MED = &H00000002
        WTS_CHANNEL_OPTION_DYNAMIC_PRI_HIGH = &H00000004
        WTS_CHANNEL_OPTION_DYNAMIC_PRI_REAL = &H00000006
        WTS_CHANNEL_OPTION_DYNAMIC_NO_COMPRESS = &H00000008
    End Enum
    
    Public Declare PtrSafe Function WTSVirtualChannelOpenEx Lib "Wtsapi32" (ByVal SessionId As Long, ByVal pVirtualName As String, ByVal flags As WTSChannelOptions) As LongPtr
    Public Declare PtrSafe Function WTSVirtualChannelClose Lib "Wtsapi32" (ByVal hChannelHandle As LongPtr) As BOOL
    Public Declare PtrSafe Function WTSVirtualChannelRead Lib "Wtsapi32" (ByVal hChannelHandle As LongPtr, ByVal TimeOut As Long, Buffer As Any, ByVal BufferSize As Long, pBytesRead As Long) As BOOL
    Public Declare PtrSafe Function WTSVirtualChannelWrite Lib "Wtsapi32" (ByVal hChannelHandle As LongPtr, Buffer As Any, ByVal Length As Long, pBytesWritten As Long) As BOOL
    Public Declare PtrSafe Function WTSVirtualChannelPurgeInput Lib "Wtsapi32" (ByVal hChannelHandle As LongPtr) As BOOL
    Public Declare PtrSafe Function WTSVirtualChannelPurgeOutput Lib "Wtsapi32" (ByVal hChannelHandle As LongPtr) As BOOL
    Public Declare PtrSafe Function WTSVirtualChannelQuery Lib "Wtsapi32" (ByVal hChannelHandle As LongPtr, ByVal nClass As WTS_VIRTUAL_CLASS, ppBuffer As LongPtr, pBytesReturned As Long) As BOOL
    Public Declare PtrSafe Sub WTSFreeMemory Lib "Wtsapi32" (ByVal pMemory As LongPtr)
    
    Public Enum WTSConsoleNotifyFlags
        NOTIFY_FOR_ALL_SESSIONS = 1
        NOTIFY_FOR_THIS_SESSION = 0
    End Enum
    
    Public Declare PtrSafe Function WTSRegisterSessionNotification Lib "Wtsapi32" (ByVal hwnd As LongPtr, ByVal dwFlags As WTSConsoleNotifyFlags) As BOOL
    Public Declare PtrSafe Function WTSUnRegisterSessionNotification Lib "Wtsapi32" (ByVal hwnd As LongPtr) As BOOL
    Public Declare PtrSafe Function WTSRegisterSessionNotificationEx Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal hwnd As LongPtr, ByVal dwFlags As WTSConsoleNotifyFlags) As BOOL
    Public Declare PtrSafe Function WTSUnRegisterSessionNotificationEx Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal hwnd As LongPtr) As BOOL
    Public Declare PtrSafe Function WTSQueryUserToken Lib "Wtsapi32" (ByVal SessionId As Long, phToken As LongPtr) As BOOL
    
    Public Enum WTSProcessInfoLevels
        WTS_PROCESS_INFO_LEVEL_0 = 0
        WTS_PROCESS_INFO_LEVEL_1 = 1
    End Enum
    
    
    Public Type WTS_PROCESS_INFO_EXA
        SessionId As Long
        ProcessId As Long
        pProcessName As LongPtr
        pUserSid As String 'PSID
        NumberOfThreads As Long
        HandleCount As Long
        PagefileUsage As Long
        PeakPagefileUsage As Long
        WorkingSetSize As Long
        PeakWorkingSetSize As Long
        UserTime As LARGE_INTEGER
        KernelTime As LARGE_INTEGER
    End Type
    Public Type WTS_PROCESS_INFO_EXW
        SessionId As Long
        ProcessId As Long
        pProcessName As LongPtr
        pUserSid As LongPtr 'PSID
        NumberOfThreads As Long
        HandleCount As Long
        PagefileUsage As Long
        PeakPagefileUsage As Long
        WorkingSetSize As Long
        PeakWorkingSetSize As Long
        UserTime As LARGE_INTEGER
        KernelTime As LARGE_INTEGER
    End Type
    'Alias WTS_PROCESS_INFO_EX As WTS_PROCESS_INFO_EXW
    Public Type WTS_PROCESS_INFO_EX
        SessionId As Long
        ProcessId As Long
        pProcessName As LongPtr
        pUserSid As LongPtr 'PSID
        NumberOfThreads As Long
        HandleCount As Long
        PagefileUsage As Long
        PeakPagefileUsage As Long
        WorkingSetSize As Long
        PeakWorkingSetSize As Long
        UserTime As LARGE_INTEGER
        KernelTime As LARGE_INTEGER
    End Type
    
    Public Enum WTS_TYPE_CLASS
        WTSTypeProcessInfoLevel0
        WTSTypeProcessInfoLevel1
        WTSTypeSessionInfoLevel1
    End Enum
    
    Public Declare PtrSafe Function WTSFreeMemoryExA Lib "Wtsapi32" (ByVal WTSTypeClass As WTS_TYPE_CLASS, ByVal pMemory As LongPtr, ByVal NumberOfEntries As Long) As BOOL
    Public Declare PtrSafe Function WTSFreeMemoryExW Lib "Wtsapi32" (ByVal WTSTypeClass As WTS_TYPE_CLASS, ByVal pMemory As LongPtr, ByVal NumberOfEntries As Long) As BOOL
    Public DeclareWide PtrSafe Function WTSFreeMemoryEx Lib "Wtsapi32" Alias "WTSFreeMemoryExW" (ByVal WTSTypeClass As WTS_TYPE_CLASS, ByVal pMemory As LongPtr, ByVal NumberOfEntries As Long) As BOOL
    Public Declare PtrSafe Function WTSEnumerateProcessesExA Lib "Wtsapi32" (ByVal hServer As LongPtr, pLevel As WTSProcessInfoLevels, ByVal SessionId As Long, ppProcessInfo As LongPtr, pCount As Long) As BOOL
    Public Declare PtrSafe Function WTSEnumerateProcessesExW Lib "Wtsapi32" (ByVal hServer As LongPtr, pLevel As WTSProcessInfoLevels, ByVal SessionId As Long, ppProcessInfo As LongPtr, pCount As Long) As BOOL
    Public DeclareWide PtrSafe Function WTSEnumerateProcessesEx Lib "Wtsapi32" Alias "WTSEnumerateProcessesExW" (ByVal hServer As LongPtr, pLevel As WTSProcessInfoLevels, ByVal SessionId As Long, ppProcessInfo As LongPtr, pCount As Long) As BOOL
    Public Declare PtrSafe Function WTSEnumerateListenersA Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal pReserved As LongPtr, ByVal Reserved As Long, ByVal pListeners As String, pCount As Long) As BOOL
    Public Declare PtrSafe Function WTSEnumerateListenersW Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal pReserved As LongPtr, ByVal Reserved As Long, ByVal pListeners As LongPtr, pCount As Long) As BOOL
    Public DeclareWide PtrSafe Function WTSEnumerateListeners Lib "Wtsapi32" Alias "WTSEnumerateListenersW" (ByVal hServer As LongPtr, ByVal pReserved As LongPtr, ByVal Reserved As Long, ByVal pListeners As String, pCount As Long) As BOOL
        
    Public Type WTSLISTENERCONFIGA
        version As Long
        fEnableListener As Long
        MaxConnectionCount As Long
        fPromptForPassword As Long
        fInheritColorDepth As Long
        ColorDepth As Long
        fInheritBrokenTimeoutSettings As Long
        BrokenTimeoutSettings As Long
        fDisablePrinterRedirection As Long
        fDisableDriveRedirection As Long
        fDisableComPortRedirection As Long
        fDisableLPTPortRedirection As Long
        fDisableClipboardRedirection As Long
        fDisableAudioRedirection As Long
        fDisablePNPRedirection As Long
        fDisableDefaultMainClientPrinter As Long
        LanAdapter As Long
        PortNumber As Long
        fInheritShadowSettings As Long
        ShadowSettings As Long
        TimeoutSettingsConnection As Long
        TimeoutSettingsDisconnection As Long
        TimeoutSettingsIdle As Long
        SecurityLayer As Long
        MinEncryptionLevel As Long
        UserAuthentication As Long
        Comment(0 To (WTS_COMMENT_LENGTH)) As Byte
        LogonUserName(0 To (USERNAME_LENGTH)) As Byte
        LogonDomain(0 To (DOMAIN_LENGTH)) As Byte
        WorkDirectory(0 To (MAX_PATH)) As Byte
        InitialProgram(0 To (MAX_PATH)) As Byte
    End Type
    Public Type WTSLISTENERCONFIGW
        version As Long
        fEnableListener As Long
        MaxConnectionCount As Long
        fPromptForPassword As Long
        fInheritColorDepth As Long
        ColorDepth As Long
        fInheritBrokenTimeoutSettings As Long
        BrokenTimeoutSettings As Long
        fDisablePrinterRedirection As Long
        fDisableDriveRedirection As Long
        fDisableComPortRedirection As Long
        fDisableLPTPortRedirection As Long
        fDisableClipboardRedirection As Long
        fDisableAudioRedirection As Long
        fDisablePNPRedirection As Long
        fDisableDefaultMainClientPrinter As Long
        LanAdapter As Long
        PortNumber As Long
        fInheritShadowSettings As Long
        ShadowSettings As Long
        TimeoutSettingsConnection As Long
        TimeoutSettingsDisconnection As Long
        TimeoutSettingsIdle As Long
        SecurityLayer As Long
        MinEncryptionLevel As Long
        UserAuthentication As Long
        Comment(0 To (WTS_COMMENT_LENGTH)) As Integer
        LogonUserName(0 To (USERNAME_LENGTH)) As Integer
        LogonDomain(0 To (DOMAIN_LENGTH)) As Integer
        WorkDirectory(0 To (MAX_PATH)) As Integer
        InitialProgram(0 To (MAX_PATH)) As Integer
    End Type
    'Alias WTSLISTENERCONFIG As WTSLISTENERCONFIGW
    Public Type WTSLISTENERCONFIG
        version As Long
        fEnableListener As Long
        MaxConnectionCount As Long
        fPromptForPassword As Long
        fInheritColorDepth As Long
        ColorDepth As Long
        fInheritBrokenTimeoutSettings As Long
        BrokenTimeoutSettings As Long
        fDisablePrinterRedirection As Long
        fDisableDriveRedirection As Long
        fDisableComPortRedirection As Long
        fDisableLPTPortRedirection As Long
        fDisableClipboardRedirection As Long
        fDisableAudioRedirection As Long
        fDisablePNPRedirection As Long
        fDisableDefaultMainClientPrinter As Long
        LanAdapter As Long
        PortNumber As Long
        fInheritShadowSettings As Long
        ShadowSettings As Long
        TimeoutSettingsConnection As Long
        TimeoutSettingsDisconnection As Long
        TimeoutSettingsIdle As Long
        SecurityLayer As Long
        MinEncryptionLevel As Long
        UserAuthentication As Long
        Comment(0 To (WTS_COMMENT_LENGTH)) As Integer
        LogonUserName(0 To (USERNAME_LENGTH)) As Integer
        LogonDomain(0 To (DOMAIN_LENGTH)) As Integer
        WorkDirectory(0 To (MAX_PATH)) As Integer
        InitialProgram(0 To (MAX_PATH)) As Integer
    End Type
    
    Public Declare PtrSafe Function WTSQueryListenerConfigA Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal pReserved As LongPtr, ByVal Reserved As Long, ByVal pListenerName As String, pBuffer As WTSLISTENERCONFIGA) As BOOL
    Public Declare PtrSafe Function WTSQueryListenerConfigW Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal pReserved As LongPtr, ByVal Reserved As Long, ByVal pListenerName As LongPtr, pBuffer As WTSLISTENERCONFIGW) As BOOL
    Public DeclareWide PtrSafe Function WTSQueryListenerConfig Lib "Wtsapi32" Alias "WTSQueryListenerConfigW" (ByVal hServer As LongPtr, ByVal pReserved As LongPtr, ByVal Reserved As Long, ByVal pListenerName As String, pBuffer As WTSLISTENERCONFIG) As BOOL
    Public Declare PtrSafe Function WTSCreateListenerA Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal pReserved As LongPtr, ByVal Reserved As Long, ByVal pListenerName As String, pBuffer As WTSLISTENERCONFIGA, ByVal flag As WTSCreateListenerFlags) As BOOL
    Public Declare PtrSafe Function WTSCreateListenerW Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal pReserved As LongPtr, ByVal Reserved As Long, ByVal pListenerName As LongPtr, pBuffer As WTSLISTENERCONFIGW, ByVal flag As WTSCreateListenerFlags) As BOOL
    Public DeclareWide PtrSafe Function WTSCreateListener Lib "Wtsapi32" Alias "WTSCreateListenerW" (ByVal hServer As LongPtr, ByVal pReserved As LongPtr, ByVal Reserved As Long, ByVal pListenerName As String, pBuffer As WTSLISTENERCONFIG, ByVal flag As WTSCreateListenerFlags) As BOOL
    Public Declare PtrSafe Function WTSSetListenerSecurityA Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal pReserved As LongPtr, ByVal Reserved As Long, ByVal pListenerName As String, SecurityInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR) As BOOL
    Public Declare PtrSafe Function WTSSetListenerSecurityW Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal pReserved As LongPtr, ByVal Reserved As Long, ByVal pListenerName As LongPtr, SecurityInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR) As BOOL
    Public DeclareWide PtrSafe Function WTSSetListenerSecurity Lib "Wtsapi32" Alias "WTSSetListenerSecurityW" (ByVal hServer As LongPtr, ByVal pReserved As LongPtr, ByVal Reserved As Long, ByVal pListenerName As String, SecurityInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR) As BOOL
    Public Declare PtrSafe Function WTSGetListenerSecurityA Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal pReserved As LongPtr, ByVal Reserved As Long, ByVal pListenerName As String, SecurityInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal nLength As Long, lpnLengthNeeded As Long) As BOOL
    Public Declare PtrSafe Function WTSGetListenerSecurityW Lib "Wtsapi32" (ByVal hServer As LongPtr, ByVal pReserved As LongPtr, ByVal Reserved As Long, ByVal pListenerName As LongPtr, SecurityInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal nLength As Long, lpnLengthNeeded As Long) As BOOL
    Public DeclareWide PtrSafe Function WTSGetListenerSecurity Lib "Wtsapi32" Alias "WTSGetListenerSecurityW" (ByVal hServer As LongPtr, ByVal pReserved As LongPtr, ByVal Reserved As Long, ByVal pListenerName As String, SecurityInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal nLength As Long, lpnLengthNeeded As Long) As BOOL
    Public Declare PtrSafe Function WTSEnableChildSessions Lib "Wtsapi32" (ByVal bEnable As BOOL) As BOOL
    Public Declare PtrSafe Function WTSIsChildSessionsEnabled Lib "Wtsapi32" (pbEnable As BOOL) As BOOL
    Public Declare PtrSafe Function WTSGetChildSessionId Lib "Wtsapi32" (pSessionId As Long) As BOOL
    
    
End Module

Module wdWinsta

    Public Const WINSTATION_CURRENT_SERVER  = (0)
    Public Const WINSTATION_CURRENT_SERVER_HANDLE  = (0)
    Public Const WINSTATION_CURRENT_SERVER_NAME  = (0)
    '  Specifies the current session (SessionId)
    Public Const WINSTATION_CURRENT_SESSION  = (-1&)
    '  Specifies any-session (SessionId)
    Public Const WINSTATION_ANY_SESSION  = (-2&)

    Public Enum WinstaAccessRights
        WINSTATION_QUERY = &H00000001  ' WinStationQueryInformation
        WINSTATION_SET = &H00000002  ' WinStationSetInformation
        WINSTATION_RESET = &H00000004  ' WinStationReset
        WINSTATION_VIRTUAL = &H00000008  'read/write direct data
        WINSTATION_SHADOW = &H00000010  ' WinStationShadow
        WINSTATION_LOGON = &H00000020  ' logon to WinStation
        WINSTATION_LOGOFF = &H00000040  ' WinStationLogoff
        WINSTATION_MSG = &H00000080  ' WinStationMsg
        WINSTATION_CONNECT = &H00000100  ' WinStationConnect
        WINSTATION_DISCONNECT = &H00000200  ' WinStationDisconnect
        WINSTATION_GUEST_ACCESS = WINSTATION_LOGON
        WINSTATION_CURRENT_GUEST_ACCESS = (WINSTATION_VIRTUAL Or WINSTATION_LOGOFF)
        WINSTATION_USER_ACCESS = (WINSTATION_GUEST_ACCESS Or WINSTATION_QUERY Or WINSTATION_CONNECT)
        WINSTATION_CURRENT_USER_ACCESS = (WINSTATION_SET Or WINSTATION_RESET Or WINSTATION_VIRTUAL Or WINSTATION_LOGOFF Or WINSTATION_DISCONNECT)
        WINSTATION_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or WINSTATION_QUERY Or WINSTATION_SET Or WINSTATION_RESET Or WINSTATION_VIRTUAL Or WINSTATION_SHADOW Or WINSTATION_LOGON Or WINSTATION_MSG Or WINSTATION_CONNECT Or WINSTATION_DISCONNECT)
    End Enum

    Public Const WDPREFIX_LENGTH  = 12
    Public Const CALLBACK_LENGTH  = 50
    Public Const DLLNAME_LENGTH  = 32
    Public Const CDNAME_LENGTH  = 32
    Public Const WDNAME_LENGTH  = 32
    Public Const PDNAME_LENGTH  = 32
    Public Const DEVICENAME_LENGTH  = 128
    Public Const MODEMNAME_LENGTH  = DEVICENAME_LENGTH
    Public Const STACK_ADDRESS_LENGTH  = 128
    Public Const MAX_BR_NAME  = 65
    Public Const DIRECTORY_LENGTH  = 256
    Public Const INITIALPROGRAM_LENGTH  = 256
    Public Const USERNAME_LENGTH  = 20
    Public Const DOMAIN_LENGTH  = 17
    Public Const PASSWORD_LENGTH  = 14
    Public Const NASISPECIFICNAME_LENGTH  = 14
    Public Const NASIUSERNAME_LENGTH  = 47
    Public Const NASIPASSWORD_LENGTH  = 24
    Public Const NASISESSIONNAME_LENGTH  = 16
    Public Const NASIFILESERVER_LENGTH  = 47
    Public Const CLIENTDATANAME_LENGTH  = 7
    Public Const CLIENTNAME_LENGTH  = 20
    Public Const CLIENTADDRESS_LENGTH  = 30
    Public Const IMEFILENAME_LENGTH  = 32
    Public Const CLIENTLICENSE_LENGTH  = 32
    Public Const CLIENTMODEM_LENGTH  = 40
    Public Const CLIENT_PRODUCT_ID_LENGTH  = 32
    Public Const MAX_COUNTER_EXTENSIONS  = 2
    Public Const WINSTATIONNAME_LENGTH  = 32

    Public Const TERMSRV_TOTAL_SESSIONS  = 1
    Public Const TERMSRV_DISC_SESSIONS  = 2
    Public Const TERMSRV_RECON_SESSIONS  = 3
    Public Const TERMSRV_CURRENT_ACTIVE_SESSIONS  = 4
    Public Const TERMSRV_CURRENT_DISC_SESSIONS  = 5
    Public Const TERMSRV_PENDING_SESSIONS  = 6
    Public Const TERMSRV_SUCC_TOTAL_LOGONS  = 7
    Public Const TERMSRV_SUCC_LOCAL_LOGONS  = 8
    Public Const TERMSRV_SUCC_REMOTE_LOGONS  = 9
    Public Const TERMSRV_SUCC_SESSION0_LOGONS  = 10
    Public Const TERMSRV_CURRENT_TERMINATING_SESSIONS  = 11
    Public Const TERMSRV_CURRENT_LOGGEDON_SESSIONS  = 12

    
    'Alias TS_TIME_ZONE_INFORMATION As RTL_TIME_ZONE_INFORMATION
    Public Type TS_TIME_ZONE_INFORMATION
        Bias As Long
        StandardName (0 To 31) As Integer
        StandardDate As TIME_FIELDS
        StandardBias As Long
        DaylightName (0 To 31) As Integer
        DaylightDate As TIME_FIELDS
        DaylightBias As Long
    End Type
    
    
    Public Type VARDATA_WIRE
        Size As Integer
        Offset As Integer
    End Type
 
    Public Enum WINSTATIONSTATECLASS
        State_Active = 0
        State_Connected = 1
        State_ConnectQuery = 2
        State_Shadow = 3
        State_Disconnected = 4
        State_Idle = 5
        State_Listen = 6
        State_Reset = 7
        State_Down = 8
        State_Init = 9
    End Enum
    
    ' typedef WCHAR WINSTATIONNAME[WINSTATIONNAME_LENGTH + 1];
    Public Type SESSIONIDW
        '    union
        '    {
        '        ULONG SessionId;
        '        ULONG LogonId;
        '    };
        SessionOrLogonId As Long
        WinStationName(WINSTATIONNAME_LENGTH) As Integer 'WINSTATIONNAME
        State As WINSTATIONSTATECLASS
    End Type
    
    Public Enum WINSTATIONINFOCLASS
        WinStationCreateData ' WINSTATIONCREATE
        WinStationConfiguration ' WINSTACONFIGWIRE + USERCONFIG
        WinStationPdParams ' PDPARAMS
        WinStationWd ' WDCONFIG
        WinStationPd ' PDCONFIG2 + PDPARAMS
        WinStationPrinter ' Not supported.
        WinStationClient ' WINSTATIONCLIENT
        WinStationModules
        WinStationInformation ' WINSTATIONINFORMATION
        WinStationTrace
        WinStationBeep
        WinStationEncryptionOff
        WinStationEncryptionPerm
        WinStationNtSecurity ' s; (open secure desktop ctrl+alt+del)
        WinStationUserToken ' WINSTATIONUSERTOKEN
        WinStationUnused1
        WinStationVideoData ' WINSTATIONVIDEODATA
        WinStationInitialProgram ' s; (set current process as initial program)
        WinStationCd ' CDCONFIG
        WinStationSystemTrace
        WinStationVirtualData
        WinStationClientData ' WINSTATIONCLIENTDATA
        WinStationSecureDesktopEnter
        WinStationSecureDesktopExit
        WinStationLoadBalanceSessionTarget ' ULONG
        WinStationLoadIndicator ' WINSTATIONLOADINDICATORDATA
        WinStationShadowInfo ' WINSTATIONSHADOW
        WinStationDigProductId ' WINSTATIONPRODID
        WinStationLockedState ' BOOL
        WinStationRemoteAddress ' WINSTATIONREMOTEADDRESS
        WinStationIdleTime ' ULONG
        WinStationLastReconnectType ' ULONG
        WinStationDisallowAutoReconnect ' BOOLEAN
        WinStationMprNotifyInfo
        WinStationExecSrvSystemPipe ' WCHAR[48]
        WinStationSmartCardAutoLogon ' BOOLEAN
        WinStationIsAdminLoggedOn ' BOOLEAN
        WinStationReconnectedFromId ' ULONG
        WinStationEffectsPolicy ' ULONG
        WinStationType ' ULONG
        WinStationInformationEx ' WINSTATIONINFORMATIONEX
        WinStationValidationInfo
    End Enum
        
    Public Type WINSTATIONCREATE
        fEnableWinStation As Long '    ULONG fEnableWinStation : 1;
        MaxInstanceCount As Long
    End Type
    
    Public Type WINSTACONFIGWIRE
        Comment(0 To 60) As Integer ' The WinStation descriptive comment.
        OEMId(0 To 3) As Byte ' Value identifying the OEM implementor of the TermService Listener to which this session (WinStation) belongs. This can be any value defined by the implementer (OEM) of the listener.
        UserConfig As VARDATA_WIRE ' VARDATA_WIRE structure defining the size and offset of the variable-length user configuration data succeeding it.
        NewFields As VARDATA_WIRE ' VARDATA_WIRE structure defining the size and offset of the variable-length new data succeeding it. This field is not used and is a placeholder for any new data, if and when added.
    End Type
    
    Public Enum CALLBACKCLASS
        Callback_Disable
        Callback_Roving
        Callback_Fixed
    End Enum
    
    Public Enum SHADOWCLASS
        Shadow_Disable  ' Shadowing is disabled.
        Shadow_EnableInputNotify   ' Permission is asked first from the session being shadowed. The shadower is also permitted keyboard and mouse input.
        Shadow_EnableInputNoNotify   ' Permission is not asked first from the session being shadowed. The shadower is also permitted keyboard and mouse input.
        Shadow_EnableNoInputNotify   ' Permission is asked first from the session being shadowed. The shadower is not permitted keyboard and mouse input and MUST observe the shadowed session.
        Shadow_EnableNoInputNoNotify   ' Permission is not asked first from the session being shadowed. The shadower is not permitted keyboard and mouse input and MUST observe the shadowed session.
    End Enum
    
    Public Type USERCONFIG
        ' ULONG fInheritAutoLogon : 1;
        ' ULONG fInheritResetBroken : 1;
        ' ULONG fInheritReconnectSame : 1;
        ' ULONG fInheritInitialProgram : 1;
        ' ULONG fInheritCallback : 1;
        ' ULONG fInheritCallbackNumber : 1;
        ' ULONG fInheritShadow : 1;
        ' ULONG fInheritMaxSessionTime : 1;
        ' ULONG fInheritMaxDisconnectionTime : 1;
        ' ULONG fInheritMaxIdleTime : 1;
        ' ULONG fInheritAutoClient : 1;
        ' ULONG fInheritSecurity : 1;
        ' ULONG fPromptForPassword : 1;
        ' ULONG fResetBroken : 1;
        ' ULONG fReconnectSame : 1;
        ' ULONG fLogonDisabled : 1;
        ' ULONG fWallPaperDisabled : 1;
        ' ULONG fAutoClientDrives : 1;
        ' ULONG fAutoClientLpts : 1;
        ' ULONG fForceClientLptDef : 1;
        ' ULONG fRequireEncryption : 1;
        ' ULONG fDisableEncryption : 1;
        ' ULONG fUnused1 : 1;
        ' ULONG fHomeDirectoryMapRoot : 1;
        ' ULONG fUseDefaultGina : 1;
        ' ULONG fCursorBlinkDisabled : 1;
        ' ULONG fPublishedApp : 1;
        ' ULONG fHideTitleBar : 1;
        ' ULONG fMaximize : 1;
        ' ULONG fDisableCpm : 1;
        ' ULONG fDisableCdm : 1;
        ' ULONG fDisableCcm : 1;
        ' ULONG fDisableLPT : 1;
        ' ULONG fDisableClip : 1;
        ' ULONG fDisableExe : 1;
        ' ULONG fDisableCam : 1;
        ' ULONG fDisableAutoReconnect : 1;
        ' ULONG ColorDepth : 3;
        ' ULONG fInheritColorDepth : 1;
        ' ULONG fErrorInvalidProfile : 1;
        ' ULONG fPasswordIsScPin : 1;
        ' ULONG fDisablePNPRedir : 1;
        BitfieldPart1 As Long
        BitfieldPart2 As Long
        UserName(0 To (USERNAME_LENGTH)) As Integer
        Domain(0 To (DOMAIN_LENGTH)) As Integer
        Password(0 To (PASSWORD_LENGTH)) As Integer
        WorkDirectory(0 To (DIRECTORY_LENGTH)) As Integer
        InitialProgram(0 To (INITIALPROGRAM_LENGTH)) As Integer
        CallbackNumber(0 To (CALLBACK_LENGTH)) As Integer
        Callback As CALLBACKCLASS
        Shadow As SHADOWCLASS
        MaxConnectionTime As Long
        MaxDisconnectionTime As Long
        MaxIdleTime As Long
        KeyboardLayout As Long
        MinEncryptionLevel As Byte
        NWLogonServer(0 To (NASIFILESERVER_LENGTH)) As Integer
        PublishedName(0 To (MAX_BR_NAME - 1)) As Integer
        WFProfilePath(0 To (DIRECTORY_LENGTH)) As Integer
        WFHomeDir(0 To (DIRECTORY_LENGTH)) As Integer
        WFHomeDirDrive(0 To 3) As Integer
    End Type

    Public Enum SDCLASS
        SdNone
        SdConsole
        SdNetwork
        SdAsync
        SdOemTransport
    End Enum
    
    Public Type NETWORKCONFIG
        LanAdapter As Long
        NetworkName(DEVICENAME_LENGTH) As Integer 'typedef WCHAR DEVICENAME[DEVICENAME_LENGTH+1];
        Flags As Long
    End Type
    
    Public Enum FLOWCONTROLCLASS
        FlowControl_None
        FlowControl_Hardware
        FlowControl_Software
    End Enum
    Public Enum RECEIVEFLOWCONTROLCLASS
        ReceiveFlowControl_None
        ReceiveFlowControl_RTS
        ReceiveFlowControl_DTR
    End Enum
    Public Enum TRANSMITFLOWCONTROLCLASS
        TransmitFlowControl_None
        TransmitFlowControl_CTS
        TransmitFlowControl_DSR
    End Enum
    Public Enum ASYNCCONNECTCLASS
        Connect_CTS
        Connect_DSR
        Connect_RI
        Connect_DCD
        Connect_FirstChar
        Connect_Perm
    End Enum
    
    Public Type FLOWCONTROLCONFIG
        '    ULONG fEnableSoftwareTx : 1;
        '    ULONG fEnableSoftwareRx : 1;
        '    ULONG fEnableDTR : 1;
        '    ULONG fEnableRTS : 1;
        Bitfield As Long
        XonChar As Byte
        XoffChar As Byte
        Type As FLOWCONTROLCLASS
        HardwareReceive As RECEIVEFLOWCONTROLCLASS
        HardwareTransmit As TRANSMITFLOWCONTROLCLASS
    End Type
    
    Public Type CONNECTCONFIG
        Type As ASYNCCONNECTCLASS
        fEnableBreakDisconnect As Long 'ULONG fEnableBreakDisconnect : 1;
    End Type
    
    ' typedef WCHAR DEVICENAME[DEVICENAME_LENGTH+1];
    ' typedef WCHAR MODEMNAME[MODEMNAME_LENGTH+1];
    Public Type ASYNCCONFIG
        DeviceName(DEVICENAME_LENGTH) As Integer 'DEVICENAME
        ModemName(MODEMNAME_LENGTH) As Integer 'MODEMNAME
        BaudRate As Long
        Parity As Long
        StopBits As Long
        ByteSize As Long
        '    ULONG fEnableDsrSensitivity : 1;
        '    ULONG fConnectionDriver : 1;
        Bitfield As Long
        FlowControl As FLOWCONTROLCONFIG
        Connect As CONNECTCONFIG
    End Type
    
    ' typedef WCHAR NASISPECIFICNAME[NASISPECIFICNAME_LENGTH+1];
    ' typedef WCHAR NASIUSERNAME[NASIUSERNAME_LENGTH+1];
    ' typedef WCHAR NASIPASSWORD[NASIPASSWORD_LENGTH+1];
    ' typedef WCHAR NASISESIONNAME[NASISESSIONNAME_LENGTH+1];
    ' typedef WCHAR NASIFILESERVER[NASIFILESERVER_LENGTH+1];
    Public Type NASICONFIG
        SpecificName(NASISPECIFICNAME_LENGTH) As Integer 'NASISPECIFICNAME
        UserName(NASIUSERNAME_LENGTH) As Integer 'NASIUSERNAME
        PassWord(NASIPASSWORD_LENGTH) As Integer 'NASIPASSWORD
        SessionName(NASISESSIONNAME_LENGTH) As Integer 'NASISESIONNAME
        FileServer(NASIFILESERVER_LENGTH) As Integer 'NASIFILESERVER
        GlobalSession As Byte
    End Type
    
    Public Type OEMTDCONFIG
        Adapter As Long
        DeviceName(DEVICENAME_LENGTH) As Integer 'DEVICENAME
        Flags As Long
    End Type
    
    Public Type PDPARAMS
        SdClass As SDCLASS ' Stack driver class. Indicates which one of the union's structures is valid.
        ' union
        ' {
            ' NETWORKCONFIG Network; // Configuration of network drivers. Used if SdClass is SdNetwork.
            ' ASYNCCONFIG Async; // Configuration of async (modem) driver. Used if SdClass is SdAsync.
            ' NASICONFIG Nasi; // Reserved.
            ' OEMTDCONFIG OemTd; // Configuration of OEM transport driver. Used if SdClass is SdOemTransport.
        ' };
        u(&H233) As Byte
    End Type
    
    ' typedef WCHAR WDNAME[WDNAME_LENGTH+1];
    ' typedef WCHAR WDPREFIX[WDPREFIX_LENGTH+1];
    ' typedef WCHAR CDNAME[CDNAME_LENGTH+1];
    ' typedef WCHAR DLLNAME[DLLNAME_LENGTH+1];
    ' typedef WCHAR PDNAME[PDNAME_LENGTH+1];
    [Description("The WinStation (session) driver configuration.")]
    Public Type WDCONFIG
        WdName(WDNAME_LENGTH) As Integer 'WDNAME ' The descriptive name of the WinStation driver.
        WdDLL(DLLNAME_LENGTH) As Integer 'DLLNAME ' The driver's image name.
        WsxDLL(DLLNAME_LENGTH) As Integer 'DLLNAME ' Used by the Terminal Services service to communicate with the WinStation driver.
        WdFlag As Long ' Driver flags.
        WdInputBufferLength As Long ' Length, in bytes, of the input buffer used by the driver. Defaults to 2048.
        CfgDLL(DLLNAME_LENGTH) As Integer 'DLLNAME ' Configuration DLL used by Terminal Services administrative tools for configuring the driver.
        WdPrefix(WDPREFIX_LENGTH) As Integer 'WDPREFIX ' Used as the prefix of the WinStation name generated for the connected sessions with this WinStation driver.
    End Type
    
    Public Type PDCONFIG2
        PdName(PDNAME_LENGTH) As Integer 'PDNAME
        SdClass As SDCLASS
        PdDLL(DLLNAME_LENGTH) As Integer 'DLLNAME
        PdFlag As Long
        OutBufLength As Long
        OutBufCount As Long
        OutBufDelay As Long
        InteractiveDelay As Long
        PortNumber As Long
        KeepAliveTimeout As Long
    End Type
    

    
    Public Type WINSTATIONCLIENT
        ' ULONG fTextOnly : 1;
        ' ULONG fDisableCtrlAltDel : 1;
        ' ULONG fMouse : 1;
        ' ULONG fDoubleClickDetect : 1;
        ' ULONG fINetClient : 1;
        ' ULONG fPromptForPassword : 1;
        ' ULONG fMaximizeShell : 1;
        ' ULONG fEnableWindowsKey : 1;
        ' ULONG fRemoteConsoleAudio : 1;
        ' ULONG fPasswordIsScPin : 1;
        ' ULONG fNoAudioPlayback : 1;
        ' ULONG fUsingSavedCreds : 1;
        Bitfield As Long
        ClientName(0 To (CLIENTNAME_LENGTH)) As Integer
        Domain(0 To (DOMAIN_LENGTH)) As Integer
        UserName(0 To (USERNAME_LENGTH)) As Integer
        Password(0 To (PASSWORD_LENGTH)) As Integer
        WorkDirectory(0 To (DIRECTORY_LENGTH)) As Integer
        InitialProgram(0 To (INITIALPROGRAM_LENGTH)) As Integer
        SerialNumber As Long
        EncryptionLevel As Byte
        ClientAddressFamily As Long
        ClientAddress(0 To (CLIENTADDRESS_LENGTH)) As Integer
        HRes As Integer
        VRes As Integer
        ColorDepth As Integer
        ProtocolType As Integer
        KeyboardLayout As Long
        KeyboardType As Long
        KeyboardSubType As Long
        KeyboardFunctionKey As Long
        ImeFileName(0 To (IMEFILENAME_LENGTH)) As Integer
        ClientDirectory(0 To (DIRECTORY_LENGTH)) As Integer
        ClientLicense(0 To (CLIENTLICENSE_LENGTH)) As Integer
        ClientModem(0 To (CLIENTMODEM_LENGTH)) As Integer
        ClientBuildNumber As Long
        ClientHardwareId As Long
        ClientProductId As Integer
        OutBufCountHost As Integer
        OutBufCountClient As Integer
        OutBufLength As Integer
        AudioDriverName(0 To 8) As Integer
        ClientTimeZone As TS_TIME_ZONE_INFORMATION
        ClientSessionId As Long
        ClientDigProductId(0 To (CLIENT_PRODUCT_ID_LENGTH - 1)) As Integer
        PerformanceFlags As Long
        ActiveInputLocale As Long
    End Type
    
    Public Type TSHARE_COUNTERS
        Reserved As Long
    End Type
    
    Public Type PROTOCOLCOUNTERS
        WdBytes As Long
        WdFrames As Long
        WaitForOutBuf As Long
        Frames As Long
        Bytes As Long
        CompressedBytes As Long
        CompressFlushes As Long
        Errors As Long
        Timeouts As Long
        AsyncFramingError As Long
        AsyncOverrunError As Long
        AsyncOverflowError As Long
        AsyncParityError As Long
        TdErrors As Long
        ProtocolType As Integer
        Length As Integer
        ' union
        ' {
            ' TSHARE_COUNTERS TShareCounters;
            ' ULONG Reserved[100];
        ' } Specific;
        Specific(24) As Long
    End Type
    
    Public Type THINWIRECACHE
        CacheReads As Long
        CacheHits As Long
    End Type
    
    Public Const MAX_THINWIRECACHE = 4
    
    Public Type RESERVED_CACHE
        ThinWireCache(0 To (MAX_THINWIRECACHE - 1)) As THINWIRECACHE
    End Type
        
    Public Type TSHARE_CACHE
        Reserved As Long
    End Type
    
    Public Type CACHE_STATISTICS
        ProtocolType As Integer
        Length As Integer
        ' union
        ' {
            ' RESERVED_CACHE ReservedCacheStats;
            ' TSHARE_CACHE TShareCacheStats;
            ' ULONG Reserved[20];
        ' } Specific;
        Specific(19) As Long
    End Type
    
    Public Type PROTOCOLSTATUS
        Output As PROTOCOLCOUNTERS
        Input As PROTOCOLCOUNTERS
        Cache As CACHE_STATISTICS
        AsyncSignal As Long
        AsyncSignalMask As Long
    End Type
    
    ' typedef WCHAR WINSTATIONNAME[WINSTATIONNAME_LENGTH+1];
    Public Type WINSTATIONINFORMATION
        ConnectState As WINSTATIONSTATECLASS
        WinStationName(WINSTATIONNAME_LENGTH) As Integer 'WINSTATIONNAME
        LogonId As Long
        ConnectTime As LARGE_INTEGER
        DisconnectTime As LARGE_INTEGER
        LastInputTime As LARGE_INTEGER
        LogonTime As LARGE_INTEGER
        Status As PROTOCOLSTATUS
        Domain(0 To (DOMAIN_LENGTH)) As Integer
        UserName(0 To (USERNAME_LENGTH)) As Integer
        CurrentTime As LARGE_INTEGER
    End Type
    
    Public Type WINSTATIONUSERTOKEN
        ProcessId As LongPtr
        ThreadId As LongPtr
        UserToken As LongPtr
    End Type
    
    Public Type WINSTATIONVIDEODATA
        HResolution As Integer
        VResolution As Integer
        fColorDepth As Integer
    End Type
    
    Public Enum CDCLASS
        CdNone   ' No connection driver.
        CdModem   ' Connection driver is a modem.
        CdClass_Maximum
    End Enum
    
    ' typedef WCHAR CDNAME[CDNAME_LENGTH+1];
    ' typedef WCHAR DLLNAME[DLLNAME_LENGTH+1];
    Public Type CDCONFIG
        CdClass As CDCLASS ' Connection driver type.
        CdName(CDNAME_LENGTH) As Integer 'CDNAME ' Connection driver descriptive name.
        CdDLL(DLLNAME_LENGTH) As Integer 'DLLNAME ' Connection driver image name.
        CdFlag As Long ' Connection driver flags. Connection driver specific.
    End Type
    
    ' typedef CHAR CLIENTDATANAME[CLIENTDATANAME_LENGTH+1];
    ' typedef CHAR* PCLIENTDATANAME;
    Public Type WINSTATIONCLIENTDATA
        DataName(CLIENTDATANAME_LENGTH) As Byte 'CLIENTDATANAME ' Identifies the type of data sent in this WINSTATIONCLIENTDATA structure. The definition is dependent on the caller and on the client receiving it. This MUST be a data name following a format similar to that of the CLIENTDATANAME data type.
        fUnicodeData As Byte ' TRUE indicates data is in Unicode format; FALSE otherwise.
    End Type
    
    Public Enum LOADFACTORTYPE
        ErrorConstraint  ' An error occurred while obtaining constraint data.
        PagedPoolConstraint   ' The amount of paged pool is the constraint.
        NonPagedPoolConstraint   ' The amount of non-paged pool is the constraint.
        AvailablePagesConstraint   ' The amount of available pages is the constraint.
        SystemPtesConstraint   ' The number of system page table entries (PTEs) is the constraint.
        CPUConstraint  ' CPU usage is the constraint.
    End Enum
    
    Public Type WINSTATIONLOADINDICATORDATA
        RemainingSessionCapacity As Long ' The estimated number of additional sessions that can be supported given the CPU constraint.
        LoadFactor As LOADFACTORTYPE ' Indicates the most constrained current resource.
        TotalSessions As Long ' The total number of sessions.
        DisconnectedSessions As Long ' The number of disconnected sessions.
        IdleCPU As LARGE_INTEGER ' This is always set to 0.
        TotalCPU As LARGE_INTEGER ' This is always set to 0.
        RawSessionCapacity As Long ' The raw number of sessions capacity.
        reserved(0 To 8) As Long ' Reserved.
    End Type
    
    Public Enum SHADOWSTATECLASS
        State_NoShadow   ' No shadow operations are currently being performed on this session.
        State_Shadowing   ' The session is shadowing a different session. The current session is referred to as a shadow client.
        State_Shadowed   ' The session is being shadowed by a different session. The current session is referred to as a shadow target.
    End Enum
    
    Public Enum WinstaProtocols
        PROTOCOL_CONSOLE = 0
        PROTOCOL_OTHERS = 1
        PROTOCOL_RDP = 2
    End Enum
    
    Public Type WINSTATIONSHADOW
        ShadowState As SHADOWSTATECLASS ' Specifies the current state of shadowing.
        ShadowClass As SHADOWCLASS ' Specifies the type of shadowing.
        SessionId As Long ' Specifies the session ID of the session.
        ProtocolType As WinstaProtocols ' Specifies the type of protocol on the session. Can be one of PROTOCOL_* values.
    End Type
    
    Public Type WINSTATIONPRODID
        DigProductId(0 To (CLIENT_PRODUCT_ID_LENGTH - 1)) As Integer
        ClientDigProductId(0 To (CLIENT_PRODUCT_ID_LENGTH - 1)) As Integer
        OuterMostDigProductId(0 To (CLIENT_PRODUCT_ID_LENGTH - 1)) As Integer
        CurrentSessionId As Long
        ClientSessionId As Long
        OuterMostSessionId As Long
    End Type
 
    [Description("Union structs available: WinstaRmIPV4, WinstaRmIPV6")]
    Public Type WINSTATIONREMOTEADDRESS
        sin_family As Integer
        ' union
        ' {
            ' struct
            ' {
                ' USHORT sin_port;
                ' ULONG sin_addr;
                ' UCHAR sin_zero[8];
            ' } ipv4;
            ' struct
            ' {
                ' USHORT sin6_port;
                ' ULONG sin6_flowinfo;
                ' USHORT sin6_addr[8];
                ' ULONG sin6_scope_id;
            ' } ipv6;
        ' };
        pad As Integer
        [Description("Union structs available: WinstaRmIPV4, WinstaRmIPV6")]
        u(27) As Byte
    End Type
    Public Type WinstaRmIPV4
        sin_port As Integer
        sin_addr As Long
        sin_zero(7) As Byte
    End Type
    Public Type WinstaRmIPV6
        sin6_port As Integer
        sin6_flowinfo As Long
        sin6_addr(7) As Integer
        sin6_scope_id As Long
    End Type
    
    ' typedef WCHAR WINSTATIONNAME[WINSTATIONNAME_LENGTH+1];
    Public Type WINSTATIONINFORMATIONEX_LEVEL1
        SessionId As Long
        SessionState As WINSTATIONSTATECLASS
        SessionFlags As Long
        WinStationName(WINSTATIONNAME_LENGTH) As Integer 'WINSTATIONNAME
        UserName(USERNAME_LENGTH) As Integer
        DomainName(DOMAIN_LENGTH) As Integer
        LogonTime As LARGE_INTEGER
        ConnectTime As LARGE_INTEGER
        DisconnectTime As LARGE_INTEGER
        LastInputTime As LARGE_INTEGER
        CurrentTime As LARGE_INTEGER
        ProtocolStatus As PROTOCOLSTATUS
    End Type
    Public Type WINSTATIONINFORMATIONEX_LEVEL2
        SessionId As Long
        SessionState As WINSTATIONSTATECLASS
        SessionFlags As Long
        WinStationName(WINSTATIONNAME_LENGTH) As Integer 'WINSTATIONNAME
        SamCompatibleUserName(USERNAME_LENGTH) As Integer
        SamCompatibleDomainName(DOMAIN_LENGTH) As Integer
        LogonTime As LARGE_INTEGER
        ConnectTime As LARGE_INTEGER
        DisconnectTime As LARGE_INTEGER
        LastInputTime As LARGE_INTEGER
        CurrentTime As LARGE_INTEGER
        ProtocolStatus As PROTOCOLSTATUS
        UserName(0 To 256) As Integer
        DomainName(0 To 255) As Integer
    End Type
    
    ' typedef union _WINSTATIONINFORMATIONEX_LEVEL
    ' {
        ' WINSTATIONINFORMATIONEX_LEVEL1 WinStationInfoExLevel1;
        ' WINSTATIONINFORMATIONEX_LEVEL2 WinStationInfoExLevel2;
    ' } WINSTATIONINFORMATIONEX_LEVEL,
    Public Type WINSTATIONINFORMATIONEX_LEVEL
        WinStationInfoExLevel(1639) As Byte
    End Type
    
    Public Type WINSTATIONINFORMATIONEX
        Level As Long
        pad As Long 'Remove after union support
        Data As WINSTATIONINFORMATIONEX_LEVEL
    End Type
    
    Public Const TS_PROCESS_INFO_MAGIC_NT4 = &H23495452
    
    Public Type TS_PROCESS_INFORMATION_NT4
        MagicNumber As Long
        LogonId As Long
        ProcessSid As LongPtr
        Pad As Long
    End Type
        
    Public Type TS_SYS_PROCESS_INFORMATION
        NextEntryOffset As Long
        NumberOfThreads As Long
        SpareLi1 As LARGE_INTEGER
        SpareLi2 As LARGE_INTEGER
        SpareLi3 As LARGE_INTEGER
        CreateTime As LARGE_INTEGER
        UserTime As LARGE_INTEGER
        KernelTime As LARGE_INTEGER
        ImageName As UNICODE_STRING
        BasePriority As KPRIORITY
        UniqueProcessId As Long
        InheritedFromUniqueProcessId As Long
        HandleCount As Long
        SessionId As Long
        SpareUl3 As Long
        PeakVirtualSize As LongPtr
        VirtualSize As LongPtr
        PageFaultCount As Long
        PeakWorkingSetSize As Long
        WorkingSetSize As Long
        QuotaPeakPagedPoolUsage As LongPtr
        QuotaPagedPoolUsage As LongPtr
        QuotaPeakNonPagedPoolUsage As LongPtr
        QuotaNonPagedPoolUsage As LongPtr
        PagefileUsage As LongPtr
        PeakPagefileUsage As LongPtr
        PrivatePageCount As LongPtr
    End Type
        
    Public Type TS_ALL_PROCESSES_INFO
        pTsProcessInfo As LongPtr 'PTS_SYS_PROCESS_INFORMATION
        SizeOfSid As Long
        pSid As LongPtr 'PSID
    End Type
    
    Public Type TS_COUNTER_HEADER
        dwCounterID As Long
        bResult As Byte
    End Type
    
    Public Type TS_COUNTER
        CounterHead As TS_COUNTER_HEADER
        dwValue As Long
        StartTime As LARGE_INTEGER
    End Type
    
    Public Enum WinstaShutdownSystemFlags
        WSD_LOGOFF = &H1
        WSD_SHUTDOWN = &H2
        WSD_REBOOT = &H4
        WSD_POWEROFF = &H8
    End Enum
    
    Public Enum WinstaWaitSysEvtFlags
        WEVENT_NONE = &H0
        WEVENT_CREATE = &H1
        WEVENT_DELETE = &H2
        WEVENT_RENAME = &H4
        WEVENT_CONNECT = &H8
        WEVENT_DISCONNECT = &H10
        WEVENT_LOGON = &H20
        WEVENT_LOGOFF = &H40
        WEVENT_STATECHANGE = &H80
        WEVENT_LICENSE = &H100
        WEVENT_ALL = &H7fffffff
        WEVENT_FLUSH = &H80000000
    End Enum
    
    Public Enum WinstaShadowModifiers
        KBDSHIFT = &H1
        KBDCTRL = &H2
        KBDALT = &H4
    End Enum
    
    Public Enum WinstaRegConsoleNotificationFlags
        WNOTIFY_ALL_SESSIONS = &H1
    End Enum
    
    Public Const LOGONID_CURRENT  = (-1)
    Public Const SERVERNAME_CURRENT As LongPtr = 0 '((PWSTR)NULL)
    
    Public Declare PtrSafe Function WinStationFreeMemory Lib "winsta.dll" (ByVal Buffer As LongPtr) As Byte
    Public Declare PtrSafe Function WinStationOpenServerW Lib "winsta.dll" (ByVal ServerName As LongPtr) As LongPtr
    Public DeclareWide PtrSafe Function WinStationOpenServer Lib "winsta.dll" Alias "WinStationOpenServerW" (ByVal ServerName As String) As LongPtr
    Public Declare PtrSafe Function WinStationCloseServer Lib "winsta.dll" (ByVal ServerHandle As LongPtr) As Byte
    Public Declare PtrSafe Function WinStationServerPing Lib "winsta.dll" (ByVal ServerHandle As LongPtr) As Byte
    Public Declare PtrSafe Function WinStationGetTermSrvCountersValue Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal Count As Long, Counters As TS_COUNTER) As Byte
    Public Declare PtrSafe Function WinStationShutdownSystem Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal ShutdownFlags As WinstaShutdownSystemFlags) As Byte
    Public Declare PtrSafe Function WinStationWaitSystemEvent Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal EventMask As WinstaWaitSysEvtFlags, EventFlags As Long) As Byte
    Public Declare PtrSafe Function WinStationRegisterConsoleNotification Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal WindowHandle As LongPtr, ByVal Flags As Long) As Byte
    Public Declare PtrSafe Function WinStationUnRegisterConsoleNotification Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal WindowHandle As LongPtr) As Byte
    Public Declare PtrSafe Function WinStationEnumerateW Lib "winsta.dll" (ByVal ServerHandle As LongPtr, SessionIds As LongPtr, Count As Long) As Byte
    Public Declare PtrSafe Function WinStationEnumerate Lib "winsta.dll" Alias "WinStationEnumerateW" (ByVal ServerHandle As LongPtr, SessionIds As LongPtr, Count As Long) As Byte
    Public Declare PtrSafe Function WinStationQueryInformationW Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal SessionId As Long, ByVal WinStationInformationClass As WINSTATIONINFOCLASS, pWinStationInformation As Any, ByVal WinStationInformationLength As Long, pReturnLength As Long) As Byte
    Public DeclareWide PtrSafe Function WinStationQueryInformation Lib "winsta.dll" Alias "WinStationQueryInformationW" (ByVal ServerHandle As LongPtr, ByVal SessionId As Long, ByVal WinStationInformationClass As WINSTATIONINFOCLASS, pWinStationInformation As Any, ByVal WinStationInformationLength As Long, pReturnLength As Long) As Byte
    Public Declare PtrSafe Function WinStationSetInformationW Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal SessionId As Long, ByVal WinStationInformationClass As WINSTATIONINFOCLASS, pWinStationInformation As Any, ByVal WinStationInformationLength As Long) As Byte
    Public DeclareWide PtrSafe Function WinStationSetInformation Lib "winsta.dll" Alias "WinStationSetInformationW" (ByVal ServerHandle As LongPtr, ByVal SessionId As Long, ByVal WinStationInformationClass As WINSTATIONINFOCLASS, pWinStationInformation As Any, ByVal WinStationInformationLength As Long) As Byte
    Public Declare PtrSafe Function WinStationNameFromLogonIdW Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal SessionId As Long, ByVal pWinStationName As LongPtr) As Byte
    Public DeclareWide PtrSafe Function WinStationNameFromLogonId Lib "winsta.dll" Alias "WinStationNameFromLogonIdW" (ByVal ServerHandle As LongPtr, ByVal SessionId As Long, ByVal pWinStationName As String) As Byte
    Public Declare PtrSafe Function LogonIdFromWinStationNameW Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal pWinStationName As LongPtr, SessionId As Long) As Byte
    Public DeclareWide PtrSafe Function LogonIdFromWinStationName Lib "winsta.dll" Alias "LogonIdFromWinStationNameW" (ByVal ServerHandle As LongPtr, ByVal pWinStationName As String, SessionId As Long) As Byte
    Public Declare PtrSafe Function WinStationSendMessageW Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal SessionId As Long, ByVal Title As LongPtr, ByVal TitleLength As Long, ByVal Message As LongPtr, ByVal MessageLength As Long, ByVal Style As Long, ByVal Timeout As Long, Response As Long, ByVal DoNotWait As Byte) As Byte
    Public DeclareWide PtrSafe Function WinStationSendMessage Lib "winsta.dll" Alias "WinStationSendMessageW" (ByVal ServerHandle As LongPtr, ByVal SessionId As Long, ByVal Title As String, ByVal TitleLength As Long, ByVal Message As String, ByVal MessageLength As Long, ByVal Style As Long, ByVal Timeout As Long, Response As Long, ByVal DoNotWait As Byte) As Byte
    Public Declare PtrSafe Function WinStationConnectW Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal SessionId As Long, ByVal TargetSessionId As Long, ByVal pPassword As LongPtr, ByVal bWait As Byte) As Byte
    Public DeclareWide PtrSafe Function WinStationConnect Lib "winsta.dll" Alias "WinStationConnectW" (ByVal ServerHandle As LongPtr, ByVal SessionId As Long, ByVal TargetSessionId As Long, ByVal pPassword As String, ByVal bWait As Byte) As Byte
    Public Declare PtrSafe Function WinStationDisconnect Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal SessionId As Long, ByVal bWait As Byte) As Byte
    Public Declare PtrSafe Function WinStationReset Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal SessionId As Long, ByVal bWait As Byte) As Byte
    Public Declare PtrSafe Function WinStationShadow Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal TargetServerName As LongPtr, ByVal TargetSessionId As Long, ByVal HotKeyVk As Byte, [TypeHint(WinstaShadowModifiers)] ByVal HotkeyModifiers As Integer) As Byte
    Public Declare PtrSafe Function WinStationShadowStop Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal SessionId As Long, ByVal bWait As Byte) As Byte
    Public Declare PtrSafe Function WinStationEnumerateProcesses Lib "winsta.dll" (ByVal ServerHandle As LongPtr, Processes As LongPtr) As Byte
    Public Declare PtrSafe Function WinStationGetAllProcesses Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal Level As Long, NumberOfProcesses As Long, Processes As LongPtr) As Byte
    Public Declare PtrSafe Function WinStationFreeGAPMemory Lib "winsta.dll" (ByVal Level As Long, ByVal Processes As LongPtr, ByVal NumberOfProcesses As Long) As Byte
    Public Declare PtrSafe Function WinStationTerminateProcess Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal ProcessId As Long, ByVal ExitCode As Long) As Byte
    Public Declare PtrSafe Function WinStationGetProcessSid Lib "winsta.dll" (ByVal ServerHandle As LongPtr, ByVal ProcessId As Long, ByVal ProcessStartTime As LongLong /* FILETIME */, ByVal pProcessUserSid As LongPtr, dwSidSize As Long) As Byte
    Public Declare PtrSafe Function WinStationSwitchToServicesSession Lib "winsta.dll" () As Byte
    Public Declare PtrSafe Function WinStationRevertFromServicesSession Lib "winsta.dll" () As Byte
    Public Declare PtrSafe Function _WinStationWaitForConnect Lib "winsta.dll" () As Byte
       
    
    
    
    
End Module
#End If