'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'WinDevLib - wdAPI :: API Function Declarations

'Note: This is the central API module, but does not cover all APIs:
    'wininet, wnet, winsock, websocket, winhttp, iphlpapi, urlmon.dll and hlink.dll APIs are in wdInternet.twin. 
    'advapi32 crypto APIs, wincrypt, wincred, wintrust, cryptui, bcrypt, and ncrypt are in wdAPICrypto.twin.
    'comctl32.dll, dwmapi.dll, and uxtheme.dll APIs are in wdAPIComCtl, along with the common control APIs from user32. 
    'GDIPlus APIs are in wdGDIP
    'dbghelp/imagehlp APIs are in wdAPIDbgHlp.twin
    'HID apis are in wdAPIHID.twin
    'Windows Filtering Platform APIs are in wdAPIWFP.twin
    'Windows Biometric Framework APIs in wdAPIBio.twin
    'Media Foundation DLLs have their APIs in wdMF.twin
    'Webview2Loader.dll APIs are in wdWebview2. 
    'Cloud Filter APIs are in wdAPICld.twin
    'Bluetooth APIs are in wdAPIBluetooth.twin
    'WLAN APIs are in wdAPIWLAN.twin
    'A few other very small sets for specific features are in their modules.
    
    
#If WINDEVLIB_LITE = 0 Then
Module wdAPI

#Region "shell32"
'*************************************************************************
'shell32.dll

#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Public Type SHQUERYRBINFO
	cbSize As Long
	i64Size As LongLong
	i64NumItems As LongLong
End Type

Public Enum SHERB_Flags
	SHERB_NOCONFIRMATION = &H00000001
	SHERB_NOPROGRESSUI = &H00000002
	SHERB_NOSOUND = &H00000004
End Enum

Public Enum QUERY_USER_NOTIFICATION_STATE
	QUNS_NOT_PRESENT = 1 ' The user is not present.  Heuristic check for modes like: screen saver, locked machine, non-active FUS session
	QUNS_BUSY = 2 ' The user is busy.  Heuristic check for modes like: full-screen app
	QUNS_RUNNING_D3D_FULL_SCREEN = 3 ' full-screen (exlusive-mode) D3D app
	QUNS_PRESENTATION_MODE = 4 ' Windows presentation mode (laptop feature) is turned on
	QUNS_ACCEPTS_NOTIFICATIONS = 5 ' notifications can be freely sent
	' #if (NTDDI_WIN7)
	QUNS_QUIET_TIME = 6 ' We are in OOBE quiet period
	' #endif
	' #if (NTDDI_WIN8)
	QUNS_APP = 7 ' App-mode application
	' #endif
End Enum

Public Type SHCNF_PRINTJOB_DATA
	JobId As Long
	Status As Long
	TotalPages As Long
	Size As Long
	PagesPrinted As Long
End Type

Public Enum SCNRT_STATUS
	SCNRT_ENABLE = 0
	SCNRT_DISABLE = 1
End Enum

Public Enum SHGDFIL_Format
	SHGDFIL_FINDDATA = &H1 'Format used for file system objects.The pv parameter is the address of a WIN32_FIND_DATA structure.
	SHGDFIL_NETRESOURCE = &H2 'Format used for network resources.The pv parameter is the address of a NETRESOURCE structure.
	SHGDFIL_DESCRIPTIONID = &H3 'Version 4.71.Format used for network resources.The pv parameter is the address of an SHDESCRIPTIONID structure.
End Enum
Public Enum ShellDescriptionId
    SHDID_ROOT_REGITEM = 1
    SHDID_FS_FILE = 2
    SHDID_FS_DIRECTORY = 3
    SHDID_FS_OTHER = 4
    SHDID_COMPUTER_DRIVE35 = 5
    SHDID_COMPUTER_DRIVE525 = 6
    SHDID_COMPUTER_REMOVABLE = 7
    SHDID_COMPUTER_FIXED = 8
    SHDID_COMPUTER_NETDRIVE = 9
    SHDID_COMPUTER_CDROM = 10
    SHDID_COMPUTER_RAMDISK = 11
    SHDID_COMPUTER_OTHER = 12
    SHDID_NET_DOMAIN = 13
    SHDID_NET_SERVER = 14
    SHDID_NET_SHARE = 15
    SHDID_NET_RESTOFNET = 16
    SHDID_NET_OTHER = 17
' #if (NTDDI_VERSION >= NTDDI_WINXP)
    SHDID_COMPUTER_IMAGING = 18
    SHDID_COMPUTER_AUDIO = 19
    SHDID_COMPUTER_SHAREDDOCS = 20
' #endif
' #if (NTDDI_VERSION >= NTDDI_VISTA)
    SHDID_MOBILE_DEVICE = 21  ' PDA/PalmPC
' #endif
' #if (NTDDI_VERSION >= NTDDI_WIN10_RS4)
    SHDID_REMOTE_DESKTOP_DRIVE = 22
End Enum
Public Type SHDESCRIPTIONID
    dwDescriptionId As ShellDescriptionId
    clsid As UUID
End Type

Public Const REGSTR_PATH_SPECIAL_FOLDERS = "\Shell Folders"

Public Enum GPFIDL_FLAGS
    GPFIDL_DEFAULT = &H0000 ' normal Win32 file name, servers and drive roots included
    GPFIDL_ALTNAME = &H0001 ' short file name
    GPFIDL_UNCPRINTER = &H0002 ' include UNC printer names too (non file system item)
End Enum


Public Enum ASSOC_FILTER
    ASSOC_FILTER_NONE = 0
    ASSOC_FILTER_RECOMMENDED = 1
End Enum

Public Enum DATAOBJ_GET_ITEM_FLAGS
    DOGIF_DEFAULT = &H0
    DOGIF_TRAVERSE_LINK = &H1
    DOGIF_NO_HDROP = &H2
    DOGIF_NO_URL = &H4
    DOGIF_ONLY_IF_ONE = &H8
End Enum

Public Enum SHGSFCS_Mask
    FCSM_VIEWID = &H00000001  '  / / deprecated
    FCSM_WEBVIEWTEMPLATE = &H00000002  '// deprecated
    FCSM_INFOTIP = &H00000004
    FCSM_CLSID = &H00000008
    FCSM_ICONFILE = &H00000010
    FCSM_LOGO = &H00000020
    FCSM_FLAGS = &H00000040
End Enum
Public Enum SHGSFCS_Flags
    FCS_FLAG_DRAGDROP = 2
End Enum
Public Enum FCS_RW
    FCS_READ = &H1
    FCS_FORCEWRITE = &H2
    FCS_WRITE = FCS_READ Or FCS_FORCEWRITE
End Enum

Public Type SHFOLDERCUSTOMSETTINGS
    dwSize As Long
    dwMask As SHGSFCS_Mask ' IN/OUT  Which Attributes to Get/Set
    pvid As LongPtr 'SHELLVIEWID*  OUT - if dwReadWrite is FCS_READ, IN - otherwise
    ' The folder's WebView template path
    pszWebViewTemplate As LongPtr ' OUT - if dwReadWrite is FCS_READ, IN - otherwise
    cchWebViewTemplate As Long ' IN - Specifies the size of the buffer pointed to by pszWebViewTemplate
    ' Ignored if dwReadWrite is FCS_READ
    pszWebViewTemplateVersion As LongPtr ' currently IN only
    ' Infotip for the folder
    pszInfoTip As LongPtr ' OUT - if dwReadWrite is FCS_READ, IN - otherwise
    cchInfoTip As Long ' IN - Specifies the size of the buffer pointed to by pszInfoTip
    ' Ignored if dwReadWrite is FCS_READ
    ' CLSID that points to more info in the registry
    pclsid As UUID ' OUT - if dwReadWrite is FCS_READ, IN - otherwise
    ' Other flags for the folder. Takes FCS_FLAG_* values
    dwFlags As SHGSFCS_Flags ' OUT - if dwReadWrite is FCS_READ, IN - otherwise
    pszIconFile As LongPtr ' OUT - if dwReadWrite is FCS_READ, IN - otherwise
    cchIconFile As Long ' IN - Specifies the size of the buffer pointed to by pszIconFile
    ' Ignored if dwReadWrite is FCS_READ
    iIconIndex As Long ' OUT - if dwReadWrite is FCS_READ, IN - otherwise
    pszLogo As LongPtr ' OUT - if dwReadWrite is FCS_READ, IN - otherwise
    cchLogo As Long ' IN - Specifies the size of the buffer pointed to by pszIconFile
    ' Ignored if dwReadWrite is FCS_READ
End Type

' typedef int (CALLBACK* BFFCALLBACK)(HWND hwnd, UINT uMsg, LPARAM lParam, LPARAM lpData);
Public Delegate Function BrowseCallbackProc (ByVal hWnd As LongPtr, ByVal uMsg As Long, ByVal lParam As LongPtr, ByVal lpData As LongPtr) As Long

' Public Type BROWSEINFOA
' 	hwndOwner As LongPtr
' 	pidlRoot As LongPtr
' 	pszDisplayName As String ' Return display name of item selected.
' 	lpszTitle As String ' text to go in the banner over the tree.
' 	ulFlags As BFF_Flags ' Flags that control the return stuff
' 	lpfn As BrowseCallbackProc
' 	lParam As LongPtr ' extra info that's passed back in callbacks
' 	iImage As Long ' output var: where to return the Image index.
' End Type
' Public Type BROWSEINFOW
' 	hwndOwner As LongPtr
' 	pidlRoot As LongPtr
' 	pszDisplayName As LongPtr ' Return display name of item selected.
' 	lpszTitle As LongPtr ' text to go in the banner over the tree.
' 	ulFlags As BFF_Flags ' Flags that control the return stuff
' 	lpfn As BrowseCallbackProc
' 	lParam As LongPtr ' extra info that's passed back in callbacks
' 	iImage As Long ' output var: where to return the Image index.
' End Type
' Public Type BROWSEINFO
' 	hwndOwner As LongPtr
' 	pidlRoot As LongPtr
' 	pszDisplayName As LongPtr ' Return display name of item selected.
' 	lpszTitle As LongPtr ' text to go in the banner over the tree.
' 	ulFlags As BFF_Flags ' Flags that control the return stuff
' 	lpfn As BrowseCallbackProc
' 	lParam As LongPtr ' extra info that's passed back in callbacks
' 	iImage As Long ' output var: where to return the Image index.
' End Type
Public Type BROWSEINFOA
    hwndOwner As LongPtr
    pidlRoot As LongPtr
    pszDisplayName As String ' Return display name of item selected.
    lpszTitle As String ' text to go in the banner over the tree.
    ulFlags As BFF_Flags ' Flags that control the return stuff
    lpfn As LongPtr
    lParam As LongPtr ' extra info that's passed back in callbacks
    iImage As Long ' output var: where to return the Image index.
End Type
Public Type BROWSEINFOW
    hwndOwner As LongPtr
    pidlRoot As LongPtr
    pszDisplayName As LongPtr ' Return display name of item selected.
    lpszTitle As LongPtr ' text to go in the banner over the tree.
    ulFlags As BFF_Flags ' Flags that control the return stuff
    lpfn As LongPtr
    lParam As LongPtr ' extra info that's passed back in callbacks
    iImage As Long ' output var: where to return the Image index.
End Type
Public Type BROWSEINFO
    hwndOwner As LongPtr
    pidlRoot As LongPtr
    pszDisplayName As LongPtr ' Return display name of item selected.
    lpszTitle As LongPtr ' text to go in the banner over the tree.
    ulFlags As BFF_Flags ' Flags that control the return stuff
    lpfn As LongPtr
    lParam As LongPtr ' extra info that's passed back in callbacks
    iImage As Long ' output var: where to return the Image index.
End Type

Public Enum BFF_Flags
	BIF_RETURNONLYFSDIRS = &H00000001  ' For finding a folder to start document searching
	BIF_DONTGOBELOWDOMAIN = &H00000002  ' For starting the Find Computer
	BIF_STATUSTEXT = &H00000004  ' Top of the dialog has 2 lines of text for BROWSEINFO.lpszTitle and one line if
'  this flag is set.  Passing the message BFFM_SETSTATUSTEXTA to the hwnd can set the
'  rest of the text.  This is not used with BIF_USENEWUI and BROWSEINFO.lpszTitle gets
'  all three lines of text.
	BIF_RETURNFSANCESTORS = &H00000008
	BIF_EDITBOX = &H00000010  ' Add an editbox to the dialog
	BIF_VALIDATE = &H00000020  ' insist on valid result (or CANCEL)
	BIF_NEWDIALOGSTYLE = &H00000040  ' Use the new dialog layout with the ability to resize
'  Caller needs to call OleInitialize() before using this API
	BIF_USENEWUI = (BIF_NEWDIALOGSTYLE Or BIF_EDITBOX)
	BIF_BROWSEINCLUDEURLS = &H00000080  ' Allow URLs to be displayed or entered. (Requires BIF_USENEWUI)
	BIF_UAHINT = &H00000100  ' Add a UA hint to the dialog, in place of the edit box. May not be combined with BIF_EDITBOX
	BIF_NONEWFOLDERBUTTON = &H00000200  ' Do not add the "New Folder" button to the dialog.  Only applicable with BIF_NEWDIALOGSTYLE.
	BIF_NOTRANSLATETARGETS = &H00000400  ' don't traverse target as shortcut
	BIF_BROWSEFORCOMPUTER = &H00001000  ' Browsing for Computers.
	BIF_BROWSEFORPRINTER = &H00002000  ' Browsing for Printers
	BIF_BROWSEINCLUDEFILES = &H00004000  ' Browsing for Everything
	BIF_SHAREABLE = &H00008000&  ' sharable resources displayed (remote shares, requires BIF_USENEWUI)
	BIF_BROWSEFILEJUNCTIONS = &H00010000  ' allow folder junctions like zip files and libraries to be browsed
End Enum
' messages from browser
Public Const BFFM_INITIALIZED  = 1
Public Const BFFM_SELCHANGED  = 2
Public Const BFFM_VALIDATEFAILEDA  = 3  ' lParam:szPath ret:1(cont),0(EndDialog)
Public Const BFFM_VALIDATEFAILEDW  = 4  ' lParam:wzPath ret:1(cont),0(EndDialog)
Public Const BFFM_IUNKNOWN  = 5  ' provides IUnknown to client. lParam: IUnknown*
'  messages to browser
Public Const BFFM_SETSTATUSTEXTA  = (WM_USER + 100)
Public Const BFFM_ENABLEOK  = (WM_USER + 101)
Public Const BFFM_SETSELECTIONA  = (WM_USER + 102)
Public Const BFFM_SETSELECTIONW  = (WM_USER + 103)
Public Const BFFM_SETSTATUSTEXTW  = (WM_USER + 104)
Public Const BFFM_SETOKTEXT  = (WM_USER + 105)  ' Unicode only
Public Const BFFM_SETEXPANDED  = (WM_USER + 106)  ' Unicode only
Public Const BFFM_SETSTATUSTEXT  = BFFM_SETSTATUSTEXTW
Public Const BFFM_SETSELECTION  = BFFM_SETSELECTIONW
Public Const BFFM_VALIDATEFAILED = BFFM_VALIDATEFAILEDW

Public Enum ILCFP_FLAGS
	ILCFP_FLAG_NORMAL = &H0000
	ILCFP_FLAG_SKIPJUNCTIONS = &H0001
	ILCFP_FLAG_NO_MAP_ALIAS = &H0002
End Enum

Public Type SHSTOCKICONINFO
	cbSize As Long
    hIcon As Long
    iSysImageIndex As Long
    iIcon As Long
    szPath(0 To (MAX_PATH - 1)) As Integer
End Type

Public Enum StockIconInfoFlags
	SHGSI_ICONLOCATION = 0  ' you always get the icon location
	SHGSI_ICON = SHGFI_ICON
	SHGSI_SYSICONINDEX = SHGFI_SYSICONINDEX
	SHGSI_LINKOVERLAY = SHGFI_LINKOVERLAY
	SHGSI_SELECTED = SHGFI_SELECTED
	SHGSI_LARGEICON = SHGFI_LARGEICON
	SHGSI_SMALLICON = SHGFI_SMALLICON
	SHGSI_SHELLICONSIZE = SHGFI_SHELLICONSIZE
End Enum
Public Enum SHSTOCKICONID
	SIID_DOCNOASSOC = 0 ' document (blank page), no associated program
	SIID_DOCASSOC = 1 ' document with an associated program
	SIID_APPLICATION = 2 ' generic application with no custom icon
	SIID_FOLDER = 3 ' folder (closed)
	SIID_FOLDEROPEN = 4 ' folder (open)
	SIID_DRIVE525 = 5 ' 5.25" floppy disk drive
	SIID_DRIVE35 = 6 ' 3.5" floppy disk drive
	SIID_DRIVEREMOVE = 7 ' removable drive
	SIID_DRIVEFIXED = 8 ' fixed (hard disk) drive
	SIID_DRIVENET = 9 ' network drive
	SIID_DRIVENETDISABLED = 10 ' disconnected network drive
	SIID_DRIVECD = 11 ' CD drive
	SIID_DRIVERAM = 12 ' RAM disk drive
	SIID_WORLD = 13 ' entire network
	SIID_SERVER = 15 ' a computer on the network
	SIID_PRINTER = 16 ' printer
	SIID_MYNETWORK = 17 ' My network places
	SIID_FIND = 22 ' Find
	SIID_HELP = 23 ' Help
	SIID_SHARE = 28 ' overlay for shared items
	SIID_LINK = 29 ' overlay for shortcuts to items
	SIID_SLOWFILE = 30 ' overlay for slow items
	SIID_RECYCLER = 31 ' empty recycle bin
	SIID_RECYCLERFULL = 32 ' full recycle bin
	SIID_MEDIACDAUDIO = 40 ' Audio CD Media
	SIID_LOCK = 47 ' Security lock
	SIID_AUTOLIST = 49 ' AutoList
	SIID_PRINTERNET = 50 ' Network printer
	SIID_SERVERSHARE = 51 ' Server share
	SIID_PRINTERFAX = 52 ' Fax printer
	SIID_PRINTERFAXNET = 53 ' Networked Fax Printer
	SIID_PRINTERFILE = 54 ' Print to File
	SIID_STACK = 55 ' Stack
	SIID_MEDIASVCD = 56 ' SVCD Media
	SIID_STUFFEDFOLDER = 57 ' Folder containing other items
	SIID_DRIVEUNKNOWN = 58 ' Unknown drive
	SIID_DRIVEDVD = 59 ' DVD Drive
	SIID_MEDIADVD = 60 ' DVD Media
	SIID_MEDIADVDRAM = 61 ' DVD-RAM Media
	SIID_MEDIADVDRW = 62 ' DVD-RW Media
	SIID_MEDIADVDR = 63 ' DVD-R Media
	SIID_MEDIADVDROM = 64 ' DVD-ROM Media
	SIID_MEDIACDAUDIOPLUS = 65 ' CD+ (Enhanced CD) Media
	SIID_MEDIACDRW = 66 ' CD-RW Media
	SIID_MEDIACDR = 67 ' CD-R Media
	SIID_MEDIACDBURN = 68 ' Burning CD
	SIID_MEDIABLANKCD = 69 ' Blank CD Media
	SIID_MEDIACDROM = 70 ' CD-ROM Media
	SIID_AUDIOFILES = 71 ' Audio files
	SIID_IMAGEFILES = 72 ' Image files
	SIID_VIDEOFILES = 73 ' Video files
	SIID_MIXEDFILES = 74 ' Mixed files
	SIID_FOLDERBACK = 75 ' Folder back
	SIID_FOLDERFRONT = 76 ' Folder front
	SIID_SHIELD = 77 ' Security shield. Use for UAC prompts only.
	SIID_WARNING = 78 ' Warning
	SIID_INFO = 79 ' Informational
	SIID_ERROR = 80 ' Error
	SIID_KEY = 81 ' Key / Secure
	SIID_SOFTWARE = 82 ' Software
	SIID_RENAME = 83 ' Rename
	SIID_DELETE = 84 ' Delete
	SIID_MEDIAAUDIODVD = 85 ' Audio DVD Media
	SIID_MEDIAMOVIEDVD = 86 ' Movie DVD Media
	SIID_MEDIAENHANCEDCD = 87 ' Enhanced CD Media
	SIID_MEDIAENHANCEDDVD = 88 ' Enhanced DVD Media
	SIID_MEDIAHDDVD = 89 ' HD-DVD Media
	SIID_MEDIABLURAY = 90 ' BluRay Media
	SIID_MEDIAVCD = 91 ' VCD Media
	SIID_MEDIADVDPLUSR = 92 ' DVD+R Media
	SIID_MEDIADVDPLUSRW = 93 ' DVD+RW Media
	SIID_DESKTOPPC = 94 ' desktop computer
	SIID_MOBILEPC = 95 ' mobile computer (laptop/notebook)
	SIID_USERS = 96 ' users
	SIID_MEDIASMARTMEDIA = 97 ' Smart Media
	SIID_MEDIACOMPACTFLASH = 98 ' Compact Flash
	SIID_DEVICECELLPHONE = 99 ' Cell phone
	SIID_DEVICECAMERA = 100 ' Camera
	SIID_DEVICEVIDEOCAMERA = 101 ' Video camera
	SIID_DEVICEAUDIOPLAYER = 102 ' Audio player
	SIID_NETWORKCONNECT = 103 ' Connect to network
	SIID_INTERNET = 104 ' Internet
	SIID_ZIPFILE = 105 ' ZIP file
	SIID_SETTINGS = 106 ' Settings
	'  107-131 are internal Vista RTM icons
	'  132-159 for SP1 icons
	SIID_DRIVEHDDVD = 132 ' HDDVD Drive (all types)
	SIID_DRIVEBD = 133 ' BluRay Drive (all types)
	SIID_MEDIAHDDVDROM = 134 ' HDDVD-ROM Media
	SIID_MEDIAHDDVDR = 135 ' HDDVD-R Media
	SIID_MEDIAHDDVDRAM = 136 ' HDDVD-RAM Media
	SIID_MEDIABDROM = 137 ' BluRay ROM Media
	SIID_MEDIABDR = 138 ' BluRay R Media
	SIID_MEDIABDRE = 139 ' BluRay RE Media (Rewriable and RAM)
	SIID_CLUSTEREDDRIVE = 140 ' Clustered disk
	'  160+ are for Windows 7 icons
	SIID_MAX_ICONS = 181
End Enum

Public Enum SHFileOpErrors
	DE_SAMEFILE = &H71
	DE_MANYSRC1DEST = &H72
	DE_DIFFDIR = &H73
	DE_ROOTDIR = &H74
	DE_OPCANCELLED = &H75
	DE_DESTSUBTREE = &H76
	DE_ACCESSDENIEDSRC = &H78
	DE_PATHTOODEEP = &H79
	DE_MANYDEST = &H7A
	DE_INVALIDFILES = &H7C
	DE_DESTSAMETREE = &H7D
	DE_FLDDESTISFILE = &H7E
	DE_FILEDESTISFLD = &H80
	DE_FILENAMETOOLONG = &H81
	DE_DEST_IS_CDROM = &H82
	DE_DEST_IS_DVD = &H83
	DE_DEST_IS_CDRECORD = &H84
	DE_FILE_TOO_LARGE = &H85
	DE_SRC_IS_CDROM = &H86
	DE_SRC_IS_DVD = &H87
	DE_SRC_IS_CDRECORD = &H88
    ERRORONDEST = &H10000
End Enum

Public Enum SHARD
    SHARD_PIDL = &H00000001
    SHARD_PATHA = &H00000002
    SHARD_PATHW = &H00000003
    SHARD_PATH = &H00000003
    ' #if (NTDDI_VERSION >= NTDDI_WIN7)
    SHARD_APPIDINFO = &H00000004 ' indicates the data type is a pointer to a SHARDAPPIDINFO structure
    SHARD_APPIDINFOIDLIST = &H00000005 ' indicates the data type is a pointer to a SHARDAPPIDINFOIDLIST structure
    SHARD_LINK = &H00000006 ' indicates the data type is a pointer to an IShellLink instance
    SHARD_APPIDINFOLINK = &H00000007 ' indicates the data type is a pointer to a SHARDAPPIDINFOLINK structure
    SHARD_SHELLITEM = &H00000008 ' indicates the data type is a pointer to an IShellItem instance
    ' #endif
End Enum

Public Type SHARDAPPIDINFO
    psi As IShellItem ' The namespace location of the the item that should be added to the recent docs folder.
    pszAppID As LongPtr  ' The id of the application that should be associated with this recent doc.
End Type
Public Type SHARDAPPIDINFOIDLIST
    pidl As Long ' The idlist for the shell item that should be added to the recent docs folder.
    pszAppID As LongPtr  ' The id of the application that should be associated with this recent doc.
End Type
Public Type SHARDAPPIDINFOLINK
    psl As IShellLinkW ' An IShellLink instance that when launched opens a recently used item in the specified
    ' application. This link is not added to the recent docs folder, but will be added to the
    ' specified application's destination list.
    pszAppID As LongPtr  ' The id of the application that should be associated with this recent doc.
End Type

[PackingAlignment(1)]
Public Type SHChangeUpdateImageIDList
    cb As Integer
    iIconIndex As Long
    iCurIndex As Long
    uFlags As GILFlags
    dwProcessID As Long
    szName(0 To (MAX_PATH - 1)) As Integer
    cbZero As Integer
End Type

Public Enum PCS_RESULT
    PCS_FATAL = &H80000000
    PCS_REPLACEDCHAR = &H00000001
    PCS_REMOVEDCHAR = &H00000002
    PCS_TRUNCATED = &H00000004
    PCS_PATHTOOLONG = &H00000008  ' Always combined with FATAL
End Enum

Public Enum SHGFP_TYPE
    SHGFP_TYPE_CURRENT = 0 ' current value for user, verify it exists
    SHGFP_TYPE_DEFAULT = 1 ' default value, may not exist
End Enum

Public Enum SHAppBarMessages
    ABM_NEW = &H00000000
    ABM_REMOVE = &H00000001
    ABM_QUERYPOS = &H00000002
    ABM_SETPOS = &H00000003
    ABM_GETSTATE = &H00000004
    ABM_GETTASKBARPOS = &H00000005
    ABM_ACTIVATE = &H00000006  ' lParam == TRUE/FALSE means activate/deactivate
    ABM_GETAUTOHIDEBAR = &H00000007
    ABM_SETAUTOHIDEBAR = &H00000008  ' this can fail at any time.  MUST check the result
'  lParam = TRUE/FALSE  Set/Unset
'  uEdge = what edge
    ABM_WINDOWPOSCHANGED = &H0000009
    ABM_SETSTATE = &H0000000a
' #if (NTDDI_VERSION >= NTDDI_WIN8)
    ABM_GETAUTOHIDEBAREX = &H0000000b  ' multimon aware autohide bars
    ABM_SETAUTOHIDEBAREX = &H0000000c
' #endif
End Enum
Public Enum SHAppBarCBwParam
    ABN_STATECHANGE = &H0000000
    ABN_POSCHANGED = &H0000001
    ABN_FULLSCREENAPP = &H0000002
    ABN_WINDOWARRANGE = &H0000003  ' lParam == TRUE means hide
End Enum
Public Enum SHAppBarState
    ABS_AUTOHIDE = &H0000001
    ABS_ALWAYSONTOP = &H0000002
End Enum
Public Enum SHAppBarEdge
    ABE_LEFT = 0
    ABE_TOP = 1
    ABE_RIGHT = 2
    ABE_BOTTOM = 3
End Enum
Public Type APPBARDATA
    cbSize As Long
    hWnd As LongPtr
    uCallbackMessage As Long
    uEdge As SHAppBarEdge
    rc As RECT
    lParam As LongPtr ' message specific
End Type

Public Const OI_DEFAULT  = &H00000000
Public Const OI_ASYNC  = &HFFFFEEEE

Public Enum OverlayIconIndexDefaults
    IDO_SHGIOI_SHARE = &H0FFFFFFF
    IDO_SHGIOI_LINK = &H0FFFFFFE
    IDO_SHGIOI_SLOWFILE = &H0FFFFFFFD
    IDO_SHGIOI_DEFAULT = &H0FFFFFFFC
End Enum


Public Const SIID_INVALID As Long = &HFFFFFFFF

Public Enum SHELLKEY
    SKROOT_HKCU = &H00000001 '  internal to the function
    SKROOT_HKLM = &H00000002 '  internal to the function
    SKROOT_MASK = &H0000000F '  internal to the function
    SKPATH_EXPLORER = &H00000000 '  internal to the function
    SKPATH_SHELL = &H00000010 '  internal to the function
    SKPATH_SHELLNOROAM = &H00000020 '  internal to the function
    SKPATH_CLASSES = &H00000030 '  internal to the function
    SKPATH_MASK = &H00000FF0 '  internal to the function
    SKSUB_NONE = &H00000000 '  internal to the function
    SKSUB_LOCALIZEDNAMES = &H00001000 '  internal to the function
    SKSUB_HANDLERS = &H00002000 '  internal to the function
    SKSUB_ASSOCIATIONS = &H00003000 '  internal to the function
    SKSUB_VOLATILE = &H00004000 '  internal to the function
    SKSUB_MUICACHE = &H00005000 '  internal to the function
    SKSUB_FILEEXTS = &H00006000 '  internal to the function
    SKSUB_MASK = &H000FF000 '  internal to the function
    SHELLKEY_HKCU_EXPLORER = SKROOT_HKCU Or SKPATH_EXPLORER Or SKSUB_NONE
    SHELLKEY_HKLM_EXPLORER = SKROOT_HKLM Or SKPATH_EXPLORER Or SKSUB_NONE
    SHELLKEY_HKCU_SHELL = SKROOT_HKCU Or SKPATH_SHELL Or SKSUB_NONE
    SHELLKEY_HKLM_SHELL = SKROOT_HKLM Or SKPATH_SHELL Or SKSUB_NONE
    SHELLKEY_HKCU_SHELLNOROAM = SKROOT_HKCU Or SKPATH_SHELLNOROAM Or SKSUB_NONE
    SHELLKEY_HKCULM_SHELL = SHELLKEY_HKCU_SHELLNOROAM
    SHELLKEY_HKCULM_CLASSES = SKROOT_HKCU Or SKPATH_CLASSES Or SKSUB_NONE
    SHELLKEY_HKCU_LOCALIZEDNAMES = SKROOT_HKCU Or SKPATH_SHELL Or SKSUB_LOCALIZEDNAMES
    SHELLKEY_HKCULM_HANDLERS = SKROOT_HKCU Or SKPATH_SHELLNOROAM Or SKSUB_HANDLERS
    SHELLKEY_HKCULM_ASSOCIATIONS = SKROOT_HKCU Or SKPATH_SHELLNOROAM Or SKSUB_ASSOCIATIONS
    SHELLKEY_HKCULM_VOLATILE = SKROOT_HKCU Or SKPATH_SHELLNOROAM Or SKSUB_VOLATILE
    SHELLKEY_HKCULM_MUICACHE = SKROOT_HKCU Or SKPATH_SHELLNOROAM Or SKSUB_MUICACHE
    SHELLKEY_HKCU_FILEEXTS = SKROOT_HKCU Or SKPATH_EXPLORER Or SKSUB_FILEEXTS
    SHELLKEY_HKCULM_HANDLERS_RO = SHELLKEY_HKCULM_HANDLERS '  deprecated
    SHELLKEY_HKCULM_HANDLERS_RW = SHELLKEY_HKCULM_HANDLERS '  deprecated
    SHELLKEY_HKCULM_ASSOCIATIONS_RO = SHELLKEY_HKCULM_ASSOCIATIONS '  deprecated
    SHELLKEY_HKCULM_ASSOCIATIONS_RW = SHELLKEY_HKCULM_ASSOCIATIONS '  deprecated
    SHELLKEY_HKCULM_RO = SHELLKEY_HKCU_SHELLNOROAM '  deprecated
    SHELLKEY_HKCULM_RW = SHELLKEY_HKCU_SHELLNOROAM '  deprecated
End Enum

Public Type DEFCONTEXTMENU
    hwnd As LongPtr
    pcmcb As IContextMenuCB ' optional: callback object
    pidlFolder As LongPtr ' optional: IDList to folder of the items, computed from psf if NULL
    psf As IShellFolder ' folder of the items
    cidl As Long ' # of items in apidl
    apidl As LongPtr ' items operating on, used to get IDataObject and IAssociationArray
    punkAssociationInfo As IUnknown ' optional: IQueryAssociations, specifies where to load extensions from, computed from apidl if NULL
    cKeys As Long ' # of items in aKeys, may be zero
    aKeys As LongPtr ' optional: specifies where to load extensions from
End Type

Public Enum DefFolderMenuMessages
    DFM_MERGECONTEXTMENU = 1  ' uFlags       LPQCMINFO
    DFM_INVOKECOMMAND = 2  ' idCmd        pszArgs
    DFM_GETHELPTEXT = 5  ' idCmd,cchMax pszText -Ansi
    DFM_WM_MEASUREITEM = 6  ' ---from the message---
    DFM_WM_DRAWITEM = 7  ' ---from the message---
    DFM_WM_INITMENUPOPUP = 8  ' ---from the message---
    DFM_VALIDATECMD = 9  ' idCmd        0
    DFM_MERGECONTEXTMENU_TOP = 10  ' uFlags       LPQCMINFO
    DFM_GETHELPTEXTW = 11  ' idCmd,cchMax pszText -Unicode
    DFM_INVOKECOMMANDEX = 12  ' idCmd        PDFMICS
    DFM_MAPCOMMANDNAME = 13  ' idCmd *      pszCommandName
    DFM_GETDEFSTATICID = 14  ' idCmd *      0
    DFM_GETVERBW = 15  ' idCmd,cchMax pszText -Unicode
    DFM_GETVERBA = 16  ' idCmd,cchMax pszText -Ansi
    DFM_MERGECONTEXTMENU_BOTTOM = 17  ' uFlags       LPQCMINFO
    DFM_MODIFYQCMFLAGS = 18  ' uFlags       UINT *puNewFlags;   modify the CFM_XXX values passed to IContextMenu::QueryContextMenu
End Enum
Public Enum DefFolderMenuCommands
    DFM_CMD_DELETE = (-1)
    DFM_CMD_MOVE = (-2)
    DFM_CMD_COPY = (-3)
    DFM_CMD_LINK = (-4)
    DFM_CMD_PROPERTIES = (-5)
    DFM_CMD_NEWFOLDER = (-6)
    DFM_CMD_PASTE = (-7)
    DFM_CMD_VIEWLIST = (-8)
    DFM_CMD_VIEWDETAILS = (-9)
    DFM_CMD_PASTELINK = (-10)
    DFM_CMD_PASTESPECIAL = (-11)
    DFM_CMD_MODALPROP = (-12)
    DFM_CMD_RENAME = (-13)
End Enum

[Description("Adds an item ID list to shell list of recently used documents, or clears documents from the list")]
Public Declare PtrSafe Sub SHAddToRecentDocs Lib "shell32" (ByVal uFlags As SHARD, pv As Any)
Public Declare PtrSafe Function SHGetStockIconInfo Lib "shell32" (ByVal siid As SHSTOCKICONID, ByVal uFlags As StockIconInfoFlags, psii As SHSTOCKICONINFO) As Long
[Description("Displays a dialog that allows selection of shell folders")]
Public Declare PtrSafe Function SHBrowseForFolderA Lib "shell32" (lpbi As BROWSEINFOA) As LongPtr
[Description("Displays a dialog that allows selection of shell folders")]
Public Declare PtrSafe Function SHBrowseForFolderW Lib "shell32" (lpbi As BROWSEINFOW) As LongPtr
[Description("Displays a dialog that allows selection of shell folders")]
Public DeclareWide PtrSafe Function SHBrowseForFolder Lib "shell32" Alias "SHBrowseForFolderW" (lpbi As BROWSEINFO) As LongPtr
[Description("Note: This function seems to be broken on Windows 11.")]
Public DeclareWide PtrSafe Function SHGetSetFolderCustomSettings Lib "shell32" (pfcs As SHFOLDERCUSTOMSETTINGS, ByVal pszPath As String, ByVal dwReadWrite As FCS_RW) As Long
[Description("Note: This function seems to be broken on Windows 11.")]
Public DeclareWide PtrSafe Function SHGetSetFolderCustomSettings Lib "shell32" (pfcs As SHFOLDERCUSTOMSETTINGS, ByVal pszPath As LongPtr, ByVal dwReadWrite As FCS_RW) As Long
[Description("Retrieves extended property data from relative identifier list")]
Public DeclareWide PtrSafe Function SHGetDataFromIDListW Lib "shell32" (ByVal psf As IShellFolder, ByVal pidl As LongPtr, ByVal nFormat As SHGDFIL_Format, ByRef pv As Any, ByVal cb As Long) As Long
[Description("Retrieves extended property data from relative identifier list")]
Public DeclareWide PtrSafe Function SHGetDataFromIDList Lib "shell32" Alias "SHGetDataFromIDListW" (ByVal psf As IShellFolder, ByVal pidl As LongPtr, ByVal nFormat As SHGDFIL_Format, ByRef pv As Any, ByVal cb As Long) As Long
Public DeclareWide PtrSafe Function SHCreateItemFromParsingName Lib "shell32" (ByVal pszPath As String, ByVal pbc As IBindCtx, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function SHCreateItemFromParsingName Lib "shell32" (ByVal pszPath As LongPtr, ByVal pbc As IBindCtx, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHCreateItemFromRelativeName Lib "shell32" (ByVal psiParent As IShellItem, ByVal pszName As LongPtr, pbc As IBindCtx, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHCreateShellItemArrayFromIDLists Lib "shell32" (ByVal cidl As Long, ByVal rgpidl As LongPtr, ppsiItemArray As IShellItemArray) As Long
Public Declare PtrSafe Function SHCreateItemFromIDList Lib "shell32" (ByVal pidl As LongPtr, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHCreateShellItem Lib "shell32" (ByVal pidlParent As LongPtr, ByVal psfParent As LongPtr, ByVal pidl As LongPtr, ppsi As IShellItem) As Long
Public Declare PtrSafe Function SHCreateItemInKnownFolder Lib "shell32" (rfid As UUID, ByVal dwFlags As KNOWN_FOLDER_FLAG, ByVal pszItem As LongPtr, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHGetKnownFolderItem Lib "shell32" (rfid As UUID, ByVal dwFlags As KNOWN_FOLDER_FLAG, ByVal hToken As LongPtr, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHGetKnownFolderPath Lib "shell32" (rfid As UUID, ByVal dwFlags As KNOWN_FOLDER_FLAG, ByVal hToken As LongPtr, ppszPath As LongPtr) As Long
Public Declare PtrSafe Function SHGetKnownFolderIDList Lib "shell32" (rfid As UUID, ByVal dwFlags As KNOWN_FOLDER_FLAG, ByVal hToken As LongPtr, ppidl As LongPtr) As Long
[Description("Retrieves IShellFolder interface for desktop folder, which is the root of the shell's namespace")]
Public Declare PtrSafe Function SHGetDesktopFolder Lib "shell32" (ppshf As IShellFolder) As Long
[Description("Retrieves IShellFolder interface for desktop folder, which is the root of the shell's namespace")]
[PreserveSig(False)]
Public Declare PtrSafe Function SHGetDesktopFolder Lib "shell32" () As IShellFolder
' typedef HRESULT (CALLBACK * LPFNDFMCALLBACK)(_In_opt_ IShellFolder *psf, _In_opt_ HWND hwnd,
'                        _In_opt_ IDataObject *pdtobj, UINT uMsg, WPARAM wParam, LPARAM lParam);
Public Delegate Function DFMCallback (ByVal psf As IShellFolder, ByVal hWnd As LongPtr, ByVal pdtobj As IDataObject, _
                                        ByVal uMsg As DefFolderMenuMessages, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As Long
' Public Declare PtrSafe Function CDefFolderMenu_Create2 Lib "shell32" (ByVal pidl As LongPtr, ByVal hwnd As LongPtr, ByVal cidl As Long, apidl As LongPtr, ByVal psf As IShellFolder, ByVal pfn As DFMCallback, ByVal nKeys As Long, ahkeys As LongPtr, ppcm As IContextMenu) As Long
Public Declare PtrSafe Function CDefFolderMenu_Create2 Lib "shell32" (ByVal pidl As LongPtr, ByVal hwnd As LongPtr, ByVal cidl As Long, apidl As LongPtr, ByVal psf As IShellFolder, ByVal pfn As LongPtr, ByVal nKeys As Long, ahkeys As LongPtr, ppcm As IContextMenu) As Long
Public Declare PtrSafe Function SHCreateDefaultContextMenu Lib "shell32" (pdcm As DEFCONTEXTMENU, riid As UUID, ppv As Any) As Long
[Description("Notifies system of event that may affect the shell")]
Public Declare PtrSafe Sub SHChangeNotify Lib "shell32" (ByVal wEventId As SHCN_Events, ByVal uFlags As SHCN_Flags, Optional ByVal dwItem1 As LongPtr, Optional ByVal dwItem2 As LongPtr)
Public Declare PtrSafe Function SHChangeNotifyRegister Lib "shell32" (ByVal hwnd As LongPtr, ByVal fSources As SHCNRF, ByVal fEvents As SHCN_Events, ByVal wMsg As Long, ByVal cEntries As Long, lpps As SHChangeNotifyEntry) As Long
Public Declare PtrSafe Function SHChangeNotifyDeregister Lib "shell32" (ByVal ulID As Long) As Long
Public Declare PtrSafe Function SHCreateShellItemArrayFromDataObject Lib "shell32" (ByVal pdo As IDataObject, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHCreateShellItemArrayFromShellItem Lib "shell32" (ByVal pdo As IShellItem, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHChangeNotification_Lock Lib "shell32" (ByVal hChange As LongPtr, ByVal dwProcId As Long, pppidl As LongPtr, plEvent As Long) As LongPtr
Public Declare PtrSafe Function SHChangeNotification_Unlock Lib "shell32" (ByVal hLock As LongPtr) As Long
Public Declare PtrSafe Function SHHandleUpdateImage Lib "shell32" (ByVal pidlExtra As LongPtr) As Long
[Description("Notifies the Shell that an image in the system image list has changed.")]
Public Declare PtrSafe Sub SHUpdateImageA Lib "shell32" (ByVal pszHashItem As LongPtr, ByVal iIndex As Long, ByVal uFlags As GILFlags, ByVal iImageIndex As Long)
[Description("Notifies the Shell that an image in the system image list has changed.")]
Public Declare PtrSafe Sub SHUpdateImageA Lib "shell32" (ByVal pszHashItem As String, ByVal iIndex As Long, ByVal uFlags As GILFlags, ByVal iImageIndex As Long)
[Description("Notifies the Shell that an image in the system image list has changed.")]
Public Declare PtrSafe Sub SHUpdateImageW Lib "shell32" (ByVal pszHashItem As LongPtr, ByVal iIndex As Long, ByVal uFlags As GILFlags, ByVal iImageIndex As Long)
[Description("Notifies the Shell that an image in the system image list has changed.")]
Public DeclareWide PtrSafe Sub SHUpdateImage Lib "shell32" Alias "SHUpdateImageW" (ByVal pszHashItem As LongPtr, ByVal iIndex As Long, ByVal uFlags As GILFlags, ByVal iImageIndex As Long)
[Description("Notifies the Shell that an image in the system image list has changed.")]
Public DeclareWide PtrSafe Sub SHUpdateImage Lib "shell32" Alias "SHUpdateImageW" (ByVal pszHashItem As String, ByVal iIndex As Long, ByVal uFlags As GILFlags, ByVal iImageIndex As Long)
Public Declare PtrSafe Function SHGetImageList Lib "shell32" (ByVal iImageList As SHIL, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHCreateShellItemArray Lib "shell32" (ByVal pidlParent As LongPtr, ByVal psf As IShellFolder, ByVal cidl As Long, ByVal ppidl As LongPtr, ppsiItemArray As IShellItemArray) As Long
[Description("Get item ID of special folder location")]
Public Declare PtrSafe Function SHGetSpecialFolderLocation Lib "shell32" (ByVal hWnd As LongPtr, ByVal nFolder As CSIDLs, ppidl As LongPtr) As Long
[Description("Get item ID of special folder location")]
[PreserveSig(False)]
Public Declare PtrSafe Function SHGetSpecialFolderLocation Lib "shell32" (ByVal hWnd As LongPtr, ByVal nFolder As CSIDLs) As LongPtr
Public Declare PtrSafe Function SHCloneSpecialIDList Lib "shell32" (ByVal hWnd As LongPtr, ByVal csidl As CSIDLs, ByVal fCreate As BOOL) As LongPtr
Public Declare PtrSafe Function SHGetSettings Lib "Shell32" (lpsfs As SHELLFLAGSTATE, ByVal dwMask As SFS_MASK) As Long
Public Declare PtrSafe Sub SHGetSetSettings Lib "shell32" (ByRef lpss As SHELLSTATE, ByVal dwMask As SFS_MASK, ByVal bSet As Long)
Public DeclareWide PtrSafe Function Shell_NotifyIcon Lib "shell32" Alias "Shell_NotifyIconW" (ByVal dwMessage As NI_MESSAGES, ByRef lpData As NOTIFYICONDATA) As BOOL
Public Declare PtrSafe Function Shell_NotifyIconW Lib "shell32" (ByVal dwMessage As NI_MESSAGES, ByRef lpData As NOTIFYICONDATAW) As BOOL
Public Declare PtrSafe Function Shell_NotifyIconA Lib "shell32" (ByVal dwMessage As NI_MESSAGES, ByRef lpData As NOTIFYICONDATAA) As BOOL
Public Declare PtrSafe Function Shell_NotifyIconGetRect Lib "shell32" (ByRef identifier As NOTIFYICONIDENTIFIER, ByRef iconLocation As RECT) As Long
Public Declare PtrSafe Function Shell_GetImageLists Lib "shell32" (phiml As LongPtr, phimlsmall As LongPtr) As Long
Public Declare PtrSafe Function SHQueryUserNotificationState Lib "shell32" (ByRef pquns As QUERY_USER_NOTIFICATION_STATE) As Long
Public DeclareWide PtrSafe Function SHQueryRecycleBin Lib "shell32" Alias "SHQueryRecycleBinW" (ByVal pszRootPath As String, ByRef pSHQueryRBInfo As SHQUERYRBINFO) As Long
Public Declare PtrSafe Function SHQueryRecycleBinW Lib "shell32" (ByVal pszRootPath As LongPtr, ByRef pSHQueryRBInfo As SHQUERYRBINFO) As Long
Public Declare PtrSafe Function SHQueryRecycleBinA Lib "shell32" (ByVal pszRootPath As String, ByRef pSHQueryRBInfo As SHQUERYRBINFO) As Long
Public Declare PtrSafe Function SHEmptyRecycleBinA Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszRootPath As String, ByVal dwFlags As SHERB_Flags) As Long
Public Declare PtrSafe Function SHEmptyRecycleBinW Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszRootPath As LongPtr, ByVal dwFlags As SHERB_Flags) As Long
Public DeclareWide PtrSafe Function SHEmptyRecycleBin Lib "shell32" Alias "SHEmptyRecycleBinW" (ByVal hwnd As LongPtr, ByVal pszRootPath As String, ByVal dwFlags As SHERB_Flags) As Long
Public Declare PtrSafe Function SHAppBarMessage Lib "shell32" ([TypeHint(SHAppBarMessages)] ByVal dwMessage As Long, pData As APPBARDATA) As LongPtr

[Description("The data object created by this function offers the Shell clipboard format identifier CFSTR_SHELLIDLIST. This data object also supports IDataObject::SetData calls to pick up other clipboard formats.")]
Public Declare PtrSafe Function CIDLData_CreateFromIDArray Lib "shell32" (ByVal pidlFolder As LongPtr, ByVal cidl As Long, apidl As LongPtr, ppdtobj As IDataObject) As Long
Public Declare PtrSafe Function ILAppendID Lib "shell32" (ByVal pidl As LongPtr, ByVal pmkid As LongPtr, ByVal fAppend As BOOL) As LongPtr
Public Declare PtrSafe Function ILClone Lib "shell32" (ByVal pidl As LongPtr) As LongPtr
Public Declare PtrSafe Function ILCloneChild Lib "shell32" Alias "ILCloneFirst" (ByVal pidl As LongPtr) As LongPtr
Public Declare PtrSafe Function ILCloneFirst Lib "shell32" (ByVal pidl As LongPtr) As LongPtr
Public Declare PtrSafe Function ILCloneFull Lib "shell32" Alias "ILClone" (ByVal pidl As LongPtr) As LongPtr
Public Declare PtrSafe Function ILCombine Lib "shell32" (ByVal pidl1 As LongPtr, ByVal pidl2 As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function ILCreateFromPath Lib "shell32" Alias "ILCreateFromPathW" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function ILCreateFromPathA Lib "shell32" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function ILCreateFromPathW Lib "shell32" (ByVal pszPath As LongPtr) As LongPtr
Public Declare PtrSafe Function ILFindChild Lib "shell32" (ByVal pidlParent As LongPtr, ByVal pidlChild As LongPtr) As LongPtr
Public Declare PtrSafe Function ILFindLastID Lib "shell32" (ByVal pidl As LongPtr) As LongPtr
[Description("DEPRECATED - Use CoTaskMemFree instead")]
Public Declare PtrSafe Sub ILFree Lib "shell32" (ByVal pidl As LongPtr)
Public Declare PtrSafe Function ILGetNext Lib "shell32" (ByVal pidl As LongPtr) As LongPtr
Public Declare PtrSafe Function ILGetSize Lib "shell32" (ByVal pidl As LongPtr) As Long
Public Function ILIsAligned(ByVal pidl As LongPtr) As BOOL
	Return If((pidl And (LenB(Of LongPtr) - 1)) = 0, CTRUE, CFALSE)
End Function
Public Function ILIsChild(ByVal pidl As LongPtr) As BOOL
	Return If((ILIsEmpty(pidl)) Or (ILIsEmpty(ILNext(pidl))), CTRUE, CFALSE)
End Function
Public Function ILIsEmpty(ByVal pidl As LongPtr) As BOOL
If pidl = 0 Then Return CTRUE
Dim cb As Integer
CopyMemory cb, ByVal pidl, 2
If cb = 0 Then Return CTRUE
End Function
Public Declare PtrSafe Function ILIsEqual Lib "shell32" (ByVal pidl1 As LongPtr, ByVal pidl2 As LongPtr) As BOOL
Public Declare PtrSafe Function ILIsParent Lib "shell32" (ByVal pidl1 As LongPtr, ByVal pidl2 As LongPtr) As BOOL
Public Declare PtrSafe Function ILLoadFromStream Lib "shell32" Alias "#26" (ByVal pstm As IStream, pidl As LongPtr) As Long
Public Declare PtrSafe Function ILLoadFromStreamEx Lib "shell32" (ByVal pstm As IStream, pidl As LongPtr) As Long
Public Declare PtrSafe Function ILNext Lib "shell32" Alias "ILGetNext" (ByVal pidl As LongPtr) As LongPtr
Public Declare PtrSafe Function ILRemoveLastID Lib "shell32" (ByRef pidl As LongPtr) As BOOL
Public Declare PtrSafe Function ILSaveToStream Lib "shell32" (ByVal pstm As IStream, ByVal pidl As LongPtr) As Long
Public Function ILSkip(ByVal pidl As LongPtr, ByVal cb As Long) As LongPtr: Return pidl + cb: End Function
Public Declare PtrSafe Function SHBindToFolderIDListParent Lib "shell32" (ByVal psfRoot As IShellFolder, ByVal pidl As LongPtr, ByRef riid As UUID, ByRef ppv As Any, ByRef ppidl As LongPtr) As Long
Public Declare PtrSafe Function SHBindToFolderIDListParentEx Lib "shell32" (ByVal psfRoot As IShellFolder, ByVal pidl As LongPtr, ByVal ppBC As IBindCtx, ByRef riid As UUID, ByRef ppv As Any, ByRef ppidl As LongPtr) As Long
Public Declare PtrSafe Function SHBindToParent Lib "shell32" (ByVal pidl As LongPtr, ByRef riid As UUID, ByRef ppv As Any, ByRef ppidlLast As LongPtr) As Long
Public Declare PtrSafe Function SHGetIDListFromObject Lib "shell32" (ByVal pUnk As stdole.IUnknown, ByRef ppidl As LongPtr) As Long
Public Declare PtrSafe Function SHGetNameFromIDList Lib "shell32" (ByVal pidl As LongPtr, ByVal sigdnName As SIGDN, ByRef ppszName As LongPtr) As Long
Public DeclareWide PtrSafe Function SHILCreateFromPath Lib "shell32" (ByVal pszPath As String, ppidl As LongPtr, rfgInOut As SFGAOF) As Long
[Description("Converts an item ID list pointer to a file system path (cMaxPath buffer expected)")]
Public DeclareWide PtrSafe Function SHGetPathFromIDList Lib "shell32" Alias "SHGetPathFromIDListW" (ByVal pidl As LongPtr, ByVal pszPath As String) As BOOL
[Description("Converts an item ID list pointer to a file system path (cMaxPath buffer expected)")]
Public Declare PtrSafe Function SHGetPathFromIDListA Lib "shell32" (ByVal pidl As LongPtr, ByVal pszPath As String) As BOOL
[Description("Converts an item ID list pointer to a file system path (cMaxPath buffer expected)")]
Public Declare PtrSafe Function SHGetPathFromIDListW Lib "shell32" (ByVal pidl As LongPtr, ByVal pszPath As LongPtr) As BOOL
[Description("Converts an item identifier list to a file system path. This function extends SHGetPathFromIDList by allowing you to set the initial size of the string buffer and declare the options below.")]
Public Declare PtrSafe Function SHGetPathFromIDListEx Lib "shell32" (ByVal pidl As LongPtr, ByVal pszPath As LongPtr, ByVal cchPath As Long, ByVal uOpts As GPFIDL_FLAGS) As BOOL
[Description("Deprecated. Returns a pointer to an ITEMIDLIST structure when passed a path.")]
Public DeclareWide PtrSafe Function SHSimpleIDListFromPath Lib "shell32" (ByVal pszPath As String) As LongPtr
[Description("Deprecated. Retrieves the path of a folder as an ITEMIDLIST structure.")]
Public Declare PtrSafe Function SHGetFolderLocation Lib "shell32" (ByVal hWndOwner As LongPtr, ByVal nFolder As CSIDLs, ByVal hToken As LongPtr, ByVal dwReserved As Long, ppidl As LongPtr) As Long
[Description("Gets the path of a folder identified by a CSIDL value." & VbCrLf & _
                "As of Windows Vista, this function is merely a wrapper for SHGetKnownFolderPath. The CSIDL value is translated to its associated KNOWNFOLDERID and then SHGetKnownFolderPath is called. New applications should use the known folder system rather than the older CSIDL system, which is supported only for backward compatibility.")]
Public Declare PtrSafe Function SHGetFolderPathA Lib "shell32" (ByVal hwnd As LongPtr, ByVal csidl As CSIDLs, ByVal hToken As LongPtr, ByVal dwFlags As SHGFP_TYPE, ByVal pszPath As String) As Long
[Description("Gets the path of a folder identified by a CSIDL value." & VbCrLf & _
                "As of Windows Vista, this function is merely a wrapper for SHGetKnownFolderPath. The CSIDL value is translated to its associated KNOWNFOLDERID and then SHGetKnownFolderPath is called. New applications should use the known folder system rather than the older CSIDL system, which is supported only for backward compatibility.")]
Public Declare PtrSafe Function SHGetFolderPathW Lib "shell32" (ByVal hwnd As LongPtr, ByVal csidl As CSIDLs, ByVal hToken As LongPtr, ByVal dwFlags As SHGFP_TYPE, ByVal pszPath As LongPtr) As Long
[Description("Gets the path of a folder identified by a CSIDL value." & VbCrLf & _
                "As of Windows Vista, this function is merely a wrapper for SHGetKnownFolderPath. The CSIDL value is translated to its associated KNOWNFOLDERID and then SHGetKnownFolderPath is called. New applications should use the known folder system rather than the older CSIDL system, which is supported only for backward compatibility.")]
Public DeclareWide PtrSafe Function SHGetFolderPath Lib "shell32" Alias "SHGetFolderPathW" (ByVal hwnd As LongPtr, ByVal csidl As CSIDLs, ByVal hToken As LongPtr, ByVal dwFlags As SHGFP_TYPE, ByVal pszPath As String) As Long
[Description("Gets the path of a folder identified by a CSIDL value and appends a user-provided subfolder path." & VbCrLf & _
                "As of Windows Vista, this function is merely a wrapper for SHGetKnownFolderPath. The CSIDL value is translated to its associated KNOWNFOLDERID and then SHGetKnownFolderPath is called. New applications should use the known folder system rather than the older CSIDL system, which is supported only for backward compatibility.")]
Public Declare PtrSafe Function SHGetFolderPathAndSubDirA Lib "shell32" (ByVal hwnd As LongPtr, ByVal csidl As CSIDLs, ByVal hToken As LongPtr, ByVal dwFlags As SHGFP_TYPE, ByVal pszSubDir As String, ByVal pszPath As String) As Long
[Description("Gets the path of a folder identified by a CSIDL value and appends a user-provided subfolder path." & VbCrLf & _
                "As of Windows Vista, this function is merely a wrapper for SHGetKnownFolderPath. The CSIDL value is translated to its associated KNOWNFOLDERID and then SHGetKnownFolderPath is called. New applications should use the known folder system rather than the older CSIDL system, which is supported only for backward compatibility.")]
Public Declare PtrSafe Function SHGetFolderPathAndSubDirW Lib "shell32" (ByVal hwnd As LongPtr, ByVal csidl As CSIDLs, ByVal hToken As LongPtr, ByVal dwFlags As SHGFP_TYPE, ByVal pszSubDir As LongPtr, ByVal pszPath As LongPtr) As Long
[Description("Gets the path of a folder identified by a CSIDL value and appends a user-provided subfolder path." & VbCrLf & _
                "As of Windows Vista, this function is merely a wrapper for SHGetKnownFolderPath. The CSIDL value is translated to its associated KNOWNFOLDERID and then SHGetKnownFolderPath is called. New applications should use the known folder system rather than the older CSIDL system, which is supported only for backward compatibility.")]
Public DeclareWide PtrSafe Function SHGetFolderPathAndSubDir Lib "shell32" Alias "SHGetFolderPathAndSubDirW" (ByVal hwnd As LongPtr, ByVal csidl As CSIDLs, ByVal hToken As LongPtr, ByVal dwFlags As SHGFP_TYPE, ByVal pszSubDir As String, ByVal pszPath As String) As Long
[Description("Assigns a new path to a system folder identified by its CSIDL.")]
Public Declare PtrSafe Function SHSetFolderPathA Lib "shell32" (ByVal csidl As CSIDLs, ByVal hToken As LongPtr, ByVal dwFlags As Long, ByVal pszPath As String) As Long
[Description("Assigns a new path to a system folder identified by its CSIDL.")]
Public Declare PtrSafe Function SHSetFolderPathW Lib "shell32" (ByVal csidl As CSIDLs, ByVal hToken As LongPtr, ByVal dwFlags As Long, ByVal pszPath As LongPtr) As Long
[Description("Assigns a new path to a system folder identified by its CSIDL.")]
Public DeclareWide PtrSafe Function SHSetFolderPath Lib "shell32" Alias "SHSetFolderPathW" (ByVal csidl As CSIDLs, ByVal hToken As LongPtr, ByVal dwFlags As Long, ByVal pszPath As String) As Long
Public Declare PtrSafe Function SHAssocEnumHandlers Lib "shell32" (ByVal pszExtra As LongPtr, ByVal afFilter As ASSOC_FILTER, ByRef ppEnumHandler As IEnumAssocHandlers) As Long
Public Declare PtrSafe Function SHAssocEnumHandlersForProtocolByApplication Lib "shell32" (ByVal pszProtocol As LongPtr, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function SHCreateAssociationRegistration Lib "shell32" (ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function SHBindToObject Lib "shell32" (ByVal psf As IShellFolder, ByVal pidl As LongPtr, ByVal pbc As IBindCtx, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function SHCreateDataObject Lib "shell32" (ByVal pidlFolder As LongPtr, ByVal cidl As Long, ByVal apidl As LongPtr, ByVal pdtInner As IDataObject, ByRef riid As UUID, ByRef ppv As Any) As Long
Public DeclareWide PtrSafe Function SHCreateFileDataObject Lib "shell32" Alias "#740" (ByVal pidlFolder As LongPtr, ByVal cidl As Long, ByVal apidl As LongPtr, ByVal pdtInner As IDataObject, ByRef ppDataObj As IDataObject) As Long
Public Declare PtrSafe Function SHCreateItemWithParent Lib "shell32" (ByVal pidlParent As LongPtr, ByVal psfParent As IShellFolder, ByVal pidl As LongPtr, ByRef riid As UUID, ByRef ppvItem As Any) As Long
Public Declare PtrSafe Function SHDoDragDrop Lib "shell32" (ByVal hwnd As LongPtr, ByVal pdtobj As IDataObject, ByVal pdsrc As IDropSource, ByVal dwEffect As DROPEFFECTS, ByRef pdwEffect As DROPEFFECTS) As Long
Public Declare PtrSafe Function SHSimulateDrop Lib "shell32" Alias "#186" (ByVal pDropTarget As IDropTarget, ByVal pDataObj As IDataObject, ByVal grfKeyState As KeyStateMouse, pt As POINT, pdwEffect As DROPEFFECTS) As Long
Public Declare PtrSafe Function SHGetIconOverlayIndexA Lib "shell32" (ByVal pszIconPath As String, ByVal iIconIndex As OverlayIconIndexDefaults) As Long
Public Declare PtrSafe Function SHGetIconOverlayIndexW Lib "shell32" (ByVal pszIconPath As LongPtr, ByVal iIconIndex As OverlayIconIndexDefaults) As Long
Public DeclareWide PtrSafe Function SHGetIconOverlayIndex Lib "shell32" Alias "SHGetIconOverlayIndexW" (ByVal pszIconPath As String, ByVal iIconIndex As OverlayIconIndexDefaults) As Long
Public Declare PtrSafe Function SHGetItemFromDataObject Lib "shell32" (ByVal pdtobj As IDataObject, ByVal dwFlags As DATAOBJ_GET_ITEM_FLAGS, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function SHGetItemFromObject Lib "shell32" (ByVal pUnk As stdole.IUnknown, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function SHGetNameFromPropertyKey Lib "shell32" (ByRef propkey As PROPERTYKEY, ByRef ppszCanonicalName As LongPtr) As Long
Public Declare PtrSafe Function SHParseDisplayName Lib "shell32" (ByVal pszName As LongPtr, ByVal pbc As IBindCtx, ByRef ppidl As LongPtr, ByVal sfgaoIn As SFGAOF, ByRef psfgaoOut As SFGAOF) As Long
Public DeclareWide PtrSafe Function SHParseDisplayName Lib "shell32" (ByVal pszName As String, ByVal pbc As IBindCtx, ByRef ppidl As LongPtr, ByVal sfgaoIn As SFGAOF, ByRef psfgaoOut As SFGAOF) As Long
Public Declare PtrSafe Function ShellExecuteA Lib "shell32" (ByVal hwnd As LongPtr, ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As SHOWWINDOW) As LongPtr
Public Declare PtrSafe Function ShellExecuteW Lib "shell32" (ByVal hwnd As LongPtr, ByVal lpOperation As LongPtr, ByVal lpFile As LongPtr, ByVal lpParameters As LongPtr, ByVal lpDirectory As LongPtr, ByVal nShowCmd As SHOWWINDOW) As LongPtr
Public DeclareWide PtrSafe Function ShellExecute Lib "shell32" Alias "ShellExecuteW" (ByVal hwnd As LongPtr, ByVal lpOperation As String, ByVal lpFile As String, ByVal lpParameters As String, ByVal lpDirectory As String, ByVal nShowCmd As SHOWWINDOW) As LongPtr
Public Declare PtrSafe Function ShellExecuteExA Lib "shell32" (ByRef pExecInfo As SHELLEXECUTEINFOA) As BOOL
Public Declare PtrSafe Function ShellExecuteExW Lib "shell32" (ByRef pExecInfo As SHELLEXECUTEINFOW) As BOOL
Public DeclareWide PtrSafe Function ShellExecuteEx Lib "shell32" Alias "ShellExecuteExW" (ByRef pExecInfo As SHELLEXECUTEINFO) As BOOL
[Description("Opens a Control Panel item.")]
Public Declare PtrSafe Function SHRunControlPanel Lib "shell32" Alias "#161" (ByVal lpszCommandLine As LongPtr, Optional ByVal hwndMsgParent As LongPtr) As BOOL
Public Declare PtrSafe Function DragQueryFileA Lib "shell32" (ByVal hDrop As LongPtr, ByVal iFile As Long, Optional ByVal lpszFile As String, Optional ByVal cch As Long) As Long
Public Declare PtrSafe Function DragQueryFileW Lib "shell32" (ByVal hDrop As LongPtr, ByVal iFile As Long, Optional ByVal lpszFile As LongPtr, Optional ByVal cch As Long) As Long
Public DeclareWide PtrSafe Function DragQueryFile Lib "shell32" Alias "DragQueryFileW" (ByVal hDrop As LongPtr, ByVal iFile As Long, Optional ByVal lpszFile As String, Optional ByVal cch As Long) As Long
Public Declare PtrSafe Sub DragAcceptFiles Lib "shell32" (ByVal hwnd As LongPtr, ByVal fAccept As BOOL)
Public Declare PtrSafe Function DragQueryPoint Lib "shell32" (ByVal hDrop As LongPtr, ByRef lppt As POINT) As Long
Public Declare PtrSafe Sub DragFinish Lib "shell32" (ByVal hDrop As LongPtr)
[Description("Returns a pointer to an IMalloc used to allocate LPITEMID")]
Public Declare PtrSafe Function SHGetMalloc Lib "shell32" (ppMalloc As IMalloc) As Long
[Description("Returns a pointer to an IMalloc used to allocate LPITEMID")]
[PreserveSig(False)]
Public Declare PtrSafe Function SHGetMalloc Lib "shell32" () As IMalloc
Public DeclareWide PtrSafe Function SHGetSpecialFolderPath Lib "shell32" Alias "SHGetSpecialFolderPathW" (ByVal hWndOwner As LongPtr, ByVal lpszPath As String, ByVal nFolder As CSIDLs, ByVal fCreate As BOOL) As Long
Public Declare PtrSafe Function SHGetSpecialFolderPathW Lib "shell32" (ByVal hWndOwner As LongPtr, ByVal lpszPath As LongPtr, ByVal nFolder As CSIDLs, ByVal fCreate As BOOL) As Long
Public Declare PtrSafe Function SHGetSpecialFolderPathA Lib "shell32" (ByVal hWndOwner As LongPtr, ByVal lpszPath As String, ByVal nFolder As CSIDLs, ByVal fCreate As BOOL) As Long
Public Declare PtrSafe Function SHGetInstanceExplorer Lib "shell32" (ppunk As stdole.IUnknown) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function SHGetInstanceExplorer Lib "shell32" () As stdole.IUnknown
Public Declare PtrSafe Sub SHSetInstanceExplorer Lib "shell32" (Optional ByVal ppunk As stdole.IUnknown)
Public Declare PtrSafe Function SHShellFolderView_Message Lib "shell32" (ByVal hWndMain As LongPtr, ByVal uMsg As Long, lParam As Any) As LongPtr
[Description("Retrieves information about a file system object such as a file, a folder, a directory, or a drive root")]
Public Declare PtrSafe Function SHGetFileInfoA Lib "shell32" (ByVal pszPath As Any, ByVal dwFileAttributes As Long, psfi As SHFILEINFOA, ByVal cbFileInfo As Long, ByVal uFlags As SHGFI_flags) As LongPtr
[Description("Retrieves information about a file system object such as a file, a folder, a directory, or a drive root")]
Public Declare PtrSafe Function SHGetFileInfoW Lib "shell32" (ByVal pszPath As Any, ByVal dwFileAttributes As Long, psfi As SHFILEINFOW, ByVal cbFileInfo As Long, ByVal uFlags As SHGFI_flags) As LongPtr
[Description("Retrieves information about a file system object such as a file, a folder, a directory, or a drive root")]
Public DeclareWide PtrSafe Function SHGetFileInfo Lib "shell32" Alias "SHGetFileInfoW" (ByVal pszPath As Any, ByVal dwFileAttributes As Long, psfi As SHFILEINFO, ByVal cbFileInfo As Long, ByVal uFlags As SHGFI_flags) As LongPtr
Public Declare PtrSafe Function SHMultiFileProperties Lib "shell32" (ByVal pdtobj As LongPtr, ByVal dwFlags As Long) As Long
[Description("Performs a copy, move, rename, or delete operation on a file system object")]
Public Declare PtrSafe Function SHFileOperationA Lib "shell32" (lpFileOp As SHFILEOPSTRUCTA) As SHFileOpErrors
[Description("Performs a copy, move, rename, or delete operation on a file system object")]
Public Declare PtrSafe Function SHFileOperationW Lib "shell32" (lpFileOp As SHFILEOPSTRUCTW) As SHFileOpErrors
[Description("Performs a copy, move, rename, or delete operation on a file system object")]
Public DeclareWide PtrSafe Function SHFileOperation Lib "shell32" Alias "SHFileOperationW" (lpFileOp As SHFILEOPSTRUCT) As SHFileOpErrors
Public Declare PtrSafe Function SHOpenFolderAndSelectItems Lib "shell32" (ByVal pidlFolder As LongPtr, ByVal cidl As Long, apidl As LongPtr, ByVal dwFlags As SHOFASI_Flags) As Long
Public Declare PtrSafe Function SHOpenWithDialog Lib "shell32" (ByVal hWnd As LongPtr, poainfo As OPENASINFO) As Long
[Description("Creates an IEnumFORMATETC object from an array of FORMATETC structures.")]
Public Declare PtrSafe Function SHCreateStdEnumFmtEtc Lib "shell32" (ByVal cfmt As Long, afmt As FORMATETC, ppenumFormatEtc As IEnumFormatETC) As Long
[Description("Can be used to create folders inside folders that also do not yet exist. This call supports Unicode.")]
Public DeclareWide PtrSafe Function SHCreateDirectory Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszPath As String) As Long
[Description("Can be used to create folders inside folders that also do not yet exist. This call supports Unicode.")]
Public Declare PtrSafe Function SHCreateDirectoryExA Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszPath As String, psa As SECURITY_ATTRIBUTES) As Long
[Description("Can be used to create folders inside folders that also do not yet exist. This call supports Unicode.")]
Public Declare PtrSafe Function SHCreateDirectoryExW Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszPath As LongPtr, psa As SECURITY_ATTRIBUTES) As Long
[Description("Can be used to create folders inside folders that also do not yet exist. This call supports Unicode.")]
Public DeclareWide PtrSafe Function SHCreateDirectoryEx Lib "shell32" Alias "SHCreateDirectoryExW" (ByVal hwnd As LongPtr, ByVal pszPath As String, psa As SECURITY_ATTRIBUTES) As Long
[Description("IShellFolder is the official type for psf, however MSDN states it must 'also' implement IItemNameLimits; IShellFolder is not validated nor used so the class may implement *only* IItemNameLimits.")]
Public DeclareWide PtrSafe Function SHLimitInputEdit Lib "shell32" (ByVal hwndEdit As LongPtr, ByVal psf As Any) As Long
Public DeclareWide PtrSafe Function SHLimitInputEditWithFlags Lib "shell32" Alias "#754" (ByVal hwndEdit As LongPtr, pil As LIMITINPUT) As Long
Public DeclareWide PtrSafe Function SHLimitInputCombo Lib "shell32" Alias "#748" (ByVal hwndEdit As LongPtr, ByVal psf As Any) As Long
Public Declare PtrSafe Function SHLoadNonloadedIconOverlayIdentifiers Lib "shell32" () As Long
Public DeclareWide PtrSafe Function SHGetDriveMedia Lib "shell32" (ByVal pszDrive As String, pdwMediaContent As ARCONTENT) As Long
Public DeclareWide PtrSafe Function SHGetPropertyStoreFromParsingName Lib "shell32" (ByVal pszPath As String, pbc As Any, ByVal Flags As GETPROPERTYSTOREFLAGS, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHGetPropertyStoreFromIDList Lib "shell32" (ByVal pidl As LongPtr, ByVal Flags As GETPROPERTYSTOREFLAGS, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHRemovePersonalPropertyValues Lib "shell32" (ByVal psia As IShellItemArray) As Long
Public DeclareWide PtrSafe Function SHAddDefaultPropertiesByExt Lib "shell32" (ByVal pszExt As String, ByVal pPropStore As IPropertyStore) As Long
Public Declare PtrSafe Function SHPropStgCreate Lib "shell32" (ByVal psstg As IPropertySetStorage, fmtid As UUID, pclsid As UUID, ByVal grfFlags As PROPSETFLAG, ByVal grfMode As STGM, ByVal dwDisposition As CreateFileDisposition, ppstg As IPropertyStorage) As Long
Public Declare PtrSafe Function SHPropStgReadMultiple Lib "shell32" (ByVal pps As IPropertyStorage, ByVal uCodePage As Long, ByVal cpspec As Long, rgpspec As PROPSPEC, rgvar As LongPtr) As Long
Public Declare PtrSafe Function SHPropStgWriteMultiple Lib "shell32" (ByVal pps As IPropertyStorage, puCodePage As Long, ByVal cpspec As Long, rgpspec As PROPSPEC, rgvar As Variant) As Long
Public DeclareWide PtrSafe Function SHGetPropertyStoreForWindow Lib "shell32" (ByVal hwnd As LongPtr, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHDefExtractIconA Lib "shell32" (ByVal pszIconFile As String, ByVal iIndex As Long, ByVal uFlags As GILRes, phiconLarge As LongPtr, phiconSmall As LongPtr, ByVal nIconSize As Long) As Long
Public Declare PtrSafe Function SHDefExtractIconW Lib "shell32" (ByVal pszIconFile As LongPtr, ByVal iIndex As Long, ByVal uFlags As GILRes, phiconLarge As LongPtr, phiconSmall As LongPtr, ByVal nIconSize As Long) As Long
Public DeclareWide PtrSafe Function SHDefExtractIcon Lib "shell32" Alias "SHDefExtractIconW" (ByVal pszIconFile As String, ByVal iIndex As Long, ByVal uFlags As GILRes, phiconLarge As LongPtr, phiconSmall As LongPtr, ByVal nIconSize As Long) As Long
Public Declare PtrSafe Function SHRestricted Lib "shell32" (ByVal rest As RESTRICTIONS) As Long
Public Declare PtrSafe Function IsUserAnAdmin Lib "shell32" () As BOOL
Public DeclareWide PtrSafe Function SHCreateDefaultExtractIcon Lib "shell32" (ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function ExtractIconExA Lib "shell32" (ByVal lpszFile As String, ByVal nIconIndex As Long, phiconLarge As LongPtr, phiconSmall As LongPtr, ByVal nIcons As Long) As Long
Public Declare PtrSafe Function ExtractIconExW Lib "shell32" (ByVal lpszFile As LongPtr, ByVal nIconIndex As Long, phiconLarge As LongPtr, phiconSmall As LongPtr, ByVal nIcons As Long) As Long
Public DeclareWide PtrSafe Function ExtractIconEx Lib "shell32" Alias "ExtractIconExW" (ByVal lpszFile As String, ByVal nIconIndex As Long, phiconLarge As LongPtr, phiconSmall As LongPtr, ByVal nIcons As Long) As Long
Public Declare PtrSafe Function DuplicateIcon Lib "shell32" (ByVal hInst As LongPtr, ByVal hIcon As LongPtr) As LongPtr
Public Declare PtrSafe Function ExtractAssociatedIconA Lib "shell32" (ByVal hInst As LongPtr, ByVal pszIconPath As String, piIcon As Integer) As LongPtr
Public Declare PtrSafe Function ExtractAssociatedIconW Lib "shell32" (ByVal hInst As LongPtr, ByVal pszIconPath As LongPtr, piIcon As Integer) As LongPtr
Public DeclareWide PtrSafe Function ExtractAssociatedIcon Lib "shell32" Alias "ExtractAssociatedIconW" (ByVal hInst As LongPtr, ByVal pszIconPath As String, piIcon As Integer) As LongPtr
Public Declare PtrSafe Function ExtractAssociatedIconExA Lib "shell32" (ByVal hInst As LongPtr, ByVal pszIconPath As String, piIconIndex As Integer, piIconId As Integer) As LongPtr
Public Declare PtrSafe Function ExtractAssociatedIconExW Lib "shell32" (ByVal hInst As LongPtr, ByVal pszIconPath As LongPtr, piIconIndex As Integer, piIconId As Integer) As LongPtr
Public DeclareWide PtrSafe Function ExtractAssociatedIconEx Lib "shell32" Alias "ExtractAssociatedIconExW" (ByVal hInst As LongPtr, ByVal pszIconPath As String, piIconIndex As Integer, piIconId As Integer) As LongPtr
Public Declare PtrSafe Function ShellMessageBoxA CDecl Lib "shell32" (ByVal hAppInst As LongPtr, ByVal hwnd As LongPtr, ByVal lpcText As String, ByVal lpcTitle As String, ByVal uType As MessageBoxFlags, ByVal ParamArray vargs As Any()) As MessageBoxResults
Public DeclareWide PtrSafe Function ShellMessageBoxW CDecl Lib "shell32" (ByVal hAppInst As LongPtr, ByVal hwnd As LongPtr, ByVal lpcText As LongPtr, ByVal lpcTitle As LongPtr, ByVal uType As MessageBoxFlags, ByVal ParamArray vargs As Any()) As MessageBoxResults
Public DeclareWide PtrSafe Function ShellMessageBox CDecl Lib "shell32" Alias "ShellMessageBoxW" (ByVal hAppInst As LongPtr, ByVal hwnd As LongPtr, ByVal lpcText As String, ByVal lpcTitle As String, ByVal uType As MessageBoxFlags, ByVal ParamArray vargs As Any()) As MessageBoxResults
Public Declare PtrSafe Function ShellAboutA Lib "shell32" (ByVal hwnd As LongPtr, ByVal szApp As String, Optional ByVal szOtherStuff As String = vbNullString, Optional ByVal hIcon As LongPtr = 0) As Long
Public Declare PtrSafe Function ShellAboutW Lib "shell32" (ByVal hwnd As LongPtr, ByVal szApp As LongPtr, Optional ByVal szOtherStuff As LongPtr = 0, Optional ByVal hIcon As LongPtr = 0) As Long
Public DeclareWide PtrSafe Function ShellAbout Lib "shell32" Alias "ShellAboutW" (ByVal hwnd As LongPtr, ByVal szApp As String, Optional ByVal szOtherStuff As String = vbNullString, Optional ByVal hIcon As LongPtr = 0) As Long
Public Declare PtrSafe Function OpenRegStream Lib "shell32" (ByVal hkey As LongPtr, ByVal pszSubkey As LongPtr, ByVal pszValue As LongPtr, ByVal grfMode As STGM) As IStream
Public Declare PtrSafe Function SHObjectProperties Lib "shell32" (ByVal hwnd As LongPtr, ByVal shopObjectType As SHOBJPROP_FLAGS, ByVal pszObjectName As LongPtr, Optional ByVal pszPropertyPage As LongPtr) As BOOL
Public Declare PtrSafe Function SHFormatDrive Lib "shell32" (ByVal hwnd As LongPtr, ByVal drive As Long, ByVal fmtID As SHFMTDRV_ID, ByVal options As SHFMTDRV_OPTIONS) As SHFMTDRV_RETURN
Public Declare PtrSafe Function SHCreatePropSheetExtArray Lib "shell32" (ByVal hkey As LongPtr, ByVal pszSubkey As LongPtr, ByVal max_iface As Long) As LongPtr
Public DeclareWide PtrSafe Function SHAddFromPropSheetExtArray Lib "shell32" (ByVal hpsxa As LongPtr, ByVal lpfnAddPage As LongPtr, lParam As Any) As Long
Public DeclareWide PtrSafe Function SHReplaceFromPropSheetExtArray Lib "shell32" (ByVal hpsxa As LongPtr, ByVal uPageID As Long, ByVal lpfnReplaceWith As LongPtr, lParam As Any) As Long
Public Declare PtrSafe Sub SHDestroyPropSheetExtArray Lib "shell32" (ByVal hpsxa As LongPtr)
Public Declare PtrSafe Function SHOpenPropSheetA Lib "shell32" Alias "#707" (ByVal pszCaption As String, ahkeys As LongPtr, ByVal cKeys As Long, pclsidDefault As UUID, ByVal pdtobj As IDataObject, Optional ByVal psb As IShellBrowser, Optional ByVal pStartPage As String) As BOOL
Public Declare PtrSafe Function SHOpenPropSheetW Lib "shell32" (ByVal pszCaption As LongPtr, ahkeys As LongPtr, ByVal cKeys As Long, pclsidDefault As UUID, ByVal pdtobj As IDataObject, Optional ByVal psb As IShellBrowser, Optional ByVal pStartPage As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SHOpenPropSheet Lib "shell32" Alias "SHOpenPropSheetW" (ByVal pszCaption As String, ahkeys As LongPtr, ByVal cKeys As Long, pclsidDefault As UUID, ByVal pdtobj As IDataObject, Optional ByVal psb As IShellBrowser, Optional ByVal pStartPage As String) As BOOL
Public Declare PtrSafe Function AssocGetDetailsOfPropKey Lib "shell32" (ByVal psf As IShellFolder, ByVal pidl As LongPtr, pkey As PROPERTYKEY, pv As Variant, pfFoundPropKey As BOOL) As Long
Public DeclareWide PtrSafe Function AssocGetPropListForExt Lib "shell32" Alias "#778" (ByVal pszAssoc As String, pkey As PROPERTYKEY, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function AssocGetPropListForExt Lib "shell32" Alias "#778" (ByVal pszAssoc As LongPtr, pkey As PROPERTYKEY, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function PathCleanupSpec Lib "shell32" (ByVal pszDir As LongPtr, ByVal pszSpec As LongPtr) As PCS_RESULT
Public DeclareWide PtrSafe Function PathIsExe Lib "shell32" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsExe Lib "shell32" (ByVal pszPath As LongPtr) As BOOL
Public Declare PtrSafe Function PathMakeUniqueName Lib "shell32" (ByVal pszUniqueName As LongPtr, ByVal cchMax As Long, ByVal pszTemplate As LongPtr, Optional ByVal pszLongPlate As LongPtr, Optional ByVal pszDir As LongPtr) As BOOL
Public Declare PtrSafe Function PathYetAnotherMakeUniqueName Lib "shell32" (ByVal pszUniqueName As LongPtr, ByVal pszPath As LongPtr, Optional ByVal pszShort As LongPtr, Optional ByVal pszFileSpec As LongPtr) As Long
Public Declare PtrSafe Function PathResolve Lib "shell32" (ByVal pszPath As LongPtr, dirs As LongPtr, ByVal fFlags As PathResolveFlags) As Long
Public DeclareWide PtrSafe Function GetFileNameFromBrowse Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszFilePath As String, ByVal cchFilePath As Long, ByVal pszWorkingDir As String, ByVal pszDefExt As String, Optional ByVal pszFilters As String, Optional ByVal pszTitle As String) As BOOL
Public Declare PtrSafe Function GetFileNameFromBrowse Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszFilePath As LongPtr, ByVal cchFilePath As Long, ByVal pszWorkingDir As LongPtr, ByVal pszDefExt As LongPtr, Optional ByVal pszFilters As LongPtr, Optional ByVal pszTitle As LongPtr) As BOOL
Public Declare PtrSafe Sub PathGetShortPath Lib "shell32" (ByVal pszLongPath As LongPtr)
Public Declare PtrSafe Function SignalFileOpen Lib "shell32" (ByVal pidl As LongPtr) As BOOL
Public Declare PtrSafe Function SHStartNetConnectionDialogA Lib "shell32" Alias "#12" (ByVal hwnd As LongPtr, ByVal pszRemoteName As String, ByVal dwType As NetResourceTypeValues) As Long
Public Declare PtrSafe Function SHStartNetConnectionDialogW Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszRemoteName As LongPtr, ByVal dwType As NetResourceTypeValues) As Long
Public DeclareWide PtrSafe Function SHStartNetConnectionDialog Lib "shell32" Alias "SHStartNetConnectionDialogW" (ByVal hwnd As LongPtr, ByVal pszRemoteName As String, ByVal dwType As NetResourceTypeValues) As Long
Public Declare PtrSafe Function RestartDialog Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszPrompt As LongPtr, ByVal dwReturn As ExitWindowsExFlags) As Long
Public Declare PtrSafe Function RestartDialogEx Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszPrompt As LongPtr, ByVal dwReturn As ExitWindowsExFlags, ByVal dwReasonCode As SystemShutdownReasons) As Long
Public Declare PtrSafe Function PickIconDlg Lib "shell32" (ByVal hwnd As LongPtr, ByVal pszIconPath As LongPtr, ByVal cchIconPath As Long, Optional piIconIndex As Long) As Long
Public Declare PtrSafe Function ReadCabinetState Lib "shell32" (pcs As CABINETSTATE, ByVal cLength As Long) As BOOL
Public Declare PtrSafe Function WriteCabinetState Lib "shell32" (pcs As CABINETSTATE) As BOOL
Public Declare PtrSafe Function IsNetDrive Lib "shell32" (ByVal iDrive As Long) As Long
[Unimplemented, Description("'ANSI version documented but never actually existed.")] Public Declare PtrSafe Function SHCreateFileExtractIconA Lib "shell32" (ByVal pszFile As String, ByVal dwFileAttributes As FILE_ATTRIBUTES, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function SHCreateFileExtractIconW Lib "shell32" (ByVal pszFile As LongPtr, ByVal dwFileAttributes As FILE_ATTRIBUTES, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function SHCreateFileExtractIcon Lib "shell32" Alias "SHCreateFileExtractIconW" (ByVal pszFile As String, ByVal dwFileAttributes As FILE_ATTRIBUTES, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function Shell_GetCachedImageIndexA Lib "shell32" (ByVal pszIconFile As String, ByVal iIconIndex As Long, ByVal uIconFlags As Long) As Long
Public Declare PtrSafe Function Shell_GetCachedImageIndexW Lib "shell32" (ByVal pszIconFile As LongPtr, ByVal iIconIndex As Long, ByVal uIconFlags As Long) As Long
Public DeclareWide PtrSafe Function Shell_GetCachedImageIndex Lib "shell32" Alias "Shell_GetCachedImageIndexW" (ByVal pszIconFile As String, ByVal iIconIndex As Long, ByVal uIconFlags As Long) As Long
Public Declare PtrSafe Function SHFind_InitMenuPopup Lib "shell32" (ByVal hmenu As LongPtr, ByVal hwndOwner As LongPtr, ByVal idCmdFirst As Long, ByVal idCmdLast As Long) As IContextMenu
Public Declare PtrSafe Function SHFindFiles Lib "shell32" (ByVal pidlFolder As LongPtr, ByVal pidlSaveFile As LongPtr) As BOOL
Public Declare PtrSafe Function SHGetRealIDL Lib "shell32" (ByVal psf As IShellFolder, ByVal pidlSimple As LongPtr, ppidlReal As LongPtr) As Long
Public Declare PtrSafe Function Shell_MergeMenus Lib "shell32" (ByVal hmDst As LongPtr, ByVal hmSrc As LongPtr, ByVal uInsert As Long, ByVal uIDAdjust As Long, ByVal uIDAdjustMax As Long, ByVal uFlags As ShellMergeMenuFlags) As Long
Public Declare PtrSafe Function SHValidateUNC Lib "shell32" (ByVal hwndOwner As LongPtr, ByVal pszFile As LongPtr, ByVal fConnect As SHValidateUNC_Flags) As BOOL
Public DeclareWide PtrSafe Function RunFileDlg Lib "shell32" Alias "#61" (ByVal hwndOwner As LongPtr, ByVal hIcon As LongPtr, ByVal lpszDirectory As String, ByVal lpszTitle As String, ByVal lpszDescription As String, ByVal uFlags As RunDialogFlags) As BOOL
Public DeclareWide PtrSafe Function SHCreateFilter Lib "shell32" Alias "#818" (ByVal szName As String, ByVal InFolder As String, PropertyKey As PROPERTYKEY, ByVal nType As Long, ByVal Condition As ICondition, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function RealDriveType Lib "shell32" (ByVal iDrive As Long, ByVal fOKToHitNet As BOOL) As DriveTypes
Public Declare PtrSafe Sub CheckDiskSpace Lib "shell32" Alias "#733" ()
Public Declare PtrSafe Function CopyStreamUI Lib "shell32" Alias "#726" (ByVal pSrc As IStream, ByVal pDst As IStream, ByVal pDlg As IProgressDialog, ByVal ullMaxBytes As LongLong) As Long
Public Declare PtrSafe Function CopyStream Lib "shell32" (ByVal pSrc As IStream, ByVal pDst As IStream) As Long 'Calls CopyStreamUI(IStream,Istream,Null,0)
Public DeclareWide PtrSafe Function CreateInfoTipFromItem Lib "shell32" Alias "#260" (ByVal psf As IShellFolder2, ByVal pidl As LongPtr, ByVal pText As LongPtr, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function CreateInfoTipFromItem2 Lib "shell32" Alias "#264" (ByVal psf As IShellFolder2, ByVal pidl As LongPtr, pPropKey As PROPERTYKEY, ByVal pText As LongPtr, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Sub DisconnectWindowsDialog Lib "shell32" Alias "#254" (ByVal hwndUnused As LongPtr)
Public Declare PtrSafe Function GetAppPathFromLink Lib "shell32" Alias "#895" (ByVal pItem As IShellItem, ByVal pwszPathBuffer As LongPtr, ByVal dwBufferLen As Long) As Long
[Description("Determines whether the current user account needs to be elevated to execute a file")]
Public DeclareWide PtrSafe Function IsElevationRequired Lib "shell32" Alias "#865" (ByVal pwsExeFile As String) As BOOL
[Description("Determines whether Windows Search is installed")]
Public Declare PtrSafe Function IsSearchEnabled Lib "shell32" Alias "#902" () As BOOL
[Description("A display name is formatted as 'Name.ext (C:\Path\to\File)' (without quotes). Note that pwszPath must use backslashes to separate path components. Forward slashes will result in a copy of pwszPath in pwszDisplayName.")]
Public DeclareWide PtrSafe Function PathGetPathDisplayName Lib "shell32" Alias "#840" (ByVal pwszPath As String, ByVal pwszDisplayName As String, ByVal displayNameLength As Long) As Long
Public DeclareWide PtrSafe Function SHGetUserPicturePath Lib "shell32" Alias "#261" (ByVal pwszPicOrUserName As LongPtr, ByVal sguppFlags As SHGUPP_Flags, ByVal pwszPicPath As String, ByVal picPathLen As Long) As Long
Public DeclareWide PtrSafe Function SHGetUserPicturePathEx Lib "shell32" Alias "#810" (ByVal pwszPicOrUserName As LongPtr, ByVal sguppFlags As SHGUPP_Flags, ByVal pwszDesiredSrcExt As String, ByVal pwszPicPath As String, ByVal picPathLen As Long, ByVal pwzSrcPath As String, ByVal srcLen As Long) As Long
Public DeclareWide PtrSafe Function SHSetUserPicturePathW Lib "shell32" Alias "#234" (ByVal pwszAcctName As String, ByVal reserved As Long, ByVal pwszPictureFile As String) As Long
Public DeclareWide PtrSafe Function SHSetUserPicturePath Lib "shell32" Alias "#262" (ByVal pwszAcctName As String, ByVal reserved As Long, ByVal pwszPictureFile As String) As Long
[Description("Checks to see if the path exists. This includes remounting mapped network drives, prompting for ejectable media to be reinserted, creating the paths, prompting for the media to be formatted, and providing the appropriate user interfaces, if necessary. Read/write permissions for the medium are not checked.")]
Public Declare PtrSafe Function SHPathPrepareForWriteA Lib "shell32" (ByVal hwnd As LongPtr, ByVal punkEnableModless As IUnknown, ByVal pszPath As String, ByVal dwFlags As SHELL_PREP_FOR_WRITE_FLAGS) As Long
[Description("Checks to see if the path exists. This includes remounting mapped network drives, prompting for ejectable media to be reinserted, creating the paths, prompting for the media to be formatted, and providing the appropriate user interfaces, if necessary. Read/write permissions for the medium are not checked.")]
Public Declare PtrSafe Function SHPathPrepareForWriteW Lib "shell32" (ByVal hwnd As LongPtr, ByVal punkEnableModless As IUnknown, ByVal pszPath As LongPtr, ByVal dwFlags As SHELL_PREP_FOR_WRITE_FLAGS) As Long
[Description("Checks to see if the path exists. This includes remounting mapped network drives, prompting for ejectable media to be reinserted, creating the paths, prompting for the media to be formatted, and providing the appropriate user interfaces, if necessary. Read/write permissions for the medium are not checked.")]
Public DeclareWide PtrSafe Function SHPathPrepareForWrite Lib "shell32" Alias "SHPathPrepareForWriteW" (ByVal hwnd As LongPtr, ByVal punkEnableModless As IUnknown, ByVal pszPath As String, ByVal dwFlags As SHELL_PREP_FOR_WRITE_FLAGS) As Long
[Description("Retrieves the icon index from the system image list that is associated with a folder item.")]
Public Declare PtrSafe Function SHMapPIDLToSystemImageListIndex Lib "shell32" (ByVal pshf As IShellFolder, ByVal pidl As LongPtr, piIndexSel As Long) As Long
[Description("Creates a unique name for a stream or storage object from a template.")]
Public DeclareWide PtrSafe Function StgMakeUniqueName Lib "shell32" (ByVal pstgParent As IStorage, ByVal pszFileSpec As String, ByVal grfMode As STGM, riid As UUID, ppv As Any) As Long
[Description("Creates a unique name for a stream or storage object from a template.")]
Public DeclareWide PtrSafe Function StgMakeUniqueName Lib "shell32" (ByVal pstgParent As IStorage, ByVal pszFileSpec As LongPtr, ByVal grfMode As STGM, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHGetAttributesFromDataObject Lib "shell32" (ByVal pdo As IDataObject, ByVal dwAttributeMask As SFGAOF, pdwAttributes As SFGAOF, Optional pcItems As Long) As Long
Public DeclareWide PtrSafe Function SHCLSIDFromString Lib "shell32" (ByVal psz As String, pclsid As UUID) As Long
Public Declare PtrSafe Function SHCreateShellFolderViewEx Lib "shell32" (pcsfv As CSFV, ppsv As IShellView) As Long
[Description("[This function is retained only for backward compatibility. Use ExpandEnvironmentStrings instead.]")]
Public Declare PtrSafe Function DoEnvironmentSubstA Lib "shell32" (ByVal pszSrc As String, ByVal cchSrc As Long) As Long
[Description("[This function is retained only for backward compatibility. Use ExpandEnvironmentStrings instead.]")]
Public Declare PtrSafe Function DoEnvironmentSubstW Lib "shell32" (ByVal pszSrc As LongPtr, ByVal cchSrc As Long) As Long
[Description("[This function is retained only for backward compatibility. Use ExpandEnvironmentStrings instead.]")]
Public DeclareWide PtrSafe Function DoEnvironmentSubst Lib "shell32" Alias "DoEnvironmentSubstW" (ByVal pszSrc As String, ByVal cchSrc As Long) As Long
[Description("Retrieves the name of and handle to the executable (.exe) file associated with a specific document file.")]
Public Declare PtrSafe Function FindExecutableA Lib "shell32" (ByVal lpFile As String, ByVal lpDirectory As String, ByVal lpResult As String) As SE_ERR
[Description("Retrieves the name of and handle to the executable (.exe) file associated with a specific document file.")]
Public Declare PtrSafe Function FindExecutableW Lib "shell32" (ByVal lpFile As LongPtr, ByVal lpDirectory As LongPtr, ByVal lpResult As LongPtr) As SE_ERR
[Description("Retrieves the name of and handle to the executable (.exe) file associated with a specific document file.")]
Public DeclareWide PtrSafe Function FindExecutable Lib "shell32" Alias "FindExecutableW" (ByVal lpFile As String, ByVal lpDirectory As String, ByVal lpResult As String) As SE_ERR
[Description("Frees a file name mapping object that was retrieved by the SHFileOperation function.")]
Public Declare PtrSafe Sub SHFreeNameMappings Lib "shell32" (Optional ByVal hNameMappings As LongPtr)
[Description("Enforces strict validation of parameters used in a call to CreateProcess or ShellExecute.")]
Public DeclareWide PtrSafe Function SHEvaluateSystemCommandTemplate Lib "shell32" (ByVal pszCmdTemplate As String, ppszApplication As LongPtr, Optional ppszCommandLine As LongPtr, Optional ppszParameters As LongPtr) As Long
[Description("Enforces strict validation of parameters used in a call to CreateProcess or ShellExecute.")]
Public Declare PtrSafe Function SHEvaluateSystemCommandTemplate Lib "shell32" (ByVal pszCmdTemplate As LongPtr, ppszApplication As LongPtr, Optional ppszCommandLine As LongPtr, Optional ppszParameters As LongPtr) As Long
[Description("Retrieves an object that implements an IQueryAssociations interface.")]
Public DeclareWide PtrSafe Function AssocCreateForClasses Lib "shell32" (rgClasses As ASSOCIATIONELEMENT, ByVal cClasses As Long, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHGetDiskFreeSpaceExA Lib "shell32" (ByVal pszDirectoryName As String, pulFreeBytesAvailableToCaller As ULARGE_INTEGER, pulTotalNumberOfBytes As ULARGE_INTEGER, pulTotalNumberOfFreeBytes As ULARGE_INTEGER) As BOOL
Public Declare PtrSafe Function SHGetDiskFreeSpaceExW Lib "shell32" (ByVal pszDirectoryName As LongPtr, pulFreeBytesAvailableToCaller As ULARGE_INTEGER, pulTotalNumberOfBytes As ULARGE_INTEGER, pulTotalNumberOfFreeBytes As ULARGE_INTEGER) As BOOL
Public DeclareWide PtrSafe Function SHGetDiskFreeSpaceEx Lib "shell32" Alias "SHGetDiskFreeSpaceExW" (ByVal pszDirectoryName As String, pulFreeBytesAvailableToCaller As ULARGE_INTEGER, pulTotalNumberOfBytes As ULARGE_INTEGER, pulTotalNumberOfFreeBytes As ULARGE_INTEGER) As BOOL
Public DeclareWide PtrSafe Function SHGetDiskFreeSpace Lib "shell32" Alias "SHGetDiskFreeSpaceExW" (ByVal pszDirectoryName As String, pulFreeBytesAvailableToCaller As ULARGE_INTEGER, pulTotalNumberOfBytes As ULARGE_INTEGER, pulTotalNumberOfFreeBytes As ULARGE_INTEGER) As BOOL

[Description("Creates a name for a new shortcut based on the shortcut's proposed target. This function does not create the shortcut, just the name.")]
Public Declare PtrSafe Function SHGetNewLinkInfoA Lib "shell32" (ByVal pszLinkTo As String, ByVal pszDir As String, ByVal pszName As String, pfMustCopy As BOOL, ByVal uFlags As SHNewLinkInfoFlags) As BOOL
[Description("Creates a name for a new shortcut based on the shortcut's proposed target. This function does not create the shortcut, just the name.")]
Public Declare PtrSafe Function SHGetNewLinkInfoW Lib "shell32" (ByVal pszLinkTo As LongPtr, ByVal pszDir As LongPtr, ByVal pszName As LongPtr, pfMustCopy As BOOL, ByVal uFlags As SHNewLinkInfoFlags) As BOOL
[Description("Creates a name for a new shortcut based on the shortcut's proposed target. This function does not create the shortcut, just the name.")]
Public DeclareWide PtrSafe Function SHGetNewLinkInfo Lib "shell32" Alias "SHGetNewLinkInfoW" (ByVal pszLinkTo As String, ByVal pszDir As String, ByVal pszName As String, pfMustCopy As BOOL, ByVal uFlags As SHNewLinkInfoFlags) As BOOL
[Description("deprecated, instead invoke verbs on printers/netprinters using IContextMenu or ShellExecute()")]
Public Declare PtrSafe Function SHInvokePrinterCommandA Lib "shell32" (ByVal hwnd As LongPtr, ByVal uAction As SHPrintActions, ByVal lpBuf1 As String, lpBuf2 As Any, ByVal fModal As BOOL) As BOOL
[Description("deprecated, instead invoke verbs on printers/netprinters using IContextMenu or ShellExecute()")]
Public Declare PtrSafe Function SHInvokePrinterCommandW Lib "shell32" (ByVal hwnd As LongPtr, ByVal uAction As SHPrintActions, ByVal lpBuf1 As LongPtr, lpBuf2 As Any, ByVal fModal As BOOL) As BOOL
[Description("deprecated, instead invoke verbs on printers/netprinters using IContextMenu or ShellExecute()")]
Public DeclareWide PtrSafe Function SHInvokePrinterCommand Lib "shell32" Alias "SHInvokePrinterCommandW" (ByVal hwnd As LongPtr, ByVal uAction As SHPrintActions, ByVal lpBuf1 As String, lpBuf2 As Any, ByVal fModal As BOOL) As BOOL
Public DeclareWide PtrSafe Function SHIsFileAvailableOffline Lib "shell32" (ByVal pwszPath As String, pdwStatus As SHFileOfflineStatus) As Long
Public Declare PtrSafe Function SHIsFileAvailableOffline Lib "shell32" (ByVal pwszPath As LongPtr, pdwStatus As SHFileOfflineStatus) As Long
Public DeclareWide PtrSafe Function SHSetLocalizedName Lib "shell32" (ByVal pszPath As String, ByVal pszResModule As String, ByVal idsRes As Long) As Long
Public Declare PtrSafe Function SHSetLocalizedName Lib "shell32" (ByVal pszPath As LongPtr, ByVal pszResModule As LongPtr, ByVal idsRes As Long) As Long
Public DeclareWide PtrSafe Function SHRemoveLocalizedName Lib "shell32" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function SHRemoveLocalizedName Lib "shell32" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function SHGetLocalizedName Lib "shell32" (ByVal pszPath As String, ByVal pszResModule As String, ByVal cch As Long, pidsRes As Long) As Long
Public Declare PtrSafe Function SHGetLocalizedName Lib "shell32" (ByVal pszPath As LongPtr, ByVal pszResModule As LongPtr, ByVal cch As Long, pidsRes As Long) As Long
[Description("Checks if a drive supports long filenames (> 12 chars)")]
Public Declare PtrSafe Function IsLFNDriveA Lib "shell32" (ByVal pszPath As String) As BOOL
[Description("Checks if a drive supports long filenames (> 12 chars)")]
Public Declare PtrSafe Function IsLFNDriveW Lib "shell32" (ByVal pszPath As LongPtr) As BOOL
[Description("Checks if a drive supports long filenames (> 12 chars)")]
Public DeclareWide PtrSafe Function IsLFNDrive Lib "shell32" Alias "IsLFNDriveW" (ByVal pszPath As String) As BOOL
[Unimplemented, Description("'ANSI version documented but never actually existed.")] Public Declare PtrSafe Function SHEnumerateUnreadMailAccountsA Lib "shell32" (ByVal hKeyUser As LongPtr, ByVal dwIndex As Long, ByVal pszMailAddress As String, ByVal cchMailAddress As Long) As Long
Public Declare PtrSafe Function SHEnumerateUnreadMailAccountsW Lib "shell32" (ByVal hKeyUser As LongPtr, ByVal dwIndex As Long, ByVal pszMailAddress As LongPtr, ByVal cchMailAddress As Long) As Long
Public DeclareWide PtrSafe Function SHEnumerateUnreadMailAccounts Lib "shell32" Alias "SHEnumerateUnreadMailAccountsW" (ByVal hKeyUser As LongPtr, ByVal dwIndex As Long, ByVal pszMailAddress As String, ByVal cchMailAddress As Long) As Long
[Unimplemented, Description("'ANSI version documented but never actually existed.")] Public Declare PtrSafe Function SHGetUnreadMailCountA Lib "shell32" (ByVal hKeyUser As LongPtr, ByVal pszMailAddress As String, pdwCount As Long, pFileTime As FILETIME, ByVal pszShellExecuteCommand As String, ByVal cchShellExecuteCommand As Long) As Long
Public Declare PtrSafe Function SHGetUnreadMailCountW Lib "shell32" (ByVal hKeyUser As LongPtr, ByVal pszMailAddress As LongPtr, pdwCount As Long, pFileTime As FILETIME, ByVal pszShellExecuteCommand As LongPtr, ByVal cchShellExecuteCommand As Long) As Long
Public DeclareWide PtrSafe Function SHGetUnreadMailCount Lib "shell32" Alias "SHGetUnreadMailCountW" (ByVal hKeyUser As LongPtr, ByVal pszMailAddress As String, pdwCount As Long, pFileTime As FILETIME, ByVal pszShellExecuteCommand As String, ByVal cchShellExecuteCommand As Long) As Long
[Unimplemented, Description("'ANSI version documented but never actually existed.")] Public Declare PtrSafe Function SHSetUnreadMailCountA Lib "shell32" (ByVal pszMailAddress As String, ByVal dwCount As Long, ByVal pszShellExecuteCommand As String) As Long
Public Declare PtrSafe Function SHSetUnreadMailCountW Lib "shell32" (ByVal pszMailAddress As LongPtr, ByVal dwCount As Long, ByVal pszShellExecuteCommand As LongPtr) As Long
Public DeclareWide PtrSafe Function SHSetUnreadMailCount Lib "shell32" Alias "SHSetUnreadMailCountW" (ByVal pszMailAddress As String, ByVal dwCount As Long, ByVal pszShellExecuteCommand As String) As Long
Public Declare PtrSafe Function SHTestTokenMembership Lib "shell32" (ByVal hToken As LongPtr, ByVal ulRID As Long) As BOOL
Public DeclareWide PtrSafe Function CommandLineToArgvW Lib "shell32" (ByVal lpCmdLine As String, pNumArgs As Long) As LongPtr
Public DeclareWide PtrSafe Function CommandLineToArgvW Lib "shell32" (ByVal lpCmdLine As LongPtr, pNumArgs As Long) As LongPtr
Public DeclareWide PtrSafe Function Win32DeleteFile Lib "shell32" (ByVal pszPath As String) As BOOL
[Description("Specifies a unique application-defined Application User Model ID (AppUserModelID) that identifies the current process to the taskbar. This identifier allows an application to group its associated processes and windows under a single taskbar button.")]
Public Declare PtrSafe Function SetCurrentProcessExplicitAppUserModelID Lib "shell32" (ByVal AppID As LongPtr) As Long
Public Declare PtrSafe Function GetCurrentProcessExplicitAppUserModelID Lib "shell32" (AppID As LongPtr) As Long
Public Declare PtrSafe Function SHResolveLibrary Lib "shell32" (ByVal psiLibrary As IShellItem) As Long
Public Declare PtrSafe Function SHCreateDefaultPropertiesOp Lib "shell32" (ByVal psi As IShellItem, ppFileOp As IFileOperation) As Long
Public Declare PtrSafe Function SHSetDefaultProperties Lib "shell32" (ByVal hwnd As LongPtr, ByVal psi As IShellItem, [TypeHint(FILEOP_FLAGS, FILEOP_FLAGSEX)] ByVal dwOperationFlags As Long, ByVal pfops As IFileOperationProgressSink) As Long
Public Declare PtrSafe Function SHGetTemporaryPropertyForItem Lib "shell32" (ByVal psi As IShellItem, propkey As PROPERTYKEY, ppropvar As Variant) As Long
Public Declare PtrSafe Function SHSetTemporaryPropertyForItem Lib "shell32" (ByVal psi As IShellItem, propkey As PROPERTYKEY, ppropvar As Variant) As Long
[Description("Shows the library management dialog box, which enables users to manage the library folders and default save location.")]
Public DeclareWide PtrSafe Function SHShowManageLibraryUI Lib "shell32" (ByVal psiLibrary As IShellItem, ByVal hwndOwner As LongPtr, ByVal pszTitle As String, ByVal pszInstruction As String, ByVal lmdOptions As LIBRARYMANAGEDIALOGOPTIONS) As Long
[Description("Shows the library management dialog box, which enables users to manage the library folders and default save location.")]
Public DeclareWide PtrSafe Function SHShowManageLibraryUI Lib "shell32" (ByVal psiLibrary As IShellItem, ByVal hwndOwner As LongPtr, ByVal pszTitle As LongPtr, ByVal pszInstruction As LongPtr, ByVal lmdOptions As LIBRARYMANAGEDIALOGOPTIONS) As Long
Public Declare PtrSafe Function PathIsSlowA Lib "shell32" (ByVal pszFile As String, ByVal dwAttr As FILE_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function PathIsSlowW Lib "shell32" (ByVal pszFile As LongPtr, ByVal dwAttr As FILE_ATTRIBUTES) As BOOL
Public DeclareWide PtrSafe Function PathIsSlow Lib "shell32" Alias "PathIsSlowW" (ByVal pszFile As String, ByVal dwAttr As FILE_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function SHCreateQueryCancelAutoPlayMoniker Lib "shell32" (ppmoniker As IMoniker) As Long
Public Declare PtrSafe Sub PerUserInit Lib "mydocs" ()
Public Declare PtrSafe Sub SHChangeNotifyRegisterThread Lib "shell32" (ByVal status As SCNRT_STATUS)
[Description("SHFlushSFCache is called when the path to a special folder is changed. This ensures that the updated path stored in the registry is used rather than the cached value.")]
Public Declare PtrSafe Sub SHFlushSFCache Lib "shell32" ()
[Description("Deprecated. Use CoTaskMemAlloc.")]
Public Declare PtrSafe Function SHAlloc Lib "shell32" (ByVal cb As LongPtr) As LongPtr
[Description("Deprecated. Use CoTaskMemFree.")]
Public Declare PtrSafe Sub SHFree Lib "shell32" (ByVal pv As LongPtr)
[Description("Deprecated. No longer implemented after XP; will return E_NOTIMPL.")]
Public Declare PtrSafe Function SHLoadInProc Lib "shell32" (rclsid As UUID) As Long

Public Declare PtrSafe Function DAD_SetDragImage Lib "shell32" (ByVal him As LongPtr, pptOffset As POINT) As BOOL
[Description("This function uses a LongLong to represent a ByVal POINT; use PointToLongLong to wrap arguments.")]
Public Declare PtrSafe Function DAD_DragEnterEx Lib "shell32" (ByVal hwndTarget As LongPtr, ByVal ptStart As LongLong) As BOOL
[Description("This function uses a LongLong to represent a ByVal POINT; use PointToLongLong to wrap arguments.")]
Public Declare PtrSafe Function DAD_DragEnterEx2 Lib "shell32" (ByVal hwndTarget As LongPtr, ByVal ptStart As LongLong, ByVal pdtObject As IDataObject) As BOOL
Public Declare PtrSafe Function DAD_ShowDragImage Lib "shell32" (ByVal fShow As BOOL) As BOOL
[Description("This function uses a LongLong to represent a ByVal POINT; use PointToLongLong to wrap arguments.")]
Public Declare PtrSafe Function DAD_DragMove Lib "shell32" (ByVal pt As LongLong) As BOOL
Public Declare PtrSafe Function DAD_DragLeave Lib "shell32" () As BOOL
Public Declare PtrSafe Function DAD_AutoScroll Lib "shell32" (ByVal hwnd As LongPtr, pad As AUTO_SCROLL_DATA, pptNow As POINT) As BOOL

Public Const NUM_POINTS = 3
Public Type AUTO_SCROLL_DATA ' asd
    iNextSample As Long
    dwLastScroll As Long
    bFull As BOOL
    pts(0 To (NUM_POINTS - 1)) As POINT
    dwTimes(0 To (NUM_POINTS - 1)) As Long
End Type

[PackingAlignment(1)]
Public Type SHChangeDWORDAsIDList
    cb As Integer
    dwItem1 As Long
    dwItem2 As Long
    cbZero As Integer
End Type



Public Enum LIBRARYMANAGEDIALOGOPTIONS
    LMD_DEFAULT = 0
    LMD_ALLOWUNINDEXABLENETWORKLOCATIONS = &H1
End Enum

Public Enum SHFileOfflineStatus
    OFFLINE_STATUS_LOCAL = &H0001  ' If open, it's open locally
    OFFLINE_STATUS_REMOTE = &H0002  ' If open, it's open remotely
    OFFLINE_STATUS_INCOMPLETE = &H0004  ' The local copy is currently imcomplete.
'  The file will not be available offline
'  until it has been synchronized.
End Enum


Public Enum SHOpenPrintPropsFlags
    PRINT_PROP_FORCE_NAME = &H1
End Enum
Public Type OPEN_PRINTER_PROPS_INFOA
    dwSize As Long
    pszSheetName As String
    uSheetIndex As Long
    dwFlags As SHOpenPrintPropsFlags
    bModal As BOOL
End Type
Public Type OPEN_PRINTER_PROPS_INFOW
    dwSize As Long
    pszSheetName As LongPtr
    uSheetIndex As Long
    dwFlags As SHOpenPrintPropsFlags
    bModal As BOOL
End Type
'Alias OPEN_PRINTER_PROPS_INFO As OPEN_PRINTER_PROPS_INFOW
Public Type OPEN_PRINTER_PROPS_INFO
    dwSize As Long
    pszSheetName As LongPtr
    uSheetIndex As Long
    dwFlags As SHOpenPrintPropsFlags
    bModal As BOOL
End Type


Public Enum SHPrintActions
    PRINTACTION_OPEN = 0  ' pszBuf1:<PrinterName>
    PRINTACTION_PROPERTIES = 1  ' pszBuf1:<PrinterName>, pszBuf2:optional <PageName>
    PRINTACTION_NETINSTALL = 2  ' pszBuf1:<NetPrinterName>
    PRINTACTION_NETINSTALLLINK = 3  ' pszBuf1:<NetPrinterName>, pszBuf2:<path to store link>
    PRINTACTION_TESTPAGE = 4  ' pszBuf1:<PrinterName>
    PRINTACTION_OPENNETPRN = 5  ' pszBuf1:<NetPrinterName>
    PRINTACTION_DOCUMENTDEFAULTS = 6  ' pszBuf1:<PrinterName>
    PRINTACTION_SERVERPROPERTIES = 7  ' pszBuf1:<Server> or <NetPrinterName>
End Enum

Public Enum SHNewLinkInfoFlags
    SHGNLI_PIDL = &H000000001  ' pszLinkTo is a pidl
    SHGNLI_PREFIXNAME = &H000000002  ' Make name "Shortcut to xxx"
    SHGNLI_NOUNIQUE = &H000000004  ' don't do the unique name generation
    SHGNLI_NOLNK = &H000000008  ' don't add ".lnk" extension
' #if (_WIN32_IE >= 0x0600)
    SHGNLI_NOLOCNAME = &H000000010  ' use non localized (parsing) name from the target
' #endif
' #if (NTDDI_VERSION >= NTDDI_WIN7)
    SHGNLI_USEURLEXT = &H000000020  ' use ".url" extension instead of ".lnk"
End Enum

Public Type HANDLETOMAPPINGS
    uNumberOfMappings As Long ' Number of mappings in the array.
    lpSHNameMapping As LongPtr 'LPSHNAMEMAPPING ' Pointer to the array of mappings.
End Type
Public Type SHNAMEMAPPINGA
    pszOldPath As String
    pszNewPath As String
    cchOldPath As Long
    cchNewPath As Long
End Type
Public Type SHNAMEMAPPINGW
    pszOldPath As LongPtr
    pszNewPath As LongPtr
    cchOldPath As Long
    cchNewPath As Long
End Type
'Alias SHNAMEMAPPING As SHNAMEMAPPINGW
Public Type SHNAMEMAPPING
    pszOldPath As LongPtr
    pszNewPath As LongPtr
    cchOldPath As Long
    cchNewPath As Long
End Type

Public Type DRAGINFOA
   uSize As Long ' init with sizeof(DRAGINFO)
   pt As POINT
   fNC As Long
   lpFileList As String
   grfKeyState As KeyStateMouse
End Type
Public Type DRAGINFOW
   uSize As Long ' init with sizeof(DRAGINFO)
   pt As POINT
   fNC As Long
   lpFileList As LongPtr
   grfKeyState As KeyStateMouse
End Type
'Alias DRAGINFO As DRAGINFOW
Public Type DRAGINFO
   uSize As Long ' init with sizeof(DRAGINFO)
   pt As POINT
   fNC As Long
   lpFileList As LongPtr
   grfKeyState As KeyStateMouse
End Type

Public Enum ShellFolderViewMessages
' //              uMsg    wParam             lParam
    SFVM_MERGEMENU = 1 ' -                  LPQCMINFO
    SFVM_INVOKECOMMAND = 2 ' idCmd              -
    SFVM_GETHELPTEXT = 3 ' idCmd,cchMax       pszText
    SFVM_GETTOOLTIPTEXT = 4 ' idCmd,cchMax       pszText
    SFVM_GETBUTTONINFO = 5 ' -                  LPTBINFO
    SFVM_GETBUTTONS = 6 ' idCmdFirst,cbtnMax LPTBBUTTON
    SFVM_INITMENUPOPUP = 7 ' idCmdFirst,nIndex  hmenu
    'BEGIN UNDOCUMENTED
    SFVM_SELCHANGE = 8 ' idCmdFirst,nItem   SFVM_SELCHANGE_DATA*
    SFVM_DRAWITEM = 9 ' idCmdFirst         DRAWITEMSTRUCT*
    SFVM_MEASUREITEM = 10 ' idCmdFirst         MEASUREITEMSTRUCT*
    SFVM_EXITMENULOOP = 11 ' -                  -
    SFVM_PRERELEASE = 12 ' -                  -
    SFVM_GETCCHMAX = 13 ' LPCITEMIDLIST      pcchMax
    'END UNDOCUMENTED
    SFVM_FSNOTIFY = 14 ' LPCITEMIDLIST*     lEvent
    SFVM_WINDOWCREATED = 15 ' hwnd               -
    'BEGIN UNDOCUMENTED
    SFVM_WINDOWDESTROY = 16 ' hwnd               -
    SFVM_REFRESH = 17 ' BOOL fPreOrPost    -                         NB: this may be called multiple times in a row
    SFVM_SETFOCUS = 18 ' -                  -
    SFVM_QUERYCOPYHOOK = 20 ' -                  -
    SFVM_NOTIFYCOPYHOOK = 21 ' -                  COPYHOOKINFO*
    ' END UNDOCUMENTED
    SFVM_GETDETAILSOF = 23 ' iColumn            DETAILSINFO*
    SFVM_COLUMNCLICK = 24 ' iColumn            -
    SFVM_QUERYFSNOTIFY = 25 ' -                  SHChangeNotifyEntry *
    SFVM_DEFITEMCOUNT = 26 ' -                  UINT*
    SFVM_DEFVIEWMODE = 27 ' -                  FOLDERVIEWMODE*
    SFVM_UNMERGEMENU = 28 ' -                  hmenu
    'BEGIN UNDOCUMENTED
    SFVM_INSERTITEM = 29 ' pidl               -
    SFVM_DELETEITEM = 30 ' pidl               -
    ' END UNDOCUMENTED
    SFVM_UPDATESTATUSBAR = 31 ' fInitialize        -
    SFVM_BACKGROUNDENUM = 32 ' -                  -
    ' BEGIN UNDOCUMENTED
    SFVM_GETWORKINGDIR = 33 ' uMax               pszDir
    SFVM_GETCOLSAVESTREAM = 34 ' flags              IStream **
    SFVM_SELECTALL = 35 ' -                  -
    'END UNDOCUMENTED
    SFVM_DIDDRAGDROP = 36 ' dwEffect           IDataObject *
    SFVM_SUPPORTSIDENTITY = 37 ' -                  -                         // NOT USED: must support IShellFolder2
    SFVM_FOLDERISPARENT = 38 ' -                  pidlChild
    ' END
    SFVM_SETISFV = 39 ' -                  IShellFolderView*
    SFVM_GETVIEWS = 40 ' SHELLVIEWID*       IEnumSFVViews **
    SFVM_THISIDLIST = 41 ' -                  LPITMIDLIST*
    ' UNDOCUMENTED
    SFVM_GETITEMIDLIST = 42 ' iItem              LPITMIDLIST*
    SFVM_SETITEMIDLIST = 43 ' iItem              LPITEMIDLIST
    SFVM_INDEXOFITEMIDLIST = 44 ' *iItem             LPITEMIDLIST
    SFVM_ODFINDITEM = 45 ' *iItem             NM_FINDITEM*
    SFVM_HWNDMAIN = 46 '                    hwndMain
    SFVM_ADDPROPERTYPAGES = 47 ' -                  SFVM_PROPPAGE_DATA *
    SFVM_BACKGROUNDENUMDONE = 48 ' -                  -
    SFVM_GETNOTIFY = 49 ' LPITEMIDLIST*      LONG*
    'UNDOCUMENTED
    SFVM_ARRANGE = 50 ' -                  lParamSort
    SFVM_QUERYSTANDARDVIEWS = 51 ' -                  BOOL *                    // NOT USED: must use SFVM_GETVIEWDATA instead
    SFVM_QUERYREUSEEXTVIEW = 52 ' -                  BOOL *                    // NOT USED
    'END
    SFVM_GETSORTDEFAULTS = 53 ' iDirection         iParamSort
    SFVM_GETEMPTYTEXT = 54 ' cchMax             pszText
    SFVM_GETITEMICONINDEX = 55 ' iItem              int *piIcon
    SFVM_DONTCUSTOMIZE = 56 ' -                  BOOL *pbDontCustomize     // NOT USED
    'END
    SFVM_SIZE = 57 ' -                  -
    SFVM_GETZONE = 58 ' -                  DWORD*
    SFVM_GETPANE = 59 ' Pane ID            DWORD*
    SFVM_ISOWNERDATA = 60 ' ISOWNERDATA        BOOL *
    SFVM_GETODRANGEOBJECT = 61 ' iWhich             ILVRange **
    SFVM_ODCACHEHINT = 62 ' -                  NMLVCACHEHINT *
    SFVM_GETHELPTOPIC = 63 ' -                  SFVM_HELPTOPIC_DATA *
    SFVM_OVERRIDEITEMCOUNT = 64 ' -                  UINT*                     // NOT USED: allowed override of actual item count for sizing calculations
    SFVM_GETHELPTEXTW = 65 ' idCmd,cchMax       pszText - unicode
    SFVM_GETTOOLTIPTEXTW = 66 ' idCmd,cchMax       pszText - unicode
    SFVM_GETIPERSISTHISTORY = 67 '                    IPersistHistory **
    'END
    SFVM_GETANIMATION = 68 ' HINSTANCE *        WCHAR *
    SFVM_GETHELPTEXTA = 69 ' idCmd,cchMax       pszText - ansi
    SFVM_GETTOOLTIPTEXTA = 70 ' idCmd,cchMax       pszText - ansi
    SFVM_GETICONOVERLAY = 71 ' iItem              int iOverlayIndex
    SFVM_SETICONOVERLAY = 72 ' iItem              int * piOverlayIndex
    SFVM_ALTERDROPEFFECT = 73 ' DWORD*             IDataObject*
    SFVM_DELAYWINDOWCREATE = 74 ' HWND               - posted version of SFVM_WINDOWCREATED, no params
    SFVM_FORCEWEBVIEW = 75 ' BOOL*              -
    SFVM_GETVIEWINFO = 76 ' fvm.uViewMode      SFVM_VIEWINFO_DATA*          // NOT USED: shipped in Whistler Beta 1 only, remove soon
    SFVM_GETCUSTOMVIEWINFO = 77 ' -                  SFVM_CUSTOMVIEWINFO_DATA*
    SFVM_FOLDERSETTINGSFLAGS = 78 ' -                  DWORD * (FWF_ flags)
    SFVM_ENUMERATEDITEMS = 79 ' UINT celt          LPCITEMIDLIST* rgpidl      // fired once at view creation, before first SFVM_GETVIEWDATA SFVM_GETDEFERREDVIEWSETTINGS
    SFVM_GETVIEWDATA = 80 ' fvm.uViewMode      SFVM_VIEW_DATA*
    SFVM_GETWEBVIEW_TEMPLATE = 81 ' fvm.uViewMode      SFVM_WEBVIEW_TEMPLATE_DATA*  // NOTE: going away soon
    SFVM_GETWEBVIEWLAYOUT = 82 ' fvm.uViewMode      SFVM_WEBVIEW_LAYOUT_DATA*
    SFVM_GETWEBVIEWCONTENT = 83 ' -                  SFVM_WEBVIEW_CONTENT_DATA*
    SFVM_GETWEBVIEWTASKS = 84 ' -                  SFVM_WEBVIEW_TASKSECTION_DATA*
    SFVM_GETWEBVIEWTHEME = 86 ' -                  SFVM_WEBVIEW_THEME_DATA* // HACK for Whistler, will remove when DirectUI goes DLL
    SFVM_SORTLISTDATA = 87 ' PFNLVCOMPARE       lParamSort
    SFVM_GETWEBVIEWBARRICADE = 88 ' -                  Element* // HACK for Whistler, will remove when DirectUI goes DLL
    SFVM_ENUMWEBVIEWTASKS = 90 ' -                  SFVM_WEBVIEW_ENUMTASKSECTION_DATA*
    SFVM_SETEMPTYTEXT = 91 ' -                  pszText
    SFVM_GETDEFERREDVIEWSETTINGS = 92 ' -                  SFVM_DEFERRED_VIEW_SETTINGS* // set the default view settings
        
    SFVCB_SELECTIONCHANGED = &H0008
    SFVCB_DRAWMENUITEM = &H0009
    SFVCB_MEASUREMENUITEM = &H000A
    SFVCB_EXITMENULOOP = &H000B
    SFVCB_VIEWRELEASE = &H000C
    SFVCB_GETNAMELENGTH = &H000D
    SFVCB_WINDOWCLOSING = &H0010
    SFVCB_LISTREFRESHED = &H0011
    SFVCB_WINDOWFOCUSED = &H0012
    SFVCB_REGISTERCOPYHOOK = &H0014
    SFVCB_COPYHOOKCALLBACK = &H0015
    SFVCB_ADDINGOBJECT = &H001D
    SFVCB_REMOVINGOBJECT = &H001E
    SFVCB_GETCOMMANDDIR = &H0021
    SFVCB_GETCOLUMNSTREAM = &H0022
    SFVCB_CANSELECTALL = &H0023
    SFVCB_ISSTRICTREFRESH = &H0025
    SFVCB_ISCHILDOBJECT = &H0026
    SFVCB_GETEXTVIEWS = &H0028
End Enum

Public Type SFVM_SELCHANGE_DATA
    uOldState As Long
    uNewState As Long
    lParamItem As LongPtr
End Type

Public Type COPYHOOKINFO
    hwnd As LongPtr
    wFunc As Long
    wFlags As Long
    pszSrcFile As LongPtr
    dwSrcAttribs As Long
    pszDestFile As LongPtr
    dwDestAttribs As Long
End Type

Public Type DETAILSINFO
    pidl As LongPtr
    fmt As Long
    cxChar As Long
    str As STRRET
    iImage As Long
End Type

Public Type SFVM_PROPPAGE_DATA
    dwReserved As Long
    pfn As LongPtr 'LPFNADDPROPSHEETPAGE
    lParam As LongPtr
End Type

Public Type SFVM_HELPTOPIC_DATA
    wszHelpFile(0 To (MAX_PATH - 1)) As Integer
    wszHelpTopic(0 To (MAX_PATH - 1)) As Integer
End Type

Public Enum SFVMQVIF
    SFVMQVI_NORMAL = &H0  ' out: let defview decide what to do
    SFVMQVI_INCLUDE = &H1  ' out: force include
    SFVMQVI_EXCLUDE = &H2  ' out: force exclude
End Enum

Public Type SFVM_VIEWINFO_DATA
    bWantWebview As Long ' in: caller should return template
    dwOptions As SFVMQVIF ' out: SFVMQVI_ flags
    szWebView(0 To (MAX_PATH - 1)) As Integer ' out: webview template path
End Type

Public Type SFVM_VIEW_DATA
    dwOptions As SFVMQVIF ' out: SFVMQVI_ flags for the [in,wParam]uViewMode
End Type

Public Type SFVM_DEFERRED_VIEW_SETTINGS
    fvm As FOLDERVIEWMODE ' out: view mode
    fGroupView As BOOL ' out: group view on/off
    uSortCol As Long ' out: sort by scid
    iSortDirection As Long ' out: ascending or descending sort
    fFlags As FOLDERFLAGS ' out: folder flags to set (supports FWF_AUTOARRANGE)
End Type

Public Type SFVM_WEBVIEW_TEMPLATE_DATA
    szWebView(0 To (MAX_PATH - 1)) As Integer ' out: webview template path for [in,wParam]uViewMode
End Type

Public Const CRID_COLORCOUNT = 2
Public Type SFVM_CUSTOMVIEWINFO_DATA
    crCustomColors(0 To (CRID_COLORCOUNT - 1)) As Long
    szIconAreaImage(0 To (MAX_PATH - 1)) As Integer ' Note: the old struct used INTERNET_MAX_URL_LENGTH, but we only use local cases so this isn't needed
End Type


' typedef HRESULT (CALLBACK * LPFNVIEWCALLBACK)(_In_ IShellView *psvOuter,
                                              ' _In_ IShellFolder *psf,
                                              ' _In_ HWND hwndMain,
                                              ' UINT uMsg,
                                              ' WPARAM wParam,
                                              ' LPARAM lParam);


Public Delegate Function ViewCallback (ByVal psvOuter As IShellView, ByVal psf As IShellFolder, ByVal hwndMain As LongPtr, _
                                        ByVal uMsg As ShellFolderViewMessages, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As Long

' Public Type CSFV
'     cbSize As Long
'     pshf As IShellFolder
'     psvOuter As IShellView
'     pidl As LongPtr
'     lEvents As Long
'     pfnCallback As ViewCallback ' No callback if NULL
'     fvm As FOLDERVIEWMODE
' End Type
Public Type CSFV
    cbSize As Long
    pshf As IShellFolder
    psvOuter As IShellView
    pidl As LongPtr
    lEvents As Long
    pfnCallback As LongPtr ' No callback if NULL
    fvm As FOLDERVIEWMODE
End Type


Public Enum SHELL_PREP_FOR_WRITE_FLAGS
    SHPPFW_NONE = &H00000000
    SHPPFW_DEFAULT = SHPPFW_DIRCREATE  ' May change
    SHPPFW_DIRCREATE = &H00000001  ' Create the directory if it doesn't exist without asking the user.
    SHPPFW_ASKDIRCREATE = &H00000002  ' Create the directory if it doesn't exist after asking the user.
    SHPPFW_IGNOREFILENAME = &H00000004  ' Ignore the last item in pszPath because it's a file.  Example: pszPath="C:\DirA\DirB", only use "C:\DirA".
    SHPPFW_NOWRITECHECK = &H00000008  ' Caller only needs to read from the drive, so don't check if it's READ ONLY.
    SHPPFW_MEDIACHECKONLY = &H00000010  ' do the retrys on the media (or net path), return errors if the file can't be found
End Enum

Public Enum SHGUPP_Flags
    SGUPP_DIRECTORY = &H00000001 'Make pwszPicPath return only the picture directory
    SGUPP_DEFAULTDIRECTORY = &H00000002 'Make pwszPicPath return only the default pictures directory
    SGUPP_CREATEPICTURESDIR = &H80000000 'Create the (default) pictures directory if it doesn't exist
End Enum

Public Enum RunDialogFlags
    RFF_NOBROWSE = &H0001
    RFF_NODEFAULT = &H0002
    RFF_CALCDIRECTORY = &H0004
    RFF_NOLABEL = &H0008
    RFF_NOSEPARATEMEM = &H0020
End Enum
Public Type NMRUNFILEDLGW
    hdr As NMHDR
    lpszFile As LongPtr
    lpszDirectory As LongPtr
    nShow As Long
End Type
[Description("Allow the application to run")] Public Const RF_OK  = &H0000
[Description("Cancel the operation and close the dialog")] Public Const RF_CANCEL  = &H0001
[Description("Cancel the operation, but leave the dialog open")] Public Const RF_RETRY  = &H0002



Public Enum SHValidateUNC_Flags
    VALIDATEUNC_CONNECT = &H0001  ' connect a drive letter
    VALIDATEUNC_NOUI = &H0002  ' don't bring up UI
    VALIDATEUNC_PRINT = &H0004  ' validate as print share instead of disk share
' #if (NTDDI_VERSION >= NTDDI_VISTA)
    VALIDATEUNC_PERSIST = &H0008  ' the connection should be made persistent
    VALIDATEUNC_VALID = &H000F  ' valid flags
End Enum


Public Enum ShellMergeMenuFlags
    MM_ADDSEPARATOR = &H00000001
    MM_SUBMENUSHAVEIDS = &H00000002
    MM_DONTREMOVESEPS = &H00000004
End Enum
/*
typedef struct {
WORD cLength;
WORD nVersion;
BOOL fFullPathTitle : 1;
BOOL fSaveLocalView : 1;
BOOL fNotShell : 1;
BOOL fSimpleDefault : 1;
BOOL fDontShowDescBar : 1;
BOOL fNewWindowMode : 1;
BOOL fShowCompColor : 1;
BOOL fDontPrettyNames : 1;
BOOL fAdminsCreateCommonGroups : 1;
UINT fUnusedFlags : 7;
UINT fMenuEnumFilter;
} CABINETSTATE, *LPCABINETSTATE;
*/
Public Type CABINETSTATE
	cLength As Integer
    nVersion As Integer
    Bitfield As Long
    fMenuEnumFilter As Long
End Type

Public Const CABINETSTATE_VERSION = 2

Public Enum NetResourceTypeValues
    RESOURCETYPE_ANY = &H00000000
    RESOURCETYPE_DISK = &H00000001
    RESOURCETYPE_PRINT = &H00000002
    RESOURCETYPE_RESERVED = &H00000008
    RESOURCETYPE_UNKNOWN = &HFFFFFFFF
End Enum


Public Enum PathResolveFlags
    PRF_VERIFYEXISTS = &H0001
    PRF_TRYPROGRAMEXTENSIONS = (&H0002 Or PRF_VERIFYEXISTS)
    PRF_FIRSTDIRDEF = &H0004
    PRF_DONTFINDLNK = &H0008  ' if PRF_TRYPROGRAMEXTENSIONS is specified
' #if (NTDDI_VERSION >= NTDDI_WINXPSP2)
    PRF_REQUIREABSOLUTE = &H0010
End Enum

Public Enum SHFMTDRV_ID
    SHFMT_ID_DEFAULT = &HFFFF&
End Enum
Public Enum SHFMTDRV_OPTIONS
    SHFMT_OPT_FULL = &H0001
    SHFMT_OPT_SYSONLY = &H0002
End Enum
Public Enum SHFMTDRV_RETURN
    SHFMT_ERROR = &HFFFFFFFF  ' Error on last format, drive may be formatable
    SHFMT_CANCEL = &HFFFFFFFE  ' Last format was canceled
    SHFMT_NOFORMAT = &HFFFFFFFD  ' Drive is not formatable
End Enum


Public Enum SHOBJPROP_FLAGS
    SHOP_PRINTERNAME = &H00000001  ' pszObjectName points to a printer friendly name
    SHOP_FILEPATH = &H00000002  ' pszObjectName points to a fully qualified path+file name
    SHOP_VOLUMEGUID = &H00000004  ' pszObjectName points to a Volume GUID
End Enum

Public Enum RESTRICTIONS
	REST_NONE = &H00000000
	REST_NORUN = &H00000001
	REST_NOCLOSE = &H00000002
	REST_NOSAVESET = &H00000004
	REST_NOFILEMENU = &H00000008
	REST_NOSETFOLDERS = &H00000010
	REST_NOSETTASKBAR = &H00000020
	REST_NODESKTOP = &H00000040
	REST_NOFIND = &H00000080
	REST_NODRIVES = &H00000100
	REST_NODRIVEAUTORUN = &H00000200
	REST_NODRIVETYPEAUTORUN = &H00000400
	REST_NONETHOOD = &H00000800
	REST_STARTBANNER = &H00001000
	REST_RESTRICTRUN = &H00002000
	REST_NOPRINTERTABS = &H00004000
	REST_NOPRINTERDELETE = &H00008000&
	REST_NOPRINTERADD = &H00010000
	REST_NOSTARTMENUSUBFOLDERS = &H00020000
	REST_MYDOCSONNET = &H00040000
	REST_NOEXITTODOS = &H00080000
	REST_ENFORCESHELLEXTSECURITY = &H00100000
	REST_LINKRESOLVEIGNORELINKINFO = &H00200000
	REST_NOCOMMONGROUPS = &H00400000
	REST_SEPARATEDESKTOPPROCESS = &H00800000
	REST_NOWEB = &H01000000
	REST_NOTRAYCONTEXTMENU = &H02000000
	REST_NOVIEWCONTEXTMENU = &H04000000
	REST_NONETCONNECTDISCONNECT = &H08000000
	REST_STARTMENULOGOFF = &H10000000
	REST_NOSETTINGSASSIST = &H20000000
	REST_NOINTERNETICON = &H40000001
	REST_NORECENTDOCSHISTORY = &H40000002
	REST_NORECENTDOCSMENU = &H40000003
	REST_NOACTIVEDESKTOP = &H40000004
	REST_NOACTIVEDESKTOPCHANGES = &H40000005
	REST_NOFAVORITESMENU = &H40000006
	REST_CLEARRECENTDOCSONEXIT = &H40000007
	REST_CLASSICSHELL = &H40000008
	REST_NOCUSTOMIZEWEBVIEW = &H40000009
	REST_NOHTMLWALLPAPER = &H40000010
	REST_NOCHANGINGWALLPAPER = &H40000011
	REST_NODESKCOMP = &H40000012
	REST_NOADDDESKCOMP = &H40000013
	REST_NODELDESKCOMP = &H40000014
	REST_NOCLOSEDESKCOMP = &H40000015
	REST_NOCLOSE_DRAGDROPBAND = &H40000016
	REST_NOMOVINGBAND = &H40000017
	REST_NOEDITDESKCOMP = &H40000018
	REST_NORESOLVESEARCH = &H40000019
	REST_NORESOLVETRACK = &H4000001A
	REST_FORCECOPYACLWITHFILE = &H4000001B
	REST_NOLOGO3CHANNELNOTIFY = &H4000001C
	REST_NOFORGETSOFTWAREUPDATE = &H4000001D
	REST_NOSETACTIVEDESKTOP = &H4000001E
	REST_NOUPDATEWINDOWS = &H4000001F
	REST_NOCHANGESTARMENU = &H40000020
	REST_NOFOLDEROPTIONS = &H40000021
	REST_HASFINDCOMPUTERS = &H40000022
	REST_INTELLIMENUS = &H40000023
	REST_RUNDLGMEMCHECKBOX = &H40000024
	REST_ARP_ShowPostSetup = &H40000025
	REST_NOCSC = &H40000026
	REST_NOCONTROLPANEL = &H40000027
	REST_ENUMWORKGROUP = &H40000028
	REST_ARP_NOARP = &H40000029
	REST_ARP_NOREMOVEPAGE = &H4000002A
	REST_ARP_NOADDPAGE = &H4000002B
	REST_ARP_NOWINSETUPPAGE = &H4000002C
	REST_GREYMSIADS = &H4000002D
	REST_NOCHANGEMAPPEDDRIVELABEL = &H4000002E
	REST_NOCHANGEMAPPEDDRIVECOMMENT = &H4000002F
	REST_MaxRecentDocs = &H40000030
	REST_NONETWORKCONNECTIONS = &H40000031
	REST_FORCESTARTMENULOGOFF = &H40000032
	REST_NOWEBVIEW = &H40000033
	REST_NOCUSTOMIZETHISFOLDER = &H40000034
	REST_NOENCRYPTION = &H40000035
	REST_DONTSHOWSUPERHIDDEN = &H40000037
	REST_NOSHELLSEARCHBUTTON = &H40000038
	REST_NOHARDWARETAB = &H40000039
	REST_NORUNASINSTALLPROMPT = &H4000003A
	REST_PROMPTRUNASINSTALLNETPATH = &H4000003B
	REST_NOMANAGEMYCOMPUTERVERB = &H4000003C
	REST_DISALLOWRUN = &H4000003E
	REST_NOWELCOMESCREEN = &H4000003F
	REST_RESTRICTCPL = &H40000040
	REST_DISALLOWCPL = &H40000041
	REST_NOSMBALLOONTIP = &H40000042
	REST_NOSMHELP = &H40000043
	REST_NOWINKEYS = &H40000044
	REST_NOENCRYPTONMOVE = &H40000045
	REST_NOLOCALMACHINERUN = &H40000046
	REST_NOCURRENTUSERRUN = &H40000047
	REST_NOLOCALMACHINERUNONCE = &H40000048
	REST_NOCURRENTUSERRUNONCE = &H40000049
	REST_FORCEACTIVEDESKTOPON = &H4000004A
	REST_NOVIEWONDRIVE = &H4000004C
	REST_NONETCRAWL = &H4000004D
	REST_NOSHAREDDOCUMENTS = &H4000004E
	REST_NOSMMYDOCS = &H4000004F
	REST_NOSMMYPICS = &H40000050
	REST_ALLOWBITBUCKDRIVES = &H40000051
	REST_NONLEGACYSHELLMODE = &H40000052
	REST_NOCONTROLPANELBARRICADE = &H40000053
	REST_NOSTARTPAGE = &H40000054
	REST_NOAUTOTRAYNOTIFY = &H40000055
	REST_NOTASKGROUPING = &H40000056
	REST_NOCDBURNING = &H40000057
	REST_MYCOMPNOPROP = &H40000058
	REST_MYDOCSNOPROP = &H40000059
	REST_NOSTARTPANEL = &H4000005A
	REST_NODISPLAYAPPEARANCEPAGE = &H4000005B
	REST_NOTHEMESTAB = &H4000005C
	REST_NOVISUALSTYLECHOICE = &H4000005D
	REST_NOSIZECHOICE = &H4000005E
	REST_NOCOLORCHOICE = &H4000005F
	REST_SETVISUALSTYLE = &H40000060
	REST_STARTRUNNOHOMEPATH = &H40000061
	REST_NOUSERNAMEINSTARTPANEL = &H40000062
	REST_NOMYCOMPUTERICON = &H40000063
	REST_NOSMNETWORKPLACES = &H40000064
	REST_NOSMPINNEDLIST = &H40000065
	REST_NOSMMYMUSIC = &H40000066
	REST_NOSMEJECTPC = &H40000067
	REST_NOSMMOREPROGRAMS = &H40000068
	REST_NOSMMFUPROGRAMS = &H40000069
	REST_NOTRAYITEMSDISPLAY = &H4000006A
	REST_NOTOOLBARSONTASKBAR = &H4000006B
	REST_NOSMCONFIGUREPROGRAMS = &H4000006F
	REST_HIDECLOCK = &H40000070
	REST_NOLOWDISKSPACECHECKS = &H40000071
	REST_NOENTIRENETWORK = &H40000072
	REST_NODESKTOPCLEANUP = &H40000073
	REST_BITBUCKNUKEONDELETE = &H40000074
	REST_BITBUCKCONFIRMDELETE = &H40000075
	REST_BITBUCKNOPROP = &H40000076
	REST_NODISPBACKGROUND = &H40000077
	REST_NODISPSCREENSAVEPG = &H40000078
	REST_NODISPSETTINGSPG = &H40000079
	REST_NODISPSCREENSAVEPREVIEW = &H4000007A
	REST_NODISPLAYCPL = &H4000007B
	REST_HIDERUNASVERB = &H4000007C
	REST_NOTHUMBNAILCACHE = &H4000007D
	REST_NOSTRCMPLOGICAL = &H4000007E
	REST_NOPUBLISHWIZARD = &H4000007F
	REST_NOONLINEPRINTSWIZARD = &H40000080
	REST_NOWEBSERVICES = &H40000081
	REST_ALLOWUNHASHEDWEBVIEW = &H40000082
	REST_ALLOWLEGACYWEBVIEW = &H40000083
	REST_REVERTWEBVIEWSECURITY = &H40000084
	REST_INHERITCONSOLEHANDLES = &H40000086
	REST_SORTMAXITEMCOUNT = &H40000087
	REST_NOREMOTERECURSIVEEVENTS = &H40000089
	REST_NOREMOTECHANGENOTIFY = &H40000091
	REST_NOSIMPLENETIDLIST = &H40000092
	REST_NOENUMENTIRENETWORK = &H40000093
	REST_NODETAILSTHUMBNAILONNETWORK = &H40000094
	REST_NOINTERNETOPENWITH = &H40000095
	REST_DONTRETRYBADNETNAME = &H4000009B
	REST_ALLOWFILECLSIDJUNCTIONS = &H4000009C
	REST_NOUPNPINSTALL = &H4000009D
	REST_ARP_DONTGROUPPATCHES = &H400000AC
	REST_ARP_NOCHOOSEPROGRAMSPAGE = &H400000AD
	REST_NODISCONNECT = &H41000001
	REST_NOSECURITY = &H41000002
	REST_NOFILEASSOCIATE = &H41000003
	REST_ALLOWCOMMENTTOGGLE = &H41000004
	REST_USEDESKTOPINICACHE = &H41000005
End Enum

'Values for LIMITINPUT.dwMask
Public Enum LI_Mask
    LIM_FLAGS = &H1      'dwFlags used
    LIM_FILTER = &H2     'pszFilter used
    LIM_HINST = &H8      'hinst contains valid data. Generally must be set.
    LIM_TITLE = &H10     'pszTitle used. Tooltip title.
    LIM_MESSAGE = &H20   'pszMessage used. Tooltip main message.
    LIM_ICON = &H40      'hicon used. Can use default icons e.g. IDI_HAND. Loaded from .hInst.
    LIM_NOTIFY = &H80    'hwndNotify used. NOTE: Must be set to receive notifications. Automatic finding of parent broken.
    LIM_TIMEOUT = &H100  'iTimeout used. Default timeout=10000.
    LIM_TIPWIDTH = &H200 'cxTipWidth used. Default 500px.
End Enum

'Values for LIMITINPUT.dwFlags
Public Enum LI_Flags
    LIF_INCLUDEFILTER = &H0     'Default: pszFilter specifies what to include.
    LIF_EXCLUDEFILTER = &H1     'pszFilter specifies what to exclude.
    LIF_CATEGORYFILTER = &H2    'pszFilter uses LICF_* categories, not a string of chars.

    LIF_WARNINGBELOW = &H0      'Default: Tooltip below.
    LIF_WARNINGABOVE = &H4      'Tooltip above.
    LIF_WARNINGCENTERED = &H8   'Tooltip centered.
    LIF_WARNINGOFF = &H10       'Disable tooltip.

    LIF_FORCEUPPERCASE = &H20   'Makes chars uppercase.
    LIF_FORCELOWERCASE = &H40   'Makes chars lowercase. (This and forceupper mutually exclusive)

    LIF_MESSAGEBEEP = &H0       'Default: System default beep played.
    LIF_SILENT = &H80           'No beep.

    LIF_NOTIFYONBADCHAR = &H100 'Send WM_NOTIFY LIN_NOTIFYBADCHAR. NOTE: Must set LIM_NOTIFY flag and .hwndNotify member.
    LIF_HIDETIPONVALID = &H200  'Timeout tooltip early if valid char entered.

    LIF_PASTESKIP = &H0         'Default: Paste any allowed characters, skip disallowed.
    LIF_PASTESTOP = &H400       'Paste until first disallowed character encountered.
    LIF_PASTECANCEL = &H800     'Cancel paste entirely if any disallowed character.

    LIF_KEEPCLIPBOARD = &H1000  'If not set, modifies clipboard to what was pasted after paste flags executed.
End Enum

'Filters support CT_TYPE1 categories:
Public Const LICF_UPPER = &H1
Public Const LICF_LOWER = &H2
Public Const LICF_DIGIT = &H4
Public Const LICF_SPACE = &H8
Public Const LICF_PUNCT = &H10  'Punctuation
Public Const LICF_CNTRL = &H20  'Control characters
Public Const LICF_BLANK = &H40
Public Const LICF_XDIGIT = &H80  'Hexadecimal values, 0-9 and A-F.
Public Const LICF_ALPHA = &H100  'Any CT_TYPE1 linguistic character. Includes non-Latin alphabets.
'Custom categories
Public Const LICF_BINARYDIGIT = &H10000
Public Const LICF_OCTALDIGIT = &H20000 'Base 8; 0-7.
Public Const LICF_ATOZUPPER = &H100000 'ASCII A to Z
Public Const LICF_ATOZLOWER = &H200000 'ASCII a to z
Public Const LICF_ATOZ = (LICF_ATOZUPPER Or LICF_ATOZLOWER)

'Notification codes
Public Const LIN_GETDISPINFO = &H1   'Need tooltip display info (pszTitle and pszMessage).
Public Const LIN_GETFILTERINFO = &H2 'Need pszFilter and dwMask if modifying it.
Public Const LIN_BADCHAR = &H3       'Bad character notification from LIF_NOTIFYONBADCHAR

[Description("⛔ **DO NOT USE** ⛔" & vbCrLf & "This has been renamed LIMITINPUT, simply substitute that name for this one, which is now just an invalid placeholder so you see this message.")]
Public Type LIMITINPUTSTRUCT
    DO_NOT_USE_SEE_DESCRIPTION As Byte
End Type

Public Type LIMITINPUT
    cbSize As Long        'Size of structure. Must set.
    dwMask As LI_Mask     'LIM_* values.
    dwFlags As LI_Flags   'LIF_* values.
    hInst As LongPtr      'App.hInstance or loaded module hInstance.
    pszFilter As LongPtr  'String via StrPtr, LICF_* category, LPSTR_TEXTCALLBACK to set via LIN_GETDISPINFO, or resource id in .hInst.
    pszTitle As LongPtr   'Optional. String via StrPtr, LPSTR_TEXTCALLBACK to set via LIN_GETDISPINFO, or resource id in .hInst.
    pszMessage As LongPtr 'Ignore if tooltip disabled. String via StrPtr, LPSTR_TEXTCALLBACK to set via LIN_GETDISPINFO, or resource id in .hInst.
    hIcon As LongPtr      'See TTM_SETTITLE. Can be TTI_* default icon, hIcon, or I_ICONCALLBACK to set via LIN_GETDISPINFO.
    hwndNotify As LongPtr 'Window to send notifications to. Must specify if any callbacks used or bad character notifications enabled.
    iTimeout As Long      'Timeout in milliseconds. Defaults to 10000 if not set.
    cxTipWidth As Long    'Tooltip width. Default 500px.
End Type
       
Public Type NMLIBADCHAR
    hdr As NMHDR
    wParam As LongPtr 'WM_CHAR wParam (Char code)
    lParam As LongPtr 'WM_CHAR lParam (see MSDN for details)
End Type

Public Type NMLIDISPINFO
    hdr As NMHDR
    li As LIMITINPUT 'Set all values requested in dwMask.
End Type

Public Enum OPEN_AS_INFO_FLAGS
    OAIF_ALLOW_REGISTRATION = &H1 'Enable the "always use this program" checkbox. If not passed, it will be disabled.
    OAIF_REGISTER_EXT = &H2 'Do the registration after the user hits the OK button.
    OAIF_EXEC = &H4 'Execute file after registering.
    OAIF_FORCE_REGISTRATION = &H8 'Force the Always use this program checkbox to be checked. Typically, you won't use the OAIF_ALLOW_REGISTRATION flag when you pass this value.
    OAIF_HIDE_REGISTRATION = &H20 'Introduced in Windows Vista. Hide the Always use this program checkbox. If this flag is specified, the OAIF_ALLOW_REGISTRATION and OAIF_FORCE_REGISTRATION flags will be ignored.
    OAIF_URL_PROTOCOL = &H40 'Introduced in Windows Vista. The value for the extension that is passed is actually a protocol, so the Open With dialog box should show applications that are registered as capable of handling that protocol.
    OAIF_FILE_IS_URI = &H80 'Introduced in Windows 8. The location pointed to by the pcszFile parameter is given as a URI.
End Enum

Public Type OPENASINFO
    pcszFile As LongPtr
    pcszClass As LongPtr 'file type description for registering the type with 'always open', if not set uses extension, as in 'XYZ File'
    oafInFlags As OPEN_AS_INFO_FLAGS
End Type

Public Enum SHOFASI_Flags
    OFASI_EDIT = &H1 'Initiate a rename (if single file)	
    OFASI_OPENDESKTOP = &H2 'Highlights files on the desktop.
End Enum

#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Public Type SHFILEOPSTRUCTA
   hWnd        As LongPtr
   wFunc       As FILEOP
   pFrom       As LongPtr
   pTo         As LongPtr
   #If Win64 Then
   fFlags As FILEOP_FLAGS 'We can use this trick since on Win64, this UDT isn't byte-packed
   #Else
   /* [ TypeHint(FILEOP_FLAGS) */ fFlags      As Integer
   #End If
   fAnyOperationsAborted    As BOOL
   hNameMappings   As LongPtr
   lpszProgressTitle   As String
 End Type
 #If Win64 = 0 Then
 [PackingAlignment(1)]
 #End If
Public Type SHFILEOPSTRUCTW
    hWnd        As LongPtr
    wFunc       As FILEOP
    pFrom       As LongPtr
    pTo         As LongPtr
    #If Win64 Then
    fFlags As FILEOP_FLAGS 'We can use this trick since on Win64, this UDT isn't byte-packed
    #Else
    /* [ TypeHint(FILEOP_FLAGS) */ fFlags      As Integer
    #End If
    fAnyOperationsAborted    As BOOL
    hNameMappings   As LongPtr
    lpszProgressTitle   As LongPtr
End Type
'Alias SHFILEOPSTRUCT As SHFILEOPSTRUCTW
#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Public Type SHFILEOPSTRUCT
    hWnd        As LongPtr
    wFunc       As FILEOP
    pFrom       As LongPtr
    pTo         As LongPtr
    #If Win64 Then
    fFlags As FILEOP_FLAGS 'We can use this trick since on Win64, this UDT isn't byte-packed
    #Else
    /* [ TypeHint(FILEOP_FLAGS) */ fFlags      As Integer
    #End If
    fAnyOperationsAborted    As BOOL
    hNameMappings   As LongPtr
    lpszProgressTitle   As LongPtr
End Type
 
Public Type SHFILEINFOA   ' shfi
  hIcon As LongPtr
  iIcon As Long
  dwAttributes As SFGAOF
  szDisplayName(MAX_PATH - 1) As Byte
  szTypeName(79) As Byte
End Type
Public Type SHFILEINFOW   ' shfi
  hIcon As LongPtr
  iIcon As Long
  dwAttributes As SFGAOF
  szDisplayName(MAX_PATH - 1) As Integer
  szTypeName(79) As Integer
End Type
Public Type SHFILEINFO   ' shfi
  hIcon As LongPtr
  iIcon As Long
  dwAttributes As SFGAOF
  szDisplayName(MAX_PATH - 1) As Integer
  szTypeName(79) As Integer
End Type

Public Enum SHGFI_flags
  SHGFI_LARGEICON = &H0            ' sfi.hIcon is large icon
  SHGFI_SMALLICON = &H1            ' sfi.hIcon is small icon
  SHGFI_OPENICON = &H2              ' sfi.hIcon is open icon
  SHGFI_SHELLICONSIZE = &H4      ' sfi.hIcon is shell size (not system size), rtns BOOL
  SHGFI_PIDL = &H8                        ' pszPath is pidl, rtns BOOL
  ' Indicates that the function should not attempt to access the file specified by pszPath.
  ' Rather, it should act as if the file specified by pszPath exists with the file attributes
  ' passed in dwFileAttributes. This flag cannot be combined with the SHGFI_ATTRIBUTES,
  ' SHGFI_EXETYPE, or SHGFI_PIDL flags <---- !!!
  SHGFI_USEFILEATTRIBUTES = &H10   ' pretend pszPath exists, rtns BOOL
  SHGFI_ADDOVERLAYS = &H20
  SHGFI_OVERLAYINDEX = &H40 'Return overlay index in upper 8 bits of iIcon.
  SHGFI_ICON = &H100                    ' fills sfi.hIcon, rtns BOOL, use DestroyIcon
  SHGFI_DISPLAYNAME = &H200    ' isf.szDisplayName is filled (SHGDN_NORMAL), rtns BOOL
  SHGFI_TYPENAME = &H400          ' isf.szTypeName is filled, rtns BOOL
  SHGFI_ATTRIBUTES = &H800         ' rtns IShellFolder::GetAttributesOf  SFGAO_* flags
  SHGFI_ICONLOCATION = &H1000   ' fills sfi.szDisplayName with filename
                                                        ' containing the icon, rtns BOOL
  SHGFI_EXETYPE = &H2000            ' rtns two ASCII chars of exe type
  SHGFI_SYSICONINDEX = &H4000   ' sfi.iIcon is sys il icon index, rtns hImagelist
  SHGFI_LINKOVERLAY = &H8000&    ' add shortcut overlay to sfi.hIcon
  SHGFI_SELECTED = &H10000        ' sfi.hIcon is selected icon
  SHGFI_ATTR_SPECIFIED = &H20000    ' get only attributes specified in sfi.dwAttributes
End Enum

Public Type SHCREATEPROCESSINFOW
    cbSize As Long
    fMask As Long
    hwnd As LongPtr
    pszFile As LongPtr
    pszParameters As LongPtr
    pszCurrentDirectory As LongPtr
    hUserToken As LongPtr
    lpProcessAttributes As LongPtr 'LPSECURITY_ATTRIBUTES
    lpThreadAttributes As LongPtr 'LPSECURITY_ATTRIBUTES
    bInheritHandles As BOOL
    dwCreationFlags As Long
    lpStartupInfo As LongPtr 'LPSTARTUPINFOW
    lpProcessInformation As LongPtr 'LPPROCESS_INFORMATION
End Type

[Description("Not implemented on XP or later.")]
[Unimplemented]
Public Declare PtrSafe Function SHCreateProcessAsUserW Lib "shell32" (pscpi As SHCREATEPROCESSINFOW) As BOOL


#End Region

#Region "shlwapi"
'********************************************************************************
'shlwapi.dll        
        
Public Enum StrToIntExFlags
	STIF_DEFAULT = &H00000000
	STIF_SUPPORT_HEX = &H00000001
End Enum

Public Enum GCTFlags
	GCT_INVALID = &H0000
	GCT_LFNCHAR = &H0001
	GCT_SHORTCHAR = &H0002
	GCT_WILD = &H0004
	GCT_SEPARATOR = &H0008
End Enum

Public Enum URL_SCHEME
	URL_SCHEME_INVALID = -1
	URL_SCHEME_UNKNOWN = 0
	URL_SCHEME_FTP = 1
	URL_SCHEME_HTTP = 2
	URL_SCHEME_GOPHER = 3
	URL_SCHEME_MAILTO = 4
	URL_SCHEME_NEWS = 5
	URL_SCHEME_NNTP = 6
	URL_SCHEME_TELNET = 7
	URL_SCHEME_WAIS = 8
	URL_SCHEME_FILE = 9
	URL_SCHEME_MK = 10
	URL_SCHEME_HTTPS = 11
	URL_SCHEME_SHELL = 12
	URL_SCHEME_SNEWS = 13
	URL_SCHEME_LOCAL = 14
	URL_SCHEME_JAVASCRIPT = 15
	URL_SCHEME_VBSCRIPT = 16
	URL_SCHEME_ABOUT = 17
	URL_SCHEME_RES = 18
	URL_SCHEME_MAXVALUE = 19
End Enum

Public Enum URL_PART
    URL_PART_NONE = 0
    URL_PART_SCHEME = 1
    URL_PART_HOSTNAME
    URL_PART_USERNAME
    URL_PART_PASSshort
    URL_PART_PORT
    URL_PART_QUERY
End Enum

Public Enum URLIS
    URLIS_URL
    URLIS_OPAQUE
    URLIS_NOHISTORY
    URLIS_FILEURL
    URLIS_APPLIABLE
    URLIS_DIRECTORY
    URLIS_HASQUERY
End Enum

Public Enum URL
    URL_UNESCAPE = &H10000000
    URL_ESCAPE_UNSAFE = &H20000000
    URL_PLUGGABLE_PROTOCOL = &H40000000
    URL_WININET_COMPATIBILITY = &H80000000
    URL_DONT_ESCAPE_EXTRA_INFO = &H02000000
    URL_DONT_UNESCAPE_EXTRA_INFO = URL_DONT_ESCAPE_EXTRA_INFO
    URL_BROWSER_MODE = URL_DONT_ESCAPE_EXTRA_INFO
    URL_ESCAPE_SPACES_ONLY = &H04000000
    URL_DONT_SIMPLIFY = &H08000000
    URL_NO_META = URL_DONT_SIMPLIFY
    URL_UNESCAPE_INPLACE = &H00100000
    URL_CONVERT_IF_DOSPATH = &H00200000
    URL_UNESCAPE_HIGH_ANSI_ONLY = &H00400000
    URL_INTERNAL_PATH = &H00800000  ' Will escape #'s in paths
    URL_FILE_USE_PATHURL = &H00010000
' #if (_WIN32_IE >= _WIN32_IE_IE60SP2)
    URL_DONT_UNESCAPE = &H00020000  ' Do not unescape the path/url at all
' #endif // _WIN32_IE_IE60SP2
' #if (NTDDI_VERSION >= NTDDI_WIN7)
    URL_ESCAPE_AS_UTF8 = &H00040000  ' Percent-encode all non-ASCII characters as their UTF-8 equivalents.
' #endif // (NTDDI_VERSION >= NTDDI_WIN7)
' #if (NTDDI_VERSION >= NTDDI_WIN8)
    URL_UNESCAPE_AS_UTF8 = URL_ESCAPE_AS_UTF8
    URL_ESCAPE_ASCII_URI_COMPONENT = &H00080000  ' Percent-encode all ASCII characters outside of the unreserved set from URI RFC 3986 (a-zA-Z0-9-.~_) (i.e.) No need for URL_ESCAPE_PERCENT along with this.
    URL_ESCAPE_URI_COMPONENT = (URL_ESCAPE_ASCII_URI_COMPONENT Or URL_ESCAPE_AS_UTF8)
    URL_UNESCAPE_URI_COMPONENT = URL_UNESCAPE_AS_UTF8
' #endif // (NTDDI_VERSION >= NTDDI_WIN8)
    URL_ESCAPE_PERCENT = &H00001000
    URL_ESCAPE_SEGMENT_ONLY = &H00002000  ' Treat the entire URL param as one URL segment.
End Enum

Public Type PARSEDURLA
    cbSize As Long
    ' Pointers into the buffer that was provided to ParseURL
    pszProtocol As String
    cchProtocol As Long
    pszSuffix As String
    cchSuffix As Long
    nScheme As URL_SCHEME ' One of URL_SCHEME_*
End Type
Public Type PARSEDURLW
    cbSize As Long
    ' Pointers into the buffer that was provided to ParseURL
    pszProtocol As LongPtr
    cchProtocol As Long
    pszSuffix As LongPtr
    cchSuffix As Long
    nScheme As URL_SCHEME ' One of URL_SCHEME_*
End Type
Public Type PARSEDURL
    cbSize As Long
    ' Pointers into the buffer that was provided to ParseURL
    pszProtocol As LongPtr
    cchProtocol As Long
    pszSuffix As LongPtr
    cchSuffix As Long
    nScheme As URL_SCHEME ' One of URL_SCHEME_*
End Type

Public Enum URL_PARTFLAG
	URL_PARTFLAG_KEEPSCHEME = &H00000001
End Enum

Public Enum URL_APPLY
	URL_APPLY_DEFAULT = &H00000001
	URL_APPLY_GUESSSCHEME = &H00000002
	URL_APPLY_GUESSFILE = &H00000004
	URL_APPLY_FORCEAPPLY = &H00000008
End Enum

Public Enum SHREGDEL_FLAGS
	SHREGDEL_DEFAULT = &H00000000 ' Delete's HKCU, or HKLM if HKCU is not found.
	SHREGDEL_HKCU = &H00000001 ' Delete HKCU only
	SHREGDEL_HKLM = &H00000010 ' Delete HKLM only.
	SHREGDEL_BOTH = &H00000011 ' Delete both HKCU and HKLM.
End Enum

Public Enum SHREGENUM_FLAGS
	SHREGENUM_DEFAULT = &H00000000 ' Enumerates HKCU or HKLM if not found.
	SHREGENUM_HKCU = &H00000001 ' Enumerates HKCU only
	SHREGENUM_HKLM = &H00000010 ' Enumerates HKLM only.
	SHREGENUM_BOTH = &H00000011 ' Enumerates both HKCU and HKLM without duplicates. This option is NYI.
End Enum

Public Enum SHREGSET
	SHREGSET_HKCU = &H00000001 ' Write to HKCU if empty.
	SHREGSET_FORCE_HKCU = &H00000002 ' Write to HKCU.
	SHREGSET_HKLM = &H00000004 ' Write to HKLM if empty.
	SHREGSET_FORCE_HKLM = &H00000008 ' Write to HKLM.
	SHREGSET_DEFAULT = &H00000006 ' Default is SHREGSET_FORCE_HKCU | SHREGSET_HKLM.
End Enum

Public Enum REGSAM
    KEY_QUERY_VALUE = (&H0001)
    KEY_SET_VALUE = (&H0002)
    KEY_CREATE_SUB_KEY = (&H0004)
    KEY_ENUMERATE_SUB_KEYS = (&H0008)
    KEY_NOTIFY = (&H0010)
    KEY_CREATE_LINK = (&H0020)
    KEY_WOW64_32KEY = (&H0200)
    KEY_WOW64_64KEY = (&H0100)
    KEY_WOW64_RES = (&H0300)
    KEY_READ = ((STANDARD_RIGHTS_READ Or KEY_QUERY_VALUE Or KEY_ENUMERATE_SUB_KEYS Or KEY_NOTIFY) And (Not SYNCHRONIZE))
    KEY_WRITE = ((STANDARD_RIGHTS_WRITE Or KEY_SET_VALUE Or KEY_CREATE_SUB_KEY) And (Not SYNCHRONIZE))
    KEY_EXECUTE = ((KEY_READ) And (Not SYNCHRONIZE))
    KEY_ALL_ACCESS = ((STANDARD_RIGHTS_ALL Or KEY_QUERY_VALUE Or KEY_SET_VALUE Or KEY_CREATE_SUB_KEY Or KEY_ENUMERATE_SUB_KEYS Or KEY_NOTIFY Or KEY_CREATE_LINK) And (Not SYNCHRONIZE))
End Enum

Public Enum REGTYPES
    REG_NONE = 0
    REG_SZ = 1
    REG_EXPAND_SZ = 2
    REG_BINARY = 3
    REG_DWORD = 4
    REG_DWORD_BIG_ENDIAN = 5
    REG_DWORD_LITTLE_ENDIAN = 4
    REG_LINK = 6
    REG_MULTI_SZ = 7
    REG_RESOURCE_LIST = 8
    REG_FULL_RESOURCE_DESCRIPTOR = 9
    REG_RESOURCE_REQUIREMENTS_LIST = &HA
    REG_QWORD = &HB
    REG_QWORD_LITTLE_ENDIAN = &HB
End Enum

Public Enum SHCT_FLAGS
	CTF_INSIST = &H00000001 ' SHCreateThread() dwFlags - call pfnThreadProc synchronously if CreateThread() fails
	CTF_THREAD_REF = &H00000002 ' hold a reference to the creating thread
	CTF_PROCESS_REF = &H00000004 ' hold a reference to the creating process
	CTF_COINIT = &H00000008 ' init COM for the created thread
	CTF_FREELIBANDEXIT = &H00000010 ' hold a ref to the DLL and call FreeLibraryAndExitThread() when done
	CTF_REF_COUNTED = &H00000020 'Set thread reference
	CTF_WAIT_ALLOWCOM = &H00000040 'The calling thread waits and pumps COM and SendMessage messages.
	CTF_UNUSED = &H00000080 'Used. Jk.
	CTF_INHERITWOW64 = &H00000100 'Inherits WoW64 disabled state (if set)
	CTF_WAIT_NO_REENTRANCY = &H00000200 'SendMessage to a window hosted on the calling thread causes the synchronous proc to deadlock.
	CTF_KEYBOARD_LOCALE = &H00000400 'Inherit keyboard locale from calling thread
	CTF_OLEINITIALIZE = &H00000800 'Initialize COM with STA model for created thread.
	CTF_COINIT_MTA = &H00001000 'Initialize COM with MTA model for created thread.
	CTF_NOADDREFLIB = &H00002000 'Opposite of CTF_FREELIBANDEXIT.
End Enum

Public Enum DLLVER
	DLLVER_PLATFORM_WINDOWS = &H00000001 ' Windows 95
	DLLVER_PLATFORM_NT = &H00000002 ' Windows NT
End Enum
Public Type DLLVERSIONINFO
    cbSize As Long
    dwMajorVersion As Long ' Major version
    dwMinorVersion As Long ' Minor version
    dwBuildNumber As Long ' Build number
    dwPlatformID As DLLVER ' DLLVER_PLATFORM_*
End Type
Public Type DLLVERSIONINFO2
	info1 As DLLVERSIONINFO
	dwFlags As Long ' No flags currently defined
	ullVersion As LongLong ' Encoded as:
	' Major 0xFFFF 0000 0000 0000
	' Minor 0x0000 FFFF 0000 0000
	' Build 0x0000 0000 FFFF 0000
	' QFE 0x0000 0000 0000 FFFF
End Type

Public Const DLLVER_MAJOR_MASK  As LongLong = &HFFFF000000000000
Public Const DLLVER_MINOR_MASK  As LongLong = &H0000FFFF00000000
Public Const DLLVER_BUILD_MASK  As LongLong = &H00000000FFFF0000^
Public Const DLLVER_QFE_MASK    As LongLong = &H000000000000FFFF^



Public Enum PERCEIVED
  PERCEIVED_TYPE_CUSTOM = -3
  PERCEIVED_TYPE_UNSPECIFIED = -2
  PERCEIVED_TYPE_FOLDER = -1
  PERCEIVED_TYPE_UNKNOWN = 0
  PERCEIVED_TYPE_TEXT = 1
  PERCEIVED_TYPE_IMAGE = 2
  PERCEIVED_TYPE_AUDIO = 3
  PERCEIVED_TYPE_VIDEO = 4
  PERCEIVED_TYPE_COMPRESSED = 5
  PERCEIVED_TYPE_DOCUMENT = 6
  PERCEIVED_TYPE_SYSTEM = 7
  PERCEIVED_TYPE_APPLICATION = 8
  PERCEIVED_TYPE_GAMEMEDIA = 9
  PERCEIVED_TYPE_CONTACTS = 10
End Enum
Public Enum PERCEIVEDFLAG
    PERCEIVEDFLAG_UNDEFINED = &H0 'No perceived type was found (PERCEIVED_TYPE_UNSPECIFIED.
    PERCEIVEDFLAG_SOFTCODED = &H1 'The perceived type was determined through an association in the registry.
    PERCEIVEDFLAG_HARDCODED = &H2 'The perceived type is inherently known to Windows.
    PERCEIVEDFLAG_NATIVESUPPORT = &H4 'The perceived type was determined through a codec provided with Windows.
    PERCEIVEDFLAG_GDIPLUS = &H10 'The perceived type is supported by the GDI+ library.
    PERCEIVEDFLAG_WMSDK = &H20 'The perceived type is supported by the Windows Media SDK.
    PERCEIVEDFLAG_ZIPFOLDER = &H40 'The perceived type is supported by Windows compressed folders.
End Enum
        
Public Enum PMS_Flags
    PMSF_NORMAL = &H0
    PMSF_MULTIPLE = &H1
    PMSF_DONT_STRIP_SPACES = &H10000
End Enum

Public Const SZ_CONTENTTYPE_HTMLA  = "text/html"
Public Const SZ_CONTENTTYPE_HTMLW  = "text/html"
Public Const SZ_CONTENTTYPE_CDFA  = "application/x-cdf"
Public Const SZ_CONTENTTYPE_CDFW  = "application/x-cdf"
Public Const SZ_CONTENTTYPE_HTML  = "text/html"
Public Const SZ_CONTENTTYPE_CDF  = "application/x-cdf"

Public Enum SFBS_FLAGS
    SFBS_FLAGS_ROUND_TO_NEAREST_DISPLAYED_DIGIT = &H0001 ' round to the nearest displayed digit
    SFBS_FLAGS_TRUNCATE_UNDISPLAYED_DECIMAL_DIGITS = &H0002 ' discard undisplayed digits
End Enum

        
Public Declare PtrSafe Function StrChrA Lib "shlwapi" (ByVal lpStart As String, ByVal wMatch As Integer) As LongPtr
Public Declare PtrSafe Function StrChrW Lib "shlwapi" (ByVal lpStart As LongPtr, ByVal wMatch As Integer) As LongPtr
Public Declare PtrSafe Function StrChrIA Lib "shlwapi" (ByVal lpStart As String, ByVal wMatch As Integer) As LongPtr
Public Declare PtrSafe Function StrChrIW Lib "shlwapi" (ByVal lpStart As LongPtr, ByVal wMatch As Integer) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function StrCatW Lib "shlwapi" (ByVal psz1 As LongPtr, ByVal psz2 As LongPtr) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public DeclareWide PtrSafe Function StrCat Lib "shlwapi" Alias "StrCatW" (ByVal psz1 As String, ByVal psz2 As String) As String
Public Declare PtrSafe Function StrCmpW Lib "shlwapi" (ByVal psz1 As LongPtr, ByVal psz2 As LongPtr) As Long
Public Declare PtrSafe Function StrCmpIW Lib "shlwapi" (ByVal psz1 As LongPtr, ByVal psz2 As LongPtr) As Long
Public Declare PtrSafe Function StrCmpLogicalW Lib "shlwapi" (ByVal lpStr1 As LongPtr, ByVal lpStr2 As LongPtr) As Long
Public Declare PtrSafe Function StrCmpLogicalW Lib "shlwapi" (ByVal lpStr1 As String, ByVal lpStr2 As String) As Long
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function StrCpyW Lib "shlwapi" (ByVal psz1 As LongPtr, ByVal psz2 As LongPtr) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function StrCpy Lib "shlwapi" Alias "StrCpyW" (ByVal psz1 As LongPtr, ByVal psz2 As LongPtr) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function StrCpyNW Lib "shlwapi" (ByVal psz1 As LongPtr, ByVal psz2 As LongPtr, ByVal cchMax As Long) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public DeclareWide PtrSafe Function StrCpyN Lib "shlwapi" Alias "StrCpyNW" (ByVal psz1 As String, ByVal psz2 As String, ByVal cchMax As Long) As String
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function StrCatBuffW Lib "shlwapi" (ByVal pszDest As LongPtr, ByVal pszSrc As LongPtr, ByVal cchDestBuffSize As Long) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function StrCatBuffA Lib "shlwapi" (ByVal pszDest As String, ByVal pszSrc As String, ByVal cchDestBuffSize As Long) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public DeclareWide PtrSafe Function StrCatBuff Lib "shlwapi" Alias "StrCatBuffW" (ByVal pszDest As String, ByVal pszSrc As String, ByVal cchDestBuffSize As Long) As LongPtr
Public Declare PtrSafe Function StrCmpNA Lib "shlwapi" (ByVal lpStr1 As String, ByVal lpStr2 As String, ByVal nChar As Long) As Long
Public Declare PtrSafe Function StrCmpNW Lib "shlwapi" (ByVal lpStr1 As LongPtr, ByVal lpStr2 As LongPtr, ByVal nChar As Long) As Long
Public Declare PtrSafe Function StrCmpNIA Lib "shlwapi" (ByVal lpStr1 As String, ByVal lpStr2 As String, ByVal nChar As Long) As Long
Public Declare PtrSafe Function StrCmpNIW Lib "shlwapi" (ByVal lpStr1 As LongPtr, ByVal lpStr2 As LongPtr, ByVal nChar As Long) As Long
Public Declare PtrSafe Function StrCSpnA Lib "shlwapi" (ByVal lpStr As String, ByVal lpSet As String) As Long
Public Declare PtrSafe Function StrCSpnW Lib "shlwapi" (ByVal lpStr As LongPtr, ByVal lpSet As LongPtr) As Long
Public Declare PtrSafe Function StrCSpnIA Lib "shlwapi" (ByVal lpStr As String, ByVal lpSet As String) As Long
Public Declare PtrSafe Function StrCSpnIW Lib "shlwapi" (ByVal lpStr As LongPtr, ByVal lpSet As LongPtr) As Long
Public Declare PtrSafe Function StrDupA Lib "shlwapi" (ByVal lpSrch As String) As LongPtr
Public Declare PtrSafe Function StrDupW Lib "shlwapi" (ByVal lpSrch As LongPtr) As LongPtr
Public Declare PtrSafe Function StrFormatByteSizeA Lib "shlwapi" (ByVal dw As Long, ByVal szBuf As String, ByVal uiBufSize As Long) As LongPtr
Public Declare PtrSafe Function StrFormatByteSize64A Lib "shlwapi" (ByVal qdw As LongLong, ByVal szBuf As String, ByVal uiBufSize As Long) As LongPtr
Public Declare PtrSafe Function StrFormatByteSizeW Lib "shlwapi" (ByVal qdw As LongLong, ByVal szBuf As LongPtr, ByVal uiBufSize As Long) As LongPtr
Public DeclareWide PtrSafe Function StrFormatByteSize Lib "shlwapi" Alias "StrFormatByteSizeW" (ByVal qdw As LongLong, ByVal szBuf As String, ByVal uiBufSize As Long) As LongPtr
Public DeclareWide PtrSafe Function StrFormatByteSizeEx Lib "shlwapi" (ByVal ull As LongLong, ByVal flags As SFBS_FLAGS, ByVal pszBuf As String, ByVal cchBuf As Long) As Long
Public Declare PtrSafe Function StrFormatKBSizeW Lib "shlwapi" (ByVal qdw As LongLong, ByVal szBuf As LongPtr, ByVal uiBufSize As Long) As LongPtr
Public Declare PtrSafe Function StrFormatKBSizeA Lib "shlwapi" (ByVal qdw As LongLong, ByVal szBuf As String, ByVal uiBufSize As Long) As LongPtr
Public DeclareWide PtrSafe Function StrFormatKBSize Lib "shlwapi" Alias "StrFormatKBSizeW" (ByVal qdw As LongLong, ByVal szBuf As String, ByVal uiBufSize As Long) As LongPtr
Public Declare PtrSafe Function StrFromTimeIntervalA Lib "shlwapi" (ByVal pszOut As String, ByVal cchMax As Long, ByVal dwTimeMS As Long, ByVal digits As Long) As Long
Public Declare PtrSafe Function StrFromTimeIntervalW Lib "shlwapi" (ByVal pszOut As LongPtr, ByVal cchMax As Long, ByVal dwTimeMS As Long, ByVal digits As Long) As Long
Public DeclareWide PtrSafe Function StrFromTimeInterval Lib "shlwapi" Alias "StrFromTimeIntervalW" (ByVal pszOut As String, ByVal cchMax As Long, ByVal dwTimeMS As Long, ByVal digits As Long) As Long
Public Declare PtrSafe Function StrIsIntlEqualA Lib "shlwapi" (ByVal fCaseSens As BOOL, ByVal lpString1 As String, ByVal lpString2 As String, ByVal nChar As Long) As BOOL
Public Declare PtrSafe Function StrIsIntlEqualW Lib "shlwapi" (ByVal fCaseSens As BOOL, ByVal lpString1 As LongPtr, ByVal lpString2 As LongPtr, ByVal nChar As Long) As BOOL
Public DeclareWide PtrSafe Function StrIsIntlEqual Lib "shlwapi" Alias "StrIsIntlEqualW" (ByVal fCaseSens As BOOL, ByVal lpString1 As String, ByVal lpString2 As String, ByVal nChar As Long) As BOOL
Public Declare PtrSafe Function StrNCatA Lib "shlwapi" (ByVal psz1 As String, ByVal psz2 As String, ByVal cchMax As Long) As LongPtr
Public Declare PtrSafe Function StrNCatW Lib "shlwapi" (ByVal psz1 As LongPtr, ByVal psz2 As LongPtr, ByVal cchMax As Long) As LongPtr
Public Declare PtrSafe Function StrPBrkA Lib "shlwapi" (ByVal psz As String, ByVal pszSet As String) As LongPtr
Public Declare PtrSafe Function StrPBrkW Lib "shlwapi" (ByVal psz As LongPtr, ByVal pszSet As LongPtr) As LongPtr
Public Declare PtrSafe Function StrRChrA Lib "shlwapi" (ByVal lpStart As String, ByVal lpEnd As String, ByVal wMatch As Integer) As LongPtr
Public Declare PtrSafe Function StrRChrW Lib "shlwapi" (ByVal lpStart As LongPtr, ByVal lpEnd As LongPtr, ByVal wMatch As Integer) As LongPtr
Public Declare PtrSafe Function StrRChrIA Lib "shlwapi" (ByVal lpStart As String, ByVal lpEnd As String, ByVal wMatch As Integer) As LongPtr
Public Declare PtrSafe Function StrRChrIW Lib "shlwapi" (ByVal lpStart As LongPtr, ByVal lpEnd As LongPtr, ByVal wMatch As Integer) As LongPtr
Public Declare PtrSafe Function StrRStrIA Lib "shlwapi" (ByVal lpSource As String, ByVal lpLast As String, ByVal lpSrch As String) As LongPtr
Public Declare PtrSafe Function StrRStrIW Lib "shlwapi" (ByVal lpSource As LongPtr, ByVal lpLast As LongPtr, ByVal lpSrch As LongPtr) As LongPtr
Public Declare PtrSafe Function StrSpnA Lib "shlwapi" (ByVal psz As String, ByVal pszSet As String) As Long
Public Declare PtrSafe Function StrSpnW Lib "shlwapi" (ByVal psz As LongPtr, ByVal pszSet As LongPtr) As Long
Public Declare PtrSafe Function StrStrA Lib "shlwapi" (ByVal lpFirst As String, ByVal lpSrch As String) As LongPtr
Public Declare PtrSafe Function StrStrW Lib "shlwapi" (ByVal lpFirst As LongPtr, ByVal lpSrch As LongPtr) As LongPtr
Public Declare PtrSafe Function StrStrIA Lib "shlwapi" (ByVal lpFirst As String, ByVal lpSrch As String) As LongPtr
Public Declare PtrSafe Function StrStrIW Lib "shlwapi" (ByVal lpFirst As LongPtr, ByVal lpSrch As LongPtr) As LongPtr
Public Declare PtrSafe Function StrToIntA Lib "shlwapi" (ByVal lpSrc As String) As Long
Public Declare PtrSafe Function StrToIntW Lib "shlwapi" (ByVal lpSrc As LongPtr) As Long
Public DeclareWide PtrSafe Function StrToInt Lib "shlwapi" Alias "StrToIntW" (ByVal lpSrc As String) As Long
Public Declare PtrSafe Function StrToIntExA Lib "shlwapi" (ByVal pszString As String, ByVal dwFlags As StrToIntExFlags, ByRef piRet As Long) As Long
Public Declare PtrSafe Function StrToIntExW Lib "shlwapi" (ByVal pszString As LongPtr, ByVal dwFlags As StrToIntExFlags, ByRef piRet As Long) As Long
Public DeclareWide PtrSafe Function StrToIntEx Lib "shlwapi" Alias "StrToIntExW" (ByVal pszString As String, ByVal dwFlags As StrToIntExFlags, ByRef piRet As Long) As Long
Public Declare PtrSafe Function StrTrimA Lib "shlwapi" (ByVal psz As String, ByVal pszTrimChars As String) As Long
Public Declare PtrSafe Function StrTrimW Lib "shlwapi" (ByVal psz As LongPtr, ByVal pszTrimChars As LongPtr) As Long
Public DeclareWide PtrSafe Function StrTrim Lib "shlwapi" Alias "StrTrimW" (ByVal psz As String, ByVal pszTrimChars As String) As Long
Public Declare PtrSafe Function ChrCmpIA Lib "shlwapi" (ByVal w1 As Integer, ByVal w2 As Integer) As Long
Public Declare PtrSafe Function ChrCmpIW Lib "shlwapi" (ByVal w1 As Integer, ByVal w2 As Integer) As Long
Public Declare PtrSafe Function wvnsprintfA Lib "shlwapi" (ByVal lpOut As String, ByVal cchLimitIn As Long, ByVal lpFmt As String, ByRef arglist As Any) As Long
Public Declare PtrSafe Function wvnsprintfW Lib "shlwapi" (ByVal lpOut As LongPtr, ByVal cchLimitIn As Long, ByVal lpFmt As LongPtr, ByRef arglist As Any) As Long
Public Declare PtrSafe Function StrRetToStrA Lib "shlwapi" (ByVal pstrret As LongPtr, ByVal pidl As LongPtr) As LongPtr
Public Declare PtrSafe Function StrRetToStrW Lib "shlwapi" (pStr As STRRET, ByVal pidl As LongPtr, ppsz As LongPtr) As Long
Public DeclareWide PtrSafe Function StrRetToStr Lib "shlwapi" Alias "StrRetToStrW" (ByVal pstrret As LongPtr, ByVal pidl As LongPtr) As LongPtr
Public Declare PtrSafe Function StrRetToBufA Lib "shlwapi" (ByVal pstrret As LongPtr, ByVal pidl As LongPtr, ByVal pszBuf As String, ByVal cchBuf As Long) As Long
Public Declare PtrSafe Function StrRetToBufW Lib "shlwapi" (ByVal pStr As LongPtr, ByVal pidl As LongPtr, ByVal pszBuf As LongPtr, ByVal cchBuf As Long) As Long
Public DeclareWide PtrSafe Function StrRetToBuf Lib "shlwapi" Alias "StrRetToBufW" (ByVal pstrret As LongPtr, ByVal pidl As LongPtr, ByVal pszBuf As String, ByVal cchBuf As Long) As Long
Public DeclareWide PtrSafe Function StrRetToBSTR Lib "shlwapi" (pstr As STRRET, ByVal pidl As LongPtr, pbstr As String) As Long
Public Declare PtrSafe Function SHStrDupA Lib "shlwapi" (ByVal psz As String, ppwsz As LongPtr) As Long
Public Declare PtrSafe Function SHStrDupW Lib "shlwapi" (ByVal psz As LongPtr, ppwsz As LongPtr) As Long
Public DeclareWide PtrSafe Function SHStrDup Lib "shlwapi" Alias "SHStrDupW" (ByVal psz As String, ppwsz As LongPtr) As Long
Public Declare PtrSafe Function IsCharSpaceA Lib "shlwapi" (ByVal wch As Byte) As BOOL
Public Declare PtrSafe Function IsCharSpaceW Lib "shlwapi" (ByVal wch As Integer) As BOOL
Public Declare PtrSafe Function IsCharSpace Lib "shlwapi" Alias "IsCharSpaceW" (ByVal wch As Integer) As BOOL

Public Declare PtrSafe Function IntlStrEqWorkerA Lib "shlwapi" (ByVal fCaseSens As BOOL, ByVal lpString1 As String, ByVal lpString2 As String, ByVal nChar As Long) As BOOL
Public Declare PtrSafe Function IntlStrEqWorkerW Lib "shlwapi" (ByVal fCaseSens As BOOL, ByVal lpString1 As LongPtr, ByVal lpString2 As LongPtr, ByVal nChar As Long) As BOOL
Public DeclareWide PtrSafe Function IntlStrEqWorker Lib "shlwapi" Alias "IntlStrEqWorkerW" (ByVal fCaseSens As BOOL, ByVal lpString1 As String, ByVal lpString2 As String, ByVal nChar As Long) As BOOL
Public Declare PtrSafe Function PathAddBackslashA Lib "shlwapi" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathAddBackslashW Lib "shlwapi" (ByVal pszPath As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function PathAddBackslash Lib "shlwapi" Alias "PathAddBackslashW" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathAddExtensionA Lib "shlwapi" (ByVal pszPath As String, ByVal pszExt As String) As Long
Public Declare PtrSafe Function PathAddExtensionW Lib "shlwapi" (ByVal pszPath As LongPtr, ByVal pszExt As LongPtr) As Long
Public DeclareWide PtrSafe Function PathAddExtension Lib "shlwapi" Alias "PathAddExtensionW" (ByVal pszPath As String, ByVal pszExt As String) As Long
Public Declare PtrSafe Function PathAppendA Lib "shlwapi" (ByVal pszPath As String, ByVal pMore As String) As Long
Public Declare PtrSafe Function PathAppendW Lib "shlwapi" (ByVal pszPath As LongPtr, ByVal pMore As LongPtr) As Long
Public DeclareWide PtrSafe Function PathAppend Lib "shlwapi" Alias "PathAppendW" (ByVal pszPath As String, ByVal pMore As String) As Long
Public Declare PtrSafe Function PathBuildRootA Lib "shlwapi" (ByVal pszRoot As String, ByVal iDrive As Long) As LongPtr
Public Declare PtrSafe Function PathBuildRootW Lib "shlwapi" (ByVal pszRoot As LongPtr, ByVal iDrive As Long) As LongPtr
Public DeclareWide PtrSafe Function PathBuildRoot Lib "shlwapi" Alias "PathBuildRootW" (ByVal pszRoot As String, ByVal iDrive As Long) As LongPtr
Public Declare PtrSafe Function PathCanonicalizeA Lib "shlwapi" (ByVal pszBuf As String, ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathCanonicalizeW Lib "shlwapi" (ByVal pszBuf As LongPtr, ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathCanonicalize Lib "shlwapi" Alias "PathCanonicalizeW" (ByVal pszBuf As String, ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathCombineA Lib "shlwapi" (ByVal pszDest As String, ByVal pszDir As String, ByVal pszFile As String) As LongPtr
Public Declare PtrSafe Function PathCombineW Lib "shlwapi" (ByVal pszDest As LongPtr, ByVal pszDir As LongPtr, ByVal pszFile As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function PathCombine Lib "shlwapi" Alias "PathCombineW" (ByVal pszDest As String, ByVal pszDir As String, ByVal pszFile As String) As LongPtr
Public Declare PtrSafe Function PathCompactPathA Lib "shlwapi" (ByVal hDC As LongPtr, ByVal pszPath As String, ByVal dx As Long) As Long
Public Declare PtrSafe Function PathCompactPathW Lib "shlwapi" (ByVal hDC As LongPtr, ByVal pszPath As LongPtr, ByVal dx As Long) As Long
Public DeclareWide PtrSafe Function PathCompactPath Lib "shlwapi" Alias "PathCompactPathW" (ByVal hDC As LongPtr, ByVal pszPath As String, ByVal dx As Long) As Long
Public Declare PtrSafe Function PathCompactPathExA Lib "shlwapi" (ByVal pszOut As String, ByVal pszSrc As String, ByVal cchMax As Long, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function PathCompactPathExW Lib "shlwapi" (pszOut As LongPtr, ByVal pszSrc As LongPtr, ByVal cchMax As Long, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function PathCompactPathEx Lib "shlwapi" Alias "PathCompactPathExW" (ByVal pszOut As String, ByVal pszSrc As String, ByVal cchMax As Long, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function PathCommonPrefixA Lib "shlwapi" (ByVal pszFile1 As String, ByVal pszFile2 As String, ByVal achPath As String) As Long
Public Declare PtrSafe Function PathCommonPrefixW Lib "shlwapi" (ByVal pszFile1 As LongPtr, ByVal pszFile2 As LongPtr, achPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathCommonPrefix Lib "shlwapi" Alias "PathCommonPrefixW" (ByVal pszFile1 As String, ByVal pszFile2 As String, ByVal achPath As String) As Long
Public Declare PtrSafe Function PathFileExistsA Lib "shlwapi" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathFileExistsW Lib "shlwapi" (ByVal pszPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathFileExists Lib "shlwapi" Alias "PathFileExistsW" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathFindExtensionA Lib "shlwapi" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathFindExtensionW Lib "shlwapi" (ByVal pszPath As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function PathFindExtension Lib "shlwapi" Alias "PathFindExtensionW" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathFindFileNameA Lib "shlwapi" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathFindFileNameW Lib "shlwapi" (ByVal pszPath As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function PathFindFileName Lib "shlwapi" Alias "PathFindFileNameW" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathFindNextComponentA Lib "shlwapi" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathFindNextComponentW Lib "shlwapi" (ByVal pszPath As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function PathFindNextComponent Lib "shlwapi" Alias "PathFindNextComponentW" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathFindOnPathA Lib "shlwapi" (ByVal pszPath As String, ByRef ppszOtherDirs As String) As Long
Public Declare PtrSafe Function PathFindOnPathW Lib "shlwapi" (ByVal pszPath As LongPtr, ByRef ppszOtherDirs As LongPtr) As Long
Public DeclareWide PtrSafe Function PathFindOnPath Lib "shlwapi" Alias "PathFindOnPathW" (ByVal pszPath As String, ByRef ppszOtherDirs As LongPtr) As Long
Public Declare PtrSafe Function PathGetArgsA Lib "shlwapi" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathGetArgsW Lib "shlwapi" (ByVal pszPath As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function PathGetArgs Lib "shlwapi" Alias "PathGetArgsW" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathFindSuffixArrayA Lib "shlwapi" (ByVal pszPath As String, ByRef apszSuffix As String, ByVal iArraySize As Long) As LongPtr
Public Declare PtrSafe Function PathFindSuffixArrayW Lib "shlwapi" (ByVal pszPath As LongPtr, ByRef apszSuffix As LongPtr, ByVal iArraySize As Long) As LongPtr
Public DeclareWide PtrSafe Function PathFindSuffixArray Lib "shlwapi" Alias "PathFindSuffixArrayW" (ByVal pszPath As String, ByRef apszSuffix As String, ByVal iArraySize As Long) As LongPtr
Public Declare PtrSafe Function PathIsLFNFileSpecA Lib "shlwapi" (ByVal lpName As String) As BOOL
Public Declare PtrSafe Function PathIsLFNFileSpecW Lib "shlwapi" (ByVal lpName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathIsLFNFileSpec Lib "shlwapi" Alias "PathIsLFNFileSpecW" (ByVal lpName As String) As BOOL
Public Declare PtrSafe Function PathGetCharTypeA Lib "shlwapi" (ByVal ch As Byte) As GCTFlags
Public Declare PtrSafe Function PathGetCharTypeW Lib "shlwapi" (ByVal ch As Integer) As GCTFlags
Public DeclareWide PtrSafe Function PathGetCharType Lib "shlwapi" Alias "PathGetCharTypeW" (ByVal ch As Integer) As GCTFlags
Public Declare PtrSafe Function PathGetDriveNumberA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathGetDriveNumberW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathGetDriveNumber Lib "shlwapi" Alias "PathGetDriveNumberW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathIsDirectoryA Lib "shlwapi" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsDirectoryW Lib "shlwapi" (ByVal pszPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathIsDirectory Lib "shlwapi" Alias "PathIsDirectoryW" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsDirectoryEmptyA Lib "shlwapi" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsDirectoryEmptyW Lib "shlwapi" (ByVal pszPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathIsDirectoryEmpty Lib "shlwapi" Alias "PathIsDirectoryEmptyW" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsFileSpecA Lib "shlwapi" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsFileSpecW Lib "shlwapi" (ByVal pszPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathIsFileSpec Lib "shlwapi" Alias "PathIsFileSpecW" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsPrefixA Lib "shlwapi" (ByVal pszPrefix As String, ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsPrefixW Lib "shlwapi" (ByVal pszPrefix As LongPtr, ByVal pszPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathIsPrefix Lib "shlwapi" Alias "PathIsPrefixW" (ByVal pszPrefix As String, ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsRelativeA Lib "shlwapi" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsRelativeW Lib "shlwapi" (ByVal pszPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathIsRelative Lib "shlwapi" Alias "PathIsRelativeW" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsRootA Lib "shlwapi" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsRootW Lib "shlwapi" (ByVal pszPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathIsRoot Lib "shlwapi" Alias "PathIsRootW" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsSameRootA Lib "shlwapi" (ByVal pszPath1 As String, ByVal pszPath2 As String) As BOOL
Public Declare PtrSafe Function PathIsSameRootW Lib "shlwapi" (ByVal pszPath1 As LongPtr, ByVal pszPath2 As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathIsSameRoot Lib "shlwapi" Alias "PathIsSameRootW" (ByVal pszPath1 As String, ByVal pszPath2 As String) As BOOL
Public Declare PtrSafe Function PathIsUNCA Lib "shlwapi" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsUNCW Lib "shlwapi" (ByVal pszPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathIsUNC Lib "shlwapi" Alias "PathIsUNCW" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsNetworkPathA Lib "shlwapi" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsNetworkPathW Lib "shlwapi" (ByVal pszPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathIsNetworkPath Lib "shlwapi" Alias "PathIsNetworkPathW" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsUNCServerA Lib "shlwapi" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsUNCServerW Lib "shlwapi" (ByVal pszPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathIsUNCServer Lib "shlwapi" Alias "PathIsUNCServerW" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsUNCServerShareA Lib "shlwapi" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsUNCServerShareW Lib "shlwapi" (ByVal pszPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathIsUNCServerShare Lib "shlwapi" Alias "PathIsUNCServerShareW" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsContentTypeA Lib "shlwapi" (ByVal pszPath As String, ByVal pszContentType As String) As BOOL
Public Declare PtrSafe Function PathIsContentTypeW Lib "shlwapi" (ByVal pszPath As LongPtr, ByVal pszContentType As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathIsContentType Lib "shlwapi" Alias "PathIsContentTypeW" (ByVal pszPath As String, ByVal pszContentType As String) As BOOL
Public Declare PtrSafe Function PathIsURLA Lib "shlwapi" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsURLW Lib "shlwapi" (ByVal pszPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathIsURL Lib "shlwapi" Alias "PathIsURLW" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathMakePrettyA Lib "shlwapi" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathMakePrettyW Lib "shlwapi" (ByVal pszPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathMakePretty Lib "shlwapi" Alias "PathMakePrettyW" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathMatchSpecA Lib "shlwapi" (ByVal pszFile As String, ByVal pszSpec As String) As BOOL
Public Declare PtrSafe Function PathMatchSpecW Lib "shlwapi" (ByVal pszFile As LongPtr, ByVal pszSpec As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathMatchSpec Lib "shlwapi" Alias "PathMatchSpecW" (ByVal pszFile As String, ByVal pszSpec As String) As BOOL
Public Declare PtrSafe Function PathMatchSpecExA Lib "shlwapi" (ByVal pszFile As String, ByVal pszSpec As String, ByVal dwFlags As PMS_Flags) As Long
Public Declare PtrSafe Function PathMatchSpecExW Lib "shlwapi" (ByVal pszFile As LongPtr, ByVal pszSpec As LongPtr, ByVal dwFlags As PMS_Flags) As Long
Public DeclareWide PtrSafe Function PathMatchSpecEx Lib "shlwapi" Alias "PathMatchSpecExW" (ByVal pszFile As String, ByVal pszSpec As String, ByVal dwFlags As PMS_Flags) As Long
Public Declare PtrSafe Function PathParseIconLocationA Lib "shlwapi" (ByVal pszIconFile As String) As Long
Public Declare PtrSafe Function PathParseIconLocationW Lib "shlwapi" (ByVal pszIconFile As LongPtr) As Long
Public DeclareWide PtrSafe Function PathParseIconLocation Lib "shlwapi" Alias "PathParseIconLocationW" (ByVal pszIconFile As String) As Long
Public Declare PtrSafe Function PathQuoteSpacesA Lib "shlwapi" (ByVal lpsz As String) As BOOL
Public Declare PtrSafe Function PathQuoteSpacesW Lib "shlwapi" (ByVal lpsz As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathQuoteSpaces Lib "shlwapi" Alias "PathQuoteSpacesW" (ByVal lpsz As String) As BOOL
Public Declare PtrSafe Function PathRelativePathToA Lib "shlwapi" (ByVal pszPath As String, ByVal pszFrom As String, ByVal dwAttrFrom As Long, ByVal pszTo As String, ByVal dwAttrTo As Long) As Long
Public Declare PtrSafe Function PathRelativePathToW Lib "shlwapi" (pszPath As LongPtr, ByVal pszFrom As LongPtr, ByVal dwAttrFrom As Long, ByVal pszTo As LongPtr, ByVal dwAttrTo As Long) As Long
Public DeclareWide PtrSafe Function PathRelativePathTo Lib "shlwapi" Alias "PathRelativePathToW" (ByVal pszPath As String, ByVal pszFrom As String, ByVal dwAttrFrom As Long, ByVal pszTo As String, ByVal dwAttrTo As Long) As Long
Public Declare PtrSafe Sub PathRemoveArgsA Lib "shlwapi" (ByVal pszPath As String)
Public Declare PtrSafe Sub PathRemoveArgsW Lib "shlwapi" (ByVal pszPath As LongPtr)
Public DeclareWide PtrSafe Sub PathRemoveArgs Lib "shlwapi" Alias "PathRemoveArgsW" (ByVal pszPath As String)
Public Declare PtrSafe Function PathRemoveBackslashA Lib "shlwapi" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathRemoveBackslashW Lib "shlwapi" (ByVal pszPath As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function PathRemoveBackslash Lib "shlwapi" Alias "PathRemoveBackslashW" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Sub PathRemoveBlanksA Lib "shlwapi" (ByVal pszPath As String)
Public Declare PtrSafe Sub PathRemoveBlanksW Lib "shlwapi" (ByVal pszPath As LongPtr)
Public DeclareWide PtrSafe Sub PathRemoveBlanks Lib "shlwapi" Alias "PathRemoveBlanksW" (ByVal pszPath As String)
Public Declare PtrSafe Sub PathRemoveExtensionA Lib "shlwapi" (ByVal pszPath As String)
Public Declare PtrSafe Sub PathRemoveExtensionW Lib "shlwapi" (ByVal pszPath As LongPtr)
Public DeclareWide PtrSafe Sub PathRemoveExtension Lib "shlwapi" Alias "PathRemoveExtensionW" (ByVal pszPath As String)
Public Declare PtrSafe Function PathRemoveFileSpecA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathRemoveFileSpecW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathRemoveFileSpec Lib "shlwapi" Alias "PathRemoveFileSpecW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathRenameExtensionA Lib "shlwapi" (ByVal pszPath As String, ByVal pszExt As String) As Long
Public Declare PtrSafe Function PathRenameExtensionW Lib "shlwapi" (ByVal pszPath As LongPtr, ByVal pszExt As LongPtr) As Long
Public DeclareWide PtrSafe Function PathRenameExtension Lib "shlwapi" Alias "PathRenameExtensionW" (ByVal pszPath As String, ByVal pszExt As String) As Long
Public Declare PtrSafe Function PathSearchAndQualifyA Lib "shlwapi" (ByVal pszPath As String, ByVal pszBuf As String, ByVal cchBuf As Long) As Long
Public Declare PtrSafe Function PathSearchAndQualifyW Lib "shlwapi" (ByVal pszPath As LongPtr, ByVal pszBuf As LongPtr, ByVal cchBuf As Long) As Long
Public DeclareWide PtrSafe Function PathSearchAndQualify Lib "shlwapi" Alias "PathSearchAndQualifyW" (ByVal pszPath As String, ByVal pszBuf As String, ByVal cchBuf As Long) As Long
Public Declare PtrSafe Sub PathSetDlgItemPathA Lib "shlwapi" (ByVal hDlg As LongPtr, ByVal id As Long, ByVal pszPath As String)
Public Declare PtrSafe Sub PathSetDlgItemPathW Lib "shlwapi" (ByVal hDlg As LongPtr, ByVal id As Long, ByVal pszPath As LongPtr)
Public DeclareWide PtrSafe Sub PathSetDlgItemPath Lib "shlwapi" Alias "PathSetDlgItemPathW" (ByVal hDlg As LongPtr, ByVal id As Long, ByVal pszPath As String)
Public Declare PtrSafe Function PathSkipRootA Lib "shlwapi" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Function PathSkipRootW Lib "shlwapi" (ByVal pszPath As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function PathSkipRoot Lib "shlwapi" Alias "PathSkipRootW" (ByVal pszPath As String) As LongPtr
Public Declare PtrSafe Sub PathStripPathA Lib "shlwapi" (ByVal pszPath As String)
Public Declare PtrSafe Sub PathStripPathW Lib "shlwapi" (ByVal pszPath As LongPtr)
Public DeclareWide PtrSafe Sub PathStripPath Lib "shlwapi" Alias "PathStripPathW" (ByVal pszPath As String)
Public Declare PtrSafe Function PathStripToRootA Lib "shlwapi" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathStripToRootW Lib "shlwapi" (ByVal pszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function PathStripToRoot Lib "shlwapi" Alias "PathStripToRootW" (ByVal pszPath As String) As Long
Public Declare PtrSafe Function PathUnquoteSpacesA Lib "shlwapi" (ByVal lpsz As String) As BOOL
Public Declare PtrSafe Function PathUnquoteSpacesW Lib "shlwapi" (ByVal lpsz As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathUnquoteSpaces Lib "shlwapi" Alias "PathUnquoteSpacesW" (ByVal lpsz As String) As BOOL
Public Declare PtrSafe Function PathMakeSystemFolderA Lib "shlwapi" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathMakeSystemFolderW Lib "shlwapi" (ByVal pszPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathMakeSystemFolder Lib "shlwapi" Alias "PathMakeSystemFolderW" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathUnmakeSystemFolderA Lib "shlwapi" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathUnmakeSystemFolderW Lib "shlwapi" (ByVal pszPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function PathUnmakeSystemFolder Lib "shlwapi" Alias "PathUnmakeSystemFolderW" (ByVal pszPath As String) As BOOL
Public Declare PtrSafe Function PathIsSystemFolderA Lib "shlwapi" (ByVal pszPath As String, ByVal dwAttrb As FILE_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function PathIsSystemFolderW Lib "shlwapi" (ByVal pszPath As LongPtr, ByVal dwAttrb As FILE_ATTRIBUTES) As BOOL
Public DeclareWide PtrSafe Function PathIsSystemFolder Lib "shlwapi" Alias "PathIsSystemFolderW" (ByVal pszPath As String, ByVal dwAttrb As FILE_ATTRIBUTES) As BOOL
Public Declare PtrSafe Sub PathUndecorateA Lib "shlwapi" (ByVal pszPath As String)
Public Declare PtrSafe Sub PathUndecorateW Lib "shlwapi" (ByVal pszPath As LongPtr)
Public DeclareWide PtrSafe Sub PathUndecorate Lib "shlwapi" Alias "PathUndecorateW" (ByVal pszPath As String)
Public Declare PtrSafe Function PathUnExpandEnvStringsA Lib "shlwapi" (ByVal pszPath As String, ByVal pszBuf As String, ByVal cchBuf As Long) As BOOL
Public Declare PtrSafe Function PathUnExpandEnvStringsW Lib "shlwapi" (ByVal pszPath As LongPtr, ByVal pszBuf As LongPtr, ByVal cchBuf As Long) As BOOL
Public DeclareWide PtrSafe Function PathUnExpandEnvStrings Lib "shlwapi" Alias "PathUnExpandEnvStringsW" (ByVal pszPath As String, ByVal pszBuf As String, ByVal cchBuf As Long) As BOOL
Public Declare PtrSafe Function PathUnExpandEnvStringsForUserA Lib "shlwapi" Alias "#465" (ByVal hUserToken As LongPtr, ByVal pszPath As String, ByVal pszBuf As String, ByVal cchBuf As Long) As BOOL
Public Declare PtrSafe Function PathUnExpandEnvStringsForUserW Lib "shlwapi" Alias "#466" (ByVal hUserToken As LongPtr, ByVal pszPath As LongPtr, ByVal pszBuf As LongPtr, ByVal cchBuf As Long) As BOOL
Public DeclareWide PtrSafe Function PathUnExpandEnvStringsForUser Lib "shlwapi" Alias "#466" (ByVal hUserToken As LongPtr, ByVal pszPath As String, ByVal pszBuf As String, ByVal cchBuf As Long) As BOOL
Public Declare PtrSafe Function UrlCompareA Lib "shlwapi" (ByVal psz1 As String, ByVal psz2 As String, ByVal fIgnoreSlash As BOOL) As Long
Public Declare PtrSafe Function UrlCompareW Lib "shlwapi" (ByVal psz1 As LongPtr, ByVal psz2 As LongPtr, ByVal fIgnoreSlash As BOOL) As Long
Public DeclareWide PtrSafe Function UrlCompare Lib "shlwapi" Alias "UrlCompareW" (ByVal psz1 As String, ByVal psz2 As String, ByVal fIgnoreSlash As BOOL) As Long
Public Declare PtrSafe Sub UrlCombineA Lib "shlwapi" (ByVal pszBase As String, ByVal pszRelative As String, ByVal pszCombined As String, ByRef pcchCombined As Long, ByVal dwFlags As URL)
Public Declare PtrSafe Sub UrlCombineW Lib "shlwapi" (ByVal pszBase As LongPtr, ByVal pszRelative As LongPtr, ByVal pszCombined As LongPtr, ByRef pcchCombined As Long, ByVal dwFlags As URL)
Public DeclareWide PtrSafe Sub UrlCombine Lib "shlwapi" Alias "UrlCombineW" (ByVal pszBase As String, ByVal pszRelative As String, ByVal pszCombined As String, ByRef pcchCombined As Long, ByVal dwFlags As URL)
Public Declare PtrSafe Sub UrlCanonicalizeA Lib "shlwapi" (ByVal pszUrl As String, ByVal pszCanonicalized As String, ByRef pcchCanonicalized As Long, ByVal dwFlags As URL)
Public Declare PtrSafe Sub UrlCanonicalizeW Lib "shlwapi" (ByVal pszUrl As LongPtr, ByVal pszCanonicalized As LongPtr, ByRef pcchCanonicalized As Long, ByVal dwFlags As URL)
Public DeclareWide PtrSafe Sub UrlCanonicalize Lib "shlwapi" Alias "UrlCanonicalizeW" (ByVal pszUrl As String, ByVal pszCanonicalized As String, ByRef pcchCanonicalized As Long, ByVal dwFlags As URL)
Public Declare PtrSafe Function UrlIsOpaqueA Lib "shlwapi" (ByVal pszUrl As String) As BOOL
Public Declare PtrSafe Function UrlIsOpaqueW Lib "shlwapi" (ByVal pszUrl As LongPtr) As BOOL
Public DeclareWide PtrSafe Function UrlIsOpaque Lib "shlwapi" Alias "UrlIsOpaqueW" (ByVal pszUrl As String) As BOOL
Public Declare PtrSafe Function UrlIsNoHistoryA Lib "shlwapi" (ByVal pszUrl As String) As BOOL
Public Declare PtrSafe Function UrlIsNoHistoryW Lib "shlwapi" (ByVal pszUrl As LongPtr) As BOOL
Public DeclareWide PtrSafe Function UrlIsNoHistory Lib "shlwapi" Alias "UrlIsNoHistoryW" (ByVal pszUrl As String) As BOOL
Public Declare PtrSafe Function UrlIsA Lib "shlwapi" (ByVal pszUrl As String, ByVal URLIS As URLIS) As BOOL
Public Declare PtrSafe Function UrlIsW Lib "shlwapi" (ByVal pszUrl As LongPtr, ByVal URLIS As URLIS) As BOOL
Public DeclareWide PtrSafe Function UrlIs Lib "shlwapi" Alias "UrlIsW" (ByVal pszUrl As String, ByVal URLIS As URLIS) As BOOL
Public Declare PtrSafe Function UrlGetLocationA Lib "shlwapi" (ByVal psz1 As String) As LongPtr
Public Declare PtrSafe Function UrlGetLocationW Lib "shlwapi" (ByVal psz1 As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function UrlGetLocation Lib "shlwapi" Alias "UrlGetLocationW" (ByVal psz1 As String) As LongPtr
Public Declare PtrSafe Function UrlUnescapeA Lib "shlwapi" (ByVal pszUrl As String, ByVal pszUnescaped As String, ByRef pcchUnescaped As Long, ByVal dwFlags As URL) As Long
Public Declare PtrSafe Function UrlUnescapeW Lib "shlwapi" (ByVal pszUrl As LongPtr, ByVal pszUnescaped As LongPtr, ByRef pcchUnescaped As Long, ByVal dwFlags As URL) As Long
Public DeclareWide PtrSafe Function UrlUnescape Lib "shlwapi" Alias "UrlUnescapeW" (ByVal pszUrl As String, ByVal pszUnescaped As String, ByRef pcchUnescaped As Long, ByVal dwFlags As URL) As Long
Public Declare PtrSafe Function UrlEscapeA Lib "shlwapi" (ByVal pszUrl As String, ByVal pszEscaped As String, ByRef pcchEscaped As Long, ByVal dwFlags As URL) As Long
Public Declare PtrSafe Function UrlEscapeW Lib "shlwapi" (ByVal pszUrl As LongPtr, ByVal pszEscaped As LongPtr, ByRef pcchEscaped As Long, ByVal dwFlags As URL) As Long
Public DeclareWide PtrSafe Function UrlEscape Lib "shlwapi" Alias "UrlEscapeW" (ByVal pszUrl As String, ByVal pszEscaped As String, ByRef pcchEscaped As Long, ByVal dwFlags As URL) As Long
Public Declare PtrSafe Function UrlCreateFromPathA Lib "shlwapi" (ByVal pszPath As String, ByVal pszUrl As String, ByRef pcchUrl As Long, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function UrlCreateFromPathW Lib "shlwapi" (ByVal pszPath As LongPtr, ByVal pszUrl As LongPtr, ByRef pcchUrl As Long, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function UrlCreateFromPath Lib "shlwapi" Alias "UrlCreateFromPathW" (ByVal pszPath As String, ByVal pszUrl As String, ByRef pcchUrl As Long, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function ParseURLA Lib "shlwapi" (ByVal pszUrl As String, ppu As PARSEDURLA) As Long
Public Declare PtrSafe Function ParseURLW Lib "shlwapi" (ByVal pszUrl As LongPtr, ppu As PARSEDURLW) As Long
Public DeclareWide PtrSafe Function ParseURL Lib "shlwapi" Alias "ParseURLW" (ByVal pszUrl As String, ppu As PARSEDURL) As Long
Public Declare PtrSafe Function PathCreateFromUrlA Lib "shlwapi" (ByVal pszUrl As String, ByVal pszPath As String, ByRef pcchPath As Long, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function PathCreateFromUrlW Lib "shlwapi" (ByVal pszUrl As LongPtr, ByVal pszPath As LongPtr, ByRef pcchPath As Long, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function PathCreateFromUrl Lib "shlwapi" Alias "PathCreateFromUrlW" (ByVal pszUrl As String, ByVal pszPath As String, ByRef pcchPath As Long, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function PathCreateFromUrlAlloc Lib "shlwapi" (ByVal pszUrl As String, ppszOut As LongPtr, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function UrlHashA Lib "shlwapi" (ByVal pszUrl As String, ByRef pbHash As Byte, ByVal cbHash As Long) As Long
Public Declare PtrSafe Function UrlHashW Lib "shlwapi" (ByVal pszUrl As LongPtr, ByRef pbHash As Byte, ByVal cbHash As Long) As Long
Public DeclareWide PtrSafe Function UrlHash Lib "shlwapi" Alias "UrlHashW" (ByVal pszUrl As String, ByRef pbHash As Byte, ByVal cbHash As Long) As Long
Public Declare PtrSafe Function UrlGetPartW Lib "shlwapi" (ByVal pszIn As LongPtr, pszOut As LongPtr, ByRef pcchOut As Long, ByVal dwPart As URL_PART, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function UrlGetPartA Lib "shlwapi" (ByVal pszIn As String, ByVal pszOut As String, ByRef pcchOut As Long, ByVal dwPart As URL_PART, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function UrlGetPart Lib "shlwapi" Alias "UrlGetPartW" (ByVal pszIn As String, ByVal pszOut As String, ByRef pcchOut As Long, ByVal dwPart As URL_PART, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function UrlApplySchemeA Lib "shlwapi" (ByVal pszIn As String, ByVal pszOut As String, ByRef pcchOut As Long, ByVal dwFlags As URL_APPLY) As Long
Public Declare PtrSafe Function UrlApplySchemeW Lib "shlwapi" (ByVal pszIn As LongPtr, pszOut As LongPtr, ByRef pcchOut As Long, ByVal dwFlags As URL_APPLY) As Long
Public DeclareWide PtrSafe Function UrlApplyScheme Lib "shlwapi" Alias "UrlApplySchemeW" (ByVal pszIn As String, ByVal pszOut As String, ByRef pcchOut As Long, ByVal dwFlags As URL_APPLY) As Long
' UrlFixupA does not exist.
Public Declare PtrSafe Function UrlFixupW Lib "shlwapi" (ByVal pcszUrl As LongPtr, ByVal pszTranslatedUrl As LongPtr, ByVal cchMax As Long) As Long
Public DeclareWide PtrSafe Function UrlFixup Lib "shlwapi" Alias "UrlFixupW" (ByVal pcszUrl As String, ByVal pszTranslatedUrl As String, ByVal cchMax As Long) As Long
Public Declare PtrSafe Function IsInternetESCEnabled Lib "shlwapi" () As BOOL
Public Declare PtrSafe Function HashData Lib "shlwapi" (ByRef pbData As Byte, ByVal cbData As Long, ByRef pbHash As Byte, ByVal cbHash As Long) As Long
Public Declare PtrSafe Function SHDeleteEmptyKeyW Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As LongPtr) As Long
Public Declare PtrSafe Function SHDeleteEmptyKeyA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As String) As Long
Public DeclareWide PtrSafe Function SHDeleteEmptyKey Lib "shlwapi" Alias "SHDeleteEmptyKeyW" (ByVal hkey As LongPtr, ByVal pszSubKey As String) As Long
Public Declare PtrSafe Function SHDeleteKeyA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As String) As Long
Public Declare PtrSafe Function SHDeleteKeyW Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As LongPtr) As Long
Public DeclareWide PtrSafe Function SHDeleteKey Lib "shlwapi" Alias "SHDeleteKeyW" (ByVal hkey As LongPtr, ByVal pszSubKey As String) As Long
Public Declare PtrSafe Function SHRegDuplicateHKey Lib "shlwapi" (ByVal hkey As LongPtr) As LongPtr
Public Declare PtrSafe Function SHDeleteValueA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String) As Long
Public Declare PtrSafe Function SHDeleteValueW Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As LongPtr, ByVal pszValue As LongPtr) As Long
Public DeclareWide PtrSafe Function SHDeleteValue Lib "shlwapi" Alias "SHDeleteValueW" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String) As Long
Public Declare PtrSafe Function SHGetValueA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long) As Long
Public Declare PtrSafe Function SHGetValueW Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As LongPtr, ByVal pszValue As LongPtr, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long) As Long
Public DeclareWide PtrSafe Function SHGetValue Lib "shlwapi" Alias "SHGetValueW" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long) As Long
Public Declare PtrSafe Function SHSetValueA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String, ByVal dwType As REGTYPES, ByRef pvData As Any, ByVal cbData As Long) As Long
Public Declare PtrSafe Function SHSetValueW Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As LongPtr, ByVal pszValue As LongPtr, ByVal dwType As REGTYPES, ByRef pvData As Any, ByVal cbData As Long) As Long
Public DeclareWide PtrSafe Function SHSetValue Lib "shlwapi" Alias "SHSetValueW" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String, ByVal dwType As REGTYPES, ByRef pvData As Any, ByVal cbData As Long) As Long
Public Declare PtrSafe Function SHQueryValueExA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszValue As String, ByRef pdwReserved As Long, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long) As Long
Public Declare PtrSafe Function SHQueryValueExW Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszValue As LongPtr, ByRef pdwReserved As Long, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long) As Long
Public DeclareWide PtrSafe Function SHQueryValueEx Lib "shlwapi" Alias "SHQueryValueExW" (ByVal hkey As LongPtr, ByVal pszValue As String, ByRef pdwReserved As Long, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long) As Long
Public Declare PtrSafe Function SHEnumKeyExA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal dwIndex As Long, ByVal pszName As String, ByRef pcchName As Long) As Long
Public Declare PtrSafe Function SHEnumKeyExW Lib "shlwapi" (ByVal hkey As LongPtr, ByVal dwIndex As Long, ByVal pszName As LongPtr, ByRef pcchName As Long) As Long
Public DeclareWide PtrSafe Function SHEnumKeyEx Lib "shlwapi" Alias "SHEnumKeyExW" (ByVal hkey As LongPtr, ByVal dwIndex As Long, ByVal pszName As String, ByRef pcchName As Long) As Long
Public Declare PtrSafe Function SHEnumValueA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal dwIndex As Long, ByVal pszValueName As String, ByRef pcchValueName As Long, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long) As Long
Public Declare PtrSafe Function SHEnumValueW Lib "shlwapi" (ByVal hkey As LongPtr, ByVal dwIndex As Long, ByVal pszValueName As LongPtr, ByRef pcchValueName As Long, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long) As Long
Public DeclareWide PtrSafe Function SHEnumValue Lib "shlwapi" Alias "SHEnumValueW" (ByVal hkey As LongPtr, ByVal dwIndex As Long, ByVal pszValueName As String, ByRef pcchValueName As Long, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long) As Long
Public Declare PtrSafe Function SHQueryInfoKeyA Lib "shlwapi" (ByVal hkey As LongPtr, ByRef pcSubKeys As Long, ByRef pcchMaxSubKeyLen As Long, ByRef pcValues As Long, ByRef pcchMaxValueNameLen As Long) As Long
Public Declare PtrSafe Function SHQueryInfoKeyW Lib "shlwapi" (ByVal hkey As LongPtr, ByRef pcSubKeys As Long, ByRef pcchMaxSubKeyLen As Long, ByRef pcValues As Long, ByRef pcchMaxValueNameLen As Long) As Long
Public DeclareWide PtrSafe Function SHQueryInfoKey Lib "shlwapi" Alias "SHQueryInfoKeyW" (ByVal hkey As LongPtr, ByRef pcSubKeys As Long, ByRef pcchMaxSubKeyLen As Long, ByRef pcValues As Long, ByRef pcchMaxValueNameLen As Long) As Long
Public Declare PtrSafe Function SHCopyKeyA Lib "shlwapi" (ByVal hkeySrc As Long, ByVal szSrcSubKey As String, ByVal hkeyDest As LongPtr, ByVal fReserved As Long) As Long
Public Declare PtrSafe Function SHCopyKeyW Lib "shlwapi" (ByVal hkeySrc As Long, ByVal szSrcSubKey As LongPtr, ByVal hkeyDest As LongPtr, ByVal fReserved As Long) As Long
Public DeclareWide PtrSafe Function SHCopyKey Lib "shlwapi" Alias "SHCopyKeyW" (ByVal hkeySrc As Long, ByVal wszSrcSubKey As String, ByVal hkeyDest As LongPtr, ByVal fReserved As Long) As Long
Public Declare PtrSafe Function SHRegGetPathA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pcszSubKey As String, ByVal pcszValue As String, ByVal pszPath As String, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function SHRegGetPathW Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pcszSubKey As LongPtr, ByVal pcszValue As LongPtr, ByVal pszPath As LongPtr, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function SHRegGetPath Lib "shlwapi" Alias "SHRegGetPathW" (ByVal hkey As LongPtr, ByVal pcszSubKey As String, ByVal pcszValue As String, ByVal pszPath As String, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function SHRegSetPathA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pcszSubKey As String, ByVal pcszValue As String, ByVal pcszPath As String, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function SHRegSetPathW Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pcszSubKey As LongPtr, ByVal pcszValue As LongPtr, ByVal pcszPath As LongPtr, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function SHRegSetPath Lib "shlwapi" Alias "SHRegSetPathW" (ByVal hkey As LongPtr, ByVal pcszSubKey As String, ByVal pcszValue As String, ByVal pcszPath As String, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function SHRegCreateUSKeyA Lib "shlwapi" (ByVal pszPath As String, ByVal samDesired As REGSAM, ByVal hRelativeUSKey As LongPtr, ByRef phNewUSKey As LongPtr, ByVal dwFlags As SHREGSET) As Long
Public Declare PtrSafe Function SHRegCreateUSKeyW Lib "shlwapi" (ByVal pszPath As LongPtr, ByVal samDesired As REGSAM, ByVal hRelativeUSKey As LongPtr, ByRef phNewUSKey As LongPtr, ByVal dwFlags As SHREGSET) As Long
Public DeclareWide PtrSafe Function SHRegCreateUSKey Lib "shlwapi" Alias "SHRegCreateUSKeyW" (ByVal pwzPath As String, ByVal samDesired As REGSAM, ByVal hRelativeUSKey As LongPtr, ByRef phNewUSKey As LongPtr, ByVal dwFlags As SHREGSET) As Long
Public Declare PtrSafe Function SHRegOpenUSKeyA Lib "shlwapi" (ByVal pszPath As String, ByVal samDesired As REGSAM, ByVal hRelativeUSKey As LongPtr, ByRef phNewUSKey As LongPtr, ByVal fIgnoreHKCU As BOOL) As Long
Public Declare PtrSafe Function SHRegOpenUSKeyW Lib "shlwapi" (ByVal pszPath As LongPtr, ByVal samDesired As REGSAM, ByVal hRelativeUSKey As LongPtr, ByRef phNewUSKey As LongPtr, ByVal fIgnoreHKCU As BOOL) As Long
Public DeclareWide PtrSafe Function SHRegOpenUSKey Lib "shlwapi" Alias "SHRegOpenUSKeyW" (ByVal pwzPath As String, ByVal samDesired As REGSAM, ByVal hRelativeUSKey As LongPtr, ByRef phNewUSKey As LongPtr, ByVal fIgnoreHKCU As BOOL) As Long
Public Declare PtrSafe Function SHRegQueryUSValueA Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal pszValue As String, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long, ByVal fIgnoreHKCU As BOOL, ByRef pvDefaultData As Any, ByVal dwDefaultDataSize As Long) As Long
Public Declare PtrSafe Function SHRegQueryUSValueW Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal pszValue As LongPtr, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long, ByVal fIgnoreHKCU As BOOL, ByRef pvDefaultData As Any, ByVal dwDefaultDataSize As Long) As Long
Public DeclareWide PtrSafe Function SHRegQueryUSValue Lib "shlwapi" Alias "SHRegQueryUSValueW" (ByVal hUSKey As LongPtr, ByVal pwzValue As String, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long, ByVal fIgnoreHKCU As BOOL, ByRef pvDefaultData As Any, ByVal dwDefaultDataSize As Long) As Long
Public Declare PtrSafe Function SHRegWriteUSValueA Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal pszValue As String, ByVal dwType As REGTYPES, ByRef pvData As Any, ByVal cbData As Long, ByVal dwFlags As SHREGSET) As Long
Public Declare PtrSafe Function SHRegWriteUSValueW Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal pszValue As LongPtr, ByVal dwType As REGTYPES, ByRef pvData As Any, ByVal cbData As Long, ByVal dwFlags As SHREGSET) As Long
Public DeclareWide PtrSafe Function SHRegWriteUSValue Lib "shlwapi" Alias "SHRegWriteUSValueW" (ByVal hUSKey As LongPtr, ByVal pwzValue As String, ByVal dwType As REGTYPES, ByRef pvData As Any, ByVal cbData As Long, ByVal dwFlags As SHREGSET) As Long
Public Declare PtrSafe Function SHRegDeleteUSValueA Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal pszValue As String, ByVal delRegFlags As SHREGDEL_FLAGS) As Long
Public Declare PtrSafe Function SHRegDeleteUSValueW Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal pszValue As LongPtr, ByVal delRegFlags As SHREGDEL_FLAGS) As Long
Public DeclareWide PtrSafe Function SHRegDeleteEmptyUSKey Lib "shlwapi" Alias "SHRegDeleteEmptyUSKeyW" (ByVal hUSKey As LongPtr, ByVal pwzSubKey As String, ByVal delRegFlags As SHREGDEL_FLAGS) As Long
Public Declare PtrSafe Function SHRegDeleteEmptyUSKeyA Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal pszSubKey As String, ByVal delRegFlags As SHREGDEL_FLAGS) As Long
Public Declare PtrSafe Function SHRegDeleteEmptyUSKeyW Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal pszSubKey As LongPtr, ByVal delRegFlags As SHREGDEL_FLAGS) As Long
Public DeclareWide PtrSafe Function SHRegDeleteUSValue Lib "shlwapi" Alias "SHRegDeleteUSValueW" (ByVal hUSKey As LongPtr, ByVal pwzValue As String, ByVal delRegFlags As SHREGDEL_FLAGS) As Long
Public Declare PtrSafe Function SHRegEnumUSKeyA Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal dwIndex As Long, ByVal pszName As String, ByRef pcchName As Long, ByVal enumRegFlags As SHREGENUM_FLAGS) As Long
Public Declare PtrSafe Function SHRegEnumUSKeyW Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal dwIndex As Long, ByVal pszName As LongPtr, ByRef pcchName As Long, ByVal enumRegFlags As SHREGENUM_FLAGS) As Long
Public DeclareWide PtrSafe Function SHRegEnumUSKey Lib "shlwapi" Alias "SHRegEnumUSKeyW" (ByVal hUSKey As LongPtr, ByVal dwIndex As Long, ByVal pwzName As String, ByRef pcchName As Long, ByVal enumRegFlags As SHREGENUM_FLAGS) As Long
Public Declare PtrSafe Function SHRegEnumUSValueA Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal dwIndex As Long, ByVal pszValueName As String, ByRef pcchValueName As Long, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long, ByVal enumRegFlags As SHREGENUM_FLAGS) As Long
Public Declare PtrSafe Function SHRegEnumUSValueW Lib "shlwapi" (ByVal hUSKey As LongPtr, ByVal dwIndex As Long, ByVal pszValueName As LongPtr, ByRef pcchValueName As Long, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long, ByVal enumRegFlags As SHREGENUM_FLAGS) As Long
Public DeclareWide PtrSafe Function SHRegEnumUSValue Lib "shlwapi" Alias "SHRegEnumUSValueW" (ByVal hUSKey As LongPtr, ByVal dwIndex As Long, ByVal pszValueName As String, ByRef pcchValueName As Long, ByRef pdwType As Long, ByRef pvData As Any, ByRef pcbData As Long, ByVal enumRegFlags As SHREGENUM_FLAGS) As Long
Public Declare PtrSafe Function SHRegQueryInfoUSKeyA Lib "shlwapi" (ByVal hUSKey As LongPtr, ByRef pcSubKeys As Long, ByRef pcchMaxSubKeyLen As Long, ByRef pcValues As Long, ByRef pcchMaxValueNameLen As Long, ByVal enumRegFlags As SHREGENUM_FLAGS) As Long
Public Declare PtrSafe Function SHRegQueryInfoUSKeyW Lib "shlwapi" (ByVal hUSKey As LongPtr, ByRef pcSubKeys As Long, ByRef pcchMaxSubKeyLen As Long, ByRef pcValues As Long, ByRef pcchMaxValueNameLen As Long, ByVal enumRegFlags As SHREGENUM_FLAGS) As Long
Public DeclareWide PtrSafe Function SHRegQueryInfoUSKey Lib "shlwapi" Alias "SHRegQueryInfoUSKeyW" (ByVal hUSKey As LongPtr, ByRef pcSubKeys As Long, ByRef pcchMaxSubKeyLen As Long, ByRef pcValues As Long, ByRef pcchMaxValueNameLen As Long, ByVal enumRegFlags As SHREGENUM_FLAGS) As Long
Public Declare PtrSafe Function SHRegCloseUSKey Lib "shlwapi" (ByVal hUSKey As LongPtr) As Long
Public Declare PtrSafe Function SHRegGetUSValueA Lib "shlwapi" (ByVal pszSubKey As String, ByVal pszValue As String, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long, ByVal fIgnoreHKCU As BOOL, ByRef pvDefaultData As Any, ByVal dwDefaultDataSize As Long) As Long
Public Declare PtrSafe Function SHRegGetUSValueW Lib "shlwapi" (ByVal pszSubKey As LongPtr, ByVal pszValue As LongPtr, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long, ByVal fIgnoreHKCU As BOOL, ByRef pvDefaultData As Any, ByVal dwDefaultDataSize As Long) As Long
Public DeclareWide PtrSafe Function SHRegGetUSValue Lib "shlwapi" Alias "SHRegGetUSValueW" (ByVal pwzSubKey As String, ByVal pwzValue As String, ByRef pdwType As REGTYPES, ByRef pvData As Any, ByRef pcbData As Long, ByVal fIgnoreHKCU As BOOL, ByRef pvDefaultData As Any, ByVal dwDefaultDataSize As Long) As Long
Public Declare PtrSafe Function SHRegSetUSValueA Lib "shlwapi" (ByVal pszSubKey As String, ByVal pszValue As String, ByVal dwType As REGTYPES, ByRef pvData As Any, ByVal cbData As Long, ByVal dwFlags As SHREGSET) As Long
Public Declare PtrSafe Function SHRegSetUSValueW Lib "shlwapi" (ByVal pszSubKey As LongPtr, ByVal pszValue As LongPtr, ByVal dwType As REGTYPES, ByRef pvData As Any, ByVal cbData As Long, ByVal dwFlags As SHREGSET) As Long
Public DeclareWide PtrSafe Function SHRegSetUSValue Lib "shlwapi" Alias "SHRegSetUSValueW" (ByVal pwzSubKey As String, ByVal pwzValue As String, ByVal dwType As REGTYPES, ByRef pvData As Any, ByVal cbData As Long, ByVal dwFlags As SHREGSET) As Long
Public DeclareWide PtrSafe Function SHRegGetInt Lib "shlwapi" Alias "SHRegGetIntW" (ByVal hk As Long, ByVal pwzKey As String, ByVal iDefault As Long) As Long
Public Declare PtrSafe Function SHRegGetBoolUSValueA Lib "shlwapi" (ByVal pszSubKey As String, ByVal pszValue As String, ByVal fIgnoreHKCU As BOOL, ByVal fDefault As BOOL) As BOOL
Public Declare PtrSafe Function SHRegGetBoolUSValueW Lib "shlwapi" (ByVal pszSubKey As LongPtr, ByVal pszValue As LongPtr, ByVal fIgnoreHKCU As BOOL, ByVal fDefault As BOOL) As BOOL
Public DeclareWide PtrSafe Function SHRegGetBoolUSValue Lib "shlwapi" Alias "SHRegGetBoolUSValueW" (ByVal pszSubKey As String, ByVal pszValue As String, ByVal fIgnoreHKCU As BOOL, ByVal fDefault As BOOL) As BOOL

#If Win64 Then
Public Declare PtrSafe Function AssocCreate Lib "shlwapi" (clsid As UUID, ByRef riid As UUID, ByRef ppv As Any) As Long
#Else
Public Declare PtrSafe Function AssocCreate Lib "shlwapi" (ByVal clsid_data1 As Long, ByVal clsid_data23 As Long, ByVal clsid_data4_0123 As Long, ByVal clsid_data4_4567 As Long, ByRef riid As UUID, ByRef ppv As Any) As Long
#End If
Public Declare PtrSafe Function AssocGetPerceivedType Lib "shlwapi" (ByVal pszExt As LongPtr, ptype As PERCEIVED, pflag As PERCEIVEDFLAG, ppszType As LongPtr) As Long
Public Declare PtrSafe Function AssocQueryStringA Lib "shlwapi" (ByVal flags As ASSOCF, ByVal str As ASSOCSTR, ByVal pszAssoc As String, ByVal pszExtra As String, ByVal pszOut As String, ByRef pcchOut As Long) As Long
Public Declare PtrSafe Function AssocQueryStringW Lib "shlwapi" (ByVal flags As ASSOCF, ByVal str As ASSOCSTR, ByVal pszAssoc As LongPtr, ByVal pszExtra As LongPtr, ByVal pszOut As LongPtr, ByRef pcchOut As Long) As Long
Public DeclareWide PtrSafe Function AssocQueryString Lib "shlwapi" Alias "AssocQueryStringW" (ByVal flags As ASSOCF, ByVal str As ASSOCSTR, ByVal pszAssoc As String, ByVal pszExtra As String, ByVal pszOut As String, ByRef pcchOut As Long) As Long
Public Declare PtrSafe Function AssocQueryStringByKeyA Lib "shlwapi" (ByVal flags As ASSOCF, ByVal str As ASSOCSTR, ByVal hkAssoc As LongPtr, ByVal pszExtra As String, ByVal pszOut As String, ByRef pcchOut As Long) As Long
Public Declare PtrSafe Function AssocQueryStringByKeyW Lib "shlwapi" (ByVal flags As ASSOCF, ByVal str As ASSOCSTR, ByVal hkAssoc As LongPtr, ByVal pszExtra As LongPtr, ByVal pszOut As LongPtr, ByRef pcchOut As Long) As Long
Public DeclareWide PtrSafe Function AssocQueryStringByKey Lib "shlwapi" Alias "AssocQueryStringByKeyW" (ByVal flags As ASSOCF, ByVal str As ASSOCSTR, ByVal hkAssoc As LongPtr, ByVal pszExtra As String, ByVal pszOut As String, ByRef pcchOut As Long) As Long
Public Declare PtrSafe Function AssocQueryKeyA Lib "shlwapi" (ByVal flags As ASSOCF, ByVal key As ASSOCKEY, ByVal pszAssoc As String, ByVal pszExtra As String, ByRef phkeyOut As LongPtr) As Long
Public Declare PtrSafe Function AssocQueryKeyW Lib "shlwapi" (ByVal flags As ASSOCF, ByVal key As ASSOCKEY, ByVal pszAssoc As LongPtr, ByVal pszExtra As LongPtr, ByRef phkeyOut As LongPtr) As Long
Public Declare PtrSafe Function AssocIsDangerous Lib "shlwapi" (ByVal pszExt As LongPtr) As BOOL
Public Declare PtrSafe Function AssocGetUrlAction Lib "shlwapi" Alias "#561" (ByVal pszAssoc As LongPtr) As URLACTIONS
Public DeclareWide PtrSafe Function AssocQueryKey Lib "shlwapi" Alias "AssocQueryKeyW" (ByVal flags As ASSOCF, ByVal key As ASSOCKEY, ByVal pszAssoc As String, ByVal pszExtra As String, ByRef phkeyOut As LongPtr) As Long
[Description("NOTE: This function has been replaced by SHOpenRegStream2A. It is recommended that you use SHOpenRegStream2 at all times.")]
Public Declare PtrSafe Function SHOpenRegStreamA Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String, ByVal grfMode As STGM) As IStream
[Description("NOTE: This function has been replaced by SHOpenRegStream2W. It is recommended that you use SHOpenRegStream2 at all times.")]
Public Declare PtrSafe Function SHOpenRegStreamW Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As LongPtr, ByVal pszValue As LongPtr, ByVal grfMode As STGM) As IStream
[Description("NOTE: This function has been replaced by SHOpenRegStream2. It is recommended that you use SHOpenRegStream2 at all times.")]
Public DeclareWide PtrSafe Function SHOpenRegStream Lib "shlwapi" Alias "SHOpenRegStreamW" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String, ByVal grfMode As STGM) As IStream
Public Declare PtrSafe Function SHOpenRegStream2A Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String, ByVal grfMode As STGM) As IStream
Public Declare PtrSafe Function SHOpenRegStream2W Lib "shlwapi" (ByVal hkey As LongPtr, ByVal pszSubKey As LongPtr, ByVal pszValue As LongPtr, ByVal grfMode As STGM) As IStream
Public DeclareWide PtrSafe Function SHOpenRegStream2 Lib "shlwapi" Alias "SHOpenRegStream2W" (ByVal hkey As LongPtr, ByVal pszSubKey As String, ByVal pszValue As String, ByVal grfMode As STGM) As IStream
Public Declare PtrSafe Function SHCreateStreamOnFileA Lib "shlwapi" (ByVal pszFile As String, ByVal grfMode As STGM, ppstm As IStream) As Long
Public Declare PtrSafe Function SHCreateStreamOnFileW Lib "shlwapi" (ByVal pszFile As LongPtr, ByVal grfMode As STGM, ppstm As IStream) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function SHCreateStreamOnFileA Lib "shlwapi" (ByVal pszFile As String, ByVal grfMode As STGM) As IStream
[PreserveSig(False)]
Public Declare PtrSafe Function SHCreateStreamOnFileW Lib "shlwapi" (ByVal pszFile As LongPtr, ByVal grfMode As STGM) As IStream
[PreserveSig(False)]
Public DeclareWide PtrSafe Function SHCreateStreamOnFile Lib "shlwapi" Alias "SHCreateStreamOnFileW" (ByVal pszFile As String, ByVal grfMode As STGM) As IStream
[PreserveSig(False)]
Public Declare PtrSafe Function SHCreateStreamOnFileEx Lib "shlwapi" (ByVal pszFile As LongPtr, ByVal grfMode As STGM, ByVal dwAttributes As FILE_ATTRIBUTES, ByVal fCreate As BOOL, ByVal pstmTemplate As IStream) As IStream
Public Declare PtrSafe Function SHCreateStreamOnFileEx Lib "shlwapi" (ByVal pszFile As LongPtr, ByVal grfMode As STGM, ByVal dwAttributes As FILE_ATTRIBUTES, ByVal fCreate As BOOL, ByVal pstmTemplate As IStream, ByRef ppstm As IStream) As Long
Public DeclareWide PtrSafe Function SHCreateStreamOnFile Lib "shlwapi" Alias "SHCreateStreamOnFileW" (ByVal pszFile As String, ByVal grfMode As STGM, ppstm As IStream) As Long
Public DeclareWide PtrSafe Function SHCreateMemStream Lib "shlwapi" (pInit As Any, ByVal cbInit As Long) As IStream
Public Declare PtrSafe Function SHAutoComplete Lib "shlwapi" (ByVal hwndEdit As LongPtr, ByVal dwFlags As SHACF) As Long
Public Declare PtrSafe Function SHSetThreadRef Lib "shlwapi" (ByVal pUnk As IUnknown) As Long
Public Declare PtrSafe Function SHGetThreadRef Lib "shlwapi" (ppunk As IUnknown) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function SHGetThreadRef Lib "shlwapi" () As IUnknown
Public Declare PtrSafe Function SHReleaseThreadRef Lib "shlwapi" () As Long
Public Declare PtrSafe Function SHSkipJunction Lib "shlwapi" (ByVal pbc As IBindCtx, ByRef pclsid As UUID) As Long
Public Declare PtrSafe Function SHCreateThread Lib "shlwapi" (ByVal pfnThreadProc As LongPtr, ByRef pData As Any, ByVal dwFlags As SHCT_FLAGS, ByVal pfnCallback As LongPtr) As BOOL
Public Declare PtrSafe Function SHCreateThreadWithHandle Lib "shlwapi" (ByVal pfnThreadProc As LongPtr, ByRef pData As Any, ByVal dwFlags As SHCT_FLAGS, ByVal pfnCallback As LongPtr, pHandle As LongPtr) As BOOL
Public Declare PtrSafe Function SHCreateShellPalette Lib "shlwapi" (ByVal hDC As LongPtr) As LongPtr
Public Declare PtrSafe Sub ColorRGBToHLS Lib "shlwapi" (ByVal clrRGB As Long, ByRef pwHue As Integer, ByRef pwLuminance As Integer, ByRef pwSaturation As Integer)
Public Declare PtrSafe Function ColorHLSToRGB Lib "shlwapi" (ByVal wHue As Integer, ByVal wLuminance As Integer, ByVal wSaturation As Integer) As Long
Public Declare PtrSafe Function ColorAdjustLuma Lib "shlwapi" (ByVal clrRGB As Long, ByVal n As Long, ByVal fScale As BOOL) As Long
Public Declare PtrSafe Function SHMessageBoxCheckA Lib "shlwapi" (ByVal hwnd As LongPtr, ByVal pszText As String, ByVal pszCaption As String, ByVal uType As MessageBoxFlags, iDefault As Long, ByVal pszRegVal As String) As MessageBoxResults
Public Declare PtrSafe Function SHMessageBoxCheckW Lib "shlwapi" (ByVal hwnd As LongPtr, ByVal pszText As LongPtr, ByVal pszCaption As LongPtr, ByVal uType As MessageBoxFlags, iDefault As Long, ByVal pszRegVal As LongPtr) As MessageBoxResults
Public DeclareWide PtrSafe Function SHMessageBoxCheck Lib "shlwapi" Alias "SHMessageBoxCheckW" (ByVal hwnd As LongPtr, ByVal pszText As String, ByVal pszCaption As String, ByVal uType As MessageBoxFlags, iDefault As Long, ByVal pszRegVal As String) As MessageBoxResults
Public Declare PtrSafe Function SHSendMessageBroadcastA Lib "shlwapi" (ByVal uMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
Public DeclareWide PtrSafe Function SHSendMessageBroadcastW Lib "shlwapi" (ByVal uMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
Public DeclareWide PtrSafe Function SHSendMessageBroadcast Lib "shlwapi" Alias "SHSendMessageBroadcastW" (ByVal uMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
'doesnt exist Public Declare PtrSafe Function SHCreateStreamOnDllResourceA Lib "shlwapi" (ByVal pszModule As String, ByVal pszName As String, [TypeHint(ResourceTypes)] ByVal pszType As LongPtr, ppStream As IStream) As Long
Public Declare PtrSafe Function SHCreateStreamOnDllResourceW Lib "shlwapi" Alias "#627" (ByVal pszModule As LongPtr, ByVal pszName As LongPtr, [TypeHint(ResourceTypes)] ByVal pszType As LongPtr, ppStream As IStream) As Long
Public DeclareWide PtrSafe Function SHCreateStreamOnDllResource Lib "shlwapi" Alias "#627" (ByVal pszModule As String, ByVal pszName As String, [TypeHint(ResourceTypes)] ByVal pszType As LongPtr, ppStream As IStream) As Long
'doesnt exist Public Declare PtrSafe Function SHCreateStreamOnModuleResourceA Lib "shlwapi" (ByVal hModule As LongPtr, ByVal pszName As String, [TypeHint(ResourceTypes)] ByVal pszType As LongPtr, ppStream As IStream) As Long
Public Declare PtrSafe Function SHCreateStreamOnModuleResourceW Lib "shlwapi" Alias "#628" (ByVal hModule As LongPtr, ByVal pszName As LongPtr, [TypeHint(ResourceTypes)] ByVal pszType As LongPtr, ppStream As IStream) As Long
Public DeclareWide PtrSafe Function SHCreateStreamOnModuleResource Lib "shlwapi" Alias "#628" (ByVal hModule As LongPtr, ByVal pszName As String, [TypeHint(ResourceTypes)] ByVal pszType As LongPtr, ppStream As IStream) As Long
[Description("This function compares the bits of the color mask bitmaps retrived by GetIconInfo.")]
Public Declare PtrSafe Function SHAreIconsEqual Lib "shlwapi" Alias "#548" (ByVal hIcon1 As LongPtr, ByVal hIcon2 As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SHWindowsPolicyGetValue Lib "shlwapi" Alias "#560" (rpolid As UUID, pvData As Any, pcbData As Long) As Long
Public Declare PtrSafe Function SHWindowsPolicy Lib "shlwapi" Alias "#618" (rpolid As UUID) As BOOL
Public Declare PtrSafe Function SHIsLowMemoryMachine Lib "shlwapi" (ByVal dwType As SHLowMemMachineTypes) As BOOL
Public DeclareWide PtrSafe Function SHGetViewStatePropertyBag Lib "shlwapi" (ByVal pidl As LongPtr, ByVal pszBagName As String, ByVal dwFlags As SHViewStatePropBagFlags, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHFormatDateTimeA Lib "shlwapi" (pft As FILETIME, pdwFlags As SHFormatDateTimeFlags, ByVal pszBuf As String, ByVal cchBuf As Long) As Long
Public Declare PtrSafe Function SHFormatDateTimeW Lib "shlwapi" (pft As FILETIME, pdwFlags As SHFormatDateTimeFlags, ByVal pszBuf As LongPtr, ByVal cchBuf As Long) As Long
Public DeclareWide PtrSafe Function SHFormatDateTime Lib "shlwapi" Alias "SHFormatDateTimeW" (pft As FILETIME, pdwFlags As SHFormatDateTimeFlags, ByVal pszBuf As String, ByVal cchBuf As Long) As Long
Public Declare PtrSafe Function GetMenuPosFromID Lib "shlwapi" (ByVal hMenu As LongPtr, ByVal id As Long) As Long
Public Declare PtrSafe Function GetAcceptLanguagesA Lib "shlwapi" (ByVal pszLanguages As String, pcchLanguages As Long) As Long
Public Declare PtrSafe Function GetAcceptLanguagesW Lib "shlwapi" (ByVal pszLanguages As LongPtr, pcchLanguages As Long) As Long
Public DeclareWide PtrSafe Function GetAcceptLanguages Lib "shlwapi" Alias "GetAcceptLanguagesW" (ByVal pszLanguages As String, pcchLanguages As Long) As Long
Public Declare PtrSafe Function ConnectToConnectionPoint Lib "shlwapi" (ByVal pUnk As IUnknown, riidEvent As UUID, ByVal fConnect As BOOL, ByVal punkTarget As IUnknown, pdwCookie As Long, ppcpOut As IConnectionPoint) As Long
Public Declare PtrSafe Function IStream_ReadPidl Lib "shlwapi" (ByVal pstm As IStream, ppidlOut As LongPtr) As Long
Public Declare PtrSafe Function IStream_WritePidl Lib "shlwapi" (ByVal pstm As IStream, ByVal pidlWrite As LongPtr) As Long
Public Declare PtrSafe Function IStream_Read Lib "shlwapi" (ByVal pstm As IStream, pv As Any, ByVal cb As Long) As Long
Public Declare PtrSafe Function IStream_Write Lib "shlwapi" (ByVal pstm As IStream, pv As Any, ByVal cb As Long) As Long
Public Declare PtrSafe Function IStream_Reset Lib "shlwapi" (ByVal pstm As IStream) As Long
Public Declare PtrSafe Function IStream_Size Lib "shlwapi" (ByVal pstm As IStream, pui As ULARGE_INTEGER) As Long
Public Declare PtrSafe Function IStream_ReadStr Lib "shlwapi" (ByVal pstm As IStream, ppsz As LongPtr) As Long
Public DeclareWide PtrSafe Function IStream_WriteStr Lib "shlwapi" (ByVal pstm As IStream, ByVal psz As String) As Long
Public Declare PtrSafe Function IStream_Copy Lib "shlwapi" (ByVal pstmFrom As IStream, ByVal pstmTo As IStream, ByVal cb As Long) As Long
Public Declare PtrSafe Function IUnknown_QueryService Lib "shlwapi" (ByVal pUnk As IUnknown, ByRef guidService As UUID, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Sub IUnknown_Set Lib "shlwapi" (ppunk As IUnknown, ByVal punk As IUnknown)
Public Declare PtrSafe Sub IUnknown_AtomicRelease Lib "shlwapi" (ppUnk As IUnknown)
Public Declare PtrSafe Function IUnknown_GetWindow Lib "shlwapi" (ByVal punk As IUnknown, phwnd As LongPtr) As Long
Public Declare PtrSafe Function IUnknown_SetSite Lib "shlwapi" (ByVal punk As IUnknown, ByVal punkSite As IUnknown) As Long
Public Declare PtrSafe Function IUnknown_GetSite Lib "shlwapi" (ByVal punk As IUnknown, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function SHAnsiToUnicode Lib "shlwapi" (ByVal pszSrc As LongPtr, ByVal pwszDst As String, ByVal cwchBuf As Long) As Long
Public DeclareWide PtrSafe Function SHAnsiToAnsi Lib "shlwapi" (ByVal pszSrc As LongPtr, ByVal pwszDst As String, ByVal cchBuf As Long) As Long
Public DeclareWide PtrSafe Function SHUnicodeToAnsi Lib "shlwapi" (ByVal pszSrc As LongPtr, ByVal pwszDst As String, ByVal cchBuf As Long) As Long
Public DeclareWide PtrSafe Function SHUnicodeToUnicode Lib "shlwapi" (ByVal pszSrc As LongPtr, ByVal pwszDst As String, ByVal cwchBuf As Long) As Long
Public Declare PtrSafe Function SHStripMneumonicW Lib "shlwapi" (ByVal hMenu As LongPtr) As Integer
Public Declare PtrSafe Function SHStripMneumonicA Lib "shlwapi" (ByVal hMenu As LongPtr) As Byte
Public Declare PtrSafe Function SHStripMneumonic Lib "shlwapi" Alias "SHStripMneumonicW" (ByVal hMenu As LongPtr) As Integer
Public Declare PtrSafe Function IsOS Lib "shlwapi" (ByVal dwOS As ShellIsOS) As BOOL
Public Declare PtrSafe Function SHGlobalCounterGetValue Lib "shlwapi" Alias "#632" (ByVal id As SHGLOBALCOUNTER) As Long
Public Declare PtrSafe Function SHGlobalCounterIncrement Lib "shlwapi" Alias "#633" (ByVal id As SHGLOBALCOUNTER) As Long
Public Declare PtrSafe Function SHGlobalCounterDecrement Lib "shlwapi" Alias "#634" (ByVal id As SHGLOBALCOUNTER) As Long
Public DeclareWide PtrSafe Function SHAllocShared Lib "shlwapi" (pv As Any, ByVal dwSize As Long, ByVal dwProcessId As Long) As LongPtr
Public Declare PtrSafe Function SHFreeShared Lib "shlwapi" (ByVal hData As LongPtr, ByVal dwProcessId As Long) As BOOL
Public Declare PtrSafe Function SHLockShared Lib "shlwapi" (ByVal hData As LongPtr, ByVal dwProcessId As Long) As LongPtr
Public DeclareWide PtrSafe Function SHUnlockShared Lib "shlwapi" (pvData As Any) As BOOL
Public Declare PtrSafe Function SHGetAppCompatFlags Lib "shlwapi" Alias "#461" (ByVal dwFlagsNeeded As ShellAppCompatFlags) As ShellAppCompatFlags
Public Declare PtrSafe Function SHGetObjectCompatFlags Lib "shlwapi" Alias "#476" (ByVal punk As IUnknown, pclsid As UUID) As OBJCOMPATFLAGS
Public Declare PtrSafe Function GetShellSecurityDescriptor Lib "shlwapi" Alias "#475" (apUserPerm As SHELL_USER_PERMISSION, ByVal cUserPerm As Long) As LongPtr 'PSECURITY_DESCRIPTOR
'SHRegGetCLSIDKeyA is nonfunctional
Public Declare PtrSafe Function SHRegGetCLSIDKeyW Lib "shlwapi" Alias "#344" (pclsid As UUID, ByVal lpSubKey As LongPtr, ByVal bPerUser As BOOL, ByVal bCreate As BOOL, ByVal samDesired As REGSAM, phkey As LongPtr) As Long
Public DeclareWide PtrSafe Function SHRegGetCLSIDKey Lib "shlwapi" Alias "#344" (pclsid As UUID, ByVal lpSubKey As String, ByVal bPerUser As BOOL, ByVal bCreate As BOOL, ByVal samDesired As REGSAM, phkey As LongPtr) As Long
Public Declare PtrSafe Function SHWeakQueryInterface Lib "shlwapi" Alias "#267" (ByVal pUnkOuter As LongPtr, ByVal punkInner As LongPtr, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function SHInterlockedCompareExchange Lib "shlwapi" Alias "#342" (ppDest As Any, pExch As Any, pComp As Any) As LongPtr
Public Declare PtrSafe Sub SHWeakReleaseInterface Lib "shlwapi" Alias "#268" (ByVal pUnkOuter As LongPtr, ByVal ppunk As LongPtr)


Public Type SHELL_USER_SID
    sidAuthority As SID_IDENTIFIER_AUTHORITY
    dwUserGroupID As Long
    dwUserID As Long
End Type
Public Type SHELL_USER_PERMISSION
    susID As SHELL_USER_SID
    dwAccessType As AceTypes
    fInherit As BOOL
    dwAccessMask As Long 'ACCESS_MASK
    dwInheritMask As Long
    dwInheritAccessMask As Long 'ACCESS_MASK
End Type

Public Enum ShellAppCompatFlags
    ACF_NONE = &H00000000
    ACF_CONTEXTMENU = &H00000001
    ACF_CORELINTERNETENUM = &H00000004  ' corel suite 8 has this same problem as suite 7 but does not have context menu one so need new bit
    ACF_OLDCREATEVIEWWND = &H00000004  ' PowerDesk relies on CreateViewWindow returning S_OK
    ACF_WIN95DEFVIEW = &H00000004  ' for apps that depend on win95 defview behavior
    ACF_DOCOBJECT = &H00000002
    ACF_FLUSHNOWAITALWAYS = &H00000001
    ACF_MYCOMPUTERFIRST = &H00000008  ' MyComp must be first item on the desktop
    ACF_OLDREGITEMGDN = &H00000010  ' Win95-compatible GetDisplayNameOf on regitems
    ACF_LOADCOLUMNHANDLER = &H00000040  ' Dont delay load column handler.
    ACF_ANSI = &H00000080  ' For Apps that Pass in ANSI Strings
    ACF_STRIPFOLDERBIT = &H00000100  ' nuke the folder GAO in file dialog (for folder shortcuts, zip & cab files)
    ACF_WIN95SHLEXEC = &H00000200  ' dont use DDEWAIT when thunking to ShellExecEx()
    ACF_STAROFFICE5PRINTER = &H00000400  ' special return values from printer folder GAO
    ACF_NOVALIDATEFSIDS = &H00000800  ' FS pidls should not be validated.
    ACF_FILEOPENNEEDSEXT = &H00001000  ' Need to show extensioin in the name box of the open file common dialog
    ACF_WIN95BINDTOOBJECT = &H00002000  ' Win95 BindToObject behavior dependencies
    ACF_IGNOREENUMRESET = &H00004000  ' App relies on IEnumIDList::Reset returning E_NOTIMPL
    ACF_ANSIDISPLAYNAMES = &H00010000  ' calling process requires the ISF::GDN in ansi
    ACF_FILEOPENBOGUSCTRLID = &H00020000  ' Requires that the toolbar in fileopen have ctrl ID == ID_OK
    ACF_FORCELFNIDLIST = &H00040000  ' forces no AltName in the FS pidls (for apps that read directly from the pidl)
    ACF_APPISOFFICE = &H01000000  ' calling app is office (95, 97, 2000, ++)
    ACF_KNOWPERPROCESS = &H80000000  ' We know the per process flags already.
'  The flags that are per-process
    ACF_PERPROCESSFLAGS = (ACF_CONTEXTMENU Or ACF_CORELINTERNETENUM Or ACF_OLDCREATEVIEWWND Or ACF_WIN95DEFVIEW Or ACF_DOCOBJECT Or ACF_FLUSHNOWAITALWAYS Or ACF_MYCOMPUTERFIRST Or ACF_OLDREGITEMGDN Or ACF_LOADCOLUMNHANDLER Or ACF_ANSI Or ACF_WIN95SHLEXEC Or ACF_STAROFFICE5PRINTER Or ACF_NOVALIDATEFSIDS Or ACF_FILEOPENNEEDSEXT Or ACF_WIN95BINDTOOBJECT Or ACF_IGNOREENUMRESET Or ACF_ANSIDISPLAYNAMES Or ACF_FILEOPENBOGUSCTRLID Or ACF_FORCELFNIDLIST)
'  Flags that are per caller
    ACF_PERCALLFLAGS = (ACF_APPISOFFICE Or ACF_STRIPFOLDERBIT)
End Enum
Public Enum OBJCOMPATFLAGS
    OBJCOMPATF_OTNEEDSSFCACHE = &H00000001
    OBJCOMPATF_NO_WEBVIEW = &H00000002
    OBJCOMPATF_UNBINDABLE = &H00000004
    OBJCOMPATF_PINDLL = &H00000008
    OBJCOMPATF_NEEDSFILESYSANCESTOR = &H00000010
    OBJCOMPATF_NOTAFILESYSTEM = &H00000020
    OBJCOMPATF_CTXMENU_NOVERBS = &H00000040
    OBJCOMPATF_CTXMENU_LIMITEDQI = &H00000080
    OBJCOMPATF_COCREATESHELLFOLDERONLY = &H00000100
    OBJCOMPATF_NEEDSSTORAGEANCESTOR = &H00000200
    OBJCOMPATF_NOLEGACYWEBVIEW = &H00000400
    OBJCOMPATF_BLOCKSHELLSERVICEOBJECT = &H00000800
End Enum

Public Enum SHGLOBALCOUNTER
    GLOBALCOUNTER_SEARCHMANAGER = 0
    GLOBALCOUNTER_SEARCHOPTIONS = 1
    GLOBALCOUNTER_FOLDERSETTINGSCHANGE = 2
    GLOBALCOUNTER_RATINGS = 3
    GLOBALCOUNTER_APPROVEDSITES = 4
    GLOBALCOUNTER_RESTRICTIONS = 5
    GLOBALCOUNTER_SHELLSETTINGSCHANGED = 6
    GLOBALCOUNTER_SYSTEMPIDLCHANGE = 7
    GLOBALCOUNTER_OVERLAYMANAGER = 8
    GLOBALCOUNTER_QUERYASSOCIATIONS = 9
    GLOBALCOUNTER_IESESSIONS = 10
    GLOBALCOUNTER_IEONLY_SESSIONS = 11
    GLOBALCOUNTER_APPLICATION_DESTINATIONS = 12
    __UNUSED_RECYCLE_WAS_GLOBALCOUNTER_CSCSYNCINPROGRESS = 13
    GLOBALCOUNTER_BITBUCKETNUMDELETERS = 14
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_SHARES = 15
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_A = 16
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_B = 17
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_C = 18
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_D = 19
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_E = 20
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_F = 21
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_G = 22
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_H = 23
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_I = 24
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_J = 25
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_K = 26
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_L = 27
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_M = 28
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_N = 29
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_O = 30
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_P = 31
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Q = 32
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_R = 33
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_S = 34
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_T = 35
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_U = 36
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_V = 37
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_W = 38
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_X = 39
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Y = 40
    GLOBALCOUNTER_RECYCLEDIRTYCOUNT_DRIVE_Z = 41
    __UNUSED_RECYCLE_WAS_GLOBALCOUNTER_RECYCLEDIRTYCOUNT_SERVERDRIVE = 42
    __UNUSED_RECYCLE_WAS_GLOBALCOUNTER_RECYCLEGLOBALDIRTYCOUNT = 43
    GLOBALCOUNTER_RECYCLEBINENUM = 44
    GLOBALCOUNTER_RECYCLEBINCORRUPTED = 45
    GLOBALCOUNTER_RATINGS_STATECOUNTER = 46
    GLOBALCOUNTER_PRIVATE_PROFILE_CACHE = 47
    GLOBALCOUNTER_INTERNETTOOLBAR_LAYOUT = 48
    GLOBALCOUNTER_FOLDERDEFINITION_CACHE = 49
    GLOBALCOUNTER_COMMONPLACES_LIST_CACHE = 50
    GLOBALCOUNTER_PRIVATE_PROFILE_CACHE_MACHINEWIDE = 51
    GLOBALCOUNTER_ASSOCCHANGED = 52 ' throttles reading of the registry value "GlobalAssocChangedCounter" from HKLM\Software\Microsoft\Windows\CurrentVersion\Explorer
    ' #if (NTDDI_VERSION >= NTDDI_WIN8)
    GLOBALCOUNTER_APP_ITEMS_STATE_STORE_CACHE = 53
    GLOBALCOUNTER_SETTINGSYNC_ENABLED = 54
    GLOBALCOUNTER_APPSFOLDER_FILETYPEASSOCIATION_COUNTER = 55
    GLOBALCOUNTER_USERINFOCHANGED = 56
    ' #if (NTDDI_VERSION >= NTDDI_WINBLUE)
    GLOBALCOUNTER_SYNC_ENGINE_INFORMATION_CACHE_MACHINEWIDE = 57
    ' #endif // (NTDDI_VERSION >= NTDDI_WINBLUE)
    ' #endif // (NTDDI_VERSION >= NTDDI_WIN8)
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_RS1)
    GLOBALCOUNTER_BANNERS_DATAMODEL_CACHE_MACHINEWIDE = 58
    ' #endif // (NTDDI_VERSION >= NTDDI_WIN10_RS1)
    GLOBALCOUNTER_MAXIMUMVALUE = 59 ' should always be last value
End Enum


Public Enum ShellIsOS
    OS_WINDOWS = 0  ' Windows 9x vs. NT
    OS_NT = 1  ' Windows 9x vs. NT
    OS_WIN95ORGREATER = 2  ' Win95 or greater
    OS_NT4ORGREATER = 3  ' NT4 or greater
    OS_WIN98ORGREATER = 5  ' Win98 or greater
    OS_WIN98_GOLD = 6  ' Win98 Gold (Version 4.10 build 1998)
    OS_WIN2000ORGREATER = 7  ' Some derivative of Win2000
'  NOTE: these flags check explicitly for (dwMajorVersion == 5)
    OS_WIN2000PRO = 8  ' Windows 2000 Professional (Workstation)
    OS_WIN2000SERVER = 9  ' Windows 2000 Server
    OS_WIN2000ADVSERVER = 10  ' Windows 2000 Advanced Server
    OS_WIN2000DATACENTER = 11  ' Windows 2000 Data Center Server
    OS_WIN2000TERMINAL = 12  ' Windows 2000 Terminal Server in "Application Server" mode (now simply called "Terminal Server")
    OS_EMBEDDED = 13  ' Embedded Windows Edition
    OS_TERMINALCLIENT = 14  ' Windows Terminal Client (eg user is comming in via tsclient)
    OS_TERMINALREMOTEADMIN = 15  ' Terminal Server in "Remote Administration" mode
    OS_WIN95_GOLD = 16  ' Windows 95 Gold (Version 4.0 Build 1995)
    OS_MEORGREATER = 17  ' Windows Millennium (Version 5.0)
    OS_XPORGREATER = 18  ' Windows XP or greater
    OS_HOME = 19  ' Home Edition (eg NOT Professional, Server, Advanced Server, or Datacenter)
    OS_PROFESSIONAL = 20  ' Professional     (aka Workstation; eg NOT Server, Advanced Server, or Datacenter)
    OS_DATACENTER = 21  ' Datacenter       (eg NOT Server, Advanced Server, Professional, or Personal)
    OS_ADVSERVER = 22  ' Advanced Server  (eg NOT Datacenter, Server, Professional, or Personal)
    OS_SERVER = 23  ' Server           (eg NOT Datacenter, Advanced Server, Professional, or Personal)
    OS_TERMINALSERVER = 24  ' Terminal Server - server running in what used to be called "Application Server" mode (now simply called "Terminal Server")
    OS_PERSONALTERMINALSERVER = 25  ' Personal Terminal Server - per/pro machine running in single user TS mode
    OS_FASTUSERSWITCHING = 26  ' Fast User Switching
    OS_WELCOMELOGONUI = 27  ' New friendly logon UI
    OS_DOMAINMEMBER = 28  ' Is this machine a member of a domain (eg NOT a workgroup)
    OS_ANYSERVER = 29  ' is this machine any type of server? (eg datacenter or advanced server or server)?
    OS_WOW6432 = 30  ' Is this process a 32-bit process running on an 64-bit platform?
    OS_WEBSERVER = 31  ' Web Edition Server
    OS_SMALLBUSINESSSERVER = 32  ' SBS Server
    OS_TABLETPC = 33  ' Are we running on a TabletPC?
    OS_SERVERADMINUI = 34  ' Should defaults lean towards those preferred by server administrators?
    OS_MEDIACENTER = 35  ' eHome Freestyle Project
    OS_APPLIANCE = 36  ' Windows .NET Appliance Server
End Enum

Public Enum SHFormatDateTimeFlags
    FDTF_SHORTTIME = &H00000001  ' eg, "7:48 PM"
    FDTF_SHORTDATE = &H00000002  ' eg, "3/29/98"
    FDTF_DEFAULT = (FDTF_SHORTDATE Or FDTF_SHORTTIME)  ' eg, "3/29/98 7:48 PM"
    FDTF_LONGDATE = &H00000004  ' eg, "Monday, March 29, 1998"
    FDTF_LONGTIME = &H00000008  ' eg. "7:48:33 PM"
    FDTF_RELATIVE = &H00000010  ' uses "Yesterday", etc. if possible
    FDTF_LTRDATE = &H00000100  ' Left To Right reading order
    FDTF_RTLDATE = &H00000200  ' Right To Left reading order
    FDTF_NOAUTOREADINGORDER = &H00000400  ' Don't detect reading order automatically. Useful if you will be converting to Ansi and don't want Unicode reading order characters
End Enum

Public Enum SHViewStatePropBagFlags
    SHGVSPB_PERUSER = &H00000001  ' must have one of PERUSER or ALLUSERS
    SHGVSPB_ALLUSERS = &H00000002
    SHGVSPB_PERFOLDER = &H00000004  ' must have one of PERFOLDER ALLFOLDERS or INHERIT
    SHGVSPB_ALLFOLDERS = &H00000008
    SHGVSPB_INHERIT = &H00000010
    SHGVSPB_ROAM = &H00000020  ' modifies the above
    SHGVSPB_NOAUTODEFAULTS = &H80000000  ' turns off read delegation to more general property bags
    SHGVSPB_FOLDER = (SHGVSPB_PERUSER Or SHGVSPB_PERFOLDER)
    SHGVSPB_FOLDERNODEFAULTS = (SHGVSPB_PERUSER Or SHGVSPB_PERFOLDER Or SHGVSPB_NOAUTODEFAULTS)
    SHGVSPB_USERDEFAULTS = (SHGVSPB_PERUSER Or SHGVSPB_ALLFOLDERS)
    SHGVSPB_GLOBALDEFAULTS = (SHGVSPB_ALLUSERS Or SHGVSPB_ALLFOLDERS)
End Enum

Public Enum SHLowMemMachineTypes
ILMM_IE4
End Enum

'The following are in all ways shlwapi APIs; they're in shlwapi.h and shlwapi.lib, but only exported from SHCore.dll, which seems to get many shlwapi APIs forwarded to it
Public Declare PtrSafe Sub SetProcessReference Lib "SHCore" (ByVal pUnk As stdole.IUnknown)
Public Declare PtrSafe Function GetProcessReference Lib "SHCore" (ppunk As stdole.IUnknown) As Long
#End Region

#Region "kernel32"
'********************************************************************************
'kernel32.dll, kernelbase.dll and ktmw32.dll
Public Type MEMORYSTATUSEX
	dwLength As Long
	dwMemoryLoad As Long
	ullTotalPhys As LongLong
	ullAvailPhys As LongLong
	ullTotalPageFile As LongLong
	ullAvailPageFile As LongLong
	ullTotalVirtual As LongLong
	ullAvailVirtual As LongLong
	ullAvailExtendedVirtual As LongLong
End Type

Public Type MEMORYSTATUS
	dwLength As Long
	dwMemoryLoad As Long
	dwTotalPhys As LongPtr
	dwAvailPhys As LongPtr
	dwTotalPageFile As LongPtr
	dwAvailPageFile As LongPtr
	dwTotalVirtual As LongPtr
	dwAvailVirtual As LongPtr
End Type

Public Type CRITICAL_SECTION
    DebugInfo      As LongPtr
    LockCount       As Long
    RecursionCount  As Long
    OwningThread    As LongPtr
    LockSemaphore   As LongPtr
    SpinCount       As LongPtr
End Type

Public Enum ThreadAccessRights
    THREAD_TERMINATE = &H1
    THREAD_SUSPEND_RESUME = &H2
    THREAD_GET_CONTEXT = &H8
    THREAD_SET_CONTEXT = &H10
    THREAD_SET_INFORMATION = &H20
    THREAD_QUERY_INFORMATION = &H40
    THREAD_SET_THREAD_TOKEN = &H80
    THREAD_IMPERSONATE = &H100
    THREAD_DIRECT_IMPERSONATION = &H200
    THREAD_SET_LIMITED_INFORMATION = &H400
    THREAD_QUERY_LIMITED_INFORMATION = &H800
    THREAD_RESUME = &H1000
    THREAD_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or SYNCHRONIZE Or &HFFFF&)
End Enum

Public Enum FormatMessageFlags
    FORMAT_MESSAGE_ALLOCATE_BUFFER = &H100
    FORMAT_MESSAGE_ARGUMENT_ARRAY = &H2000
    FORMAT_MESSAGE_FROM_HMODULE = &H800
    FORMAT_MESSAGE_FROM_STRING = &H400
    FORMAT_MESSAGE_FROM_SYSTEM = &H1000
    FORMAT_MESSAGE_IGNORE_INSERTS = &H200
    FORMAT_MESSAGE_MAX_WIDTH_MASK = &HFF
    FORMAT_MESSAGE_TEXT_LEN = 160 ' from ERRORS.H C++ include file.	
End Enum

Public Enum MemProtectFlags
    PAGE_NOACCESS = &H1
    PAGE_READONLY = &H2
    PAGE_READWRITE = &H4
    PAGE_WRITECOPY = &H8
    PAGE_EXECUTE = &H10
    PAGE_EXECUTE_READ = &H20
    PAGE_EXECUTE_READWRITE = &H40
    PAGE_EXECUTE_WRITECOPY = &H80
    PAGE_GUARD = &H100
    PAGE_NOCACHE = &H200
    PAGE_WRITECOMBINE = &H400
    PAGE_TARGETS_INVALID = &H40000000
    PAGE_TARGETS_NO_UPDATE = &H40000000
End Enum
Public Enum MemProtectGraphics
    PAGE_GRAPHICS_NOACCESS = &H0800
    PAGE_GRAPHICS_READONLY = &H1000
    PAGE_GRAPHICS_READWRITE = &H2000
    PAGE_GRAPHICS_EXECUTE = &H4000
    PAGE_GRAPHICS_EXECUTE_READ = &H8000&
    PAGE_GRAPHICS_EXECUTE_READWRITE = &H10000
    PAGE_GRAPHICS_COHERENT = &H20000
    PAGE_GRAPHICS_NOCACHE = &H40000
End Enum
Public Enum MemProtectEnclave
    PAGE_ENCLAVE_THREAD_CONTROL = &H80000000
    PAGE_REVERT_TO_FILE_MAP = &H80000000
    PAGE_ENCLAVE_UNVALIDATED = &H20000000
    PAGE_ENCLAVE_MASK = &H10000000
    PAGE_ENCLAVE_DECOMMIT = (PAGE_ENCLAVE_MASK Or 0)
    PAGE_ENCLAVE_SS_FIRST = (PAGE_ENCLAVE_MASK Or 1)
    PAGE_ENCLAVE_SS_REST = (PAGE_ENCLAVE_MASK Or 2)
End Enum

Public Enum MemAllocType
	MEM_COMMIT = &H1000
    MEM_RESERVE = &H2000
    MEM_REPLACE_PLACEHOLDER = &H4000
    MEM_RESERVE_PLACEHOLDER = &H40000
    MEM_RESET = &H80000
    MEM_TOP_DOWN = &H100000
    MEM_WRITE_WATCH = &H200000
    MEM_PHYSICAL = &H400000
    MEM_ROTATE = &H800000
    MEM_DIFFERENT_IMAGE_BASE_OK = &H800000
    MEM_RESET_UNDO = &H1000000
    MEM_LARGE_PAGES = &H20000000
    MEM_4MB_PAGES = &H80000000
    MEM_64K_PAGES = (MEM_LARGE_PAGES Or MEM_PHYSICAL)
    MEM_UNMAP_WITH_TRANSIENT_BOOST = &H00000001
    MEM_COALESCE_PLACEHOLDERS = &H00000001
    MEM_PRESERVE_PLACEHOLDER = &H00000002
    MEM_DECOMMIT = &H00004000
    MEM_RELEASE = &H00008000&
    MEM_FREE = &H00010000
	MEM_PRIVATE = &H00020000
	MEM_MAPPED = &H00040000
	MEM_IMAGE = &H01000000
End Enum




Public Const STACK_SIZE_PARAM_IS_A_RESERVATION   = &H00010000

Public Const THREAD_DYNAMIC_CODE_ALLOW  = 1  ' Opt-out of dynamic code generation.
Public Const THREAD_BASE_PRIORITY_LOWRT  = 15  ' value that gets a thread to LowRealtime-1
Public Const THREAD_BASE_PRIORITY_MAX  = 2  ' maximum thread base priority boost
Public Const THREAD_BASE_PRIORITY_MIN  = (-2)  ' minimum thread base priority boost
Public Const THREAD_BASE_PRIORITY_IDLE  = (-15)  ' value that gets a thread to idle

Public Enum ThreadPriorityClasses
	THREAD_PRIORITY_LOWEST = THREAD_BASE_PRIORITY_MIN
	THREAD_PRIORITY_BELOW_NORMAL = (THREAD_PRIORITY_LOWEST + 1)
	THREAD_PRIORITY_NORMAL = 0
	THREAD_PRIORITY_HIGHEST = THREAD_BASE_PRIORITY_MAX
	THREAD_PRIORITY_ABOVE_NORMAL = (THREAD_PRIORITY_HIGHEST - 1)
	THREAD_PRIORITY_ERROR_RETURN = (MAXLONG)
	THREAD_PRIORITY_TIME_CRITICAL = THREAD_BASE_PRIORITY_LOWRT
	THREAD_PRIORITY_IDLE = THREAD_BASE_PRIORITY_IDLE
	THREAD_MODE_BACKGROUND_BEGIN = &H00010000
	THREAD_MODE_BACKGROUND_END = &H00020000
End Enum

Public Const INFINITE As Long = -1


Public Enum ProcessHeapEntryFlags
    PROCESS_HEAP_REGION = &H0001
    PROCESS_HEAP_UNCOMMITTED_RANGE = &H0002
    PROCESS_HEAP_ENTRY_BUSY = &H0004
    PROCESS_HEAP_SEG_ALLOC = &H0008
    PROCESS_HEAP_ENTRY_MOVEABLE = &H0010
    PROCESS_HEAP_ENTRY_DDESHARE = &H0020
End Enum
Public Type PROCESS_HEAP_ENTRY
	lpData As LongPtr
    cbData As Long
    cbOverhead As Byte
    iRegionIndex As Byte
    /* [TypeHint(ProcessHeapEntryFlags)] */ wFlags As Integer
    'UNION: Copy the bytes in BlockOrRegion to PROCESS_HEAP_ENTRY_BLOCK or PROCESS_HEAP_ENTRY_REGION
    #If Win64 Then
    BlockOrRegion(23) As Byte
    #Else
    BlockOrRegion(15) As Byte
    #End If
End Type
Public Type PROCESS_HEAP_ENTRY_BLOCK
	hMem As LongPtr
    dwReserved(2) As Long
End Type
Public Type PROCESS_HEAP_ENTRY_REGION
	dwCommittedSize As Long
    dwUnCommittedSize As Long
    lpFirstBlock As LongPtr
    lpLastBlock As LongPtr
End Type

Public Enum HEAP_INFORMATION_CLASS
    HeapCompatibilityInformation = 0
    HeapEnableTerminationOnCorruption = 1
    HeapOptimizeResources = 3
    HeapTag = 7
End Enum

 
Public Enum FINDEX_SEARCH_OPS
    FindExSearchNameMatch
    FindExSearchLimitToDirectories
    FindExSearchLimitToDevices
End Enum
 
Public Enum FINDEX_INFO_LEVELS
    FindExInfoStandard
    FindExInfoBasic
    FindExInfoMaxInfoLevel
End Enum

Public Type BY_HANDLE_FILE_INFORMATION
    dwFileAttributes As Long
    ftCreationTime As FILETIME
    ftLastAccessTime As FILETIME
    ftLastWriteTime As FILETIME
    dwVolumeSerialNumber As Long
    nFileSizeHigh As Long
    nFileSizeLow As Long
    nNumberOfLinks As Long
    nFileIndexHigh As Long
    nFileIndexLow As Long
End Type

Public Enum FILE_INFO_BY_HANDLE_CLASS
  FileBasicInfo
  FileStandardInfo
  FileNameInfo
  FileRenameInfo
  FileDispositionInfo
  FileAllocationInfo
  FileEndOfFileInfo
  FileStreamInfo
  FileCompressionInfo
  FileAttributeTagInfo
  FileIdBothDirectoryInfo
  FileIdBothDirectoryRestartInfo
  FileIoPriorityHintInfo
  FileRemoteProtocolInfo
  FileFullDirectoryInfo
  FileFullDirectoryRestartInfo
  FileStorageInfo
  FileAlignmentInfo
  FileIdInfo
  FileIdExtdDirectoryInfo
  FileIdExtdDirectoryRestartInfo
  FileDispositionInfoEx
  FileRenameInfoEx
  FileCaseSensitiveInfo
  FileNormalizedNameInfo
  MaximumFileInfoByHandleClass
End Enum

Public Enum STREAM_INFO_LEVELS
    FindStreamInfoStandard = 0
    FindStreamInfoMaxInfoLevel = 1
End Enum

Public Type WIN32_FIND_STREAM_DATA
    StreamSize As LARGE_INTEGER
    cStreamName(MAX_PATH + 35) As Integer
End Type
Public Type WIN32_FIND_STREAM_DATAW
    StreamSize As LARGE_INTEGER
    cStreamName(MAX_PATH + 35) As Integer
End Type
Public Type WIN32_FIND_STREAM_DATAA
    StreamSize As LARGE_INTEGER
    cStreamName(MAX_PATH + 35) As Byte
End Type

Public Enum GET_FILEEX_INFO_LEVELS
    GetFileExInfoStandard = 0
    GetFileExMaxInfoLevel = 1
End Enum

Public Enum FINDEX_EXTRA_FLAGS
    FIND_FIRST_EX_CASE_SENSITIVE = 1
    FIND_FIRST_EX_LARGE_FETCH = 2
    FIND_FIRST_EX_ON_DISK_ENTRIES_ONLY = 4
End Enum

Public Type FILE_BASIC_INFO
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
End Type
Public Type FILE_STANDARD_INFO
    AllocationSize As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    NumberOfLinks As Long
    DeletePending As Byte
    Directory As Byte
End Type
Public Type FILE_NAME_INFO
    FileNameLength As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Enum NtFileRenameInfoFlags
    FILE_RENAME_FLAG_REPLACE_IF_EXISTS = &H00000001
    FILE_RENAME_FLAG_POSIX_SEMANTICS = &H00000002
' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN10_RS3)
    FILE_RENAME_FLAG_SUPPRESS_PIN_STATE_INHERITANCE = &H00000004
End Enum
[PackingAlignment(1)]
Public Type FILE_RENAME_INFO
' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN10_RS1)
' union {
    ' BOOLEAN ReplaceIfExists;  // FileRenameInfo
    ' DWORD Flags;              // FileRenameInfoEx
' } DUMMYUNIONNAME;
' #else
   ' BOOLEAN ReplaceIfExists;
' #endif
   Flags As NtFileRenameInfoFlags
'    ReplaceIfExists As Byte
    #If Win64 Then
        pad(3) As Byte
    #End If
   RootDirectory As LongPtr
   FileNameLength As Long
   FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_DISPOSITION_INFO
    DeleteFile As Byte
End Type
Public Type FILE_ALLOCATION_INFO
    AllocationSize As LARGE_INTEGER
End Type
Public Type FILE_END_OF_FILE_INFO
    EndOfFile As LARGE_INTEGER
End Type
Public Type FILE_ALIGNMENT_INFO
    AlignmentRequirement As Long
End Type
Public Type FILE_COMPRESSION_INFO
    CompressedFileSize As LARGE_INTEGER
    CompressionFormat As Integer
    CompressionUnitShift As Byte
    ChunkShift As Byte
    ClusterShift As Byte
    Reserved(0 To 2) As Byte
End Type
Public Type FILE_ATTRIBUTE_TAG_INFO
    FileAttributes As FILE_ATTRIBUTES
    ReparseTag As Long
End Type
Public Type FILE_ID_BOTH_DIR_INFO
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As Long
    FileNameLength As Long
    EaSize As Long
    ShortNameLength As Byte
    ShortName(0 To 11) As Integer
    FileId As LARGE_INTEGER
    FileName(MAX_PATH - 1) As Integer
End Type
Public Enum PRIORITY_HINT
    IoPriorityHintVeryLow = 0
    IoPriorityHintLow
    IoPriorityHintNormal
    MaximumIoPriorityHintType
End Enum
Public Type FILE_IO_PRIORITY_HINT_INFO
    PriorityHint As PRIORITY_HINT
End Type
Public Enum WNNC_CODES
    WNNC_NET_MSNET = &H00010000
    WNNC_NET_SMB = &H00020000
    WNNC_NET_NETWARE = &H00030000
    WNNC_NET_VINES = &H00040000
    WNNC_NET_10NET = &H00050000
    WNNC_NET_LOCUS = &H00060000
    WNNC_NET_SUN_PC_NFS = &H00070000
    WNNC_NET_LANSTEP = &H00080000
    WNNC_NET_9TILES = &H00090000
    WNNC_NET_LANTASTIC = &H000A0000
    WNNC_NET_AS400 = &H000B0000
    WNNC_NET_FTP_NFS = &H000C0000
    WNNC_NET_PATHWORKS = &H000D0000
    WNNC_NET_LIFENET = &H000E0000
    WNNC_NET_POWERLAN = &H000F0000
    WNNC_NET_BWNFS = &H00100000
    WNNC_NET_COGENT = &H00110000
    WNNC_NET_FARALLON = &H00120000
    WNNC_NET_APPLETALK = &H00130000
    WNNC_NET_INTERGRAPH = &H00140000
    WNNC_NET_SYMFONET = &H00150000
    WNNC_NET_CLEARCASE = &H00160000
    WNNC_NET_FRONTIER = &H00170000
    WNNC_NET_BMC = &H00180000
    WNNC_NET_DCE = &H00190000
    WNNC_NET_AVID = &H001A0000
    WNNC_NET_DOCUSPACE = &H001B0000
    WNNC_NET_MANGOSOFT = &H001C0000
    WNNC_NET_SERNET = &H001D0000
    WNNC_NET_RIVERFRONT1 = &H001E0000
    WNNC_NET_RIVERFRONT2 = &H001F0000
    WNNC_NET_DECORB = &H00200000
    WNNC_NET_PROTSTOR = &H00210000
    WNNC_NET_FJ_REDIR = &H00220000
    WNNC_NET_DISTINCT = &H00230000
    WNNC_NET_TWINS = &H00240000
    WNNC_NET_RDR2SAMPLE = &H00250000
    WNNC_NET_CSC = &H00260000
    WNNC_NET_3IN1 = &H00270000
    WNNC_NET_EXTENDNET = &H00290000
    WNNC_NET_STAC = &H002A0000
    WNNC_NET_FOXBAT = &H002B0000
    WNNC_NET_YAHOO = &H002C0000
    WNNC_NET_EXIFS = &H002D0000
    WNNC_NET_DAV = &H002E0000
    WNNC_NET_KNOWARE = &H002F0000
    WNNC_NET_OBJECT_DIRE = &H00300000
    WNNC_NET_MASFAX = &H00310000
    WNNC_NET_HOB_NFS = &H00320000
    WNNC_NET_SHIVA = &H00330000
    WNNC_NET_IBMAL = &H00340000
    WNNC_NET_LOCK = &H00350000
    WNNC_NET_TERMSRV = &H00360000
    WNNC_NET_SRT = &H00370000
    WNNC_NET_QUINCY = &H00380000
    WNNC_NET_OPENAFS = &H00390000
    WNNC_NET_AVID1 = &H003A0000
    WNNC_NET_DFS = &H003B0000
    WNNC_NET_KWNP = &H003C0000
    WNNC_NET_ZENWORKS = &H003D0000
    WNNC_NET_DRIVEONWEB = &H003E0000
    WNNC_NET_VMWARE = &H003F0000
    WNNC_NET_RSFX = &H00400000
    WNNC_NET_MFILES = &H00410000
    WNNC_NET_MS_NFS = &H00420000
    WNNC_NET_GOOGLE = &H00430000
    WNNC_NET_NDFS = &H00440000
    WNNC_NET_DOCUSHARE = &H00450000
    WNNC_NET_AURISTOR_FS = &H00460000
    WNNC_NET_SECUREAGENT = &H00470000
    WNNC_NET_9P = &H00480000
    WNNC_CRED_MANAGER = &HFFFF0000
'  Network type aliases
    WNNC_NET_LANMAN = WNNC_NET_SMB
End Enum
Public Enum REMOTE_PROTOCOL_FLAGS
    REMOTE_PROTOCOL_FLAG_LOOPBACK = &H00000001
    REMOTE_PROTOCOL_FLAG_OFFLINE = &H00000002
'  Protocol generic flags valid for version 2 and higher
' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN8)
    REMOTE_PROTOCOL_FLAG_PERSISTENT_HANDLE = &H00000004
    REMOTE_PROTOCOL_FLAG_PRIVACY = &H00000008
    REMOTE_PROTOCOL_FLAG_INTEGRITY = &H00000010
    REMOTE_PROTOCOL_FLAG_MUTUAL_AUTH = &H00000020
End Enum
Public Enum FileRemoteProtocolGenericFlags
    REMOTE_PROTOCOL_INFO_FLAG_LOOPBACK = &H00000001
    REMOTE_PROTOCOL_INFO_FLAG_OFFLINE = &H00000002
' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN8)
    REMOTE_PROTOCOL_INFO_FLAG_PERSISTENT_HANDLE = &H00000004
End Enum
Public Enum FileRemoteProtocoSMB2Cap
    RPI_FLAG_SMB2_SHARECAP_TIMEWARP = &H00000002
    RPI_FLAG_SMB2_SHARECAP_DFS = &H00000008
    RPI_FLAG_SMB2_SHARECAP_CONTINUOUS_AVAILABILITY = &H00000010
    RPI_FLAG_SMB2_SHARECAP_SCALEOUT = &H00000020
    RPI_FLAG_SMB2_SHARECAP_CLUSTER = &H00000040
End Enum
Public Enum FileRemoteProtocoSMB2Share
    RPI_SMB2_SHAREFLAG_ENCRYPT_DATA = &H00000001
    RPI_SMB2_SHAREFLAG_COMPRESS_DATA = &H00000002
End Enum
Public Enum FileRemoteProtocoSMB2ServerCap
    RPI_SMB2_FLAG_SERVERCAP_DFS = &H00000001
    RPI_SMB2_FLAG_SERVERCAP_LEASING = &H00000002
    RPI_SMB2_FLAG_SERVERCAP_LARGEMTU = &H00000004
    RPI_SMB2_FLAG_SERVERCAP_MULTICHANNEL = &H00000008
    RPI_SMB2_FLAG_SERVERCAP_PERSISTENT_HANDLES = &H00000010
    RPI_SMB2_FLAG_SERVERCAP_DIRECTORY_LEASING = &H00000020
End Enum

Public Type FILE_REMOTE_PROTOCOL_INFO
    StructureVersion As Integer
    StructureSize As Integer
    Protocol As WNNC_CODES
    ProtocolMajorVersion As Integer
    ProtocolMinorVersion As Integer
    ProtocolRevision As Integer
    Reserved As Integer
    Flags As REMOTE_PROTOCOL_FLAGS
    GenericReserved(7) As Long
    ProtocolSpecific(15) As Long
End Type
Public Type FILE_FULL_DIR_INFO
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As Long
    FileNameLength As Long
    EaSize As Long
    FileName(0 To MAX_PATH) As Integer
End Type
Public Enum STORAGE_INFO_FLAGS
    STORAGE_INFO_FLAGS_ALIGNED_DEVICE = &H00000001
    STORAGE_INFO_FLAGS_PARTITION_ALIGNED_ON_DEVICE = &H00000002
'   If this value is set for the Sector and Parition alignment
'   fields then it means the alignment is not known and the
'   alignment flags have no meaning
    STORAGE_INFO_OFFSET_UNKNOWN = (&Hffffffff)
End Enum
Public Type FILE_STORAGE_INFO
    LogicalBytesPerSector As Long
    PhysicalBytesPerSectorForAtomicity As Long
    PhysicalBytesPerSectorForPerformance As Long
    FileSystemEffectivePhysicalBytesPerSectorForAtomicity As Long
    Flags As STORAGE_INFO_FLAGS
    ByteOffsetForSectorAlignment As Long
    ByteOffsetForPartitionAlignment As Long
End Type
Public Type FILE_ID_128
    Identifier(0 To 15) As Byte
End Type
Public Type FILE_ID_INFO
    VolumeSerialNumber As LongLong
    FileId As FILE_ID_128
End Type
Public Type FILE_ID_EXTD_DIR_INFO
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Long
    EaSize As Long
    ReparsePointTag As Long
    FileId As FILE_ID_128
    FileName(0 To MAX_PATH) As Integer
End Type
  
  
  
Public Enum GMEM
	GMEM_FIXED = &H0000
	GMEM_MOVEABLE = &H0002
	GMEM_NOCOMPACT = &H0010
	GMEM_NODISCARD = &H0020
	GMEM_ZEROINIT = &H0040
	GMEM_MODIFY = &H0080
	GMEM_DISCARDABLE = &H0100
	GMEM_NOT_BANKED = &H1000
	GMEM_SHARE = &H2000
	GMEM_DDESHARE = &H2000
	GMEM_NOTIFY = &H4000
	GMEM_LOWER = &H1000
	GMEM_VALID_FLAGS = &H7F72
	GMEM_INVALID_HANDLE = &H8000&
	GHND = GMEM_MOVEABLE Or GMEM_ZEROINIT
	GPTR = GMEM_FIXED Or GMEM_ZEROINIT
	GMEM_DISCARDED = &H4000
	GMEM_LOCKCOUNT = &H00FF
End Enum

Public Enum LMEM
    LMEM_FIXED = &H0000
    LMEM_MOVEABLE = &H0002
    LMEM_NOCOMPACT = &H0010
    LMEM_NODISCARD = &H0020
    LMEM_ZEROINIT = &H0040
    LMEM_MODIFY = &H0080
    LMEM_DISCARDABLE = &H0F00
    LMEM_VALID_FLAGS = &H0F72
    LMEM_INVALID_HANDLE = &H8000&
    LHND = (LMEM_MOVEABLE Or LMEM_ZEROINIT)
    LPTR = (LMEM_FIXED Or LMEM_ZEROINIT)
    NONZEROLHND = LMEM_MOVEABLE
    NONZEROLPTR = LMEM_FIXED
    LMEM_DISCARDED = &H4000
    LMEM_LOCKCOUNT = &H00FF
End Enum


Public Enum PriorityClass
    NORMAL_PRIORITY_CLASS = &H20
    IDLE_PRIORITY_CLASS = &H40
    HIGH_PRIORITY_CLASS = &H80
    REALTIME_PRIORITY_CLASS = &H100
    BELOW_NORMAL_PRIORITY_CLASS = &H4000
    ABOVE_NORMAL_PRIORITY_CLASS = &H8000&
End Enum

Public Const MAX_MODULE_NAME32 = 255

Public Enum TH32CS_Flags
    TH32CS_SNAPHEAPLIST = &H1
    TH32CS_SNAPPROCESS = &H2
    TH32CS_SNAPTHREAD = &H4
    TH32CS_SNAPMODULE = &H8
    TH32CS_SNAPALL = (TH32CS_SNAPHEAPLIST Or TH32CS_SNAPPROCESS Or TH32CS_SNAPTHREAD Or TH32CS_SNAPMODULE)
    TH32CS_INHERIT = &H80000000
End Enum

Public Type THREADENTRY32
    dwSize As Long
    cntUsage As Long
    th32ThreadID As Long
    th32OwnerProcessID As Long
    tpBasePri As Long
    tpDeltaPri As Long
    dwFlags As Long
End Type

Public Type PROCESSENTRY32A
    dwSize As Long
    cntUsage As Long
    th32ProcessID As Long
    th32DefaultHeapID As LongPtr
    th32ModuleID As Long
    cntThreads As Long
    th32ParentProcessID As Long
    pcPriClassBase As PriorityClass
    dwFlags As Long
    szExeFile (0 To (MAX_PATH - 1)) As Byte
End Type
Public Type PROCESSENTRY32W
    dwSize As Long
    cntUsage As Long
    th32ProcessID As Long
    th32DefaultHeapID As LongPtr
    th32ModuleID As Long
    cntThreads As Long
    th32ParentProcessID As Long
    pcPriClassBase As PriorityClass
    dwFlags As Long
    szExeFile (0 To (MAX_PATH - 1)) As Integer
End Type
Public Type PROCESSENTRY32
    dwSize As Long
    cntUsage As Long
    th32ProcessID As Long
    th32DefaultHeapID As LongPtr
    th32ModuleID As Long
    cntThreads As Long
    th32ParentProcessID As Long
    pcPriClassBase As PriorityClass
    dwFlags As Long
    szExeFile (0 To (MAX_PATH - 1)) As Integer
End Type

Public Enum HL32_Flags
    HF32_DEFAULT = 1  ' process's default heap
    HF32_SHARED = 2  ' is shared heap
End Enum
Public Type HEAPLIST32
    dwSize As LongPtr
    th32ProcessID As Long ' owning process
    th32HeapID As LongPtr ' heap (in owning process's context!)
    dwFlags As HL32_Flags
End Type

Public Enum HL32_EntryFlags
    LF32_FIXED = &H00000001
    LF32_FREE = &H00000002
    LF32_MOVEABLE = &H00000004
End Enum
Public Type HEAPENTRY32
    dwSize As LongPtr
    hHandle As LongPtr ' Handle of this heap block
    dwAddress As LongPtr ' Linear address of start of block
    dwBlockSize As LongPtr ' Size of block in bytes
    dwFlags As HL32_EntryFlags
    dwLockCount As Long
    dwResvd As Long
    th32ProcessID As Long ' owning process
    th32HeapID As LongPtr ' heap block is in
End Type

Public Type MODULEENTRY32A
    dwSize As Long
    th32ModuleID As Long ' This module
    th32ProcessID As Long ' owning process
    GlblcntUsage As Long ' Global usage count on the module
    ProccntUsage As Long ' Module usage count in th32ProcessID's context
    modBaseAddr As LongPtr   ' Base address of module in th32ProcessID's context
    modBaseSize As Long ' Size in bytes of module starting at modBaseAddr
    hModule As LongPtr ' The hModule of this module in th32ProcessID's context
    szModule(0 To (MAX_MODULE_NAME32 + 1 - 1)) As Byte
    szExePath(0 To (MAX_PATH - 1)) As Byte
End Type
Public Type MODULEENTRY32W
    dwSize As Long
    th32ModuleID As Long ' This module
    th32ProcessID As Long ' owning process
    GlblcntUsage As Long ' Global usage count on the module
    ProccntUsage As Long ' Module usage count in th32ProcessID's context
    modBaseAddr As LongPtr   ' Base address of module in th32ProcessID's context
    modBaseSize As Long ' Size in bytes of module starting at modBaseAddr
    hModule As LongPtr ' The hModule of this module in th32ProcessID's context
    szModule(0 To (MAX_MODULE_NAME32 + 1 - 1)) As Integer
    szExePath(0 To (MAX_PATH - 1)) As Integer
End Type
Public Type MODULEENTRY32
    dwSize As Long
    th32ModuleID As Long ' This module
    th32ProcessID As Long ' owning process
    GlblcntUsage As Long ' Global usage count on the module
    ProccntUsage As Long ' Module usage count in th32ProcessID's context
    modBaseAddr As LongPtr   ' Base address of module in th32ProcessID's context
    modBaseSize As Long ' Size in bytes of module starting at modBaseAddr
    hModule As LongPtr ' The hModule of this module in th32ProcessID's context
    szModule(0 To (MAX_MODULE_NAME32 + 1 - 1)) As Integer
    szExePath(0 To (MAX_PATH - 1)) As Integer
End Type



Public Type UNICODE_STRING
    Length As Integer
    MaximumLength As Integer
    Buffer As LongPtr
End Type
Public Type UNICODE_STRING64
    Length As Integer
    MaximumLength As Integer
    Buffer As LongLong
End Type
Public Type UNICODE_STRING32
    Length As Integer
    MaximumLength As Integer
    Buffer As Long
End Type
Public Const UNICODE_STRING_MAX_BYTES As Long = 65534
Public Const UNICODE_STRING_MAX_CHARS As Integer = 32767
Public Type ANSI_STRING
    Length As Integer
    MaximumLength As Integer
    Buffer As LongPtr
End Type

Public Enum PROCESSINFOCLASS
    ProcessBasicInformation ' q: PROCESS_BASIC_INFORMATION, PROCESS_EXTENDED_BASIC_INFORMATION
    ProcessQuotaLimits ' qs: QUOTA_LIMITS, QUOTA_LIMITS_EX
    ProcessIoCounters ' q: IO_COUNTERS
    ProcessVmCounters ' q: VM_COUNTERS, VM_COUNTERS_EX, VM_COUNTERS_EX2
    ProcessTimes ' q: KERNEL_USER_TIMES
    ProcessBasePriority ' s: KPRIORITY
    ProcessRaisePriority ' s: ULONG
    ProcessDebugPort ' q: HANDLE
    ProcessExceptionPort ' s: PROCESS_EXCEPTION_PORT
    ProcessAccessToken ' s: PROCESS_ACCESS_TOKEN
    ProcessLdtInformation ' qs: PROCESS_LDT_INFORMATION // 10
    ProcessLdtSize ' s: PROCESS_LDT_SIZE
    ProcessDefaultHardErrorMode ' qs: ULONG
    ProcessIoPortHandlers ' (kernel-mode only) // PROCESS_IO_PORT_HANDLER_INFORMATION
    ProcessPooledUsageAndLimits ' q: POOLED_USAGE_AND_LIMITS
    ProcessWorkingSetWatch ' q: PROCESS_WS_WATCH_INFORMATION[]; s: void
    ProcessUserModeIOPL ' qs: ULONG (requires SeTcbPrivilege)
    ProcessEnableAlignmentFaultFixup ' s: BOOLEAN
    ProcessPriorityClass ' qs: PROCESS_PRIORITY_CLASS
    ProcessWx86Information ' qs: ULONG (requires SeTcbPrivilege) (VdmAllowed)
    ProcessHandleCount ' q: ULONG, PROCESS_HANDLE_INFORMATION // 20
    ProcessAffinityMask ' s: KAFFINITY
    ProcessPriorityBoost ' qs: ULONG
    ProcessDeviceMap ' qs: PROCESS_DEVICEMAP_INFORMATION, PROCESS_DEVICEMAP_INFORMATION_EX
    ProcessSessionInformation ' q: PROCESS_SESSION_INFORMATION
    ProcessForegroundInformation ' s: PROCESS_FOREGROUND_BACKGROUND
    ProcessWow64Information ' q: ULONG_PTR
    ProcessImageFileName ' q: UNICODE_STRING
    ProcessLUIDDeviceMapsEnabled ' q: ULONG
    ProcessBreakOnTermination ' qs: ULONG
    ProcessDebugObjectHandle ' q: HANDLE // 30
    ProcessDebugFlags ' qs: ULONG
    ProcessHandleTracing ' q: PROCESS_HANDLE_TRACING_QUERY; s: size 0 disables, otherwise enables
    ProcessIoPriority ' qs: IO_PRIORITY_HINT
    ProcessExecuteFlags ' qs: ULONG
    ProcessTlsInformation ' PROCESS_TLS_INFORMATION // ProcessResourceManagement 
    ProcessCookie ' q: ULONG
    ProcessImageInformation ' q: SECTION_IMAGE_INFORMATION
    ProcessCycleTime ' q: PROCESS_CYCLE_TIME_INFORMATION // since VISTA
    ProcessPagePriority ' q: PAGE_PRIORITY_INFORMATION
    ProcessInstrumentationCallback ' s: PVOID or PROCESS_INSTRUMENTATION_CALLBACK_INFORMATION // 40
    ProcessThreadStackAllocation ' s: PROCESS_STACK_ALLOCATION_INFORMATION, PROCESS_STACK_ALLOCATION_INFORMATION_EX
    ProcessWorkingSetWatchEx ' q: PROCESS_WS_WATCH_INFORMATION_EX[]
    ProcessImageFileNameWin32 ' q: UNICODE_STRING
    ProcessImageFileMapping ' q: HANDLE (input)
    ProcessAffinityUpdateMode ' qs: PROCESS_AFFINITY_UPDATE_MODE
    ProcessMemoryAllocationMode ' qs: PROCESS_MEMORY_ALLOCATION_MODE
    ProcessGroupInformation ' q: USHORT[]
    ProcessTokenVirtualizationEnabled ' s: ULONG
    ProcessConsoleHostProcess ' q: ULONG_PTR // ProcessOwnerInformation
    ProcessWindowInformation ' q: PROCESS_WINDOW_INFORMATION // 50
    ProcessHandleInformation ' q: PROCESS_HANDLE_SNAPSHOT_INFORMATION // since WIN8
    ProcessMitigationPolicy ' s: PROCESS_MITIGATION_POLICY_INFORMATION
    ProcessDynamicFunctionTableInformation
    ProcessHandleCheckingMode ' qs: ULONG; s: 0 disables, otherwise enables
    ProcessKeepAliveCount ' q: PROCESS_KEEPALIVE_COUNT_INFORMATION
    ProcessRevokeFileHandles ' s: PROCESS_REVOKE_FILE_HANDLES_INFORMATION
    ProcessWorkingSetControl ' s: PROCESS_WORKING_SET_CONTROL
    ProcessHandleTable ' q: ULONG[] // since WINBLUE
    ProcessCheckStackExtentsMode ' qs: ULONG // KPROCESS->CheckStackExtents (CFG)
    ProcessCommandLineInformation ' q: UNICODE_STRING // 60
    ProcessProtectionInformation ' q: PS_PROTECTION
    ProcessMemoryExhaustion ' PROCESS_MEMORY_EXHAUSTION_INFO // since THRESHOLD
    ProcessFaultInformation ' PROCESS_FAULT_INFORMATION
    ProcessTelemetryIdInformation ' q: PROCESS_TELEMETRY_ID_INFORMATION
    ProcessCommitReleaseInformation ' PROCESS_COMMIT_RELEASE_INFORMATION
    ProcessDefaultCpuSetsInformation
    ProcessAllowedCpuSetsInformation
    ProcessSubsystemProcess
    ProcessJobMemoryInformation ' q: PROCESS_JOB_MEMORY_INFO
    ProcessInPrivate ' s: void // ETW // since THRESHOLD2 // 70
    ProcessRaiseUMExceptionOnInvalidHandleClose ' qs: ULONG; s: 0 disables, otherwise enables
    ProcessIumChallengeResponse
    ProcessChildProcessInformation ' q: PROCESS_CHILD_PROCESS_INFORMATION
    ProcessHighGraphicsPriorityInformation ' qs: BOOLEAN (requires SeTcbPrivilege)
    ProcessSubsystemInformation ' q: SUBSYSTEM_INFORMATION_TYPE // since REDSTONE2
    ProcessEnergyValues ' q: PROCESS_ENERGY_VALUES, PROCESS_EXTENDED_ENERGY_VALUES
    ProcessPowerThrottlingState ' qs: POWER_THROTTLING_PROCESS_STATE
    ProcessActivityThrottlePolicy 'ProcessReserved3Information  // PROCESS_ACTIVITY_THROTTLE_POLICY -???? no def; should be ACTIVITY_THROTTLE_POLICY?
    ProcessWin32kSyscallFilterInformation ' q: WIN32K_SYSCALL_FILTER
    ProcessDisableSystemAllowedCpuSets ' 80
    ProcessWakeInformation ' PROCESS_WAKE_INFORMATION
    ProcessEnergyTrackingState ' PROCESS_ENERGY_TRACKING_STATE
    ProcessManageWritesToExecutableMemory ' MANAGE_WRITES_TO_EXECUTABLE_MEMORY // since REDSTONE3
    ProcessCaptureTrustletLiveDump
    ProcessTelemetryCoverage
    ProcessEnclaveInformation
    ProcessEnableReadWriteVmLogging ' PROCESS_READWRITEVM_LOGGING_INFORMATION
    ProcessUptimeInformation ' q: PROCESS_UPTIME_INFORMATION
    ProcessImageSection ' q: HANDLE
    ProcessDebugAuthInformation ' since REDSTONE4 // 90
    ProcessSystemResourceManagement ' PROCESS_SYSTEM_RESOURCE_MANAGEMENT
    ProcessSequenceNumber ' q: ULONGLONG
    ProcessLoaderDetour ' since REDSTONE5
    ProcessSecurityDomainInformation ' PROCESS_SECURITY_DOMAIN_INFORMATION
    ProcessCombineSecurityDomainsInformation ' PROCESS_COMBINE_SECURITY_DOMAINS_INFORMATION
    ProcessEnableLogging ' PROCESS_LOGGING_INFORMATION
    ProcessLeapSecondInformation ' PROCESS_LEAP_SECOND_INFORMATION
    ProcessFiberShadowStackAllocation ' PROCESS_FIBER_SHADOW_STACK_ALLOCATION_INFORMATION // since 19H1
    ProcessFreeFiberShadowStackAllocation ' PROCESS_FREE_FIBER_SHADOW_STACK_ALLOCATION_INFORMATION
    ProcessAltSystemCallInformation ' qs: BOOLEAN (kernel-mode only) // INT2E // since 20H1 // 100
    ProcessDynamicEHContinuationTargets ' PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION
    ProcessDynamicEnforcedCetCompatibleRanges ' PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGES_INFORMATION // since 20H2
    ProcessCreateStateChange ' since WIN11
    ProcessApplyStateChange
    ProcessEnableOptionalXStateFeatures
    ProcessAltPrefetchParam ' since 11H1
    ProcessAssignCpuPartitions
    ProcessPriorityClassEx
    ProcessMembershipInformation
    ProcessEffectiveIoPriority
    ProcessEffectivePagePriority
    MaxProcessInfoClass
End Enum


Public Type PROCESS_BASIC_INFORMATION
    ExitStatus As NTSTATUS
    PebBaseAddress As LongPtr 'PPEB
    AffinityMask As LongPtr
    BasePriority As KPRIORITY
    UniqueProcessId As LongPtr
    InheritedFromUniqueProcessId As LongPtr
End Type
Public Type PROCESS_BASIC_INFORMATION32
    ExitStatus As NTSTATUS
    PebBaseAddress As Long 'PPEB
    AffinityMask As Long
    BasePriority As KPRIORITY
    UniqueProcessId As Long
    InheritedFromUniqueProcessId As Long
End Type
Public Type PROCESS_BASIC_INFORMATION64
    ExitStatus                      As Long
    'Reserved0                       As Long
    PebBaseAddress                  As LongLong
    AffinityMask                    As LongLong
    BasePriority                    As Long
    'Reserved1                       As Long
    uUniqueProcessId                As LongLong
    uInheritedFromUniqueProcessId   As LongLong
End Type


Public Type VM_COUNTERS
    PeakVirtualSize As LongPtr
    VirtualSize As LongPtr
    PageFaultCount As Long
    PeakWorkingSetSize As LongPtr
    WorkingSetSize As LongPtr
    QuotaPeakPagedPoolUsage As LongPtr
    QuotaPagedPoolUsage As LongPtr
    QuotaPeakNonPagedPoolUsage As LongPtr
    QuotaNonPagedPoolUsage As LongPtr
    PagefileUsage As LongPtr
    PeakPagefileUsage As LongPtr
End Type
Public Type VM_COUNTERS_EX
    PeakVirtualSize As LongPtr
    VirtualSize As LongPtr
    PageFaultCount As Long
    PeakWorkingSetSize As LongPtr
    WorkingSetSize As LongPtr
    QuotaPeakPagedPoolUsage As LongPtr
    QuotaPagedPoolUsage As LongPtr
    QuotaPeakNonPagedPoolUsage As LongPtr
    QuotaNonPagedPoolUsage As LongPtr
    PagefileUsage As LongPtr
    PeakPagefileUsage As LongPtr
    PrivateUsage As LongPtr
End Type
Public Type VM_COUNTERS_EX2
    CountersEx As VM_COUNTERS_EX
    PrivateWorkingSetSize As LongPtr
    SharedCommitUsage As LongPtr
End Type

Public Type KERNEL_USER_TIMES
    CreateTime As LARGE_INTEGER
    ExitTime As LARGE_INTEGER
    KernelTime As LARGE_INTEGER
    UserTime As LARGE_INTEGER
End Type

[Description("**WARNING:** The actual KPRIORITY is a single byte type. Do not substitute this enum for it, this is to compare against the results or assign with CByte ONLY")]
Public Enum KPRIORITY
    LOW_PRIORITY = 0  ' Lowest thread priority level
    LOW_REALTIME_PRIORITY = 16  ' Lowest realtime priority level
    HIGH_PRIORITY = 31  ' Highest thread priority level
    MAXIMUM_PRIORITY = 32  ' Number of thread priority levels
End Enum

Public Enum ProcessExceptionPortFlags
    PROCESS_EXCEPTION_PORT_ALL_STATE_BITS = 3
    PROCESS_EXCEPTION_PORT_ALL_STATE_FLAGS = ((1 << PROCESS_EXCEPTION_PORT_ALL_STATE_BITS) - 1)
End Enum

Public Type PROCESS_EXCEPTION_PORT
    ' Handle to the exception port. No particular access required.
    ExceptionPortHandle As LongPtr
    ' Miscellaneous state flags to be cached along with the exception
    ' port in the kernel.
    StateFlags As ProcessExceptionPortFlags
End Type

Public Type PROCESS_ACCESS_TOKEN
    ' Handle to Primary token to assign to the process.
    ' TOKEN_ASSIGN_PRIMARY access to this token is needed.
    Token As LongPtr
    ' Handle to the initial thread of the process.
    ' A process's access token can only be changed if the process has
    ' no threads or a single thread that has not yet begun execution.
    ' N.B. This field is unused.
    Thread As LongPtr
End Type

Public Enum EMULATOR_PORT_ACCESS_TYPE
    EPAT_Uchar = 0
    EPAT_Ushort = 1
    EPAT_Ulong = 2
End Enum
Public Enum EmulatorAccessEntryMode
    EMULATOR_READ_ACCESS = &H01
    EMULATOR_WRITE_ACCESS = &H02
End Enum
Public Type EMULATOR_ACCESS_ENTRY
    BasePort As Long
    NumConsecutivePorts As Long
    AccessType As EMULATOR_PORT_ACCESS_TYPE
    AccessMode As Byte 'EmulatorAccessEntryMode?
    StringSupport As Byte
    Routine As LongPtr
End Type
Public Type PROCESS_IO_PORT_HANDLER_INFORMATION
    Install As Byte ' true if handlers to be installed
    NumEntries As Long
    Context As Long
    EmulatorAccessEntries As LongPtr 'PEMULATOR_ACCESS_ENTRY
End Type

Public Type POOLED_USAGE_AND_LIMITS
    PeakPagedPoolUsage As LongPtr
    PagedPoolUsage As LongPtr
    PagedPoolLimit As LongPtr
    PeakNonPagedPoolUsage As LongPtr
    NonPagedPoolUsage As LongPtr
    NonPagedPoolLimit As LongPtr
    PeakPagefileUsage As LongPtr
    PagefileUsage As LongPtr
    PagefileLimit As LongPtr
End Type

Public Type PROCESS_WS_WATCH_INFORMATION
    FaultingPc As LongPtr
    FaultingVa As LongPtr
End Type

Public Enum ProcessPriorityClassValues
    PROCESS_PRIORITY_CLASS_UNKNOWN = 0
    PROCESS_PRIORITY_CLASS_IDLE = 1
    PROCESS_PRIORITY_CLASS_NORMAL = 2
    PROCESS_PRIORITY_CLASS_HIGH = 3
    PROCESS_PRIORITY_CLASS_REALTIME = 4
    PROCESS_PRIORITY_CLASS_BELOW_NORMAL = 5
    PROCESS_PRIORITY_CLASS_ABOVE_NORMAL = 6
End Enum
Public Type PROCESS_PRIORITY_CLASS
    Foreground As Byte
    /* [ TypeHint(ProcessPriorityClassValues) ] */ PriorityClass As Byte
End Type

Public Type PROCESS_HANDLE_INFORMATION
    HandleCount As Long
    HandleCountHighWatermark As Long
End Type

Public Type PROCESS_DEVICEMAP_INFORMATION
	SetOrQuery(35) As Byte
    ' union {
        ' struct {
            ' HANDLE DirectoryHandle;
        ' } Set;
        ' struct {
            ' ULONG DriveMap;
            ' UCHAR DriveType[ 32 ];
        ' } Query;
    ' } DUMMYUNIONNAME;
End Type
Public Enum ProcessDevmapExFlags
    PROCESS_LUID_DOSDEVICES_ONLY = &H1
End Enum


Public Type PROCESS_DEVICEMAP_INFORMATION_EX
    SetOrQuery(35) As Byte
    ' union {
        ' struct {
            ' HANDLE DirectoryHandle;
        ' } Set;
        ' struct {
            ' ULONG DriveMap;
            ' UCHAR DriveType[ 32 ];
        ' } Query;
    ' } DUMMYUNIONNAME;
    Flags As ProcessDevmapExFlags
End Type

Public Type PROCESS_SESSION_INFORMATION
    SessionId As Long
End Type

Public Type PROCESS_FOREGROUND_BACKGROUND
    Foreground As Byte
End Type

Public Enum ProcessHandleTraceTypes
    HANDLE_TRACE_DB_OPEN = 1
    HANDLE_TRACE_DB_CLOSE = 2
    HANDLE_TRACE_DB_BADREF = 3
End Enum
Public Const PROCESS_HANDLE_TRACING_MAX_STACKS = 16
Public Type PROCESS_HANDLE_TRACING_ENTRY
    Handle As LongPtr
    ClientId As CLIENT_ID
    Type As ProcessHandleTraceTypes
    Stacks(0 To (PROCESS_HANDLE_TRACING_MAX_STACKS - 1)) As LongPtr
End Type
[Description("WARNING: This structure cannot be used as-is. You must receive all info as a byte buffer, copy the first two members, redim, then copy the appropriate size to HandleTrace(0)")]
Public Type PROCESS_HANDLE_TRACING_QUERY
    Handle As LongPtr
    TotalTraces As Long
    HandleTrace() As PROCESS_HANDLE_TRACING_ENTRY
End Type

Public Enum ProcessHandleTracingFlags
    PROCESS_HANDLE_EXCEPTIONS_ENABLED = &H1
End Enum
Public Type PROCESS_HANDLE_TRACING_ENABLE
    Flags As ProcessHandleTracingFlags
End Type
Public Enum ProcessHandleTracingExFlags
    PROCESS_HANDLE_RAISE_UM_EXCEPTION_ON_INVALID_HANDLE_CLOSE_DISABLED = &H00000000
    PROCESS_HANDLE_RAISE_UM_EXCEPTION_ON_INVALID_HANDLE_CLOSE_ENABLED = &H00000001
End Enum
Public Type PROCESS_HANDLE_TRACING_ENABLE_EX
    Flags As ProcessHandleTracingExFlags
    TotalSlots As Long
End Type

Public Type THREAD_TLS_INFORMATION
    Flags As Long
    'union {
    '    PVOID* TlsVector;
    '    PVOID TlsModulePointer;
    '};
    VectorOrModulePointer As LongPtr
    ThreadId As LongPtr
End Type
Public Enum PROCESS_TLS_INFORMATION_TYPE
    ProcessTlsReplaceIndex = 0
    ProcessTlsReplaceVector = 1
    MaxProcessTlsOperation = 2
End Enum
[Description("WARNING: This structure cannot be used as-is. You must receive all info as a byte buffer, copy the first five members, redim, then copy the appropriate size to ThreadData(0)")]
Public Type PROCESS_TLS_INFORMATION
    Flags As Long
    OperationType As PROCESS_TLS_INFORMATION_TYPE
    ThreadDataCount As Long
    TlsIndex As Long
    PreviousCount As Long
    ThreadData() As THREAD_TLS_INFORMATION
End Type



Public Enum PBI_BITFIELD
    PBI_IsProtectedProcess = &B00000000_00000000_00000001
    PBI_IsWow64Process = &B00000000_00000000_00000010
    PBI_IsProcessDeleting = &B00000000_00000000_00000100
    PBI_IsCrossSessionCreate = &B10000
    PBI_IsFrozen = &B100000
    PBI_IsBackground = &B1000000
    PBI_IsStronglyNamed = &B10000000
    PBI_IsSecureProcess = &B100000000
    PBI_IsSubsystemProcess = &B1000000000
End Enum
Public Type PROCESS_EXTENDED_BASIC_INFORMATION
	Size As LongPtr
    BasicInfo As PROCESS_BASIC_INFORMATION
    Flags As PBI_BITFIELD
End Type

Public Type PROCESS_MEMBERSHIP_INFORMATION
    ServerSiloId As Long
End Type

Public Enum SectionImageBitfield
    SECIMG_ComPlusNativeReady = &B1
    SECIMG_ComPlusILOnly = &B10
    SECIMG_ImageDynamicallyRelocated = &B100
    SECIMG_ImageMappedFlat = &B1000
    SECIMG_BaseBelow4gb = &B10000
    SECIMG_ComPlusPrefer32bit = &B100000
End Enum
Public Type SECTION_IMAGE_INFORMATION
    TransferAddress As LongPtr '0x0
    ZeroBits As Long '0x8
    MaximumStackSize As LongPtr '0x10
    CommittedStackSize As LongPtr '0x18
    SubSystemType As ImageSubsystemType
    SubSystemVersion As Long
    [Description("GpValue on 6.2")]
    OperatingSystemVersion As Long
    ImageCharacteristics As Integer
    DllCharacteristics As Integer
    Machine As Integer
    ImageContainsCode As Byte
    ' union
    ' {
        ' UCHAR ImageFlags;                                                   //0x33
        ' struct
        ' {
            ' UCHAR ComPlusNativeReady : 1;                                     //0x33
            ' UCHAR ComPlusILOnly : 1;                                          //0x33
            ' UCHAR ImageDynamicallyRelocated : 1;                              //0x33
            ' UCHAR ImageMappedFlat : 1;                                        //0x33
            ' UCHAR BaseBelow4gb : 1;                                           //0x33
            ' UCHAR ComPlusPrefer32bit : 1;                                     //0x33
            ' UCHAR Reserved : 2;                                               //0x33
        ' };
    ' };
    [Description("Values in SectionImageBitfield")]
    /* [ TypeHint(SectionImageBitfield) ] */ ImageFlags As Byte
    LoaderFlags As Long
    ImageFileSize As Long
    Checksum As Long
End Type

Public Type PROCESS_CYCLE_TIME_INFORMATION
    AccumulatedCycles As LongLong
    CurrentCycleCount As LongLong
End Type

Public Type PAGE_PRIORITY_INFORMATION
    PagePriority As MEMORY_PRIORITY_VALUES
End Type

Public Type PROCESS_INSTRUMENTATION_CALLBACK_INFORMATION
    Version As Long
    Reserved As Long
    Callback As LongPtr
End Type

Public Type PROCESS_STACK_ALLOCATION_INFORMATION
    ReserveSize As LongPtr
    ZeroBits As LongPtr
    StackBase As LongPtr
End Type
Public Type PROCESS_STACK_ALLOCATION_INFORMATION_EX
    PreferredNode As Long
    Reserved0 As Long
    Reserved1 As Long
    Reserved2 As Long
    AllocInfo As PROCESS_STACK_ALLOCATION_INFORMATION
End Type

Public Type PROCESS_WS_WATCH_INFORMATION_EX
    BasicInfo As PROCESS_WS_WATCH_INFORMATION
    FaultingThreadId As LongPtr
    Flags As LongPtr
End Type

' typedef union _PROCESS_AFFINITY_UPDATE_MODE
' {
    ' ULONG Flags;
    ' struct
    ' {
        ' ULONG EnableAutoUpdate : 1;
        ' ULONG Permanent : 1;
        ' ULONG Reserved : 30;
    ' };
' } PROCESS_AFFINITY_UPDATE_MODE, 
Public Enum ProcessAffinityUpdateModes
	PAUM_EnableAutoUpdate = &H1
    PAUM_Permanent = &H2
End Enum
Public Type PROCESS_AFFINITY_UPDATE_MODE
	Flags As ProcessAffinityUpdateModes
End Type

' typedef union _PROCESS_MEMORY_ALLOCATION_MODE
' {
    ' ULONG Flags;
    ' struct
    ' {
        ' ULONG TopDown : 1;
        ' ULONG Reserved : 31;
    ' };
' } PROCESS_MEMORY_ALLOCATION_MODE
Public Enum ProcessMemAllocModes
    PMAM_TopDown = 1
End Enum
Public Type PROCESS_MEMORY_ALLOCATION_MODE
	Flags As ProcessMemAllocModes
End Type

Public Type PROCESS_WINDOW_INFORMATION
    WindowFlags As Long
    WindowTitleLength As Integer
    WindowTitle(1024) As Integer
End Type

Public Type PROCESS_HANDLE_TABLE_ENTRY_INFO
    HandleValue As LongPtr
    HandleCount As LongPtr
    PointerCount As LongPtr
    GrantedAccess As Long
    ObjectTypeIndex As Long
    HandleAttributes As Long
    Reserved As Long
End Type
[Description("WARNING: This structure cannot be used as-is. You must receive all info as a byte buffer, copy the first two members, redim, then copy the appropriate size to Handles(0)")]
Public Type PROCESS_HANDLE_SNAPSHOT_INFORMATION
    NumberOfHandles As LongPtr
    Reserved As LongPtr
    Handles() As PROCESS_HANDLE_TABLE_ENTRY_INFO
End Type

Public Type PROCESS_KEEPALIVE_COUNT_INFORMATION
    WakeCount As Long
    NoWakeCount As Long
End Type

Public Type PROCESS_REVOKE_FILE_HANDLES_INFORMATION
    TargetDevicePath As UNICODE_STRING
End Type

Public Enum PROCESS_WORKING_SET_OPERATION
    ProcessWorkingSetSwap
    ProcessWorkingSetEmpty
    ProcessWorkingSetOperationMax
End Enum

Public Type PROCESS_WORKING_SET_CONTROL
    Version As Long
    Operation As PROCESS_WORKING_SET_OPERATION
    Flags As Long
End Type

Public Type PROCESS_FAULT_INFORMATION
    FaultFlags As Long
    AdditionalInfo As Long
End Type

Public Type PROCESS_TELEMETRY_ID_INFORMATION
    HeaderSize As Long
    ProcessId As Long
    ProcessStartKey As LongLong
    CreateTime As LongLong
    CreateInterruptTime As LongLong
    CreateUnbiasedInterruptTime As LongLong
    ProcessSequenceNumber As LongLong
    SessionCreateTime As LongLong
    SessionId As Long
    BootId As Long
    ImageChecksum As Long
    ImageTimeDateStamp As Long
    UserSidOffset As Long
    ImagePathOffset As Long
    PackageNameOffset As Long
    RelativeAppNameOffset As Long
    CommandLineOffset As Long
End Type

Public Enum ProcessCommitReleaseFlags
    PCRF_Eligible = &H1
    PCRF_ReleaseRepurposedMemResetCommit = &H2
    PCRF_ForceReleaseMemResetCommit = &H4
End Enum
Public Type PROCESS_COMMIT_RELEASE_INFORMATION
    Version As Long
    '    struct
    '    {
    '        ULONG Eligible : 1;
    '        ULONG ReleaseRepurposedMemResetCommit : 1;
    '        ULONG ForceReleaseMemResetCommit : 1;
    '        ULONG Spare : 29;
    '    };
    Flags As ProcessCommitReleaseFlags
    CommitDebt As LongPtr
    CommittedMemResetSize As LongPtr
    RepurposedMemResetSize As LongPtr
End Type

Public Type PROCESS_JOB_MEMORY_INFO
    SharedCommitUsage As LongLong
    PrivateCommitUsage As LongLong
    PeakPrivateCommitUsage As LongLong
    PrivateCommitLimit As LongLong
    TotalCommitLimit As LongLong
End Type

Public Type PROCESS_CHILD_PROCESS_INFORMATION
    ProhibitChildProcesses As Byte
    AlwaysAllowSecureChildProcess As Byte ' REDSTONE3
    AuditProhibitChildProcesses As Byte
End Type

Public Enum SUBSYSTEM_INFORMATION_TYPE
    SubsystemInformationTypeWin32
    SubsystemInformationTypeWSL
    MaxSubsystemInformationType
End Enum

' union _ENERGY_STATE_DURATION
' {
    ' ULONGLONG Value;                                                        //0x0
    ' struct
    ' {
        ' ULONG LastChangeTime;                                               //0x0
    ' ULONG Duration:31;                                                      //0x4
    ' };
    ' ULONG IsInState:1;                                                      //0x4
' };
Public Type ENERGY_STATE_DURATION
    Value As LongLong
End Type

Public Enum ProcessEnergyValuesWindowFlags
	PEVWF_Foreground = &H1
    PEVWF_DesktopVisible = &H2
End Enum

[Description("Through Redstone 1 (Win10 1607). For WindowInformation, use ProcessEnergyValuesWindowFlags")]
Public Type PROCESS_ENERGY_VALUES_7
    Cycles(1, 3) As LongLong '0x0
    DiskEnergy As LongLong '0x40
    NetworkTailEnergy As LongLong '0x48
    MBBTailEnergy As LongLong '0x50
    NetworakTxRxBytes As LongLong '0x58
    MBBTxRxBytes As LongLong '0x60
    /* [ TypeHint(ProcessEnergyValuesWindowFlags) ] */ WindowInformation As Integer
    CompositorRendered As Integer '0x6a
    DirtyGenerated As Integer '0x6c
    DirtyPropagated As Integer '0x6e
    DesktopVisibilityReportTimestamp As LongLong '0x70
    DesktopVisibleTime As LongLong '0x78
    ForegroundReportTimestamp As LongLong '0x80
    ForegroundTime As LongLong '0x88
End Type

[Description("For Windows 10 Redstone 2 and newer (Last verified: Win11 22H2). For earlier, use PROCESS_ENERGY_VALUES_7")]
Public Type PROCESS_ENERGY_VALUES
    Cycles(1, 3) As LongLong '0x0
    DiskEnergy As LongLong '0x40
    NetworkTailEnergy As LongLong '0x48
    MBBTailEnergy As LongLong '0x50
    NetworakTxRxBytes As LongLong '0x58
    MBBTxRxBytes As LongLong '0x60
    ' union
    ' {
    '     union _ENERGY_STATE_DURATION Durations[3];                          //0x68
    '     struct
    '     {
    '         union _ENERGY_STATE_DURATION ForegroundDuration;                //0x68
    '         union _ENERGY_STATE_DURATION DesktopVisibleDuration;            //0x70
    '         union _ENERGY_STATE_DURATION PSMForegroundDuration;             //0x78
    '     };
    ' };
    ForegroundDuration As ENERGY_STATE_DURATION
    DesktopVisiableDuration As ENERGY_STATE_DURATION
    PMSForegroundDuration As ENERGY_STATE_DURATION
    CompositionRendered As Long
    CompositionDirtyGenerated As Long
    CompositionDirtyPropagated As Long
    Reserved1 As Long
    AttributedCycles(1, 3) As LongLong '0x78
    WorkOnBehalfCycles(1, 3) As LongLong '0x88
End Type

Public Type TIMELINE_BITMAP
    ' union _TIMELINE_BITMAP
    ' {
        ' ULONGLONG Value;                                                        //0x0
        ' struct
        ' {
            ' ULONG EndTime;                                                      //0x0
        ' };
        ' ULONG Bitmap;                                                           //0x4
    ' }; 
    Value As LongLong
End Type
[Description("Win10 Redstone 2 (1703/Creators Update) **ONLY**")]
Public Type PROCESS_ENERGY_VALUES_EXTENSION_1703
	CpuTimeline As TIMELINE_BITMAP
    DiskTimeline As TIMELINE_BITMAP
    NetworkTimeline As TIMELINE_BITMAP
    MBBTimeline As TIMELINE_BITMAP
    ForegroundTimeline As TIMELINE_BITMAP
    DesktopVisibleTimeline As TIMELINE_BITMAP
    CompositionRenderedTimeline As TIMELINE_BITMAP
    CompositionDirtyGeneratedTimeline As TIMELINE_BITMAP
    CompositionDirtyPropagatedTimeline As TIMELINE_BITMAP
End Type
[Description("Win10 Redstone 3+ (Last verified: Win11 22H2). For Redstone 2 use _1703 variant.")]
Public Type PROCESS_ENERGY_VALUES_EXTENSION
    CpuTimeline As TIMELINE_BITMAP
    DiskTimeline As TIMELINE_BITMAP
    NetworkTimeline As TIMELINE_BITMAP
    MBBTimeline As TIMELINE_BITMAP
    ForegroundTimeline As TIMELINE_BITMAP
    DesktopVisibleTimeline As TIMELINE_BITMAP
    CompositionRenderedTimeline As TIMELINE_BITMAP
    CompositionDirtyGeneratedTimeline As TIMELINE_BITMAP
    CompositionDirtyPropagatedTimeline As TIMELINE_BITMAP
    InputTimeline As TIMELINE_BITMAP
    AudioInTimeline As TIMELINE_BITMAP
    AudioOutTimeline As TIMELINE_BITMAP
    DisplayRequiredTimeline As TIMELINE_BITMAP
    KeyboardInputTimeline As TIMELINE_BITMAP
    InputDuration As ENERGY_STATE_DURATION
    AudioInDuration As ENERGY_STATE_DURATION
    AudioOutDuration As ENERGY_STATE_DURATION
    DisplayRequiredDuration As ENERGY_STATE_DURATION
    PSMBackgroundDuration As ENERGY_STATE_DURATION
    KeyboardInput As Long
    MouseInput As Long
End Type
[Description("Win10 Redstone 2 (1703/Creators Update) **ONLY**")]
Public Type PROCESS_EXTENDED_ENERGY_VALUES_1703
	Base As PROCESS_ENERGY_VALUES
    Extension As PROCESS_ENERGY_VALUES_EXTENSION_1703
End Type
[Description("Win10 Redstone 3+ (Last verified: Win11 22H2). For Redstone 2 use _1703 variant.")]
Public Type PROCESS_EXTENDED_ENERGY_VALUES
    Base As PROCESS_ENERGY_VALUES
    Extension As PROCESS_ENERGY_VALUES_EXTENSION
End Type

Public Enum ProcessPowerThrottlingVersions
    POWER_THROTTLING_PROCESS_CURRENT_VERSION = 1
End Enum
Public Enum ProcessPowerThrottlingFlags
    POWER_THROTTLING_PROCESS_EXECUTION_SPEED = &H1
    POWER_THROTTLING_PROCESS_DELAYTIMERS = &H2
    POWER_THROTTLING_PROCESS_VALID_FLAGS = ((POWER_THROTTLING_PROCESS_EXECUTION_SPEED Or POWER_THROTTLING_PROCESS_DELAYTIMERS))
End Enum
Public Type POWER_THROTTLING_PROCESS_STATE
    Version As ProcessPowerThrottlingVersions
    ControlMask As ProcessPowerThrottlingFlags
    StateMask As ProcessPowerThrottlingFlags
End Type

Public Enum ACTIVITY_THROTTLE_POLICY_OP
    ActivityThrottlePolicyDisable = 0
    ActivityThrottlePolicyEnable = 1
    ActivityThrottlePolicyDefault = 2
    MaxActivityThrottlePolicy = 2
End Enum
Public Enum ProcessPowerThrottlePolicyFlags
    ACTIVITY_THROTTLE_EXECUTIONSPEED = &H1
    ACTIVITY_THROTTLE_DELAYTIMERS = &H2
    ACTIVITY_THROTTLE_ALL = ((ACTIVITY_THROTTLE_EXECUTIONSPEED Or ACTIVITY_THROTTLE_DELAYTIMERS))
End Enum
Public Enum ProcessPowerThrottlePolicyVersions
    ACTIVITY_THROTTLE_POLICY_VERSION = 1
End Enum
Public Type ACTIVITY_THROTTLE_POLICY
    Version As ProcessPowerThrottlePolicyVersions
    Operation As ACTIVITY_THROTTLE_POLICY_OP
    PolicyFlags As ProcessPowerThrottlePolicyFlags
End Type

Public Type WIN32K_SYSCALL_FILTER
    FilterState As Long
    FilterSet As Long
End Type

Public Type JOBOBJECT_WAKE_FILTER
    HighEdgeFilter As Long
    LowEdgeFilter As Long
End Type
Public Type PROCESS_WAKE_INFORMATION
    NotificationChannel As LongLong
    WakeCounters(0 To 6) As Long
    WakeFilter As LongPtr '*struct _JOBOBJECT_WAKE_FILTER
End Type

Public Type PROCESS_ENERGY_TRACKING_STATE
    StateUpdateMask As Long
    StateDesiredValue As Long
    StateSequence As Long
    ' ULONG UpdateTag : 1;
    UpdateTag As Long
    Tag(0 To 63) As Integer
End Type

Public Type MANAGE_WRITES_TO_EXECUTABLE_MEMORY
	VerionAndFlags As Long
    ' ULONG Version : 8;
    ' ULONG ProcessEnableWriteExceptions : 1;
    ' ULONG ThreadAllowWrites : 1;
    ' ULONG Spare : 22;
    KernelWriteToExecutableSignal As LongPtr '19H1
End Type

Public Enum ProcessReadWriteLoggingInfoFlags
    PRWLIF_EnableReadVmLogging = &H1
    PRWLIF_EnableWriteVmLogging = &H2
End Enum
[Description("Flags in ProcessReadWriteLoggingInfoFlags")]
Public Type PROCESS_READWRITEVM_LOGGING_INFORMATION
	/* [ TypeHint(ProcessReadWriteLoggingInfoFlags) ] */ Flags As Byte
End Type

Public Type PROCESS_UPTIME_INFORMATION
    QueryInterruptTime As LongLong
    QueryUnbiasedTime As LongLong
    EndInterruptTime As LongLong
    TimeSinceCreation As LongLong
    Uptime As LongLong
    SuspendedTime As LongLong
    ' union
    ' {
        ' ULONG HangCount : 4;
        ' ULONG GhostCount : 4;
        ' ULONG Crashed : 1;
        ' ULONG Terminated : 1;       
    ' };
    HangCount As Byte
    GhostCount As Byte
    CrashedTerminated As Byte
End Type

Public Type PROCESS_SYSTEM_RESOURCE_MANAGEMENT
    ' typedef union _PROCESS_SYSTEM_RESOURCE_MANAGEMENT
    ' {
        ' ULONG Flags;
        ' struct
        ' {
            ' ULONG Foreground : 1;
            ' ULONG Reserved : 31;
        ' };
    ' } PROCESS_SYSTEM_RESOURCE_MANAGEMENT, *PPROCESS_SYSTEM_RESOURCE_MANAGEMENT;
	FlagForeground As Long
End Type

Public Type PROCESS_SECURITY_DOMAIN_INFORMATION
    SecurityDomain As LongLong
End Type

Public Type PROCESS_COMBINE_SECURITY_DOMAINS_INFORMATION
    ProcessHandle As LongPtr
End Type

Public Enum ProcessLoggingInfoFlags
	PLIF_EnableReadVmLogging = &H1
    PLIF_EnableWriteVmLogging = &H2
    PLIF_EnableProcessSuspendResumeLogging = &H4
    PLIF_EnableThreadSuspendResumeLogging = &H8
End Enum
Public Type PROCESS_LOGGING_INFORMATION
    Flags As ProcessLoggingInfoFlags
End Type

Public Type PROCESS_FIBER_SHADOW_STACK_ALLOCATION_INFORMATION
    ReserveSize As LongLong
    CommitSize As LongLong
    PreferredNode As Long
    Reserved As Long
    Ssp As LongPtr
End Type
Public Type PROCESS_FREE_FIBER_SHADOW_STACK_ALLOCATION_INFORMATION
    Ssp As LongPtr
End Type

Public Enum ProcessDynamicEHFlags
    DYNAMIC_EH_CONTINUATION_TARGET_ADD = &H01
    DYNAMIC_EH_CONTINUATION_TARGET_PROCESSED = &H02
End Enum
[Description("Flags: ProcessDynamicEHFlags")]
Public Type PROCESS_DYNAMIC_EH_CONTINUATION_TARGET
    TargetAddress As LongPtr
    [Description("Flags: ProcessDynamicEHFlags")]
    Flags As LongLong
End Type
Public Type PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION
    NumberOfTargets As Integer
    Reserved As Integer
    Reserved2 As Long
    Targets As LongPtr '*PROCESS_DYNAMIC_EH_CONTINUATION_TARGET
End Type

Public Type PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE
    BaseAddress As LongPtr
    Size As LongPtr
    Flags As Long
End Type
Public Type PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGES_INFORMATION
    NumberOfRanges As Integer
    Reserved As Integer
    Reserved2 As Long
    Ranges As LongPtr 'PPROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE
End Type

Public Type RTL_DRIVE_LETTER_CURDIR
    Flags As Integer
    Length As Integer
    TimeStamp As Long
    DosPath As UNICODE_STRING
End Type
Public Type CURDIR
	DosPath As UNICODE_STRING
    Handle As LongPtr
End Type
Public Type LIST_ENTRY
    Flink As LongPtr
    Blink As LongPtr
End Type
Public Type LIST_ENTRY32
    Flink As Long
    Blink As Long
End Type
Public Type LIST_ENTRY64
    Flink As LongLong
    Blink As LongLong
End Type
#If Win64 Then
Public Type SLIST_ENTRY
    Next As LongLong
    pad As LongLong
End Type
Public Type SLIST_HEADER
    HeaderX64 As LongLong
    Alignment As LongLong
End Type
#Else
Public Type SLIST_ENTRY
    Next As Long
End Type
Public Type SLIST_HEADER
	Next As SLIST_ENTRY
    Depth As Integer
    CpuId As Integer
End Type
#End If

Public Type SINGLE_LIST_ENTRY
    Next As LongPtr ' struct _SINGLE_LIST_ENTRY
End Type

[Description("NtGlobalFlag flags. Flags for all versions from 3.51+ are included; it's up to you to know which are applicable for the current PEB version.")]
Public Enum NTGLB_Flags
    FLG_STOP_ON_EXCEPTION = &H00000001
    FLG_SHOW_LDR_SNAPS = &H00000002
    FLG_DEBUG_INITIAL_COMMAND = &H00000004
    FLG_STOP_ON_HUNG_GUI = &H00000008
    FLG_HEAP_ENABLE_TAIL_CHECK = &H00000010
    FLG_HEAP_ENABLE_FREE_CHECK = &H00000020
    FLG_HEAP_VALIDATE_PARAMETERS = &H00000040
    FLG_HEAP_VALIDATE_ALL = &H00000080
    FLG_POOL_ENABLE_TAIL_CHECK = &H00000100 '3.51 to 5.0
    FLG_APPLICATION_VERIFIER = &H00000100 '5.1+
    FLG_MONITOR_SILENT_PROCESS_EXIT = &H00000200 '6.1+ only
    FLG_POOL_ENABLE_TAGGING = &H00000400
    FLG_HEAP_ENABLE_TAGGING = &H00000800
    FLG_USER_STACK_TRACE_DB = &H00001000
    FLG_KERNEL_STACK_TRACE_DB = &H00002000
    FLG_MAINTAIN_OBJECT_TYPELIST = &H00004000
    FLG_HEAP_ENABLE_TAG_BY_DLL = &H00008000&
    FLG_IGNORE_DEBUG_PRIV = &H00010000 '3.51 to 4.0
    FLG_DISABLE_STACK_EXTENSION = &H00010000 '5.1+(5.0 is undef)
    FLG_ENABLE_CSRDEBUG = &H00020000
    FLG_ENABLE_KDEBUG_SYMBOL_LOAD = &H00040000
    FLG_DISABLE_PAGE_KERNEL_STACKS = &H00080000
    FLG_HEAP_ENABLE_CALL_TRACING = &H00100000 '3.51 to 4.0
    FLG_ENABLE_SYSTEM_CRIT_BREAKS = &H00100000 '5.1+ (5.0 is undef)
    FLG_HEAP_DISABLE_COALESCING = &H00200000
    FLG_ENABLE_CLOSE_EXCEPTIONS = &H00400000 '4.0+
    FLG_ENABLE_EXCEPTION_LOGGING = &H00800000 '4.0+
    FLG_ENABLE_HANDLE_TYPE_TAGGING = &H01000000 '4.0+
    FLG_HEAP_PAGE_ALLOCS = &H02000000 '4.0+
    FLG_DEBUG_INITIAL_COMMAND_EX = &H04000000 '4.0+
    FLG_DISABLE_DBGPRINT = &H08000000 '5.0+
    FLG_CRITSEC_EVENT_CREATION = &H10000000 '5.0+
    FLG_LDR_TOP_DOWN = &H20000000 '5.1-6.2
    FLG_STOP_ON_UNHANDLED_EXCEPTION = &H20000000 '6.3+
    FLG_ENABLE_HANDLE_EXCEPTIONS = &H40000000 '5.1+
    FLG_DISABLE_PROTDLLS = &H80000000& '5.0+
End Enum



#Region "PEB/UPP"

Public Enum UPP_CONSOLE_FLAGS
    CONSOLE_IGNORE_CTRL_C = &H1 'Only defined flag in XP; later ones unknown
End Enum
[Description("RTL_USER_PROCESS_PARAMETERS for Windows XP and Server 2003 and above.")]
Public Type RTL_USER_PROCESS_PARAMETERS_XP
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long 'This is essentially a boolean that if non-zero triggers DbgBreakPoint() at certain points
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
End Type
[Description("RTL_USER_PROCESS_PARAMETERS for Windows Vista or higher")]
Public Type RTL_USER_PROCESS_PARAMETERS
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
End Type
[Description("RTL_USER_PROCESS_PARAMETERS for Windows 7+")]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN7
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
End Type
[Description("RTL_USER_PROCESS_PARAMETERS for Windows 8+")]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN8
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
End Type
[Description("RTL_USER_PROCESS_PARAMETERS for Windows 10+")]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN10
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
    LoaderThreads As Long
End Type
[Description("RTL_USER_PROCESS_PARAMETERS for Windows 10 Redstone 5 1809+")]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN10_R5
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
    LoaderThreads As Long
    RedirectionDllName As UNICODE_STRING
End Type
[Description("RTL_USER_PROCESS_PARAMETERS for Windows 10 19H1 1903+")]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN10_19H1
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
    LoaderThreads As Long
    RedirectionDllName As UNICODE_STRING
    HeapPartitionName As UNICODE_STRING
    DefaultThreadpoolCpuSetMasks As LongLong
    DefaultThreadpoolCpuSetMaskCount As Long
End Type
[Description("RTL_USER_PROCESS_PARAMETERS for Windows 10 20H1 2004+")]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN10_20H1
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
    LoaderThreads As Long
    RedirectionDllName As UNICODE_STRING
    HeapPartitionName As UNICODE_STRING
    DefaultThreadpoolCpuSetMasks As LongLong
    DefaultThreadpoolCpuSetMaskCount As Long
    DefaultThreadpoolThreadMaximum As Long
End Type
[Description("RTL_USER_PROCESS_PARAMETERS for Windows 11 21H2+")]
Public Type RTL_USER_PROCESS_PARAMETERS_WIN11_21H2
    MaximumLength As Long
    Length As Long
    Flags As RTL_UPP_FLAGS
    DebugFlags As Long
    ConsoleHandle As LongPtr
    ConsoleFlags As UPP_CONSOLE_FLAGS
    StandardInput As LongPtr
    StandardOutput As LongPtr
    StandardError As LongPtr
    CurrentDirectory As CURDIR
    DllPath As UNICODE_STRING
    ImagePathName As UNICODE_STRING
    CommandLine As UNICODE_STRING
    Environment As LongPtr
    StartingX As Long
    StartingY As Long
    CountX As Long
    CountY As Long
    CountCharsX As Long
    CountCharsY As Long
    FillAttribute As CONSOLE_CHAR_ATTRIB
    WindowFlags As STARTUP_FLAGS
    ShowWindowFlags As SHOWWINDOW
    WindowTitle As UNICODE_STRING
    DesktopInfo As UNICODE_STRING
    ShellInfo As UNICODE_STRING
    RuntimeData As UNICODE_STRING
    CurrentDirectores(31) As RTL_DRIVE_LETTER_CURDIR
    EnvironmentSize As LongPtr
    EnvironmentVersion As LongPtr
    PackageDependencyData As LongPtr
    ProcessGroupId As Long
    LoaderThreads As Long
    RedirectionDllName As UNICODE_STRING
    HeapPartitionName As UNICODE_STRING
    DefaultThreadpoolCpuSetMasks As LongLong
    DefaultThreadpoolCpuSetMaskCount As Long
    DefaultThreadpoolThreadMaximum As Long
    HeapMemoryTypeMask As Long
End Type

Public Enum APP_COMPAT_FLAGS
    KACF_OLDGETSHORTPATHNAME = &H00000001
    KACF_VERSIONLIE_NOT_USED = &H00000002
    KACF_GETDISKFREESPACE = &H00000008
    KACF_FTMFROMCURRENTAPT = &H00000020
    KACF_DISALLOWORBINDINGCHANGES = &H00000040
    KACF_OLE32VALIDATEPTRS = &H00000080
    KACF_DISABLECICERO = &H00000100
    KACF_OLE32ENABLEASYNCDOCFILE = &H00000200
    KACF_OLE32ENABLELEGACYEXCEPTIONHANDLING = &H00000400
    KACF_RPCDISABLENDRCLIENTHARDENING = &H00000800
    KACF_RPCDISABLENDRMAYBENULL_SIZEIS = &H00001000
    KACF_DISABLEALLDDEHACK_NOT_USED = &H00002000
    KACF_RPCDISABLENDR61_RANGE = &H00004000
    KACF_RPC32ENABLELEGACYEXCEPTIONHANDLING = &H00008000&
    KACF_OLE32DOCFILEUSELEGACYNTFSFLAGS = &H00010000
    KACF_RPCDISABLENDRCONSTIIDCHECK = &H00020000
    KACF_USERDISABLEFORWARDERPATCH = &H00040000
    KACF_OLE32DISABLENEW_WMPAINT_DISPATCH = &H00100000
    KACF_ADDRESTRICTEDSIDINCOINITIALIZESECURITY = &H00200000
    KACF_ALLOCDEBUGINFOFORCRITSECTIONS = &H00400000
    KACF_OLEAUT32ENABLEUNSAFELOADTYPELIBRELATIVE = &H00800000
    KACF_ALLOWMAXIMIZEDWINDOWGAMMA = &H01000000
    KACF_DONOTADDTOCACHE = &H80000000
End Enum

Public Enum PEB_BITFIELD_OLD
    PebImageUsedLargePages = &H01
    PebIsProtectedProcess = &H02 'V+
    PebIsLegacyProcess = &H04 'V-8
    PebIsImageDynamicallyRelocated = &H08 'V+
    PebSkipPatchingUser32Forwarders = &H10
    PebIsPackagedProcess = &H20
    PebIsAppContainer = &H40
    PebIsProtectedProcessLight = &H80
End Enum
Public Enum PEB_BITFIELD_NEW
    PebNImageUsedLargePages = &H01
    PebNIsProtectedProcess = &H02 'V+
    PebNIsImageDynamicallyRelocated = &H04 'V+
    PebNSkipPatchingUser32Forwarders = &H08
    PebNIsPackagedProcess = &H10
    PebNIsAppContainer = &H20
    PebNIsProtectedProcessLight = &H40
    PebNIsLongPathAwareProcess = &H80
End Enum

[Description("This is the base compatibility PEB, usuable from Windows XP through 11+. For additional members, see additional PEBs, e.g. PEB_VISTA.")]
Public Type PEB
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    /* [ TypeHint(PEB_BITFIELD_OLD) ] */ BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    SparePtr2 As LongPtr
    EnvironmentUpdateCount As Long
    KernelCallbackTable As LongPtr
    SystemReserved(0) As Long
    SpareUlong As Long
    FreeList As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    ReadOnlySharedMemoryHeap As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    #If (TWINBASIC = 0) And (Win64 = 0) Then
    pad(3) As Byte
    #End If
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ImageProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlagsHi As Long
    AppCompatFlags As APP_COMPAT_FLAGS 'ULARGE_INTEGER
    AppCompatFlagUser As LARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    #If (TWINBASIC = 0) And (Win64 = 0) Then
    pad2(3) As Byte
    #End If
End Type


Public Type PEB_XP
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    /* [ TypeHint(PEB_BITFIELD_OLD) ] */ BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    SparePtr2 As LongPtr
    EnvironmentUpdateCount As Long
    KernelCallbackTable As LongPtr
    SystemReserved(0) As Long
    SpareUlong As Long
    FreeList As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    ReadOnlySharedMemoryHeap As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ImageProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlagsHi As Long
    AppCompatFlags As APP_COMPAT_FLAGS 'ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    #If Win64 Then
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    #End If
End Type

[Description("PEB for Windows Vista and Server 2003")]
Public Type PEB_VISTA 'Also 2003
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    SpareUlong As Long
    FreeList As LongPtr 'Invalid in SP2
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    HotpatchInformation As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ImageProcessAffinityMask As LongPtr 'ActiveProcessAffinityMask in SP2
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
End Type
[Description("PEB for Windows 7 and Server 2008")]
Public Type PEB_WIN7
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    HotpatchInformation As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pContextData As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
End Type
[Description("PEB for Windows 8, 8.1, Server 2012, and Windows 10 Threshold 1")]
Public Type PEB_WIN8
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SparePvoid0 As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pUnused As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
End Type

[Description("PEB for Windows 10 Threshold 2 through Redstone 2")]
Public Type PEB_WIN10_T2
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SparePvoid0 As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pUnused As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
    TppWorkerpListLock As LongPtr
    TppWorkerpList As LIST_ENTRY
    WaitOnAddressHashTable(0 To 127) As LongPtr
End Type

[Description("PEB for Windows Windows 10 Redstone 3/1703 Creators Update")]
Public Type PEB_WIN10_R3
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SharedData As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pUnused As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
    TppWorkerpListLock As LongPtr
    TppWorkerpList As LIST_ENTRY
    WaitOnAddressHashTable(0 To 127) As LongPtr
    TelemetryCoverageHeader As LongPtr
    CloudFileFlags As Long
End Type
[Description("PEB for Windows Windows 10 Redstone 4/1803 Spring Creators Update")]
Public Type PEB_WIN10_R4
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SharedData As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As NTGLB_Flags
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pUnused As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
    TppWorkerpListLock As LongPtr
    TppWorkerpList As LIST_ENTRY
    WaitOnAddressHashTable(0 To 127) As LongPtr
    TelemetryCoverageHeader As LongPtr
    CloudFileFlags As Long
    CloudFileDiagFlags As Long
    PlaceholderCompatibilityMode As Byte
    PlaceholderCompatibilityModeReserved(0 To 6) As Byte
End Type
[Description("PEB for Windows Windows 10 Redstone 5/1809 October Update through Windows 10 21H2/2110")]
Public Type PEB_WIN10_R5
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SharedData As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As Long
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As ImageSubsystemType
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    pUnused As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
    TppWorkerpListLock As LongPtr
    TppWorkerpList As LIST_ENTRY
    WaitOnAddressHashTable(0 To 127) As LongPtr
    TelemetryCoverageHeader As LongPtr
    CloudFileFlags As Long
    CloudFileDiagFlags As Long
    PlaceholderCompatibilityMode As Byte
    PlaceholderCompatibilityModeReserved(0 To 6) As Byte
    LeapSecondData As LongPtr
    LeapSecondFlagsOrSixtySecondEnabled As Long
    NtGlobalFlag2 As Long
End Type
[Description("PEB for Windows Windows 11 Insider Preview through Windows 11 22H2. Not verified on versions after that.")]
Public Type PEB_WIN11
    InheritedAddressSpace As Byte
    ReadImageFileExecOptions As Byte
    BeingDebugged As Byte
    BitField As Byte
    Mutant As LongPtr
    ImageBaseAddress As LongPtr
    Ldr As LongPtr
    ProcessParameters As LongPtr 'RTL_USER_PROCESS_PARAMETERS
    SubSystemData As LongPtr
    ProcessHeap As LongPtr
    FastPebLock As LongPtr
    AtlThunkSListPtr As LongPtr
    IFEOKey As LongPtr
    CPFlagsOrProcInJbInitBits As Long
    KernelCallbackTableOrUserShrdInfoPtr As LongPtr
    SystemReserved(0) As Long
    AtlThunkSListPtr32 As Long
    ApiSetMap As LongPtr
    TlsExpansionCounter As Long
    TlsBitmap As LongPtr
    TlsBitmapBits(1) As Long
    ReadOnlySharedMemoryBase As LongPtr
    SharedData As LongPtr
    ReadOnlyStaticServerData As LongPtr
    AnsiCodePageData As LongPtr
    OemCodePageData As LongPtr
    UnicodeCaseTableData As LongPtr
    NumberOfProcessors As Long
    NtGlobalFlag As Long
    CriticalSectionTimeout As LARGE_INTEGER
    HeapSegmentReserve As LongPtr
    HeapSegmentCommit As LongPtr
    HeapDeCommitTotalFreeThreshold As LongPtr
    HeapDeCommitFreeBlockThreshold As LongPtr
    NumberOfHeaps As Long
    MaximumNumberOfHeaps As Long
    ProcessHeaps As LongPtr
    GdiSharedHandleTable As LongPtr
    ProcessStarterHelper As LongPtr
    GdiDCAttributeList As Long
    LoaderLock As LongPtr
    OSMajorVersion As Long
    OSMinorVersion As Long
    OSBuildNumber As Integer
    OSCSDVersion As Integer
    OSPlatformId As Long
    ImageSubsystem As Long
    ImageSubsystemMajorVersion As Long
    ImageSubsystemMinorVersion As Long
    ActiveProcessAffinityMask As LongPtr
    #If Win64 Then
    GdiHandleBuffer(59) As Long
    #Else
    GdiHandleBuffer(33) As Long
    #End If
    PostProcessInitRoutine As LongPtr
    TlsExpansionBitmap As LongPtr
    TlsExpansionBitmapBits(31) As Long
    SessionId As Long
    AppCompatFlags As ULARGE_INTEGER
    AppCompatFlagUser As ULARGE_INTEGER
    pShimData As LongPtr
    AppCompatInfo As LongPtr
    CSDVersion As UNICODE_STRING
    ActivationContextData As LongPtr
    ProcessAssemblyStorageMap As LongPtr
    SystemDefaultActivationContextData As LongPtr
    SystemAssemblyStorageMap As LongPtr
    MinimumStackCommit As LongPtr
    FlsCallback As LongPtr
    FlsListHead As LIST_ENTRY
    FlsBitmap As LongPtr
    FlsBitmapBits(3) As Long
    FlsHighIndex As Long
    WerRegistrationData As LongPtr
    WerShipAssertPtr As LongPtr
    EcCodeBitMap As LongPtr
    pImageHeaderHash As LongPtr
    TracingFlagsOrTraceEnabledBits As Long
    CsrServerReadOnlySharedMemoryBase As LongLong
    TppWorkerpListLock As LongPtr
    TppWorkerpList As LIST_ENTRY
    WaitOnAddressHashTable(0 To 127) As LongPtr
    TelemetryCoverageHeader As LongPtr
    CloudFileFlags As Long
    CloudFileDiagFlags As Long
    PlaceholderCompatibilityMode As Byte
    PlaceholderCompatibilityModeReserved(0 To 6) As Byte
    LeapSecondData As LongPtr
    LeapSecondFlagsOrSixtySecondEnabled As Long
    NtGlobalFlag2 As Long
    ExtendedFeatureDisableMask As Long
End Type
#End Region

Public Enum VersionOSFlags
	VOS_UNKNOWN = &H00000000
	VOS_DOS = &H00010000
	VOS_OS216 = &H00020000
	VOS_OS232 = &H00030000
	VOS_NT = &H00040000
	VOS_WINCE = &H00050000
	VOS__BASE = &H00000000
	VOS__WINDOWS16 = &H00000001
	VOS__PM16 = &H00000002
	VOS__PM32 = &H00000003
	VOS__WINDOWS32 = &H00000004
	VOS_DOS_WINDOWS16 = &H00010001
	VOS_DOS_WINDOWS32 = &H00010004
	VOS_OS216_PM16 = &H00020002
	VOS_OS232_PM32 = &H00030003
	VOS_NT_WINDOWS32 = &H00040004
End Enum
Public Enum VersionFileFlags
	VS_FF_DEBUG = &H00000001
	VS_FF_PRERELEASE = &H00000002
	VS_FF_PATCHED = &H00000004
	VS_FF_PRIVATEBUILD = &H00000008
	VS_FF_INFOINFERRED = &H00000010
	VS_FF_SPECIALBUILD = &H00000020
End Enum
Public Const VS_FFI_STRUCVERSION  = &H00010000
Public Const VS_FFI_FILEFLAGSMASK  = &H0000003F
Public Enum VersionFileTypes
	VFT_UNKNOWN = &H00000000
	VFT_APP = &H00000001
	VFT_DLL = &H00000002
	VFT_DRV = &H00000003
	VFT_FONT = &H00000004
	VFT_VXD = &H00000005
	VFT_STATIC_LIB = &H00000007
End Enum
Public Enum VersionFileSubTypes
/* ----- VS_VERSION.dwFileType ----- */
	VFT2_UNKNOWN = &H00000000
	VFT2_DRV_PRINTER = &H00000001
	VFT2_DRV_KEYBOARD = &H00000002
	VFT2_DRV_LANGUAGE = &H00000003
	VFT2_DRV_DISPLAY = &H00000004
	VFT2_DRV_MOUSE = &H00000005
	VFT2_DRV_NETWORK = &H00000006
	VFT2_DRV_SYSTEM = &H00000007
	VFT2_DRV_INSTALLABLE = &H00000008
	VFT2_DRV_SOUND = &H00000009
	VFT2_DRV_COMM = &H0000000A
	VFT2_DRV_INPUTMETHOD = &H0000000B
	VFT2_DRV_VERSIONED_PRINTER = &H0000000C
/* ----- VS_VERSION.dwFileSubtype for VFT_WINDOWS_DRV ----- */
	VFT2_FONT_RASTER = &H00000001
	VFT2_FONT_VECTOR = &H00000002
	VFT2_FONT_TRUETYPE = &H00000003
End Enum
Public Type VS_FIXEDFILEINFO
   dwSignature As Long
   dwStrucVersionl As Integer   ' e.g. = &h0000 = 0
   dwStrucVersionh As Integer   ' e.g. = &h0042 = .42
   dwFileVersionMSl As Integer   ' e.g. = &h0003 = 3
   dwFileVersionMSh As Integer   ' e.g. = &h0075 = .75
   dwFileVersionLSl As Integer   ' e.g. = &h0000 = 0
   dwFileVersionLSh As Integer   ' e.g. = &h0031 = .31
   dwProductVersionMSl As Integer   ' e.g. = &h0003 = 3
   dwProductVersionMSh As Integer   ' e.g. = &h0010 = .1
   dwProductVersionLSl As Integer   ' e.g. = &h0000 = 0
   dwProductVersionLSh As Integer   ' e.g. = &h0031 = .31
   dwFileFlagsMask As VersionFileFlags   ' = &h3F for version "0.42"
   dwFileFlags As VersionFileFlags   ' e.g. VFF_DEBUG Or VFF_PRERELEASE
   dwFileOS As VersionOSFlags   ' e.g. VOS_DOS_WINDOWS16
   dwFileType As VersionFileTypes   ' e.g. VFT_DRIVER
   dwFileSubtype As VersionFileSubTypes   ' e.g. VFT2_DRV_KEYBOARD
   dwFileDateMS As Long   ' e.g. 0
   dwFileDateLS As Long   ' e.g. 0
End Type
Public Type VS_VERSIONINFO_FIXED_PORTION
    wLength As Integer
    wValueLength As Integer
    wType As Integer
    szKey(0 To 15) As Integer   'Unicode "VS_VERSION_INFO" & vbNullChar.
    Padding1 As Integer 'Pad next field to DWORD boundary.
    Value As VS_FIXEDFILEINFO
End Type

Public Enum COMPARE_FLAGS
    SORT_STRINGSORT = &H1000&
    SORT_DIGITSASNUMBERS = &H8          'Sort 1 2 10 instead of 1 10 2
    LINGUISTIC_IGNORECASE = &H10&
    LINGUISTIC_IGNOREDIACRITIC = &H20&
    NORM_IGNORECASE = &H1&
    NORM_IGNORENONSPACE = &H2&
    NORM_IGNORESYMBOLS = &H4&
    NORM_IGNOREKANATYPE = &H10000
    NORM_IGNOREKANATYPE_ALT = &H40
    NORM_IGNOREWIDTH = &H20000
    NORM_IGNOREWIDTH_ALT = &H08
    NORM_IGNOREKASHIDA = &H00040000
    NORM_LINGUISTIC_CASING = &H8000000
End Enum
Public Enum CSTR_RETURNS
    CSTR_FAIL = 0&
    CSTR_LESS_THAN = 1&
    CSTR_EQUAL = 2&
    CSTR_GREATER_THAN = 3&
End Enum

Public Enum LCID_LANG_IDENTIFIERS
    LANG_NEUTRAL = &H00
    LANG_INVARIANT = &H7f
    LANG_AFRIKAANS = &H36
    LANG_ALBANIAN = &H1c
    LANG_ALSATIAN = &H84
    LANG_AMHARIC = &H5e
    LANG_ARABIC = &H01
    LANG_ARMENIAN = &H2b
    LANG_ASSAMESE = &H4d
    LANG_AZERI = &H2c  ' for Azerbaijani, LANG_AZERBAIJANI is preferred
    LANG_AZERBAIJANI = &H2c
    LANG_BANGLA = &H45
    LANG_BASHKIR = &H6d
    LANG_BASQUE = &H2d
    LANG_BELARUSIAN = &H23
    LANG_BENGALI = &H45  ' Some prefer to use LANG_BANGLA
    LANG_BRETON = &H7e
    LANG_BOSNIAN = &H1a  ' Use with SUBLANG_BOSNIAN_* Sublanguage IDs
    LANG_BOSNIAN_NEUTRAL = &H781a  ' Use with the ConvertDefaultLocale function
    LANG_BULGARIAN = &H02
    LANG_CATALAN = &H03
    LANG_CENTRAL_KURDISH = &H92
    LANG_CHEROKEE = &H5c
    LANG_CHINESE = &H04  ' Use with SUBLANG_CHINESE_* Sublanguage IDs
    LANG_CHINESE_SIMPLIFIED = &H04  ' Use with the ConvertDefaultLocale function
    LANG_CHINESE_TRADITIONAL = &H7c04  ' Use with the ConvertDefaultLocale function
    LANG_CORSICAN = &H83
    LANG_CROATIAN = &H1a
    LANG_CZECH = &H05
    LANG_DANISH = &H06
    LANG_DARI = &H8c
    LANG_DIVEHI = &H65
    LANG_DUTCH = &H13
    LANG_ENGLISH = &H09
    LANG_ESTONIAN = &H25
    LANG_FAEROESE = &H38
    LANG_FARSI = &H29  ' Deprecated: use LANG_PERSIAN instead
    LANG_FILIPINO = &H64
    LANG_FINNISH = &H0b
    LANG_FRENCH = &H0c
    LANG_FRISIAN = &H62
    LANG_FULAH = &H67
    LANG_GALICIAN = &H56
    LANG_GEORGIAN = &H37
    LANG_GERMAN = &H07
    LANG_GREEK = &H08
    LANG_GREENLANDIC = &H6f
    LANG_GUJARATI = &H47
    LANG_HAUSA = &H68
    LANG_HAWAIIAN = &H75
    LANG_HEBREW = &H0d
    LANG_HINDI = &H39
    LANG_HUNGARIAN = &H0e
    LANG_ICELANDIC = &H0f
    LANG_IGBO = &H70
    LANG_INDONESIAN = &H21
    LANG_INUKTITUT = &H5d
    LANG_IRISH = &H3c  ' Use with the SUBLANG_IRISH_IRELAND Sublanguage ID
    LANG_ITALIAN = &H10
    LANG_JAPANESE = &H11
    LANG_KANNADA = &H4b
    LANG_KASHMIRI = &H60
    LANG_KAZAK = &H3f
    LANG_KHMER = &H53
    LANG_KICHE = &H86
    LANG_KINYARWANDA = &H87
    LANG_KONKANI = &H57
    LANG_KOREAN = &H12
    LANG_KYRGYZ = &H40
    LANG_LAO = &H54
    LANG_LATVIAN = &H26
    LANG_LITHUANIAN = &H27
    LANG_LOWER_SORBIAN = &H2e
    LANG_LUXEMBOURGISH = &H6e
    LANG_MACEDONIAN = &H2f  ' the Former Yugoslav Republic of Macedonia
    LANG_MALAY = &H3e
    LANG_MALAYALAM = &H4c
    LANG_MALTESE = &H3a
    LANG_MANIPURI = &H58
    LANG_MAORI = &H81
    LANG_MAPUDUNGUN = &H7a
    LANG_MARATHI = &H4e
    LANG_MOHAWK = &H7c
    LANG_MONGOLIAN = &H50
    LANG_NEPALI = &H61
    LANG_NORWEGIAN = &H14
    LANG_OCCITAN = &H82
    LANG_ODIA = &H48
    LANG_ORIYA = &H48  ' Deprecated: use LANG_ODIA, instead.
    LANG_PASHTO = &H63
    LANG_PERSIAN = &H29
    LANG_POLISH = &H15
    LANG_PORTUGUESE = &H16
    LANG_PULAR = &H67  ' Deprecated: use LANG_FULAH instead
    LANG_PUNJABI = &H46
    LANG_QUECHUA = &H6b
    LANG_ROMANIAN = &H18
    LANG_ROMANSH = &H17
    LANG_RUSSIAN = &H19
    LANG_SAKHA = &H85
    LANG_SAMI = &H3b
    LANG_SANSKRIT = &H4f
    LANG_SCOTTISH_GAELIC = &H91
    LANG_SERBIAN = &H1a  ' Use with the SUBLANG_SERBIAN_* Sublanguage IDs
    LANG_SERBIAN_NEUTRAL = &H7c1a  ' Use with the ConvertDefaultLocale function
    LANG_SINDHI = &H59
    LANG_SINHALESE = &H5b
    LANG_SLOVAK = &H1b
    LANG_SLOVENIAN = &H24
    LANG_SOTHO = &H6c
    LANG_SPANISH = &H0a
    LANG_SWAHILI = &H41
    LANG_SWEDISH = &H1d
    LANG_SYRIAC = &H5a
    LANG_TAJIK = &H28
    LANG_TAMAZIGHT = &H5f
    LANG_TAMIL = &H49
    LANG_TATAR = &H44
    LANG_TELUGU = &H4a
    LANG_THAI = &H1e
    LANG_TIBETAN = &H51
    LANG_TIGRIGNA = &H73
    LANG_TIGRINYA = &H73  ' Preferred spelling in locale
    LANG_TSWANA = &H32
    LANG_TURKISH = &H1f
    LANG_TURKMEN = &H42
    LANG_UIGHUR = &H80
    LANG_UKRAINIAN = &H22
    LANG_UPPER_SORBIAN = &H2e
    LANG_URDU = &H20
    LANG_UZBEK = &H43
    LANG_VALENCIAN = &H03
    LANG_VIETNAMESE = &H2a
    LANG_WELSH = &H52
    LANG_WOLOF = &H88
    LANG_XHOSA = &H34
    LANG_YAKUT = &H85  ' Deprecated: use LANG_SAKHA,instead
    LANG_YI = &H78
    LANG_YORUBA = &H6a
    LANG_ZULU = &H35
End Enum
[Description("language neutral")] Public Const SUBLANG_NEUTRAL  = &H00
[Description("user default")] Public Const SUBLANG_DEFAULT  = &H01
[Description("system default")] Public Const SUBLANG_SYS_DEFAULT  = &H02
[Description("default custom language/locale")] Public Const SUBLANG_CUSTOM_DEFAULT  = &H03


[Description("custom language/locale")] Public Const SUBLANG_CUSTOM_UNSPECIFIED  = &H04
[Description("Default custom MUI language/locale")] Public Const SUBLANG_UI_CUSTOM_DEFAULT  = &H05
[Description("Afrikaans (South Africa) 0x0436 af-ZA")] Public Const SUBLANG_AFRIKAANS_SOUTH_AFRICA  = &H01
[Description("Albanian (Albania) 0x041c sq-AL")] Public Const SUBLANG_ALBANIAN_ALBANIA  = &H01
[Description("Alsatian (France) 0x0484")] Public Const SUBLANG_ALSATIAN_FRANCE  = &H01
[Description("Amharic (Ethiopia) 0x045e")] Public Const SUBLANG_AMHARIC_ETHIOPIA  = &H01
[Description("Arabic (Saudi Arabia)")] Public Const SUBLANG_ARABIC_SAUDI_ARABIA  = &H01
[Description("Arabic (Iraq)")] Public Const SUBLANG_ARABIC_IRAQ  = &H02
[Description("Arabic (Egypt)")] Public Const SUBLANG_ARABIC_EGYPT  = &H03
[Description("Arabic (Libya)")] Public Const SUBLANG_ARABIC_LIBYA  = &H04
[Description("Arabic (Algeria)")] Public Const SUBLANG_ARABIC_ALGERIA  = &H05
[Description("Arabic (Morocco)")] Public Const SUBLANG_ARABIC_MOROCCO  = &H06
[Description("Arabic (Tunisia)")] Public Const SUBLANG_ARABIC_TUNISIA  = &H07
[Description("Arabic (Oman)")] Public Const SUBLANG_ARABIC_OMAN  = &H08
[Description("Arabic (Yemen)")] Public Const SUBLANG_ARABIC_YEMEN  = &H09
[Description("Arabic (Syria)")] Public Const SUBLANG_ARABIC_SYRIA  = &H0a
[Description("Arabic (Jordan)")] Public Const SUBLANG_ARABIC_JORDAN  = &H0b
[Description("Arabic (Lebanon)")] Public Const SUBLANG_ARABIC_LEBANON  = &H0c
[Description("Arabic (Kuwait)")] Public Const SUBLANG_ARABIC_KUWAIT  = &H0d
[Description("Arabic (U.A.E)")] Public Const SUBLANG_ARABIC_UAE  = &H0e
[Description("Arabic (Bahrain)")] Public Const SUBLANG_ARABIC_BAHRAIN  = &H0f
[Description("Arabic (Qatar)")] Public Const SUBLANG_ARABIC_QATAR  = &H10
[Description("Armenian (Armenia) 0x042b hy-AM")] Public Const SUBLANG_ARMENIAN_ARMENIA  = &H01
[Description("Assamese (India) 0x044d")] Public Const SUBLANG_ASSAMESE_INDIA  = &H01
[Description("Azeri (Latin) - for Azerbaijani, SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN preferred")] Public Const SUBLANG_AZERI_LATIN  = &H01
[Description("Azeri (Cyrillic) - for Azerbaijani, SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC preferred")] Public Const SUBLANG_AZERI_CYRILLIC  = &H02
[Description("Azerbaijani (Azerbaijan, Latin)")] Public Const SUBLANG_AZERBAIJANI_AZERBAIJAN_LATIN  = &H01
[Description("Azerbaijani (Azerbaijan, Cyrillic)")] Public Const SUBLANG_AZERBAIJANI_AZERBAIJAN_CYRILLIC  = &H02
[Description("Bangla (India)")] Public Const SUBLANG_BANGLA_INDIA  = &H01
[Description("Bangla (Bangladesh)")] Public Const SUBLANG_BANGLA_BANGLADESH  = &H02
[Description("Bashkir (Russia) 0x046d ba-RU")] Public Const SUBLANG_BASHKIR_RUSSIA  = &H01
[Description("Basque (Basque) 0x042d eu-ES")] Public Const SUBLANG_BASQUE_BASQUE  = &H01
[Description("Belarusian (Belarus) 0x0423 be-BY")] Public Const SUBLANG_BELARUSIAN_BELARUS  = &H01
[Description("Bengali (India) - Note some prefer SUBLANG_BANGLA_INDIA")] Public Const SUBLANG_BENGALI_INDIA  = &H01
[Description("Bengali (Bangladesh) - Note some prefer SUBLANG_BANGLA_BANGLADESH")] Public Const SUBLANG_BENGALI_BANGLADESH  = &H02
[Description("Bosnian (Bosnia and Herzegovina - Latin) 0x141a bs-BA-Latn")] Public Const SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_LATIN  = &H05
[Description("Bosnian (Bosnia and Herzegovina - Cyrillic) 0x201a bs-BA-Cyrl")] Public Const SUBLANG_BOSNIAN_BOSNIA_HERZEGOVINA_CYRILLIC  = &H08
[Description("Breton (France) 0x047e")] Public Const SUBLANG_BRETON_FRANCE  = &H01
[Description("Bulgarian (Bulgaria) 0x0402")] Public Const SUBLANG_BULGARIAN_BULGARIA  = &H01
[Description("Catalan (Catalan) 0x0403")] Public Const SUBLANG_CATALAN_CATALAN  = &H01
[Description("Central Kurdish (Iraq) 0x0492 ku-Arab-IQ")] Public Const SUBLANG_CENTRAL_KURDISH_IRAQ  = &H01
[Description("Cherokee (Cherokee) 0x045c chr-Cher-US")] Public Const SUBLANG_CHEROKEE_CHEROKEE  = &H01
[Description("Chinese (Taiwan) 0x0404 zh-TW")] Public Const SUBLANG_CHINESE_TRADITIONAL  = &H01
[Description("Chinese (PR China) 0x0804 zh-CN")] Public Const SUBLANG_CHINESE_SIMPLIFIED  = &H02
[Description("Chinese (Hong Kong S.A.R., P.R.C.) 0x0c04 zh-HK")] Public Const SUBLANG_CHINESE_HONGKONG  = &H03
[Description("Chinese (Singapore) 0x1004 zh-SG")] Public Const SUBLANG_CHINESE_SINGAPORE  = &H04
[Description("Chinese (Macau S.A.R.) 0x1404 zh-MO")] Public Const SUBLANG_CHINESE_MACAU  = &H05
[Description("Corsican (France) 0x0483")] Public Const SUBLANG_CORSICAN_FRANCE  = &H01
[Description("Czech (Czech Republic) 0x0405")] Public Const SUBLANG_CZECH_CZECH_REPUBLIC  = &H01
[Description("Croatian (Croatia)")] Public Const SUBLANG_CROATIAN_CROATIA  = &H01
[Description("Croatian (Bosnia and Herzegovina - Latin) 0x101a hr-BA")] Public Const SUBLANG_CROATIAN_BOSNIA_HERZEGOVINA_LATIN  = &H04
[Description("Danish (Denmark) 0x0406")] Public Const SUBLANG_DANISH_DENMARK  = &H01
[Description("Dari (Afghanistan)")] Public Const SUBLANG_DARI_AFGHANISTAN  = &H01
[Description("Divehi (Maldives) 0x0465 div-MV")] Public Const SUBLANG_DIVEHI_MALDIVES  = &H01
[Description("Dutch")] Public Const SUBLANG_DUTCH  = &H01
[Description("Dutch (Belgian)")] Public Const SUBLANG_DUTCH_BELGIAN  = &H02
[Description("English (USA)")] Public Const SUBLANG_ENGLISH_US  = &H01
[Description("English (UK)")] Public Const SUBLANG_ENGLISH_UK  = &H02
[Description("English (Australian)")] Public Const SUBLANG_ENGLISH_AUS  = &H03
[Description("English (Canadian)")] Public Const SUBLANG_ENGLISH_CAN  = &H04
[Description("English (New Zealand)")] Public Const SUBLANG_ENGLISH_NZ  = &H05
[Description("English (Irish)")] Public Const SUBLANG_ENGLISH_EIRE  = &H06
[Description("English (South Africa)")] Public Const SUBLANG_ENGLISH_SOUTH_AFRICA  = &H07
[Description("English (Jamaica)")] Public Const SUBLANG_ENGLISH_JAMAICA  = &H08
[Description("English (Caribbean)")] Public Const SUBLANG_ENGLISH_CARIBBEAN  = &H09
[Description("English (Belize)")] Public Const SUBLANG_ENGLISH_BELIZE  = &H0a
[Description("English (Trinidad)")] Public Const SUBLANG_ENGLISH_TRINIDAD  = &H0b
[Description("English (Zimbabwe)")] Public Const SUBLANG_ENGLISH_ZIMBABWE  = &H0c
[Description("English (Philippines)")] Public Const SUBLANG_ENGLISH_PHILIPPINES  = &H0d
[Description("English (India)")] Public Const SUBLANG_ENGLISH_INDIA  = &H10
[Description("English (Malaysia)")] Public Const SUBLANG_ENGLISH_MALAYSIA  = &H11
[Description("English (Singapore)")] Public Const SUBLANG_ENGLISH_SINGAPORE  = &H12
[Description("Estonian (Estonia) 0x0425 et-EE")] Public Const SUBLANG_ESTONIAN_ESTONIA  = &H01
[Description("Faroese (Faroe Islands) 0x0438 fo-FO")] Public Const SUBLANG_FAEROESE_FAROE_ISLANDS  = &H01
[Description("Filipino (Philippines) 0x0464 fil-PH")] Public Const SUBLANG_FILIPINO_PHILIPPINES  = &H01
[Description("Finnish (Finland) 0x040b")] Public Const SUBLANG_FINNISH_FINLAND  = &H01
[Description("French")] Public Const SUBLANG_FRENCH  = &H01
[Description("French (Belgian)")] Public Const SUBLANG_FRENCH_BELGIAN  = &H02
[Description("French (Canadian)")] Public Const SUBLANG_FRENCH_CANADIAN  = &H03
[Description("French (Swiss)")] Public Const SUBLANG_FRENCH_SWISS  = &H04
[Description("French (Luxembourg)")] Public Const SUBLANG_FRENCH_LUXEMBOURG  = &H05
[Description("French (Monaco)")] Public Const SUBLANG_FRENCH_MONACO  = &H06
[Description("Frisian (Netherlands) 0x0462 fy-NL")] Public Const SUBLANG_FRISIAN_NETHERLANDS  = &H01
[Description("Fulah (Senegal) 0x0867 ff-Latn-SN")] Public Const SUBLANG_FULAH_SENEGAL  = &H02
[Description("Galician (Galician) 0x0456 gl-ES")] Public Const SUBLANG_GALICIAN_GALICIAN  = &H01
[Description("Georgian (Georgia) 0x0437 ka-GE")] Public Const SUBLANG_GEORGIAN_GEORGIA  = &H01
[Description("German")] Public Const SUBLANG_GERMAN  = &H01
[Description("German (Swiss)")] Public Const SUBLANG_GERMAN_SWISS  = &H02
[Description("German (Austrian)")] Public Const SUBLANG_GERMAN_AUSTRIAN  = &H03
[Description("German (Luxembourg)")] Public Const SUBLANG_GERMAN_LUXEMBOURG  = &H04
[Description("German (Liechtenstein)")] Public Const SUBLANG_GERMAN_LIECHTENSTEIN  = &H05
[Description("Greek (Greece)")] Public Const SUBLANG_GREEK_GREECE  = &H01
[Description("Greenlandic (Greenland) 0x046f kl-GL")] Public Const SUBLANG_GREENLANDIC_GREENLAND  = &H01
[Description("Gujarati (India (Gujarati Script)) 0x0447 gu-IN")] Public Const SUBLANG_GUJARATI_INDIA  = &H01
[Description("Hausa (Latin, Nigeria) 0x0468 ha-NG-Latn")] Public Const SUBLANG_HAUSA_NIGERIA_LATIN  = &H01
[Description("Hawiian (US) 0x0475 haw-US")] Public Const SUBLANG_HAWAIIAN_US  = &H01
[Description("Hebrew (Israel) 0x040d")] Public Const SUBLANG_HEBREW_ISRAEL  = &H01
[Description("Hindi (India) 0x0439 hi-IN")] Public Const SUBLANG_HINDI_INDIA  = &H01
[Description("Hungarian (Hungary) 0x040e")] Public Const SUBLANG_HUNGARIAN_HUNGARY  = &H01
[Description("Icelandic (Iceland) 0x040f")] Public Const SUBLANG_ICELANDIC_ICELAND  = &H01
[Description("Igbo (Nigeria) 0x0470 ig-NG")] Public Const SUBLANG_IGBO_NIGERIA  = &H01
[Description("Indonesian (Indonesia) 0x0421 id-ID")] Public Const SUBLANG_INDONESIAN_INDONESIA  = &H01
[Description("Inuktitut (Syllabics) (Canada) 0x045d iu-CA-Cans")] Public Const SUBLANG_INUKTITUT_CANADA  = &H01
[Description("Inuktitut (Canada - Latin)")] Public Const SUBLANG_INUKTITUT_CANADA_LATIN  = &H02
[Description("Irish (Ireland)")] Public Const SUBLANG_IRISH_IRELAND  = &H02
[Description("Italian")] Public Const SUBLANG_ITALIAN  = &H01
[Description("Italian (Swiss)")] Public Const SUBLANG_ITALIAN_SWISS  = &H02
[Description("Japanese (Japan) 0x0411")] Public Const SUBLANG_JAPANESE_JAPAN  = &H01
[Description("Kannada (India (Kannada Script)) 0x044b kn-IN")] Public Const SUBLANG_KANNADA_INDIA  = &H01
[Description("Kashmiri (South Asia)")] Public Const SUBLANG_KASHMIRI_SASIA  = &H02
[Description("For app compatibility only")] Public Const SUBLANG_KASHMIRI_INDIA  = &H02
[Description("Kazakh (Kazakhstan) 0x043f kk-KZ")] Public Const SUBLANG_KAZAK_KAZAKHSTAN  = &H01
[Description("Khmer (Cambodia) 0x0453 kh-KH")] Public Const SUBLANG_KHMER_CAMBODIA  = &H01
[Description("K'iche (Guatemala)")] Public Const SUBLANG_KICHE_GUATEMALA  = &H01
[Description("Kinyarwanda (Rwanda) 0x0487 rw-RW")] Public Const SUBLANG_KINYARWANDA_RWANDA  = &H01
[Description("Konkani (India) 0x0457 kok-IN")] Public Const SUBLANG_KONKANI_INDIA  = &H01
[Description("Korean (Extended Wansung)")] Public Const SUBLANG_KOREAN  = &H01
[Description("Kyrgyz (Kyrgyzstan) 0x0440 ky-KG")] Public Const SUBLANG_KYRGYZ_KYRGYZSTAN  = &H01
[Description("Lao (Lao PDR) 0x0454 lo-LA")] Public Const SUBLANG_LAO_LAO  = &H01
[Description("Latvian (Latvia) 0x0426 lv-LV")] Public Const SUBLANG_LATVIAN_LATVIA  = &H01
[Description("Lithuanian")] Public Const SUBLANG_LITHUANIAN  = &H01
[Description("Lower Sorbian (Germany) 0x082e wee-DE")] Public Const SUBLANG_LOWER_SORBIAN_GERMANY  = &H02
[Description("Luxembourgish (Luxembourg) 0x046e lb-LU")] Public Const SUBLANG_LUXEMBOURGISH_LUXEMBOURG  = &H01
[Description("Macedonian (Macedonia (FYROM)) 0x042f mk-MK")] Public Const SUBLANG_MACEDONIAN_MACEDONIA  = &H01
[Description("Malay (Malaysia)")] Public Const SUBLANG_MALAY_MALAYSIA  = &H01
[Description("Malay (Brunei Darussalam)")] Public Const SUBLANG_MALAY_BRUNEI_DARUSSALAM  = &H02
[Description("Malayalam (India (Malayalam Script) ) 0x044c ml-IN")] Public Const SUBLANG_MALAYALAM_INDIA  = &H01
[Description("Maltese (Malta) 0x043a mt-MT")] Public Const SUBLANG_MALTESE_MALTA  = &H01
[Description("Maori (New Zealand) 0x0481 mi-NZ")] Public Const SUBLANG_MAORI_NEW_ZEALAND  = &H01
[Description("Mapudungun (Chile) 0x047a arn-CL")] Public Const SUBLANG_MAPUDUNGUN_CHILE  = &H01
[Description("Marathi (India) 0x044e mr-IN")] Public Const SUBLANG_MARATHI_INDIA  = &H01
[Description("Mohawk (Mohawk) 0x047c moh-CA")] Public Const SUBLANG_MOHAWK_MOHAWK  = &H01
[Description("Mongolian (Cyrillic, Mongolia)")] Public Const SUBLANG_MONGOLIAN_CYRILLIC_MONGOLIA  = &H01
[Description("Mongolian (PRC)")] Public Const SUBLANG_MONGOLIAN_PRC  = &H02
[Description("Nepali (India)")] Public Const SUBLANG_NEPALI_INDIA  = &H02
[Description("Nepali (Nepal) 0x0461 ne-NP")] Public Const SUBLANG_NEPALI_NEPAL  = &H01
[Description("Norwegian (Bokmal)")] Public Const SUBLANG_NORWEGIAN_BOKMAL  = &H01
[Description("Norwegian (Nynorsk)")] Public Const SUBLANG_NORWEGIAN_NYNORSK  = &H02
[Description("Occitan (France) 0x0482 oc-FR")] Public Const SUBLANG_OCCITAN_FRANCE  = &H01
[Description("Odia (India (Odia Script)) 0x0448 or-IN")] Public Const SUBLANG_ODIA_INDIA  = &H01
[Description("Deprecated: use SUBLANG_ODIA_INDIA instead")] Public Const SUBLANG_ORIYA_INDIA  = &H01
[Description("Pashto (Afghanistan)")] Public Const SUBLANG_PASHTO_AFGHANISTAN  = &H01
[Description("Persian (Iran) 0x0429 fa-IR")] Public Const SUBLANG_PERSIAN_IRAN  = &H01
[Description("Polish (Poland) 0x0415")] Public Const SUBLANG_POLISH_POLAND  = &H01
[Description("Portuguese")] Public Const SUBLANG_PORTUGUESE  = &H02
[Description("Portuguese (Brazil)")] Public Const SUBLANG_PORTUGUESE_BRAZILIAN  = &H01
[Description("Deprecated: Use SUBLANG_FULAH_SENEGAL instead")] Public Const SUBLANG_PULAR_SENEGAL  = &H02
[Description("Punjabi (India (Gurmukhi Script)) 0x0446 pa-IN")] Public Const SUBLANG_PUNJABI_INDIA  = &H01
[Description("Punjabi (Pakistan (Arabic Script)) 0x0846 pa-Arab-PK")] Public Const SUBLANG_PUNJABI_PAKISTAN  = &H02
[Description("Quechua (Bolivia)")] Public Const SUBLANG_QUECHUA_BOLIVIA  = &H01
[Description("Quechua (Ecuador)")] Public Const SUBLANG_QUECHUA_ECUADOR  = &H02
[Description("Quechua (Peru)")] Public Const SUBLANG_QUECHUA_PERU  = &H03
[Description("Romanian (Romania) 0x0418")] Public Const SUBLANG_ROMANIAN_ROMANIA  = &H01
[Description("Romansh (Switzerland) 0x0417 rm-CH")] Public Const SUBLANG_ROMANSH_SWITZERLAND  = &H01
[Description("Russian (Russia) 0x0419")] Public Const SUBLANG_RUSSIAN_RUSSIA  = &H01
[Description("Sakha (Russia) 0x0485 sah-RU")] Public Const SUBLANG_SAKHA_RUSSIA  = &H01
[Description("Northern Sami (Norway)")] Public Const SUBLANG_SAMI_NORTHERN_NORWAY  = &H01
[Description("Northern Sami (Sweden)")] Public Const SUBLANG_SAMI_NORTHERN_SWEDEN  = &H02
[Description("Northern Sami (Finland)")] Public Const SUBLANG_SAMI_NORTHERN_FINLAND  = &H03
[Description("Lule Sami (Norway)")] Public Const SUBLANG_SAMI_LULE_NORWAY  = &H04
[Description("Lule Sami (Sweden)")] Public Const SUBLANG_SAMI_LULE_SWEDEN  = &H05
[Description("Southern Sami (Norway)")] Public Const SUBLANG_SAMI_SOUTHERN_NORWAY  = &H06
[Description("Southern Sami (Sweden)")] Public Const SUBLANG_SAMI_SOUTHERN_SWEDEN  = &H07
[Description("Skolt Sami (Finland)")] Public Const SUBLANG_SAMI_SKOLT_FINLAND  = &H08
[Description("Inari Sami (Finland)")] Public Const SUBLANG_SAMI_INARI_FINLAND  = &H09
[Description("Sanskrit (India) 0x044f sa-IN")] Public Const SUBLANG_SANSKRIT_INDIA  = &H01
[Description("Scottish Gaelic (United Kingdom) 0x0491 gd-GB")] Public Const SUBLANG_SCOTTISH_GAELIC  = &H01
[Description("Serbian (Bosnia and Herzegovina - Latin)")] Public Const SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_LATIN  = &H06
[Description("Serbian (Bosnia and Herzegovina - Cyrillic)")] Public Const SUBLANG_SERBIAN_BOSNIA_HERZEGOVINA_CYRILLIC  = &H07
[Description("Serbian (Montenegro - Latn)")] Public Const SUBLANG_SERBIAN_MONTENEGRO_LATIN  = &H0b
[Description("Serbian (Montenegro - Cyrillic)")] Public Const SUBLANG_SERBIAN_MONTENEGRO_CYRILLIC  = &H0c
[Description("Serbian (Serbia - Latin)")] Public Const SUBLANG_SERBIAN_SERBIA_LATIN  = &H09
[Description("Serbian (Serbia - Cyrillic)")] Public Const SUBLANG_SERBIAN_SERBIA_CYRILLIC  = &H0a
[Description("Croatian (Croatia) 0x041a hr-HR")] Public Const SUBLANG_SERBIAN_CROATIA  = &H01
[Description("Serbian (Latin)")] Public Const SUBLANG_SERBIAN_LATIN  = &H02
[Description("Serbian (Cyrillic)")] Public Const SUBLANG_SERBIAN_CYRILLIC  = &H03
[Description("Sindhi (India) reserved 0x0459")] Public Const SUBLANG_SINDHI_INDIA  = &H01
[Description("Sindhi (Pakistan) 0x0859 sd-Arab-PK")] Public Const SUBLANG_SINDHI_PAKISTAN  = &H02
[Description("For app compatibility only")] Public Const SUBLANG_SINDHI_AFGHANISTAN  = &H02
[Description("Sinhalese (Sri Lanka)")] Public Const SUBLANG_SINHALESE_SRI_LANKA  = &H01
[Description("Northern Sotho (South Africa)")] Public Const SUBLANG_SOTHO_NORTHERN_SOUTH_AFRICA  = &H01
[Description("Slovak (Slovakia) 0x041b sk-SK")] Public Const SUBLANG_SLOVAK_SLOVAKIA  = &H01
[Description("Slovenian (Slovenia) 0x0424 sl-SI")] Public Const SUBLANG_SLOVENIAN_SLOVENIA  = &H01
[Description("Spanish (Castilian)")] Public Const SUBLANG_SPANISH  = &H01
[Description("Spanish (Mexico)")] Public Const SUBLANG_SPANISH_MEXICAN  = &H02
[Description("Spanish (Modern)")] Public Const SUBLANG_SPANISH_MODERN  = &H03
[Description("Spanish (Guatemala)")] Public Const SUBLANG_SPANISH_GUATEMALA  = &H04
[Description("Spanish (Costa Rica)")] Public Const SUBLANG_SPANISH_COSTA_RICA  = &H05
[Description("Spanish (Panama)")] Public Const SUBLANG_SPANISH_PANAMA  = &H06
[Description("Spanish (Dominican Republic)")] Public Const SUBLANG_SPANISH_DOMINICAN_REPUBLIC  = &H07
[Description("Spanish (Venezuela)")] Public Const SUBLANG_SPANISH_VENEZUELA  = &H08
[Description("Spanish (Colombia)")] Public Const SUBLANG_SPANISH_COLOMBIA  = &H09
[Description("Spanish (Peru)")] Public Const SUBLANG_SPANISH_PERU  = &H0a
[Description("Spanish (Argentina)")] Public Const SUBLANG_SPANISH_ARGENTINA  = &H0b
[Description("Spanish (Ecuador)")] Public Const SUBLANG_SPANISH_ECUADOR  = &H0c
[Description("Spanish (Chile)")] Public Const SUBLANG_SPANISH_CHILE  = &H0d
[Description("Spanish (Uruguay)")] Public Const SUBLANG_SPANISH_URUGUAY  = &H0e
[Description("Spanish (Paraguay)")] Public Const SUBLANG_SPANISH_PARAGUAY  = &H0f
[Description("Spanish (Bolivia)")] Public Const SUBLANG_SPANISH_BOLIVIA  = &H10
[Description("Spanish (El Salvador)")] Public Const SUBLANG_SPANISH_EL_SALVADOR  = &H11
[Description("Spanish (Honduras)")] Public Const SUBLANG_SPANISH_HONDURAS  = &H12
[Description("Spanish (Nicaragua)")] Public Const SUBLANG_SPANISH_NICARAGUA  = &H13
[Description("Spanish (Puerto Rico)")] Public Const SUBLANG_SPANISH_PUERTO_RICO  = &H14
[Description("Spanish (United States)")] Public Const SUBLANG_SPANISH_US  = &H15
[Description("Swahili (Kenya) 0x0441 sw-KE")] Public Const SUBLANG_SWAHILI_KENYA  = &H01
[Description("Swedish")] Public Const SUBLANG_SWEDISH  = &H01
[Description("Swedish (Finland)")] Public Const SUBLANG_SWEDISH_FINLAND  = &H02
[Description("Syriac (Syria) 0x045a syr-SY")] Public Const SUBLANG_SYRIAC_SYRIA  = &H01
[Description("Tajik (Tajikistan) 0x0428 tg-TJ-Cyrl")] Public Const SUBLANG_TAJIK_TAJIKISTAN  = &H01
[Description("Tamazight (Latin, Algeria) 0x085f tzm-Latn-DZ")] Public Const SUBLANG_TAMAZIGHT_ALGERIA_LATIN  = &H02
[Description("Tamazight (Tifinagh) 0x105f tzm-Tfng-MA")] Public Const SUBLANG_TAMAZIGHT_MOROCCO_TIFINAGH  = &H04
[Description("Tamil (India)")] Public Const SUBLANG_TAMIL_INDIA  = &H01
[Description("Tamil (Sri Lanka) 0x0849 ta-LK")] Public Const SUBLANG_TAMIL_SRI_LANKA  = &H02
[Description("Tatar (Russia) 0x0444 tt-RU")] Public Const SUBLANG_TATAR_RUSSIA  = &H01
[Description("Telugu (India (Telugu Script)) 0x044a te-IN")] Public Const SUBLANG_TELUGU_INDIA  = &H01
[Description("Thai (Thailand) 0x041e th-TH")] Public Const SUBLANG_THAI_THAILAND  = &H01
[Description("Tibetan (PRC)")] Public Const SUBLANG_TIBETAN_PRC  = &H01
[Description("Tigrigna (Eritrea)")] Public Const SUBLANG_TIGRIGNA_ERITREA  = &H02
[Description("Tigrinya (Eritrea) 0x0873 ti-ER (preferred spelling)")] Public Const SUBLANG_TIGRINYA_ERITREA  = &H02
[Description("Tigrinya (Ethiopia) 0x0473 ti-ET")] Public Const SUBLANG_TIGRINYA_ETHIOPIA  = &H01
[Description("Setswana / Tswana (Botswana) 0x0832 tn-BW")] Public Const SUBLANG_TSWANA_BOTSWANA  = &H02
[Description("Setswana / Tswana (South Africa) 0x0432 tn-ZA")] Public Const SUBLANG_TSWANA_SOUTH_AFRICA  = &H01
[Description("Turkish (Turkey) 0x041f tr-TR")] Public Const SUBLANG_TURKISH_TURKEY  = &H01
[Description("Turkmen (Turkmenistan) 0x0442 tk-TM")] Public Const SUBLANG_TURKMEN_TURKMENISTAN  = &H01
[Description("Uighur (PRC) 0x0480 ug-CN")] Public Const SUBLANG_UIGHUR_PRC  = &H01
[Description("Ukrainian (Ukraine) 0x0422 uk-UA")] Public Const SUBLANG_UKRAINIAN_UKRAINE  = &H01
[Description("Upper Sorbian (Germany) 0x042e wen-DE")] Public Const SUBLANG_UPPER_SORBIAN_GERMANY  = &H01
[Description("Urdu (Pakistan)")] Public Const SUBLANG_URDU_PAKISTAN  = &H01
[Description("Urdu (India)")] Public Const SUBLANG_URDU_INDIA  = &H02
[Description("Uzbek (Latin)")] Public Const SUBLANG_UZBEK_LATIN  = &H01
[Description("Uzbek (Cyrillic)")] Public Const SUBLANG_UZBEK_CYRILLIC  = &H02
[Description("Valencian (Valencia) 0x0803 ca-ES-Valencia")] Public Const SUBLANG_VALENCIAN_VALENCIA  = &H02
[Description("Vietnamese (Vietnam) 0x042a vi-VN")] Public Const SUBLANG_VIETNAMESE_VIETNAM  = &H01
[Description("Welsh (United Kingdom) 0x0452 cy-GB")] Public Const SUBLANG_WELSH_UNITED_KINGDOM  = &H01
[Description("Wolof (Senegal)")] Public Const SUBLANG_WOLOF_SENEGAL  = &H01
[Description("isiXhosa / Xhosa (South Africa) 0x0434 xh-ZA")] Public Const SUBLANG_XHOSA_SOUTH_AFRICA  = &H01
[Description("Deprecated: use SUBLANG_SAKHA_RUSSIA instead")] Public Const SUBLANG_YAKUT_RUSSIA  = &H01
[Description("Yi (PRC)) 0x0478")] Public Const SUBLANG_YI_PRC  = &H01
[Description("Yoruba (Nigeria) 046a yo-NG")] Public Const SUBLANG_YORUBA_NIGERIA  = &H01
[Description("isiZulu / Zulu (South Africa) 0x0435 zu-ZA")] Public Const SUBLANG_ZULU_SOUTH_AFRICA  = &H01




Public Enum LCID_SORT_IDENTIFIERS
    SORT_DEFAULT = &H0
    SORT_INVARIANT_MATH = &H1
    SORT_JAPANESE_XJIS = &H0
    SORT_JAPANESE_UNICODE = &H1
    SORT_JAPANESE_RADICALSTROKE = &H4
    SORT_CHINESE_BIG5 = &H0
    SORT_CHINESE_PRCP = &H0
    SORT_CHINESE_UNICODE = &H1
    SORT_CHINESE_PRC = &H2
    SORT_CHINESE_BOPOMOFO = &H3
    SORT_CHINESE_RADICALSTROKE = &H4
    SORT_KOREAN_KSC = &H0
    SORT_KOREAN_UNICODE = &H1
    SORT_GERMAN_PHONE_BOOK = &H1
    SORT_HUNGARIAN_DEFAULT = &H0
    SORT_HUNGARIAN_TECHNICAL = &H1
    SORT_GEORGIAN_TRADITIONAL = &H0
    SORT_GEORGIAN_MODERN = &H1
End Enum


Public Const LOCALE_NAME_INVARIANT As String = ""
Public Const LOCALE_NAME_USER_DEFAULT As String = vbNullString
Public Const LOCALE_NAME_SYSTEM_DEFAULT As String = "!x-sys-default-locale"

Public Enum DefaultLocales
	LOCALE_CUSTOM_DEFAULT = &H0c00
	LOCALE_CUSTOM_UI_DEFAULT = &H1400
	LOCALE_CUSTOM_UNSPECIFIED = &H1000
	LOCALE_INVARIANT = &H007f
	LOCALE_USER_DEFAULT = &H0400
	LOCALE_SYSTEM_DEFAULT = &H0800
End Enum
Public Enum LCTypes
	LOCALE_NOUSEROVERRIDE = &H80000000  ' Not Recommended - do not use user overrides
	LOCALE_USE_CP_ACP = &H40000000  ' DEPRECATED, call Unicode APIs instead: use the system ACP
' #if(WINVER >= 0x0400)
	LOCALE_RETURN_NUMBER = &H20000000  ' return number instead of string
' #endif /* WINVER >= 0x0400 */
' #if (WINVER >= _WIN32_WINNT_WIN7)
	LOCALE_RETURN_GENITIVE_NAMES = &H10000000  'Flag to return the Genitive forms of month names
	LOCALE_ALLOW_NEUTRAL_NAMES = &H08000000  'Flag to allow returning neutral names/lcids for name conversion
' #endif //(WINVER >= _WIN32_WINNT_WIN7)
'   The following LCTypes are mutually exclusive in that they may NOT
'   be used in combination with each other.
'  These are the various forms of the name of the locale:
	LOCALE_SLOCALIZEDDISPLAYNAME = &H00000002  ' localized name of locale, eg "German (Germany)" in UI language
' #if (WINVER >= _WIN32_WINNT_WIN7)
	LOCALE_SENGLISHDISPLAYNAME = &H00000072  ' Display name (language + country/region usually) in English, eg "German (Germany)"
	LOCALE_SNATIVEDISPLAYNAME = &H00000073  ' Display name in native locale language, eg "Deutsch (Deutschland)
' #endif //(WINVER >= _WIN32_WINNT_WIN7)
' #if (WINVER >= _WIN32_WINNT_VISTA)
	LOCALE_SLOCALIZEDLANGUAGENAME = &H0000006f  ' Language Display Name for a language, eg "German" in UI language
' #endif //(WINVER >= _WIN32_WINNT_VISTA)
	LOCALE_SENGLISHLANGUAGENAME = &H00001001  ' English name of language, eg "German"
	LOCALE_SNATIVELANGUAGENAME = &H00000004  ' native name of language, eg "Deutsch"
	LOCALE_SLOCALIZEDCOUNTRYNAME = &H00000006  ' localized name of country/region, eg "Germany" in UI language
	LOCALE_SENGLISHCOUNTRYNAME = &H00001002  ' English name of country/region, eg "Germany"
	LOCALE_SNATIVECOUNTRYNAME = &H00000008  ' native name of country/region, eg "Deutschland"
'  Additional LCTypes
	LOCALE_IDIALINGCODE = &H00000005  ' country/region dialing code, example: en-US and en-CA return 1.
	LOCALE_SLIST = &H0000000C  ' list item separator, eg "," for "1,2,3,4"
	LOCALE_IMEASURE = &H0000000D  ' 0 = metric, 1 = US measurement system
	LOCALE_SDECIMAL = &H0000000E  ' decimal separator, eg "." for 1,234.00
	LOCALE_STHOUSAND = &H0000000F  ' thousand separator, eg "," for 1,234.00
	LOCALE_SGROUPING = &H00000010  ' digit grouping, eg "3;0" for 1,000,000
	LOCALE_IDIGITS = &H00000011  ' number of fractional digits eg 2 for 1.00
	LOCALE_ILZERO = &H00000012  ' leading zeros for decimal, 0 for .97, 1 for 0.97
	LOCALE_INEGNUMBER = &H00001010  ' negative number mode, 0-4, see documentation
	LOCALE_SNATIVEDIGITS = &H00000013  ' native digits for 0-9, eg "0123456789"
	LOCALE_SCURRENCY = &H00000014  ' local monetary symbol, eg "$"
	LOCALE_SINTLSYMBOL = &H00000015  ' intl monetary symbol, eg "USD"
	LOCALE_SMONDECIMALSEP = &H00000016  ' monetary decimal separator, eg "." for $1,234.00
	LOCALE_SMONTHOUSANDSEP = &H00000017  ' monetary thousand separator, eg "," for $1,234.00
	LOCALE_SMONGROUPING = &H00000018  ' monetary grouping, eg "3;0" for $1,000,000.00
	LOCALE_ICURRDIGITS = &H00000019  ' # local monetary digits, eg 2 for $1.00
	LOCALE_ICURRENCY = &H0000001B  ' positive currency mode, 0-3, see documentation
	LOCALE_INEGCURR = &H0000001C  ' negative currency mode, 0-15, see documentation
	LOCALE_SSHORTDATE = &H0000001F  ' short date format string, eg "MM/dd/yyyy"
	LOCALE_SLONGDATE = &H00000020  ' long date format string, eg "dddd, MMMM dd, yyyy"
	LOCALE_STIMEFORMAT = &H00001003  ' time format string, eg "HH:mm:ss"
	LOCALE_SAM = &H00000028  ' AM designator, eg "AM"
	LOCALE_SPM = &H00000029  ' PM designator, eg "PM"
	LOCALE_ICALENDARTYPE = &H00001009  ' type of calendar specifier, eg CAL_GREGORIAN
	LOCALE_IOPTIONALCALENDAR = &H0000100B  ' additional calendar types specifier, eg CAL_GREGORIAN_US
	LOCALE_IFIRSTDAYOFWEEK = &H0000100C  ' first day of week specifier, 0-6, 0=Monday, 6=Sunday
	LOCALE_IFIRSTWEEKOFYEAR = &H0000100D  ' first week of year specifier, 0-2, see documentation
	LOCALE_SDAYNAME1 = &H0000002A  ' long name for Monday
	LOCALE_SDAYNAME2 = &H0000002B  ' long name for Tuesday
	LOCALE_SDAYNAME3 = &H0000002C  ' long name for Wednesday
	LOCALE_SDAYNAME4 = &H0000002D  ' long name for Thursday
	LOCALE_SDAYNAME5 = &H0000002E  ' long name for Friday
	LOCALE_SDAYNAME6 = &H0000002F  ' long name for Saturday
	LOCALE_SDAYNAME7 = &H00000030  ' long name for Sunday
	LOCALE_SABBREVDAYNAME1 = &H00000031  ' abbreviated name for Monday
	LOCALE_SABBREVDAYNAME2 = &H00000032  ' abbreviated name for Tuesday
	LOCALE_SABBREVDAYNAME3 = &H00000033  ' abbreviated name for Wednesday
	LOCALE_SABBREVDAYNAME4 = &H00000034  ' abbreviated name for Thursday
	LOCALE_SABBREVDAYNAME5 = &H00000035  ' abbreviated name for Friday
	LOCALE_SABBREVDAYNAME6 = &H00000036  ' abbreviated name for Saturday
	LOCALE_SABBREVDAYNAME7 = &H00000037  ' abbreviated name for Sunday
	LOCALE_SMONTHNAME1 = &H00000038  ' long name for January
	LOCALE_SMONTHNAME2 = &H00000039  ' long name for February
	LOCALE_SMONTHNAME3 = &H0000003A  ' long name for March
	LOCALE_SMONTHNAME4 = &H0000003B  ' long name for April
	LOCALE_SMONTHNAME5 = &H0000003C  ' long name for May
	LOCALE_SMONTHNAME6 = &H0000003D  ' long name for June
	LOCALE_SMONTHNAME7 = &H0000003E  ' long name for July
	LOCALE_SMONTHNAME8 = &H0000003F  ' long name for August
	LOCALE_SMONTHNAME9 = &H00000040  ' long name for September
	LOCALE_SMONTHNAME10 = &H00000041  ' long name for October
	LOCALE_SMONTHNAME11 = &H00000042  ' long name for November
	LOCALE_SMONTHNAME12 = &H00000043  ' long name for December
	LOCALE_SMONTHNAME13 = &H0000100E  ' long name for 13th month (if exists)
	LOCALE_SABBREVMONTHNAME1 = &H00000044  ' abbreviated name for January
	LOCALE_SABBREVMONTHNAME2 = &H00000045  ' abbreviated name for February
	LOCALE_SABBREVMONTHNAME3 = &H00000046  ' abbreviated name for March
	LOCALE_SABBREVMONTHNAME4 = &H00000047  ' abbreviated name for April
	LOCALE_SABBREVMONTHNAME5 = &H00000048  ' abbreviated name for May
	LOCALE_SABBREVMONTHNAME6 = &H00000049  ' abbreviated name for June
	LOCALE_SABBREVMONTHNAME7 = &H0000004A  ' abbreviated name for July
	LOCALE_SABBREVMONTHNAME8 = &H0000004B  ' abbreviated name for August
	LOCALE_SABBREVMONTHNAME9 = &H0000004C  ' abbreviated name for September
	LOCALE_SABBREVMONTHNAME10 = &H0000004D  ' abbreviated name for October
	LOCALE_SABBREVMONTHNAME11 = &H0000004E  ' abbreviated name for November
	LOCALE_SABBREVMONTHNAME12 = &H0000004F  ' abbreviated name for December
	LOCALE_SABBREVMONTHNAME13 = &H0000100F  ' abbreviated name for 13th month (if exists)
	LOCALE_SPOSITIVESIGN = &H00000050  ' positive sign, eg ""
	LOCALE_SNEGATIVESIGN = &H00000051  ' negative sign, eg "-"
	LOCALE_IPOSSIGNPOSN = &H00000052  ' positive sign position (derived from INEGCURR)
	LOCALE_INEGSIGNPOSN = &H00000053  ' negative sign position (derived from INEGCURR)
	LOCALE_IPOSSYMPRECEDES = &H00000054  ' mon sym precedes pos amt (derived from ICURRENCY)
	LOCALE_IPOSSEPBYSPACE = &H00000055  ' mon sym sep by space from pos amt (derived from ICURRENCY)
	LOCALE_INEGSYMPRECEDES = &H00000056  ' mon sym precedes neg amt (derived from INEGCURR)
	LOCALE_INEGSEPBYSPACE = &H00000057  ' mon sym sep by space from neg amt (derived from INEGCURR)
' #if(WINVER >= 0x0400)
	LOCALE_FONTSIGNATURE = &H00000058  ' font signature
	LOCALE_SISO639LANGNAME = &H00000059  ' ISO abbreviated language name, eg "en"
	LOCALE_SISO3166CTRYNAME = &H0000005A  ' ISO abbreviated country/region name, eg "US"
' #endif /* WINVER >= 0x0400 */
' #if(WINVER >= 0x0500)
	LOCALE_IPAPERSIZE = &H0000100A  ' 1 = letter, 5 = legal, 8 = a3, 9 = a4
	LOCALE_SENGCURRNAME = &H00001007  ' english name of currency, eg "Euro"
	LOCALE_SNATIVECURRNAME = &H00001008  ' native name of currency, eg "euro"
	LOCALE_SYEARMONTH = &H00001006  ' year month format string, eg "MM/yyyy"
	LOCALE_SSORTNAME = &H00001013  ' sort name, usually "", eg "Dictionary" in UI Language
	LOCALE_IDIGITSUBSTITUTION = &H00001014  ' 0 = context, 1 = none, 2 = national
' #endif /* WINVER >= 0x0500 */
' #if (WINVER >= 0x0600)
	LOCALE_SNAME = &H0000005c  ' locale name (ie: en-us)
	LOCALE_SDURATION = &H0000005d  ' time duration format, eg "hh:mm:ss"
	LOCALE_SSHORTESTDAYNAME1 = &H00000060  ' Shortest day name for Monday
	LOCALE_SSHORTESTDAYNAME2 = &H00000061  ' Shortest day name for Tuesday
	LOCALE_SSHORTESTDAYNAME3 = &H00000062  ' Shortest day name for Wednesday
	LOCALE_SSHORTESTDAYNAME4 = &H00000063  ' Shortest day name for Thursday
	LOCALE_SSHORTESTDAYNAME5 = &H00000064  ' Shortest day name for Friday
	LOCALE_SSHORTESTDAYNAME6 = &H00000065  ' Shortest day name for Saturday
	LOCALE_SSHORTESTDAYNAME7 = &H00000066  ' Shortest day name for Sunday
	LOCALE_SISO639LANGNAME2 = &H00000067  ' 3 character ISO abbreviated language name, eg "eng"
	LOCALE_SISO3166CTRYNAME2 = &H00000068  ' 3 character ISO country/region name, eg "USA"
	LOCALE_SNAN = &H00000069  ' Not a Number, eg "NaN"
	LOCALE_SPOSINFINITY = &H0000006a  ' + Infinity, eg "infinity"
	LOCALE_SNEGINFINITY = &H0000006b  ' - Infinity, eg "-infinity"
	LOCALE_SSCRIPTS = &H0000006c  ' Typical scripts in the locale: ; delimited script codes, eg "Latn;"
	LOCALE_SPARENT = &H0000006d  ' Fallback name for resources, eg "en" for "en-US"
	LOCALE_SCONSOLEFALLBACKNAME = &H0000006e  ' Fallback name for within the console for Unicode Only locales, eg "en" for bn-IN
' #endif //(WINVER >= 0x0600)
' #if (WINVER >= _WIN32_WINNT_WIN7)
	LOCALE_IREADINGLAYOUT = &H00000070  ' Returns one of the following 4 reading layout values:
'  0 - Left to right (eg en-US)
'  1 - Right to left (eg arabic locales)
'  2 - Vertical top to bottom with columns to the left and also left to right (ja-JP locales)
'  3 - Vertical top to bottom with columns proceeding to the right
	LOCALE_INEUTRAL = &H00000071  ' Returns 0 for specific cultures, 1 for neutral cultures.
	LOCALE_INEGATIVEPERCENT = &H00000074  ' Returns 0-11 for the negative percent format
	LOCALE_IPOSITIVEPERCENT = &H00000075  ' Returns 0-3 for the positive percent formatIPOSITIVEPERCENT
	LOCALE_SPERCENT = &H00000076  ' Returns the percent symbol
	LOCALE_SPERMILLE = &H00000077  ' Returns the permille (U+2030) symbol
	LOCALE_SMONTHDAY = &H00000078  ' Returns the preferred month/day format
	LOCALE_SSHORTTIME = &H00000079  ' Returns the preferred short time format (ie: no seconds, just h:mm)
	LOCALE_SOPENTYPELANGUAGETAG = &H0000007a  ' Open type language tag, eg: "latn" or "dflt"
	LOCALE_SSORTLOCALE = &H0000007b  ' Name of locale to use for sorting/collation/casing behavior.
' #endif //(WINVER >= _WIN32_WINNT_WIN7)
' #if (WINVER >= _WIN32_WINNT_WIN8)
	LOCALE_SRELATIVELONGDATE = &H0000007c  ' Long date without year, day of week, month, date, eg: for lock screen
' #endif
' #if (WINVER >= _WIN32_WINNT_WINBLUE)
	LOCALE_ICONSTRUCTEDLOCALE = &H0000007d  ' Flags if this locale is constructed.  Avoid using.
' #endif
' #if (WINVER >= _WIN32_WINNT_WIN10)
	LOCALE_SSHORTESTAM = &H0000007e  ' Shortest AM designator, eg "A"
	LOCALE_SSHORTESTPM = &H0000007f  ' Shortest PM designator, eg "P"
' #endif
' #if (NTDDI_VERSION >= NTDDI_WIN10_MN)
	LOCALE_IUSEUTF8LEGACYACP = &H00000666  ' default ansi code page (use of Unicode is recommended instead)
	LOCALE_IUSEUTF8LEGACYOEMCP = &H00000999  ' default oem code page (use of Unicode is recommended instead)
' #endif
'  DEPRECATED LCTYPEs
'  DEPRECATED LCTYPEs for Code Pages
'  Applications are strongly encouraged to Use Unicode, such as UTF-16 (WCHAR type)
'  or the CP_UTF8 Code Page.  Legacy encodings are unable to represent the full
'  set of scripts/language and characters (& emoji!) available on modern computers.
'  Use of legacy code pages (encodings) is a leading cause of data loss and corruption.
	LOCALE_IDEFAULTCODEPAGE = &H0000000B  ' default oem code page for locale (user may configure as UTF-8, use of Unicode is recommended instead)
	LOCALE_IDEFAULTANSICODEPAGE = &H00001004  ' default ansi code page for locale (user may configure as UTF-8, use of Unicode is recommended instead)
	LOCALE_IDEFAULTMACCODEPAGE = &H00001011  ' default mac code page for locale (user may configure as UTF-8, use of Unicode is recommended instead)
' #if(WINVER >= 0x0500)
	LOCALE_IDEFAULTEBCDICCODEPAGE = &H00001012  ' default ebcdic code page for a locale (use of Unicode is recommended instead)
' #endif /* WINVER >= 0x0500 */
'  LCTYPEs using out-of-date concepts
	LOCALE_ILANGUAGE = &H00000001  ' DEPRECATED language id (LCID), LOCALE_SNAME preferred
	LOCALE_SABBREVLANGNAME = &H00000003  ' DEPRECATED arbitrary abbreviated language name, LOCALE_SISO639LANGNAME instead.
	LOCALE_SABBREVCTRYNAME = &H00000007  ' DEPRECATED arbitrary abbreviated country/region name, LOCALE_SISO3166CTRYNAME instead.
	LOCALE_IGEOID = &H0000005B  ' DEPRECATED geographical location id, use LOCALE_SISO3166CTRYNAME instead.
	LOCALE_IDEFAULTLANGUAGE = &H00000009  ' DEPRECATED default language id, deprecated
	LOCALE_IDEFAULTCOUNTRY = &H0000000A  ' DEPRECATED default country/region code, deprecated
	LOCALE_IINTLCURRDIGITS = &H0000001A  ' DEPRECATED, use LOCALE_ICURRDIGITS # intl monetary digits, eg 2 for $1.00
'  Derived legacy date & time values for compatibility only.
'  Please use the appropriate date or time pattern instead.
'  These can be misleading, for example a locale configured as 12h24m52s could have a time separator of "h".
	LOCALE_SDATE = &H0000001D  ' DEPRECATED date separator (derived from LOCALE_SSHORTDATE, use that instead)
	LOCALE_STIME = &H0000001E  ' DEPRECATED time separator (derived from LOCALE_STIMEFORMAT, use that instead)
	LOCALE_IDATE = &H00000021  ' DEPRECATED short date format ordering (derived from LOCALE_SSHORTDATE, use that instead)
	LOCALE_ILDATE = &H00000022  ' DEPRECATED long date format ordering (derived from LOCALE_SLONGDATE, use that instead)
	LOCALE_ITIME = &H00000023  ' DEPRECATED time format specifier (derived from LOCALE_STIMEFORMAT, use that instead)
	LOCALE_ITIMEMARKPOSN = &H00001005  ' DEPRECATED time marker position (derived from LOCALE_STIMEFORMAT, use that instead)
	LOCALE_ICENTURY = &H00000024  ' DEPRECATED century format specifier (short date, LOCALE_SSHORTDATE is preferred)
	LOCALE_ITLZERO = &H00000025  ' DEPRECATED leading zeros in time field (derived from LOCALE_STIMEFORMAT, use that instead)
	LOCALE_IDAYLZERO = &H00000026  ' DEPRECATED leading zeros in day field (short date, LOCALE_SSHORTDATE is preferred)
	LOCALE_IMONLZERO = &H00000027  ' DEPRECATED leading zeros in month field (short date, LOCALE_SSHORTDATE is preferred)
' #if(WINVER >= 0x0600)
	LOCALE_SKEYBOARDSTOINSTALL = &H0000005e  ' Used internally, see GetKeyboardLayoutName() function
' #endif /* WINVER >= 0x0600 */
'  LCTYPEs which have been renamed to enable more understandable source code.
	LOCALE_SLANGUAGE = LOCALE_SLOCALIZEDDISPLAYNAME  ' DEPRECATED as new name is more readable.
	LOCALE_SLANGDISPLAYNAME = LOCALE_SLOCALIZEDLANGUAGENAME  ' DEPRECATED as new name is more readable.
	LOCALE_SENGLANGUAGE = LOCALE_SENGLISHLANGUAGENAME  ' DEPRECATED as new name is more readable.
	LOCALE_SNATIVELANGNAME = LOCALE_SNATIVELANGUAGENAME  ' DEPRECATED as new name is more readable.
	LOCALE_SCOUNTRY = LOCALE_SLOCALIZEDCOUNTRYNAME  ' DEPRECATED as new name is more readable.
	LOCALE_SENGCOUNTRY = LOCALE_SENGLISHCOUNTRYNAME  ' DEPRECATED as new name is more readable.
	LOCALE_SNATIVECTRYNAME = LOCALE_SNATIVECOUNTRYNAME  ' DEPRECATED as new name is more readable.
'  DEPRECATED: Use LOCALE_SISO3166CTRYNAME to query for a region identifier, LOCALE_ICOUNTRY is not a region identifier.
	LOCALE_ICOUNTRY = LOCALE_IDIALINGCODE  ' Deprecated synonym for LOCALE_IDIALINGCODE
	LOCALE_S1159 = LOCALE_SAM  ' DEPRECATED: Please use LOCALE_SAM, which is more readable.
	LOCALE_S2359 = LOCALE_SPM  ' DEPRECATED: Please use LOCALE_SPM, which is more readable.
End Enum


Public Enum GST_Class
    CT_CTYPE1 = &H1          ' ctype 1 information
    CT_CTYPE2 = &H2          ' ctype 2 information
    CT_CTYPE3 = &H4          ' ctype 3 information
End Enum
Public Enum C1_CharTypes
    C1_UPPER = &H1      ' upper case
    C1_LOWER = &H2      ' lower case
    C1_DIGIT = &H4      ' decimal digits
    C1_SPACE = &H8      ' spacing characters
    C1_PUNCT = &H10     ' punctuation characters
    C1_CNTRL = &H20     ' control characters
    C1_BLANK = &H40     ' blank characters
    C1_XDIGIT = &H80     ' other digits
    C1_ALPHA = &H100    ' any linguistic character
    C1_DEFINED = &H200    ' defined character
End Enum
Public Enum C2_CharTypes
	C2_LEFTTORIGHT = &H0001  ' left to right
	C2_RIGHTTOLEFT = &H0002  ' right to left
	C2_EUROPENUMBER = &H0003  ' European number, digit
	C2_EUROPESEPARATOR = &H0004  ' European numeric separator
	C2_EUROPETERMINATOR = &H0005  ' European numeric terminator
	C2_ARABICNUMBER = &H0006  ' Arabic number
	C2_COMMONSEPARATOR = &H0007  ' common numeric separator
	C2_BLOCKSEPARATOR = &H0008  ' block separator
	C2_SEGMENTSEPARATOR = &H0009  ' segment separator
	C2_WHITESPACE = &H000A  ' white space
	C2_OTHERNEUTRAL = &H000B  ' other neutrals
	C2_NOTAPPLICABLE = &H0000  ' no implicit directionality
End Enum
Public Enum C3_CharTypes
	C3_NONSPACING = &H0001  ' nonspacing character
	C3_DIACRITIC = &H0002  ' diacritic mark
	C3_VOWELMARK = &H0004  ' vowel mark
	C3_SYMBOL = &H0008  ' symbols
	C3_KATAKANA = &H0010  ' katakana character
	C3_HIRAGANA = &H0020  ' hiragana character
	C3_HALFWIDTH = &H0040  ' half width character
	C3_FULLWIDTH = &H0080  ' full width character
	C3_IDEOGRAPH = &H0100  ' ideographic character
	C3_KASHIDA = &H0200  ' Arabic kashida character
	C3_LEXICAL = &H0400  ' lexical character
	C3_HIGHSURROGATE = &H0800  ' high surrogate code unit
	C3_LOWSURROGATE = &H1000  ' low surrogate code unit
	C3_ALPHA = &H8000&  ' any linguistic char (C1_ALPHA)
	C3_NOTAPPLICABLE = &H0000  ' ctype 3 is not applicable
End Enum



Public Enum WCMB_Flags
	WC_COMPOSITECHECK = &H00000200  ' convert composite to precomposed
	WC_DISCARDNS = &H00000010  ' discard non-spacing chars          // Used with WC_COMPOSITECHECK
	WC_SEPCHARS = &H00000020  ' generate separate chars            // Used with WC_COMPOSITECHECK
	WC_DEFAULTCHAR = &H00000040  ' replace w/ default char            // Used with WC_COMPOSITECHECK
	WC_ERR_INVALID_CHARS = &H00000080  ' error for invalid chars
	WC_NO_BEST_FIT_CHARS = &H00000400  ' do not use best fit chars
End Enum


Public Enum FileAccessRights
	FILE_READ_DATA = (&H0001)  ' file & pipe
	FILE_LIST_DIRECTORY = (&H0001)  ' directory
	FILE_WRITE_DATA = (&H0002)  ' file & pipe
	FILE_ADD_FILE = (&H0002)  ' directory
	FILE_APPEND_DATA = (&H0004)  ' file
	FILE_ADD_SUBDIRECTORY = (&H0004)  ' directory
	FILE_CREATE_PIPE_INSTANCE = (&H0004)  ' named pipe
	FILE_READ_EA = (&H0008)  ' file & directory
	FILE_WRITE_EA = (&H0010)  ' file & directory
	FILE_EXECUTE = (&H0020)  ' file
	FILE_TRAVERSE = (&H0020)  ' directory
	FILE_DELETE_CHILD = (&H0040)  ' directory
	FILE_READ_ATTRIBUTES = (&H0080)  ' all
	FILE_WRITE_ATTRIBUTES = (&H0100)  ' all
	FILE_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or SYNCHRONIZE Or &H1FF)
	FILE_GENERIC_READ = (STANDARD_RIGHTS_READ Or FILE_READ_DATA Or FILE_READ_ATTRIBUTES Or FILE_READ_EA Or SYNCHRONIZE)
	FILE_GENERIC_WRITE = (STANDARD_RIGHTS_WRITE Or FILE_WRITE_DATA Or FILE_WRITE_ATTRIBUTES Or FILE_WRITE_EA Or FILE_APPEND_DATA Or SYNCHRONIZE)
	FILE_GENERIC_EXECUTE = (STANDARD_RIGHTS_EXECUTE Or FILE_READ_ATTRIBUTES Or FILE_EXECUTE Or SYNCHRONIZE)
End Enum
Public Enum DirectoryAccessRights
    DIRECTORY_QUERY = (&H0001)
    DIRECTORY_TRAVERSE = (&H0002)
    DIRECTORY_CREATE_OBJECT = (&H0004)
    DIRECTORY_CREATE_SUBDIRECTORY = (&H0008)
    DIRECTORY_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or &HF)
End Enum
Public Enum SymbolicLinkAccessRights
    SYMBOLIC_LINK_QUERY = (&H0001)
    SYMBOLIC_LINK_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or &H1)
End Enum
Public Enum EventAccessRights
    EVENT_ALL_ACCESS = &H1F0003
    EVENT_MODIFY_STATE = &H0002
End Enum
Public Enum MutexAccessRights
    MUTEX_ALL_ACCESS = &H1F0001
    MUTEX_MODIFY_STATE = &H0001
End Enum
Public Enum SemaphoreAccessRights
    SEMAPHORE_ALL_ACCESS = &H1F0003
    SEMAPHORE_MODIFY_STATE = &H0002
End Enum
Public Enum TimerAccessRights
    TIMER_ALL_ACCESS = &H1F0003
    TIMER_MODIFY_STATE = &H0002
    TIMER_QUERY_STATE = &H0001
End Enum

Public Const INVALID_HANDLE_VALUE = -1&

Public Enum ProcessAccessRights
    PROCESS_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or SYNCHRONIZE Or &HFFFF&)
    PROCESS_TERMINATE = &H1 ' Enables using the process handle in the TerminateProcess function to terminate the process.
    PROCESS_CREATE_THREAD = &H2   ' Enables using the process handle in the CreateRemoteThread function to create a thread in the process.
    PROCESS_VM_OPERATION = &H8 ' Enables using the process handle in the VirtualProtectEx and WriteProcessMemory functions to modify the virtual memory of the process.
    PROCESS_VM_READ = &H10     ' Enables using the process handle in the ReadProcessMemory function to read from the virtual memory of the process.
    PROCESS_VM_WRITE = &H20 ' Enables using the process handle in the WriteProcessMemory function to write to the virtual memory of the process.
    PROCESS_DUP_HANDLE = &H40   ' Enables using the process handle as either the source or target process in the DuplicateHandle function to duplicate a handle
    PROCESS_SET_INFORMATION = &H200 ' Enables using the process handle in the SetPriorityClass function to set the priority class of the process.
    PROCESS_QUERY_INFORMATION = &H400 ' Enables using the process handle in the GetExitCodeProcess and GetPriorityClass functions to read information from the process object.
    PROCESS_QUERY_LIMITED_INFORMATION = &H1000
End Enum

Public Enum MBWC_Flags
    MB_PRECOMPOSED = &H1
    MB_COMPOSITE = &H2
    MB_USEGLYPHCHARS = &H4
    MB_ERR_INVALID_CHARS = &H8
End Enum



Public Enum ResourceTypes
        RT_CURSOR = 1
        RT_BITMAP = 2
        RT_ICON = 3
        RT_MENU = 4
        RT_DIALOG = 5
        RT_STRING = 6
        RT_FONTDIR = 7
        RT_FONT = 8
        RT_ACCELERATOR = 9
        RT_RCDATA = 10
        RT_MESSAGETABLE = 11
        RT_GROUP_CURSOR = 12
        RT_GROUP_ICON = 14
        RT_VERSION = 16
        RT_DLGINCLUDE = 17
        RT_PLUGPLAY = 19
        RT_VXD = 20
        RT_ANICURSOR = 21
        RT_ANIICON = 22
        RT_HTML = 23
        RT_MANIFEST = 24
End Enum
Public Const CREATEPROCESS_MANIFEST_RESOURCE_ID  = 1
Public Const ISOLATIONAWARE_MANIFEST_RESOURCE_ID  = 2
Public Const ISOLATIONAWARE_NOSTATICIMPORT_MANIFEST_RESOURCE_ID  = 3
Public Const ISOLATIONPOLICY_MANIFEST_RESOURCE_ID  = 4
Public Const ISOLATIONPOLICY_BROWSER_MANIFEST_RESOURCE_ID  = 5
Public Const MINIMUM_RESERVED_MANIFEST_RESOURCE_ID  = 1 /* inclusive */
Public Const MAXIMUM_RESERVED_MANIFEST_RESOURCE_ID  = 16 /* inclusive */


Public Enum ResourceEnumFlags
	RESOURCE_ENUM_LN = (&H0001)
	RESOURCE_ENUM_MUI = (&H0002)
	RESOURCE_ENUM_MUI_SYSTEM = (&H0004)
	RESOURCE_ENUM_VALIDATE = (&H0008)
	RESOURCE_ENUM_MODULE_EXACT = (&H0010)
End Enum

Public Const SUPPORT_LANG_NUMBER = 32

Public Enum FindResourceFlags
	FIND_RESOURCE_DIRECTORY_TYPES = (&H0100)
	FIND_RESOURCE_DIRECTORY_NAMES = (&H0200)
	FIND_RESOURCE_DIRECTORY_LANGUAGES = (&H0400)
End Enum

Public Type ENUMUILANG
	NumOfEnumUILang As Long ' Acutall number of enumerated languages
	SizeOfEnumUIBuffer As Long ' Buffer size of pMUIEnumUILanguages
	pEnumUIBuffer As LongPtr
End Type



Public Enum LoadLibraryFlags
    DONT_RESOLVE_DLL_REFERENCES = &H00000001
    LOAD_LIBRARY_AS_DATAFILE = &H00000002
    LOAD_PACKAGED_LIBRARY = &H00000004
    LOAD_WITH_ALTERED_SEARCH_PATH = &H00000008
    LOAD_IGNORE_CODE_AUTHZ_LEVEL = &H00000010
    LOAD_LIBRARY_AS_IMAGE_RESOURCE = &H00000020
    LOAD_LIBRARY_AS_DATAFILE_EXCLUSIVE = &H00000040
    LOAD_LIBRARY_REQUIRE_SIGNED_TARGET = &H00000080
    LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR = &H00000100
    LOAD_LIBRARY_SEARCH_APPLICATION_DIR = &H00000200
    LOAD_LIBRARY_SEARCH_USER_DIRS = &H00000400
    LOAD_LIBRARY_SEARCH_SYSTEM32 = &H00000800
    LOAD_LIBRARY_SEARCH_DEFAULT_DIRS = &H00001000
    LOAD_LIBRARY_SAFE_CURRENT_DIRS = &H00002000
    LOAD_LIBRARY_SEARCH_SYSTEM32_NO_FORWARDER = &H00004000
    LOAD_LIBRARY_OS_INTEGRITY_CONTINUITY = &H00008000&
End Enum

Public Enum LockFileExFlags
    LOCKFILE_FAIL_IMMEDIATELY = &H0001
    LOCKFILE_EXCLUSIVE_LOCK = &H0002
End Enum

Public Enum FileBaseType
    FILE_TYPE_UNKNOWN = &H0000
    FILE_TYPE_DISK = &H0001
    FILE_TYPE_CHAR = &H0002
    FILE_TYPE_PIPE = &H0003
    FILE_TYPE_REMOTE = &H8000&
End Enum

Public Enum NTSectionAccessRights
    SECTION_QUERY = &H0001
    SECTION_MAP_WRITE = &H0002
    SECTION_MAP_READ = &H0004
    SECTION_MAP_EXECUTE = &H0008
    SECTION_EXTEND_SIZE = &H0010
    SECTION_MAP_EXECUTE_EXPLICIT = &H0020  ' not included in SECTION_ALLACCESS
    SECTION_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or SECTION_QUERY Or SECTION_MAP_WRITE Or SECTION_MAP_READ Or SECTION_MAP_EXECUTE Or SECTION_EXTEND_SIZE)
End Enum

Public Enum NTSectionFlags
	SEC_HUGE_PAGES = &H00020000
	SEC_PARTITION_OWNER_HANDLE = &H00040000
	SEC_64K_PAGES = &H00080000
	SEC_FILE = &H00800000
	SEC_IMAGE = &H01000000
	SEC_PROTECTED_IMAGE = &H02000000
	SEC_RESERVE = &H04000000
	SEC_COMMIT = &H08000000
	SEC_NOCACHE = &H10000000
	SEC_WRITECOMBINE = &H40000000
	SEC_LARGE_PAGES = &H80000000
	SEC_IMAGE_NO_EXECUTE = (SEC_IMAGE Or SEC_NOCACHE)
End Enum

Public Enum FileMapFlags
	FILE_MAP_WRITE = SECTION_MAP_WRITE
	FILE_MAP_READ = SECTION_MAP_READ
	FILE_MAP_ALL_ACCESS = SECTION_ALL_ACCESS
	FILE_MAP_EXECUTE = SECTION_MAP_EXECUTE_EXPLICIT  ' not included in FILE_MAP_ALL_ACCESS
	FILE_MAP_COPY = &H00000001
	FILE_MAP_RESERVE = &H80000000
	FILE_MAP_TARGETS_INVALID = &H40000000
	FILE_MAP_LARGE_PAGES = &H20000000
End Enum

Public Enum MEM_EXTENDED_PARAMETER_TYPE
	MemExtendedParameterInvalidType = 0
	MemExtendedParameterAddressRequirements = 1
	MemExtendedParameterNumaNode = 2
	MemExtendedParameterPartitionHandle = 3
	MemExtendedParameterUserPhysicalHandle = 4
	MemExtendedParameterAttributeFlags = 5
	MemExtendedParameterImageMachine = 6
	MemExtendedParameterMax = 7
End Enum
Public Type MEM_EXTENDED_PARAMETER
	Type As LongLong
    SizeOrHandleOrPointer As LongPtr
End Type
Public Type MEM_ADDRESS_REQUIREMENTS
    LowestStartingAddress As LongPtr
    HighestEndingAddress As LongPtr
    Alignment As LongPtr
End Type

Public Type MEMORY_BASIC_INFORMATION
	BaseAddress As LongPtr
	AllocationBase As LongPtr
	AllocationProtect As MemProtectFlags
	PartitionId As Integer
	RegionSize As LongPtr
	State As MemAllocType
	Protect As MemProtectFlags
	Type As MemAllocType
End Type

Public Enum PROCESSOR_ARCHITECTURE
	PROCESSOR_ARCHITECTURE_INTEL = 0
	PROCESSOR_ARCHITECTURE_MIPS = 1
	PROCESSOR_ARCHITECTURE_ALPHA = 2
	PROCESSOR_ARCHITECTURE_PPC = 3
	PROCESSOR_ARCHITECTURE_SHX = 4
	PROCESSOR_ARCHITECTURE_ARM = 5
	PROCESSOR_ARCHITECTURE_IA64 = 6
	PROCESSOR_ARCHITECTURE_ALPHA64 = 7
	PROCESSOR_ARCHITECTURE_MSIL = 8
	PROCESSOR_ARCHITECTURE_AMD64 = 9
	PROCESSOR_ARCHITECTURE_IA32_ON_WIN64 = 10
	PROCESSOR_ARCHITECTURE_NEUTRAL = 11
	PROCESSOR_ARCHITECTURE_ARM64 = 12
	PROCESSOR_ARCHITECTURE_ARM32_ON_WIN64 = 13
	PROCESSOR_ARCHITECTURE_IA32_ON_ARM64 = 14
    '[IgnoreWarnings(TB0012)]
    PROCESSOR_ARCHITECTURE_UNKNOWN = &HFFFF&
End Enum

Public Type SYSTEM_INFO
	wProcessorArchitecture As Integer
    wReserved As Integer
	dwPageSize As Long
	lpMinimumApplicationAddress As LongPtr
	lpMaximumApplicationAddress As LongPtr
	dwActiveProcessorMask As LongPtr
	dwNumberOfProcessors As Long
	dwProcessorType As Long
	dwAllocationGranularity As Long
	wProcessorLevel As Integer
	wProcessorRevision As Integer
End Type

Public Enum InitCriticalSectExFlags
    CRITICAL_SECTION_NO_DEBUG_INFO = &H01000000
End Enum

Public Enum CreateMutexExFlags
    CREATE_MUTEX_INITIAL_OWNER = &H00000001
End Enum

Public Enum CreateWaitableTimerExFlags
    CREATE_WAITABLE_TIMER_MANUAL_RESET = &H00000001
    CREATE_WAITABLE_TIMER_HIGH_RESOLUTION = &H00000002
End Enum

Public Enum WaitForObjOutcomes
    WAIT_FAILED = (&HFFFFFFFF)
    WAIT_OBJECT_0 = ((STATUS_WAIT_0) + 0)

    WAIT_ABANDONED = ((STATUS_ABANDONED_WAIT_0) + 0)
    WAIT_ABANDONED_0 = ((STATUS_ABANDONED_WAIT_0) + 0)

    WAIT_IO_COMPLETION = STATUS_USER_APC
End Enum

Public Enum ReasonCtxFlags
    POWER_REQUEST_CONTEXT_SIMPLE_STRING = &H00000001
    POWER_REQUEST_CONTEXT_DETAILED_STRING = &H00000002
End Enum
Public Type REASON_CONTEXT_DETAILED
    LocalizedReasonModule As LongPtr
    LocalizedReasonId As Long
    ReasonStringCount As Long
    ReasonStrings As LongPtr
End Type
[Description("For the union, either copy a string pointer, or use the REASON_CONTEXT_DETAILED type and copy that.")]
Public Type REASON_CONTEXT
    Version As Long
    Flags As ReasonCtxFlags
    [Description("For the union, either copy a string pointer, or use the REASON_CONTEXT_DETAILED type and copy that.")]
    #If Win64 Then
    union(23) As Byte
    #Else
    union(15) As Byte
    #End If
End Type

Public Type RTL_BARRIER
	Reserved1 As Long
	Reserved2 As Long
	Reserved3(0 To 1) As LongPtr
	Reserved4 As Long
	Reserved5 As Long
End Type
'Alias SYNCHRONIZATION_BARRIER As RTL_BARRIER
Public Type SYNCHRONIZATION_BARRIER
    Reserved1 As Long
    Reserved2 As Long
    Reserved3(0 To 1) As LongPtr
    Reserved4 As Long
    Reserved5 As Long
End Type
Public Enum SyncBarrierFlags
	SYNCHRONIZATION_BARRIER_FLAGS_SPIN_ONLY = &H01
	SYNCHRONIZATION_BARRIER_FLAGS_BLOCK_ONLY = &H02
	SYNCHRONIZATION_BARRIER_FLAGS_NO_DELETE = &H04
End Enum

Public Enum ActivationContextFlags
	ACTCTX_FLAG_PROCESSOR_ARCHITECTURE_VALID = (&H00000001)
	ACTCTX_FLAG_LANGID_VALID = (&H00000002)
	ACTCTX_FLAG_ASSEMBLY_DIRECTORY_VALID = (&H00000004)
	ACTCTX_FLAG_RESOURCE_NAME_VALID = (&H00000008)
	ACTCTX_FLAG_SET_PROCESS_DEFAULT = (&H00000010)
	ACTCTX_FLAG_APPLICATION_NAME_VALID = (&H00000020)
	ACTCTX_FLAG_SOURCE_IS_ASSEMBLYREF = (&H00000040)
	ACTCTX_FLAG_HMODULE_VALID = (&H00000080)
End Enum
Public Type ACTCTXA
	cbSize As Long
	dwFlags As ActivationContextFlags
	lpSource As String
	wProcessorArchitecture As Integer
	wLangId As Integer
	lpAssemblyDirectory As String
	lpResourceName As String
	lpApplicationName As String
	hModule As LongPtr
End Type
Public Type ACTCTXW
    cbSize As Long
    dwFlags As ActivationContextFlags
    lpSource As LongPtr
    wProcessorArchitecture As Integer
    wLangId As Integer
    lpAssemblyDirectory As LongPtr
    lpResourceName As LongPtr
    lpApplicationName As LongPtr
    hModule As LongPtr
End Type
Public Type ACTCTX
    cbSize As Long
    dwFlags As ActivationContextFlags
    lpSource As LongPtr
    wProcessorArchitecture As Integer
    wLangId As Integer
    lpAssemblyDirectory As LongPtr
    lpResourceName As LongPtr
    lpApplicationName As LongPtr
    hModule As LongPtr
End Type
Public Enum DeactivateActCtxFlags
    DEACTIVATE_ACTCTX_FLAG_FORCE_EARLY_DEACTIVATION = (&H00000001)
End Enum

Public Type ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA
	lpInformation As LongPtr
	lpSectionBase As LongPtr
	ulSectionLength As Long
	lpSectionGlobalDataBase As LongPtr
	ulSectionGlobalDataLength As Long
End Type

Public Type ACTCTX_SECTION_KEYED_DATA_2600
    cbSize As Long
    ulDataFormatVersion As Long
    lpData As LongPtr
    ulLength As Long
    lpSectionGlobalData As LongPtr
    ulSectionGlobalDataLength As Long
    lpSectionBase As LongPtr
    ulSectionTotalLength As Long
    hActCtx As LongPtr
    ulAssemblyRosterIndex As Long
End Type
Public Enum ActivationContextKeyedDataFlags
	FIND_ACTCTX_SECTION_KEY_RETURN_HACTCTX = (&H00000001)
	FIND_ACTCTX_SECTION_KEY_RETURN_FLAGS = (&H00000002)
	FIND_ACTCTX_SECTION_KEY_RETURN_ASSEMBLY_METADATA = (&H00000004)
End Enum
Public Type ACTCTX_SECTION_KEYED_DATA
	cbSize As Long
	ulDataFormatVersion As Long
	lpData As LongPtr
	ulLength As Long
	lpSectionGlobalData As LongPtr
	ulSectionGlobalDataLength As Long
	lpSectionBase As LongPtr
	ulSectionTotalLength As Long
	hActCtx As LongPtr
	ulAssemblyRosterIndex As Long
	' 2600 stops here
	ulFlags As Long
	AssemblyMetadata As ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA
End Type

Public Enum ActivationContextSections
	ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION = (1)
	ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION = (2)
	ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION = (3)
	ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION = (4)
	ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION = (5)
	ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION = (6)
	ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION = (7)
	ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE = (8)
	ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES = (9)
	ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS = (10)
	ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO = (11)
	ACTIVATION_CONTEXT_SECTION_WINRT_ACTIVATABLE_CLASSES = (12)
End Enum

Public Enum ACTIVATION_CONTEXT_INFO_CLASS
	ActivationContextBasicInformation = 1
	ActivationContextDetailedInformation = 2
	AssemblyDetailedInformationInActivationContext = 3
	FileInformationInAssemblyOfAssemblyInActivationContext = 4
	RunlevelInformationInActivationContext = 5
	CompatibilityInformationInActivationContext = 6
	ActivationContextManifestResourceName = 7
	MaxActivationContextInfoClass
	' 
	'  compatibility with old names
	' 
	AssemblyDetailedInformationInActivationContxt = 3
	FileInformationInAssemblyOfAssemblyInActivationContxt = 4
End Enum

Public Type ACTIVATION_CONTEXT_BASIC_INFORMATION
	hActCtx As LongPtr
	dwFlags As Long
End Type

Public Type ASSEMBLY_FILE_DETAILED_INFORMATION
	ulFlags As Long
	ulFilenameLength As Long
	ulPathLength As Long
	lpFileName As LongPtr
	lpFilePath As LongPtr
End Type


Public Enum ActivationContextPathType
	ACTIVATION_CONTEXT_PATH_TYPE_NONE = (1)
	ACTIVATION_CONTEXT_PATH_TYPE_WIN32_FILE = (2)
	ACTIVATION_CONTEXT_PATH_TYPE_URL = (3)
	ACTIVATION_CONTEXT_PATH_TYPE_ASSEMBLYREF = (4)
End Enum

Public Type ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION
	ulFlags As Long
	ulEncodedAssemblyIdentityLength As Long ' in bytes
	ulManifestPathType As ActivationContextPathType ' ACTIVATION_CONTEXT_PATH_TYPE_*
	ulManifestPathLength As Long ' in bytes
	liManifestLastWriteTime As LARGE_INTEGER ' FILETIME
	ulPolicyPathType As ActivationContextPathType ' ACTIVATION_CONTEXT_PATH_TYPE_*
	ulPolicyPathLength As Long ' in bytes
	liPolicyLastWriteTime As LARGE_INTEGER ' FILETIME
	ulMetadataSatelliteRosterIndex As Long
	ulManifestVersionMajor As Long ' 1
	ulManifestVersionMinor As Long ' 0
	ulPolicyVersionMajor As Long ' 0
	ulPolicyVersionMinor As Long ' 0
	ulAssemblyDirectoryNameLength As Long ' in bytes
	lpAssemblyEncodedAssemblyIdentity As LongPtr
	lpAssemblyManifestPath As LongPtr
	lpAssemblyPolicyPath As LongPtr
	lpAssemblyDirectoryName As LongPtr
	ulFileCount As Long
End Type


Public Enum ACTCTX_REQUESTED_RUN_LEVEL
	ACTCTX_RUN_LEVEL_UNSPECIFIED = 0
	ACTCTX_RUN_LEVEL_AS_INVOKER = 1
	ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE = 2
	ACTCTX_RUN_LEVEL_REQUIRE_ADMIN = 3
	ACTCTX_RUN_LEVEL_NUMBERS = 4
End Enum

Public Type ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION
	ulFlags As Long
	RunLevel As ACTCTX_REQUESTED_RUN_LEVEL
	UiAccess As Long
End Type

Public Enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE
	ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN = 0
	ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS = 1
	ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION = 2
	ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MAXVERSIONTESTED = 3
End Enum
Public Type COMPATIBILITY_CONTEXT_ELEMENT
	Id As UUID
	Type As ACTCTX_COMPATIBILITY_ELEMENT_TYPE
	MaxVersionTested As LongLong
End Type

Public Enum QueryActivationContextFlags
	QUERY_ACTCTX_FLAG_USE_ACTIVE_ACTCTX = (&H00000004)
	QUERY_ACTCTX_FLAG_ACTCTX_IS_HMODULE = (&H00000008)
	QUERY_ACTCTX_FLAG_ACTCTX_IS_ADDRESS = (&H00000010)
	QUERY_ACTCTX_FLAG_NO_ADDREF = (&H80000000)
End Enum

Public Type ACTIVATION_CONTEXT_DETAILED_INFORMATION
	dwFlags As Long
	ulFormatVersion As Long
	ulAssemblyCount As Long
	ulRootManifestPathType As Long
	ulRootManifestPathChars As Long
	ulRootConfigurationPathType As Long
	ulRootConfigurationPathChars As Long
	ulAppDirPathType As Long
	ulAppDirPathChars As Long
	lpRootManifestPath As LongPtr
	lpRootConfigurationPath As LongPtr
	lpAppDirPath As LongPtr
End Type

Public Type SUPPORTED_OS_INFO
	MajorVersion As Integer
	MinorVersion As Integer
End Type

Public Const MAILSLOT_NO_MESSAGE = -1
Public Const MAILSLOT_WAIT_FOREVER = -1

Public Enum EnumModulesFlags
	LIST_MODULES_DEFAULT = &H0  ' This is the default one app would get without any flag.
	LIST_MODULES_32BIT = &H01  ' list 32bit modules in the target process.
	LIST_MODULES_64BIT = &H02  ' list all 64bit modules. 32bit exe will be stripped off.
'  list all the modules
	LIST_MODULES_ALL = (LIST_MODULES_32BIT Or LIST_MODULES_64BIT)
End Enum

Public Type PROCESS_MEMORY_COUNTERS
	cb As Long
	PageFaultCount As Long
	PeakWorkingSetSize As LongPtr
	WorkingSetSize As LongPtr
	QuotaPeakPagedPoolUsage As LongPtr
	QuotaPagedPoolUsage As LongPtr
	QuotaPeakNonPagedPoolUsage As LongPtr
	QuotaNonPagedPoolUsage As LongPtr
	PagefileUsage As LongPtr
	PeakPagefileUsage As LongPtr
End Type
Public Type PROCESS_MEMORY_COUNTERS_EX
	cb As Long
	PageFaultCount As Long
	PeakWorkingSetSize As LongPtr
	WorkingSetSize As LongPtr
	QuotaPeakPagedPoolUsage As LongPtr
	QuotaPagedPoolUsage As LongPtr
	QuotaPeakNonPagedPoolUsage As LongPtr
	QuotaNonPagedPoolUsage As LongPtr
	PagefileUsage As LongPtr
	PeakPagefileUsage As LongPtr
	PrivateUsage As LongPtr
End Type
Public Type PROCESS_MEMORY_COUNTERS_EX2
    cb As Long
    PageFaultCount As Long
    PeakWorkingSetSize As LongPtr
    WorkingSetSize As LongPtr
    QuotaPeakPagedPoolUsage As LongPtr
    QuotaPagedPoolUsage As LongPtr
    QuotaPeakNonPagedPoolUsage As LongPtr
    QuotaNonPagedPoolUsage As LongPtr
    PagefileUsage As LongPtr
    PeakPagefileUsage As LongPtr
    PrivateUsage As LongPtr
    PrivateWorkingSetSize As LongPtr
    SharedCommitUsage As LongLong
End Type
Public Type PERFORMANCE_INFORMATION
	cb As Long
	CommitTotal As LongPtr
	CommitLimit As LongPtr
	CommitPeak As LongPtr
	PhysicalTotal As LongPtr
	PhysicalAvailable As LongPtr
	SystemCache As LongPtr
	KernelTotal As LongPtr
	KernelPaged As LongPtr
	KernelNonpaged As LongPtr
	PageSize As LongPtr
	HandleCount As Long
	ProcessCount As Long
	ThreadCount As Long
End Type

Public Enum ThreadPoolFlags
	WT_EXECUTEDEFAULT = &H00000000
	WT_EXECUTEINIOTHREAD = &H00000001
	WT_EXECUTEINUITHREAD = &H00000002
	WT_EXECUTEINWAITTHREAD = &H00000004
	WT_EXECUTEONLYONCE = &H00000008
	WT_EXECUTEINTIMERTHREAD = &H00000020
	WT_EXECUTELONGFUNCTION = &H00000010
	WT_EXECUTEINPERSISTENTIOTHREAD = &H00000040
	WT_EXECUTEINPERSISTENTTHREAD = &H00000080
	WT_TRANSFER_IMPERSONATION = &H00000100
End Enum

Public Enum ErrorModes
	SEM_FAILCRITICALERRORS = &H0001
	SEM_NOGPFAULTERRORBOX = &H0002
	SEM_NOALIGNMENTFAULTEXCEPT = &H0004
	SEM_NOOPENFILEERRORBOX = &H8000&
End Enum

Public Enum LocaleIndMappingFlags
	MAP_FOLDCZONE = &H00000010  ' fold compatibility zone chars
	MAP_PRECOMPOSED = &H00000020  ' convert to precomposed chars
	MAP_COMPOSITE = &H00000040  ' convert to composite chars
	MAP_FOLDDIGITS = &H00000080  ' all digits to ASCII 0-9
	MAP_EXPAND_LIGATURES = &H00002000  ' expand all ligatures
End Enum

Public Enum ProcessDEPFlags
	PROCESS_DEP_ENABLE = &H00000001
	PROCESS_DEP_DISABLE_ATL_THUNK_EMULATION = &H00000002
End Enum

Public Enum PROCESS_MITIGATION_POLICY
	ProcessDEPPolicy = 0
	ProcessASLRPolicy = 1
	ProcessDynamicCodePolicy = 2
	ProcessStrictHandleCheckPolicy = 3
	ProcessSystemCallDisablePolicy = 4
	ProcessMitigationOptionsMask = 5
	ProcessExtensionPointDisablePolicy = 6
	ProcessControlFlowGuardPolicy = 7
	ProcessSignaturePolicy = 8
	ProcessFontDisablePolicy = 9
	ProcessImageLoadPolicy = 10
	ProcessSystemCallFilterPolicy = 11
	ProcessPayloadRestrictionPolicy = 12
	ProcessChildProcessPolicy = 13
	ProcessSideChannelIsolationPolicy = 14
	ProcessUserShadowStackPolicy = 15
	ProcessRedirectionTrustPolicy = 16
	ProcessUserPointerAuthPolicy = 17
	ProcessSEHOPPolicy = 18
	MaxProcessMitigationPolicy = 19
End Enum

Public Type PROCESS_MITIGATION_POLICY_INFORMATION
	Policy As PROCESS_MITIGATION_POLICY
    u(5) As Byte
End Type

Public Enum ProcessMitigationAslrFlags
    PMASF_EnableBottomUpRandomization = &H01
    PMASF_EnableForceRelocateImages = &H02
    PMASF_EnableHighEntropy = &H04
    PMASF_DisallowStrippedImages = &H08
End Enum
Public Type PROCESS_MITIGATION_ASLR_POLICY
    dwFlags As ProcessMitigationAslrFlags
End Type
Public Enum ProcessMitigationDepFlags
    PMDF_Enable = &H1
	PMDF_DisableAtlThunkEmulation = &H2
End Enum
Public Type PROCESS_MITIGATION_DEP_POLICY
    dwFlags As ProcessMitigationDepFlags
    Permanent As Byte
End Type
Public Enum ProcessMitigationSehopFlags
	PMSF_EnableSehop = &H1
End Enum
Public Type PROCESS_MITIGATION_SEHOP_POLICY
    dwFlags As ProcessMitigationSehopFlags
End Type
Public Enum ProcessMitigationHandleChkFlags
    PMHCF_RaiseExceptionOnInvalidHandleReference = &H1
    PMHCF_HandleExceptionsPermanentlyEnabled = &H2
End Enum
Public Type PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY
    dwFlags As ProcessMitigationHandleChkFlags
End Type
Public Enum ProcessMitigationSysCallFlags
    PMSCF_DisallowWin32kSystemCalls = &H1
    PMSCF_AuditDisallowWin32kSystemCalls = &H2
End Enum
Public Type PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY
    dwFlags As ProcessMitigationSysCallFlags
End Type
Public Enum ProcessMitigationExtPtFlags
    PMEPF_DisableExtensionPoints = &H1
End Enum
Public Type PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY
    dwFlags As ProcessMitigationExtPtFlags
End Type
Public Enum ProcessMitigationDynCodeFlags
    PMDCF_ProhibitDynamicCode = &H01
    PMDCF_AllowThreadOptOut = &H02
    PMDCF_AllowRemoteDowngrade = &H04
    PMDCF_AuditProhibitDynamicCode = &H08
End Enum
Public Type PROCESS_MITIGATION_DYNAMIC_CODE_POLICY
    dwFlags As ProcessMitigationDynCodeFlags
End Type
Public Enum ProcessMitigationCFGFlags
    PMCFGF_EnableControlFlowGuard = &H01
    PMCFGF_EnableExportSuppression = &H02
    PMCFGF_StrictMode = &H04
    PMCFGF_EnableXfg = &H08
    PMCFGF_EnableXfgAuditMode = &H10
End Enum
Public Type PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY
    dwFlags As ProcessMitigationCFGFlags
End Type
Public Enum ProcessMitigationBinarySigFlags
    PMBSF_MicrosoftSignedOnly = &H01
    PMBSF_StoreSignedOnly = &H02
    PMBSF_MitigationOptIn = &H04
    PMBSF_AuditMicrosoftSignedOnly = &H08
    PMBSF_AuditStoreSignedOnly = &H10
End Enum
Public Type PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY
    dwFlags As ProcessMitigationBinarySigFlags
End Type
Public Enum ProcessMitigationFontFlags
	PMFF_DisableNonSystemFonts = &H1
    PMFF_AuditNonSystemFontLoading = &H2
End Enum
Public Type PROCESS_MITIGATION_FONT_DISABLE_POLICY
    dwFlags As ProcessMitigationFontFlags
End Type
Public Enum ProcessMitigationImageLoadFlags
    PMILF_NoRemoteImages = &H01
    PMILF_NoLowMandatoryLabelImages = &H02
    PMILF_PreferSystem32Images = &H04
    PMILF_AuditNoRemoteImages = &H08
    PMILF_AuditNoLowMandatoryLabelImages = &H10
End Enum
Public Type PROCESS_MITIGATION_IMAGE_LOAD_POLICY
    dwFlags As ProcessMitigationImageLoadFlags
End Type
Public Type PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY
    FilterId As Byte
    Reserved(2) As Byte
End Type
Public Enum ProcessMitigationPayloadFlags
    PMPF_EnableExportAddressFilter = &H01
    PMPF_AuditExportAddressFilter = &H02

    PMPF_EnableExportAddressFilterPlus = &H04
    PMPF_AuditExportAddressFilterPlus = &H08

    PMPF_EnableImportAddressFilter = &H10
    PMPF_AuditImportAddressFilter = &H20

    PMPF_EnableRopStackPivot = &H40
    PMPF_AuditRopStackPivot = &H80

    PMPF_EnableRopCallerCheck = &H100
    PMPF_AuditRopCallerCheck = &H200

    PMPF_EnableRopSimExec = &H400
    PMPF_AuditRopSimExec = &H800
End Enum
Public Type PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY
    dwFlags As ProcessMitigationPayloadFlags
End Type
Public Enum ProcessMitigationChildProcFlags
    PMCP_NoChildProcessCreation = &H1
    PMCP_AuditNoChildProcessCreation = &H2
    PMCP_AllowSecureProcessCreation = &H4
End Enum
Public Type PROCESS_MITIGATION_CHILD_PROCESS_POLICY
    dwFlags As ProcessMitigationChildProcFlags
End Type
Public Enum ProcessMitigationSideChanIsolationFlags
    ' //
    ' // Prevent branch target pollution cross-SMT-thread in user mode.
    ' //

    SmtBranchTargetIsolation = &H1

    ' //
    ' // Isolate this process into a distinct security domain, even from
    ' // other processes running as the same security context.  This
    ' // prevents branch target injection cross-process (normally such
    ' // branch target injection is only inhibited across different
    ' // security contexts).
    ' //
    ' // Page combining is limited to processes within the same security
    ' // domain.  This flag thus also effectively limits the process to
    ' // only being able to combine internally to the process itself,
    ' // except for common pages (unless further restricted by the
    ' // DisablePageCombine policy).
    ' //

    IsolateSecurityDomain = &H2

    ' //
    ' // Disable all page combining for this process, even internally to
    ' // the process itself, except for common pages (zeroes or ones).
    ' //

    DisablePageCombine = &H4

    ' //
    ' // Memory Disambiguation Disable.
    ' //

    SpeculativeStoreBypassDisable = &H8

    ' //
    ' // Prevent this process' threads from being scheduled on the same
    ' // core as threads outside its security domain.
    ' //

    RestrictCoreSharing = &H10
End Enum
Public Type PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY
    dwFlags As ProcessMitigationSideChanIsolationFlags
End Type
Public Enum ProcessMitigationUserShadowStackFlags
    EnableUserShadowStack = &H0001
    AuditUserShadowStack = &H0002
    SetContextIpValidation = &H0004
    AuditSetContextIpValidation = &H0008
    EnableUserShadowStackStrictMode = &H0010
    BlockNonCetBinaries = &H0020
    BlockNonCetBinariesNonEhcont = &H0040
    AuditBlockNonCetBinaries = &H0080
    CetDynamicApisOutOfProcOnly = &H0100
    SetContextIpValidationRelaxedMode = &H0200
End Enum
Public Type PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY
    dwFlags As ProcessMitigationUserShadowStackFlags
End Type
Public Enum ProcessMitigationUserPtrAuthFlags
    EnablePointerAuthUserIp = &H1
End Enum
Public Type PROCESS_MITIGATION_USER_POINTER_AUTH_POLICY
    dwFlags As ProcessMitigationUserPtrAuthFlags
End Type
Public Enum ProcessMitigationRedirTrustFlags
	PMRTF_EnforceRedirectionTrust = &H1
    PMRTF_AuditRedirectionTrust = &H2
End Enum
Public Type PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY
	dwFlags As ProcessMitigationRedirTrustFlags
End Type

Public Enum PROC_THREAD_ATTRIBUTES ' attributes for ProcThreadAttributeList
	PROC_THREAD_ATTRIBUTE_PARENT_PROCESS = &H00020000
	PROC_THREAD_ATTRIBUTE_HANDLE_LIST = &H00020002
	PROC_THREAD_ATTRIBUTE_GROUP_AFFINITY = &H00030003
	PROC_THREAD_ATTRIBUTE_PREFERRED_NODE = &H00020004
	PROC_THREAD_ATTRIBUTE_IDEAL_PROCESSOR = &H00030005
	PROC_THREAD_ATTRIBUTE_MITIGATION_POLICY = &H00020007
	PROC_THREAD_ATTRIBUTE_UMS_THREAD = &H00030006
	PROC_THREAD_ATTRIBUTE_PROTECTION_LEVEL = &H0002000b
	PROC_THREAD_ATTRIBUTE_SECURITY_CAPABILITIES = &H00020009
	PROC_THREAD_ATTRIBUTE_PSEUDOCONSOLE = &H00020016
    PROC_THREAD_ATTRIBUTE_ENABLE_OPTIONAL_XSTATE_FEATURES = &H0003001B
    PROC_THREAD_ATTRIBUTE_JOB_LIST = &H2000d
    PROC_THREAD_ATTRIBUTE_CHILD_PROCESS_POLICY = &H2000e
    PROC_THREAD_ATTRIBUTE_ALL_APPLICATION_PACKAGES_POLICY = &H2000f
    PROC_THREAD_ATTRIBUTE_WIN32K_FILTER = &H20010
    PROC_THREAD_ATTRIBUTE_DESKTOP_APP_POLICY = &H20012
    PROC_THREAD_ATTRIBUTE_MITIGATION_AUDIT_POLICY = &H20018
    PROC_THREAD_ATTRIBUTE_COMPONENT_FILTER = &H2001a
    PROC_THREAD_ATTRIBUTE_TRUSTED_APP = &H2001d
    PROC_THREAD_ATTRIBUTE_NUMBER = &H0000FFFF&
    PROC_THREAD_ATTRIBUTE_THREAD = &H00010000  ' Attribute may be used with thread creation
    PROC_THREAD_ATTRIBUTE_INPUT = &H00020000  ' Attribute is input only
    PROC_THREAD_ATTRIBUTE_ADDITIVE = &H00040000  ' Attribute may be "accumulated," e.g. bitmasks, counters, etc.
End Enum

Public Enum PROC_THREAD_ATTRIBUTE_NUM
    ProcThreadAttributeParentProcess = 0
    ProcThreadAttributeHandleList = 2
    ' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN7)
    ProcThreadAttributeGroupAffinity = 3
    ProcThreadAttributePreferredNode = 4
    ProcThreadAttributeIdealProcessor = 5
    ProcThreadAttributeUmsThread = 6
    ProcThreadAttributeMitigationPolicy = 7
    ' #endif
    ' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN8)
    ProcThreadAttributeSecurityCapabilities = 9
    ' #endif
    ProcThreadAttributeProtectionLevel = 11
    ' #if (_WIN32_WINNT >= _WIN32_WINNT_WINBLUE)
    ' #endif
    ' #if (_WIN32_WINNT >= _WIN32_WINNT_WINTHRESHOLD)
    ProcThreadAttributeJobList = 13
    ProcThreadAttributeChildProcessPolicy = 14
    ProcThreadAttributeAllApplicationPackagesPolicy = 15
    ProcThreadAttributeWin32kFilter = 16
    ' #endif
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_RS1)
    ProcThreadAttributeSafeOpenPromptOriginClaim = 17
    ' #endif
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_RS2)
    ProcThreadAttributeDesktopAppPolicy = 18
    ' #endif
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_RS5)
    ProcThreadAttributePseudoConsole = 22
    ' #endif
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_19H1)
    ' #endif
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_MN)
    ProcThreadAttributeMitigationAuditPolicy = 24
    ProcThreadAttributeMachineType = 25
    ProcThreadAttributeComponentFilter = 26
    ' #endif
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_FE)
    ProcThreadAttributeEnableOptionalXStateFeatures = 27
    ' #endif
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_NI)
    ProcThreadAttributeTrustedApp = 29
    ' #endif
    ' #if (NTDDI_VERSION >= NTDDI_WIN11_GE)
    ProcThreadAttributeSveVectorLength = 30
    ' #endif
End Enum

Public Const PROCESS_CREATION_MITIGATION_POLICY_DEP_ENABLE  = &H01
Public Const PROCESS_CREATION_MITIGATION_POLICY_DEP_ATL_THUNK_ENABLE  = &H02
Public Const PROCESS_CREATION_MITIGATION_POLICY_SEHOP_ENABLE  = &H04
' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN8)
'  Define mandatory ASLR options.  Mandatory ASLR forcibly rebases images that
'  are not dynamic base compatible by acting as though there were an image base
'  collision at load time.
'  Note that 'require relocations' mode refuses load of images that do not have
'  a base relocation section.
Public Const PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_MASK  = (&H00000003 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_DEFER  = (&H00000000 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON  = (&H00000001 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_OFF  = (&H00000002 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FORCE_RELOCATE_IMAGES_ALWAYS_ON_REQ_RELOCS  = (&H00000003 << 8)
'  Define heap terminate on corruption options.  Note that 'always off' does
'  not override the default opt-in for binaries with current subsystem versions
'  set in the image header.
'  Heap terminate on corruption is user mode enforced.
Public Const PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_MASK  = (&H00000003 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_DEFER  = (&H00000000 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_ON  = (&H00000001 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_ALWAYS_OFF  = (&H00000002 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HEAP_TERMINATE_RESERVED  = (&H00000003 << 12)
'  Define bottom up randomization (includes stack randomization) options,
'  i.e. randomization of the lowest user address.
Public Const PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_MASK  = (&H00000003& << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_DEFER  = (&H00000000& << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_ON  = (&H00000001& << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_ALWAYS_OFF  = (&H00000002& << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BOTTOM_UP_ASLR_RESERVED  = (&H00000003& << 16)
'  Define high entropy bottom up randomization.  Note that high entropy bottom
'  up randomization is effective if and only if bottom up ASLR is also enabled.
'  N.B.  High entropy mode is only meaningful for native 64-bit processes.  in
'        high entropy mode, up to 1TB of bottom up variance is enabled.
Public Const PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_MASK  = (&H00000003& << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_DEFER  = (&H00000000& << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_ON  = (&H00000001& << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_ALWAYS_OFF  = (&H00000002& << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY_HIGH_ENTROPY_ASLR_RESERVED  = (&H00000003& << 20)
'  Define handle checking enforcement options.  Handle checking enforcement
'  causes an exception to be raised immediately on a bad handle reference,
'  versus simply returning a failure status from the handle reference.
Public Const PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_MASK  = (&H00000003& << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_DEFER  = (&H00000000& << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_ON  = (&H00000001& << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_ALWAYS_OFF  = (&H00000002& << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY_STRICT_HANDLE_CHECKS_RESERVED  = (&H00000003& << 24)
'  Define win32k system call disable options.  Win32k system call disable
'  prevents a process from making Win32k calls.
Public Const PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_MASK  = (&H00000003& << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_DEFER  = (&H00000000& << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_ON  = (&H00000001& << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_ALWAYS_OFF  = (&H00000002& << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY_WIN32K_SYSTEM_CALL_DISABLE_RESERVED  = (&H00000003& << 28)
'  Define the extension point disable options.  Extension point disable allows
'  a process to opt-out of loading various arbitrary extension point DLLs.
Public Const PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_MASK  = (&H00000003^ << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_DEFER  = (&H00000000^ << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_ON  = (&H00000001^ << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_ALWAYS_OFF  = (&H00000002^ << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY_EXTENSION_POINT_DISABLE_RESERVED  = (&H00000003^ << 32)
' #if (_WIN32_WINNT >= _WIN32_WINNT_WINBLUE)
'  Define dynamic code options.
Public Const PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_MASK  = (&H00000003^ << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_DEFER  = (&H00000000^ << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON  = (&H00000001^ << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_OFF  = (&H00000002^ << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY_PROHIBIT_DYNAMIC_CODE_ALWAYS_ON_ALLOW_OPT_OUT  = (&H00000003^ << 36)
'  Define Control Flow Guard (CFG) mitigation policy options.  Control Flow
'  Guard allows indirect control transfers to be checked at runtime.
Public Const PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_MASK  = (&H00000003^ << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_DEFER  = (&H00000000^ << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_ON  = (&H00000001^ << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_ALWAYS_OFF  = (&H00000002^ << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY_CONTROL_FLOW_GUARD_EXPORT_SUPPRESSION  = (&H00000003^ << 40)
'  Define module signature options.  When enabled, this option will
'  block mapping of non-microsoft binaries.
Public Const PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_MASK  = (&H00000003^ << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_DEFER  = (&H00000000^ << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_ON  = (&H00000001^ << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_OFF  = (&H00000002^ << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALLOW_STORE  = (&H00000003^ << 44)
' #if (_WIN32_WINNT >= _WIN32_WINNT_WINTHRESHOLD)
'  Define Font Disable Policy.  When enabled, this option will
'  block loading Non System Fonts.
Public Const PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_MASK  = (&H00000003^ << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_DEFER  = (&H00000000^ << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_ON  = (&H00000001^ << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY_FONT_DISABLE_ALWAYS_OFF  = (&H00000002^ << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY_AUDIT_NONSYSTEM_FONTS  = (&H00000003^ << 48)
'  Define remote image load options.  When enabled, this option will
'  block mapping of images from remote devices.
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_MASK  = (&H00000003^ << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_DEFER  = (&H00000000^ << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_ON  = (&H00000001^ << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_ALWAYS_OFF  = (&H00000002^ << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_REMOTE_RESERVED  = (&H00000003^ << 52)
'  Define low IL image load options.  When enabled, this option will
'  block mapping of images that have the low mandatory label.
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_MASK  = (&H00000003^ << 56)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_DEFER  = (&H00000000^ << 56)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_ON  = (&H00000001^ << 56)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_ALWAYS_OFF  = (&H00000002^ << 56)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_NO_LOW_LABEL_RESERVED  = (&H00000003^ << 56)
'  Define image load options to prefer System32 images compared to
'  the same images in application directory. When enabled, this option
'  will prefer loading images from system32 folder.
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_MASK  = (&H00000003^ << 60)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_DEFER  = (&H00000000^ << 60)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_ON  = (&H00000001^ << 60)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_ALWAYS_OFF  = (&H00000002^ << 60)
Public Const PROCESS_CREATION_MITIGATION_POLICY_IMAGE_LOAD_PREFER_SYSTEM32_RESERVED  = (&H00000003^ << 60)
'  Define Loader Integrity Continuity mitigation policy options.  This mitigation
'  enforces OS signing levels for depenedent module loads.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_MASK  = (&H00000003 << 4)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_DEFER  = (&H00000000 << 4)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_ON  = (&H00000001 << 4)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_ALWAYS_OFF  = (&H00000002 << 4)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_LOADER_INTEGRITY_CONTINUITY_AUDIT  = (&H00000003 << 4)
'  Define the strict Control Flow Guard (CFG) mitigation policy options. This mitigation
'  requires all images that load in the process to be instrumented by CFG.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_MASK  = (&H00000003 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_DEFER  = (&H00000000 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_ON  = (&H00000001 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_ALWAYS_OFF  = (&H00000002 << 8)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_STRICT_CONTROL_FLOW_GUARD_RESERVED  = (&H00000003 << 8)
'  Define the module tampering mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_MASK  = (&H00000003 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_DEFER  = (&H00000000 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_ON  = (&H00000001 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_ALWAYS_OFF  = (&H00000002 << 12)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_MODULE_TAMPERING_PROTECTION_NOINHERIT  = (&H00000003 << 12)
'  Define the restricted indirect branch prediction mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_MASK  = (&H00000003& << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_DEFER  = (&H00000000& << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_ON  = (&H00000001& << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_ALWAYS_OFF  = (&H00000002& << 16)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_INDIRECT_BRANCH_PREDICTION_RESERVED  = (&H00000003& << 16)
'  Define the policy option that allows a broker to downgrade the dynamic code policy for a process.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_MASK  = (&H00000003& << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_DEFER  = (&H00000000& << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_ON  = (&H00000001& << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_ALWAYS_OFF  = (&H00000002& << 20)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY_RESERVED  = (&H00000003& << 20)
'  Define the Memory Disambiguation Disable mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_MASK  = (&H00000003& << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_DEFER  = (&H00000000& << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_ON  = (&H00000001& << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_ALWAYS_OFF  = (&H00000002& << 24)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_SPECULATIVE_STORE_BYPASS_DISABLE_RESERVED  = (&H00000003& << 24)
'  Define the user-mode shadow stack mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_MASK  = (&H00000003& << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_DEFER  = (&H00000000& << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_ON  = (&H00000001& << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_OFF  = (&H00000002& << 28)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_USER_SHADOW_STACKS_STRICT_MODE  = (&H00000003& << 28)
'  Define the user-mode CET set context instruction pointer validation mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_MASK  = (&H00000003^ << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_DEFER  = (&H00000000^ << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_ON  = (&H00000001^ << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_OFF  = (&H00000002^ << 32)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_RELAXED_MODE  = (&H00000003^ << 32)
'  Define the block non-CET/non-EHCONT binaries mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_MASK  = (&H00000003^ << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_DEFER  = (&H00000000^ << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_ON  = (&H00000001^ << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_OFF  = (&H00000002^ << 36)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_BLOCK_NON_CET_BINARIES_NON_EHCONT  = (&H00000003^ << 36)
'  Define the XFG mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_MASK  = (&H00000003^ << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_DEFER  = (&H00000000^ << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_ON  = (&H00000001^ << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_OFF  = (&H00000002^ << 40)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_XTENDED_CONTROL_FLOW_GUARD_RESERVED  = (&H00000003^ << 40)
'  Define the ARM64 user-mode per-process instruction pointer authentication
'  mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_MASK  = (&H00000003^ << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_DEFER  = (&H00000000^ << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_ALWAYS_ON  = (&H00000001^ << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_ALWAYS_OFF  = (&H00000002^ << 44)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_POINTER_AUTH_USER_IP_RESERVED  = (&H00000003^ << 44)
'  Define the CET-related dynamic code validation data APIs out-of-proc mitigation policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_MASK  = (&H00000003^ << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_DEFER  = (&H00000000^ << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_ALWAYS_ON  = (&H00000001^ << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_ALWAYS_OFF  = (&H00000002^ << 48)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY_RESERVED  = (&H00000003^ << 48)
'  Define the restrict core sharing policy options.
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_MASK  = (&H00000003^ << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_DEFER  = (&H00000000^ << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_ALWAYS_ON  = (&H00000001^ << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_ALWAYS_OFF  = (&H00000002^ << 52)
Public Const PROCESS_CREATION_MITIGATION_POLICY2_RESTRICT_CORE_SHARING_RESERVED  = (&H00000003^ << 52)


Public Const PROCESS_CREATION_CHILD_PROCESS_RESTRICTED  = &H01
Public Const PROCESS_CREATION_CHILD_PROCESS_OVERRIDE  = &H02
Public Const PROCESS_CREATION_CHILD_PROCESS_RESTRICTED_UNLESS_SECURE  = &H04

Public Const PROCESS_CREATION_ALL_APPLICATION_PACKAGES_OPT_OUT  = &H01
Public Const PROCESS_CREATION_DESKTOP_APP_BREAKAWAY_ENABLE_PROCESS_TREE  = &H01
Public Const PROCESS_CREATION_DESKTOP_APP_BREAKAWAY_DISABLE_PROCESS_TREE  = &H02
Public Const PROCESS_CREATION_DESKTOP_APP_BREAKAWAY_OVERRIDE  = &H04
'  Define the user-mode shadow stack mitigation audit policy options.
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_MASK As LongLong = (&H00000003& << 28)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_DEFER As LongLong = (&H00000000& << 28)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_ON As LongLong = (&H00000001& << 28)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_ALWAYS_OFF As LongLong = (&H00000002& << 28)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_CET_USER_SHADOW_STACKS_RESERVED As LongLong = (&H00000003& << 28)
' Define the user-mode CET set context instruction pointer validation mitigation audit policy options.
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_MASK As LongLong = (&H00000003^ << 32)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_DEFER As LongLong = (&H00000000^ << 32)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_ON As LongLong = (&H00000001^ << 32)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_ALWAYS_OFF As LongLong = (&H00000002^ << 32)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_USER_CET_SET_CONTEXT_IP_VALIDATION_RESERVED As LongLong = (&H00000003^ << 32)
' Define the block non-CET/non-EHCONT binaries mitigation audit policy options.
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_MASK As LongLong = (&H00000003^ << 36)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_DEFER As LongLong = (&H00000000^ << 36)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_ON As LongLong = (&H00000001^ << 36)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_ALWAYS_OFF As LongLong = (&H00000002^ << 36)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_BLOCK_NON_CET_BINARIES_RESERVED As LongLong = (&H00000003^ << 36)
' Define the XFG mitigation audit policy options.
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_MASK As LongLong = (&H00000003^ << 40)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_DEFER As LongLong = (&H00000000^ << 40)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_ON As LongLong = (&H00000001^ << 40)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_ALWAYS_OFF As LongLong = (&H00000002^ << 40)
Public Const PROCESS_CREATION_MITIGATION_AUDIT_POLICY2_XTENDED_CONTROL_FLOW_GUARD_RESERVED As LongLong = (&H00000003^ << 40)







Public Type ENUM_PAGE_FILE_INFORMATION
    cb As Long
    Reserved As Long
    TotalSize As LongPtr 'SIZE_T
    TotalInUse As LongPtr 'SIZE_T
    PeakUsage As LongPtr 'SIZE_T
End Type

Public Type MODULEINFO
    lpBaseOfDll As LongPtr
    SizeOfImage As Long
    EntryPoint As LongPtr
End Type

Public Type PSAPI_WS_WATCH_INFORMATION
    FaultingPc As LongPtr
    FaultingVa As LongPtr
End Type
Public Type PSAPI_WS_WATCH_INFORMATION_EX
    BasicInfo As PSAPI_WS_WATCH_INFORMATION
    FaultingThreadId As LongPtr
    Flags As LongPtr ' Reserved
End Type

Public Type PSAPI_WORKING_SET_BLOCK
    Flags As LongPtr
'     typedef union _PSAPI_WORKING_SET_BLOCK {
'     ULONG_PTR Flags;
'     struct {
'       ULONG_PTR Protection : 5;
'       ULONG_PTR ShareCount : 3;
'       ULONG_PTR Shared : 1;
'       ULONG_PTR Reserved : 3;
'   #if ...
'       ULONG_PTR VirtualPage : 52;
'   #else
'       ULONG_PTR VirtualPage : 20;
'   #endif
'     };
'   } PSAPI_WORKING_SET_BLOCK, *PPSAPI_WORKING_SET_BLOCK;
End Type
Public Type PSAPI_WORKING_SET_EX_BLOCK
    Flags As LongPtr
End Type
[Description("⚠️ **WARNING:** You cannot use this type directly as it represents a C-style array. Use a byte array to fill in the number of entries, redim, and copy the rest fo VarPtr(workingsetinfo(0))")]
Public Type PSAPI_WORKING_SET_INFORMATION
    NumberOfEntries As LongPtr
    WorkingSetInfo() As PSAPI_WORKING_SET_BLOCK
End Type
Public Type PSAPI_WORKING_SET_EX_INFORMATION
    VirtualAddress As LongPtr
    VirtualAttributes As PSAPI_WORKING_SET_EX_BLOCK
End Type

Public Enum CREATE_FIBER_FLAGS
    FIBER_FLAG_FLOAT_SWITCH = &H1
End Enum

Public Enum GET_MODULE_EX_FLAGS
    GET_MODULE_HANDLE_EX_FLAG_PIN = (&H00000001)
    GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT = (&H00000002)
    GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS = (&H00000004)
End Enum

Public Enum EXCEPTION_FLAGS
    EXCEPTION_NONCONTINUABLE = &H1  ' Noncontinuable exception
    EXCEPTION_UNWINDING = &H2  ' Unwind is in progress
    EXCEPTION_EXIT_UNWIND = &H4  ' Exit unwind is in progress
    EXCEPTION_STACK_INVALID = &H8  ' Stack out of limits or unaligned
    EXCEPTION_NESTED_CALL = &H10  ' Nested exception handler call
    EXCEPTION_TARGET_UNWIND = &H20  ' Target unwind in progress
    EXCEPTION_COLLIDED_UNWIND = &H40  ' Collided exception handler call
    EXCEPTION_SOFTWARE_ORIGINATE = &H80  ' Exception originated in software
    EXCEPTION_UNWIND = (EXCEPTION_UNWINDING Or EXCEPTION_EXIT_UNWIND Or EXCEPTION_TARGET_UNWIND Or EXCEPTION_COLLIDED_UNWIND)
End Enum
Public Enum ExceptionCodes
    STILL_ACTIVE = STATUS_PENDING
    EXCEPTION_GUARD_PAGE_VIOLATION = &H80000001
    EXCEPTION_ACCESS_VIOLATION = STATUS_ACCESS_VIOLATION
    EXCEPTION_DATATYPE_MISALIGNMENT = STATUS_DATATYPE_MISALIGNMENT
    EXCEPTION_BREAKPOINT = STATUS_BREAKPOINT
    EXCEPTION_SINGLE_STEP = STATUS_SINGLE_STEP
    EXCEPTION_ARRAY_BOUNDS_EXCEEDED = STATUS_ARRAY_BOUNDS_EXCEEDED
    EXCEPTION_FLT_DENORMAL_OPERAND = STATUS_FLOAT_DENORMAL_OPERAND
    EXCEPTION_FLT_DIVIDE_BY_ZERO = STATUS_FLOAT_DIVIDE_BY_ZERO
    EXCEPTION_FLT_INEXACT_RESULT = STATUS_FLOAT_INEXACT_RESULT
    EXCEPTION_FLT_INVALID_OPERATION = STATUS_FLOAT_INVALID_OPERATION
    EXCEPTION_FLT_OVERFLOW = STATUS_FLOAT_OVERFLOW
    EXCEPTION_FLT_STACK_CHECK = STATUS_FLOAT_STACK_CHECK
    EXCEPTION_FLT_UNDERFLOW = STATUS_FLOAT_UNDERFLOW
    EXCEPTION_INT_DIVIDE_BY_ZERO = STATUS_INTEGER_DIVIDE_BY_ZERO
    EXCEPTION_INT_OVERFLOW = STATUS_INTEGER_OVERFLOW
    EXCEPTION_PRIV_INSTRUCTION = STATUS_PRIVILEGED_INSTRUCTION
    EXCEPTION_IN_PAGE_ERROR = STATUS_IN_PAGE_ERROR
    EXCEPTION_ILLEGAL_INSTRUCTION = STATUS_ILLEGAL_INSTRUCTION
    EXCEPTION_NONCONTINUABLE_EXCEPTION = STATUS_NONCONTINUABLE_EXCEPTION
    EXCEPTION_STACK_OVERFLOW = STATUS_STACK_OVERFLOW
    EXCEPTION_INVALID_DISPOSITION = STATUS_INVALID_DISPOSITION
    EXCEPTION_GUARD_PAGE = STATUS_GUARD_PAGE_VIOLATION
    EXCEPTION_INVALID_HANDLE = STATUS_INVALID_HANDLE
    EXCEPTION_POSSIBLE_DEADLOCK = STATUS_POSSIBLE_DEADLOCK
    CONTROL_C_EXIT = STATUS_CONTROL_C_EXIT
End Enum
Public Const EXCEPTION_MAXIMUM_PARAMETERS = 15
Public Type EXCEPTION_RECORD
    ExceptionCode As Long
    ExceptionFlags As EXCEPTION_FLAGS
    ExceptionRecord As LongPtr
    ExceptionAddress As LongPtr
    NumberParameters As Long
    ExceptionInformation(0 To (EXCEPTION_MAXIMUM_PARAMETERS - 1)) As LongPtr
End Type
Public Type EXCEPTION_RECORD32
    ExceptionCode As Long
    ExceptionFlags As EXCEPTION_FLAGS
    ExceptionRecord As Long
    ExceptionAddress As Long
    NumberParameters As Long
    ExceptionInformation(0 To (EXCEPTION_MAXIMUM_PARAMETERS - 1)) As Long
End Type
Public Type EXCEPTION_RECORD64
    ExceptionCode As Long
    ExceptionFlags As EXCEPTION_FLAGS
    ExceptionRecord As LongLong
    ExceptionAddress As LongLong
    NumberParameters As Long
    ExceptionInformation(0 To (EXCEPTION_MAXIMUM_PARAMETERS - 1)) As LongLong
End Type

Public Type M128A
    Low As LongLong
    High As LongLong
End Type
Public Type XSAVE_FORMAT
    ControlWord As Integer
    StatusWord As Integer
    TagWord As Byte
    Reserved1 As Byte
    ErrorOpcode As Integer
    ErrorOffset As Long
    ErrorSelector As Integer
    Reserved2 As Integer
    DataOffset As Long
    DataSelector As Integer
    Reserved3 As Integer
    MxCsr As Long
    MxCsr_Mask As Long
    FloatRegisters(0 To 7) As M128A
    #If Win64 Then
    XmmRegisters(0 To 15) As M128A
    Reserved4(0 To 95) As Byte
    #Else
    XmmRegisters(0 To 7) As M128A
    Reserved4(0 To 223) As Byte
    #End If
End Type
'Alias XMM_SAVE_AREA32 As XSAVE_FORMAT
Public Type XMM_SAVE_AREA32
    ControlWord As Integer
    StatusWord As Integer
    TagWord As Byte
    Reserved1 As Byte
    ErrorOpcode As Integer
    ErrorOffset As Long
    ErrorSelector As Integer
    Reserved2 As Integer
    DataOffset As Long
    DataSelector As Integer
    Reserved3 As Integer
    MxCsr As Long
    MxCsr_Mask As Long
    FloatRegisters(0 To 7) As M128A
    #If Win64 Then
    XmmRegisters(0 To 15) As M128A
    Reserved4(0 To 95) As Byte
    #Else
    XmmRegisters(0 To 7) As M128A
    Reserved4(0 To 223) As Byte
    #End If
End Type

#If Win64 Then
Public Enum EXCEPTION_CONTEXT_FLAGS
    CONTEXT_AMD64 = &H00100000
    CONTEXT_CONTROL = (CONTEXT_AMD64 Or &H00000001)
    CONTEXT_INTEGER = (CONTEXT_AMD64 Or &H00000002)
    CONTEXT_SEGMENTS = (CONTEXT_AMD64 Or &H00000004)
    CONTEXT_FLOATING_POINT = (CONTEXT_AMD64 Or &H00000008)
    CONTEXT_DEBUG_REGISTERS = (CONTEXT_AMD64 Or &H00000010)
    CONTEXT_FULL = (CONTEXT_CONTROL Or CONTEXT_INTEGER Or CONTEXT_FLOATING_POINT)
    CONTEXT_ALL = (CONTEXT_CONTROL Or CONTEXT_INTEGER Or CONTEXT_SEGMENTS Or CONTEXT_FLOATING_POINT Or CONTEXT_DEBUG_REGISTERS)
    CONTEXT_XSTATE = (CONTEXT_AMD64 Or &H00000040)
    CONTEXT_KERNEL_CET = (CONTEXT_AMD64 Or &H00000080)
    CONTEXT_EXCEPTION_ACTIVE = &H08000000
    CONTEXT_SERVICE_ACTIVE = &H10000000
    CONTEXT_EXCEPTION_REQUEST = &H40000000
    CONTEXT_EXCEPTION_REPORTING = &H80000000
'  CONTEXT_UNWOUND_TO_CALL flag is set by the unwinder if it
'  has unwound to a call site, and cleared whenever it unwinds
'  through a trap frame.
    CONTEXT_UNWOUND_TO_CALL = &H20000000
End Enum

Public Const INITIAL_MXCSR  = &H1f80  ' initial MXCSR value
Public Const INITIAL_FPCSR  = &H027f  ' initial FPCSR value

Public Type _CONTEXT
    ' Register parameter home addresses.
    ' N.B. These fields are for convience - they could be used to extend the
    '      context record in the future.
    P1Home As LongLong
    P2Home As LongLong
    P3Home As LongLong
    P4Home As LongLong
    P5Home As LongLong
    P6Home As LongLong
    ' Control flags.
    ContextFlags As EXCEPTION_CONTEXT_FLAGS
    MxCsr As Long
    ' Segment Registers and processor flags.
    SegCs As Integer
    SegDs As Integer
    SegEs As Integer
    SegFs As Integer
    SegGs As Integer
    SegSs As Integer
    EFlags As Long
    ' Debug registers
    Dr0 As LongLong
    Dr1 As LongLong
    Dr2 As LongLong
    Dr3 As LongLong
    Dr6 As LongLong
    Dr7 As LongLong
    ' Integer registers.
    Rax As LongLong
    Rcx As LongLong
    Rdx As LongLong
    Rbx As LongLong
    Rsp As LongLong
    Rbp As LongLong
    Rsi As LongLong
    Rdi As LongLong
    R8 As LongLong
    R9 As LongLong
    R10 As LongLong
    R11 As LongLong
    R12 As LongLong
    R13 As LongLong
    R14 As LongLong
    R15 As LongLong
    ' Program counter.
    Rip As LongLong
    ' Floating point state.
    'union {
    FltSave As XMM_SAVE_AREA32
    '    struct {
    '        M128A Header[2];
    '        M128A Legacy[8];
    '        M128A Xmm0;
    '        M128A Xmm1;
    '        M128A Xmm2;
    '        M128A Xmm3;
    '        M128A Xmm4;
    '        M128A Xmm5;
    '        M128A Xmm6;
    '        M128A Xmm7;
    '        M128A Xmm8;
    '        M128A Xmm9;
    '        M128A Xmm10;
    '        M128A Xmm11;
    '        M128A Xmm12;
    '        M128A Xmm13;
    '        M128A Xmm14;
    '        M128A Xmm15;
    '    } DUMMYSTRUCTNAME;
    '} DUMMYUNIONNAME;
    ' Vector registers.
    VectorRegister(0 To 25) As M128A
    VectorControl As LongLong
    ' Special debug control registers.
    DebugControl As LongLong
    LastBranchToRip As LongLong
    LastBranchFromRip As LongLong
    LastExceptionToRip As LongLong
    LastExceptionFromRip As LongLong
End Type


Public Enum WOW64_EXCEPTION_CONTEXT_FLAGS
    WOW64_CONTEXT_i386 = &H00010000  ' this assumes that i386 and
    WOW64_CONTEXT_i486 = &H00010000  ' i486 have identical context records
    WOW64_CONTEXT_CONTROL = (WOW64_CONTEXT_i386 Or &H00000001)  ' SS:SP, CS:IP, FLAGS, BP
    WOW64_CONTEXT_INTEGER = (WOW64_CONTEXT_i386 Or &H00000002)  ' AX, BX, CX, DX, SI, DI
    WOW64_CONTEXT_SEGMENTS = (WOW64_CONTEXT_i386 Or &H00000004)  ' DS, ES, FS, GS
    WOW64_CONTEXT_FLOATING_POINT = (WOW64_CONTEXT_i386 Or &H00000008)  ' 387 state
    WOW64_CONTEXT_DEBUG_REGISTERS = (WOW64_CONTEXT_i386 Or &H00000010)  ' DB 0-3,6,7
    WOW64_CONTEXT_EXTENDED_REGISTERS = (WOW64_CONTEXT_i386 Or &H00000020)  ' cpu specific extensions
    WOW64_CONTEXT_FULL = (WOW64_CONTEXT_CONTROL Or WOW64_CONTEXT_INTEGER Or WOW64_CONTEXT_SEGMENTS)
    WOW64_CONTEXT_ALL = (WOW64_CONTEXT_CONTROL Or WOW64_CONTEXT_INTEGER Or WOW64_CONTEXT_SEGMENTS Or WOW64_CONTEXT_FLOATING_POINT Or WOW64_CONTEXT_DEBUG_REGISTERS Or WOW64_CONTEXT_EXTENDED_REGISTERS)
    WOW64_CONTEXT_XSTATE = (WOW64_CONTEXT_i386 Or &H00000040)
    WOW64_CONTEXT_EXCEPTION_ACTIVE = &H08000000
    WOW64_CONTEXT_SERVICE_ACTIVE = &H10000000
    WOW64_CONTEXT_EXCEPTION_REQUEST = &H40000000
    WOW64_CONTEXT_EXCEPTION_REPORTING = &H80000000
End Enum
Public Const WOW64_SIZE_OF_80387_REGISTERS  = 80
Public Const WOW64_MAXIMUM_SUPPORTED_EXTENSION  = 512
Public Type WOW64_FLOATING_SAVE_AREA
    ControlWord As Long
    StatusWord As Long
    TagWord As Long
    ErrorOffset As Long
    ErrorSelector As Long
    DataOffset As Long
    DataSelector As Long
    RegisterArea(0 To (WOW64_SIZE_OF_80387_REGISTERS - 1)) As Byte
    Cr0NpxState As Long
End Type

Public Type WOW64_CONTEXT
    ' The flags values within this flag control the contents of
    ' a CONTEXT record.
    ' If the context record is used as an input parameter, then
    ' for each portion of the context record controlled by a flag
    ' whose value is set, it is assumed that that portion of the
    ' context record contains valid context. If the context record
    ' is being used to modify a threads context, then only that
    ' portion of the threads context will be modified.
    ' If the context record is used as an IN OUT parameter to capture
    ' the context of a thread, then only those portions of the thread's
    ' context corresponding to set flags will be returned.
    ' The context record is never used as an OUT only parameter.
    ContextFlags As Long
    ' This section is specified/returned if CONTEXT_DEBUG_REGISTERS is
    ' set in ContextFlags.  Note that CONTEXT_DEBUG_REGISTERS is NOT
    ' included in CONTEXT_FULL.
    Dr0 As Long
    Dr1 As Long
    Dr2 As Long
    Dr3 As Long
    Dr6 As Long
    Dr7 As Long
    ' This section is specified/returned if the
    ' ContextFlags word contians the flag CONTEXT_FLOATING_POINT.
    FloatSave As WOW64_FLOATING_SAVE_AREA
    ' This section is specified/returned if the
    ' ContextFlags word contians the flag CONTEXT_SEGMENTS.
    SegGs As Long
    SegFs As Long
    SegEs As Long
    SegDs As Long
    ' This section is specified/returned if the
    ' ContextFlags word contians the flag CONTEXT_INTEGER.
    Edi As Long
    Esi As Long
    Ebx As Long
    Edx As Long
    Ecx As Long
    Eax As Long
    ' This section is specified/returned if the
    ' ContextFlags word contians the flag CONTEXT_CONTROL.
    Ebp As Long
    Eip As Long
    SegCs As Long ' MUST BE SANITIZED
    EFlags As Long ' MUST BE SANITIZED
    Esp As Long
    SegSs As Long
    ' This section is specified/returned if the ContextFlags word
    ' contains the flag CONTEXT_EXTENDED_REGISTERS.
    ' The format and contexts are processor specific
    ExtendedRegisters(0 To (WOW64_MAXIMUM_SUPPORTED_EXTENSION - 1)) As Byte
End Type

Public Type WOW64_LDT_ENTRY
    LimitLow As Integer
    BaseLow As Integer
    BaseMid As Byte
    Flags1 As Byte
    Flags2 As Byte
    BaseHi As Byte
End Type

#Else

Public Enum EXCEPTION_CONTEXT_FLAGS
    CONTEXT_i386 = &H00010000  ' this assumes that i386 and
    CONTEXT_i486 = &H00010000  ' i486 have identical context records
'  end_wx86
    CONTEXT_CONTROL = (CONTEXT_i386 Or &H00000001)  ' SS:SP, CS:IP, FLAGS, BP
    CONTEXT_INTEGER = (CONTEXT_i386 Or &H00000002)  ' AX, BX, CX, DX, SI, DI
    CONTEXT_SEGMENTS = (CONTEXT_i386 Or &H00000004)  ' DS, ES, FS, GS
    CONTEXT_FLOATING_POINT = (CONTEXT_i386 Or &H00000008)  ' 387 state
    CONTEXT_DEBUG_REGISTERS = (CONTEXT_i386 Or &H00000010)  ' DB 0-3,6,7
    CONTEXT_EXTENDED_REGISTERS = (CONTEXT_i386 Or &H00000020)  ' cpu specific extensions
    CONTEXT_FULL = (CONTEXT_CONTROL Or CONTEXT_INTEGER Or CONTEXT_SEGMENTS)
    CONTEXT_ALL = (CONTEXT_CONTROL Or CONTEXT_INTEGER Or CONTEXT_SEGMENTS Or CONTEXT_FLOATING_POINT Or CONTEXT_DEBUG_REGISTERS Or CONTEXT_EXTENDED_REGISTERS)
    CONTEXT_XSTATE = (CONTEXT_i386 Or &H00000040)
    CONTEXT_EXCEPTION_ACTIVE = &H08000000
    CONTEXT_SERVICE_ACTIVE = &H10000000
    CONTEXT_EXCEPTION_REQUEST = &H40000000
    CONTEXT_EXCEPTION_REPORTING = &H80000000
End Enum



Public Const SIZE_OF_80387_REGISTERS = 80
Public Type FLOATING_SAVE_AREA
    ControlWord As Long
    StatusWord As Long
    TagWord As Long
    ErrorOffset As Long
    ErrorSelector As Long
    DataOffset As Long
    DataSelector As Long
    RegisterArea(0 To (SIZE_OF_80387_REGISTERS - 1)) As Byte
    Spare0 As Long
End Type
Public Const MAXIMUM_SUPPORTED_EXTENSION = 512
Public Type _CONTEXT
    ' The flags values within this flag control the contents of
    ' a CONTEXT record.
    ' If the context record is used as an input parameter, then
    ' for each portion of the context record controlled by a flag
    ' whose value is set, it is assumed that that portion of the
    ' context record contains valid context. If the context record
    ' is being used to modify a threads context, then only that
    ' portion of the threads context will be modified.
    ' If the context record is used as an IN OUT parameter to capture
    ' the context of a thread, then only those portions of the thread's
    ' context corresponding to set flags will be returned.
    ' The context record is never used as an OUT only parameter.
    ContextFlags As EXCEPTION_CONTEXT_FLAGS
    ' This section is specified/returned if CONTEXT_DEBUG_REGISTERS is
    ' set in ContextFlags.  Note that CONTEXT_DEBUG_REGISTERS is NOT
    ' included in CONTEXT_FULL.
    Dr0 As Long
    Dr1 As Long
    Dr2 As Long
    Dr3 As Long
    Dr6 As Long
    Dr7 As Long
    ' This section is specified/returned if the
    ' ContextFlags word contians the flag CONTEXT_FLOATING_POINT.
    FloatSave As FLOATING_SAVE_AREA
    ' This section is specified/returned if the
    ' ContextFlags word contians the flag CONTEXT_SEGMENTS.
    SegGs As Long
    SegFs As Long
    SegEs As Long
    SegDs As Long
    ' This section is specified/returned if the
    ' ContextFlags word contians the flag CONTEXT_INTEGER.
    Edi As Long
    Esi As Long
    Ebx As Long
    Edx As Long
    Ecx As Long
    Eax As Long
    ' This section is specified/returned if the
    ' ContextFlags word contians the flag CONTEXT_CONTROL.
    Ebp As Long
    Eip As Long
    SegCs As Long ' MUST BE SANITIZED
    EFlags As Long ' MUST BE SANITIZED
    Esp As Long
    SegSs As Long
    ' This section is specified/returned if the ContextFlags word
    ' contains the flag CONTEXT_EXTENDED_REGISTERS.
    ' The format and contexts are processor specific
    ExtendedRegisters(0 To (MAXIMUM_SUPPORTED_EXTENSION - 1)) As Byte
End Type
#End If

Public Type LDT_ENTRY
    LimitLow As Integer
    BaseLow As Integer
    BaseMid As Byte
    Flags1 As Byte
    Flags2 As Byte
    BaseHi As Byte
End Type


Public Type EXCEPTION_POINTERS
    ExceptionRecord As LongPtr 'PEXCEPTION_RECORD
    ContextRecord As LongPtr 'PCONTEXT
End Type

Public Const EXCEPTION_EXECUTE_HANDLER  = 1
Public Const EXCEPTION_CONTINUE_SEARCH  = 0
Public Const EXCEPTION_CONTINUE_EXECUTION  = (-1)

Public Enum SET_SEARCH_PATH_FLAGS
    BASE_SEARCH_PATH_ENABLE_SAFE_SEARCHMODE = &H1
    BASE_SEARCH_PATH_DISABLE_SAFE_SEARCHMODE = &H10000
    BASE_SEARCH_PATH_PERMANENT = &H8000&
    BASE_SEARCH_PATH_INVALID_FLAGS = Not &H18001
End Enum

Public Enum PROCESS_FULL_IMAGENAME_FLAGS
    PROCESS_NAME_NATIVE = &H1
End Enum

Public Enum DBG_EVENT_TYPES
    EXCEPTION_DEBUG_EVENT = 1
    CREATE_THREAD_DEBUG_EVENT = 2
    CREATE_PROCESS_DEBUG_EVENT = 3
    EXIT_THREAD_DEBUG_EVENT = 4
    EXIT_PROCESS_DEBUG_EVENT = 5
    LOAD_DLL_DEBUG_EVENT = 6
    UNLOAD_DLL_DEBUG_EVENT = 7
    OUTPUT_DEBUG_STRING_EVENT = 8
    RIP_EVENT = 9
End Enum

Public Delegate Function ThreadStartRoutine (ByVal lpThreadParameter As LongPtr) As Long
Public Delegate Function EnclaveRoutine (ByVal lpThreadParameter As LongPtr) As LongPtr


Public Type EXCEPTION_DEBUG_INFO
    ExceptionRecord As EXCEPTION_RECORD
    dwFirstChance As Long
End Type

' Public Type CREATE_THREAD_DEBUG_INFO
'     hThread As LongPtr
'     lpThreadLocalBase As LongPtr
'     lpStartAddress As ThreadStartRoutine 'LPTHREAD_START_ROUTINE
' End Type
Public Type CREATE_THREAD_DEBUG_INFO
    hThread As LongPtr
    lpThreadLocalBase As LongPtr
    lpStartAddress As LongPtr 'LPTHREAD_START_ROUTINE
End Type

' Public Type CREATE_PROCESS_DEBUG_INFO
'     hFile As LongPtr
'     hProcess As LongPtr
'     hThread As LongPtr
'     lpBaseOfImage As LongPtr
'     dwDebugInfoFileOffset As Long
'     nDebugInfoSize As Long
'     lpThreadLocalBase As LongPtr
'     lpStartAddress As ThreadStartRoutine 'LPTHREAD_START_ROUTINE
'     lpImageName As LongPtr
'     fUnicode As Integer
' End Type
Public Type CREATE_PROCESS_DEBUG_INFO
    hFile As LongPtr
    hProcess As LongPtr
    hThread As LongPtr
    lpBaseOfImage As LongPtr
    dwDebugInfoFileOffset As Long
    nDebugInfoSize As Long
    lpThreadLocalBase As LongPtr
    lpStartAddress As LongPtr 'LPTHREAD_START_ROUTINE
    lpImageName As LongPtr
    fUnicode As Integer
End Type

Public Type EXIT_THREAD_DEBUG_INFO
    dwExitCode As Long
End Type
Public Type EXIT_PROCESS_DEBUG_INFO
    dwExitCode As Long
End Type

Public Type LOAD_DLL_DEBUG_INFO
    hFile As LongPtr
    lpBaseOfDll As LongPtr
    dwDebugInfoFileOffset As Long
    nDebugInfoSize As Long
    lpImageName As LongPtr
    fUnicode As Integer
End Type

Public Type UNLOAD_DLL_DEBUG_INFO
    lpBaseOfDll As LongPtr
End Type

Public Type OUTPUT_DEBUG_STRING_INFO
    lpDebugStringData As LongPtr
    fUnicode As Integer
    nDebugStringLength As Integer
End Type

Public Type RIP_INFO
    dwError As Long
    dwType As SetLastErrorEx_Flags
End Type

[Description("Go to definition for comments. Union options defined under their respective names, e.g. EXCEPTION_DEBUG_INFO")]
Public Type DEBUG_EVENT
    dwDebugEventCode As DBG_EVENT_TYPES
    dwProcessId As Long
    dwThreadId As Long
    ' union {
        ' EXCEPTION_DEBUG_INFO Exception;
        ' CREATE_THREAD_DEBUG_INFO CreateThread;
        ' CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
        ' EXIT_THREAD_DEBUG_INFO ExitThread;
        ' EXIT_PROCESS_DEBUG_INFO ExitProcess;
        ' LOAD_DLL_DEBUG_INFO LoadDll;
        ' UNLOAD_DLL_DEBUG_INFO UnloadDll;
        ' OUTPUT_DEBUG_STRING_INFO DebugString;
        ' RIP_INFO RipInfo;
    ' } u;
    #If Win64 Then
    u(71) As Byte
    #Else
    u(39) As Byte
    #End If
End Type

Public Enum DBG_CONTROL_FLAGS
    DBG_EXCEPTION_HANDLED = &H00010001
    DBG_CONTINUE = &H00010002
    DBG_REPLY_LATER = &H40010001
    DBG_UNABLE_TO_PROVIDE_HANDLE = &H40010002
    DBG_TERMINATE_THREAD = &H40010003
    DBG_TERMINATE_PROCESS = &H40010004
    DBG_CONTROL_C = &H40010005
    DBG_PRINTEXCEPTION_C = &H40010006
    DBG_RIPEXCEPTION = &H40010007
    DBG_CONTROL_BREAK = &H40010008
    DBG_COMMAND_EXCEPTION = &H40010009
    DBG_PRINTEXCEPTION_WIDE_C = &H4001000A
    DBG_EXCEPTION_NOT_HANDLED = &H80010001
End Enum

Public Const XSTATE_LEGACY_FLOATING_POINT  = (0)
Public Const XSTATE_LEGACY_SSE  = (1)
Public Const XSTATE_GSSE  = (2)
Public Const XSTATE_AVX  = (XSTATE_GSSE)
Public Const XSTATE_MPX_BNDREGS  = (3)
Public Const XSTATE_MPX_BNDCSR  = (4)
Public Const XSTATE_AVX512_KMASK  = (5)
Public Const XSTATE_AVX512_ZMM_H  = (6)
Public Const XSTATE_AVX512_ZMM  = (7)
Public Const XSTATE_IPT  = (8)
Public Const XSTATE_PASID  = (10)
Public Const XSTATE_CET_U  = (11)
Public Const XSTATE_CET_S  = (12)
Public Const XSTATE_AMX_TILE_CONFIG  = (17)
Public Const XSTATE_AMX_TILE_DATA  = (18)
Public Const XSTATE_LWP  = (62)
Public Const MAXIMUM_XSTATE_FEATURES  = (64)

Public Const XSTATE_MASK_LEGACY_FLOATING_POINT As LongLong = (1 << (XSTATE_LEGACY_FLOATING_POINT))
Public Const XSTATE_MASK_LEGACY_SSE            As LongLong = (1 << (XSTATE_LEGACY_SSE))
Public Const XSTATE_MASK_LEGACY                As LongLong = (XSTATE_MASK_LEGACY_FLOATING_POINT Or XSTATE_MASK_LEGACY_SSE)
Public Const XSTATE_MASK_GSSE                  As LongLong = (1 << (XSTATE_GSSE))
Public Const XSTATE_MASK_AVX                   As LongLong = (XSTATE_MASK_GSSE)
Public Const XSTATE_MASK_MPX                   As LongLong = ((1 << (XSTATE_MPX_BNDREGS)) Or (1 << (XSTATE_MPX_BNDCSR)))
Public Const XSTATE_MASK_AVX512                As LongLong = ((1 << (XSTATE_AVX512_KMASK)) Or (1 << (XSTATE_AVX512_ZMM_H)) Or (1 << (XSTATE_AVX512_ZMM)))
Public Const XSTATE_MASK_IPT                   As LongLong = (1 << (XSTATE_IPT))
Public Const XSTATE_MASK_PASID                 As LongLong = (1 << (XSTATE_PASID))
Public Const XSTATE_MASK_CET_U                 As LongLong = (1 << (XSTATE_CET_U))
Public Const XSTATE_MASK_CET_S                 As LongLong = (1 << (XSTATE_CET_S))
Public Const XSTATE_MASK_AMX_TILE_CONFIG       As LongLong = (1 << (XSTATE_AMX_TILE_CONFIG))
Public Const XSTATE_MASK_AMX_TILE_DATA         As LongLong = (1 << (XSTATE_AMX_TILE_DATA))
Public Const XSTATE_MASK_LWP                   As LongLong = (1 << (XSTATE_LWP))
Public Const XSTATE_MASK_ALLOWED  = (XSTATE_MASK_LEGACY Or XSTATE_MASK_AVX Or XSTATE_MASK_MPX Or XSTATE_MASK_AVX512 Or XSTATE_MASK_IPT Or XSTATE_MASK_CET_U Or XSTATE_MASK_LWP)

Public Const XSTATE_COMPACTION_ENABLE      As LongLong = (63)
Public Const XSTATE_COMPACTION_ENABLE_MASK As LongLong = (1 << (XSTATE_COMPACTION_ENABLE))
Public Const XSTATE_ALIGN_BIT As LongLong = (1)
Public Const XSTATE_ALIGN_MASK As LongLong = (1 << (XSTATE_ALIGN_BIT))
Public Const XSTATE_XFD_BIT As LongLong = (2)
Public Const XSTATE_XFD_MASK  As LongLong = (1 << (XSTATE_XFD_BIT))

Public Enum XSTATE_CONTROL_FLAGS
    XSTATE_CONTROLFLAG_XSAVEOPT_MASK = (1)
    XSTATE_CONTROLFLAG_XSAVEC_MASK = (2)
    XSTATE_CONTROLFLAG_XFD_MASK = (4)
    XSTATE_CONTROLFLAG_VALID_MASK = (XSTATE_CONTROLFLAG_XSAVEOPT_MASK Or XSTATE_CONTROLFLAG_XSAVEC_MASK Or XSTATE_CONTROLFLAG_XFD_MASK)
End Enum

Public Type XSTATE_FEATURE
    Offset As Long
    Size As Long
End Type

Public Type XSTATE_CONFIGURATION
    ' Mask of all enabled features
    EnabledFeatures As LongLong
    ' Mask of volatile enabled features
    EnabledVolatileFeatures As LongLong
    ' Total size of the save area for user states
    Size As Long
    ' Control Flags
    'union {
    ControlFlags As XSTATE_CONTROL_FLAGS
    '    struct
    '    {
    '        DWORD OptimizedSave : 1;
    '        DWORD CompactionEnabled : 1;
    '       DWORD ExtendedFeatureDisable : 1;
    '  } DUMMYSTRUCTNAME;
    '} DUMMYUNIONNAME;
    ' List of features
    Features(0 To (MAXIMUM_XSTATE_FEATURES - 1)) As XSTATE_FEATURE
    ' Mask of all supervisor features
    EnabledSupervisorFeatures As LongLong
    ' Mask of features that require start address to be 64 byte aligned
    AlignedFeatures As LongLong
    ' Total size of the save area for user and supervisor states
    AllFeatureSize As Long
    ' List which holds size of each user and supervisor state supported by CPU
    AllFeatures(0 To (MAXIMUM_XSTATE_FEATURES - 1)) As Long
    ' Mask of all supervisor features that are exposed to user-mode
    EnabledUserVisibleSupervisorFeatures As LongLong
    ' Mask of features that can be disabled via XFD
    ExtendedFeatureDisableFeatures As LongLong
    ' Total size of the save area for non-large user and supervisor states
    AllNonLargeFeatureSize As Long
    Spare As Long
End Type

Public Enum SYSTEM_AC_LINE_STATUS
    AC_LINE_OFFLINE = &H0
    AC_LINE_ONLINE = &H1
    AC_LINE_BACKUP_POWER = &H2
    AC_LINE_UNKNOWN = &HFF
End Enum
Public Enum SYSTEM_BATTERY_FLAGS
    BATTERY_FLAG_HIGH = &H1
    BATTERY_FLAG_LOW = &H2
    BATTERY_FLAG_CRITICAL = &H4
    BATTERY_FLAG_CHARGING = &H8
    BATTERY_FLAG_NO_BATTERY = &H80
    BATTERY_FLAG_UNKNOWN = &HFF
    BATTERY_PERCENTAGE_UNKNOWN = &HFF
    BATTERY_LIFE_UNKNOWN = &HFFFFFFFF
End Enum

Public Type SYSTEM_POWER_STATUS
    /* [ TypeHint(SYSTEM_AC_LINE_STATUS) ] */ ACLineStatus As Byte
    /* [ TypeHint(SYSTEM_BATTERY_FLAGS) ] */ BatteryFlag As Byte
    BatteryLifePercent As Byte
    SystemStatusFlag As Byte
    BatteryLifeTime As Long
    BatteryFullLifeTime As Long
End Type
Public Enum SYSTEM_POWER_STATE
    PowerSystemUnspecified = 0
    PowerSystemWorking = 1
    PowerSystemSleeping1 = 2
    PowerSystemSleeping2 = 3
    PowerSystemSleeping3 = 4
    PowerSystemHibernate = 5
    PowerSystemShutdown = 6
    PowerSystemMaximum = 7
End Enum
Public Enum POWER_ACTION
    PowerActionNone = 0
    PowerActionReserved
    PowerActionSleep
    PowerActionHibernate
    PowerActionShutdown
    PowerActionShutdownReset
    PowerActionShutdownOff
    PowerActionWarmEject
    PowerActionDisplayOff
End Enum
Public Enum DEVICE_POWER_STATE
    PowerDeviceUnspecified = 0
    PowerDeviceD0 = 1
    PowerDeviceD1 = 2
    PowerDeviceD2 = 3
    PowerDeviceD3 = 4
    PowerDeviceMaximum = 5
End Enum
Public Enum MONITOR_DISPLAY_STATE
    PowerMonitorOff = 0
    PowerMonitorOn
    PowerMonitorDim
End Enum
Public Enum USER_ACTIVITY_PRESENCE
    PowerUserPresent = 0
    PowerUserNotPresent = 1
    PowerUserInactive = 2
    PowerUserMaximum = 3
    PowerUserInvalid = PowerUserMaximum
End Enum
Public Enum EXECUTION_STATE
    ES_SYSTEM_REQUIRED = (&H00000001)
    ES_DISPLAY_REQUIRED = (&H00000002)
    ES_USER_PRESENT = (&H00000004)
    ES_AWAYMODE_REQUIRED = (&H00000040)
    ES_CONTINUOUS = (&H80000000)
End Enum
Public Enum POWER_REQUEST_TYPE
    PowerRequestDisplayRequired
    PowerRequestSystemRequired
    PowerRequestAwayModeRequired
    PowerRequestExecutionRequired
End Enum

Public Enum POWER_INFORMATION_LEVEL
    SystemPowerPolicyAc
    SystemPowerPolicyDc
    VerifySystemPolicyAc
    VerifySystemPolicyDc
    SystemPowerCapabilities
    SystemBatteryState
    SystemPowerStateHandler
    ProcessorStateHandler
    SystemPowerPolicyCurrent
    AdministratorPowerPolicy
    SystemReserveHiberFile
    ProcessorInformation
    SystemPowerInformation
    ProcessorStateHandler2
    LastWakeTime                                   ' Compare with KeQueryInterruptTime()
    LastSleepTime                                  ' Compare with KeQueryInterruptTime()
    SystemExecutionState
    SystemPowerStateNotifyHandler
    ProcessorPowerPolicyAc
    ProcessorPowerPolicyDc
    VerifyProcessorPowerPolicyAc
    VerifyProcessorPowerPolicyDc
    ProcessorPowerPolicyCurrent
    SystemPowerStateLogging
    SystemPowerLoggingEntry
    SetPowerSettingValue
    NotifyUserPowerSetting
    PowerInformationLevelUnused0
    SystemMonitorHiberBootPowerOff
    SystemVideoState
    TraceApplicationPowerMessage
    TraceApplicationPowerMessageEnd
    ProcessorPerfStates
    ProcessorIdleStates
    ProcessorCap
    SystemWakeSource
    SystemHiberFileInformation
    TraceServicePowerMessage
    ProcessorLoad
    PowerShutdownNotification
    MonitorCapabilities
    SessionPowerInit
    SessionDisplayState
    PowerRequestCreate
    PowerRequestAction
    GetPowerRequestList
    ProcessorInformationEx
    NotifyUserModeLegacyPowerEvent
    GroupPark
    ProcessorIdleDomains
    WakeTimerList
    SystemHiberFileSize
    ProcessorIdleStatesHv
    ProcessorPerfStatesHv
    ProcessorPerfCapHv
    ProcessorSetIdle
    LogicalProcessorIdling
    UserPresence
    PowerSettingNotificationName
    GetPowerSettingValue
    IdleResiliency
    SessionRITState
    SessionConnectNotification
    SessionPowerCleanup
    SessionLockState
    SystemHiberbootState
    PlatformInformation
    PdcInvocation
    MonitorInvocation
    FirmwareTableInformationRegistered
    SetShutdownSelectedTime
    SuspendResumeInvocation                        ' Deprecated
    PlmPowerRequestCreate
    ScreenOff
    CsDeviceNotification
    PlatformRole
    LastResumePerformance
    DisplayBurst
    ExitLatencySamplingPercentage
    RegisterSpmPowerSettings
    PlatformIdleStates
    ProcessorIdleVeto                              ' Deprecated.
    PlatformIdleVeto                               ' Deprecated.
    SystemBatteryStatePrecise
    ThermalEvent
    PowerRequestActionInternal
    BatteryDeviceState
    PowerInformationInternal
    ThermalStandby
    SystemHiberFileType
    PhysicalPowerButtonPress
    QueryPotentialDripsConstraint
    EnergyTrackerCreate
    EnergyTrackerQuery
    UpdateBlackBoxRecorder
    SessionAllowExternalDmaDevices
    SendSuspendResumeNotification
    BlackBoxRecorderDirectAccessBuffer
    PowerInformationLevelMaximum
End Enum

Public Enum LATENCY_TIME
    LT_DONT_CARE = 0
    LT_LOWEST_LATENCY = 1
End Enum

Public Enum CPU_SET_INFORMATION_TYPE
    CpuSetInformation = 0
End Enum
Public Enum SysCpuSetInfoFlags
    SYSTEM_CPU_SET_INFORMATION_PARKED = &H1
    SYSTEM_CPU_SET_INFORMATION_ALLOCATED = &H2
    SYSTEM_CPU_SET_INFORMATION_ALLOCATED_TO_TARGET_PROCESS = &H4
    SYSTEM_CPU_SET_INFORMATION_REALTIME = &H8
End Enum
Public Type SYSTEM_CPU_SET_INFORMATION
    Size As Long
    Type As CPU_SET_INFORMATION_TYPE
    'union {
    ' struct {
        ' DWORD Id;
        ' WORD   Group;
        ' BYTE  LogicalProcessorIndex;
        ' BYTE  CoreIndex;
        ' BYTE  LastLevelCacheIndex;
        ' BYTE  NumaNodeIndex;
        ' BYTE  EfficiencyClass;
        ' union {

' #define SYSTEM_CPU_SET_INFORMATION_PARKED 0x1
' #define SYSTEM_CPU_SET_INFORMATION_ALLOCATED 0x2
' #define SYSTEM_CPU_SET_INFORMATION_ALLOCATED_TO_TARGET_PROCESS 0x4
' #define SYSTEM_CPU_SET_INFORMATION_REALTIME 0x8

            ' BYTE  AllFlags;
            ' struct {
                ' BYTE  Parked : 1;
                ' BYTE  Allocated : 1;
                ' BYTE  AllocatedToTargetProcess : 1;
                ' BYTE  RealTime : 1;
                ' BYTE  ReservedFlags : 4;
            ' } DUMMYSTRUCTNAME;
        ' } DUMMYUNIONNAME2;

        ' union {
            ' DWORD Reserved;
            ' BYTE  SchedulingClass;
        ' };

        ' DWORD64 AllocationTag;
    ' } CpuSet;
' } DUMMYUNIONNAME;
    u(23) As Byte
End Type



Public DeclareWide PtrSafe Function DeviceIoControl Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwIoControlCode As Long, lpInBuffer As Any, ByVal nInBufferSize As Long, lpOutBuffer As Any, ByVal nOutBufferSize As Long, lpBytesReturned As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function GetDevicePowerState Lib "kernel32" (ByVal hDevice As LongPtr, pfOn As BOOL) As BOOL
Public Declare PtrSafe Function GetSystemPowerStatus Lib "kernel32" (lpSystemPowerStatus As SYSTEM_POWER_STATUS) As BOOL
Public Declare PtrSafe Function SetSystemPowerState Lib "kernel32" (ByVal fSuspend As BOOL, ByVal fForce As BOOL) As BOOL
Public Declare PtrSafe Function IsSystemResumeAutomatic Lib "kernel32" () As BOOL
Public Declare PtrSafe Function CancelDeviceWakeupRequest Lib "kernel32" (ByVal hDevice As LongPtr) As BOOL
Public Declare PtrSafe Function RequestDeviceWakeup Lib "kernel32" (ByVal hDevice As LongPtr) As BOOL
Public Declare PtrSafe Function PowerCreateRequest Lib "kernel32" (Context As REASON_CONTEXT) As LongPtr
Public Declare PtrSafe Function PowerSetRequest Lib "kernel32" (ByVal PowerRequest As LongPtr, ByVal RequestType As POWER_REQUEST_TYPE) As BOOL
Public Declare PtrSafe Function PowerClearRequest Lib "kernel32" (ByVal PowerRequest As LongPtr, ByVal RequestType As POWER_REQUEST_TYPE) As BOOL
Public Declare PtrSafe Function RequestWakeupLatency Lib "kernel32" (ByVal latency As LATENCY_TIME) As BOOL
Public Declare PtrSafe Function GetMachineTypeAttributes Lib "kernel32" ([TypeHint(ImageMachineType)] ByVal Machine As Integer, MachineTypeAttributes As MACHINE_ATTRIBUTES) As Long


Public Declare PtrSafe Function SetErrorMode Lib "kernel32" (ByVal uMode As ErrorModes) As ErrorModes
Public Declare PtrSafe Function GetErrorMode Lib "kernel32" () As ErrorModes
Public Declare PtrSafe Function SetThreadErrorMode Lib "kernel32" (ByVal dwNewMode As ErrorModes, lpOldMode As ErrorModes) As BOOL
Public Declare PtrSafe Function GetThreadErrorMode Lib "kernel32" () As ErrorModes
Public Declare PtrSafe Sub SetLastError Lib "kernel32" (ByVal dwErrorCode As Long)
Public Declare PtrSafe Function GetLastError Lib "kernel32" () As Long
Public Declare PtrSafe Sub FatalAppExitA Lib "kernel32" (ByVal uAction As Long, ByVal lpMessageText As String)
Public Declare PtrSafe Sub FatalAppExitW Lib "kernel32" (ByVal uAction As Long, ByVal lpMessageText As LongPtr)
Public DeclareWide PtrSafe Sub FatalAppExit Lib "kernel32" Alias "FatalAppExitW" (ByVal uAction As Long, ByVal lpMessageText As String)
Public Declare PtrSafe Sub SetUnhandledExceptionFilter Lib "kernel32" (ByVal lpTopLevelExceptionFilter As LongPtr)
Public Declare PtrSafe Function UnhandledExceptionFilter Lib "kernel32" (ExceptionInfo As EXCEPTION_POINTERS) As Long
Public Declare PtrSafe Sub TerminateProcessOnMemoryExhaustion Lib "kernelbase" (ByVal FailedAllocationSize As LongPtr)
Public Declare PtrSafe Function SetHandleCount Lib "kernel32" (ByVal uNumber As Long) As BOOL
Public Declare PtrSafe Function SetThreadExecutionState Lib "kernel32" (ByVal esFlags As EXECUTION_STATE) As EXECUTION_STATE

[Description("ANSI messages only. For Unicode, use WaitForDebugEventEx")]
Public Declare PtrSafe Function WaitForDebugEvent Lib "kernel32" (lpDebugEvent As DEBUG_EVENT, ByVal dwMillisecondss As Long) As BOOL
Public Declare PtrSafe Function WaitForDebugEventEx Lib "kernel32" (lpDebugEvent As DEBUG_EVENT, ByVal dwMillisecondss As Long) As BOOL
Public Declare PtrSafe Sub OutputDebugStringA Lib "kernel32" (Optional ByVal lpOutputString As String)
Public Declare PtrSafe Sub OutputDebugStringW Lib "kernel32" (Optional ByVal lpOutputString As LongPtr)
Public DeclareWide PtrSafe Sub OutputDebugString Lib "kernel32" Alias "OutputDebugStringW" (Optional ByVal lpOutputString As String)
Public Declare PtrSafe Function IsDebuggerPresent Lib "kernel32" () As BOOL
Public Declare PtrSafe Sub DebugBreak Lib "kernel32" ()
Public Declare PtrSafe Function ContinueDebugEvent Lib "kernel32" (ByVal dwProcessId As Long, ByVal dwThreadId As Long, ByVal dwContinueStatus As DBG_CONTROL_FLAGS) As BOOL
Public Declare PtrSafe Function DebugActiveProcess Lib "kernel32" (ByVal dwProcessId As Long) As BOOL
Public Declare PtrSafe Function DebugActiveProcessStop Lib "kernel32" (ByVal dwProcessId As Long) As BOOL
Public Declare PtrSafe Function CheckRemoteDebuggerPresent Lib "kernel32" (ByVal hProcess As LongPtr, pbDebuggerPresent As BOOL) As BOOL
Public Declare PtrSafe Function DebugSetProcessKillOnExit Lib "kernel32" (ByVal KillOnExit As BOOL) As BOOL
Public Declare PtrSafe Function DebugBreakProcess Lib "kernel32" (ByVal hProcess As LongPtr) As BOOL
Public Declare PtrSafe Sub FatalExit Lib "kernel32" (ByVal ExitCode As Long)
Public Declare PtrSafe Function FlushInstructionCache Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpBaseAddress As LongPtr, ByVal dwSize As LongPtr) As BOOL
Public Declare PtrSafe Function GetThreadContext Lib "kernel32" (ByVal hThread As LongPtr, lpContext As _CONTEXT) As BOOL
Public Declare PtrSafe Function SetThreadContext Lib "kernel32" (ByVal hThread As LongPtr, lpContext As _CONTEXT) As BOOL
#If Win64 Then
Public Declare PtrSafe Function Wow64GetThreadContext Lib "kernel32" (ByVal hThread As LongPtr, lpContext As WOW64_CONTEXT) As BOOL
Public Declare PtrSafe Function Wow64SetThreadContext Lib "kernel32" (ByVal hThread As LongPtr, lpContext As WOW64_CONTEXT) As BOOL
Public Declare PtrSafe Function Wow64GetThreadSelectorEntry Lib "kernel32" (ByVal hThread As LongPtr, ByVal dwSelector As Long, lpSelectorEntry As WOW64_LDT_ENTRY) As BOOL
#End If
Public Declare PtrSafe Function GetThreadSelectorEntry Lib "kernel32" (ByVal hThread As LongPtr, ByVal dwSelector As Long, lpSelectorEntry As LDT_ENTRY) As BOOL
Public DeclareWide PtrSafe Function InitializeContext Lib "kernel32" (Buffer As Any, ByVal ContextFlags As EXCEPTION_CONTEXT_FLAGS, Context As LongPtr, ContextLength As Long) As BOOL
Public Declare PtrSafe Function GetXStateFeaturesMask Lib "kernel32" (ByVal Context As LongPtr, FeatureMask As LongLong) As BOOL
Public Declare PtrSafe Function SetXStateFeaturesMask Lib "kernel32" (ByVal Context As LongPtr, ByVal FeatureMask As LongLong) As BOOL
Public Declare PtrSafe Function GetSystemCpuSetInformation Lib "kernel32" (Information As SYSTEM_CPU_SET_INFORMATION, ByVal BufferLength As Long, ReturnedLength As Long, ByVal Process As LongPtr, ByVal Flags As Long) As BOOL
Public Declare PtrSafe Function GetProcessDefaultCpuSets Lib "kernel32" (ByVal Process As LongPtr, CpuSetIds As Long, ByVal CpuSetIdCount As Long, RequiredIdCount As Long) As BOOL
Public Declare PtrSafe Function SetProcessDefaultCpuSets Lib "kernel32" (ByVal Process As LongPtr, CpuSetIds As Long, ByVal CpuSetIdCount As Long) As BOOL
Public Declare PtrSafe Function GetThreadSelectedCpuSets Lib "kernel32" (ByVal Thread As LongPtr, CpuSetIds As Long, ByVal CpuSetIdCount As Long, RequiredIdCount As Long) As BOOL
Public Declare PtrSafe Function SetThreadSelectedCpuSets Lib "kernel32" (ByVal Thread As LongPtr, CpuSetIds As Long, ByVal CpuSetIdCount As Long) As BOOL
Public Declare PtrSafe Function GetProcessDefaultCpuSetMasks Lib "kernel32" (ByVal Process As LongPtr, CpuSetMasks As GROUP_AFFINITY, ByVal CpuSetMaskCount As Integer, RequiredMaskCount As Integer) As BOOL
Public Declare PtrSafe Function SetProcessDefaultCpuSetMasks Lib "kernel32" (ByVal Process As LongPtr, CpuSetMasks As GROUP_AFFINITY, ByVal CpuSetMaskCount As Integer) As BOOL
Public Declare PtrSafe Function GetThreadSelectedCpuSetMasks Lib "kernel32" (ByVal Thread As LongPtr, CpuSetMasks As GROUP_AFFINITY, ByVal CpuSetMaskCount As Integer, RequiredMaskCount As Integer) As BOOL
Public Declare PtrSafe Function SetThreadSelectedCpuSetMasks Lib "kernel32" (ByVal Thread As LongPtr, CpuSetMasks As GROUP_AFFINITY, ByVal CpuSetMaskCount As Integer) As BOOL



Public Enum LOCALE_ENUM_FLAGS
    LCID_INSTALLED = &H00000001  ' installed locale ids
    LCID_SUPPORTED = &H00000002  ' supported locale ids
    LCID_ALTERNATE_SORTS = &H00000004  ' alternate sort locale ids
    LcidSpecialValue = &H39
End Enum

[Description("📝**NOTE:** This enum is used with several functions; not all functions support all flags.")]
Public Enum TIME_FORMAT_FLAGS
    TIME_NOMINUTESORSECONDS = &H00000001  ' do not use minutes or seconds
    TIME_NOSECONDS = &H00000002  ' do not use seconds
    TIME_NOTIMEMARKER = &H00000004  ' do not use time marker
    TIME_FORCE24HOURFORMAT = &H00000008  ' always use 24 hour format
End Enum

Public Enum DATE_FORMAT_FLAGS
    DATE_SHORTDATE = &H00000001  ' use short date picture
    DATE_LONGDATE = &H00000002  ' use long date picture
    DATE_USE_ALT_CALENDAR = &H00000004  ' use alternate calendar (if any)
    DATE_YEARMONTH = &H00000008  ' use year month picture
    DATE_LTRREADING = &H00000010  ' add marks for left to right reading order layout
    DATE_RTLREADING = &H00000020  ' add marks for right to left reading order layout
' #if (WINVER >= _WIN32_WINNT_WIN7)
    DATE_AUTOLAYOUT = &H00000040  ' add appropriate marks for left-to-right or right-to-left reading order layout
' #endif //(WINVER >= _WIN32_WINNT_WIN7)
' #if (WINVER >= _WIN32_WINNT_WINTHRESHOLD)
    DATE_MONTHDAY = &H00000080  ' include month day pictures
End Enum

Public Enum MUI_ENUM_FLAGS
    MUI_LANGUAGE_ID = &H4  ' Use traditional language ID convention
    MUI_LANGUAGE_NAME = &H8  ' Use ISO language (culture) name convention
    MUI_ALL_INSTALLED_LANGUAGES = &H20
    MUI_LICENSED_LANGUAGES = &H40
    'MUI_GROUP_POLICY = ???
End Enum
Public Enum GTUILANG_FLAGS
    MUI_MERGE_SYSTEM_FALLBACK = &H10  ' GetThreadPreferredUILanguages merges in parent and base languages
    MUI_MERGE_USER_FALLBACK = &H20  ' GetThreadPreferredUILanguages merges in user preferred languages
    MUI_UI_FALLBACK = MUI_MERGE_SYSTEM_FALLBACK Or MUI_MERGE_USER_FALLBACK
    MUI_THREAD_LANGUAGES = &H40  ' GetThreadPreferredUILanguages merges in user preferred languages
End Enum
Public Enum STUILANG_FLAGS
    MUI_CONSOLE_FILTER = &H100  ' SetThreadPreferredUILanguages takes on console specific behavior
    MUI_COMPLEX_SCRIPT_FILTER = &H200  ' SetThreadPreferredUILanguages takes on complex script specific behavior
    MUI_RESET_FILTERS = &H001  ' Reset MUI_CONSOLE_FILTER and MUI_COMPLEX_SCRIPT_FILTER
End Enum

Public Enum NlsFileMuiPathFlags
    MUI_USER_PREFERRED_UI_LANGUAGES = &H10  ' GetFileMUIPath returns the MUI files for the languages in the fallback list
    MUI_USE_INSTALLED_LANGUAGES = &H20  ' GetFileMUIPath returns all the MUI files installed in the machine
    MUI_USE_SEARCH_ALL_LANGUAGES = &H40  ' GetFileMUIPath returns all the MUI files irrespective of whether language is installed
    MUI_LANG_NEUTRAL_PE_FILE = &H100  ' GetFileMUIPath returns target file with .mui extension
    MUI_NON_LANG_NEUTRAL_FILE = &H200  ' GetFileMUIPath returns target file with same name as source
    MUI_MACHINE_LANGUAGE_SETTINGS = &H400
End Enum

Public Enum NlsFileMuiFileTypeFlags
    MUI_FILETYPE_NOT_LANGUAGE_NEUTRAL = &H001  ' GetFileMUIInfo found a non-split resource file
    MUI_FILETYPE_LANGUAGE_NEUTRAL_MAIN = &H002  ' GetFileMUIInfo found a LN main module resource file
    MUI_FILETYPE_LANGUAGE_NEUTRAL_MUI = &H004  ' GetFileMUIInfo found a LN MUI module resource file
End Enum

Public Enum NlsFileMuiQueryType
    MUI_QUERY_TYPE = &H001  ' GetFileMUIInfo will look for the type of the resource file
    MUI_QUERY_CHECKSUM = &H002  ' GetFileMUIInfo will look for the checksum of the resource file
    MUI_QUERY_LANGUAGE_NAME = &H004  ' GetFileMUIInfo will look for the culture of the resource file
    MUI_QUERY_RESOURCE_TYPES = &H008  ' GetFileMUIInfo will look for the resource types of the resource file
End Enum

Public Enum FileMuiInfoVerions
    MUI_FILEINFO_VERSION = &H1
End Enum

Public Type FILEMUIINFO
    dwSize As Long ' Size of the structure including buffer size [in]
    dwVersion As FileMuiInfoVerions ' Version of the structure [in]
    dwFileType As NlsFileMuiFileTypeFlags ' Type of the file [out]
    pChecksum(0 To 15) As Byte ' Checksum of the file [out]
    pServiceChecksum(0 To 15) As Byte ' Checksum of the file [out]
    dwLanguageNameOffset As Long ' Language name of the file [out]
    dwTypeIDMainSize As Long ' Number of TypeIDs in main module [out]
    dwTypeIDMainOffset As Long ' Array of TypeIDs (DWORD) in main module [out]
    dwTypeNameMainOffset As Long ' Multistring array of TypeNames in main module [out]
    dwTypeIDMUISize As Long ' Number of TypeIDs in MUI module [out]
    dwTypeIDMUIOffset As Long ' Array of TypeIDs (DWORD) in MUI module [out]
    dwTypeNameMUIOffset As Long ' Multistring array of TypeNames in MUI module [out]
    abBuffer(0 To 7) As Byte ' Buffer for extra data [in] (Size 4 is for padding)
End Type




Public Enum CODEPAGE_ENUM_FLAGS
    CP_INSTALLED = &H00000001  ' installed code page ids
    CP_SUPPORTED = &H00000002  ' supported code page ids
End Enum

Public Enum CALID
    CAL_GREGORIAN = 1  ' Gregorian (localized) calendar
    CAL_GREGORIAN_US = 2  ' Gregorian (U.S.) calendar
    CAL_JAPAN = 3  ' Japanese Emperor Era calendar
    CAL_TAIWAN = 4  ' Taiwan calendar
    CAL_KOREA = 5  ' Korean Tangun Era calendar
    CAL_HIJRI = 6  ' Hijri (Arabic Lunar) calendar
    CAL_THAI = 7  ' Thai calendar
    CAL_HEBREW = 8  ' Hebrew (Lunar) calendar
    CAL_GREGORIAN_ME_FRENCH = 9  ' Gregorian Middle East French calendar
    CAL_GREGORIAN_ARABIC = 10  ' Gregorian Arabic calendar
    CAL_GREGORIAN_XLIT_ENGLISH = 11  ' Gregorian Transliterated English calendar
    CAL_GREGORIAN_XLIT_FRENCH = 12  ' Gregorian Transliterated French calendar
    CAL_PERSIAN = 22  ' Persian (Solar Hijri) calendar
    CAL_UMALQURA = 23  ' UmAlQura Hijri (Arabic Lunar) calendar
    ENUM_ALL_CALENDARS = &Hffffffff
End Enum
Public Enum CALTYPE
    CAL_NOUSEROVERRIDE = LOCALE_NOUSEROVERRIDE  ' Not Recommended - do not use user overrides
    CAL_USE_CP_ACP = LOCALE_USE_CP_ACP  ' DEPRECATED, call Unicode APIs instead: use the system ACP
    CAL_RETURN_NUMBER = LOCALE_RETURN_NUMBER  ' return number instead of string
' #if (WINVER >= _WIN32_WINNT_WIN7)
    CAL_RETURN_GENITIVE_NAMES = LOCALE_RETURN_GENITIVE_NAMES  ' return genitive forms of month names
' #endif // winver >= windows 7
'   The following CalTypes are mutually exclusive in that they may NOT
'   be used in combination with each other.
    CAL_ICALINTVALUE = &H00000001  ' calendar type
    CAL_SCALNAME = &H00000002  ' native name of calendar
    CAL_IYEAROFFSETRANGE = &H00000003  ' starting years of eras
    CAL_SERASTRING = &H00000004  ' era name for IYearOffsetRanges, eg A.D.
    CAL_SSHORTDATE = &H00000005  ' short date format string
    CAL_SLONGDATE = &H00000006  ' long date format string
    CAL_SDAYNAME1 = &H00000007  ' native name for Monday
    CAL_SDAYNAME2 = &H00000008  ' native name for Tuesday
    CAL_SDAYNAME3 = &H00000009  ' native name for Wednesday
    CAL_SDAYNAME4 = &H0000000a  ' native name for Thursday
    CAL_SDAYNAME5 = &H0000000b  ' native name for Friday
    CAL_SDAYNAME6 = &H0000000c  ' native name for Saturday
    CAL_SDAYNAME7 = &H0000000d  ' native name for Sunday
    CAL_SABBREVDAYNAME1 = &H0000000e  ' abbreviated name for Mon
    CAL_SABBREVDAYNAME2 = &H0000000f  ' abbreviated name for Tue
    CAL_SABBREVDAYNAME3 = &H00000010  ' abbreviated name for Wed
    CAL_SABBREVDAYNAME4 = &H00000011  ' abbreviated name for Thu
    CAL_SABBREVDAYNAME5 = &H00000012  ' abbreviated name for Fri
    CAL_SABBREVDAYNAME6 = &H00000013  ' abbreviated name for Sat
    CAL_SABBREVDAYNAME7 = &H00000014  ' abbreviated name for Sun
'  Note that in the hebrew calendar the leap month name is always returned as the 7th month
    CAL_SMONTHNAME1 = &H00000015  ' native name for January
    CAL_SMONTHNAME2 = &H00000016  ' native name for February
    CAL_SMONTHNAME3 = &H00000017  ' native name for March
    CAL_SMONTHNAME4 = &H00000018  ' native name for April
    CAL_SMONTHNAME5 = &H00000019  ' native name for May
    CAL_SMONTHNAME6 = &H0000001a  ' native name for June
    CAL_SMONTHNAME7 = &H0000001b  ' native name for July
    CAL_SMONTHNAME8 = &H0000001c  ' native name for August
    CAL_SMONTHNAME9 = &H0000001d  ' native name for September
    CAL_SMONTHNAME10 = &H0000001e  ' native name for October
    CAL_SMONTHNAME11 = &H0000001f  ' native name for November
    CAL_SMONTHNAME12 = &H00000020  ' native name for December
    CAL_SMONTHNAME13 = &H00000021  ' native name for 13th month (if any)
    CAL_SABBREVMONTHNAME1 = &H00000022  ' abbreviated name for Jan
    CAL_SABBREVMONTHNAME2 = &H00000023  ' abbreviated name for Feb
    CAL_SABBREVMONTHNAME3 = &H00000024  ' abbreviated name for Mar
    CAL_SABBREVMONTHNAME4 = &H00000025  ' abbreviated name for Apr
    CAL_SABBREVMONTHNAME5 = &H00000026  ' abbreviated name for May
    CAL_SABBREVMONTHNAME6 = &H00000027  ' abbreviated name for Jun
    CAL_SABBREVMONTHNAME7 = &H00000028  ' abbreviated name for July
    CAL_SABBREVMONTHNAME8 = &H00000029  ' abbreviated name for Aug
    CAL_SABBREVMONTHNAME9 = &H0000002a  ' abbreviated name for Sep
    CAL_SABBREVMONTHNAME10 = &H0000002b  ' abbreviated name for Oct
    CAL_SABBREVMONTHNAME11 = &H0000002c  ' abbreviated name for Nov
    CAL_SABBREVMONTHNAME12 = &H0000002d  ' abbreviated name for Dec
    CAL_SABBREVMONTHNAME13 = &H0000002e  ' abbreviated name for 13th month (if any)
    CAL_SYEARMONTH = &H0000002f  ' year month format string
    CAL_ITWODIGITYEARMAX = &H00000030  ' two digit year max
    CAL_SSHORTESTDAYNAME1 = &H00000031  ' Shortest day name for Mo
    CAL_SSHORTESTDAYNAME2 = &H00000032  ' Shortest day name for Tu
    CAL_SSHORTESTDAYNAME3 = &H00000033  ' Shortest day name for We
    CAL_SSHORTESTDAYNAME4 = &H00000034  ' Shortest day name for Th
    CAL_SSHORTESTDAYNAME5 = &H00000035  ' Shortest day name for Fr
    CAL_SSHORTESTDAYNAME6 = &H00000036  ' Shortest day name for Sa
    CAL_SSHORTESTDAYNAME7 = &H00000037  ' Shortest day name for Su
' #if (WINVER >= _WIN32_WINNT_WIN7)
    CAL_SMONTHDAY = &H00000038  ' Month/day format
    CAL_SABBREVERASTRING = &H00000039  ' Abbreviated era string (eg: AD)
' #endif // winver >= windows 7
' #if (WINVER >= _WIN32_WINNT_WIN8)
    CAL_SRELATIVELONGDATE = &H0000003a  ' Long date without year, day of week, month, date, eg: for lock screen
' #endif
' #if (NTDDI_VERSION >= NTDDI_WIN10_RS2)
    CAL_SENGLISHERANAME = &H0000003b  ' Japanese calendar only: return the English era names for .Net compatibility
    CAL_SENGLISHABBREVERANAME = &H0000003c  ' Japanese calendar only: return the English Abbreviated era names for .Net compatibility
' #endif
'  CAL_SJAPANESEERAFIRSTYEAR is only supported on machines with updates to support the "gannen" era first year behavior
'  Machines without that update will return 0 and ERROR_INVALID_FLAGS, in which case ichinen is presumed.
    CAL_SJAPANESEERAFIRSTYEAR = &H0000003d  ' Japanese calendar only: return ichinen or gannen first year
End Enum

Public Type NUMBERFMTA
    NumDigits As Long
    LeadingZero As Long
    Grouping As Long
    lpDecimalSep As String
    lpThousandSep As String
    NegativeOrder As Long
End Type
Public Type NUMBERFMTW
    NumDigits As Long
    LeadingZero As Long
    Grouping As Long
    lpDecimalSep As LongPtr
    lpThousandSep As LongPtr
    NegativeOrder As Long
End Type
'Alias NUMBERFMT As NUMBERFMTW
Public Type NUMBERFMT
    NumDigits As Long
    LeadingZero As Long
    Grouping As Long
    lpDecimalSep As LongPtr
    lpThousandSep As LongPtr
    NegativeOrder As Long
End Type

Public Type CURRENCYFMTA
    NumDigits As Long
    LeadingZero As Long
    Grouping As Long
    lpDecimalSep As String
    lpThousandSep As String
    NegativeOrder As Long
    PositiveOrder As Long
    lpCurrencySymbol As String
End Type
Public Type CURRENCYFMTW
    NumDigits As Long
    LeadingZero As Long
    Grouping As Long
    lpDecimalSep As LongPtr
    lpThousandSep As LongPtr
    NegativeOrder As Long
    PositiveOrder As Long
    lpCurrencySymbol As LongPtr
End Type
'Alias CURRENCYFMT As CURRENCYFMTW
Public Type CURRENCYFMT
    NumDigits As Long
    LeadingZero As Long
    Grouping As Long
    lpDecimalSep As LongPtr
    lpThousandSep As LongPtr
    NegativeOrder As Long
    PositiveOrder As Long
    lpCurrencySymbol As LongPtr
End Type

Public Const MAX_LEADBYTES  = 12  ' 5 ranges, 2 bytes ea., 0 term.
Public Const MAX_DEFAULTCHAR  = 2  ' single or double byte
Public Type CPINFO
    MaxCharSize As Long
    DefaultChar(0 To (MAX_DEFAULTCHAR - 1)) As Byte
    LeadByte(0 To (MAX_LEADBYTES - 1)) As Byte
End Type
Public Type CPINFOEXA
    MaxCharSize As Long
    DefaultChar(0 To (MAX_DEFAULTCHAR - 1)) As Byte
    LeadByte(0 To (MAX_LEADBYTES - 1)) As Byte
    UnicodeDefaultChar As Integer
    CodePage As CodePageDefaults
    CodePageName(0 To (MAX_PATH - 1)) As Byte
End Type
Public Type CPINFOEXW
    MaxCharSize As Long
    DefaultChar(0 To (MAX_DEFAULTCHAR - 1)) As Byte
    LeadByte(0 To (MAX_LEADBYTES - 1)) As Byte
    UnicodeDefaultChar As Integer
    CodePage As CodePageDefaults
    CodePageName(0 To (MAX_PATH - 1)) As Integer
End Type
'Alias CPINFOEX As CPINFOEXW
Public Type CPINFOEX
    MaxCharSize As Long
    DefaultChar(0 To (MAX_DEFAULTCHAR - 1)) As Byte
    LeadByte(0 To (MAX_LEADBYTES - 1)) As Byte
    UnicodeDefaultChar As Integer
    CodePage As CodePageDefaults
    CodePageName(0 To (MAX_PATH - 1)) As Integer
End Type

Public Enum SYSGEOCLASS
    GEOCLASS_NATION = 16
    GEOCLASS_REGION = 14
    GEOCLASS_ALL = 0
End Enum
Public Enum SYSGEOTYPE
    GEO_NATION = &H0001 ' DEPRECATED Not used by name API
    GEO_LATITUDE = &H0002
    GEO_LONGITUDE = &H0003
    GEO_ISO2 = &H0004
    GEO_ISO3 = &H0005
    GEO_RFC1766 = &H0006 ' DEPRECATED and misleading, not used by name API
    GEO_LCID = &H0007 ' DEPRECATED Not used by name API
    GEO_FRIENDLYNAME = &H0008
    GEO_OFFICIALNAME = &H0009
    GEO_TIMEZONES = &H000A ' Not implemented
    GEO_OFFICIALLANGUAGES = &H000B ' Not implemented
    GEO_ISO_UN_NUMBER = &H000C
    GEO_PARENT = &H000D
    GEO_DIALINGCODE = &H000E
    GEO_CURRENCYCODE = &H000F ' eg: USD
    GEO_CURRENCYSYMBOL = &H0010 ' eg: $
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_RS3)
    GEO_NAME = &H0011 ' Name, eg: US or 001
    GEO_ID = &H0012 ' DEPRECATED - For compatibility, please avoid
    ' #endif
End Enum
Public Const GEO_NAME_USER_DEFAULT = 0
Public Const GEOID_NOT_AVAILABLE = -1



Public Enum LCMAP_FLAGS
    LCMAP_LOWERCASE = &H00000100  ' lower case letters
    LCMAP_UPPERCASE = &H00000200  ' UPPER CASE LETTERS
' #if (WINVER >= _WIN32_WINNT_WIN7)
    LCMAP_TITLECASE = &H00000300  ' Title Case Letters
' #endif // (WINVER >= _WIN32_WINNT_WIN7)
    LCMAP_SORTKEY = &H00000400  ' WC sort key (normalize)
    LCMAP_BYTEREV = &H00000800  ' byte reversal
    LCMAP_HIRAGANA = &H00100000  ' map katakana to hiragana
    LCMAP_KATAKANA = &H00200000  ' map hiragana to katakana
    LCMAP_HALFWIDTH = &H00400000  ' map double byte to single byte
    LCMAP_FULLWIDTH = &H00800000  ' map single byte to double byte
    LCMAP_LINGUISTIC_CASING = &H01000000  ' use linguistic rules for casing
    LCMAP_SIMPLIFIED_CHINESE = &H02000000  ' map traditional chinese to simplified chinese
    LCMAP_TRADITIONAL_CHINESE = &H04000000  ' map simplified chinese to traditional chinese
' #if (WINVER >= _WIN32_WINNT_WIN8)
    LCMAP_SORTHANDLE = &H20000000
    LCMAP_HASH = &H00040000
End Enum

[Description("For Windows 7 and below only. For Windows 8 and newer, use NLSVERSIONINFO or NLSVERSIONINFOEX")]
Public Type NLSVERSIONINFO_WIN7         ' Use NLSVERSIONINFOEX instead
    dwNLSVersionInfoSize As Long ' 12 bytes
    dwNLSVersion As Long
    dwDefinedVersion As Long ' Deprecated, use dwNLSVersion instead
End Type
[Description("For Windows 8 and newer. Windows 7 and below: Use NLSVERSIONINFO_WIN7")]
Public Type NLSVERSIONINFO
    dwNLSVersionInfoSize As Long
    dwNLSVersion As Long
    dwDefinedVersion As Long
    dwEffectiveId As Long
    guidCustomVersion As UUID
End Type
Public Type NLSVERSIONINFOEX
    dwNLSVersionInfoSize As Long
    dwNLSVersion As Long
    dwDefinedVersion As Long
    dwEffectiveId As Long
    guidCustomVersion As UUID
End Type

Public Const SORTING_PARADIGM_NLS  = &H00000000  ' NLS style sorting
Public Const SORTING_PARADIGM_ICU  = &H01000000  ' ICU style sorting

Public Enum SYSNLS_FUNCTION
    COMPARE_STRING = &H0001
End Enum

Public Enum QUEUE_USER_APC_FLAGS
    QUEUE_USER_APC_FLAGS_NONE
    QUEUE_USER_APC_FLAGS_SPECIAL_USER_APC
    QUEUE_USER_APC_CALLBACK_DATA_CONTEXT
End Enum

Public Type APC_CALLBACK_DATA
    Parameter As LongPtr
    ContextRecord As LongPtr 'PCONTEXT
    Reserved0 As LongPtr
    Reserved1 As LongPtr
End Type

Public Enum LOGICAL_PROCESSOR_RELATIONSHIP
    RelationProcessorCore
    RelationNumaNode
    RelationCache
    RelationProcessorPackage
    RelationGroup
    RelationProcessorDie
    RelationNumaNodeEx
    RelationProcessorModule
    RelationAll = &Hffff&
End Enum

Public Enum PROCESSOR_CACHE_TYPE
    CacheUnified
    CacheInstruction
    CacheData
    CacheTrace
End Enum

Public Enum ProcessorRelationshipFlags
     LTP_PC_SMT = &H1
End Enum

Public Enum ProcessorCacheAssociativity
    CACHE_FULLY_ASSOCIATIVE = &HFF
End Enum

Public Type CACHE_DESCRIPTOR
    Level As Byte
    /* [ TypeHint(ProcessorCacheAssociativity) ] */ Associativity As Byte
    LineSize As Integer
    Size As Long
    Type As PROCESSOR_CACHE_TYPE
End Type

[Description("Go to definition to see comments on contents of member u, representing an unsupported union.")]
Public Type SYSTEM_LOGICAL_PROCESSOR_INFORMATION
	ProcessorMask As LongPtr
    Relationship As LOGICAL_PROCESSOR_RELATIONSHIP
    ' union {
      ' struct {
        ' BYTE Flags;
      ' } ProcessorCore;
      ' struct {
        ' DWORD NodeNumber;
      ' } NumaNode;
      ' CACHE_DESCRIPTOR Cache;
      ' ULONGLONG        Reserved[2];
    ' } DUMMYUNIONNAME;
    u(15) As Byte
End Type

Public Type PROCESSOR_RELATIONSHIP
    /* [ TypeHint(ProcessorRelationshipFlags) ] */ Flags As Byte
    EfficiencyClass As Byte
    Reserved(0 To 19) As Byte
    GroupCount As Integer
    GroupMask(0) As GROUP_AFFINITY
End Type
Public Type NUMA_NODE_RELATIONSHIP
    NodeNumber As Long
    Reserved(0 To 17) As Byte
    GroupCount As Integer
    'union {
    '    GROUP_AFFINITY GroupMask;
    '     _Field_size_(GroupCount)
    '     GROUP_AFFINITY GroupMasks[ANYSIZE_ARRAY];
    ' } DUMMYUNIONNAME;
    GroupMasks(0) As GROUP_AFFINITY
End Type
Public Type CACHE_RELATIONSHIP
    Level As Byte
    /* [ TypeHint(ProcessorCacheAssociativity) ] */ Associativity As Byte
    LineSize As Integer
    Size As Long
    Type As PROCESSOR_CACHE_TYPE
    Reserved(0 To 17) As Byte
    GroupCount As Integer
    GroupMasks(0) As GROUP_AFFINITY
End Type

Public Type PROCESSOR_GROUP_INFO
    MaximumProcessorCount As Byte
    ActiveProcessorCount As Byte
    Reserved(0 To 37) As Byte
    ActiveProcessorMask As LongPtr 'KAFFINITY
End Type
Public Type GROUP_RELATIONSHIP
    MaximumGroupCount As Integer
    ActiveGroupCount As Integer
    Reserved(0 To 19) As Byte
    '_Field_size_(ActiveGroupCount) PROCESSOR_GROUP_INFO GroupInfo[ANYSIZE_ARRAY];
    GroupInfo(0) As PROCESSOR_GROUP_INFO
End Type

[Description("Go to definition to see comments on contents of member u, representing an unsupported union.")]
Public Type SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX
    Relationship As LOGICAL_PROCESSOR_RELATIONSHIP
    Size As Long
    ' union {
        ' PROCESSOR_RELATIONSHIP Processor;
        ' NUMA_NODE_RELATIONSHIP NumaNode;
        ' CACHE_RELATIONSHIP Cache;
        ' GROUP_RELATIONSHIP Group;
    ' } DUMMYUNIONNAME;
    u(&H43) As Byte
End Type

Public Type SYSTEM_POOL_ZEROING_INFORMATION
    PoolZeroingSupportPresent As Byte
End Type

Public Type SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION
    CycleTime As LongLong
End Type

Public Enum DEP_SYSTEM_POLICY_TYPE
    DEPPolicyAlwaysOff = 0
    DEPPolicyAlwaysOn
    DEPPolicyOptIn
    DEPPolicyOptOut
    DEPTotalPolicyCount
End Enum

Public Enum GetTapeParameterOperations
    GET_TAPE_MEDIA_INFORMATION = 0
    GET_TAPE_DRIVE_INFORMATION = 1
End Enum
Public Enum SetTapeParameterOperations
    SET_TAPE_MEDIA_INFORMATION = 0
    SET_TAPE_DRIVE_INFORMATION = 1
End Enum


Public Enum LGRPID
    LGRPID_WESTERN_EUROPE = &H0001  ' Western Europe & U.S.
    LGRPID_CENTRAL_EUROPE = &H0002  ' Central Europe
    LGRPID_BALTIC = &H0003  ' Baltic
    LGRPID_GREEK = &H0004  ' Greek
    LGRPID_CYRILLIC = &H0005  ' Cyrillic
    LGRPID_TURKIC = &H0006  ' Turkic
    LGRPID_TURKISH = &H0006  ' Turkish
    LGRPID_JAPANESE = &H0007  ' Japanese
    LGRPID_KOREAN = &H0008  ' Korean
    LGRPID_TRADITIONAL_CHINESE = &H0009  ' Traditional Chinese
    LGRPID_SIMPLIFIED_CHINESE = &H000a  ' Simplified Chinese
    LGRPID_THAI = &H000b  ' Thai
    LGRPID_HEBREW = &H000c  ' Hebrew
    LGRPID_ARABIC = &H000d  ' Arabic
    LGRPID_VIETNAMESE = &H000e  ' Vietnamese
    LGRPID_INDIC = &H000f  ' Indic
    LGRPID_GEORGIAN = &H0010  ' Georgian
    LGRPID_ARMENIAN = &H0011  ' Armenian
End Enum
Public Enum NlsLanguageFlags
    LGRPID_INSTALLED = &H00000001  ' installed language group ids
    LGRPID_SUPPORTED = &H00000002  ' supported language group ids
End Enum

Public Enum LoadStrByRefFlags
    MUI_FORMAT_REG_COMPAT = &H0001
    MUI_FORMAT_INF_COMPAT = &H0002
    MUI_VERIFY_FILE_EXISTS = &H0004
    MUI_SKIP_STRING_CACHE = &H0008
    MUI_IMMUTABLE_LOOKUP = &H0010
End Enum

Public Enum NlsFindStrFlags
    FIND_STARTSWITH = &H00100000  ' see if value is at the beginning of source
    FIND_ENDSWITH = &H00200000  ' see if value is at the end of source
    FIND_FROMSTART = &H00400000  ' look for value in source, starting at the beginning
    FIND_FROMEND = &H00800000  ' look for value in source, starting at the end
End Enum

Public Enum NORM_FORM
    NormalizationOther = 0 ' Not supported
    NormalizationC = &H1 ' Each base plus combining characters to the canonical precomposed equivalent.
    NormalizationD = &H2 ' Each precomposed character to its canonical decomposed equivalent.
    NormalizationKC = &H5 ' Each base plus combining characters to the canonical precomposed
    '    equivalents and all compatibility characters to their equivalents.
    NormalizationKD = &H6 ' Each precomposed character to its canonical decomposed equivalent
    '    and all compatibility characters to their equivalents.
End Enum

Public Enum GetStringScriptFlags
    GSS_ALLOW_INHERITED_COMMON = &H0001  ' Output script ids for inherited and common character types if present
End Enum
Public Enum VerifyScriptFlags
    VS_ALLOW_LATIN = &H0001  ' Allow Latin in test script even if not present in locale script
End Enum

Public Enum NlsIntlDomainFlags
    IDN_ALLOW_UNASSIGNED = &H01  ' Allow unassigned "query" behavior per RFC 3454
    IDN_USE_STD3_ASCII_RULES = &H02  ' Enforce STD3 ASCII restrictions for legal characters
    IDN_EMAIL_ADDRESS = &H04  ' Enable EAI algorithmic fallback for email local parts behavior
    IDN_RAW_PUNYCODE = &H08  ' Disable validation and mapping of punycode.
End Enum

Public Enum NlsMuiLangFlags
    MUI_FULL_LANGUAGE = &H01
    MUI_PARTIAL_LANGUAGE = &H02
    MUI_LIP_LANGUAGE = &H04
    MUI_LANGUAGE_INSTALLED = &H20
    MUI_LANGUAGE_LICENSED = &H40
End Enum

Public Enum DEVELOPER_DRIVE_ENABLEMENT_STATE
    DeveloperDriveEnablementStateError
    DeveloperDriveEnabled
    DeveloperDriveDisabledBySystemPolicy
    DeveloperDriveDisabledByGroupPolicy
End Enum

Public Enum UserCetEnvFlags
    USER_CET_ENVIRONMENT_WIN32_PROCESS = &H00000000
    USER_CET_ENVIRONMENT_SGX2_ENCLAVE = &H00000002
    USER_CET_ENVIRONMENT_VBS_ENCLAVE = &H00000010
    USER_CET_ENVIRONMENT_VBS_BASIC_ENCLAVE = &H00000011
End Enum

Public Declare PtrSafe Sub GetSystemInfo Lib "kernel32" (lpSystemInfo As SYSTEM_INFO)
Public Declare PtrSafe Sub GetNativeSystemInfo Lib "kernel32" (lpSystemInfo As SYSTEM_INFO)
Public Sub VER_SET_CONDITION(m As LongLong, t As VersionTypeMask, [TypeHint(VersionInfoConditions)] ByVal c As Byte): m = VerSetConditionMask(m, t, c): End Sub
Public Declare PtrSafe Function VerSetConditionMask Lib "kernel32" (ByVal ConditionMask As LongLong, ByVal TypeMask As VersionTypeMask, [TypeHint(VersionInfoConditions)] ByVal Condition As Byte) As LongLong
Public Declare PtrSafe Function VerifyVersionInfoA Lib "kernel32" (lpVersionInformation As OSVERSIONINFOEXA, ByVal TypeMask As VersionTypeMask, ByVal dwlConditionMask As LongLong) As BOOL
Public Declare PtrSafe Function VerifyVersionInfoW Lib "kernel32" (lpVersionInformation As OSVERSIONINFOEXW, ByVal TypeMask As VersionTypeMask, ByVal dwlConditionMask As LongLong) As BOOL
Public DeclareWide PtrSafe Function VerifyVersionInfo Lib "kernel32" Alias "VerifyVersionInfoW" (lpVersionInformation As OSVERSIONINFOEX, ByVal TypeMask As VersionTypeMask, ByVal dwlConditionMask As LongLong) As BOOL
Public Declare PtrSafe Function GetProcessorSystemCycleTime Lib "kernel32" (ByVal Group As Integer, Buffer As SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION) As BOOL
Public Declare PtrSafe Function GetPerformanceInfo Lib "psapi.dll" (pPerformanceInformation As PERFORMANCE_INFORMATION, ByVal cb As Long) As BOOL
Public Declare PtrSafe Function GetIntegratedDisplaySize Lib "kernelbase" (sizeInInches As Double) As Long
Public Declare PtrSafe Function GetOsManufacturingMode Lib "kernelbase" (pbEnabled As BOOL) As BOOL
Public Declare PtrSafe Function GetSystemWindowsDirectoryA Lib "kernel32" (ByVal lpBuffer As String, ByVal uSize As Long) As Long
Public Declare PtrSafe Function GetSystemWindowsDirectoryW Lib "kernel32" (ByVal lpBuffer As LongPtr, ByVal uSize As Long) As Long
Public DeclareWide PtrSafe Function GetSystemWindowsDirectory Lib "kernel32" Alias "GetSystemWindowsDirectoryW" (ByVal lpBuffer As String, ByVal uSize As Long) As Long
Public Declare PtrSafe Function GetSystemDirectoryA Lib "kernel32" (ByVal lpBuffer As String, ByVal uSize As Long) As Long
Public Declare PtrSafe Function GetSystemDirectoryW Lib "kernel32" (ByVal lpBuffer As LongPtr, ByVal uSize As Long) As Long
Public DeclareWide PtrSafe Function GetSystemDirectory Lib "kernel32" Alias "GetSystemDirectoryW" (ByVal lpBuffer As String, ByVal uSize As Long) As Long
Public Declare PtrSafe Function GetSystemRegistryQuota Lib "kernel32" (pdwQuotaAllowed As Long, pdwQuotaUsed As Long) As BOOL
Public Declare PtrSafe Function GetSystemDEPPolicy Lib "kernel32" () As DEP_SYSTEM_POLICY_TYPE
Public Declare PtrSafe Function GetLogicalProcessorInformation Lib "kernel32" (Buffer As SYSTEM_LOGICAL_PROCESSOR_INFORMATION, ReturnedLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetLogicalProcessorInformationEx Lib "kernel32" (ByVal Relationship As LOGICAL_PROCESSOR_RELATIONSHIP, Buffer As Any, ReturnedLength As Long) As BOOL
Public Declare PtrSafe Function IsUserCetAvailableInEnvironment Lib "kernel32" (ByVal UserCetEnvironment As UserCetEnvFlags) As BOOL
Public Declare PtrSafe Function GetSystemLeapSecondInformation Lib "kernelbase" (Enabled As BOOL, Flags As Long) As BOOL
Public Declare PtrSafe Function GetOsSafeBootMode Lib "kernelbase.dll" (Flags As Long) As BOOL
Public Declare PtrSafe Function EnumSystemFirmwareTables Lib "kernel32" (ByVal FirmwareTableProviderSignature As Long, pFirmwareTableEnumBuffer As Any, ByVal BufferSize As Long) As Long
Public Declare PtrSafe Function GetSystemFirmwareTable Lib "kernel32" (ByVal FirmwareTableProviderSignature As Long, ByVal FirmwareTableID As Long, pFirmwareTableBuffer As Any, ByVal BufferSize As Long) As Long
Public Declare PtrSafe Function DnsHostnameToComputerNameExW Lib "kernel32" (ByVal Hostname As LongPtr, ByVal ComputerName As LongPtr, nSize As Long) As BOOL
Public Declare PtrSafe Function InstallELAMCertificateInfo Lib "kernel32" (ByVal ELAMFile As LongPtr) As BOOL
Public Declare PtrSafe Function GetDeveloperDriveEnablementState Lib "api-ms-win-core-sysinfo-l1-2-6.dll" () As DEVELOPER_DRIVE_ENABLEMENT_STATE


Public Declare PtrSafe Function GetSystemDefaultLangID Lib "kernel32" () As Integer
Public Declare PtrSafe Function GetSystemDefaultLCID Lib "kernel32" () As Long
Public DeclareWide PtrSafe Function GetSystemDefaultLocaleName Lib "kernel32" (ByVal lpLocaleName As String, ByVal cchLocaleName As Long) As Long
Public Declare PtrSafe Function GetSystemDefaultLocaleName Lib "kernel32" (ByVal lpLocaleName As LongPtr, ByVal cchLocaleName As Long) As Long
Public Declare PtrSafe Function GetSystemDefaultUILanguage Lib "kernel32" () As Integer
Public Declare PtrSafe Function GetUserDefaultLangID Lib "kernel32" () As Integer
Public Declare PtrSafe Function GetUserDefaultLCID Lib "kernel32" () As Long
Public DeclareWide PtrSafe Function GetUserDefaultLocaleName Lib "kernel32" (ByVal lpLocaleName As String, ByVal cchLocaleName As Long) As Long
Public Declare PtrSafe Function GetUserDefaultUILanguage Lib "kernel32" () As Integer
Public DeclareWide PtrSafe Function GetLocaleInfo Lib "kernel32" Alias "GetLocaleInfoW" (ByVal LCID As DefaultLocales, ByVal LCType As LCTypes, ByVal lpLCData As String, ByVal cchData As Long) As Long
Public Declare PtrSafe Function GetLocaleInfoA Lib "kernel32" (ByVal LCID As DefaultLocales, ByVal LCType As LCTypes, ByVal lpLCData As String, ByVal cchData As Long) As Long
Public Declare PtrSafe Function GetLocaleInfoW Lib "kernel32" (ByVal LCID As DefaultLocales, ByVal LCType As LCTypes, ByVal lpLCData As LongPtr, ByVal cchData As Long) As Long
Public DeclareWide PtrSafe Function GetLocaleInfoEx Lib "kernel32" (ByVal LocaleName As String, ByVal LCType As LCTypes, ByVal lpLCData As String, ByVal cchData As Long) As Long
Public Declare PtrSafe Function GetLocaleInfoEx Lib "kernel32" (ByVal LocaleName As LongPtr, ByVal LCType As LCTypes, ByVal lpLCData As LongPtr, ByVal cchData As Long) As Long
Public Declare PtrSafe Function SetLocaleInfoA Lib "kernel32" (ByVal LCID As DefaultLocales, ByVal LCType As LCTypes, ByVal lpLCData As String) As BOOL
Public Declare PtrSafe Function SetLocaleInfoW Lib "kernel32" (ByVal LCID As DefaultLocales, ByVal LCType As LCTypes, ByVal lpLCData As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetLocaleInfo Lib "kernel32" Alias "SetLocaleInfoW" (ByVal LCID As DefaultLocales, ByVal LCType As LCTypes, ByVal lpLCData As String) As BOOL
Public DeclareWide PtrSafe Function ResolveLocaleName Lib "kernel32" (Optional ByVal lpNameToResolve As String, Optional ByVal lpLocaleName As String, Optional ByVal cchLocaleName As Long = 0) As Long
Public Declare PtrSafe Function ResolveLocaleName Lib "kernel32" (Optional ByVal lpNameToResolve As LongPtr, Optional ByVal lpLocaleName As LongPtr, Optional ByVal cchLocaleName As Long = 0) As Long
Public DeclareWide PtrSafe Function LCIDToLocaleName Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal lpName As String, ByVal cchName As Long, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function LocaleNameToLCID Lib "kernel32" (ByVal LocaleName As String, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function LocaleNameToLCID Lib "kernel32" (ByVal LocaleName As LongPtr, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function GetNLSVersion Lib "kernel32" (ByVal Func As SYSNLS_FUNCTION, ByVal Locale As DefaultLocales, lpVersionInformation As NLSVERSIONINFO) As BOOL
Public Declare PtrSafe Function GetNLSVersion Lib "kernel32" (ByVal Func As SYSNLS_FUNCTION, ByVal Locale As DefaultLocales, lpVersionInformation As NLSVERSIONINFO_WIN7) As BOOL
Public DeclareWide PtrSafe Function GetNLSVersionEx Lib "kernel32" (ByVal Func As SYSNLS_FUNCTION, ByVal LocaleName As String, lpVersionInformation As NLSVERSIONINFOEX) As BOOL
Public Declare PtrSafe Function GetNLSVersionEx Lib "kernel32" (ByVal Func As SYSNLS_FUNCTION, ByVal LocaleName As LongPtr, lpVersionInformation As NLSVERSIONINFOEX) As BOOL
Public Declare PtrSafe Function GetOEMCP Lib "kernel32" () As Long
Public Declare PtrSafe Function GetACP Lib "kernel32" () As Long
Public Declare PtrSafe Function GetCPInfo Lib "kernel32" (ByVal CodePage As CodePageDefaults, lpCPInfo As CPINFO) As BOOL
Public Declare PtrSafe Function GetCPInfoExA Lib "kernel32" (ByVal CodePage As CodePageDefaults, ByVal dwFlags As Long, lpCPInfoEx As CPINFOEXA) As BOOL
Public Declare PtrSafe Function GetCPInfoExW Lib "kernel32" (ByVal CodePage As CodePageDefaults, ByVal dwFlags As Long, lpCPInfoEx As CPINFOEXW) As BOOL
Public Declare PtrSafe Function GetCPInfoEx Lib "kernel32" Alias "GetCPInfoExW" (ByVal CodePage As CodePageDefaults, ByVal dwFlags As Long, lpCPInfoEx As CPINFOEX) As BOOL
Public Declare PtrSafe Function IsValidCodePage Lib "kernel32" (ByVal CodePage As CodePageDefaults) As BOOL
Public Declare PtrSafe Function GetNumberFormatA Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As Long, ByVal lpValue As String, lpFormat As NUMBERFMTA, Optional ByVal lpNumberStr As String, Optional ByVal cchNumber As Long = 0) As Long
Public Declare PtrSafe Function GetNumberFormatW Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As Long, ByVal lpValue As LongPtr, lpFormat As NUMBERFMTW, Optional ByVal lpNumberStr As LongPtr, Optional ByVal cchNumber As Long = 0) As Long
Public DeclareWide PtrSafe Function GetNumberFormat Lib "kernel32" Alias "GetNumberFormatW" (ByVal Locale As DefaultLocales, ByVal dwFlags As Long, ByVal lpValue As String, lpFormat As NUMBERFMT, Optional ByVal lpNumberStr As String, Optional ByVal cchNumber As Long = 0) As Long
Public Declare PtrSafe Function GetNumberFormatEx Lib "kernel32" (ByVal LocaleName As LongPtr, ByVal dwFlags As Long, ByVal lpValue As LongPtr, lpFormat As NUMBERFMTW, Optional ByVal lpNumberStr As LongPtr, Optional ByVal cchNumber As Long = 0) As Long
Public DeclareWide PtrSafe Function GetNumberFormatEx Lib "kernel32" (ByVal LocaleName As String, ByVal dwFlags As Long, ByVal lpValue As String, lpFormat As NUMBERFMT, Optional ByVal lpNumberStr As String, Optional ByVal cchNumber As Long = 0) As Long
Public Declare PtrSafe Function GetCurrencyFormatA Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As Long, ByVal lpValue As String, lpFormat As CURRENCYFMTA, Optional ByVal lpCurrencyStr As String, Optional ByVal cchCurrency As Long = 0) As Long
Public Declare PtrSafe Function GetCurrencyFormatW Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As Long, ByVal lpValue As LongPtr, lpFormat As CURRENCYFMTW, Optional ByVal lpCurrencyStr As LongPtr, Optional ByVal cchCurrency As Long = 0) As Long
Public DeclareWide PtrSafe Function GetCurrencyFormat Lib "kernel32" Alias "GetCurrencyFormatW" (ByVal Locale As DefaultLocales, ByVal dwFlags As Long, ByVal lpValue As String, lpFormat As CURRENCYFMT, Optional ByVal lpCurrencyStr As String, Optional ByVal cchCurrency As Long = 0) As Long
Public DeclareWide PtrSafe Function GetCurrencyFormatEx Lib "kernel32" (ByVal LocaleName As String, ByVal dwFlags As Long, ByVal lpValue As String, lpFormat As CURRENCYFMTW, Optional ByVal lpCurrencyStr As String, Optional ByVal cchCurrency As Long = 0) As Long
Public Declare PtrSafe Function GetCurrencyFormatEx Lib "kernel32" (ByVal LocaleName As LongPtr, ByVal dwFlags As Long, ByVal lpValue As LongPtr, lpFormat As CURRENCYFMT, Optional ByVal lpCurrencyStr As LongPtr, Optional ByVal cchCurrency As Long = 0) As Long
Public Declare PtrSafe Function GetCalendarInfoA Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE, Optional ByVal lpCalData As String, Optional ByVal cchData As Long = 0, Optional lpValue As Long) As Long
Public Declare PtrSafe Function GetCalendarInfoW Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE, Optional ByVal lpCalData As LongPtr, Optional ByVal cchData As Long = 0, Optional lpValue As Long) As Long
Public DeclareWide PtrSafe Function GetCalendarInfo Lib "kernel32" Alias "GetCalendarInfoW" (ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE, Optional ByVal lpCalData As String, Optional ByVal cchData As Long = 0, Optional lpValue As Long) As Long
Public Declare PtrSafe Function SetCalendarInfoA Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE, ByVal lpCalData As String) As BOOL
Public Declare PtrSafe Function SetCalendarInfoW Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE, ByVal lpCalData As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetCalendarInfo Lib "kernel32" Alias "SetCalendarInfoW" (ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE, ByVal lpCalData As String) As BOOL
Public DeclareWide PtrSafe Function GetCalendarInfoEx Lib "kernel32" (ByVal LocaleName As String, ByVal Calendar As CALID, ByVal lpReserved As LongPtr, ByVal CalType As CALTYPE, ByVal lpCalData As String, ByVal cchData As Long = 0, Optional lpValue As Long) As Long
Public Declare PtrSafe Function GetCalendarInfoEx Lib "kernel32" (ByVal LocaleName As LongPtr, ByVal Calendar As CALID, ByVal lpReserved As LongPtr, ByVal CalType As CALTYPE, ByVal lpCalData As LongPtr, ByVal cchData As Long = 0, Optional lpValue As Long) As Long
Public DeclareWide PtrSafe Function GetDurationFormat Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As Long, lpDuration As SYSTEMTIME, ByVal ullDuration As LongLong, Optional ByVal lpFormat As String, Optional ByVal lpDurationStr As String, Optional ByVal cchDuration As Long = 0) As Long
Public DeclareWide PtrSafe Function GetDurationFormat Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As Long, lpDuration As SYSTEMTIME, ByVal ullDuration As LongLong, Optional ByVal lpFormat As LongPtr, Optional ByVal lpDurationStr As String, Optional ByVal cchDuration As Long = 0) As Long
Public DeclareWide PtrSafe Function GetDurationFormatEx Lib "kernel32" (ByVal LocaleName As String, ByVal dwFlags As Long, lpDuration As SYSTEMTIME, ByVal ullDuration As LongLong, Optional ByVal lpFormat As String, Optional ByVal lpDurationStr As String, Optional ByVal cchDuration As Long = 0) As Long
Public DeclareWide PtrSafe Function GetDurationFormatEx Lib "kernel32" (ByVal LocaleName As LongPtr, ByVal dwFlags As Long, lpDuration As SYSTEMTIME, ByVal ullDuration As LongLong, Optional ByVal lpFormat As LongPtr, Optional ByVal lpDurationStr As String, Optional ByVal cchDuration As Long = 0) As Long
Public Declare PtrSafe Function EnumTimeFormatsA Lib "kernel32" (ByVal lpTimeFmtEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As TIME_FORMAT_FLAGS) As BOOL
Public Declare PtrSafe Function EnumTimeFormatsW Lib "kernel32" (ByVal lpTimeFmtEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As TIME_FORMAT_FLAGS) As BOOL
Public DeclareWide PtrSafe Function EnumTimeFormats Lib "kernel32" Alias "EnumTimeFormatsW" (ByVal lpTimeFmtEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As TIME_FORMAT_FLAGS) As BOOL
Public DeclareWide PtrSafe Function EnumTimeFormatsEx Lib "kernel32" (ByVal lpTimeFmtEnumProcEx As LongPtr, ByVal LocaleName As String, ByVal dwFlags As TIME_FORMAT_FLAGS, lParam As Any) As BOOL
Public Declare PtrSafe Function EnumDateFormatsA Lib "kernel32" (ByVal lpDateFmtEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As DATE_FORMAT_FLAGS) As BOOL
Public Declare PtrSafe Function EnumDateFormatsW Lib "kernel32" (ByVal lpDateFmtEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As DATE_FORMAT_FLAGS) As BOOL
Public DeclareWide PtrSafe Function EnumDateFormats Lib "kernel32" Alias "EnumDateFormatsW" (ByVal lpDateFmtEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As DATE_FORMAT_FLAGS) As BOOL
Public Declare PtrSafe Function EnumDateFormatsExA Lib "kernel32" (ByVal lpDateFmtEnumProcEx As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As DATE_FORMAT_FLAGS) As BOOL
Public Declare PtrSafe Function EnumDateFormatsExW Lib "kernel32" (ByVal lpDateFmtEnumProcEx As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As DATE_FORMAT_FLAGS) As BOOL
Public DeclareWide PtrSafe Function EnumDateFormatsEx Lib "kernel32" Alias "EnumDateFormatsExW" (ByVal lpDateFmtEnumProcEx As LongPtr, ByVal Locale As DefaultLocales, ByVal dwFlags As DATE_FORMAT_FLAGS) As BOOL
Public DeclareWide PtrSafe Function EnumDateFormatsExEx Lib "kernel32" (ByVal lpDateFmtEnumProcEx As LongPtr, ByVal LocaleName As String, ByVal dwFlags As DATE_FORMAT_FLAGS, lParam As Any) As BOOL
Public DeclareWide PtrSafe Function EnumDateFormatsExEx Lib "kernel32" (ByVal lpDateFmtEnumProcEx As LongPtr, ByVal LocaleName As LongPtr, ByVal dwFlags As DATE_FORMAT_FLAGS, lParam As Any) As BOOL
Public Declare PtrSafe Function IsValidLocale Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwFlags As LOCALE_ENUM_FLAGS) As BOOL
Public DeclareWide PtrSafe Function IsValidLocaleName Lib "kernel32" (ByVal LocaleName As String) As BOOL
Public Declare PtrSafe Function IsValidLocaleName Lib "kernel32" (ByVal LocaleName As LongPtr) As BOOL
Public Declare PtrSafe Function IsValidLanguageGroup Lib "kernel32" (ByVal LanguageGroup As LGRPID, ByVal dwFlags As NlsLanguageFlags) As BOOL
Public Declare PtrSafe Function ConvertDefaultLocale Lib "kernel32" (ByVal Locale As DefaultLocales) As Long
Public Declare PtrSafe Function GetThreadLocale Lib "kernel32" () As Long
Public Declare PtrSafe Function SetThreadLocale Lib "kernel32" (ByVal Locale As DefaultLocales) As BOOL
Public Declare PtrSafe Function GetThreadUILanguage Lib "kernel32" () As Integer
Public Declare PtrSafe Function SetThreadUILanguage Lib "kernel32" (ByVal LangId As Integer) As BOOL
Public DeclareWide PtrSafe Function GetSystemPreferredUILanguages Lib "kernel32" ([TypeHint(MUI_ENUM_FLAGS, NlsFileMuiPathFlags)] ByVal dwFlags As Long, ByRef pulNumLanguages As Long, Optional ByVal pwszLanguagesBuffer As String, Optional ByRef pcchLanguagesBuffer As Long = 0) As BOOL
Public DeclareWide PtrSafe Function GetUserPreferredUILanguages Lib "kernel32" ([TypeHint(MUI_ENUM_FLAGS)] ByVal dwFlags As Long, ByRef pulNumLanguages As Long, Optional ByVal pwszLanguagesBuffer As String, Optional ByRef pcchLanguagesBuffer As Long = 0) As BOOL
Public DeclareWide PtrSafe Function GetUILanguageInfo Lib "kernel32" (ByVal dwFlags As MUI_ENUM_FLAGS, ByVal pwmszLanguage As String, ByVal pwszFallbackLanguages As String, pcchFallbackLanguages As Long, pAttributes As NlsMuiLangFlags) As BOOL
Public DeclareWide PtrSafe Function GetThreadPreferredUILanguages Lib "kernel32" ([TypeHint(MUI_ENUM_FLAGS, GTUILANG_FLAGS)] ByVal dwFlags As Long, ByRef pulNumLanguages As Long, Optional ByVal pwszLanguagesBuffer As String, Optional ByRef pcchLanguagesBuffer As Long = 0) As BOOL
Public DeclareWide PtrSafe Function SetThreadPreferredUILanguages Lib "kernel32" ([TypeHint(MUI_ENUM_FLAGS, STUILANG_FLAGS)] ByVal dwFlags As Long, Optional ByVal pwszLanguagesBuffer As String, Optional ByRef pulNumLanguages As Long) As BOOL
Public Declare PtrSafe Function GetThreadPreferredUILanguages Lib "kernel32" ([TypeHint(MUI_ENUM_FLAGS, GTUILANG_FLAGS)] ByVal dwFlags As Long, ByRef pulNumLanguages As Long, Optional ByVal pwszLanguagesBuffer As LongPtr, Optional ByRef pcchLanguagesBuffer As Long = 0) As BOOL
Public Declare PtrSafe Function SetThreadPreferredUILanguages Lib "kernel32" ([TypeHint(MUI_ENUM_FLAGS, STUILANG_FLAGS)] ByVal dwFlags As Long, Optional ByVal pwszLanguagesBuffer As LongPtr, Optional ByRef pulNumLanguages As Long) As BOOL
Public DeclareWide PtrSafe Function SetThreadPreferredUILanguages2 Lib "kernel32" ([TypeHint(MUI_ENUM_FLAGS, GTUILANG_FLAGS)] ByVal flags As Long, ByVal languages As String, numLanguagesSet As Long, snapshot As LongPtr) As BOOL
Public Declare PtrSafe Sub RestoreThreadPreferredUILanguages Lib "kernel32" (ByVal snapshot As LongPtr)
Public DeclareWide PtrSafe Function GetProcessPreferredUILanguages Lib "kernel32" (ByVal dwFlags As MUI_ENUM_FLAGS, ByRef pulNumLanguages As Long, Optional ByVal pwszLanguagesBuffer As String, Optional ByRef pcchLanguagesBuffer As Long = 0) As BOOL
Public DeclareWide PtrSafe Function SetProcessPreferredUILanguages Lib "kernel32" (ByVal dwFlags As MUI_ENUM_FLAGS, Optional ByVal pwszLanguagesBuffer As String, Optional ByRef pulNumLanguages As Long) As BOOL
Public Declare PtrSafe Function GetProcessPreferredUILanguages Lib "kernel32" (ByVal dwFlags As MUI_ENUM_FLAGS, ByRef pulNumLanguages As Long, Optional ByVal pwszLanguagesBuffer As LongPtr, Optional ByRef pcchLanguagesBuffer As Long = 0) As BOOL
Public Declare PtrSafe Function SetProcessPreferredUILanguages Lib "kernel32" (ByVal dwFlags As MUI_ENUM_FLAGS, Optional ByVal pwszLanguagesBuffer As LongPtr, Optional ByRef pulNumLanguages As Long) As BOOL
Public Declare PtrSafe Function EnumSystemLocalesA Lib "kernel32" (ByVal lpLocaleEnumProc As LongPtr, ByVal dwFlags As LOCALE_ENUM_FLAGS) As BOOL
Public Declare PtrSafe Function EnumSystemLocalesW Lib "kernel32" (ByVal lpLocaleEnumProc As LongPtr, ByVal dwFlags As LOCALE_ENUM_FLAGS) As BOOL
Public DeclareWide PtrSafe Function EnumSystemLocales Lib "kernel32" Alias "EnumSystemLocalesW" (ByVal lpLocaleEnumProc As LongPtr, ByVal dwFlags As LOCALE_ENUM_FLAGS) As BOOL
Public Declare PtrSafe Function EnumSystemLocalesEx Lib "kernel32" (ByVal lpLocaleEnumProcEx As LongPtr, ByVal dwFlags As LOCALE_ENUM_FLAGS, lParam As Any, ByVal lpReserved As LongPtr) As BOOL
Public Declare PtrSafe Function EnumSystemCodePagesA Lib "kernel32" (ByVal lpCodePageEnumProc As LongPtr, ByVal dwFlags As CODEPAGE_ENUM_FLAGS) As BOOL
Public Declare PtrSafe Function EnumSystemCodePagesW Lib "kernel32" (ByVal lpCodePageEnumProc As LongPtr, ByVal dwFlags As CODEPAGE_ENUM_FLAGS) As BOOL
Public DeclareWide PtrSafe Function EnumSystemCodePages Lib "kernel32" Alias "EnumSystemCodePagesW" (ByVal lpCodePageEnumProc As LongPtr, ByVal dwFlags As CODEPAGE_ENUM_FLAGS) As BOOL
Public Declare PtrSafe Function EnumUILanguagesA Lib "kernel32" (ByVal lpUILanguageEnumProc As LongPtr, ByVal dwFlags As MUI_ENUM_FLAGS, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumUILanguagesW Lib "kernel32" (ByVal lpUILanguageEnumProc As LongPtr, ByVal dwFlags As MUI_ENUM_FLAGS, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumUILanguages Lib "kernel32" Alias "EnumUILanguagesW" (ByVal lpUILanguageEnumProc As LongPtr, ByVal dwFlags As MUI_ENUM_FLAGS, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumLanguageGroupLocalesA Lib "kernel32" (ByVal lpLangGroupLocaleEnumProc As LongPtr, ByVal LanguageGroup As LGRPID, ByVal dwFlags As Long, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumLanguageGroupLocalesW Lib "kernel32" (ByVal lpLangGroupLocaleEnumProc As LongPtr, ByVal LanguageGroup As LGRPID, ByVal dwFlags As Long, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumLanguageGroupLocales Lib "kernel32" Alias "EnumLanguageGroupLocalesW" (ByVal lpLangGroupLocaleEnumProc As LongPtr, ByVal LanguageGroup As LGRPID, ByVal dwFlags As Long, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumSystemLanguageGroupsA Lib "kernel32" (ByVal lpLanguageGroupEnumProc As LongPtr, ByVal dwFlags As NlsLanguageFlags, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumSystemLanguageGroupsW Lib "kernel32" (ByVal lpLanguageGroupEnumProc As LongPtr, ByVal dwFlags As NlsLanguageFlags, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumSystemLanguageGroups Lib "kernel32" Alias "EnumSystemLanguageGroupsW" (ByVal lpLanguageGroupEnumProc As LongPtr, ByVal dwFlags As NlsLanguageFlags, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumCalendarInfoA Lib "kernel32" (ByVal lpCalInfoEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE) As BOOL
Public Declare PtrSafe Function EnumCalendarInfoW Lib "kernel32" (ByVal lpCalInfoEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE) As BOOL
Public DeclareWide PtrSafe Function EnumCalendarInfo Lib "kernel32" Alias "EnumCalendarInfoW" (ByVal lpCalInfoEnumProc As LongPtr, ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE) As BOOL
Public Declare PtrSafe Function EnumCalendarInfoExA Lib "kernel32" (ByVal lpCalInfoEnumProcEx As LongPtr, ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE) As BOOL
Public Declare PtrSafe Function EnumCalendarInfoExW Lib "kernel32" (ByVal lpCalInfoEnumProcEx As LongPtr, ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE) As BOOL
Public DeclareWide PtrSafe Function EnumCalendarInfoEx Lib "kernel32" Alias "EnumCalendarInfoExW" (ByVal lpCalInfoEnumProcEx As LongPtr, ByVal Locale As DefaultLocales, ByVal Calendar As CALID, ByVal CalType As CALTYPE) As BOOL
Public Declare PtrSafe Function EnumCalendarInfoExEx Lib "kernel32" (ByVal lpCalInfoEnumProcExEx As LongPtr, ByVal LocaleName As String, ByVal Calendar As CALID, ByVal lpReserved As LongPtr, ByVal CalType As CALTYPE, lParam As Any) As BOOL
Public Declare PtrSafe Function EnumCalendarInfoExEx Lib "kernel32" (ByVal lpCalInfoEnumProcExEx As LongPtr, ByVal LocaleName As LongPtr, ByVal Calendar As CALID, ByVal lpReserved As LongPtr, ByVal CalType As CALTYPE, lParam As Any) As BOOL
Public Declare PtrSafe Function EnumSystemGeoID Lib "kernel32" (ByVal GeoClass As SYSGEOCLASS, ByVal ParentGeoId As Long, ByVal lpGeoEnumProc As LongPtr) As BOOL
Public Declare PtrSafe Function EnumSystemGeoNames Lib "kernel32" (ByVal GeoClass As SYSGEOCLASS, ByVal lpGeoEnumProc As LongPtr, Optional ByVal data As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetUserGeoName Lib "kernel32" (ByVal GeoName As String) As BOOL
Public Declare PtrSafe Function SetUserGeoName Lib "kernel32" (ByVal GeoName As LongPtr) As BOOL
Public Declare PtrSafe Function SetUserGeoID Lib "kernel32" (ByVal GeoId As Long) As BOOL
Public Declare PtrSafe Function GetUserGeoID Lib "kernel32" (ByVal GeoClass As SYSGEOCLASS) As Long
Public DeclareWide PtrSafe Function GetUserDefaultGeoName Lib "kernel32" (ByVal geoName As String, ByVal geoNameCount As Long) As Long
Public Declare PtrSafe Function GetGeoInfoA Lib "kernel32" (ByVal Location As Long, ByVal GeoType As SYSGEOTYPE, ByVal lpGeoData As String, ByVal cchData As Long, ByVal LangId As Integer) As Long
Public Declare PtrSafe Function GetGeoInfoW Lib "kernel32" (ByVal Location As Long, ByVal GeoType As SYSGEOTYPE, ByVal lpGeoData As LongPtr, ByVal cchData As Long, ByVal LangId As Integer) As Long
Public DeclareWide PtrSafe Function GetGeoInfo Lib "kernel32" Alias "GetGeoInfoW" (ByVal Location As Long, ByVal GeoType As SYSGEOTYPE, ByVal lpGeoData As String, ByVal cchData As Long, ByVal LangId As Integer) As Long
Public DeclareWide PtrSafe Function GetGeoInfoEx Lib "kernel32" (ByVal Location As String, ByVal GeoType As SYSGEOTYPE, ByVal geoData As String, ByVal geoDataCount As Long) As Long
Public Declare PtrSafe Function CompareStringW Lib "kernel32" (ByVal Locale As DefaultLocales, ByVal dwCmpFlags As COMPARE_FLAGS, ByVal lpString1 As LongPtr, ByVal cchCount1 As Long, ByVal lpString2 As LongPtr, ByVal cchCount2 As Long) As CSTR_RETURNS
Public DeclareWide PtrSafe Function CompareString Lib "kernel32" Alias "CompareStringW" (ByVal Locale As DefaultLocales, ByVal dwCmpFlags As COMPARE_FLAGS, ByVal lpString1 As String, ByVal cchCount1 As Long, ByVal lpString2 As String, ByVal cchCount2 As Long) As CSTR_RETURNS
Public DeclareWide PtrSafe Function CompareStringEx Lib "kernel32" (ByVal lpLocaleName As String, ByVal dwCmpFlags As COMPARE_FLAGS, ByVal lpString1 As String, ByVal cchCount1 As Long, ByVal lpString2 As String, ByVal cchCount2 As Long, lpVersionInformation As NLSVERSIONINFOEX, ByVal lpReserved As LongPtr, ByVal lParam As LongPtr) As CSTR_RETURNS
Public Declare PtrSafe Function GetStringTypeA Lib "kernel32" (ByVal dwInfoType As GST_Class, ByVal lpSrcStr As String, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public Declare PtrSafe Function GetStringTypeW Lib "kernel32" (ByVal dwInfoType As GST_Class, ByVal lpSrcStr As LongPtr, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public DeclareWide PtrSafe Function GetStringType Lib "kernel32" Alias "GetStringTypeW" (ByVal dwInfoType As GST_Class, ByVal lpSrcStr As String, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public Declare PtrSafe Function GetStringTypeExA Lib "kernel32" (ByVal lcid As Long, ByVal dwInfoType As GST_Class, ByVal lpSrcStr As String, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public Declare PtrSafe Function GetStringTypeExW Lib "kernel32" (ByVal lcid As Long, ByVal dwInfoType As GST_Class, ByVal lpSrcStr As LongPtr, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public DeclareWide PtrSafe Function GetStringTypeEx Lib "kernel32" Alias "GetStringTypeExW" (ByVal lcid As Long, ByVal dwInfoType As GST_Class, ByVal lpSrcStr As String, ByVal cchSrc As Long, lpCharType As Integer) As BOOL
Public Declare PtrSafe Function FoldStringA Lib "kernel32" (ByVal dwMapFlags As LocaleIndMappingFlags, ByVal lpSrcStr As String, ByVal cchSrc As Long, ByVal lpDestStr As String, ByVal cchDest As Long) As Long
Public Declare PtrSafe Function FoldStringW Lib "kernel32" (ByVal dwMapFlags As LocaleIndMappingFlags, ByVal lpSrcStr As LongPtr, ByVal cchSrc As Long, ByVal lpDestStr As LongPtr, ByVal cchDest As Long) As Long
Public DeclareWide PtrSafe Function FoldString Lib "kernel32" Alias "FoldStringW" (ByVal dwMapFlags As LocaleIndMappingFlags, ByVal lpSrcStr As String, ByVal cchSrc As Long, ByVal lpDestStr As String, ByVal cchDest As Long) As Long
Public Declare PtrSafe Function LCMapStringA Lib "kernel32" (ByVal Locale As DefaultLocales, [TypeHint(LCMAP_FLAGS, COMPARE_FLAGS)] ByVal dwMapFlags As Long, ByVal lpSrcStr As String, ByVal cchSrc As Long, ByVal lpDestStr As String, ByVal cchDest As Long) As Long
Public Declare PtrSafe Function LCMapStringW Lib "kernel32" (ByVal Locale As DefaultLocales, [TypeHint(LCMAP_FLAGS, COMPARE_FLAGS)] ByVal dwMapFlags As Long, ByVal lpSrcStr As LongPtr, ByVal cchSrc As Long, ByVal lpDestStr As LongPtr, ByVal cchDest As Long) As Long
Public DeclareWide PtrSafe Function LCMapString Lib "kernel32" Alias "LCMapStringW" (ByVal Locale As DefaultLocales, [TypeHint(LCMAP_FLAGS, COMPARE_FLAGS)] ByVal dwMapFlags As Long, ByVal lpSrcStr As String, ByVal cchSrc As Long, ByVal lpDestStr As String, ByVal cchDest As Long) As Long
Public DeclareWide PtrSafe Function LCMapStringEx Lib "kernel32" (ByVal lpLocaleName As String, [TypeHint(LCMAP_FLAGS, COMPARE_FLAGS)] ByVal dwMapFlags As Long, ByVal lpSrcStr As String, ByVal cchSrc As Long, ByVal lpDestStr As LongPtr, ByVal cchDest As Long, lpVersionInformation As NLSVERSIONINFO, Optional ByVal lpReserved As LongPtr, Optional ByVal sortHandle As LongPtr) As Long
Public Declare PtrSafe Function IsDBCSLeadByte Lib "kernel32" (ByVal bTestChar As Byte) As BOOL
Public Declare PtrSafe Function IsDBCSLeadByteEx Lib "kernel32" (ByVal CodePage As CodePageDefaults, ByVal bTestChar As Byte) As BOOL
Public Declare PtrSafe Function MultiByteToWideChar Lib "kernel32" (ByVal CodePage As CodePageDefaults, ByVal dwFlags As MBWC_Flags, ByVal lpMultiByteStr As LongPtr, ByVal cchMultiByte As Long, ByVal lpWideCharStr As LongPtr, ByVal cchWideChar As Long) As Long
Public Declare PtrSafe Function WideCharToMultiByte Lib "kernel32" (ByVal CodePage As CodePageDefaults, ByVal dwFlags As WCMB_Flags, ByVal lpWideCharStr As LongPtr, ByVal cchWideChar As Long, ByVal lpMultiByteStr As LongPtr, ByVal cbMultiByte As Long, Optional ByVal lpDefaultChar As LongPtr, Optional lpUsedDefaultChar As BOOL) As Long
Public DeclareWide PtrSafe Function LoadStringByReference Lib "kernelbase" (ByVal dwFlags As LoadStrByRefFlags, ByVal Language As String, ByVal SourceString As String, ByVal Buffer As String, ByVal cchBuffer As Long, Optional ByVal Directory As String, Optional ByRef pcchBufferOut As Long) As BOOL
Public DeclareWide PtrSafe Function FindNLSString Lib "kernel32" (ByVal Locale As DefaultLocales, [TypeHint(NlsFindStrFlags, COMPARE_FLAGS)] ByVal dwFindNLSStringFlags As Long, ByVal lpStringSource As String, ByVal cchSource As Long, ByVal lpStringValue As String, ByVal cchValue As Long, Optional pcchFound As Long) As Long
Public DeclareWide PtrSafe Function FindNLSStringEx Lib "kernel32" (ByVal Locale As DefaultLocales, [TypeHint(NlsFindStrFlags, COMPARE_FLAGS)] ByVal dwFindNLSStringFlags As Long, ByVal lpStringSource As String, ByVal cchSource As Long, ByVal lpStringValue As String, ByVal cchValue As Long, pcchFound As Long, lpVersionInformation As NLSVERSIONINFO, Optional ByVal lpReserved As LongPtr, Optional ByVal sortHandle As LongPtr) As Long
Public DeclareWide PtrSafe Function IsNLSDefinedString Lib "kernel32" (ByVal Fn As SYSNLS_FUNCTION, ByVal dwFlags As Long, lpVersionInformation As NLSVERSIONINFO, ByVal lpString As String, ByVal cchStr As Long) As BOOL
Public DeclareWide PtrSafe Function NormalizeString Lib "kernel32" (ByVal NormForm As NORM_FORM, ByVal lpSrcString As String, ByVal cwSrcLength As Long, ByVal lpDstString As String, ByVal cwDstLength As Long) As Long
Public DeclareWide PtrSafe Function IsNormalizedString Lib "kernel32" (ByVal NormForm As NORM_FORM, ByVal lpString As String, ByVal cwLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetStringScripts Lib "kernel32" (ByVal dwFlags As GetStringScriptFlags, ByVal lpString As String, ByVal cchString As Long, ByVal lpScripts As String, ByVal cchScripts As Long) As Long
Public DeclareWide PtrSafe Function VerifyScripts Lib "kernel32" (ByVal dwFlags As VerifyScriptFlags, ByVal lpLocaleScripts As String, ByVal cchLocaleScripts As Long, ByVal lpTestScripts As String, ByVal cchTestScripts As Long) As BOOL
Public DeclareWide PtrSafe Function IdnToAscii Lib "kernel32" (ByVal dwFlags As NlsIntlDomainFlags, ByVal lpUnicodeCharStr As String, ByVal cchUnicodeChar As Long, ByVal lpASCIICharStr As String, ByVal cchASCIIChar As Long) As Long
Public DeclareWide PtrSafe Function IdnToUnicode Lib "kernel32" (ByVal dwFlags As NlsIntlDomainFlags, ByVal lpASCIICharStr As String, ByVal cchASCIIChar As Long, ByVal lpUnicodeCharStr As String, ByVal cchUnicodeChar As Long) As Long
Public DeclareWide PtrSafe Function IdnToNameprepUnicode Lib "kernel32" (ByVal dwFlags As NlsIntlDomainFlags, ByVal lpUnicodeCharStr As String, ByVal cchUnicodeChar As Long, ByVal lpNameprepCharStr As String, ByVal cchNameprepChar As Long) As Long
Public DeclareWide PtrSafe Function NotifyUILanguageChange Lib "kernel32" (ByVal dwFlags As Long, ByVal pcwstrNewLanguage As String, ByVal pcwstrPreviousLanguage As String, ByVal dwReserved As Long, Optional pdwStatusRtrn As Long) As BOOL
Public DeclareWide PtrSafe Function GetFileMUIPath Lib "kernel32" ([TypeHint(NlsFileMuiPathFlags, MUI_ENUM_FLAGS)] ByVal dwFlags As Long, ByVal pcwszFilePath As String, ByVal pwszLanguage As String, pcchLanguage As Long, ByVal pwszFileMUIPath As String, pcchFileMUIPath As Long, pululEnumerator As LongLong) As BOOL
[Description("Note: While this outputs a FILEMUIINFO type, various data follows it in memory. You must use a byte buffer, and then can copy the first sizeof(FILEMUIINFO) bytes into one.")]
Public DeclareWide PtrSafe Function GetFileMUIInfo Lib "kernel32" (ByVal dwFlags As NlsFileMuiQueryType, ByVal pcwszFilePath As String, pFileMUIInfo As Any, pcbFileMUIInfo As Long) As BOOL



Public Declare PtrSafe Function SetTapePosition Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwPositionType As TapeSetPositionMethods, ByVal dwPartition As Long, ByVal dwOffsetLow As Long, ByVal dwOffsetHigh As Long, ByVal bImmediate As BOOL) As Long
Public Declare PtrSafe Function GetTapePosition Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwPositionType As TapeGetPositionTypes, lpdwPartition As Long, lpdwOffsetLow As Long, lpdwOffsetHigh As Long) As Long
Public Declare PtrSafe Function PrepareTape Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwOperation As TapePrepareOperations, ByVal bImmediate As BOOL) As Long
Public Declare PtrSafe Function EraseTape Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwEraseType As TapeEraseTypes, ByVal bImmediate As BOOL) As Long
Public Declare PtrSafe Function CreateTapePartition Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwPartitionMethod As TapeCreatePartitionMethod, ByVal dwCount As Long, ByVal dwSize As Long) As Long
Public Declare PtrSafe Function WriteTapemark Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwTapemarkType As TapeWriteMarks, ByVal dwTapemarkCount As Long, ByVal bImmediate As BOOL) As Long
Public Declare PtrSafe Function GetTapeStatus Lib "kernel32" (ByVal hDevice As LongPtr) As Long
Public Declare PtrSafe Function GetTapeParameters Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwOperation As GetTapeParameterOperations, lpdwSize As Long, lpTapeInformation As Any) As Long
Public Declare PtrSafe Function SetTapeParameters Lib "kernel32" (ByVal hDevice As LongPtr, ByVal dwOperation As SetTapeParameterOperations, lpTapeInformation As Any) As Long


Public Declare PtrSafe Function CreateActCtxA Lib "kernel32" (pActCtx As ACTCTXA) As LongPtr
Public Declare PtrSafe Function CreateActCtxW Lib "kernel32" (pActCtx As ACTCTXW) As LongPtr
Public DeclareWide PtrSafe Function CreateActCtx Lib "kernel32" Alias "CreateActCtxW" (pActCtx As ACTCTX) As LongPtr
Public Declare PtrSafe Sub AddRefActCtx Lib "kernel32" (ByVal hActCtx As LongPtr)
Public Declare PtrSafe Sub ReleaseActCtx Lib "kernel32" (ByVal hActCtx As LongPtr)
Public Declare PtrSafe Function ZombifyActCtx Lib "kernel32" (ByVal hActCtx As LongPtr) As BOOL
Public Declare PtrSafe Function ActivateActCtx Lib "kernel32" (ByVal hActCtx As LongPtr, lpCookie As LongPtr) As BOOL
Public Declare PtrSafe Function DeactivateActCtx Lib "kernel32" (ByVal dwFlags As DeactivateActCtxFlags, ByVal lpCookie As LongPtr) As BOOL
Public Declare PtrSafe Function GetCurrentActCtx Lib "kernel32" (lphActCtx As LongPtr) As BOOL
Public Declare PtrSafe Function FindActCtxSectionStringA Lib "kernel32" (ByVal dwFlags As ActivationContextKeyedDataFlags, lpExtensionGuid As UUID, ByVal ulSectionId As ActivationContextSections, ByVal lpStringToFind As String, ReturnedData As ACTCTX_SECTION_KEYED_DATA) As BOOL
Public Declare PtrSafe Function FindActCtxSectionStringW Lib "kernel32" (ByVal dwFlags As ActivationContextKeyedDataFlags, lpExtensionGuid As UUID, ByVal ulSectionId As ActivationContextSections, ByVal lpStringToFind As LongPtr, ReturnedData As ACTCTX_SECTION_KEYED_DATA) As BOOL
Public DeclareWide PtrSafe Function FindActCtxSectionString Lib "kernel32" Alias "FindActCtxSectionStringW" (ByVal dwFlags As ActivationContextKeyedDataFlags, lpExtensionGuid As UUID, ByVal ulSectionId As ActivationContextSections, ByVal lpStringToFind As String, ReturnedData As ACTCTX_SECTION_KEYED_DATA) As BOOL
Public Declare PtrSafe Function FindActCtxSectionGuid Lib "kernel32" (ByVal dwFlags As ActivationContextKeyedDataFlags, lpExtensionGuid As UUID, ByVal ulSectionId As ActivationContextSections, lpGuidToFind As UUID, ReturnedData As ACTCTX_SECTION_KEYED_DATA) As BOOL
'doesnt exist Public Declare PtrSafe Function QueryActCtxA Lib "kernel32" (ByVal dwFlags As QueryActivationContextFlags, ByVal hActCtx As LongPtr, pvSubInstance As Any, ByVal ulInfoClass As ACTIVATION_CONTEXT_INFO_CLASS, pvBuffer As Any, Optional ByVal cbBuffer As LongPtr, Optional ByRef pcbWrittenOrRequired As LongPtr) As BOOL
Public Declare PtrSafe Function QueryActCtxW Lib "kernel32" (ByVal dwFlags As QueryActivationContextFlags, ByVal hActCtx As LongPtr, pvSubInstance As Any, ByVal ulInfoClass As ACTIVATION_CONTEXT_INFO_CLASS, pvBuffer As Any, Optional ByVal cbBuffer As LongPtr, Optional ByRef pcbWrittenOrRequired As LongPtr) As BOOL
Public DeclareWide PtrSafe Function QueryActCtx Lib "kernel32" Alias "QueryActCtxW" (ByVal dwFlags As QueryActivationContextFlags, ByVal hActCtx As LongPtr, pvSubInstance As Any, ByVal ulInfoClass As ACTIVATION_CONTEXT_INFO_CLASS, pvBuffer As Any, Optional ByVal cbBuffer As LongPtr, Optional ByRef pcbWrittenOrRequired As LongPtr) As BOOL
'doesnt exist Public Declare PtrSafe Function QueryActCtxSettingsA Lib "kernel32" (ByVal dwFlags As Long, ByVal hActCtx As LongPtr, ByVal settingsNameSpace As LongPtr, ByVal settingName As String, ByVal pvBuffer As LongPtr, ByVal dwBuffer As LongPtr, Optional ByRef pcbWrittenOrRequired As LongPtr) As BOOL
Public Declare PtrSafe Function QueryActCtxSettingsW Lib "kernel32" (ByVal dwFlags As Long, ByVal hActCtx As LongPtr, ByVal settingsNameSpace As LongPtr, ByVal settingName As LongPtr, ByVal pvBuffer As LongPtr, ByVal dwBuffer As LongPtr, Optional ByRef pcbWrittenOrRequired As LongPtr) As BOOL
Public DeclareWide PtrSafe Function QueryActCtxSettings Lib "kernel32" Alias "QueryActCtxSettingsW" (ByVal dwFlags As Long, ByVal hActCtx As LongPtr, ByVal settingsNameSpace As LongPtr, ByVal settingName As String, ByVal pvBuffer As LongPtr, ByVal dwBuffer As LongPtr, Optional ByRef pcbWrittenOrRequired As LongPtr) As BOOL



Public Declare PtrSafe Function GetActiveProcessorGroupCount Lib "kernel32" () As Integer
Public Declare PtrSafe Function GetMaximumProcessorGroupCount Lib "kernel32" () As Integer
Public Declare PtrSafe Function GetActiveProcessorCount Lib "kernel32" (ByVal GroupNumber As Integer) As Long
Public Declare PtrSafe Function GetMaximumProcessorCount Lib "kernel32" (ByVal GroupNumber As Integer) As Long
Public Declare PtrSafe Function GetNumaProcessorNode Lib "kernel32" (ByVal Processor As Byte, NodeNumber As Byte) As BOOL
Public Declare PtrSafe Function GetNumaNodeNumberFromHandle Lib "kernel32" (ByVal hFile As LongPtr, NodeNumber As Integer) As BOOL
Public Declare PtrSafe Function GetNumaProcessorNodeEx Lib "kernel32" (Processor As PROCESSOR_NUMBER, NodeNumber As Integer) As BOOL
Public Declare PtrSafe Function GetNumaNodeProcessorMask Lib "kernel32" (ByVal Node As Byte, ProcessorMask As LongLong) As BOOL
Public Declare PtrSafe Function GetNumaAvailableMemoryNode Lib "kernel32" (ByVal Node As Byte, AvailableBytes As LongLong) As BOOL
Public Declare PtrSafe Function GetNumaAvailableMemoryNodeEx Lib "kernel32" (ByVal Node As Integer, AvailableBytes As LongLong) As BOOL
Public Declare PtrSafe Function GetNumaProximityNode Lib "kernel32" (ByVal ProximityId As Long, NodeNumber As Byte) As BOOL

'realtimeapiset.h - 100% coverage
Public Declare PtrSafe Function QueryThreadCycleTime Lib "kernel32" (ByVal ThreadHandle As LongPtr, CycleTime As LongLong) As BOOL
Public Declare PtrSafe Function QueryProcessCycleTime Lib "kernel32" (ByVal ProcessHandle As LongPtr, CycleTime As LongLong) As BOOL
Public Declare PtrSafe Function QueryIdleProcessorCycleTime Lib "kernel32" (BufferLength As Long, ProcessorIdleCycleTime As LongLong) As BOOL
Public Declare PtrSafe Function QueryIdleProcessorCycleTimeEx Lib "kernel32" (ByVal Group As Integer, BufferLength As Long, ProcessorIdleCycleTime As LongLong) As BOOL
Public Declare PtrSafe Sub QueryInterruptTimePrecise Lib "kernel32" (lpInterruptTimePrecise As LongLong)
Public Declare PtrSafe Sub QueryUnbiasedInterruptTimePrecise Lib "kernel32" (lpUnbiasedInterruptTimePrecise As LongLong)
Public Declare PtrSafe Sub QueryInterruptTime Lib "kernel32" (lpInterruptTime As LongLong)
Public Declare PtrSafe Function QueryUnbiasedInterruptTime Lib "kernel32" (UnbiasedTime As LongLong) As BOOL
Public Declare PtrSafe Function QueryAuxiliaryCounterFrequency Lib "kernel32" (lpAuxiliaryCounterFrequency As LongLong) As Long
Public Declare PtrSafe Function ConvertAuxiliaryCounterToPerformanceCounter Lib "kernel32" (ByVal ullAuxiliaryCounterValue As LongLong, lpPerformanceCounterValue As LongLong, Optional lpConversionError As LongLong) As Long
Public Declare PtrSafe Function ConvertPerformanceCounterToAuxiliaryCounter Lib "kernel32" (ByVal ullPerformanceCounterValue As LongLong, lpAuxiliaryCounterValue As LongLong, Optional lpConversionError As LongLong) As Long


'TlHelp32.h - 100% coverage + custom ANSI alternates
Public Declare PtrSafe Function CreateToolhelp32Snapshot Lib "kernel32" (ByVal dwFlags As TH32CS_Flags, ByVal th32ProcessID As Long) As LongPtr
Public Declare PtrSafe Function Heap32ListFirst Lib "kernel32" (ByVal hSnapshot As LongPtr, lphl As HEAPLIST32) As BOOL
Public Declare PtrSafe Function Heap32ListNext Lib "kernel32" (ByVal hSnapshot As LongPtr, lphl As HEAPLIST32) As BOOL
Public Declare PtrSafe Function Heap32First Lib "kernel32" (lphe As HEAPENTRY32, ByVal th32ProcessID As Long, ByVal th32HeapID As LongPtr) As BOOL
Public Declare PtrSafe Function Heap32Next Lib "kernel32" (lphe As HEAPENTRY32) As BOOL
Public Declare PtrSafe Function Toolhelp32ReadProcessMemory Lib "kernel32" (ByVal th32ProcessID As Long, ByVal lpBaseAddress As LongPtr, lpBuffer As Any, ByVal cbRead As LongPtr, lpNumberOfBytesRead As LongPtr) As BOOL
Public DeclareWide PtrSafe Function Process32FirstA Lib "kernel32" Alias "Process32First" (ByVal hSnapshot As LongPtr, lppe As PROCESSENTRY32A) As BOOL
Public DeclareWide PtrSafe Function Process32NextA Lib "kernel32" Alias "Process32Next" (ByVal hSnapshot As LongPtr, lppe As PROCESSENTRY32A) As BOOL
Public Declare PtrSafe Function Process32FirstW Lib "kernel32" (ByVal hSnapshot As LongPtr, lppe As PROCESSENTRY32W) As BOOL
Public Declare PtrSafe Function Process32NextW Lib "kernel32" (ByVal hSnapshot As LongPtr, lppe As PROCESSENTRY32W) As BOOL
[Description("NOTE: This definition differs from the Windows SDK definition in mapping to the Unicode version, per WinDevLib standards. The ANSI version can be accessed with Process32FirstA")]
Public DeclareWide PtrSafe Function Process32First Lib "kernel32" Alias "Process32FirstW" (ByVal hSnapshot As LongPtr, lppe As PROCESSENTRY32) As BOOL
[Description("NOTE: This definition differs from the Windows SDK definition in mapping to the Unicode version, per WinDevLib standards. The ANSI version can be accessed with Process32NextA")]
Public DeclareWide PtrSafe Function Process32Next Lib "kernel32" Alias "Process32NextW" (ByVal hSnapshot As LongPtr, lppe As PROCESSENTRY32) As BOOL
Public Declare PtrSafe Function Thread32First Lib "kernel32" (ByVal hSnapshot As LongPtr, lpTE As THREADENTRY32) As BOOL
Public Declare PtrSafe Function Thread32Next Lib "kernel32" (ByVal hSnapshot As LongPtr, lpTE As THREADENTRY32) As BOOL
Public DeclareWide PtrSafe Function Module32FirstA Lib "kernel32" Alias "Module32First" (ByVal hSnapshot As LongPtr, lpme As MODULEENTRY32A) As BOOL
Public DeclareWide PtrSafe Function Module32NextA Lib "kernel32" Alias "Module32Next" (ByVal hSnapshot As LongPtr, lpme As MODULEENTRY32A) As BOOL
Public Declare PtrSafe Function Module32FirstW Lib "kernel32" (ByVal hSnapshot As LongPtr, lpme As MODULEENTRY32W) As BOOL
Public Declare PtrSafe Function Module32NextW Lib "kernel32" (ByVal hSnapshot As LongPtr, lpme As MODULEENTRY32W) As BOOL
[Description("NOTE: This definition differs from the Windows SDK definition in mapping to the Unicode version, per WinDevLib standards. The ANSI version can be accessed with Module32FirstA")]
Public DeclareWide PtrSafe Function Module32First Lib "kernel32" Alias "Module32FirstW" (ByVal hSnapshot As LongPtr, lpme As MODULEENTRY32) As BOOL
[Description("NOTE: This definition differs from the Windows SDK definition in mapping to the Unicode version, per WinDevLib standards. The ANSI version can be accessed with Module32NextA")]
Public DeclareWide PtrSafe Function Module32Next Lib "kernel32" Alias "Module32NextW" (ByVal hSnapshot As LongPtr, lpme As MODULEENTRY32) As BOOL


Public Declare PtrSafe Function QueryFullProcessImageNameA Lib "kernel32" (ByVal hProcess As LongPtr, ByVal dwFlags As PROCESS_FULL_IMAGENAME_FLAGS, ByVal lpExeName As String, lpdwSize As Long) As Long
Public DeclareWide PtrSafe Function QueryFullProcessImageName Lib "kernel32" Alias "QueryFullProcessImageNameW" (ByVal hProcess As LongPtr, ByVal dwFlags As PROCESS_FULL_IMAGENAME_FLAGS, ByVal lpExeName As String, lpdwSize As Long) As Long
Public Declare PtrSafe Function QueryFullProcessImageNameW Lib "kernel32" (ByVal hProcess As LongPtr, ByVal dwFlags As PROCESS_FULL_IMAGENAME_FLAGS, ByVal lpExeName As LongPtr, lpdwSize As Long) As Long
Public Declare PtrSafe Function ReadProcessMemory Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpBaseAddress As LongPtr, lpBuffer As Any, ByVal nSize As LongPtr, lpNumberOfBytesRead As LongPtr) As Long
Public Declare PtrSafe Function WriteProcessMemory Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpBaseAddress As LongPtr, lpBuffer As Any, ByVal nSize As LongPtr, lpNumberOfBytesWritten As LongPtr) As Long
Public Declare PtrSafe Function GetCurrentProcess Lib "kernel32" () As LongPtr
Public Declare PtrSafe Sub GetStartupInfoA Lib "kernel32" (lpStartupInfo As STARTUPINFOA)
Public Declare PtrSafe Sub GetStartupInfoW Lib "kernel32" (lpStartupInfo As STARTUPINFOW)
Public Declare PtrSafe Sub GetStartupInfo Lib "kernel32" Alias "GetStartupInfoW" (lpStartupInfo As STARTUPINFO)
Public Declare PtrSafe Function IsProcessCritical Lib "kernel32" (ByVal hProcess As LongPtr, Critical As BOOL) As BOOL
Public Declare PtrSafe Function GetProcessTimes Lib "kernel32" (ByVal hProcess As LongPtr, lpCreationTime As FILETIME, lpExitTime As FILETIME, lpKernelTime As FILETIME, lpUserTime As FILETIME) As BOOL
Public Declare PtrSafe Function SetThreadDescription Lib "kernel32" (ByVal hThread As LongPtr, ByVal lpThreadDescription As LongPtr) As Long
Public Declare PtrSafe Function GetThreadDescription Lib "kernel32" (ByVal hThread As LongPtr, ppszThreadDescription As LongPtr) As Long

Public Delegate Sub APCFUNC (ByVal Parameter As LongPtr)
' Public Declare PtrSafe Function QueueUserAPC Lib "kernel32" (ByVal pfnAPC As APCFUNC, ByVal hThread As LongPtr, ByVal dwData As LongPtr) As Long
Public Declare PtrSafe Function QueueUserAPC Lib "kernel32" (ByVal pfnAPC As LongPtr, ByVal hThread As LongPtr, ByVal dwData As LongPtr) As Long
' Public Declare PtrSafe Function QueueUserAPC2 Lib "kernel32" (ByVal ApcRoutine As APCFUNC, ByVal Thread As LongPtr, ByVal Data As LongPtr, ByVal Flags As QUEUE_USER_APC_FLAGS) As BOOL
Public Declare PtrSafe Function QueueUserAPC2 Lib "kernel32" (ByVal ApcRoutine As LongPtr, ByVal Thread As LongPtr, ByVal Data As LongPtr, ByVal Flags As QUEUE_USER_APC_FLAGS) As BOOL


Public Declare PtrSafe Function GlobalAlloc Lib "kernel32" (ByVal uFlags As GMEM, ByVal dwBytes As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalReAlloc Lib "kernel32" (ByVal hMem As LongPtr, ByVal dwBytes As LongPtr, ByVal uFlags As GMEM) As LongPtr
Public Declare PtrSafe Function GlobalFree Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalLock Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalUnlock Lib "kernel32" (ByVal hMem As LongPtr) As Long
Public Declare PtrSafe Function GlobalSize Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalHandle Lib "kernel32" (ByVal pMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalFlags Lib "kernel32" (ByVal hMem As LongPtr) As GMEM
Public Declare PtrSafe Sub GlobalFix Lib "kernel32" (ByVal hMem As LongPtr)
Public Declare PtrSafe Sub GlobalUnfix Lib "kernel32" (ByVal hMem As LongPtr)
Public Declare PtrSafe Function GlobalWire Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GlobalUnWire Lib "kernel32" (ByVal hMem As LongPtr) As Long
Public Declare PtrSafe Function GlobalCompact Lib "kernel32" (ByVal dwinFree As Long) As LongPtr
' #define GlobalLRUNewest( h )    ((HANDLE)(h))
Public Function GlobalLRUNewest(ByVal h As LongPtr) As LongPtr: Return h: End Function
' #define GlobalLRUOldest( h )    ((HANDLE)(h))
Public Function GlobalLRUOldest(ByVal h As LongPtr) As LongPtr: Return h: End Function
Public Function GlobalDiscard(ByVal h As LongPtr) As LongPtr: Return GlobalReAlloc((h), 0, GMEM_MOVEABLE): End Function
[Description("**DEPRECATED.** Use GlobalMemoryStatusEx.")]
Public Declare PtrSafe Sub GlobalMemoryStatus Lib "kernel32" (ByRef lpBuffer As MEMORYSTATUS)
Public Declare PtrSafe Function GlobalMemoryStatusEx Lib "kernel32" (ByRef lpBuffer As MEMORYSTATUSEX) As Long
        
Public Declare PtrSafe Function LocalAlloc Lib "kernel32" (ByVal uFlags As LMEM, ByVal uBytes As LongPtr) As LongPtr
Public Declare PtrSafe Function LocalReAlloc Lib "kernel32" (ByVal hMem As LongPtr, ByVal uBytes As LongPtr, ByVal uFlags As LMEM) As LongPtr
Public Declare PtrSafe Function LocalFree Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function LocalLock Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function LocalUnlock Lib "kernel32" (ByVal hMem As LongPtr) As Long
Public Declare PtrSafe Function LocalSize Lib "kernel32" (ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function LocalHandle Lib "kernel32" (ByVal pMem As LongPtr) As LongPtr
Public Declare PtrSafe Function LocalFlags Lib "kernel32" (ByVal hMem As LongPtr) As GMEM
Public Declare PtrSafe Function LocalShrink Lib "kernel32" (ByVal hMem As LongPtr, ByVal cbNewSize As Long) As LongPtr
Public Declare PtrSafe Function LocalCompact Lib "kernel32" (ByVal uMinFree As Long) As LongPtr
Public Function LocalDiscard(ByVal h As LongPtr) As LongPtr: Return LocalReAlloc((h), 0, LMEM_MOVEABLE): End Function

Public Declare PtrSafe Function HeapCreate Lib "kernel32" (ByVal flOptions As HeapFlags, ByVal dwInitialSize As LongPtr, ByVal dwMaximumSize As LongPtr) As LongPtr
Public Declare PtrSafe Function HeapAlloc Lib "kernel32" (ByVal hHeap As LongPtr, ByVal dwFlags As HeapFlags, ByVal dwBytes As LongPtr) As LongPtr
Public Declare PtrSafe Function HeapReAlloc Lib "kernel32" (ByVal hHeap As LongPtr, ByVal dwFlags As HeapFlags, lpMem As Any, ByVal dwBytes As LongPtr) As LongPtr
Public Declare PtrSafe Function HeapLock Lib "kernel32" (ByVal hHeap As LongPtr) As BOOL
Public Declare PtrSafe Function HeapUnlock Lib "kernel32" (ByVal hHeap As LongPtr) As BOOL
Public Declare PtrSafe Function HeapFree Lib "kernel32" (ByVal hHeap As LongPtr, ByVal dwFlags As HeapFlags, ByRef lpMem As Any) As BOOL
Public Declare PtrSafe Function HeapWalk Lib "kernel32" (ByVal hHeap As LongPtr, lpEntry As PROCESS_HEAP_ENTRY) As BOOL
Public Declare PtrSafe Function HeapDestroy Lib "kernel32" (ByVal hHeap As LongPtr) As BOOL
Public Declare PtrSafe Function HeapCompact Lib "kernel32" (ByVal hHeap As LongPtr, ByVal dwFlags As HeapFlags) As LongPtr
Public Declare PtrSafe Function HeapSize Lib "kernel32" (ByVal hHeap As LongPtr, ByVal dwFlags As HeapFlags, lpMem As Any) As LongPtr
Public Declare PtrSafe Function GetProcessHeaps Lib "kernel32" (ByVal NumberOfHeaps As Long, ByRef ProcessHeaps As LongPtr) As Long
Public Declare PtrSafe Function HeapQueryInformation Lib "kernel32" (ByVal HeapHandle As LongPtr, ByVal HeapInformationClass As HEAP_INFORMATION_CLASS, ByRef HeapInformation As Any, ByVal HeapInformationLength As LongPtr, ByRef ReturnLength As LongPtr) As BOOL
Public Declare PtrSafe Function HeapSetInformation Lib "kernel32" (ByVal HeapHandle As LongPtr, ByVal HeapInformationClass As HEAP_INFORMATION_CLASS, ByRef HeapInformation As Any, ByVal HeapInformationLength As LongPtr) As BOOL
Public Declare PtrSafe Function GetProcessHeap Lib "kernel32" () As LongPtr
        
        
Public Declare PtrSafe Sub Sleep Lib "kernel32" (ByVal dwMilliseconds As Long)
Public Declare PtrSafe Function SleepEx Lib "kernel32" (ByVal dwMilliseconds As Long, ByVal bAlertable As BOOL) As Long
Public Declare PtrSafe Function CloseHandle Lib "kernel32" (ByVal hObject As LongPtr) As BOOL
Public Declare PtrSafe Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" (Destination As Any, Source As Any, ByVal Length As LongPtr)
Public Declare PtrSafe Sub MoveMemory Lib "kernel32" Alias "RtlMoveMemory" (Destination As Any, Source As Any, ByVal Length As LongPtr)
Public Declare PtrSafe Sub memcpy Lib "kernel32" Alias "RtlMoveMemory" (Destination As Any, Source As Any, ByVal Length As LongPtr)
Public Declare PtrSafe Sub ZeroMemory Lib "kernel32" Alias "RtlZeroMemory" (Destination As Any, ByVal Length As LongPtr)
Public Declare PtrSafe Sub FillMemory Lib "kernel32" Alias "RtlFillMemory" (Destination As Any, ByVal Length As LongPtr, ByVal Fill As Long)
Public Declare PtrSafe Sub RtlMoveMemory Lib "kernel32" (Destination As Any, Source As Any, ByVal Length As LongPtr)
Public Declare PtrSafe Sub RtlZeroMemory Lib "kernel32" (Destination As Any, ByVal Length As LongPtr)
Public Declare PtrSafe Sub RtlFillMemory Lib "kernel32" (Destination As Any, ByVal Length As LongPtr, ByVal Fill As Long)
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Sub RtlCopyMemory Lib "kernel32" Alias "RtlMoveMemory" (Destination As Any, Source As Any, ByVal Length As LongPtr)

[Description("⚠️ **WARNING:** This function is obsolete and unreliable. It is also in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function IsBadReadPtr Lib "kernel32" (lp As Any, ByVal ucb As LongPtr) As BOOL
[Description("⚠️ **WARNING:** This function is obsolete and unreliable. It is also in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function IsBadWritePtr Lib "kernel32" (lp As Any, ByVal ucb As LongPtr) As BOOL
[Description("⚠️ **WARNING:** This function is obsolete and unreliable. It is also in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function IsBadStringPtrA Lib "kernel32" (ByVal lpsz As String, ByVal ucchMax As LongPtr) As BOOL
[Description("⚠️ **WARNING:** This function is obsolete and unreliable. It is also in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function IsBadStringPtrW Lib "kernel32" (ByVal lpsz As LongPtr, ByVal ucchMax As LongPtr) As BOOL
[Description("⚠️ **WARNING:** This function is obsolete and unreliable. It is also in banned.h,insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function IsBadStringPtr Lib "kernel32" Alias "IsBadStringPtrW" (ByVal lpsz As String, ByVal ucchMax As LongPtr) As BOOL
[Description("⚠️ **WARNING:** This function is obsolete and unreliable. It is also in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function IsBadHugeReadPtr Lib "kernel32" (lp As Any, ByVal ucb As LongPtr) As BOOL
[Description("⚠️ **WARNING:** This function is obsolete and unreliable. It is also in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function IsBadHugeWritePtr Lib "kernel32" (lp As Any, ByVal ucb As LongPtr) As BOOL
[Description("⚠️ **WARNING:** This function is obsolete and unreliable. It is also in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function IsBadCodePtr Lib "kernel32" (ByVal lpfn As LongPtr) As BOOL

Public Type RTL_RUN_ONCE
    Ptr As LongPtr
End Type
'Alias INIT_ONCE As RTL_RUN_ONCE
Public Type INIT_ONCE
    Ptr As LongPtr
End Type
Public Enum RtlRunOnceFlags
    RTL_RUN_ONCE_CHECK_ONLY = &H00000001
    RTL_RUN_ONCE_ASYNC = &H00000002
    RTL_RUN_ONCE_INIT_FAILED = &H00000004
End Enum
Public Const RTL_RUN_ONCE_INIT = 0
Public Const RTL_RUN_ONCE_CTX_RESERVED_BITS = 2
Public Enum InitOnceFlags
    INIT_ONCE_CHECK_ONLY = RTL_RUN_ONCE_CHECK_ONLY
    INIT_ONCE_ASYNC = RTL_RUN_ONCE_ASYNC
    INIT_ONCE_INIT_FAILED = RTL_RUN_ONCE_INIT_FAILED
End Enum
Public Const INIT_ONCE_STATIC_INIT = RTL_RUN_ONCE_INIT
Public Const INIT_ONCE_CTX_RESERVED_BITS = RTL_RUN_ONCE_CTX_RESERVED_BITS

Public Enum CreateEventExFlags
    CREATE_EVENT_MANUAL_RESET = &H00000001
    CREATE_EVENT_INITIAL_SET = &H00000002
End Enum

Public Declare PtrSafe Sub InitializeCriticalSection Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION)
Public Declare PtrSafe Function InitializeCriticalSectionAndSpinCount Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION, ByVal dwSpinCount As Long) As BOOL
Public Declare PtrSafe Function InitializeCriticalSectionEx Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION, ByVal dwSpinCount As Long, ByVal Flags As InitCriticalSectExFlags) As BOOL
Public Declare PtrSafe Function TryEnterCriticalSection Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION) As BOOL
Public Declare PtrSafe Sub EnterCriticalSection Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION)
Public Declare PtrSafe Sub LeaveCriticalSection Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION)
Public Declare PtrSafe Sub DeleteCriticalSection Lib "kernel32" (lpCriticalSection As CRITICAL_SECTION)
Public Declare PtrSafe Sub InitOnceInitialize Lib "kernel32" (InitOnce As INIT_ONCE)
Public Declare PtrSafe Function InitOnceExecuteOnce Lib "kernel32" (InitOnce As INIT_ONCE, ByVal InitFn As LongPtr, ByVal Parameter As LongPtr, Context As LongPtr) As BOOL
Public Declare PtrSafe Function InitOnceBeginInitialize Lib "kernel32" (lpInitOnce As INIT_ONCE, ByVal dwFlags As InitOnceFlags, fPending As BOOL, lpContext As LongPtr) As BOOL
Public Declare PtrSafe Function InitOnceComplete Lib "kernel32" (lpInitOnce As INIT_ONCE, ByVal dwFlags As InitOnceFlags, ByVal lpContext As LongPtr) As BOOL
Public Declare PtrSafe Function DuplicateHandle Lib "kernel32" (ByVal hSourceProcessHandle As LongPtr, ByVal hSourceHandle As LongPtr, ByVal hTargetProcessHandle As LongPtr, lpTargetHandle As LongPtr, [TypeHint(GenericRights, StandardAccessTypes)] ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal dwOptions As DuplicateObjectOptions) As Long
Public Declare PtrSafe Function FormatMessageA Lib "kernel32" (ByVal dwFlags As FormatMessageFlags, lpSource As Any, ByVal dwMessageId As Long, ByVal dwLanguageId As Long, ByVal lpBuffer As String, ByVal nSize As Long, Arguments As LongPtr) As Long
Public Declare PtrSafe Function FormatMessageW Lib "kernel32" (ByVal dwFlags As FormatMessageFlags, lpSource As Any, ByVal dwMessageId As Long, ByVal dwLanguageId As Long, ByVal lpBuffer As LongPtr, ByVal nSize As Long, Arguments As LongPtr) As Long
Public DeclareWide PtrSafe Function FormatMessage Lib "kernel32" Alias "FormatMessageW" (ByVal dwFlags As FormatMessageFlags, lpSource As Any, ByVal dwMessageId As Long, ByVal dwLanguageId As Long, ByVal lpBuffer As String, ByVal nSize As Long, Arguments As LongPtr) As Long
Public Declare PtrSafe Function GetCurrentProcessId Lib "kernel32" () As Long
Public Declare PtrSafe Function GetCurrentThreadId Lib "kernel32" () As Long
Public Declare PtrSafe Function GetCurrentThread Lib "kernel32" () As LongPtr
Public Declare PtrSafe Function WaitForSingleObject Lib "kernel32" (ByVal hHandle As LongPtr, ByVal dwMilliseconds As Long) As WaitForObjOutcomes
Public Declare PtrSafe Function WaitForMultipleObjects Lib "kernel32" (ByVal nCount As Long, ByRef lpHandles As LongPtr, ByVal bWaitAll As BOOL, ByVal dwMilliseconds As Long) As WaitForObjOutcomes
Public Declare PtrSafe Function WaitForSingleObjectEx Lib "kernel32" (ByVal hHandle As LongPtr, ByVal dwMilliseconds As Long, ByVal bAlertable As BOOL) As WaitForObjOutcomes
Public Declare PtrSafe Function WaitForMultipleObjectsEx Lib "kernel32" (ByVal nCount As Long, ByRef lpHandles As LongPtr, ByVal bWaitAll As BOOL, ByVal dwMilliseconds As Long, ByVal bAlertable As BOOL) As WaitForObjOutcomes
Public Declare PtrSafe Function SignalObjectAndWait Lib "kernel32" (ByVal hObjectToSignal As LongPtr, ByVal hObjectToWaitOn As LongPtr, ByVal dwMilliseconds As Long, ByVal bAlertable As BOOL) As WaitForObjOutcomes
Public Declare PtrSafe Function CreateEventA Lib "kernel32" (lpEventAttributes As SECURITY_ATTRIBUTES, ByVal bManualReset As BOOL, ByVal bInitialState As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateEventW Lib "kernel32" (lpEventAttributes As SECURITY_ATTRIBUTES, ByVal bManualReset As BOOL, ByVal bInitialState As BOOL, ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateEvent Lib "kernel32" Alias "CreateEventW" (lpEventAttributes As SECURITY_ATTRIBUTES, ByVal bManualReset As BOOL, ByVal bInitialState As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateEventExA Lib "kernel32" (lpEventAttributes As SECURITY_ATTRIBUTES, ByVal lpName As String, ByVal dwFlags As CreateEventExFlags, [TypeHint(StandardAccessTypes, EventAccessRights)] ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function CreateEventExW Lib "kernel32" (lpEventAttributes As SECURITY_ATTRIBUTES, ByVal lpName As LongPtr, ByVal dwFlags As CreateEventExFlags, [TypeHint(StandardAccessTypes, EventAccessRights)] ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateEventEx Lib "kernel32" Alias "CreateEventExW" (lpEventAttributes As SECURITY_ATTRIBUTES, ByVal lpName As String, ByVal dwFlags As CreateEventExFlags, [TypeHint(StandardAccessTypes, EventAccessRights)] ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function PulseEvent Lib "kernel32" (ByVal hEvent As LongPtr) As BOOL
Public Declare PtrSafe Function SetEvent Lib "kernel32" (ByVal hEvent As LongPtr) As BOOL
Public Declare PtrSafe Function ResetEvent Lib "kernel32" (ByVal hEvent As LongPtr) As BOOL
Public Declare PtrSafe Function CreateSemaphoreA Lib "kernel32" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, Optional ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateSemaphoreW Lib "kernel32" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, Optional ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateSemaphore Lib "kernel32" Alias "CreateSemaphoreW" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, Optional ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateSemaphoreExA Lib "kernel32" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, ByVal lpName As String, ByVal dwFlags As Long, ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function CreateSemaphoreExW Lib "kernel32" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, ByVal lpName As LongPtr, ByVal dwFlags As Long, ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateSemaphoreEx Lib "kernel32" Alias "CreateSemaphoreExW" (lpSemaphoreAttributes As SECURITY_ATTRIBUTES, ByVal lInitialCount As Long, ByVal lMaximumCount As Long, ByVal lpName As String, ByVal dwFlags As Long, ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function OpenSemaphoreA Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function OpenSemaphoreW Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenSemaphore Lib "kernel32" Alias "OpenSemaphoreW" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function ReleaseSemaphore Lib "kernel32" (ByVal hSemaphore As LongPtr, ByVal lReleaseCount As Long, Optional lpPreviousCount As Long) As BOOL
Public Declare PtrSafe Function CreateMutexA Lib "kernel32" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, Optional ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateMutexW Lib "kernel32" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, Optional ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateMutex Lib "kernel32" Alias "CreateMutexW" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, Optional ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateMutexExA Lib "kernel32" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, ByVal lpName As String, ByVal dwFlags As CreateMutexExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function CreateMutexExW Lib "kernel32" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, ByVal lpName As LongPtr, ByVal dwFlags As CreateMutexExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateMutexEx Lib "kernel32" Alias "CreateMutexExW" (lpMutexAttributes As SECURITY_ATTRIBUTES, ByVal lInitialOwner As Long, ByVal lpName As String, ByVal dwFlags As CreateMutexExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function OpenMutexA Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function OpenMutexW Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenMutex Lib "kernel32" Alias "OpenMutexW" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function ReleaseMutex Lib "kernel32" (ByVal hMutex As LongPtr) As BOOL
Public Declare PtrSafe Function CreateWaitableTimerA Lib "kernel32" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal bManualReset As BOOL, Optional ByVal lpTimerName As String) As LongPtr
Public Declare PtrSafe Function CreateWaitableTimerW Lib "kernel32" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal bManualReset As BOOL, Optional ByVal lpTimerName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateWaitableTimer Lib "kernel32" Alias "CreateWaitableTimerW" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal bManualReset As BOOL, Optional ByVal lpTimerName As String) As LongPtr
Public Declare PtrSafe Function CreateWaitableTimerExA Lib "kernel32" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal lpTimerName As String, ByVal dwFlags As CreateWaitableTimerExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function CreateWaitableTimerExW Lib "kernel32" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal lpTimerName As LongPtr, ByVal dwFlags As CreateWaitableTimerExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateWaitableTimerEx Lib "kernel32" Alias "CreateWaitableTimerExW" (lpTimerAttributes As SECURITY_ATTRIBUTES, ByVal lpTimerName As String, ByVal dwFlags As CreateWaitableTimerExFlags, ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function OpenWaitableTimerA Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpTimerName As String) As LongPtr
Public Declare PtrSafe Function OpenWaitableTimerW Lib "kernel32" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpTimerName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenWaitableTimer Lib "kernel32" Alias "OpenWaitableTimerW" (ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpTimerName As String) As LongPtr
Public Declare PtrSafe Function CancelWaitableTimer Lib "kernel32" (ByVal hTimer As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetWaitableTimer Lib "kernel32" (ByVal hTimer As LongPtr, lpDueTime As LARGE_INTEGER, ByVal lPeriod As Long, ByVal pfnCompletionRoutine As LongPtr, lpArgToCompletionRoutine As Any, ByVal fResume As BOOL) As BOOL
Public DeclareWide PtrSafe Function SetWaitableTimerEx Lib "kernel32" (ByVal hTimer As LongPtr, lpDueTime As LARGE_INTEGER, ByVal lPeriod As Long, ByVal pfnCompletionRoutine As LongPtr, lpArgToCompletionRoutine As Any, WakeContext As REASON_CONTEXT, ByVal TolerableDelay As Long) As BOOL
Public Declare PtrSafe Sub InitializeSRWLock Lib "kernel32" (SRWLock As LongPtr)
Public Declare PtrSafe Sub AcquireSRWLockExclusive Lib "kernel32" (SRWLock As LongPtr)
Public Declare PtrSafe Sub AcquireSRWLockShared Lib "kernel32" (SRWLock As LongPtr)
Public Declare PtrSafe Function TryAcquireSRWLockExclusive Lib "kernel32" (SRWLock As LongPtr) As Byte
Public Declare PtrSafe Function TryAcquireSRWLockShared Lib "kernel32" (SRWLock As LongPtr) As Byte
Public Declare PtrSafe Sub ReleaseSRWLockExclusive Lib "kernel32" (SRWLock As LongPtr)
Public Declare PtrSafe Sub ReleaseSRWLockShared Lib "kernel32" (SRWLock As LongPtr)
Public Declare PtrSafe Sub InitializeConditionVariable Lib "kernel32" (ConditionVariable As LongPtr)
Public Declare PtrSafe Function SleepConditionVariableCS Lib "kernel32" (ConditionVariable As LongPtr, CriticalSection As CRITICAL_SECTION, ByVal dwMilliseconds As Long) As BOOL
Public Declare PtrSafe Sub WakeConditionVariable Lib "kernel32" (ConditionVariable As LongPtr)
Public Declare PtrSafe Sub WakeAllConditionVariable Lib "kernel32" (ConditionVariable As LongPtr)
Public Declare PtrSafe Function SleepConditionVariableSRW Lib "kernel32" (ConditionVariable As LongPtr, SRWLock As LongPtr, ByVal dwMilliseconds As Long) As BOOL
Public Declare PtrSafe Function InitializeSynchronizationBarrier Lib "kernel32" (lpBarrier As SYNCHRONIZATION_BARRIER, ByVal lTotalThreads As Long, ByVal lSpinCount As Long) As BOOL
Public Declare PtrSafe Function EnterSynchronizationBarrier Lib "kernel32" (lpBarrier As SYNCHRONIZATION_BARRIER, ByVal dwFlags As SyncBarrierFlags) As BOOL
Public Declare PtrSafe Function DeleteSynchronizationBarrier Lib "kernel32" (lpBarrier As SYNCHRONIZATION_BARRIER) As BOOL
Public Declare PtrSafe Function CreateMailslotA Lib "kernel32" (ByVal lpName As String, ByVal nMaxMessageSize As Long, ByVal lReadTimeout As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES) As LongPtr
Public Declare PtrSafe Function CreateMailslotW Lib "kernel32" (ByVal lpName As LongPtr, ByVal nMaxMessageSize As Long, ByVal lReadTimeout As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES) As LongPtr
Public DeclareWide PtrSafe Function CreateMailslot Lib "kernel32" Alias "CreateMailslotW" (ByVal lpName As String, ByVal nMaxMessageSize As Long, ByVal lReadTimeout As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES) As LongPtr
Public Declare PtrSafe Function GetMailslotInfo Lib "kernel32" (ByVal hMailslot As LongPtr, Optional lpMaxMessageSize As Long, Optional lpNextSize As Long, Optional lpMessageCount As Long, Optional lpReadTimeout As Long) As BOOL
Public Declare PtrSafe Function SetMailslotInfo Lib "kernel32" (ByVal hMailslot As LongPtr, ByVal lpReadTimeout As Long) As BOOL
Public DeclareWide PtrSafe Function RegisterWaitForSingleObject Lib "kernel32" (phNewWaitObject As LongPtr, ByVal hObject As LongPtr, ByVal Callback As LongPtr, Context As Any, ByVal dwMilliseconds As Long, ByVal dwFlags As ThreadPoolFlags) As BOOL
Public Declare PtrSafe Function UnregisterWait Lib "kernel32" (ByVal WaitHandle As LongPtr) As BOOL
Public Declare PtrSafe Function BindIoCompletionCallback Lib "kernel32" (ByVal FileHandle As LongPtr, ByVal pfnFunction As LongPtr, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetTimerQueueTimer Lib "kernel32" (ByVal TimerQueue As LongPtr, ByVal Callback As LongPtr, Parameter As Any, ByVal DueTime As Long, ByVal Period As Long, ByVal PreferIo As BOOL) As LongPtr
Public Declare PtrSafe Function CancelTimerQueueTimer Lib "kernel32" (ByVal TimerQueue As LongPtr, ByVal Timer As LongPtr) As BOOL
Public Declare PtrSafe Function CreateTimerQueue Lib "kernel32" () As LongPtr
Public DeclareWide PtrSafe Function CreateTimerQueueTimer Lib "kernel32" (phNewTimer As LongPtr, ByVal TimerQueue As LongPtr, ByVal Callback As LongPtr, Parameter As Any, ByVal DueTime As Long, ByVal Period As Long, ByVal Flags As ThreadPoolFlags) As BOOL
Public Declare PtrSafe Function ChangeTimerQueueTimer Lib "kernel32" (ByVal TimerQueue As LongPtr, ByVal hTimer As LongPtr, ByVal DueTime As Long, ByVal Period As Long) As BOOL
Public Declare PtrSafe Function DeleteTimerQueue Lib "kernel32" (ByVal TimerQueue As LongPtr) As BOOL
Public Declare PtrSafe Function DeleteTimerQueueEx Lib "kernel32" (ByVal TimerQueue As LongPtr, Optional ByVal CompletionEvent As LongPtr) As BOOL
Public Declare PtrSafe Function DeleteTimerQueueTimer Lib "kernel32" (ByVal TimerQueue As LongPtr, ByVal hTimer As LongPtr, Optional ByVal CompletionEvent As LongPtr) As BOOL
Public DeclareWide PtrSafe Function QueueUserWorkItem Lib "kernel32" (ByVal pfnStart As LongPtr, Context As Any, ByVal Flags As ThreadPoolFlags) As BOOL
Public Declare PtrSafe Function WaitOnAddress Lib "API-MS-Win-Core-Synch-l1-2-0.dll" (ByVal Address As LongPtr, ByVal CompareAddress As LongPtr, ByVal AddressSize As LongPtr, ByVal dwMilliseconds As Long) As BOOL
Public Declare PtrSafe Sub WakeByAddressSingle Lib "API-MS-Win-Core-Synch-l1-2-0.dll" (ByVal Address As LongPtr)
Public Declare PtrSafe Sub WakeByAddressAll Lib "API-MS-Win-Core-Synch-l1-2-0.dll" (ByVal Address As LongPtr)

Public DeclareWide PtrSafe Function CreateFiber Lib "kernel32" (ByVal dwStackSize As LongPtr, ByVal lpStartAddress As LongPtr, lpParameter As Any) As LongPtr
Public DeclareWide PtrSafe Function CreateFiberEx Lib "kernel32" (ByVal dwStackCommitSize As LongPtr, ByVal dwStackReserveSize As LongPtr, ByVal dwFlags As CREATE_FIBER_FLAGS, ByVal lpStartAddress As LongPtr, lpParameter As Any) As LongPtr
Public Declare PtrSafe Sub SwitchToFiber Lib "kernel32" (ByVal lpFiber As LongPtr)
Public Declare PtrSafe Sub DeleteFiber Lib "kernel32" (ByVal lpFiber As LongPtr)
Public Declare PtrSafe Function ConvertFiberToThread Lib "kernel32" (ByVal lpFiber As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ConvertThreadToFiber Lib "kernel32" (lpParameter As Any) As LongPtr
Public DeclareWide PtrSafe Function ConvertThreadToFiberEx Lib "kernel32" (lpParameter As Any, ByVal dwFlags As CREATE_FIBER_FLAGS) As LongPtr

Public Type TP_POOL_STACK_INFORMATION
    StackReserve As LongPtr 'SIZE_T
    StackCommit As LongPtr 'SIZE_T
End Type

Public Enum TP_CALLBACK_PRIORITY
    TP_CALLBACK_PRIORITY_HIGH = 0
    TP_CALLBACK_PRIORITY_NORMAL = 1
    TP_CALLBACK_PRIORITY_LOW = 2
    TP_CALLBACK_PRIORITY_INVALID = 3
    TP_CALLBACK_PRIORITY_COUNT = TP_CALLBACK_PRIORITY_INVALID
End Enum
[Description("For Windows 7+. For Vista, use TP_CALLBACK_ENVIRON_V1")]
Public Type TP_CALLBACK_ENVIRON
	Version As Long
    Pool As LongPtr
    CleanupGroup As LongPtr
    CleanupGroupCancelCallback As LongPtr
    RaceDll As LongPtr
    ActivationContext As LongPtr '*ACTIVATION_CONTEXT
    FinalizationCallback As LongPtr
    Flags As Long
    CallbackPriority As TP_CALLBACK_PRIORITY
    Size As Long
End Type
'Alias TP_CALLBACK_ENVIRON_V3 As TP_CALLBACK_ENVIRON
[Description("For Windows 7+. For Vista, use TP_CALLBACK_ENVIRON_V1")]
Public Type TP_CALLBACK_ENVIRON_V3
    Version As Long
    Pool As LongPtr
    CleanupGroup As LongPtr
    CleanupGroupCancelCallback As LongPtr
    RaceDll As LongPtr
    ActivationContext As LongPtr '*ACTIVATION_CONTEXT
    FinalizationCallback As LongPtr
    Flags As Long
    CallbackPriority As TP_CALLBACK_PRIORITY
    Size As Long
End Type
[Description("For Vista only. For Windows 7+, use TP_CALLBACK_ENVIRON")]
Public Type TP_CALLBACK_ENVIRON_V1
    Version As Long
    Pool As LongPtr
    CleanupGroup As LongPtr
    CleanupGroupCancelCallback As LongPtr
    RaceDll As LongPtr
    ActivationContext As LongPtr '*ACTIVATION_CONTEXT
    FinalizationCallback As LongPtr
    Flags As Long
End Type

Public Declare PtrSafe Function CreateThreadpool Lib "kernel32" (ByVal reserved As LongPtr) As LongPtr
Public Declare PtrSafe Sub SetThreadpoolThreadMaximum Lib "kernel32" (ByVal ptpp As LongPtr, ByVal cthrdMost As Long)
Public Declare PtrSafe Sub SetThreadpoolThreadMinimum Lib "kernel32" (ByVal ptpp As LongPtr, ByVal cthrdMic As Long)
Public Declare PtrSafe Function SetThreadpoolStackInformation Lib "kernel32" (ByVal ptpp As LongPtr, ptpsi As TP_POOL_STACK_INFORMATION) As BOOL
Public Declare PtrSafe Function QueryThreadpoolStackInformation Lib "kernel32" (ByVal ptpp As LongPtr, ptpsi As TP_POOL_STACK_INFORMATION) As BOOL
Public Declare PtrSafe Sub CloseThreadpool Lib "kernel32" (ByVal ptpp As LongPtr)
Public Declare PtrSafe Function CreateThreadpoolCleanupGroup Lib "kernel32" () As LongPtr
Public Declare PtrSafe Sub CloseThreadpoolCleanupGroupMembers Lib "kernel32" (ByVal ptpcg As LongPtr, ByVal fCancelPendingCallbacks As BOOL, ByVal pvCleanupContext As LongPtr)
Public Declare PtrSafe Sub CloseThreadpoolCleanupGroup Lib "kernel32" (ByVal ptpcg As LongPtr)
Public Declare PtrSafe Sub SetEventWhenCallbackReturns Lib "kernel32" (ByVal pci As LongPtr, ByVal evt As LongPtr)
Public Declare PtrSafe Sub ReleaseSemaphoreWhenCallbackReturns Lib "kernel32" (ByVal pci As LongPtr, ByVal sem As LongPtr, ByVal crel As Long)
Public Declare PtrSafe Sub ReleaseMutexWhenCallbackReturns Lib "kernel32" (ByVal pci As LongPtr, ByVal mut As LongPtr)
Public Declare PtrSafe Sub LeaveCriticalSectionWhenCallbackReturns Lib "kernel32" (ByVal pci As LongPtr, pcs As CRITICAL_SECTION)
Public Declare PtrSafe Sub FreeLibraryWhenCallbackReturns Lib "kernel32" (ByVal pci As LongPtr, ByVal Mod As LongPtr)
Public Declare PtrSafe Function CallbackMayRunLong Lib "kernel32" (ByVal pci As LongPtr) As BOOL
Public Declare PtrSafe Sub DisassociateCurrentThreadFromCallback Lib "kernel32" (ByVal pci As LongPtr)
Public DeclareWide PtrSafe Function TrySubmitThreadpoolCallback Lib "kernel32" (ByVal pfns As LongPtr, pv As Any, pcbe As TP_CALLBACK_ENVIRON) As BOOL
Public DeclareWide PtrSafe Function CreateThreadpoolWork Lib "kernel32" (ByVal pfnwk As LongPtr, pv As Any, pcbe As TP_CALLBACK_ENVIRON) As LongPtr
Public Declare PtrSafe Sub SubmitThreadpoolWork Lib "kernel32" (ByVal pwk As LongPtr)
Public Declare PtrSafe Sub WaitForThreadpoolWorkCallbacks Lib "kernel32" (ByVal pwk As LongPtr, ByVal fCancelPendingCallbacks As BOOL)
Public Declare PtrSafe Sub CloseThreadpoolWork Lib "kernel32" (ByVal pwk As LongPtr)
Public DeclareWide PtrSafe Function CreateThreadpoolTimer Lib "kernel32" (ByVal pfnti As LongPtr, pv As Any, pcbe As TP_CALLBACK_ENVIRON) As LongPtr
Public Declare PtrSafe Sub SetThreadpoolTimer Lib "kernel32" (ByVal pti As LongPtr, pftDueTime As FILETIME, ByVal msPeriod As Long, ByVal msWindowLength As Long)
Public Declare PtrSafe Function IsThreadpoolTimerSet Lib "kernel32" (ByVal pti As LongPtr) As BOOL
Public Declare PtrSafe Sub WaitForThreadpoolTimerCallbacks Lib "kernel32" (ByVal pti As LongPtr, ByVal fCancelPendingCallbacks As BOOL)
Public Declare PtrSafe Sub CloseThreadpoolTimer Lib "kernel32" (ByVal pti As LongPtr)
Public DeclareWide PtrSafe Function CreateThreadpoolWait Lib "kernel32" (ByVal pfnwa As LongPtr, pv As Any, pcbe As TP_CALLBACK_ENVIRON) As LongPtr
Public Declare PtrSafe Sub SetThreadpoolWait Lib "kernel32" (ByVal pwa As LongPtr, ByVal h As LongPtr, pftTimeout As FILETIME)
Public Declare PtrSafe Sub WaitForThreadpoolWaitCallbacks Lib "kernel32" (ByVal pwa As LongPtr, ByVal fCancelPendingCallbacks As BOOL)
Public Declare PtrSafe Sub CloseThreadpoolWait Lib "kernel32" (ByVal pwa As LongPtr)
Public DeclareWide PtrSafe Function CreateThreadpoolIo Lib "kernel32" (ByVal fl As LongPtr, ByVal pfnio As LongPtr, pv As Any, pcbe As TP_CALLBACK_ENVIRON) As LongPtr
Public Declare PtrSafe Sub StartThreadpoolIo Lib "kernel32" (ByVal pio As LongPtr)
Public Declare PtrSafe Sub CancelThreadpoolIo Lib "kernel32" (ByVal pio As LongPtr)
Public Declare PtrSafe Sub WaitForThreadpoolIoCallbacks Lib "kernel32" (ByVal pio As LongPtr, ByVal fCancelPendingCallbacks As BOOL)
Public Declare PtrSafe Sub CloseThreadpoolIo Lib "kernel32" (ByVal pio As LongPtr)
Public Declare PtrSafe Function SetThreadpoolTimerEx Lib "kernel32" (ByVal pti As LongPtr, pftDueTime As FILETIME, ByVal msPeriod As Long, ByVal msWindowLength As Long) As BOOL
Public Declare PtrSafe Function SetThreadpoolWaitEx Lib "kernel32" (ByVal pwa As LongPtr, ByVal h As LongPtr, pftTimeout As FILETIME, ByVal Reserved As LongPtr) As BOOL

Public Sub TpInitializeCallbackEnviron(CallbackEnviron As TP_CALLBACK_ENVIRON)
    CallbackEnviron.Version = 3
    CallbackEnviron.CallbackPriority = TP_CALLBACK_PRIORITY_NORMAL
    CallbackEnviron.Size = LenB(Of TP_CALLBACK_ENVIRON)
End Sub
Public Sub InitializeThreadpoolEnvironment(pcbe As TP_CALLBACK_ENVIRON)
    TpInitializeCallbackEnviron pcbe
End Sub

Public Sub TpSetCallbackThreadpool(CallbackEnviron As TP_CALLBACK_ENVIRON, ByVal Pool As LongPtr)
CallbackEnviron.Pool = Pool
End Sub
Public Sub SetThreadpoolCallbackPool(pcbe As TP_CALLBACK_ENVIRON, ByVal ptpp As LongPtr)
    TpSetCallbackThreadpool pcbe, ptpp
End Sub
Public Sub TpSetCallbackCleanupGroup(CallbackEnviron As TP_CALLBACK_ENVIRON, ByVal CleanupGroup As LongPtr, Optional ByVal CleanupGroupCancelCallback As LongPtr = 0)
    CallbackEnviron.CleanupGroup = CleanupGroup
    CallbackEnviron.CleanupGroupCancelCallback = CleanupGroupCancelCallback
End Sub
Public Sub SetThreadpoolCallbackCleanupGroup(pcbe As TP_CALLBACK_ENVIRON, ByVal ptpcg As LongPtr, Optional ByVal pfng As LongPtr = 0)
    TpSetCallbackCleanupGroup pcbe, ptpcg, pfng
End Sub
Public Sub TpSetCallbackLongFunction(CallbackEnviron As TP_CALLBACK_ENVIRON)
    CallbackEnviron.Flags = CallbackEnviron.Flags Or &H1
End Sub
Public Sub SetThreadpoolCallbackRunsLong(pcbe As TP_CALLBACK_ENVIRON)
    TpSetCallbackLongFunction pcbe
End Sub
Public Sub TpSetCallbackRaceWithDll(CallbackEnviron As TP_CALLBACK_ENVIRON, ByVal DllHandle As LongPtr)
    CallbackEnviron.RaceDll = DllHandle
End Sub
Public Sub SetThreadpoolCallbackLibrary(pcbe As TP_CALLBACK_ENVIRON, ByVal hmod As LongPtr)
    TpSetCallbackRaceWithDll pcbe, hmod
End Sub
Public Sub TpSetCallbackPriority(CallbackEnviron As TP_CALLBACK_ENVIRON, ByVal Priority As TP_CALLBACK_PRIORITY)
    CallbackEnviron.CallbackPriority = Priority
End Sub
Public Sub SetThreadpoolCallbackPriority(pcbe As TP_CALLBACK_ENVIRON, ByVal Priority As TP_CALLBACK_PRIORITY)
    TpSetCallbackPriority pcbe, Priority
End Sub
[Description("No action required; deliberately blank.")]
[IgnoreWarnings(TB0025)]
Public Sub DestroyThreadpoolEnvironment(pcbe As TP_CALLBACK_ENVIRON)
End Sub
[Description("No action required; deliberately blank.")]
[IgnoreWarnings(TB0025)]
Public Sub TpDestroyCallbackEnviron(CallbackEnviron As TP_CALLBACK_ENVIRON)
End Sub
Public Sub TpSetCallbackPersistent(CallbackEnviron As TP_CALLBACK_ENVIRON)
    CallbackEnviron.Flags = CallbackEnviron.Flags Or &H2
End Sub
Public Sub SetThreadpoolCallbackPersistent(pcbe As TP_CALLBACK_ENVIRON)
    TpSetCallbackPersistent pcbe
End Sub
Public Sub TpSetCallbackFinalizationCallback(CallbackEnviron As TP_CALLBACK_ENVIRON, ByVal FinalizationCallback As LongPtr)
    CallbackEnviron.FinalizationCallback = FinalizationCallback
End Sub
Public Sub TpSetCallbackNoActivationContext(CallbackEnviron As TP_CALLBACK_ENVIRON)
    CallbackEnviron.ActivationContext = -1
End Sub
Public Sub TpSetCallbackActivationContext(CallbackEnviron As TP_CALLBACK_ENVIRON, ByVal ActivationContext As LongPtr)
    CallbackEnviron.ActivationContext = ActivationContext
End Sub

Public Enum MEM_SECTION_EXTENDED_PARAMETER_TYPE
    MemSectionExtendedParameterInvalidType = 0
    MemSectionExtendedParameterUserPhysicalFlags = 1
    MemSectionExtendedParameterNumaNode = 2
    MemSectionExtendedParameterSigningLevel = 3
    MemSectionExtendedParameterMax = 4
End Enum

Public Enum ENCLAVE_TYPE
    ENCLAVE_TYPE_SGX = &H00000001
    ENCLAVE_TYPE_SGX2 = &H00000002
    ENCLAVE_TYPE_VBS = &H00000010
    ENCLAVE_TYPE_VBS_BASIC = &H00000011
End Enum
Public Type ENCLAVE_CREATE_INFO_SGX
    Secs(0 To 4095) As Byte
End Type
Public Type ENCLAVE_INIT_INFO_SGX
    SigStruct(0 To 1807) As Byte
    Reserved1(0 To 239) As Byte
    EInitToken(0 To 303) As Byte
    Reserved2(0 To 1743) As Byte
End Type
Public Enum ENCLAVE_VBS_FLAGS
    ENCLAVE_VBS_FLAG_DEBUG = &H00000001
End Enum
Public Type ENCLAVE_CREATE_INFO_VBS_BASIC
    Flags As ENCLAVE_VBS_FLAGS
    OwnerID(0 To 31) As Byte
End Type
Public Enum ENCLAVE_VBS_PAGE_TYPES
    VBS_BASIC_PAGE_MEASURED_DATA = &H00000001
    VBS_BASIC_PAGE_UNMEASURED_DATA = &H00000002
    VBS_BASIC_PAGE_ZERO_FILL = &H00000003
    VBS_BASIC_PAGE_THREAD_DESCRIPTOR = &H00000004
    VBS_BASIC_PAGE_SYSTEM_CALL = &H00000005
End Enum
Public Type ENCLAVE_LOAD_DATA_VBS_BASIC
    PageType As ENCLAVE_VBS_PAGE_TYPES
End Type
Public Const ENCLAVE_SHORT_ID_LENGTH  = 16
Public Const ENCLAVE_LONG_ID_LENGTH  = 32
Public Type ENCLAVE_INIT_INFO_VBS_BASIC
    FamilyId(0 To (ENCLAVE_SHORT_ID_LENGTH - 1)) As Byte
    ImageId(0 To (ENCLAVE_SHORT_ID_LENGTH - 1)) As Byte
    EnclaveSize As LongLong
    EnclaveSvn As Long
    Reserved As Long
    'union {
    SignatureInfoHandle As LongPtr
    'Unused As LongLong
    #If Win64 = 0 Then
    	Unused As Long
    #End If
    '} DUMMYUNIONNAME;
End Type
Public Type ENCLAVE_INIT_INFO_VBS
    Length As Long
    ThreadCount As Long
End Type

Public Enum WriteWatchFlags
    WRITE_WATCH_FLAG_RESET = &H1
End Enum

Public Enum MEMORY_RESOURCE_NOTIFICATION_TYPE
    LowMemoryResourceNotification
    HighMemoryResourceNotification
End Enum

Public Enum FILE_CACHE_FLAGS
    FILE_CACHE_MAX_HARD_ENABLE = &H00000001
    FILE_CACHE_MAX_HARD_DISABLE = &H00000002
    FILE_CACHE_MIN_HARD_ENABLE = &H00000004
    FILE_CACHE_MIN_HARD_DISABLE = &H00000008
End Enum

Public Type WIN32_MEMORY_RANGE_ENTRY
    VirtualAddress As LongPtr
    NumberOfBytes As LongPtr
End Type

Public Enum MemoryErrorHandlingCapabilityFlags
    MEHC_PATROL_SCRUBBER_PRESENT = &H1
End Enum

Public Enum OFFER_PRIORITY
    VmOfferPriorityVeryLow = 1
    VmOfferPriorityLow
    VmOfferPriorityBelowNormal
    VmOfferPriorityNormal
End Enum

Public Enum CfgCallTargetFlags
    CFG_CALL_TARGET_VALID = (&H00000001)
'  Call target has been successfully processed.  Used to report to the caller
'  how much progress has been made.  Output flag.
    CFG_CALL_TARGET_PROCESSED = (&H00000002)
'  Call target should be made valid only if it is suppressed export.
'  What this flag means is that it can *only* be used on a cell which is
'  currently in the CFG export suppressed state (only considered for export
'  suppressed processes and not legacy CFG processes!), and it is also
'  allowed to be used even if the process is a restricted (i.e. no ACG) process.
    CFG_CALL_TARGET_CONVERT_EXPORT_SUPPRESSED_TO_VALID = (&H00000004)
'  Call target should be made into an XFG call target.
    CFG_CALL_TARGET_VALID_XFG = (&H00000008)
'  Call target should be made valid only if it is already an XFG target
'  in a process which has XFG audit mode enabled.
    CFG_CALL_TARGET_CONVERT_XFG_TO_CFG = (&H00000010)
End Enum
Public Type CFG_CALL_TARGET_INFO
    Offset As LongPtr
    /* [ TypeHint(CfgCallTargetFlags) ] */ Flags As LongPtr
End Type

Public Enum WIN32_MEMORY_INFORMATION_CLASS
    MemoryRegionInfo
End Enum

Public Enum Win32MemoryRegionInfoFlags
    MRIF_Private = &B00000000_00000000_00000000_00000001
    MRIF_MappedDataFile = &B00000000_00000000_00000000_00000010
    MRIF_MappedImage = &B00000000_00000000_00000000_00000100
    MRIF_MappedPageFile = &B00000000_00000000_00000000_00001000
    MRIF_MappedPhysical = &B00000000_00000000_00000000_00010000
    MRIF_DirectMapped = &B00000000_00000000_00000000_00100000
End Enum
Public Type WIN32_MEMORY_REGION_INFORMATION
    AllocationBase As LongPtr
    AllocationProtect As Long
    '    union {
    Flags As Win32MemoryRegionInfoFlags
    '        struct {
    '            ULONG Private : 1;
    '            ULONG MappedDataFile : 1;
    '            ULONG MappedImage : 1;
    '            ULONG MappedPageFile : 1;
    '            ULONG MappedPhysical : 1;
    '            ULONG DirectMapped : 1;
    '            ULONG Reserved : 26;
    '        } DUMMYSTRUCTNAME;
    '    } DUMMYUNIONNAME;
    RegionSize As LongPtr
    CommitSize As LongPtr
End Type

Public Enum WIN32_MEMORY_PARTITION_INFORMATION_CLASS
    MemoryPartitionInfo
    MemoryPartitionDedicatedMemoryInfo
End Enum
Public Type WIN32_MEMORY_PARTITION_INFORMATION
    Flags As Long
    NumaNode As Long ' -1 indicates sum all nodes in the partition
    Channel As Long ' -1 indicates sum all channels in node
    NumberOfNumaNodes As Long ' 0 unless all nodes specified above
    ResidentAvailablePages As LongLong ' 0 unless all nodes specified above
    CommittedPages As LongLong ' 0 unless all nodes specified above
    CommitLimit As LongLong ' 0 unless all nodes specified above
    PeakCommitment As LongLong ' 0 unless all nodes specified above
    TotalNumberOfPages As LongLong
    AvailablePages As LongLong
    ZeroPages As LongLong
    FreePages As LongLong
    StandbyPages As LongLong
    Reserved(0 To 15) As LongLong
    MaximumCommitLimit As LongLong ' 0 unless all nodes specified above
    Reserved2 As LongLong
    PartitionId As Long
End Type




[Description("Change the protection flags of a memory address")] Public Declare PtrSafe Function VirtualProtect Lib "kernel32" (ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal flNewProtect As MemProtectFlags, ByRef lpflOldProtect As MemProtectFlags) As Long
Public Declare PtrSafe Function VirtualProtectEx Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal flNewProtect As MemProtectFlags, ByRef lpflOldProtect As MemProtectFlags) As Long
Public Declare PtrSafe Function VirtualAlloc Lib "kernel32" (ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal flAllocationType As MemAllocType, ByVal flProtect As MemProtectFlags) As LongPtr
Public Declare PtrSafe Function VirtualAlloc2 Lib "kernelbase" (ByVal Process As LongPtr, ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal AllocationType As MemAllocType, ByVal PageProtection As MemProtectFlags, ExtendedParameters As MEM_EXTENDED_PARAMETER, ByVal ParameterCount As Long) As LongPtr
Public Declare PtrSafe Function VirtualAllocEx Lib "kernel32" (ByVal Process As LongPtr, ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal flAllocationType As MemAllocType, ByVal flProtect As MemProtectFlags) As LongPtr
Public Declare PtrSafe Function VirtualAllocExNuma Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal flAllocationType As MemAllocType, ByVal flProtect As MemProtectFlags, ByVal nndPreferred As Long) As LongPtr
Public Declare PtrSafe Function VirtualFree Lib "kernel32" (ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal dwFreeType As MemAllocType) As BOOL
Public Declare PtrSafe Function VirtualFreeEx Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal dwFreeType As MemAllocType) As BOOL
Public Declare PtrSafe Function VirtualLock Lib "kernel32" (ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr) As BOOL
Public Declare PtrSafe Function VirtualUnlock Lib "kernel32" (ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr) As BOOL
Public Declare PtrSafe Function VirtualQuery Lib "kernel32" (ByVal lpAddress As LongPtr, lpBuffer As MEMORY_BASIC_INFORMATION, ByVal dwLength As LongPtr) As LongPtr
Public Declare PtrSafe Function VirtualQueryEx Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpAddress As LongPtr, lpBuffer As MEMORY_BASIC_INFORMATION, ByVal dwLength As LongPtr) As LongPtr
Public Declare PtrSafe Function AllocateUserPhysicalPages Lib "kernel32" (ByVal hProcess As LongPtr, ByRef NumberOfPages As LongPtr, PageArray As LongPtr) As BOOL
Public Declare PtrSafe Function AllocateUserPhysicalPages2 Lib "kernelbase" (ByVal hProcess As LongPtr, ByRef NumberOfPages As LongPtr, PageArray As LongPtr, ExtendedParameters As MEM_EXTENDED_PARAMETER, ByVal ExtendedParameterCount As Long) As BOOL
Public Declare PtrSafe Function AllocateUserPhysicalPagesNuma Lib "kernel32" (ByVal hProcess As LongPtr, ByRef NumberOfPages As LongPtr, PageArray As LongPtr, ByVal nndPreferred As Long) As BOOL
Public Declare PtrSafe Function MapUserPhysicalPages Lib "kernel32" (ByVal VirtualAddress As LongPtr, ByVal NumberOfPages As LongPtr, PageArray As LongPtr) As BOOL
Public Declare PtrSafe Function MapUserPhysicalPagesScatter Lib "kernel32" (VirtualAddress As LongPtr, ByVal NumberOfPages As LongPtr, PageArray As LongPtr) As BOOL
Public Declare PtrSafe Function FreeUserPhysicalPages Lib "kernel32" (ByVal hProcess As LongPtr, ByRef NumberOfPages As LongPtr, PageArray As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetProcessMemoryInfo Lib "psapi" (ByVal hProcess As LongPtr, ppsmemCounters As Any, ByVal cb As Long) As BOOL
Public Declare PtrSafe Function InitializeProcessForWsWatch Lib "psapi" (ByVal hProcess As LongPtr) As BOOL
Public Declare PtrSafe Function GetWsChanges Lib "psapi" (ByVal hProcess As LongPtr, lpWatchInfo As PSAPI_WS_WATCH_INFORMATION, ByVal cb As Long) As BOOL
Public Declare PtrSafe Function GetWsChangesEx Lib "psapi" (ByVal hProcess As LongPtr, lpWatchInfo As PSAPI_WS_WATCH_INFORMATION_EX, cb As Long) As BOOL
Public Declare PtrSafe Function QueryWorkingSet Lib "psapi" (ByVal hProcess As LongPtr, pv As Any, ByVal cb As Long) As BOOL
Public Declare PtrSafe Function QueryWorkingSetEx Lib "psapi" (ByVal hProcess As LongPtr, pv As Any, ByVal cb As Long) As BOOL
Public Declare PtrSafe Function GetLargePageMinimum Lib "kernel32" () As LongPtr
Public Declare PtrSafe Function GetProcessWorkingSetSize Lib "kernel32" (ByVal hProcess As LongPtr, lpMinimumWorkingSetSize As LongPtr, lpMaximumWorkingSetSize As LongPtr) As BOOL
Public Declare PtrSafe Function GetProcessWorkingSetSizeEx Lib "kernel32" (ByVal hProcess As LongPtr, lpMinimumWorkingSetSize As LongPtr, lpMaximumWorkingSetSize As LongPtr, Flags As QUOTA_LIMITS_FLAGS) As BOOL
Public Declare PtrSafe Function SetProcessWorkingSetSize Lib "kernel32" (ByVal hProcess As LongPtr, ByVal dwMinimumWorkingSetSize As LongPtr, ByVal dwMaximumWorkingSetSize As LongPtr) As BOOL
Public Declare PtrSafe Function SetProcessWorkingSetSizeEx Lib "kernel32" (ByVal hProcess As LongPtr, ByVal dwMinimumWorkingSetSize As LongPtr, ByVal dwMaximumWorkingSetSize As LongPtr, ByVal Flags As QUOTA_LIMITS_FLAGS) As BOOL
Public Declare PtrSafe Function GetWriteWatch Lib "kernel32" (ByVal dwFlags As WriteWatchFlags, ByVal lpBaseAddress As LongPtr, ByVal dwRegionSize As LongPtr, lpAddresses As LongPtr, lpdwCount As LongPtr, lpdwGranularity As Long) As Long
Public Declare PtrSafe Function ResetWriteWatch Lib "kernel32" (ByVal lpBaseAddress As LongPtr, ByVal dwRegionSize As LongPtr) As Long
Public Declare PtrSafe Function CreateMemoryResourceNotification Lib "kernel32" (ByVal NotificationType As MEMORY_RESOURCE_NOTIFICATION_TYPE) As LongPtr
Public Declare PtrSafe Function QueryMemoryResourceNotification Lib "kernel32" (ByVal ResourceNotificationHandle As LongPtr, ResourceState As BOOL) As BOOL
Public Declare PtrSafe Function GetSystemFileCacheSize Lib "kernel32" (lpMinimumFileCacheSize As LongPtr, lpMaximumFileCacheSize As LongPtr, lpFlags As FILE_CACHE_FLAGS) As BOOL
Public Declare PtrSafe Function SetSystemFileCacheSize Lib "kernel32" (ByVal MinimumFileCacheSize As LongPtr, ByVal MaximumFileCacheSize As LongPtr, ByVal Flags As FILE_CACHE_FLAGS) As BOOL
Public Declare PtrSafe Function PrefetchVirtualMemory Lib "kernel32" (ByVal hProcess As LongPtr, ByVal NumberOfEntries As LongPtr, VirtualAddresses As WIN32_MEMORY_RANGE_ENTRY, ByVal Flags As Long) As BOOL
Public Declare PtrSafe Function GetMemoryErrorHandlingCapabilities Lib "kernel32" (Capabilities As MemoryErrorHandlingCapabilityFlags) As BOOL
Public Declare PtrSafe Function RegisterBadMemoryNotification Lib "kernel32" (ByVal Callback As LongPtr) As LongPtr
Public Declare PtrSafe Function UnregisterBadMemoryNotification Lib "kernel32" (ByVal RegistrationHandle As LongPtr) As BOOL
Public Declare PtrSafe Function OfferVirtualMemory Lib "kernel32" (ByVal VirtualAddress As LongPtr, ByVal Size As LongPtr, ByVal Priority As OFFER_PRIORITY) As Long
Public Declare PtrSafe Function ReclaimVirtualMemory Lib "kernel32" (ByVal VirtualAddress As LongPtr, ByVal Size As LongPtr) As Long
Public Declare PtrSafe Function DiscardVirtualMemory Lib "kernel32" (ByVal VirtualAddress As LongPtr, ByVal Size As LongPtr) As Long
Public Declare PtrSafe Function SetProcessValidCallTargets Lib "kernelbase" (ByVal Process As LongPtr, ByVal VirtualAddress As LongPtr, ByVal RegionSize As LongPtr, ByVal NumberOfOffsets As Long, OffsetInformation As CFG_CALL_TARGET_INFO) As BOOL
Public Declare PtrSafe Function SetProcessValidCallTargetsForMappedView Lib "kernelbase" (ByVal Process As LongPtr, ByVal VirtualAddress As LongPtr, ByVal RegionSize As LongPtr, ByVal NumberOfOffsets As Long, OffsetInformation As CFG_CALL_TARGET_INFO, ByVal Section As LongPtr, ByVal ExpectedFileOffset As LongLong) As BOOL
Public Declare PtrSafe Function QueryVirtualMemoryInformation Lib "kernelbase" (ByVal Process As LongPtr, ByVal VirtualAddress As LongPtr, ByVal MemoryInformationClass As WIN32_MEMORY_INFORMATION_CLASS, MemoryInformation As Any, ByVal MemoryInformationSize As LongPtr, Optional ReturnSize As LongPtr) As BOOL
Public Declare PtrSafe Function OpenDedicatedMemoryPartition Lib "kernel32" (ByVal Partition As LongPtr, ByVal DedicatedMemoryTypeId As LongLong, ByVal DesiredAccess As Long, ByVal InheritHandle As BOOL) As LongPtr
Public Declare PtrSafe Function QueryPartitionInformation Lib "kernel32" (ByVal Partition As LongPtr, ByVal PartitionInformationClass As WIN32_MEMORY_PARTITION_INFORMATION_CLASS, PartitionInformation As Any, ByVal PartitionInformationLength As Long) As BOOL


Public Declare PtrSafe Function TlsAlloc Lib "kernel32" () As Long
Public Declare PtrSafe Function TlsSetValue Lib "kernel32" (ByVal dwTlsIndex As Long, ByRef lpTlsValue As Any) As Long
Public Declare PtrSafe Function TlsGetValue Lib "kernel32" (ByVal dwTlsIndex As Long) As LongPtr
Public Declare PtrSafe Function TlsFree Lib "kernel32" (ByVal dwTlsIndex As Long) As Long


Public Declare PtrSafe Function IsEnclaveTypeSupported Lib "kernel32" (ByVal flEnclaveType As ENCLAVE_TYPE) As BOOL
Public DeclareWide PtrSafe Function CreateEnclave Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpAddress As LongPtr, ByVal dwSize As LongPtr, ByVal dwInitialCommitment As LongPtr, ByVal flEnclaveType As ENCLAVE_TYPE, lpEnclaveInformation As Any, ByVal dwInfoLength As Long, lpEnclaveError As Long) As LongPtr
Public DeclareWide PtrSafe Function LoadEnclaveData Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpAddress As LongPtr, lpBuffer As Any, ByVal nSize As LongPtr, [TypeHint(MemProtectFlags, MemProtectEnclave)] ByVal flProtect As Long, lpPageInformation As Any, ByVal dwInfoLength As Long, lpNumberOfBytesWritten As LongPtr, lpEnclaveError As Long) As BOOL
Public DeclareWide PtrSafe Function InitializeEnclave Lib "kernel32" (ByVal hProcess As LongPtr, ByVal lpAddress As LongPtr, lpEnclaveInformation As Any, ByVal dwInfoLength As Long, lpEnclaveError As Long) As BOOL
Public Declare PtrSafe Function LoadEnclaveImageA Lib "kernelbase" (ByVal lpEnclaveAddress As LongPtr, ByVal lpImageName As String) As BOOL
Public Declare PtrSafe Function LoadEnclaveImageW Lib "kernelbase" (ByVal lpEnclaveAddress As LongPtr, ByVal lpImageName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function LoadEnclaveImage Lib "kernelbase" Alias "LoadEnclaveImageW" (ByVal lpEnclaveAddress As LongPtr, ByVal lpImageName As String) As BOOL
Public DeclareWide PtrSafe Function CallEnclave Lib "kernelbase" (ByVal lpRoutine As LongPtr, lpParameter As Any, ByVal fWaitForThread As BOOL, lpReturnValue As LongPtr) As BOOL
Public Declare PtrSafe Function TerminateEnclave Lib "kernelbase" (ByVal lpAddress As LongPtr, ByVal fWait As BOOL) As BOOL
Public Declare PtrSafe Function DeleteEnclave Lib "kernelbase" (ByVal lpAddress As LongPtr) As BOOL

Public Declare PtrSafe Function EncodePointer Lib "kernel32" (ByVal Ptr As LongPtr) As LongPtr
Public Declare PtrSafe Function DecodePointer Lib "kernel32" (ByVal Ptr As LongPtr) As LongPtr
Public Declare PtrSafe Function EncodeSystemPointer Lib "kernel32" (ByVal Ptr As LongPtr) As LongPtr
Public Declare PtrSafe Function DecodeSystemPointer Lib "kernel32" (ByVal Ptr As LongPtr) As LongPtr
Public Declare PtrSafe Function EncodeRemotePointer Lib "kernelbase" (ByVal ProcessHandle As LongPtr, ByVal Ptr As LongPtr, EncodedPtr As LongPtr) As Long
Public Declare PtrSafe Function DecodeRemotePointer Lib "kernelbase" (ByVal ProcessHandle As LongPtr, ByVal Ptr As LongPtr, DecodedPtr As LongPtr) As Long

Public Declare PtrSafe Sub InitializeSListHead Lib "kernel32" (ListHead As SLIST_HEADER)
Public Declare PtrSafe Function InterlockedPopEntrySList Lib "kernel32" (ListHead As SLIST_HEADER) As LongPtr
Public Declare PtrSafe Function InterlockedPushEntrySList Lib "kernel32" (ListHead As SLIST_HEADER, ListEntry As SLIST_ENTRY) As LongPtr
Public Declare PtrSafe Function InterlockedPushListSList Lib "kernel32" Alias "InterlockedPushListSListEx" (ListHead As SLIST_HEADER, List As SLIST_ENTRY, ListEnd As SLIST_ENTRY, ByVal Count As Long) As LongPtr
Public Declare PtrSafe Function InterlockedPushListSListEx Lib "kernel32" (ListHead As SLIST_HEADER, List As SLIST_ENTRY, ListEnd As SLIST_ENTRY, ByVal Count As Long) As LongPtr
Public Declare PtrSafe Function InterlockedFlushSList Lib "kernel32" (ListHead As SLIST_HEADER) As LongPtr
Public Declare PtrSafe Function QueryDepthSList Lib "kernel32" (ListHead As SLIST_HEADER) As Integer

Public Declare PtrSafe Function FindFirstFileExA Lib "kernel32" (ByVal lpFileName As String, ByVal fInfoLevelId As FINDEX_INFO_LEVELS, ByRef lpFindFileData As WIN32_FIND_DATAA, ByVal fSearchOp As FINDEX_SEARCH_OPS, ByVal lpSearchFilter As LongPtr, ByVal dwAdditionalFlags As FINDEX_EXTRA_FLAGS) As LongPtr
Public Declare PtrSafe Function FindFirstFileExW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal fInfoLevelId As FINDEX_INFO_LEVELS, ByRef lpFindFileData As WIN32_FIND_DATAW, ByVal fSearchOp As FINDEX_SEARCH_OPS, ByVal lpSearchFilter As LongPtr, ByVal dwAdditionalFlags As FINDEX_EXTRA_FLAGS) As LongPtr
Public DeclareWide PtrSafe Function FindFirstFileEx Lib "kernel32" Alias "FindFirstFileExW" (ByVal lpFileName As String, ByVal fInfoLevelId As FINDEX_INFO_LEVELS, ByRef lpFindFileData As WIN32_FIND_DATA, ByVal fSearchOp As FINDEX_SEARCH_OPS, ByVal lpSearchFilter As LongPtr, ByVal dwAdditionalFlags As FINDEX_EXTRA_FLAGS) As LongPtr
Public Declare PtrSafe Function FindFirstFileTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal fInfoLevelId As FINDEX_INFO_LEVELS, ByRef lpFindFileData As WIN32_FIND_DATAA, ByVal fSearchOp As FINDEX_SEARCH_OPS, ByVal lpSearchFilter As LongPtr, ByVal dwAdditionalFlags As FINDEX_EXTRA_FLAGS, ByVal hTransaction As LongPtr) As LongPtr
Public Declare PtrSafe Function FindFirstFileTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal fInfoLevelId As FINDEX_INFO_LEVELS, ByRef lpFindFileData As WIN32_FIND_DATAW, ByVal fSearchOp As FINDEX_SEARCH_OPS, ByVal lpSearchFilter As LongPtr, ByVal dwAdditionalFlags As FINDEX_EXTRA_FLAGS, ByVal hTransaction As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function FindFirstFileTransacted Lib "kernel32" Alias "FindFirstFileTransactedW" (ByVal lpFileName As String, ByVal fInfoLevelId As FINDEX_INFO_LEVELS, ByRef lpFindFileData As WIN32_FIND_DATA, ByVal fSearchOp As FINDEX_SEARCH_OPS, ByVal lpSearchFilter As LongPtr, ByVal dwAdditionalFlags As FINDEX_EXTRA_FLAGS, ByVal hTransaction As LongPtr) As LongPtr
Public Declare PtrSafe Function FindFirstFileA Lib "kernel32" (ByVal lpFileName As String, ByRef lpFindFileData As WIN32_FIND_DATAA) As LongPtr
Public Declare PtrSafe Function FindFirstFileW Lib "kernel32" (ByVal lpFileName As LongPtr, ByRef lpFindFileData As WIN32_FIND_DATAW) As LongPtr
Public DeclareWide PtrSafe Function FindFirstFile Lib "kernel32" Alias "FindFirstFileW" (ByVal lpFileName As String, ByRef lpFindFileData As WIN32_FIND_DATA) As LongPtr
'does not exist Public Declare PtrSafe Function FindFirstStreamA Lib "kernel32" (ByVal lpFileName As String, ByVal InfoLevel As STREAM_INFO_LEVELS, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATA, ByVal dwFlags As Long) As LongPtr
Public Declare PtrSafe Function FindFirstStreamW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal InfoLevel As STREAM_INFO_LEVELS, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATAW, ByVal dwFlags As Long) As LongPtr
Public DeclareWide PtrSafe Function FindFirstStream Lib "kernel32" Alias "FindFirstStreamW" (ByVal lpFileName As String, ByVal InfoLevel As STREAM_INFO_LEVELS, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATA, ByVal dwFlags As Long) As LongPtr
'does not exist Public Declare PtrSafe Function FindFirstStreamTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal InfoLevel As STREAM_INFO_LEVELS, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATA, ByVal dwFlags As Long, ByVal hTransaction As LongPtr) As LongPtr
Public Declare PtrSafe Function FindFirstStreamTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal InfoLevel As STREAM_INFO_LEVELS, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATAW, ByVal dwFlags As Long, ByVal hTransaction As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function FindFirstStreamTransacted Lib "kernel32" Alias "FindFirstStreamTransactedW" (ByVal lpFileName As String, ByVal InfoLevel As STREAM_INFO_LEVELS, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATA, ByVal dwFlags As Long, ByVal hTransaction As LongPtr) As LongPtr
Public Declare PtrSafe Function FindNextFileA Lib "kernel32" (ByVal hFindFile As LongPtr, ByRef lpFindFileData As WIN32_FIND_DATAA) As Long
Public Declare PtrSafe Function FindNextFileW Lib "kernel32" (ByVal hFindFile As LongPtr, ByRef lpFindFileData As WIN32_FIND_DATAW) As Long
Public DeclareWide PtrSafe Function FindNextFile Lib "kernel32" Alias "FindNextFileW" (ByVal hFindFile As LongPtr, ByRef lpFindFileData As WIN32_FIND_DATA) As Long
'does not exist Public Declare PtrSafe Function FindNextStreamA Lib "kernel32" (ByVal hFindStream As LongPtr, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATAA) As Long
Public Declare PtrSafe Function FindNextStreamW Lib "kernel32" (ByVal hFindStream As LongPtr, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATAW) As Long
Public DeclareWide PtrSafe Function FindNextStream Lib "kernel32" Alias "FindNextStreamW" (ByVal hFindStream As LongPtr, ByRef lpFindStreamData As WIN32_FIND_STREAM_DATA) As Long
Public Declare PtrSafe Function FindClose Lib "kernel32" (ByVal hFindFile As LongPtr) As Long
'does not exist Public Declare PtrSafe Function FindFirstFileNameA Lib "kernel32" (ByVal lpFileName As String, ByVal dwFlags As Long, StringLength As Long, ByVal LinkName As String) As LongPtr
Public Declare PtrSafe Function FindFirstFileNameW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal dwFlags As Long, StringLength As Long, ByVal LinkName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function FindFirstFileName Lib "kernel32" Alias "FindFirstFileNameW" (ByVal lpFileName As String, ByVal dwFlags As Long, StringLength As Long, ByVal LinkName As String) As LongPtr
'does not exist Public Declare PtrSafe Function FindFirstFileNameTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal dwFlags As Long, StringLength As Long, ByVal LinkName As String, ByVal hTransaction As LongPtr) As LongPtr
Public Declare PtrSafe Function FindFirstFileNameTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal dwFlags As Long, StringLength As Long, ByVal LinkName As LongPtr, ByVal hTransaction As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function FindFirstFileNameTransacted Lib "kernel32" Alias "FindFirstFileNameTransactedW" (ByVal lpFileName As String, ByVal dwFlags As Long, StringLength As Long, ByVal LinkName As String, ByVal hTransaction As LongPtr) As LongPtr
'does not exist Public Declare PtrSafe Function FindNextFileNameA Lib "kernel32" (ByVal hFindStream As LongPtr, StringLength As Long, ByVal LinkName As LongPtr) As BOOL
Public Declare PtrSafe Function FindNextFileNameW Lib "kernel32" (ByVal hFindStream As LongPtr, StringLength As Long, ByVal LinkName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function FindNextFileName Lib "kernel32" Alias "FindNextFileNameW" (ByVal hFindStream As LongPtr, StringLength As Long, ByVal LinkName As LongPtr) As BOOL
Public Declare PtrSafe Function SetSearchPathMode Lib "kernel32" (ByVal dwFlags As SET_SEARCH_PATH_FLAGS) As BOOL
Public Declare PtrSafe Function SearchPathA Lib "kernel32" (ByVal lpPath As String, ByVal lpFileName As String, ByVal lpExtension As String, ByVal nBufferLength As Long, ByVal lpBuffer As String, Optional lpFilePart As String) As Long
Public Declare PtrSafe Function SearchPathW Lib "kernel32" (ByVal lpPath As LongPtr, ByVal lpFileName As LongPtr, ByVal lpExtension As LongPtr, ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr, Optional lpFilePart As LongPtr) As Long
Public DeclareWide PtrSafe Function SearchPath Lib "kernel32" Alias "SearchPathW" (ByVal lpPath As String, ByVal lpFileName As String, ByVal lpExtension As String, ByVal nBufferLength As Long, ByVal lpBuffer As String, Optional lpFilePart As String) As Long
Public Declare PtrSafe Function SetMessageWaitingIndicator Lib "kernel32" (ByVal hMsgIndicator As LongPtr, ByVal ulMsgCount As Long) As BOOL
[Description("Determines whether the current directory should be included in the search path for the specified executable.")]
Public Declare PtrSafe Function NeedCurrentDirectoryForExePathA Lib "kernel32" (ByVal ExeName As String) As BOOL
[Description("Determines whether the current directory should be included in the search path for the specified executable.")]
Public Declare PtrSafe Function NeedCurrentDirectoryForExePathW Lib "kernel32" (ByVal ExeName As LongPtr) As BOOL
[Description("Determines whether the current directory should be included in the search path for the specified executable.")]
Public DeclareWide PtrSafe Function NeedCurrentDirectoryForExePath Lib "kernel32" Alias "NeedCurrentDirectoryForExePathW" (ByVal ExeName As String) As BOOL
Public DeclareWide PtrSafe Function GetFileInformationByName Lib "kernel32" (ByVal FileName As String, ByVal FileInformationClass As FILE_INFO_BY_NAME_CLASS, FileInfoBuffer As Any, ByVal FileInfoBufferSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetFileInformationByName Lib "kernel32" (ByVal FileName As LongPtr, ByVal FileInformationClass As FILE_INFO_BY_NAME_CLASS, FileInfoBuffer As Any, ByVal FileInfoBufferSize As Long) As BOOL
Public Declare PtrSafe Function GetFileInformationByHandle Lib "kernel32" (ByVal hFile As LongPtr, ByRef lpFileInformation As BY_HANDLE_FILE_INFORMATION) As Long
Public Declare PtrSafe Function GetFileInformationByHandleEx Lib "kernel32" (ByVal hFile As LongPtr, ByVal FileInformationClass As FILE_INFO_BY_HANDLE_CLASS, ByVal lpFileInformation As LongPtr, ByVal dwBufferSize As Long) As Long
Public Declare PtrSafe Function SetFileInformationByHandle Lib "kernel32" (ByVal hFile As LongPtr, ByVal FileInformationClass As FILE_INFO_BY_HANDLE_CLASS, lpFileInformation As Any, ByVal dwBufferSize As Long) As Long
Public Declare PtrSafe Function SetFileShortNameA Lib "kernel32" (ByVal hFile As LongPtr, ByVal lpShortName As String) As BOOL
Public Declare PtrSafe Function SetFileShortNameW Lib "kernel32" (ByVal hFile As LongPtr, ByVal lpShortName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetFileShortName Lib "kernel32" Alias "SetFileShortNameW" (ByVal hFile As LongPtr, ByVal lpShortName As String) As BOOL

Public Declare PtrSafe Function GetTickCount Lib "kernel32" () As Long
Public Declare PtrSafe Function GetTickCount64 Lib "kernel32" () As LongLong
Public Declare PtrSafe Function SetDefaultDllDirectories Lib "kernel32" (ByVal DirectoryFlags As LoadLibraryFlags) As BOOL
Public DeclareWide PtrSafe Function AddDllDirectory Lib "kernel32" (ByVal NewDirectory As String) As LongPtr
Public Declare PtrSafe Function RemoveDllDirectory Lib "kernel32" (ByVal Cookie As LongPtr) As BOOL
Public Declare PtrSafe Function SetDllDirectoryA Lib "kernel32" (Optional ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function SetDllDirectoryW Lib "kernel32" (Optional ByVal lpPathName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetDllDirectory Lib "kernel32" Alias "SetDllDirectoryW" (Optional ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function GetDllDirectoryA Lib "kernel32" (ByVal nBufferLength As Long, Optional ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function GetDllDirectoryW Lib "kernel32" (ByVal nBufferLength As Long, Optional ByVal lpPathName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetDllDirectory Lib "kernel32" Alias "GetDllDirectoryW" (ByVal nBufferLength As Long, Optional ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function LoadLibraryA Lib "kernel32" (ByVal lpLibFileName As String) As LongPtr
Public Declare PtrSafe Function LoadLibraryW Lib "kernel32" (ByVal lpLibFileName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function LoadLibrary Lib "kernel32" Alias "LoadLibraryW" (ByVal lpLibFileName As String) As LongPtr
Public Declare PtrSafe Function LoadLibraryExA Lib "kernel32" (ByVal lpLibFileName As String, ByVal hFile As LongPtr, ByVal dwFlags As LoadLibraryFlags) As LongPtr
Public Declare PtrSafe Function LoadLibraryExW Lib "kernel32" (ByVal lpLibFileName As LongPtr, ByVal hFile As LongPtr, ByVal dwFlags As LoadLibraryFlags) As LongPtr
Public DeclareWide PtrSafe Function LoadLibraryEx Lib "kernel32" Alias "LoadLibraryExW" (ByVal lpLibFileName As String, ByVal hFile As LongPtr, ByVal dwFlags As LoadLibraryFlags) As LongPtr
Public Declare PtrSafe Function GetProcAddress Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpProcName As String) As LongPtr
Public Declare PtrSafe Function FreeLibrary Lib "kernel32" (ByVal hLibModule As LongPtr) As Long
Public Declare PtrSafe Function FreeModule Lib "kernel32" Alias "FreeLibrary" (ByVal hLibModule As LongPtr) As Long
Public DeclareWide PtrSafe Function GetModuleHandle Lib "kernel32" Alias "GetModuleHandleW" (Optional lpModuleName As Any) As LongPtr
Public Declare PtrSafe Function GetModuleHandleA Lib "kernel32" (Optional ByVal lpModuleName As String) As LongPtr
Public Declare PtrSafe Function GetModuleHandleW Lib "kernel32" (Optional ByVal lpModuleName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function GetModuleHandleEx Lib "kernel32" Alias "GetModuleHandleExW" (ByVal dwFlags As GET_MODULE_EX_FLAGS, lpModuleName As Any, phModule As LongPtr) As BOOL
Public Declare PtrSafe Function GetModuleHandleExA Lib "kernel32" (ByVal dwFlags As GET_MODULE_EX_FLAGS, ByVal lpModuleName As String, phModule As LongPtr) As BOOL
Public Declare PtrSafe Function GetModuleHandleExW Lib "kernel32" (ByVal dwFlags As GET_MODULE_EX_FLAGS, ByVal lpModuleName As LongPtr, phModule As LongPtr) As BOOL
Public Declare PtrSafe Sub FreeLibraryAndExitThread Lib "kernel32" (ByVal hLibModule As LongPtr, ByVal dwExitCode As Long)
Public Declare PtrSafe Function GetWindowsDirectoryA Lib "kernel32" (ByVal lpBuffer As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetWindowsDirectoryW Lib "kernel32" (ByVal lpBuffer As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetWindowsDirectory Lib "kernel32" Alias "GetWindowsDirectoryW" (ByVal lpBuffer As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetModuleFileNameA Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpFileName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetModuleFileNameW Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpFileName As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetModuleFileName Lib "kernel32" Alias "GetModuleFileNameW" (ByVal hModule As LongPtr, ByVal lpFileName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetModuleFileNameExA Lib "psapi" (ByVal hProcess As LongPtr, ByVal hModule As LongPtr, ByVal lpFileName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetModuleFileNameExW Lib "psapi" (ByVal hProcess As LongPtr, ByVal hModule As LongPtr, ByVal lpFileName As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetModuleFileNameEx Lib "psapi" Alias "GetModuleFileNameExW" (ByVal hProcess As LongPtr, ByVal hModule As LongPtr, ByVal lpFileName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetProcessImageFileNameA Lib "psapi" (ByVal hProcess As LongPtr, ByVal lpImageFileName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetProcessImageFileNameW Lib "psapi" (ByVal hProcess As LongPtr, ByVal lpImageFileName As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetProcessImageFileName Lib "psapi" Alias "GetProcessImageFileNameW" (ByVal hProcess As LongPtr, ByVal lpImageFileName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function EnumProcesses Lib "psapi" (lpidProcess As Long, ByVal cb As Long, lpcbNeeded As Long) As BOOL
Public Declare PtrSafe Function EnumProcessModules Lib "psapi" (ByVal hProcess As LongPtr, lphModule As LongPtr, ByVal cb As Long, lpcbNeeded As Long) As BOOL
Public Declare PtrSafe Function EnumProcessModulesEx Lib "psapi" (ByVal hProcess As LongPtr, lphModule As LongPtr, ByVal cb As Long, lpcbNeeded As Long, ByVal dwFilterFlag As EnumModulesFlags) As BOOL
Public Declare PtrSafe Function EnumPageFilesA Lib "psapi" (ByVal pCallbackRoutine As LongPtr, pContext As Any) As BOOL
Public DeclareWide PtrSafe Function EnumPageFilesW Lib "psapi" (ByVal pCallbackRoutine As LongPtr, pContext As Any) As BOOL
Public DeclareWide PtrSafe Function EnumPageFiles Lib "psapi" Alias "EnumPageFilesW" (ByVal pCallbackRoutine As LongPtr, pContext As Any) As BOOL
Public Declare PtrSafe Function EnumDeviceDrivers Lib "psapi" (lpImageBase As LongPtr, ByVal cb As Long, lpcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetDeviceDriverBaseNameA Lib "psapi" (ByVal ImageBase As LongPtr, ByVal lpBaseName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetDeviceDriverBaseNameW Lib "psapi" (ByVal ImageBase As LongPtr, ByVal lpBaseName As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetDeviceDriverBaseName Lib "psapi" Alias "GetDeviceDriverBaseNameW" (ByVal ImageBase As LongPtr, ByVal lpBaseName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetMappedFileNameA Lib "psapi" (ByVal hProcess As LongPtr, ByVal lpv As LongPtr, ByVal lpFilename As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetMappedFileNameW Lib "psapi" (ByVal hProcess As LongPtr, ByVal lpv As LongPtr, ByVal lpFilename As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetMappedFileName Lib "psapi" Alias "GetMappedFileNameW" (ByVal hProcess As LongPtr, ByVal lpv As LongPtr, ByVal lpFilename As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetModuleBaseNameA Lib "psapi" (ByVal hProcess As LongPtr, ByVal hModule As LongPtr, ByVal lpBaseName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetModuleBaseNameW Lib "psapi" (ByVal hProcess As LongPtr, ByVal hModule As LongPtr, ByVal lpBaseName As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetModuleBaseName Lib "psapi" Alias "GetModuleBaseNameW" (ByVal hProcess As LongPtr, ByVal hModule As LongPtr, ByVal lpBaseName As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetModuleInformation Lib "psapi" (ByVal hProcess As LongPtr, ByVal hModule As LongPtr, lpmodinfo As MODULEINFO, ByVal cb As Long) As BOOL
Public Declare PtrSafe Function DisableThreadLibraryCalls Lib "kernel32" (ByVal hLibModule As LongPtr) As BOOL

/*
wincon.h, 100%
wincontypes.h, 100%
consoleapi.h, 100%
consoleapi2.h, 100%
consoleapi3.h, 100%
*/

Public Type SMALL_RECT
    Left As Integer
    Top As Integer
    Right As Integer
    Bottom As Integer
End Type

Public Enum CONTROL_KEYSTATE_FLAGS
    RIGHT_ALT_PRESSED = &H0001  ' the right alt key is pressed.
    LEFT_ALT_PRESSED = &H0002  ' the left alt key is pressed.
    RIGHT_CTRL_PRESSED = &H0004  ' the right ctrl key is pressed.
    LEFT_CTRL_PRESSED = &H0008  ' the left ctrl key is pressed.
    SHIFT_PRESSED = &H0010  ' the shift key is pressed.
    NUMLOCK_ON = &H0020  ' the numlock light is on.
    SCROLLLOCK_ON = &H0040  ' the scrolllock light is on.
    CAPSLOCK_ON = &H0080  ' the capslock light is on.
    ENHANCED_KEY = &H0100  ' the key is enhanced.
    NLS_DBCSCHAR = &H00010000  ' DBCS for JPN: SBCS/DBCS mode.
    NLS_ALPHANUMERIC = &H00000000  ' DBCS for JPN: Alphanumeric mode.
    NLS_KATAKANA = &H00020000  ' DBCS for JPN: Katakana mode.
    NLS_HIRAGANA = &H00040000  ' DBCS for JPN: Hiragana mode.
    NLS_ROMAN = &H00400000  ' DBCS for JPN: Roman/Noroman mode.
    NLS_IME_CONVERSION = &H00800000  ' DBCS for JPN: IME conversion.
    ALTNUMPAD_BIT = &H04000000  ' AltNumpad OEM char (copied from ntuser\inc\kbd.h) ;internal_NT
    NLS_IME_DISABLE = &H20000000  ' DBCS for JPN: IME enable/disable.
End Enum
Public Type KEY_EVENT_RECORD
    bKeyDown As Long
    wRepeatCount As Integer
    /* [ TypeHint(VirtualKeyCodes) ] */ wVirtualKeyCode As Integer
    wVirtualScanCode As Integer
    'union {
    UnicodeChar As Integer
    '     CHAR   AsciiChar;
    ' } uChar;
    dwControlKeyState As CONTROL_KEYSTATE_FLAGS
End Type

Public Enum MOUSEVENT_RECORD_STATES
    FROM_LEFT_1ST_BUTTON_PRESSED = &H0001
    RIGHTMOST_BUTTON_PRESSED = &H0002
    FROM_LEFT_2ND_BUTTON_PRESSED = &H0004
    FROM_LEFT_3RD_BUTTON_PRESSED = &H0008
    FROM_LEFT_4TH_BUTTON_PRESSED = &H0010
End Enum
Public Enum MOUSEVENT_RECORD_EVENTS
    MOUSE_MOVED = &H0001
    DOUBLE_CLICK = &H0002
    MOUSE_WHEELED = &H0004
' '#if(_WIN32_WINNT >= 0x0600)
    MOUSE_HWHEELED = &H0008
End Enum
Public Type MOUSE_EVENT_RECORD
    dwMousePosition As COORD
    dwButtonState As MOUSEVENT_RECORD_STATES
    dwControlKeyState As CONTROL_KEYSTATE_FLAGS
    dwEventFlags As MOUSEVENT_RECORD_EVENTS
End Type

Public Type WINDOW_BUFFER_SIZE_RECORD
    dwSize As COORD
End Type

Public Type MENU_EVENT_RECORD
    dwCommandId As Long
End Type

Public Type FOCUS_EVENT_RECORD
    bSetFocus As BOOL
End Type

Public Enum INPUT_RECORD_TYPE
    KEY_EVENT = &H0001  ' Event contains key event record
    MOUSE_EVENT = &H0002  ' Event contains mouse event record
    WINDOW_BUFFER_SIZE_EVENT = &H0004  ' Event contains window change event record
    MENU_EVENT = &H0008  ' Event contains menu event record
    FOCUS_EVENT = &H0010  ' event contains focus change
End Enum
Public Type INPUT_RECORD
    /* [ TypeHint(INPUT_RECORD_TYPE) ] */ EventType As Integer
    abData(0 To 15) As Byte
End Type

Public Enum CONSOLE_CHAR_ATTRIB
    FOREGROUND_BLUE = &H0001  ' text color contains blue.
    FOREGROUND_GREEN = &H0002  ' text color contains green.
    FOREGROUND_RED = &H0004  ' text color contains red.
    FOREGROUND_INTENSITY = &H0008  ' text color is intensified.
    BACKGROUND_BLUE = &H0010  ' background color contains blue.
    BACKGROUND_GREEN = &H0020  ' background color contains green.
    BACKGROUND_RED = &H0040  ' background color contains red.
    BACKGROUND_INTENSITY = &H0080  ' background color is intensified.
    COMMON_LVB_LEADING_BYTE = &H0100  ' Leading Byte of DBCS
    COMMON_LVB_TRAILING_BYTE = &H0200  ' Trailing Byte of DBCS
    COMMON_LVB_GRID_HORIZONTAL = &H0400  ' DBCS: Grid attribute: top horizontal.
    COMMON_LVB_GRID_LVERTICAL = &H0800  ' DBCS: Grid attribute: left vertical.
    COMMON_LVB_GRID_RVERTICAL = &H1000  ' DBCS: Grid attribute: right vertical.
    COMMON_LVB_REVERSE_VIDEO = &H4000  ' DBCS: Reverse fore/back ground attribute.
    COMMON_LVB_UNDERSCORE = &H8000&  ' DBCS: Underscore.
    COMMON_LVB_SBCSDBCS = &H0300  ' SBCS or DBCS flag.
End Enum
Public Type CHAR_INFO
    UnicodeChar As Integer
    /* [ TypeHint(CONSOLE_CHAR_ATTRIB) ] */ Attributes As Integer
End Type

Public Type CONSOLE_FONT_INFO
    nFont As Long
    dwFontSize As COORD
End Type

Public Enum CONSOLE_INPUT_MODE_FLAGS
    ENABLE_PROCESSED_INPUT = &H0001
    ENABLE_LINE_INPUT = &H0002
    ENABLE_ECHO_INPUT = &H0004
    ENABLE_WINDOW_INPUT = &H0008
    ENABLE_MOUSE_INPUT = &H0010
    ENABLE_INSERT_MODE = &H0020
    ENABLE_QUICK_EDIT_MODE = &H0040
    ENABLE_EXTENDED_FLAGS = &H0080
    ENABLE_AUTO_POSITION = &H0100
    ENABLE_VIRTUAL_TERMINAL_INPUT = &H0200
End Enum
Public Enum CONSOLE_OUTPUT_MODE_FLAGS
    ENABLE_PROCESSED_OUTPUT = &H0001
    ENABLE_WRAP_AT_EOL_OUTPUT = &H0002
    ENABLE_VIRTUAL_TERMINAL_PROCESSING = &H0004
    DISABLE_NEWLINE_AUTO_RETURN = &H0008
    ENABLE_LVB_GRID_WORLDWIDE = &H0010
End Enum

Public Type CONSOLE_READCONSOLE_CONTROL
    nLength As Long
    nInitialChars As Long
    dwCtrlWakeupMask As Long
    dwControlKeyState As CONTROL_KEYSTATE_FLAGS
End Type

Public Enum CONSOLE_CTRL_EVENT_FLAGS
    CTRL_C_EVENT = 0
    CTRL_BREAK_EVENT = 1
    CTRL_CLOSE_EVENT = 2
'  3 is reserved!
'  4 is reserved!
    CTRL_LOGOFF_EVENT = 5
    CTRL_SHUTDOWN_EVENT = 6
End Enum

Public Enum PSEUDOCONSOLE_FLAGS
    PSEUDOCONSOLE_INHERIT_CURSOR = &H1
End Enum

Public Const CONSOLE_REAL_OUTPUT_HANDLE  = (-2)
Public Const CONSOLE_REAL_INPUT_HANDLE  = (-3)

Public Enum CONSOLE_SCREEN_BUFFER_FLAGS
    CONSOLE_TEXTMODE_BUFFER = 1
End Enum

Public Type CONSOLE_CURSOR_INFO
    dwSize As Long
    bVisible As Long
End Type

Public Type CONSOLE_SCREEN_BUFFER_INFO
    dwSize As COORD
    dwCursorPosition As COORD
    /* [ TypeHint (CONSOLE_CHAR_ATTRIB) ] */ wAttributes As Integer
    srWindow As SMALL_RECT
    dwMaximumWindowSize As COORD
End Type
Public Type CONSOLE_SCREEN_BUFFER_INFOEX
    dwSize As COORD
    dwCursorPosition As COORD
    /* [ TypeHint (CONSOLE_CHAR_ATTRIB) ] */ wAttributes As Integer
    srWindow As SMALL_RECT
    dwMaximumWindowSize As COORD
    /* [ TypeHint (CONSOLE_CHAR_ATTRIB) ] */ wPopupAttributes As Integer
    [Description("Always CFALSE on Vista+")] bFullscreenSupported As BOOL
    ColorTable(15) As Long
End Type

Public Enum STD_HANDLES
    STD_INPUT_HANDLE = -10
    STD_OUTPUT_HANDLE = -11
    STD_ERROR_HANDLE = -12
End Enum

Public Type CONSOLE_FONT_INFOEX
    cbSize As Long
    nFont As Long
    dwFontSize As COORD
    FontFamily As Long
    FontWeight As Long
    FaceName(0 To (LF_FACESIZE - 1)) As Integer
End Type

Public Enum CONSOLE_SEL_INFO_FLAGS
    CONSOLE_NO_SELECTION = &H0000
    CONSOLE_SELECTION_IN_PROGRESS = &H0001  ' selection has begun
    CONSOLE_SELECTION_NOT_EMPTY = &H0002  ' non-null select rectangle
    CONSOLE_MOUSE_SELECTION = &H0004  ' selecting with mouse
    CONSOLE_MOUSE_DOWN = &H0008  ' mouse is down
End Enum
Public Type CONSOLE_SELECTION_INFO
    dwFlags As CONSOLE_SEL_INFO_FLAGS
    dwSelectionAnchor As COORD
    srSelection As SMALL_RECT
End Type

Public Enum CONSOLE_HISTORY_FLAGS
    HISTORY_NO_DUP_FLAG = &H1
End Enum
Public Type CONSOLE_HISTORY_INFO
    cbSize As Long
    HistoryBufferSize As Long
    NumberOfHistoryBuffers As Long
    dwFlags As CONSOLE_HISTORY_FLAGS
End Type

Public Enum CONSOLE_FS_MODE
    CONSOLE_FULLSCREEN = 1  ' fullscreen console
    CONSOLE_FULLSCREEN_HARDWARE = 2  ' console owns the hardware
End Enum
Public Enum CONSOLE_WINDOW_MODE
    CONSOLE_FULLSCREEN_MODE = 1
    CONSOLE_WINDOWED_MODE = 2
End Enum

Public Declare PtrSafe Function GetStdHandle Lib "kernel32" (ByVal nStdHandle As STD_HANDLES) As LongPtr
Public Declare PtrSafe Function SetStdHandle Lib "kernel32" (ByVal nStdHandle As STD_HANDLES, ByVal hHandle As LongPtr) As BOOL
Public Declare PtrSafe Function SetStdHandleEx Lib "kernel32" (ByVal nStdHandle As STD_HANDLES, ByVal hHandle As LongPtr, phPrevValue As LongPtr) As BOOL
Public Declare PtrSafe Function AllocConsole Lib "kernel32" () As BOOL
Public Declare PtrSafe Function FreeConsole Lib "kernel32" () As BOOL
Public Declare PtrSafe Function AttachConsole Lib "kernel32" (ByVal dwProcessId As Long) As BOOL
Public Declare PtrSafe Function GetConsoleCP Lib "kernel32" () As Long
Public Declare PtrSafe Function SetConsoleCP Lib "kernel32" (ByVal wCodePageId As Long) As BOOL
Public Declare PtrSafe Function GetConsoleOutputCP Lib "kernel32" () As Long
Public Declare PtrSafe Function SetConsoleOutputCP Lib "kernel32" (ByVal wCodePageId As Long) As BOOL
Public Declare PtrSafe Function GetConsoleMode Lib "kernel32" (ByVal hConsoleHandle As LongPtr, lpMode As CONSOLE_INPUT_MODE_FLAGS) As BOOL
Public Declare PtrSafe Function SetConsoleMode Lib "kernel32" (ByVal hConsoleHandle As LongPtr, ByVal dwMode As CONSOLE_INPUT_MODE_FLAGS) As BOOL
Public Declare PtrSafe Function GetNumberOfConsoleInputEvents Lib "kernel32" (ByVal hConsoleInput As LongPtr, lpNumberOfEvents As Long) As BOOL
Public Declare PtrSafe Function ReadConsoleInputA Lib "kernel32" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsRead As Long) As BOOL
Public Declare PtrSafe Function ReadConsoleInputW Lib "kernel32" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsRead As Long) As BOOL
Public DeclareWide PtrSafe Function ReadConsoleInput Lib "kernel32" Alias "ReadConsoleInputW" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsRead As Long) As BOOL
Public Declare PtrSafe Function PeekConsoleInputA Lib "kernel32" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsRead As Long) As BOOL
Public Declare PtrSafe Function PeekConsoleInputW Lib "kernel32" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsRead As Long) As BOOL
Public DeclareWide PtrSafe Function PeekConsoleInput Lib "kernel32" Alias "PeekConsoleInputW" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsRead As Long) As BOOL
Public Declare PtrSafe Function ReadConsoleA Lib "kernel32" (ByVal hConsoleInput As LongPtr, ByVal lpBuffer As String, ByVal nNumberOfCharsToRead As Long, ByRef lpNumberOfCharsRead As Long, pInputControl As CONSOLE_READCONSOLE_CONTROL) As BOOL
Public Declare PtrSafe Function ReadConsoleW Lib "kernel32" (ByVal hConsoleInput As LongPtr, ByVal lpBuffer As LongPtr, ByVal nNumberOfCharsToRead As Long, ByRef lpNumberOfCharsRead As Long, pInputControl As CONSOLE_READCONSOLE_CONTROL) As BOOL
Public DeclareWide PtrSafe Function ReadConsole Lib "kernel32" Alias "ReadConsoleW" (ByVal hConsoleInput As LongPtr, ByVal lpBuffer As String, ByVal nNumberOfCharsToRead As Long, ByRef lpNumberOfCharsRead As Long, pInputControl As CONSOLE_READCONSOLE_CONTROL) As BOOL
Public Declare PtrSafe Function WriteConsoleA Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal lpBuffer As String, ByVal nNumberOfCharsToWrite As Long, ByRef lpNumberOfCharsWritten As Long, ByVal lpReserved As LongPtr) As BOOL
Public Declare PtrSafe Function WriteConsoleW Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal lpBuffer As LongPtr, ByVal nNumberOfCharsToWrite As Long, ByRef lpNumberOfCharsWritten As Long, ByVal lpReserved As LongPtr) As BOOL
Public DeclareWide PtrSafe Function WriteConsole Lib "kernel32" Alias "WriteConsoleW" (ByVal hConsoleOutput As LongPtr, ByVal lpBuffer As String, ByVal nNumberOfCharsToWrite As Long, ByRef lpNumberOfCharsWritten As Long, ByVal lpReserved As LongPtr) As BOOL
Public Declare PtrSafe Function SetConsoleCtrlHandler Lib "kernel32" (ByVal HandlerRoutine As LongPtr, ByVal Add As BOOL) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function CreatePseudoConsole Lib "kernel32" (ByVal size As Long, ByVal hInput As LongPtr, ByVal hOutput As LongPtr, ByVal dwFlags As PSEUDOCONSOLE_FLAGS, phPC As LongPtr) As Long
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function ResizePseudoConsole Lib "kernel32" (ByVal hPC As LongPtr, ByVal size As Long) As Long
Public Declare PtrSafe Sub ClosePseudoConsole Lib "kernel32" (ByVal hPC As LongPtr)
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function FillConsoleOutputCharacterA Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal cCharacter As Byte, ByVal nLength As Long, ByVal dwWriteCoord As Long, lpNumberOfCharsWritten As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function FillConsoleOutputCharacterW Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal cCharacter As Integer, ByVal nLength As Long, ByVal dwWriteCoord As Long, lpNumberOfCharsWritten As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public DeclareWide PtrSafe Function FillConsoleOutputCharacter Lib "kernel32" Alias "FillConsoleOutputCharacterW" (ByVal hConsoleOutput As LongPtr, ByVal cCharacter As Integer, ByVal nLength As Long, ByVal dwWriteCoord As Long, lpNumberOfCharsWritten As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function FillConsoleOutputAttribute Lib "kernel32" (ByVal hConsoleOutput As LongPtr, [TypeHint(CONSOLE_CHAR_ATTRIB)] ByVal wAttribute As Integer, ByVal nLength As Long, ByVal dwWriteCoord As Long, lpNumberOfAttrsWritten As Long) As BOOL
Public Declare PtrSafe Function GenerateConsoleCtrlEvent Lib "kernel32" (ByVal dwCtrlEvent As CONSOLE_CTRL_EVENT_FLAGS, ByVal dwProcessGroupId As Long) As BOOL
Public Declare PtrSafe Function CreateConsoleScreenBuffer Lib "kernel32" (ByVal dwDesiredAccess As GenericRights, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwFlags As CONSOLE_SCREEN_BUFFER_FLAGS, ByVal lpScreenBufferData As LongPtr) As LongPtr
Public Declare PtrSafe Function SetConsoleActiveScreenBuffer Lib "kernel32" (ByVal hConsoleOutput As LongPtr) As BOOL
Public Declare PtrSafe Function FlushConsoleInputBuffer Lib "kernel32" (ByVal hConsoleInput As LongPtr) As BOOL
Public Declare PtrSafe Function GetConsoleCursorInfo Lib "kernel32" (ByVal hConsoleOutput As LongPtr, lpConsoleCursorInfo As CONSOLE_CURSOR_INFO) As BOOL
Public Declare PtrSafe Function SetConsoleCursorInfo Lib "kernel32" (ByVal hConsoleOutput As LongPtr, lpConsoleCursorInfo As CONSOLE_CURSOR_INFO) As BOOL
Public Declare PtrSafe Function GetConsoleScreenBufferInfo Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByRef lpConsoleScreenBufferInfo As CONSOLE_SCREEN_BUFFER_INFO) As BOOL
Public Declare PtrSafe Function GetConsoleScreenBufferInfoEx Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByRef lpConsoleScreenBufferInfo As CONSOLE_SCREEN_BUFFER_INFOEX) As BOOL
Public Declare PtrSafe Function SetConsoleScreenBufferInfoEx Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByRef lpConsoleScreenBufferInfo As CONSOLE_SCREEN_BUFFER_INFOEX) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function SetConsoleScreenBufferSize Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal dwSize As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function SetConsoleCursorPosition Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal dwCursorPosition As Long) As Long
Public Declare PtrSafe Function GetLargestConsoleWindowSize Lib "kernel32" (ByVal hConsoleOutput As LongPtr) As COORD
Public Declare PtrSafe Function SetConsoleTextAttribute Lib "kernel32" (ByVal hConsoleOutput As LongPtr, [TypeHint(CONSOLE_CHAR_ATTRIB)] ByVal wAttributes As Integer) As BOOL
Public Declare PtrSafe Function SetConsoleWindowInfo Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal bAbsolute As BOOL, lpConsoleWindow As SMALL_RECT) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function WriteConsoleOutputCharacterA Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal lpCharacter As String, ByVal nLength As Long, ByVal dwWriteCoord As Long, lpNumberOfCharsWritten As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function WriteConsoleOutputCharacterW Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal lpCharacter As LongPtr, ByVal nLength As Long, ByVal dwWriteCoord As Long, lpNumberOfCharsWritten As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public DeclareWide PtrSafe Function WriteConsoleOutputCharacter Lib "kernel32" Alias "WriteConsoleOutputCharacterW" (ByVal hConsoleOutput As LongPtr, ByVal lpCharacter As String, ByVal nLength As Long, ByVal dwWriteCoord As Long, lpNumberOfCharsWritten As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function WriteConsoleOutputAttribute Lib "kernel32" (ByVal hConsoleOutput As LongPtr, [TypeHint(CONSOLE_CHAR_ATTRIB)] wAttribute As Integer, ByVal nLength As Long, ByVal dwWriteCoord As Long, lpNumberOfAttrsWritten As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function ReadConsoleOutputCharacterA Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal lpCharacter As String, ByVal nLength As Long, ByVal dwReadCoord As Long, lpNumberOfCharsRead As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function ReadConsoleOutputCharacterW Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal lpCharacter As LongPtr, ByVal nLength As Long, ByVal dwReadCoord As Long, lpNumberOfCharsRead As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public DeclareWide PtrSafe Function ReadConsoleOutputCharacter Lib "kernel32" Alias "ReadConsoleOutputCharacterW" (ByVal hConsoleOutput As LongPtr, ByVal lpCharacter As String, ByVal nLength As Long, ByVal dwReadCoord As Long, lpNumberOfCharsRead As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function ReadConsoleOutputAttribute Lib "kernel32" (ByVal hConsoleOutput As LongPtr, [TypeHint(CONSOLE_CHAR_ATTRIB)] wAttribute As Integer, ByVal nLength As Long, ByVal dwReadCoord As Long, lpNumberOfAttrsRead As Long) As BOOL
Public Declare PtrSafe Function WriteConsoleInputA Lib "kernel32" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsWritten As Long) As BOOL
Public Declare PtrSafe Function WriteConsoleInputW Lib "kernel32" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsWritten As Long) As BOOL
Public DeclareWide PtrSafe Function WriteConsoleInput Lib "kernel32" Alias "WriteConsoleInputW" (ByVal hConsoleInput As LongPtr, lpBuffer As INPUT_RECORD, ByVal nLength As Long, lpNumberOfEventsWritten As Long) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function ScrollConsoleScreenBufferA Lib "kernel32" (ByVal hConsoleOutput As LongPtr, lpScrollRectangle As SMALL_RECT, lpClipRectangle As SMALL_RECT, ByVal dwDestinationOrigin As Long, ByRef lpFill As CHAR_INFO) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function ScrollConsoleScreenBufferW Lib "kernel32" (ByVal hConsoleOutput As LongPtr, lpScrollRectangle As SMALL_RECT, lpClipRectangle As SMALL_RECT, ByVal dwDestinationOrigin As Long, ByRef lpFill As CHAR_INFO) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public DeclareWide PtrSafe Function ScrollConsoleScreenBuffer Lib "kernel32" Alias "ScrollConsoleScreenBufferW" (ByVal hConsoleOutput As LongPtr, lpScrollRectangle As SMALL_RECT, lpClipRectangle As SMALL_RECT, ByVal dwDestinationOrigin As Long, ByRef lpFill As CHAR_INFO) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function WriteConsoleOutputA Lib "kernel32" (ByVal hConsoleOutput As LongPtr, lpBuffer As CHAR_INFO, ByVal dwBufferSize As Long, ByVal dwBufferCoord As Long, lpWriteRegion As SMALL_RECT) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function WriteConsoleOutputW Lib "kernel32" (ByVal hConsoleOutput As LongPtr, lpBuffer As CHAR_INFO, ByVal dwBufferSize As Long, ByVal dwBufferCoord As Long, lpWriteRegion As SMALL_RECT) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public DeclareWide PtrSafe Function WriteConsoleOutput Lib "kernel32" Alias "WriteConsoleOutputW" (ByVal hConsoleOutput As LongPtr, lpBuffer As CHAR_INFO, ByVal dwBufferSize As Long, ByVal dwBufferCoord As Long, lpWriteRegion As SMALL_RECT) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function ReadConsoleOutputA Lib "kernel32" (ByVal hConsoleOutput As LongPtr, lpBuffer As CHAR_INFO, ByVal dwBufferSize As Long, ByVal dwBufferCoord As Long, lpReadRegion As SMALL_RECT) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public Declare PtrSafe Function ReadConsoleOutputW Lib "kernel32" (ByVal hConsoleOutput As LongPtr, lpBuffer As CHAR_INFO, ByVal dwBufferSize As Long, ByVal dwBufferCoord As Long, lpReadRegion As SMALL_RECT) As BOOL
[Description("This function expects a ByVal COORD; copy it into a Long until tB properly supports ByVal UDTs")]
Public DeclareWide PtrSafe Function ReadConsoleOutput Lib "kernel32" Alias "ReadConsoleOutputW" (ByVal hConsoleOutput As LongPtr, lpBuffer As CHAR_INFO, ByVal dwBufferSize As Long, ByVal dwBufferCoord As Long, lpReadRegion As SMALL_RECT) As BOOL
Public Declare PtrSafe Function GetConsoleTitleA Lib "kernel32" (ByVal lpConsoleTitle As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetConsoleTitleW Lib "kernel32" (ByVal lpConsoleTitle As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetConsoleTitle Lib "kernel32" Alias "GetConsoleTitleW" (ByVal lpConsoleTitle As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetConsoleOriginalTitleA Lib "kernel32" (ByVal lpConsoleTitle As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetConsoleOriginalTitleW Lib "kernel32" (ByVal lpConsoleTitle As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetConsoleOriginalTitle Lib "kernel32" Alias "GetConsoleOriginalTitleW" (ByVal lpConsoleTitle As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function SetConsoleTitleA Lib "kernel32" (ByVal lpConsoleTitle As String) As BOOL
Public Declare PtrSafe Function SetConsoleTitleW Lib "kernel32" (ByVal lpConsoleTitle As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetConsoleTitle Lib "kernel32" Alias "SetConsoleTitleW" (ByVal lpConsoleTitle As String) As BOOL
Public Declare PtrSafe Function GetNumberOfConsoleMouseButtons Lib "kernel32" (lpNumberOfMouseButtons As Long) As BOOL
Public Declare PtrSafe Function GetConsoleFontSize Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal nFont As Long) As COORD
Public Declare PtrSafe Function GetCurrentConsoleFont Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal bMaximumWindow As BOOL, lpConsoleCurrentFont As CONSOLE_FONT_INFO) As BOOL
Public Declare PtrSafe Function GetCurrentConsoleFontEx Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal bMaximumWindow As BOOL, lpConsoleCurrentFont As CONSOLE_FONT_INFOEX) As BOOL
Public Declare PtrSafe Function SetCurrentConsoleFontEx Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal bMaximumWindow As BOOL, lpConsoleCurrentFont As CONSOLE_FONT_INFOEX) As BOOL
Public Declare PtrSafe Function GetConsoleSelectionInfo Lib "kernel32" (lpConsoleSelectionInfo As CONSOLE_SELECTION_INFO) As BOOL
Public Declare PtrSafe Function GetConsoleHistoryInfo Lib "kernel32" (lpConsoleHistoryInfo As CONSOLE_HISTORY_INFO) As BOOL
Public Declare PtrSafe Function SetConsoleHistoryInfo Lib "kernel32" (lpConsoleHistoryInfo As CONSOLE_HISTORY_INFO) As BOOL
Public Declare PtrSafe Function GetConsoleDisplayMode Lib "kernel32" (lpModeFlags As CONSOLE_FS_MODE) As BOOL
Public Declare PtrSafe Function SetConsoleDisplayMode Lib "kernel32" (ByVal hConsoleOutput As LongPtr, ByVal dwFlags As CONSOLE_WINDOW_MODE, lpNewScreenBufferDimensions As COORD) As BOOL
Public Declare PtrSafe Function GetConsoleWindow Lib "kernel32" () As LongPtr
Public Declare PtrSafe Function AddConsoleAliasA Lib "kernel32" (ByVal Source As String, ByVal Target As String, ByVal ExeName As String) As BOOL
Public Declare PtrSafe Function AddConsoleAliasW Lib "kernel32" (ByVal Source As LongPtr, ByVal Target As LongPtr, ByVal ExeName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AddConsoleAlias Lib "kernel32" Alias "AddConsoleAliasW" (ByVal Source As String, ByVal Target As String, ByVal ExeName As String) As BOOL
Public Declare PtrSafe Function GetConsoleAliasA Lib "kernel32" (ByVal Source As String, ByVal TargetBuffer As String, ByVal TargetBufferLength As Long, ByVal ExeName As String) As BOOL
Public Declare PtrSafe Function GetConsoleAliasW Lib "kernel32" (ByVal Source As LongPtr, ByVal TargetBuffer As LongPtr, ByVal TargetBufferLength As Long, ByVal ExeName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetConsoleAlias Lib "kernel32" Alias "GetConsoleAliasW" (ByVal Source As String, ByVal TargetBuffer As String, ByVal TargetBufferLength As Long, ByVal ExeName As String) As BOOL
Public Declare PtrSafe Function GetConsoleAliasesLengthA Lib "kernel32" (ByVal ExeName As String) As Long
Public Declare PtrSafe Function GetConsoleAliasesLengthW Lib "kernel32" (ByVal ExeName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetConsoleAliasesLength Lib "kernel32" Alias "GetConsoleAliasesLengthW" (ByVal ExeName As String) As Long
Public Declare PtrSafe Function GetConsoleAliasExesLengthA Lib "kernel32" () As Long
Public Declare PtrSafe Function GetConsoleAliasExesLengthW Lib "kernel32" () As Long
Public DeclareWide PtrSafe Function GetConsoleAliasExesLength Lib "kernel32" Alias "GetConsoleAliasExesLengthW" () As Long
Public Declare PtrSafe Function GetConsoleAliasesA Lib "kernel32" (ByVal AliasBuffer As String, ByVal AliasBufferLength As Long, ByVal ExeName As String) As Long
Public Declare PtrSafe Function GetConsoleAliasesW Lib "kernel32" (ByVal AliasBuffer As LongPtr, ByVal AliasBufferLength As Long, ByVal ExeName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetConsoleAliases Lib "kernel32" Alias "GetConsoleAliasesW" (ByVal AliasBuffer As String, ByVal AliasBufferLength As Long, ByVal ExeName As String) As Long
Public Declare PtrSafe Function GetConsoleAliasExesA Lib "kernel32" (ByVal ExeNameBuffer As String, ByVal ExeNameBufferLength As Long) As Long
Public Declare PtrSafe Function GetConsoleAliasExesW Lib "kernel32" (ByVal ExeNameBuffer As LongPtr, ByVal ExeNameBufferLength As Long) As Long
Public DeclareWide PtrSafe Function GetConsoleAliasExes Lib "kernel32" Alias "GetConsoleAliasExesW" (ByVal ExeNameBuffer As String, ByVal ExeNameBufferLength As Long) As Long
Public Declare PtrSafe Sub ExpungeConsoleCommandHistoryA Lib "kernel32" (ByVal ExeName As String)
Public Declare PtrSafe Sub ExpungeConsoleCommandHistoryW Lib "kernel32" (ByVal ExeName As LongPtr)
Public DeclareWide PtrSafe Sub ExpungeConsoleCommandHistory Lib "kernel32" Alias "ExpungeConsoleCommandHistoryW" (ByVal ExeName As String)
Public Declare PtrSafe Function SetConsoleNumberOfCommandsA Lib "kernel32" (ByVal ExeName As String) As BOOL
Public Declare PtrSafe Function SetConsoleNumberOfCommandsW Lib "kernel32" (ByVal ExeName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetConsoleNumberOfCommands Lib "kernel32" Alias "SetConsoleNumberOfCommandsW" (ByVal ExeName As String) As BOOL
Public Declare PtrSafe Function GetConsoleCommandHistoryLengthA Lib "kernel32" (ByVal ExeName As String) As Long
Public Declare PtrSafe Function GetConsoleCommandHistoryLengthW Lib "kernel32" (ByVal ExeName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetConsoleCommandHistoryLength Lib "kernel32" Alias "GetConsoleCommandHistoryLengthW" (ByVal ExeName As String) As Long
Public Declare PtrSafe Function GetConsoleCommandHistoryA Lib "kernel32" (ByVal Commands As String, ByVal CommandBufferLength As Long, ByVal ExeName As String) As Long
Public Declare PtrSafe Function GetConsoleCommandHistoryW Lib "kernel32" (ByVal Commands As LongPtr, ByVal CommandBufferLength As Long, ByVal ExeName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetConsoleCommandHistory Lib "kernel32" Alias "GetConsoleCommandHistoryW" (ByVal Commands As String, ByVal CommandBufferLength As Long, ByVal ExeName As String) As Long
Public Declare PtrSafe Function GetConsoleProcessList Lib "kernel32" (lpdwProcessList As Long, ByVal dwProcessCount As Long) As Long


Public Declare PtrSafe Function LoadResource Lib "kernel32" (ByVal hInstance As LongPtr, ByVal hResInfo As LongPtr) As LongPtr
Public Declare PtrSafe Function LockResource Lib "kernel32" (ByVal hResData As LongPtr) As LongPtr
Public Declare PtrSafe Function FreeResource Lib "kernel32" (ByVal hResData As LongPtr) As BOOL
Public Declare PtrSafe Function FindResourceA Lib "kernel32" (ByVal hInstance As LongPtr, ByVal lpName As String, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr) As LongPtr
Public Declare PtrSafe Function FindResourceW Lib "kernel32" (ByVal hInstance As LongPtr, ByVal lpName As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function FindResource Lib "kernel32" Alias "FindResourceW" (ByVal hInstance As LongPtr, ByVal lpName As String, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr) As LongPtr
Public Declare PtrSafe Function FindResourceExA Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal wLanguage As Integer) As LongPtr
Public Declare PtrSafe Function FindResourceExW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As LongPtr, ByVal wLanguage As Integer) As LongPtr
Public DeclareWide PtrSafe Function FindResourceEx Lib "kernel32" Alias "FindResourceExW" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal wLanguage As Integer) As LongPtr
Public Declare PtrSafe Function SizeofResource Lib "kernel32" (ByVal hModule As LongPtr, ByVal hResInfo As LongPtr) As Long
Public Declare PtrSafe Function BeginUpdateResourceA Lib "kernel32" (ByVal pFileName As LongPtr, ByVal bDeleteExistingResources As BOOL) As LongPtr
Public Declare PtrSafe Function BeginUpdateResourceW Lib "kernel32" (ByVal pFileName As LongPtr, ByVal bDeleteExistingResources As BOOL) As LongPtr
Public DeclareWide PtrSafe Function BeginUpdateResource Lib "kernel32" Alias "BeginUpdateResourceW" (ByVal pFileName As LongPtr, ByVal bDeleteExistingResources As BOOL) As LongPtr
Public Declare PtrSafe Function EndUpdateResourceA Lib "kernel32" (ByVal hUpdate As LongPtr, ByVal fDiscard As BOOL) As BOOL
Public Declare PtrSafe Function EndUpdateResourceW Lib "kernel32" (ByVal hUpdate As LongPtr, ByVal fDiscard As BOOL) As BOOL
Public DeclareWide PtrSafe Function EndUpdateResource Lib "kernel32" Alias "EndUpdateResourceW" (ByVal hUpdate As LongPtr, ByVal fDiscard As BOOL) As BOOL
Public Declare PtrSafe Function EnumResourceLanguagesA Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumResourceLanguagesW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumResourceLanguages Lib "kernel32" Alias "EnumResourceLanguagesW" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumResourceTypesA Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumResourceTypesW Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumResourceTypes Lib "kernel32" Alias "EnumResourceTypesW" (ByVal hModule As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumResourceNamesA Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumResourceNamesW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumResourceNames Lib "kernel32" Alias "EnumResourceNamesW" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumResourceLanguagesExA Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, ByVal LangId As Integer) As BOOL
Public Declare PtrSafe Function EnumResourceLanguagesExW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, ByVal LangId As Integer) As BOOL
Public DeclareWide PtrSafe Function EnumResourceLanguagesEx Lib "kernel32" Alias "EnumResourceLanguagesExW" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, ByVal LangId As Integer) As BOOL
Public Declare PtrSafe Function EnumResourceTypesExA Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, ByVal LangId As Integer) As BOOL
Public Declare PtrSafe Function EnumResourceTypesExW Lib "kernel32" (ByVal hModule As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, ByVal LangId As Integer) As BOOL
Public DeclareWide PtrSafe Function EnumResourceTypesEx Lib "kernel32" Alias "EnumResourceTypesExW" (ByVal hModule As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, ByVal LangId As Integer) As BOOL
Public Declare PtrSafe Function EnumResourceNamesExA Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, ByVal LangId As Integer) As BOOL
Public Declare PtrSafe Function EnumResourceNamesExW Lib "kernel32" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, ByVal LangId As Integer) As BOOL
Public DeclareWide PtrSafe Function EnumResourceNamesEx Lib "kernel32" Alias "EnumResourceNamesExW" (ByVal hModule As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr, ByVal dwFlags As ResourceEnumFlags, ByVal LangId As Integer) As BOOL
Public Declare PtrSafe Function UpdateResourceA Lib "kernel32" (ByVal hUpdate As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal wLanguage As Integer, lpData As Any, ByVal cb As Long) As BOOL
Public Declare PtrSafe Function UpdateResourceW Lib "kernel32" (ByVal hUpdate As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As LongPtr, ByVal wLanguage As Integer, lpData As Any, ByVal cb As Long) As BOOL
Public DeclareWide PtrSafe Function UpdateResource Lib "kernel32" Alias "UpdateResourceW" (ByVal hUpdate As LongPtr, [TypeHint(ResourceTypes)] ByVal lpType As LongPtr, ByVal lpName As String, ByVal wLanguage As Integer, lpData As Any, ByVal cb As Long) As BOOL


Public Declare PtrSafe Function lstrcmpA Lib "kernel32" (lpString1 As Any, lpString2 As Any) As Long
Public Declare PtrSafe Function lstrcmpW Lib "kernel32" (ByVal lpString1 As LongPtr, ByVal lpString2 As LongPtr) As Long
Public DeclareWide PtrSafe Function lstrcmp Lib "kernel32" Alias "lstrcmpW" (ByVal lpString1 As String, ByVal lpString2 As String) As Long
Public Declare PtrSafe Function lstrcmpiA Lib "kernel32" (ByVal lpString1 As String, ByVal lpString2 As String) As Long
Public Declare PtrSafe Function lstrcmpiW Lib "kernel32" (ByVal lpString1 As LongPtr, ByVal lpString2 As LongPtr) As Long
Public DeclareWide PtrSafe Function lstrcmpi Lib "kernel32" Alias "lstrcmpiW" (ByVal lpString1 As String, ByVal lpString2 As String) As Long
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function lstrcatA Lib "kernel32" (ByVal lpString1 As String, ByVal lpString2 As String) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function lstrcatW Lib "kernel32" (ByVal lpString1 As LongPtr, ByVal lpString2 As LongPtr) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public DeclareWide PtrSafe Function lstrcat Lib "kernel32" Alias "lstrcatW" (ByVal lpString1 As String, ByVal lpString2 As String) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function lstrcpyA Lib "kernel32" (lpString1 As Any, lpString2 As Any) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public DeclareWide PtrSafe Function lstrcpy Lib "kernel32" Alias "lstrcpyW" (ByVal lpString1 As String, ByVal lpString2 As String) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function lstrcpyW Lib "kernel32" (ByVal lpString1 As LongPtr, ByVal lpString2 As LongPtr) As LongPtr
Public Declare PtrSafe Function lstrlenA Lib "kernel32" (lpString As Any) As Long
Public Declare PtrSafe Function lstrlenW Lib "kernel32" (lpString As Any) As Long
Public Declare PtrSafe Function lstrlen Lib "kernel32" Alias "lstrlenW" (lpString As Any) As Long

Public Declare PtrSafe Function GetPrivateProfileStringA Lib "kernel32" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpDefault As String, ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
Public Declare PtrSafe Function GetPrivateProfileStringW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpKeyName As LongPtr, ByVal lpDefault As LongPtr, ByVal lpReturnedString As LongPtr, ByVal nSize As Long, ByVal lpFileName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetPrivateProfileString Lib "kernel32" Alias "GetPrivateProfileStringW" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpDefault As String, ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
Public Declare PtrSafe Function WritePrivateProfileStringA Lib "kernel32" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpString As String, ByVal lpFilename As String) As BOOL
Public Declare PtrSafe Function WritePrivateProfileStringW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpKeyName As LongPtr, ByVal lpString As LongPtr, ByVal lpFilename As LongPtr) As BOOL
Public DeclareWide PtrSafe Function WritePrivateProfileString Lib "kernel32" Alias "WritePrivateProfileStringW" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpString As String, ByVal lpFilename As String) As BOOL
Public Declare PtrSafe Function GetPrivateProfileStructA Lib "kernel32" (ByVal lpszSection As String, ByVal lpszKey As String, lpStruct As Any, ByVal uSizeStruct As Long, ByVal szFile As String) As BOOL
Public Declare PtrSafe Function GetPrivateProfileStructW Lib "kernel32" (ByVal lpszSection As LongPtr, ByVal lpszKey As LongPtr, lpStruct As Any, ByVal uSizeStruct As Long, ByVal szFile As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetPrivateProfileStruct Lib "kernel32" Alias "GetPrivateProfileStructW" (ByVal lpszSection As String, ByVal lpszKey As String, lpStruct As Any, ByVal uSizeStruct As Long, ByVal szFile As String) As BOOL
Public Declare PtrSafe Function WritePrivateProfileStructA Lib "kernel32" (ByVal lpszSection As String, ByVal lpszKey As String, lpStruct As Any, ByVal uSizeStruct As Long, ByVal szFile As String) As BOOL
Public Declare PtrSafe Function WritePrivateProfileStructW Lib "kernel32" (ByVal lpszSection As LongPtr, ByVal lpszKey As LongPtr, lpStruct As Any, ByVal uSizeStruct As Long, ByVal szFile As LongPtr) As BOOL
Public DeclareWide PtrSafe Function WritePrivateProfileStruct Lib "kernel32" Alias "WritePrivateProfileStructW" (ByVal lpszSection As String, ByVal lpszKey As String, lpStruct As Any, ByVal uSizeStruct As Long, ByVal szFile As String) As BOOL
Public Declare PtrSafe Function GetPrivateProfileSectionA Lib "kernel32" (ByVal lpAppName As String, ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
Public Declare PtrSafe Function GetPrivateProfileSectionW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpReturnedString As LongPtr, ByVal nSize As Long, ByVal lpFileName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetPrivateProfileSection Lib "kernel32" Alias "GetPrivateProfileSectionW" (ByVal lpAppName As String, ByVal lpReturnedString As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
Public Declare PtrSafe Function WritePrivateProfileSectionA Lib "kernel32" (ByVal lpAppName As String, ByVal lpString As String, ByVal lpFileName As String) As BOOL
Public Declare PtrSafe Function WritePrivateProfileSectionW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpString As LongPtr, ByVal lpFileName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function WritePrivateProfileSection Lib "kernel32" Alias "WritePrivateProfileSectionW" (ByVal lpAppName As String, ByVal lpString As String, ByVal lpFileName As String) As BOOL
Public Declare PtrSafe Function GetPrivateProfileSectionNamesA Lib "kernel32" (ByVal lpszReturnBuffer As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
Public Declare PtrSafe Function GetPrivateProfileSectionNamesW Lib "kernel32" (ByVal lpszReturnBuffer As LongPtr, ByVal nSize As Long, ByVal lpFileName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetPrivateProfileSectionNames Lib "kernel32" Alias "GetPrivateProfileSectionNamesW" (ByVal lpszReturnBuffer As String, ByVal nSize As Long, ByVal lpFileName As String) As Long
Public Declare PtrSafe Function GetPrivateProfileIntA Lib "kernel32" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal nDefault As Long, ByVal lpFileName As String) As Long
Public Declare PtrSafe Function GetPrivateProfileIntW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpKeyName As LongPtr, ByVal nDefault As Long, ByVal lpFileName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetPrivateProfileInt Lib "kernel32" Alias "GetPrivateProfileIntW" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal nDefault As Long, ByVal lpFileName As String) As Long
Public Declare PtrSafe Function GetProfileStringA Lib "kernel32" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpDefault As String, ByVal lpReturnedString As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetProfileStringW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpKeyName As LongPtr, ByVal lpDefault As LongPtr, ByVal lpReturnedString As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetProfileString Lib "kernel32" Alias "GetProfileStringW" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpDefault As String, ByVal lpReturnedString As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function WriteProfileStringA Lib "kernel32" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpString As String) As BOOL
Public Declare PtrSafe Function WriteProfileStringW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpKeyName As LongPtr, ByVal lpString As LongPtr) As BOOL
Public DeclareWide PtrSafe Function WriteProfileString Lib "kernel32" Alias "WriteProfileStringW" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal lpString As String) As BOOL
Public Declare PtrSafe Function GetProfileSectionA Lib "kernel32" (ByVal lpAppName As String, ByVal lpReturnedString As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetProfileSectionW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpReturnedString As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetProfileSection Lib "kernel32" Alias "GetProfileSectionW" (ByVal lpAppName As String, ByVal lpReturnedString As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function WriteProfileSectionA Lib "kernel32" (ByVal lpAppName As String, ByVal lpString As String) As BOOL
Public Declare PtrSafe Function WriteProfileSectionW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpString As LongPtr) As BOOL
Public DeclareWide PtrSafe Function WriteProfileSection Lib "kernel32" Alias "WriteProfileSectionW" (ByVal lpAppName As String, ByVal lpString As String) As BOOL
Public Declare PtrSafe Function GetProfileIntA Lib "kernel32" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal nDefault As Long) As Long
Public Declare PtrSafe Function GetProfileIntW Lib "kernel32" (ByVal lpAppName As LongPtr, ByVal lpKeyName As LongPtr, ByVal nDefault As Long) As Long
Public DeclareWide PtrSafe Function GetProfileInt Lib "kernel32" Alias "GetProfileIntW" (ByVal lpAppName As String, ByVal lpKeyName As String, ByVal nDefault As Long) As Long


Public Enum TRANSACTION_OPTION_FLAGS
    TRANSACTION_DO_NOT_PROMOTE = &H1
End Enum
Public Enum TRANSACTION_MANAGER_OPTIONS
    TRANSACTION_MANAGER_VOLATILE = &H00000001
    TRANSACTION_MANAGER_COMMIT_DEFAULT = &H00000000
    TRANSACTION_MANAGER_COMMIT_SYSTEM_VOLUME = &H00000002
    TRANSACTION_MANAGER_COMMIT_SYSTEM_HIVES = &H00000004
    TRANSACTION_MANAGER_COMMIT_LOWEST = &H00000008
    TRANSACTION_MANAGER_CORRUPT_FOR_RECOVERY = &H00000010
    TRANSACTION_MANAGER_CORRUPT_FOR_PROGRESS = &H00000020
    TRANSACTION_MANAGER_MAXIMUM_OPTION = &H0000003F
End Enum
Public Enum TRANSACTION_MANAGER_RESOURCE_OPTIONS
    RESOURCE_MANAGER_VOLATILE = &H00000001
    RESOURCE_MANAGER_COMMUNICATION = &H00000002
    RESOURCE_MANAGER_MAXIMUM_OPTION = &H00000003
End Enum
Public Enum TRANSACTION_PROTOCOL_OPTIONS
    CRM_PROTOCOL_EXPLICIT_MARSHAL_ONLY = &H00000001
    CRM_PROTOCOL_DYNAMIC_MARSHAL_INFO = &H00000002
    CRM_PROTOCOL_MAXIMUM_OPTION = &H00000003
End Enum
Public Enum TRANSACTION_ENLISTMENT_OPTIONS
    ENLISTMENT_SUPERIOR = &H1
End Enum
Public Enum NOTIFICATION_MASK
    TRANSACTION_NOTIFY_MASK = &H3FFFFFFF
    TRANSACTION_NOTIFY_PREPREPARE = &H00000001
    TRANSACTION_NOTIFY_PREPARE = &H00000002
    TRANSACTION_NOTIFY_COMMIT = &H00000004
    TRANSACTION_NOTIFY_ROLLBACK = &H00000008
    TRANSACTION_NOTIFY_PREPREPARE_COMPLETE = &H00000010
    TRANSACTION_NOTIFY_PREPARE_COMPLETE = &H00000020
    TRANSACTION_NOTIFY_COMMIT_COMPLETE = &H00000040
    TRANSACTION_NOTIFY_ROLLBACK_COMPLETE = &H00000080
    TRANSACTION_NOTIFY_RECOVER = &H00000100
    TRANSACTION_NOTIFY_SINGLE_PHASE_COMMIT = &H00000200
    TRANSACTION_NOTIFY_DELEGATE_COMMIT = &H00000400
    TRANSACTION_NOTIFY_RECOVER_QUERY = &H00000800
    TRANSACTION_NOTIFY_ENLIST_PREPREPARE = &H00001000
    TRANSACTION_NOTIFY_LAST_RECOVER = &H00002000
    TRANSACTION_NOTIFY_INDOUBT = &H00004000
    TRANSACTION_NOTIFY_PROPAGATE_PULL = &H00008000&
    TRANSACTION_NOTIFY_PROPAGATE_PUSH = &H00010000
    TRANSACTION_NOTIFY_MARSHAL = &H00020000
    TRANSACTION_NOTIFY_ENLIST_MASK = &H00040000
    TRANSACTION_NOTIFY_RM_DISCONNECTED = &H01000000
    TRANSACTION_NOTIFY_TM_ONLINE = &H02000000
    TRANSACTION_NOTIFY_COMMIT_REQUEST = &H04000000
    TRANSACTION_NOTIFY_PROMOTE = &H08000000
    TRANSACTION_NOTIFY_PROMOTE_NEW = &H10000000
    TRANSACTION_NOTIFY_REQUEST_OUTCOME = &H20000000
'   Note that this flag is not included in the TRANSACTION_NOTIFY_MASK.
'   The reason being that KTM does not understand this flag yet. This
'   flag is strictly for the use of filter manager. In fact we mask it
'   out before enlisting in any transaction.
    TRANSACTION_NOTIFY_COMMIT_FINALIZE = &H40000000
End Enum

Public Const TRANSACTIONMANAGER_OBJECT_PATH  = "\TransactionManager\"
Public Const TRANSACTION_OBJECT_PATH  = "\Transaction\"
Public Const ENLISTMENT_OBJECT_PATH  = "\Enlistment\"
Public Const RESOURCE_MANAGER_OBJECT_PATH  = "\ResourceManager\"

Public Type TRANSACTION_NOTIFICATION
    TransactionKey As LongPtr
    TransactionNotification As NOTIFICATION_MASK
    TmVirtualClock As LARGE_INTEGER
    ArgumentLength As Long
End Type

Public Type TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT
    EnlistmentId As UUID
    UOW As UUID
End Type
Public Type TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT
    TmIdentity As UUID
    Flags As Long
End Type

Public Enum TransactionManagerRights
    TRANSACTIONMANAGER_QUERY_INFORMATION = (&H0001)
    TRANSACTIONMANAGER_SET_INFORMATION = (&H0002)
    TRANSACTIONMANAGER_RECOVER = (&H0004)
    TRANSACTIONMANAGER_RENAME = (&H0008)
    TRANSACTIONMANAGER_CREATE_RM = (&H0010)
'  The following right is intended for DTC's use only; it will be
'  deprecated, and no one else should take a dependency on it.
    TRANSACTIONMANAGER_BIND_TRANSACTION = (&H0020)
'  Generic mappings for transaction manager rights.
    TRANSACTIONMANAGER_GENERIC_READ = (STANDARD_RIGHTS_READ Or TRANSACTIONMANAGER_QUERY_INFORMATION)
    TRANSACTIONMANAGER_GENERIC_WRITE = (STANDARD_RIGHTS_WRITE Or TRANSACTIONMANAGER_SET_INFORMATION Or TRANSACTIONMANAGER_RECOVER Or TRANSACTIONMANAGER_RENAME Or TRANSACTIONMANAGER_CREATE_RM)
    TRANSACTIONMANAGER_GENERIC_EXECUTE = (STANDARD_RIGHTS_EXECUTE)
    TRANSACTIONMANAGER_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or TRANSACTIONMANAGER_GENERIC_READ Or TRANSACTIONMANAGER_GENERIC_WRITE Or TRANSACTIONMANAGER_GENERIC_EXECUTE Or TRANSACTIONMANAGER_BIND_TRANSACTION)
End Enum
Public Enum TRANSACTION_OBJECT_RIGHTS
    TRANSACTION_QUERY_INFORMATION = (&H0001)
    TRANSACTION_SET_INFORMATION = (&H0002)
    TRANSACTION_ENLIST = (&H0004)
    TRANSACTION_COMMIT = (&H0008)
    TRANSACTION_ROLLBACK = (&H0010)
    TRANSACTION_PROPAGATE = (&H0020)
    TRANSACTION_RIGHT_RESERVED1 = (&H0040)
    TRANSACTION_GENERIC_READ = (STANDARD_RIGHTS_READ Or TRANSACTION_QUERY_INFORMATION Or SYNCHRONIZE)
    TRANSACTION_GENERIC_WRITE = (STANDARD_RIGHTS_WRITE Or TRANSACTION_SET_INFORMATION Or TRANSACTION_COMMIT Or TRANSACTION_ENLIST Or TRANSACTION_ROLLBACK Or TRANSACTION_PROPAGATE Or SYNCHRONIZE)
    TRANSACTION_GENERIC_EXECUTE = (STANDARD_RIGHTS_EXECUTE Or TRANSACTION_COMMIT Or TRANSACTION_ROLLBACK Or SYNCHRONIZE)
    TRANSACTION_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or TRANSACTION_GENERIC_READ Or TRANSACTION_GENERIC_WRITE Or TRANSACTION_GENERIC_EXECUTE)
    TRANSACTION_RESOURCE_MANAGER_RIGHTS = (TRANSACTION_GENERIC_READ Or STANDARD_RIGHTS_WRITE Or TRANSACTION_SET_INFORMATION Or TRANSACTION_ENLIST Or TRANSACTION_ROLLBACK Or TRANSACTION_PROPAGATE Or SYNCHRONIZE)
End Enum
Public Enum TRANSACTION_OUTCOME
    TransactionOutcomeUndetermined = 1
    TransactionOutcomeCommitted = 2
    TransactionOutcomeAborted = 3
End Enum
Public Enum TXFS_MINIVERSION
    TXFS_MINIVERSION_COMMITTED_VIEW = &H0000
    TXFS_MINIVERSION_DIRTY_VIEW = &HFFFE&
    TXFS_MINIVERSION_DEFAULT_VIEW = &HFFFF&
End Enum

Public Enum ResourceManagerObjectRights
    RESOURCEMANAGER_QUERY_INFORMATION = (&H0001)
    RESOURCEMANAGER_SET_INFORMATION = (&H0002)
    RESOURCEMANAGER_RECOVER = (&H0004)
    RESOURCEMANAGER_ENLIST = (&H0008)
    RESOURCEMANAGER_GET_NOTIFICATION = (&H0010)
    RESOURCEMANAGER_REGISTER_PROTOCOL = (&H0020)
    RESOURCEMANAGER_COMPLETE_PROPAGATION = (&H0040)
'  Generic mappings for resource manager rights.
    RESOURCEMANAGER_GENERIC_READ = (STANDARD_RIGHTS_READ Or RESOURCEMANAGER_QUERY_INFORMATION Or SYNCHRONIZE)
    RESOURCEMANAGER_GENERIC_WRITE = (STANDARD_RIGHTS_WRITE Or RESOURCEMANAGER_SET_INFORMATION Or RESOURCEMANAGER_RECOVER Or RESOURCEMANAGER_ENLIST Or RESOURCEMANAGER_GET_NOTIFICATION Or RESOURCEMANAGER_REGISTER_PROTOCOL Or RESOURCEMANAGER_COMPLETE_PROPAGATION Or SYNCHRONIZE)
    RESOURCEMANAGER_GENERIC_EXECUTE = (STANDARD_RIGHTS_EXECUTE Or RESOURCEMANAGER_RECOVER Or RESOURCEMANAGER_ENLIST Or RESOURCEMANAGER_GET_NOTIFICATION Or RESOURCEMANAGER_COMPLETE_PROPAGATION Or SYNCHRONIZE)
    RESOURCEMANAGER_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or RESOURCEMANAGER_GENERIC_READ Or RESOURCEMANAGER_GENERIC_WRITE Or RESOURCEMANAGER_GENERIC_EXECUTE)
End Enum

Public Enum EnlistmentObjectRights
    ENLISTMENT_QUERY_INFORMATION = (&H0001)
    ENLISTMENT_SET_INFORMATION = (&H0002)
    ENLISTMENT_RECOVER = (&H0004)
    ENLISTMENT_SUBORDINATE_RIGHTS = (&H0008)
    ENLISTMENT_SUPERIOR_RIGHTS = (&H0010)
'  Generic mappings for enlistment rights.
    ENLISTMENT_GENERIC_READ = (STANDARD_RIGHTS_READ Or ENLISTMENT_QUERY_INFORMATION)
    ENLISTMENT_GENERIC_WRITE = (STANDARD_RIGHTS_WRITE Or ENLISTMENT_SET_INFORMATION Or ENLISTMENT_RECOVER Or ENLISTMENT_SUBORDINATE_RIGHTS Or ENLISTMENT_SUPERIOR_RIGHTS)
    ENLISTMENT_GENERIC_EXECUTE = (STANDARD_RIGHTS_EXECUTE Or ENLISTMENT_RECOVER Or ENLISTMENT_SUBORDINATE_RIGHTS Or ENLISTMENT_SUPERIOR_RIGHTS)
    ENLISTMENT_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or ENLISTMENT_GENERIC_READ Or ENLISTMENT_GENERIC_WRITE Or ENLISTMENT_GENERIC_EXECUTE)
End Enum


Public Enum ReplaceFileFlags
    REPLACEFILE_WRITE_THROUGH = &H00000001
    REPLACEFILE_IGNORE_MERGE_ERRORS = &H00000002
    REPLACEFILE_IGNORE_ACL_ERRORS = &H00000004
End Enum

Public Type FILE_SEGMENT_ELEMENT
    Buffer As LongPtr
    #If Win64 = 0 Then
    Alignment As Long
    #End If
End Type

Public Enum GetFinalPathNameFlags
    VOLUME_NAME_DOS = &H0  'default
    VOLUME_NAME_GUID = &H1
    VOLUME_NAME_NT = &H2
    VOLUME_NAME_NONE = &H4
    FILE_NAME_NORMALIZED = &H0  'default
    FILE_NAME_OPENED = &H8
End Enum

Public Enum OPEN_FILE_FLAGS
    OF_READ = &H00000000
    OF_WRITE = &H00000001
    OF_READWRITE = &H00000002
    OF_SHARE_COMPAT = &H00000000
    OF_SHARE_EXCLUSIVE = &H00000010
    OF_SHARE_DENY_WRITE = &H00000020
    OF_SHARE_DENY_READ = &H00000030
    OF_SHARE_DENY_NONE = &H00000040
    OF_PARSE = &H00000100
    OF_DELETE = &H00000200
    OF_VERIFY = &H00000400
    OF_CANCEL = &H00000800
    OF_CREATE = &H00001000
    OF_PROMPT = &H00002000
    OF_EXIST = &H00004000
    OF_REOPEN = &H00008000&
End Enum
Public Const OFS_MAXPATHNAME = 128
Public Type OFSTRUCT
    cBytes As Byte
    fFixedDisk As Byte
    nErrCode As Integer
    Reserved1 As Integer
    Reserved2 As Integer
    szPathName(0 To (OFS_MAXPATHNAME - 1)) As Byte
End Type

Public Enum FILE_ID_TYPE
    FileIdType
    ObjectIdType
    ExtendedFileIdType
    MaximumFileIdType
End Enum
Public Type FILE_ID_DESCRIPTOR
    dwSize As Long ' Size of the struct
    Type As FILE_ID_TYPE ' Describes the type of identifier passed in.
    '    union {
    '        LARGE_INTEGER FileId;
    '        GUID ObjectId;
    '#if (_WIN32_WINNT >= _WIN32_WINNT_WIN8)
    '        FILE_ID_128 ExtendedFileId;
    '#endif
    '    } DUMMYUNIONNAME;
    FileIdUnion(15) As Byte
End Type

Public Enum OpenFileRawFlags
    CREATE_FOR_IMPORT = (1)
    CREATE_FOR_DIR = (2)
    OVERWRITE_HIDDEN = (4)
    EFSRPC_SECURE_ONLY = (8)
    EFS_DROP_ALTERNATE_STREAMS = (&H10)
End Enum

Public Const EFS_USE_RECOVERY_KEYS = &H1

Public Enum FailFastExceptionFlags
    FAIL_FAST_GENERATE_EXCEPTION_ADDRESS = &H1
    FAIL_FAST_NO_HARD_ERROR_DLG = &H2
End Enum

Public Const NUMA_NO_PREFERRED_NODE As Long = -1

Public DeclareWide PtrSafe Function CreateTransaction Lib "ktmw32" (lpTransactionAttributes As SECURITY_ATTRIBUTES, UOW As UUID, Optional ByVal CreateOptions As TRANSACTION_OPTION_FLAGS, Optional ByVal IsolationLevel As Long, Optional ByVal IsolationFlags As Long, Optional ByVal Timeout As Long, Optional ByVal Description As String) As LongPtr
Public Declare PtrSafe Function CommitTransaction Lib "ktmw32" (ByVal TransactionHandle As LongPtr) As BOOL
Public Declare PtrSafe Function CommitTransactionAsync Lib "ktmw32" (ByVal TransactionHandle As LongPtr) As BOOL
Public Declare PtrSafe Function RollbackTransaction Lib "ktmw32" (ByVal TransactionHandle As LongPtr) As BOOL
Public Declare PtrSafe Function RollbackTransactionAsync Lib "ktmw32" (ByVal TransactionHandle As LongPtr) As BOOL
Public Declare PtrSafe Function OpenTransaction Lib "ktmw32" (ByVal dwDesiredAccess As TRANSACTION_OBJECT_RIGHTS, TransactionId As UUID) As LongPtr
Public Declare PtrSafe Function GetTransactionId Lib "ktmw32" (ByVal TransactionHandle As LongPtr, TransactionId As UUID) As BOOL
Public DeclareWide PtrSafe Function GetTransactionInformation Lib "ktmw32" (ByVal TransactionHandle As LongPtr, Optional Outcome As TRANSACTION_OUTCOME, Optional IsolationLevel As Long, Optional IsolationFlags As Long, Optional Timeout As Long, Optional ByVal BufferLength As Long, Optional ByVal Description As String) As BOOL
Public DeclareWide PtrSafe Function SetTransactionInformation Lib "ktmw32" (ByVal TransactionHandle As LongPtr, Optional ByVal IsolationLevel As Long, Optional ByVal IsolationFlags As Long, Optional ByVal Timeout As Long, Optional ByVal Description As String) As BOOL
Public DeclareWide PtrSafe Function CreateTransactionManager Lib "ktmw32" (lpTransactionAttributes As SECURITY_ATTRIBUTES, ByVal LogFileName As String, [TypeHint(TRANSACTION_MANAGER_OPTIONS)] Optional ByVal CreateOptions As Long, Optional ByVal CommitStrength As Long) As LongPtr
Public DeclareWide PtrSafe Function OpenTransactionManager Lib "ktmw32" (ByVal LogFileName As String, [TypeHint(TransactionManagerRights)] ByVal DesiredAccess As Long, Optional ByVal OpenOptions As Long) As LongPtr
Public Declare PtrSafe Function OpenTransactionManagerById Lib "ktmw32" (TransactionManagerId As UUID, [TypeHint(TransactionManagerRights)] ByVal DesiredAccess As Long, Optional ByVal OpenOptions As Long) As LongPtr
Public DeclareWide PtrSafe Function RenameTransactionManager Lib "ktmw32" (ByVal LogFileName As String, ExistingTransactionManagerGuid As UUID) As BOOL
Public Declare PtrSafe Function RollforwardTransactionManager Lib "ktmw32" (ByVal TransactionManagerHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function RecoverTransactionManager Lib "ktmw32" (ByVal TransactionManagerHandle As LongPtr) As BOOL
Public Declare PtrSafe Function GetCurrentClockTransactionManager Lib "ktmw32" (ByVal TransactionManagerHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function GetTransactionManagerId Lib "ktmw32" (ByVal TransactionManagerHandle As LongPtr, TransactionManagerId As UUID) As BOOL
Public DeclareWide PtrSafe Function CreateResourceManager Lib "ktmw32" (lpResourceManagerAttributes As SECURITY_ATTRIBUTES, ResourceManagerId As UUID, ByVal CreateOptions As TRANSACTION_MANAGER_RESOURCE_OPTIONS, ByVal TmHandle As LongPtr, Optional ByVal Description As String) As LongPtr
Public Declare PtrSafe Function OpenResourceManager Lib "ktmw32" ([TypeHint(ResourceManagerObjectRights)] ByVal DesiredAccess As Long, ByVal TmHandle As LongPtr, ResourceManagerId As UUID) As LongPtr
Public Declare PtrSafe Function RecoverResourceManager Lib "ktmw32" (ByVal ResourceManagerHandle As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetNotificationResourceManager Lib "ktmw32" (ByVal ResourceManagerHandle As LongPtr, TransactionNotification As Any, ByVal NotificationLength As Long, Optional ByVal dwMilliseconds As Long, Optional ByRef ReturLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetNotificationResourceManagerAsync Lib "ktmw32" (ByVal ResourceManagerHandle As LongPtr, TransactionNotification As Any, ByVal TransactionNotificationLength As Long, ReturLength As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function SetResourceManagerCompletionPort Lib "ktmw32" (ByVal ResourceManagerHandle As LongPtr, ByVal IoCompletionPortHandle As LongPtr, ByVal CompletionKey As LongPtr) As BOOL
Public Declare PtrSafe Function CreateEnlistment Lib "ktmw32" (lpResourceManagerAttributes As SECURITY_ATTRIBUTES, ByVal ResourceManagerHandle As LongPtr, ByVal NotificationMask As NOTIFICATION_MASK, Optional ByVal CreateOptions As TRANSACTION_ENLISTMENT_OPTIONS, Optional ByVal EnlistmentKey As LongPtr) As LongPtr
Public Declare PtrSafe Function OpenEnlistment Lib "ktmw32" ([TypeHint(EnlistmentObjectRights)] ByVal DesiredAccess As Long, ByVal ResourceManagerHandle As LongPtr, EnlistmentId As UUID) As LongPtr
Public Declare PtrSafe Function RecoverEnlistment Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, ByVal EnlistmentKey As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetEnlistmentRecoveryInformation Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, ByVal BufferSize As Long, Buffer As Any, BufferUsed As Long) As BOOL
Public Declare PtrSafe Function GetEnlistmentId Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, EnlistmentId As UUID) As BOOL
Public DeclareWide PtrSafe Function SetEnlistmentRecoveryInformation Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, ByVal BufferSize As Long, Buffer As Any) As BOOL
Public Declare PtrSafe Function PrepareEnlistment Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function PrePrepareEnlistment Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function CommitEnlistment Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function RollbackEnlistment Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function PrePrepareComplete Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function PrepareComplete Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function ReadOnlyEnlistment Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function CommitComplete Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function RollbackComplete Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL
Public Declare PtrSafe Function SinglePhaseReject Lib "ktmw32" (ByVal EnlistmentHandle As LongPtr, TmVirtualClock As LARGE_INTEGER) As BOOL


'namespaceapi.h
Public Enum PrivateNamespaceFlags
    PRIVATE_NAMESPACE_FLAG_DESTROY = &H1
End Enum
Public Enum CreateBoundaryDesciptorFlags
    CREATE_BOUNDARY_DESCRIPTOR_ADD_APPCONTAINER_SID = &H1
End Enum
Public Declare PtrSafe Function CreatePrivateNamespaceA Lib "kernel32" (lpPrivateNamespaceAttributes As SECURITY_ATTRIBUTES, lpBoundaryDescriptor As Any, ByVal lpAliasPrefix As String) As LongPtr
Public Declare PtrSafe Function CreatePrivateNamespaceW Lib "kernel32" (lpPrivateNamespaceAttributes As SECURITY_ATTRIBUTES, lpBoundaryDescriptor As Any, ByVal lpAliasPrefix As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreatePrivateNamespace Lib "kernel32" Alias "CreatePrivateNamespaceW" (lpPrivateNamespaceAttributes As SECURITY_ATTRIBUTES, lpBoundaryDescriptor As Any, ByVal lpAliasPrefix As String) As LongPtr
Public Declare PtrSafe Function OpenPrivateNamespaceA Lib "kernel32" (lpBoundaryDescriptor As Any, ByVal lpAliasPrefix As String) As LongPtr
Public Declare PtrSafe Function OpenPrivateNamespaceW Lib "kernel32" (lpBoundaryDescriptor As Any, ByVal lpAliasPrefix As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenPrivateNamespace Lib "kernel32" Alias "OpenPrivateNamespaceW" (lpBoundaryDescriptor As Any, ByVal lpAliasPrefix As String) As LongPtr
Public Declare PtrSafe Function ClosePrivateNamespace Lib "kernel32" (ByVal Handle As LongPtr, ByVal Flags As PrivateNamespaceFlags) As Byte
Public Declare PtrSafe Function CreateBoundaryDescriptorA Lib "kernel32" (ByVal Name As String, ByVal Flags As CreateBoundaryDesciptorFlags) As LongPtr
Public Declare PtrSafe Function CreateBoundaryDescriptorW Lib "kernel32" (ByVal Name As LongPtr, ByVal Flags As CreateBoundaryDesciptorFlags) As LongPtr
Public DeclareWide PtrSafe Function CreateBoundaryDescriptor Lib "kernel32" Alias "CreateBoundaryDescriptorW" (ByVal Name As String, ByVal Flags As CreateBoundaryDesciptorFlags) As LongPtr
Public Declare PtrSafe Function AddSIDToBoundaryDescriptor Lib "kernel32" (BoundaryDescriptor As LongPtr, ByVal RequiredSid As LongPtr) As BOOL
Public Declare PtrSafe Sub DeleteBoundaryDescriptor Lib "kernel32" (ByVal BoundaryDescriptor As LongPtr)
Public Declare PtrSafe Function AddIntegrityLabelToBoundaryDescriptor Lib "kernel32" (BoundaryDescriptor As LongPtr, ByVal IntegrityLabel As LongPtr) As BOOL






Public Delegate Sub FileIOCompletionRoutine (ByVal dwErrorCode As Long, ByVal dwNumberOfBytesTransfered As Long, ByVal lpOverlapped As LongPtr)
Public Declare PtrSafe Function WriteFile Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToWrite As Long, lpNumberOfBytesWritten As Long, lpOverlapped As OVERLAPPED) As BOOL
' Public Declare PtrSafe Function WriteFileEx Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToWrite As Long, lpNumberOfBytesWritten As Long, lpOverlapped As OVERLAPPED, ByVal lpCompletionRoutine As FileIOCompletionRoutine) As BOOL
Public Declare PtrSafe Function WriteFileEx Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToWrite As Long, lpNumberOfBytesWritten As Long, lpOverlapped As OVERLAPPED, ByVal lpCompletionRoutine As LongPtr) As BOOL
Public Declare PtrSafe Function WriteFileGather Lib "kernel32" (ByVal hFile As LongPtr, aSegmentArray As FILE_SEGMENT_ELEMENT, ByVal nNumberOfBytesToWrite As Long, lpReserved As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function ReadFile Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToRead As Long, lpNumberOfBytesRead As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function ReadFileEx Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToRead As Long, lpNumberOfBytesRead As Long, lpOverlapped As OVERLAPPED, ByVal lpCompletionRoutine As LongPtr) As BOOL
Public Declare PtrSafe Function ReadFileScatter Lib "kernel32" (ByVal hFile As LongPtr, aSegmentArray As FILE_SEGMENT_ELEMENT, ByVal nNumberOfBytesToRead As Long, lpReserved As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function SetFilePointer Lib "kernel32" (ByVal hFile As LongPtr, ByVal lDistanceToMove As Long, lpDistanceToMoveHigh As Long, ByVal dwMoveMethod As FileMoveMethods) As Long
Public Declare PtrSafe Function SetFilePointerEx Lib "kernel32" (ByVal hFile As LongPtr, ByVal lDistanceToMove As LongLong, lpDistanceToMoveHigh As LongLong, ByVal dwMoveMethod As FileMoveMethods) As BOOL
Public Declare PtrSafe Function SetEndOfFile Lib "kernel32" (ByVal hFile As LongPtr) As Long
Public Declare PtrSafe Function CreateFileA Lib "kernel32" (ByVal lpFileName As String, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [TypeHint(FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits)] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr) As LongPtr
Public Declare PtrSafe Function CreateFileW Lib "kernel32" (ByVal lpFileName As LongPtr, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [TypeHint(FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits)] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateFile Lib "kernel32" Alias "CreateFileW" (ByVal lpFileName As String, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [TypeHint(FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits)] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr) As LongPtr
Public Declare PtrSafe Function CreateFileTransactedA Lib "kernel32" (ByVal lpFileName As String, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [TypeHint(FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits)] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr, ByVal hTransaction As LongPtr, [TypeHint(TXFS_MINIVERSION)] pusMiniVersion As Integer, lpExtendedParameter As Any) As LongPtr
Public Declare PtrSafe Function CreateFileTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [TypeHint(FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits)] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr, ByVal hTransaction As LongPtr, [TypeHint(TXFS_MINIVERSION)] pusMiniVersion As Integer, lpExtendedParameter As Any) As LongPtr
Public DeclareWide PtrSafe Function CreateFileTransacted Lib "kernel32" Alias "CreateFileTransactedW" (ByVal lpFileName As String, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [TypeHint(FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits)] ByVal dwFlagsAndAttributes As Long, ByVal hTemplateFile As LongPtr, ByVal hTransaction As LongPtr, [TypeHint(TXFS_MINIVERSION)] pusMiniVersion As Integer, lpExtendedParameter As Any) As LongPtr
Public Declare PtrSafe Function CreateFile2 Lib "kernel32" (ByVal lpFileName As LongPtr, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, ByVal dwCreationDisposition As CreateFileDisposition, pCreateExParams As CREATEFILE2_EXTENDED_PARAMETERS) As LongPtr
[Description("Note: This function has limited capabilities and is not recommended. For new application development, use the CreateFile function.")]
Public Declare PtrSafe Function OpenFile Lib "kernel32" (ByVal lpFileName As String, lpReOpenBuff As OFSTRUCT, ByVal uStyle As OPEN_FILE_FLAGS) As Long
Public Declare PtrSafe Function OpenFileById Lib "kernel32" (ByVal hVolumeHint As LongPtr, lpFileId As FILE_ID_DESCRIPTOR, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal dwCreationDisposition As CreateFileDisposition, [TypeHint(FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits)] ByVal dwFlagsAndAttributes As Long) As LongPtr
Public Declare PtrSafe Function ReOpenFile Lib "kernel32" (ByVal hOriginalFile As LongPtr, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwShareMode As FileShareMode, [TypeHint(FILE_FLAGS, FILE_ATTRIBUTES, SQOS_Bits)] ByVal dwFlagsAndAttributes As Long) As Long
Public Declare PtrSafe Function FlushFileBuffers Lib "kernel32" (ByVal hFile As LongPtr) As Long
Public Declare PtrSafe Function BackupRead Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToRead As Long, lpNumberOfBytesRead As Long, ByVal bAbort As BOOL, ByVal bProcessSecurity As BOOL, lpContext As LongPtr) As BOOL
Public Declare PtrSafe Function BackupSeek Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwLowBytesToSeek As Long, ByVal dwHighBytesToSeek As Long, lpdwLowByteSeeked As Long, lpdwHighByteSeeked As Long, lpContext As LongPtr) As Long
Public Declare PtrSafe Function BackupWrite Lib "kernel32" (ByVal hFile As LongPtr, lpBuffer As Any, ByVal nNumberOfBytesToWrite As Long, lpNumberOfBytesWritten As Long, ByVal bAbort As BOOL, ByVal bProcessSecurity As BOOL, lpContext As LongPtr) As BOOL
Public Declare PtrSafe Function LockFile Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwFileOffsetLow As Long, ByVal dwFileOffsetHigh As Long, ByVal nNumberOfBytesToLockLow As Long, ByVal nNumberOfBytesToLockHigh As Long) As BOOL
Public Declare PtrSafe Function LockFileEx Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwFlags As LockFileExFlags, ByVal dwReserved As Long, ByVal nNumberOfBytesToLockLow As Long, ByVal nNumberOfBytesToLockHigh As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function UnlockFile Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwFileOffsetLow As Long, ByVal dwFileOffsetHigh As Long, ByVal nNumberOfBytesToUnlockLow As Long, ByVal nNumberOfBytesToUnlockHigh As Long) As BOOL
Public Declare PtrSafe Function UnlockFileEx Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwReserved As Long, ByVal nNumberOfBytesToUnlockLow As Long, ByVal nNumberOfBytesToUnlockHigh As Long, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function SetFileValidData Lib "kernel32" (ByVal hFile As LongPtr, ByVal ValidDataLength As LongLong) As BOOL
Public Declare PtrSafe Function GetFileSize Lib "kernel32" (ByVal hFile As LongPtr, lpFileSizeHigh As Long) As Long
Public Declare PtrSafe Function GetFileSizeEx Lib "kernel32" (ByVal hFile As LongPtr, lpFileSizeHigh As LongLong) As BOOL
Public Declare PtrSafe Function GetCompressedFileSizeA Lib "kernel32" (ByVal lpFileName As String, lpFileSizeHigh As Long) As Long
Public Declare PtrSafe Function GetCompressedFileSizeW Lib "kernel32" (ByVal lpFileName As LongPtr, lpFileSizeHigh As Long) As Long
Public DeclareWide PtrSafe Function GetCompressedFileSize Lib "kernel32" Alias "GetCompressedFileSizeW" (ByVal lpFileName As String, lpFileSizeHigh As Long) As Long
Public Declare PtrSafe Function GetCompressedFileSizeTransactedA Lib "kernel32" (ByVal lpFileName As String, lpFileSizeHigh As Long, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function GetCompressedFileSizeTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, lpFileSizeHigh As Long, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function GetCompressedFileSizeTransacted Lib "kernel32" Alias "GetCompressedFileSizeTransactedW" (ByVal lpFileName As String, lpFileSizeHigh As Long, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function DeleteFile Lib "kernel32" Alias "DeleteFileW" (ByVal lpFileName As String) As BOOL
Public Declare PtrSafe Function DeleteFileW Lib "kernel32" (ByVal lpFileName As LongPtr) As BOOL
Public Declare PtrSafe Function DeleteFileA Lib "kernel32" (ByVal lpFileName As String) As BOOL
Public DeclareWide PtrSafe Function DeleteFileTransacted Lib "kernel32" Alias "DeleteFileTransactedW" (ByVal lpFileName As String, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function DeleteFileTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function DeleteFileTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function GetFileType Lib "kernel32" (ByVal hFile As LongPtr) As FileBaseType
Public Declare PtrSafe Function CreateFileMappingA Lib "kernel32" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [TypeHint(MemProtectFlags, NTSectionFlags)] ByVal flProtect As Long, ByVal dwMaximumSizeHigh As Long, ByVal dwMaximumSizeLow As Long, Optional ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateFileMappingW Lib "kernel32" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [TypeHint(MemProtectFlags, NTSectionFlags)] ByVal flProtect As Long, ByVal dwMaximumSizeHigh As Long, ByVal dwMaximumSizeLow As Long, Optional ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateFileMapping Lib "kernel32" Alias "CreateFileMappingW" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [TypeHint(MemProtectFlags, NTSectionFlags)] ByVal flProtect As Long, ByVal dwMaximumSizeHigh As Long, ByVal dwMaximumSizeLow As Long, Optional ByVal lpName As String) As LongPtr
Public DeclareWide PtrSafe Function CreateFileMapping2 Lib "kernelbase" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [TypeHint(GenericRights, FileMapFlags)] ByVal DesiredAccess As Long, ByVal PageProtection As MemProtectFlags, ByVal AllocationAttributes As NTSectionFlags, ByVal MaximumSize As LongLong, ByVal Name As String, ExtendedParameters As MEM_EXTENDED_PARAMETER, ByVal ParameterCount As Long) As LongPtr
Public Declare PtrSafe Function CreateFileMappingNumaA Lib "kernel32" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [TypeHint(MemProtectFlags, NTSectionFlags)] ByVal flProtect As Long, ByVal dwMaximumSizeHigh As Long, ByVal dwMaximumSizeLow As Long, ByVal lpName As String, ByVal nndPreferred As Long) As LongPtr
Public Declare PtrSafe Function CreateFileMappingNumaW Lib "kernel32" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [TypeHint(MemProtectFlags, NTSectionFlags)] ByVal flProtect As Long, ByVal dwMaximumSizeHigh As Long, ByVal dwMaximumSizeLow As Long, ByVal lpName As LongPtr, ByVal nndPreferred As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateFileMappingNuma Lib "kernel32" Alias "CreateFileMappingNumaW" (ByVal hFile As LongPtr, lpFileMappingAttributes As SECURITY_ATTRIBUTES, [TypeHint(MemProtectFlags, NTSectionFlags)] ByVal flProtect As Long, ByVal dwMaximumSizeHigh As Long, ByVal dwMaximumSizeLow As Long, ByVal lpName As String, ByVal nndPreferred As Long) As LongPtr
Public Declare PtrSafe Function OpenFileMappingA Lib "kernel32" ([TypeHint(GenericRights, FileMapFlags)] ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function OpenFileMappingW Lib "kernel32" ([TypeHint(GenericRights, FileMapFlags)] ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenFileMapping Lib "kernel32" Alias "OpenFileMappingW" ([TypeHint(GenericRights, FileMapFlags)] ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function MapViewOfFile Lib "kernel32" (ByVal hFileMappingObject As LongPtr, ByVal dwDesiredAccess As FileMapFlags, ByVal dwFileOffsetHigh As Long, ByVal dwFileOffsetLow As Long, ByVal dwNumberOfBytesToMap As LongPtr) As LongPtr
Public Function MapViewOfFile2(ByVal FileMappingHandle As LongPtr, ByVal ProcessHandle As LongPtr, ByVal Offset As LongLong, ByVal BaseAddress As LongPtr, ByVal ViewSize As LongPtr, ByVal AllocationType As MemAllocType, ByVal PageProtection As MemProtectFlags) As LongPtr
    Return MapViewOfFileNuma2(FileMappingHandle, ProcessHandle, Offset, BaseAddress, ViewSize, AllocationType, PageProtection, NUMA_NO_PREFERRED_NODE)
End Function
Public Declare PtrSafe Function MapViewOfFileNuma2 Lib "kernelbase" (ByVal FileMappingHandle As LongPtr, ByVal ProcessHandle As LongPtr, ByVal Offset As LongLong, ByVal BaseAddress As LongPtr, ByVal ViewSize As LongPtr, ByVal AllocationType As MemAllocType, ByVal PageProtection As MemProtectFlags, ByVal PreferredNode As Long) As LongPtr
Public Declare PtrSafe Function MapViewOfFile3 Lib "kernelbase" (ByVal FileMappingHandle As LongPtr, ByVal ProcessHandle As LongPtr, ByVal Offset As LongLong, ByVal BaseAddress As LongPtr, ByVal ViewSize As LongPtr, ByVal AllocationType As MemAllocType, ByVal PageProtection As MemProtectFlags, ExtendedParameters As MEM_EXTENDED_PARAMETER, ByVal ParameterCount As Long) As LongPtr
Public Declare PtrSafe Function MapViewOfFileEx Lib "kernel32" (ByVal hFileMappingObject As LongPtr, ByVal dwDesiredAccess As FileMapFlags, ByVal dwFileOffsetHigh As Long, ByVal dwFileOffsetLow As Long, ByVal dwNumberOfBytesToMap As LongPtr, Optional ByVal lpBaseAddress As LongPtr) As LongPtr
Public Declare PtrSafe Function FlushViewOfFile Lib "kernel32" (ByVal lpBaseAddress As LongPtr, ByVal dwNumberOfBytesToFlush As LongPtr) As BOOL
Public Declare PtrSafe Function UnmapViewOfFile Lib "kernel32" (ByVal BaseAddress As LongPtr) As BOOL
Public Declare PtrSafe Function UnmapViewOfFileEx Lib "kernel32" (ByVal BaseAddress As LongPtr, ByVal UnmapFlags As MemAllocType) As BOOL
Public Declare PtrSafe Function UnmapViewOfFile2 Lib "kernelbase" (ByVal Process As LongPtr, ByVal BaseAddress As LongPtr, ByVal UnmapFlags As MemAllocType) As BOOL
Public Declare PtrSafe Function CopyFileA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal bFailIfExists As BOOL) As BOOL
Public Declare PtrSafe Function CopyFileW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal bFailIfExists As BOOL) As BOOL
Public DeclareWide PtrSafe Function CopyFile Lib "kernel32" Alias "CopyFileW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal bFailIfExists As BOOL) As BOOL
Public Declare PtrSafe Function CopyFileExA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags) As BOOL
Public DeclareWide PtrSafe Function CopyFileExW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags) As BOOL
Public DeclareWide PtrSafe Function CopyFileEx Lib "kernel32" Alias "CopyFileExW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags) As BOOL
Public Declare PtrSafe Function CopyFileTransactedA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function CopyFileTransactedW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function CopyFileTransacted Lib "kernel32" Alias "CopyFileTransactedW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgresRoutine As LongPtr, lpData As Any, pbCancel As BOOL, ByVal dwCopyFlags As CopyFileFlags, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function CopyFile2 Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, pExtendedParameters As Any) As BOOL
Public Declare PtrSafe Function MoveFileA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String) As BOOL
Public Declare PtrSafe Function MoveFileW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function MoveFile Lib "kernel32" Alias "MoveFileW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String) As BOOL
Public Declare PtrSafe Function MoveFileExA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal dwFlags As MoveFileExFlags) As BOOL
Public Declare PtrSafe Function MoveFileExW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal dwFlags As MoveFileExFlags) As BOOL
Public DeclareWide PtrSafe Function MoveFileEx Lib "kernel32" Alias "MoveFileExW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal dwFlags As MoveFileExFlags) As BOOL
Public Declare PtrSafe Function MoveFileWithProgressA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags) As BOOL
Public Declare PtrSafe Function MoveFileWithProgressW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags) As BOOL
Public DeclareWide PtrSafe Function MoveFileWithProgress Lib "kernel32" Alias "MoveFileWithProgressW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags) As BOOL
Public Declare PtrSafe Function MoveFileTransactedA Lib "kernel32" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function MoveFileTransactedW Lib "kernel32" (ByVal lpExistingFileName As LongPtr, ByVal lpNewFileName As LongPtr, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function MoveFileTransacted Lib "kernel32" Alias "MoveFileTransactedW" (ByVal lpExistingFileName As String, ByVal lpNewFileName As String, ByVal lpProgressRoutine As LongPtr, lpData As Any, ByVal dwFlags As MoveFileExFlags, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function ReplaceFileA Lib "kernel32" (ByVal lpReplacedFileName As String, ByVal lpReplacementFileName As String, ByVal lpBackupFileName As String, ByVal dwReplaceFileFlags As ReplaceFileFlags, ByVal lpExclude As LongPtr, ByVal lpReserved As LongPtr) As BOOL
Public Declare PtrSafe Function ReplaceFileW Lib "kernel32" (ByVal lpReplacedFileName As LongPtr, ByVal lpReplacementFileName As LongPtr, ByVal lpBackupFileName As LongPtr, ByVal dwReplaceFileFlags As ReplaceFileFlags, ByVal lpExclude As LongPtr, ByVal lpReserved As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ReplaceFile Lib "kernel32" Alias "ReplaceFileW" (ByVal lpReplacedFileName As String, ByVal lpReplacementFileName As String, ByVal lpBackupFileName As String, ByVal dwReplaceFileFlags As ReplaceFileFlags, ByVal lpExclude As LongPtr, ByVal lpReserved As LongPtr) As BOOL
Public Declare PtrSafe Function GetFullPathNameA Lib "kernel32" (ByVal lpFileName As String, ByVal nBufferLength As Long, ByVal lpBuffer As String, lpFilePart As String) As Long
Public Declare PtrSafe Function GetFullPathNameW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr, lpFilePart As LongPtr) As Long
Public DeclareWide PtrSafe Function GetFullPathName Lib "kernel32" Alias "GetFullPathNameW" (ByVal lpFileName As String, ByVal nBufferLength As Long, ByVal lpBuffer As String, lpFilePart As LongPtr) As Long
Public Declare PtrSafe Function GetFullPathNameTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal nBufferLength As Long, ByVal lpBuffer As String, lpFilePart As String, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function GetFullPathNameTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr, lpFilePart As LongPtr, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function GetFullPathNameTransacted Lib "kernel32" Alias "GetFullPathNameTransactedW" (ByVal lpFileName As String, ByVal nBufferLength As Long, ByVal lpBuffer As String, lpFilePart As LongPtr, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function GetLongPathNameA Lib "kernel32" (ByVal lpszShortPath As String, ByVal lpszLongPath As String, ByVal cchBuffer As LongPtr) As Long
Public Declare PtrSafe Function GetLongPathNameW Lib "kernel32" (ByVal lpszShortPath As LongPtr, ByVal lpszLongPath As LongPtr, ByVal cchBuffer As LongPtr) As Long
Public DeclareWide PtrSafe Function GetLongPathName Lib "kernel32" Alias "GetLongPathNameW" (ByVal lpszShortPath As String, ByVal lpszLongPath As String, ByVal cchBuffer As LongPtr) As Long
Public Declare PtrSafe Function GetLongPathNameTransactedA Lib "kernel32" (ByVal lpszShortPath As String, ByVal lpszLongPath As String, ByVal cchBuffer As LongPtr, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function GetLongPathNameTransactedW Lib "kernel32" (ByVal lpszShortPath As LongPtr, ByVal lpszLongPath As LongPtr, ByVal cchBuffer As LongPtr, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function GetLongPathNameTransacted Lib "kernel32" Alias "GetLongPathNameTransactedW" (ByVal lpszShortPath As String, ByVal lpszLongPath As String, ByVal cchBuffer As LongPtr, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function GetShortPathNameA Lib "kernel32" (ByVal lpszLongPath As String, ByVal lpszShortPath As String, ByVal cchBuffer As Long) As Long
Public Declare PtrSafe Function GetShortPathNameW Lib "kernel32" (ByVal lpszLongPath As LongPtr, ByVal lpszShortPath As LongPtr, ByVal cchBuffer As Long) As Long
Public DeclareWide PtrSafe Function GetShortPathName Lib "kernel32" Alias "GetShortPathNameW" (ByVal lpszLongPath As String, ByVal lpszShortPath As String, ByVal cchBuffer As Long) As Long
Public Declare PtrSafe Function GetTempPathA Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function GetTempPathW Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr) As Long
Public DeclareWide PtrSafe Function GetTempPath Lib "kernel32" Alias "GetTempPathW" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function GetTempPath2A Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function GetTempPath2W Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr) As Long
Public DeclareWide PtrSafe Function GetTempPath2 Lib "kernel32" Alias "GetTempPath2W" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function GetTempFileNameA Lib "kernel32" (ByVal lpPathName As String, ByVal lpPrefixString As String, ByVal uUnique As Long, ByVal lpTempFileName As String) As Long
Public Declare PtrSafe Function GetTempFileNameW Lib "kernel32" (ByVal lpPathName As LongPtr, ByVal lpPrefixString As LongPtr, ByVal uUnique As Long, ByVal lpTempFileName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetTempFileName Lib "kernel32" Alias "GetTempFileNameW" (ByVal lpPathName As String, ByVal lpPrefixString As String, ByVal uUnique As Long, ByVal lpTempFileName As String) As Long
Public Declare PtrSafe Function GetFileTime Lib "kernel32" (ByVal hFile As LongPtr, lpCreationTime As FILETIME, lpLastAccessTime As FILETIME, lpLastWriteTime As FILETIME) As BOOL
Public Declare PtrSafe Function SetFileTime Lib "kernel32" (ByVal hFile As LongPtr, lpCreationTime As FILETIME, lpLastAccessTime As FILETIME, lpLastWriteTime As FILETIME) As BOOL
Public Declare PtrSafe Function GetFinalPathNameByHandleA Lib "kernel32" (ByVal hFile As LongPtr, ByVal lpszFilePath As String, ByVal cchFilePath As Long, ByVal dwFlags As GetFinalPathNameFlags) As Long
Public Declare PtrSafe Function GetFinalPathNameByHandleW Lib "kernel32" (ByVal hFile As LongPtr, ByVal lpszFilePath As LongPtr, ByVal cchFilePath As Long, ByVal dwFlags As GetFinalPathNameFlags) As Long
Public DeclareWide PtrSafe Function GetFinalPathNameByHandle Lib "kernel32" Alias "GetFinalPathNameByHandleW" (ByVal hFile As LongPtr, ByVal lpszFilePath As String, ByVal cchFilePath As Long, ByVal dwFlags As GetFinalPathNameFlags) As Long

Public Declare PtrSafe Function AreShortNamesEnabled Lib "kernel32" (ByVal Handle As LongPtr, Enabled As BOOL) As BOOL
Public Declare PtrSafe Function GetCurrentDirectoryA Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function GetCurrentDirectoryW Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr) As Long
Public DeclareWide PtrSafe Function GetCurrentDirectory Lib "kernel32" Alias "GetCurrentDirectoryW" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function SetCurrentDirectoryA Lib "kernel32" (ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function SetCurrentDirectoryW Lib "kernel32" (ByVal lpPathName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetCurrentDirectory Lib "kernel32" Alias "SetCurrentDirectoryW" (ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function RemoveDirectoryA Lib "kernel32" (ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function RemoveDirectoryW Lib "kernel32" (ByVal lpPathName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function RemoveDirectory Lib "kernel32" Alias "RemoveDirectoryW" (ByVal lpPathName As String) As BOOL
Public Declare PtrSafe Function RemoveDirectoryTransactedA Lib "kernel32" (ByVal lpPathName As String, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function RemoveDirectoryTransactedW Lib "kernel32" (ByVal lpPathName As LongPtr, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function RemoveDirectoryTransacted Lib "kernel32" Alias "RemoveDirectoryTransactedW" (ByVal lpPathName As String, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function CreateDirectoryW Lib "kernel32" (ByVal lpPathName As LongPtr, lpSecurityAttributes As SECURITY_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function CreateDirectoryA Lib "kernel32" (ByVal lpPathName As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As BOOL
Public DeclareWide PtrSafe Function CreateDirectory Lib "kernel32" Alias "CreateDirectoryW" (ByVal lpPathName As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function CreateDirectoryExA Lib "kernel32" (ByVal lpTemplateDirectory As String, ByVal lpNewDirectory As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As Long
Public Declare PtrSafe Function CreateDirectoryExW Lib "kernel32" (ByVal lpTemplateDirectory As LongPtr, ByVal lpNewDirectory As LongPtr, lpSecurityAttributes As SECURITY_ATTRIBUTES) As Long
Public DeclareWide PtrSafe Function CreateDirectoryEx Lib "kernel32" Alias "CreateDirectoryExW" (ByVal lpTemplateDirectory As String, ByVal lpNewDirectory As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As Long
Public Declare PtrSafe Function CreateDirectoryTransactedA Lib "kernel32" (ByVal lpTemplateDirectory As String, ByVal lpNewDirectory As String, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function CreateDirectoryTransactedW Lib "kernel32" (ByVal lpTemplateDirectory As LongPtr, ByVal lpNewDirectory As LongPtr, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function CreateDirectoryTransacted Lib "kernel32" Alias "CreateDirectoryTransactedW" (ByVal lpTemplateDirectory As String, ByVal lpNewDirectory As String, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function FindFirstChangeNotificationA Lib "kernel32" (ByVal lpPathName As String, ByVal bWatchSubtree As BOOL, ByVal dwNotifyFilter As FILE_NOTIFY_CHANGE) As LongPtr
Public Declare PtrSafe Function FindFirstChangeNotificationW Lib "kernel32" (ByVal lpPathName As LongPtr, ByVal bWatchSubtree As BOOL, ByVal dwNotifyFilter As FILE_NOTIFY_CHANGE) As LongPtr
Public DeclareWide PtrSafe Function FindFirstChangeNotification Lib "kernel32" Alias "FindFirstChangeNotificationW" (ByVal lpPathName As String, ByVal bWatchSubtree As BOOL, ByVal dwNotifyFilter As FILE_NOTIFY_CHANGE) As LongPtr
Public Declare PtrSafe Function FindNextChangeNotification Lib "kernel32" (ByVal hChangeHandle As LongPtr) As BOOL
Public Declare PtrSafe Function FindCloseChangeNotification Lib "kernel32" (ByVal hChangeHandle As LongPtr) As BOOL
Public Declare PtrSafe Function ReadDirectoryChangesW Lib "kernel32" (ByVal hDirectory As LongPtr, ByVal lpBuffer As LongPtr, ByVal nBufferLength As Long, ByVal bWatchSubtree As BOOL, ByVal dwNotifyFilter As FILE_NOTIFY_CHANGE, lpBytesReturned As Long, lpOverlapped As OVERLAPPED, Optional ByVal lpCompletionRoutine As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ReadDirectoryChanges Lib "kernel32" Alias "ReadDirectoryChangesW" (ByVal hDirectory As LongPtr, ByVal lpBuffer As LongPtr, ByVal nBufferLength As Long, ByVal bWatchSubtree As BOOL, ByVal dwNotifyFilter As FILE_NOTIFY_CHANGE, lpBytesReturned As Long, lpOverlapped As OVERLAPPED, Optional ByVal lpCompletionRoutine As LongPtr) As BOOL
Public Declare PtrSafe Function ReadDirectoryChangesExW Lib "kernel32" (ByVal hDirectory As LongPtr, lpBuffer As Any, ByVal nBufferLength As Long, ByVal bWatchSubtree As BOOL, ByVal dwNotifyFilter As FILE_NOTIFY_CHANGE, lpBytesReturned As Long, lpOverlapped As OVERLAPPED, ByVal lpCompletionRoutine As LongPtr, ByVal ReadDirectoryNotifyInformationClass As READ_DIRECTORY_NOTIFY_INFORMATION_CLASS) As BOOL
Public DeclareWide PtrSafe Function ReadDirectoryChangesEx Lib "kernel32" Alias "ReadDirectoryChangesExW" (ByVal hDirectory As LongPtr, lpBuffer As Any, ByVal nBufferLength As Long, ByVal bWatchSubtree As BOOL, ByVal dwNotifyFilter As FILE_NOTIFY_CHANGE, lpBytesReturned As Long, lpOverlapped As OVERLAPPED, ByVal lpCompletionRoutine As LongPtr, ByVal ReadDirectoryNotifyInformationClass As READ_DIRECTORY_NOTIFY_INFORMATION_CLASS) As BOOL

' typedef
' VOID
' (WINAPI *LPOVERLAPPED_COMPLETION_ROUTINE)(
    ' _In_    DWORD dwErrorCode,
    ' _In_    DWORD dwNumberOfBytesTransfered,
    ' _Inout_ LPOVERLAPPED lpOverlapped
    ' );
Public Delegate Sub OverlappedCompletionRoutine (ByVal errorCode As Long, ByVal dwNumberOfBytesTransfered As Long, lpOverlapped As OVERLAPPED)


Public Enum READ_DIRECTORY_NOTIFY_INFORMATION_CLASS
    ReadDirectoryNotifyInformation = 1
    ReadDirectoryNotifyExtendedInformation   ' 2
    ' #if (NTDDI_VERSION >= NTDDI_WIN10_NI)
    ReadDirectoryNotifyFullInformation   ' 3
    ' #endif
    '  add new classes above
    ReadDirectoryNotifyMaximumInformation
End Enum

Public Enum FILE_INFO_BY_NAME_CLASS
    FileStatByNameInfo
    FileStatLxByNameInfo
    FileCaseSensitiveByNameInfo
    FileStatBasicByNameInfo
    MaximumFileInfoByNameClass
End Enum

Public Enum FILE_ACTION_TYPES
    FILE_ACTION_ADDED = &H00000001
    FILE_ACTION_REMOVED = &H00000002
    FILE_ACTION_MODIFIED = &H00000003
    FILE_ACTION_RENAMED_OLD_NAME = &H00000004
    FILE_ACTION_RENAMED_NEW_NAME = &H00000005
End Enum
Public Type FILE_NOTIFY_INFORMATION
    NextEntryOffset As Long
    Action As FILE_ACTION_TYPES
    FileNameLength As Long
    FileName(0 To MAX_PATH) As Integer
End Type

Public Enum FILE_NOTIFY_CHANGE
    FILE_NOTIFY_CHANGE_FILE_NAME = &H00000001
    FILE_NOTIFY_CHANGE_DIR_NAME = &H00000002
    FILE_NOTIFY_CHANGE_ATTRIBUTES = &H00000004
    FILE_NOTIFY_CHANGE_SIZE = &H00000008
    FILE_NOTIFY_CHANGE_LAST_WRITE = &H00000010
    FILE_NOTIFY_CHANGE_LAST_ACCESS = &H00000020
    FILE_NOTIFY_CHANGE_CREATION = &H00000040
    FILE_NOTIFY_CHANGE_SECURITY = &H00000100
End Enum

Public Enum MoveFileExFlags
	MOVEFILE_REPLACE_EXISTING = &H00000001
	MOVEFILE_COPY_ALLOWED = &H00000002
	MOVEFILE_DELAY_UNTIL_REBOOT = &H00000004
	MOVEFILE_WRITE_THROUGH = &H00000008
	MOVEFILE_CREATE_HARDLINK = &H00000010
	MOVEFILE_FAIL_IF_NOT_TRACKABLE = &H00000020
End Enum

Public Enum COPYFILE2_MESSAGE_TYPE
	COPYFILE2_CALLBACK_NONE = 0
	COPYFILE2_CALLBACK_CHUNK_STARTED = 1
	COPYFILE2_CALLBACK_CHUNK_FINISHED = 2
	COPYFILE2_CALLBACK_STREAM_STARTED = 3
	COPYFILE2_CALLBACK_STREAM_FINISHED = 4
	COPYFILE2_CALLBACK_POLL_CONTINUE = 5
	COPYFILE2_CALLBACK_ERROR = 6
	COPYFILE2_CALLBACK_MAX = 7
End Enum

Public Enum COPYFILE2_MESSAGE_ACTION
	COPYFILE2_PROGRESS_CONTINUE = 0
	COPYFILE2_PROGRESS_CANCEL = 1
	COPYFILE2_PROGRESS_STOP = 2
	COPYFILE2_PROGRESS_QUIET = 3
	COPYFILE2_PROGRESS_PAUSE = 4
End Enum

Public Enum COPYFILE2_COPY_PHASE
	COPYFILE2_PHASE_NONE = 0
	COPYFILE2_PHASE_PREPARE_SOURCE = 1
	COPYFILE2_PHASE_PREPARE_DEST = 2
	COPYFILE2_PHASE_READ_SOURCE = 3
	COPYFILE2_PHASE_WRITE_DESTINATION = 4
	COPYFILE2_PHASE_SERVER_COPY = 5
	COPYFILE2_PHASE_NAMEGRAFT_COPY = 6
	'  ... etc phases.
	COPYFILE2_PHASE_MAX = 7
End Enum

Public Enum CopyFileFlags
	COPY_FILE_FAIL_IF_EXISTS = &H00000001
	COPY_FILE_RESTARTABLE = &H00000002
	COPY_FILE_OPEN_SOURCE_FOR_WRITE = &H00000004
	COPY_FILE_ALLOW_DECRYPTED_DESTINATION = &H00000008
	COPY_FILE_COPY_SYMLINK = &H00000800
	COPY_FILE_NO_BUFFERING = &H00001000
	COPY_FILE_REQUEST_SECURITY_PRIVILEGES = &H00002000
	COPY_FILE_RESUME_FROM_PAUSE = &H00004000
	COPY_FILE_NO_OFFLOAD = &H00040000
	COPY_FILE_IGNORE_EDP_BLOCK = &H00400000
	COPY_FILE_IGNORE_SOURCE_ENCRYPTION = &H00800000
'  Don't request WRITE_DAC for the destination file access.
	COPY_FILE_DONT_REQUEST_DEST_WRITE_DAC = &H02000000
'  If either source or target is an SMB share, compression
'  will be requested on all READs and WRITEs.
	COPY_FILE_REQUEST_COMPRESSED_TRAFFIC = &H10000000
	COPY_FILE_OPEN_AND_COPY_REPARSE_POINT = &H00200000
	COPY_FILE_DIRECTORY = &H00000080
	COPY_FILE_SKIP_ALTERNATE_STREAMS = &H00008000&
	COPY_FILE_DISABLE_PRE_ALLOCATION = &H04000000
	COPY_FILE_ENABLE_LOW_FREE_SPACE_MODE = &H08000000
	COPY_FILE_ENABLE_SPARSE_COPY = &H20000000
    COPY_FILE_DISABLE_SPARSE_COPY = &H80000000
End Enum

Public Const COPYFILE2_IO_CYCLE_SIZE_MIN  = 4096
'  maximum allowed requested i/o size, in bytes (1GB)
'  (constrains COPYFILE2_EXTENDED_PARAMETERS_V2 ioDesiredSize field).
Public Const COPYFILE2_IO_CYCLE_SIZE_MAX  = &H40000000
'  minimum allowed requested average i/o rate, in kbytes per second
'  (constrains COPYFILE2_EXTENDED_PARAMETERS_V2 ioDesiredRate field).
Public Const COPYFILE2_IO_RATE_MIN  = 512

Public Enum CopyFile2Flags
    COPY_FILE2_V2_DONT_COPY_JUNCTIONS = &H00000001
' #if (NTDDI_VERSION >= NTDDI_WIN11_GA)
'   Disable attempting block cloning during copy
    COPY_FILE2_V2_DISABLE_BLOCK_CLONING = &H00000002
    COPY_FILE2_V2_VALID_FLAGS = (COPY_FILE2_V2_DONT_COPY_JUNCTIONS Or COPY_FILE2_V2_DISABLE_BLOCK_CLONING)
End Enum

Public Type COPYFILE2_EXTENDED_PARAMETERS
	dwSize As Long
	dwCopyFlags As CopyFileFlags
	pfCancel As LongPtr
	pProgressRoutine As LongPtr
	pvCallbackContext As LongPtr
End Type
Public Type COPYFILE2_EXTENDED_PARAMETERS_V2
	dwSize As Long
	dwCopyFlags As CopyFileFlags
	pfCancel As LongPtr
	pProgressRoutine As LongPtr
	pvCallbackContext As LongPtr
	' Additional copy flags (COPYFILE2_EXTENDED_PARAMETERS_V2 only;
	' treated as zero if COPYFILE2_EXTENDED_PARAMETERS is used).
	dwCopyFlagsV2 As CopyFile2Flags
	' size of the i/o for each {read, write} cycle, in bytes
	' (may be reduced, if insufficient memory is available)
	' if zero: use a suitable default.
	' may be ignored if ioDesiredRate is specified (i.e.,
	' CopyFile2() will disregard if a requested size is
	' rate is inappropriate for a requested rate.)
	ioDesiredSize As Long
	' requested average i/o rate, in kbytes per second.
	' if zero: use a suitable default (usually as fast as possible).
	ioDesiredRate As Long
    pProgressRoutineOld As LongPtr
    SourceOplockKeys As LongPtr
	' reserved for future use; must be set to zero
	 reserved(0 To 5) As LongPtr
End Type

[Description("Copy union() to one of the COPYFILE2_INFO_* UDTs based on the Type member.")]
Public Type COPYFILE2_MESSAGE
    Type As COPYFILE2_MESSAGE_TYPE
    dwPadding As Long
    #If Win64 Then
    Info(71) As Byte
    #Else
    Info(63) As Byte
    #End If
End Type
Public Type COPYFILE2_INFO_CHUNKSTARTED
	dwStreamNumber As Long
    dwReserved As Long
    hSourceFile As LongPtr
    hDestinationFile As LongPtr
    uliChunkNumber As LongLong
    uliChunkSize As LongLong
    uliStreamSize As LongLong
    uliTotalFileSize As LongLong
End Type
Public Type COPYFILE2_INFO_CHUNKFINISHED
    dwStreamNumber As Long
    dwFlags As Long
    hSourceFile As LongPtr
    hDestinationFile As LongPtr
    uliChunkNumber As LongLong
    uliChunkSize As LongLong
    uliStreamSize As LongLong
    uliStreamBytesTransferred As LongLong
    uliTotalFileSize As LongLong
    uliTotalBytesTransferred As LongLong
End Type
Public Type COPYFILE2_INFO_STREAMSTARTED
    dwStreamNumber As Long
    dwReserved As Long
    hSourceFile As LongPtr
    hDestinationFile As LongPtr
    uliStreamSize As LongLong
    uliTotalFileSize As LongLong
End Type
Public Type COPYFILE2_INFO_STREAMFINISHED
    dwStreamNumber As Long
    dwReserved As Long
    hSourceFile As LongPtr
    hDestinationFile As LongPtr
    uliStreamSize As LongLong
    uliStreamBytesTransferred As LongLong
    uliTotalFileSize As LongLong
    uliTotalBytesTransferred As LongLong
End Type
Public Type COPYFILE2_INFO_POLLCONTINUE
    dwReserved As Long
End Type
Public Type COPYFILE2_INFO_ERROR
    dwStreamNumber As Long
    hrFailure As Long
    dwReserved As Long
    uliChunkNumber As LongLong
    uliStreamSize As LongLong
    uliStreamBytesTransferred As LongLong
    uliTotalFileSize As LongLong
    uliTotalBytesTransferred As LongLong
End Type

Public Type COPYFILE2_CREATE_OPLOCK_KEYS
    '  Parent oplock key.
    '  All-zero if not set.
    ParentOplockKey As UUID
    '  Target oplock key.
    '  All-zero if not set.
    TargetOplockKey As UUID
End Type

Public Const CALLBACK_CHUNK_FINISHED  = &H00000000
Public Const CALLBACK_STREAM_SWITCH  = &H00000001

Public Enum CopyProgressReturns
	PROGRESS_CONTINUE = 0
	PROGRESS_CANCEL = 1
	PROGRESS_STOP = 2
	PROGRESS_QUIET = 3
End Enum

Public Enum FileShareMode
	FILE_SHARE_READ = &H00000001
	FILE_SHARE_WRITE = &H00000002
	FILE_SHARE_DELETE = &H00000004
End Enum

Public Type CREATEFILE2_EXTENDED_PARAMETERS
	dwSize As Long
	dwFileAttributes As FILE_ATTRIBUTES
	dwFileFlags As FILE_FLAGS
	dwSecurityQosFlags As SQOS_Bits
	lpSecurityAttributes As LongPtr
	hTemplateFile As LongPtr
End Type

Public Enum FileSystemFlags
    FILE_CASE_SENSITIVE_SEARCH = &H00000001
    FILE_CASE_PRESERVED_NAMES = &H00000002
    FILE_UNICODE_ON_DISK = &H00000004
    FILE_PERSISTENT_ACLS = &H00000008
    FILE_FILE_COMPRESSION = &H00000010
    FILE_VOLUME_QUOTAS = &H00000020
    FILE_SUPPORTS_SPARSE_FILES = &H00000040
    FILE_SUPPORTS_REPARSE_POINTS = &H00000080
    FILE_SUPPORTS_REMOTE_STORAGE = &H00000100
    FILE_RETURNS_CLEANUP_RESULT_INFO = &H00000200
    FILE_SUPPORTS_POSIX_UNLINK_RENAME = &H00000400
    FILE_SUPPORTS_BYPASS_IO = &H00000800
    FILE_SUPPORTS_STREAM_SNAPSHOTS = &H00001000
    FILE_SUPPORTS_CASE_SENSITIVE_DIRS = &H00002000
    FILE_VOLUME_IS_COMPRESSED = &H00008000&
    FILE_SUPPORTS_OBJECT_IDS = &H00010000
    FILE_SUPPORTS_ENCRYPTION = &H00020000
    FILE_NAMED_STREAMS = &H00040000
    FILE_READ_ONLY_VOLUME = &H00080000
    FILE_SEQUENTIAL_WRITE_ONCE = &H00100000
    FILE_SUPPORTS_TRANSACTIONS = &H00200000
    FILE_SUPPORTS_HARD_LINKS = &H00400000
    FILE_SUPPORTS_EXTENDED_ATTRIBUTES = &H00800000
    FILE_SUPPORTS_OPEN_BY_FILE_ID = &H01000000
    FILE_SUPPORTS_USN_JOURNAL = &H02000000
    FILE_SUPPORTS_INTEGRITY_STREAMS = &H04000000
    FILE_SUPPORTS_BLOCK_REFCOUNTING = &H08000000
    FILE_SUPPORTS_SPARSE_VDL = &H10000000
    FILE_DAX_VOLUME = &H20000000
    FILE_SUPPORTS_GHOSTING = &H40000000
End Enum


Public Type TIME_ZONE_INFORMATION
    Bias As Long
    StandardName(0 To 31) As Integer
    StandardDate As SYSTEMTIME
    StandardBias As Long
    DaylightName(0 To 31) As Integer
    DaylightDate As SYSTEMTIME
    DaylightBias As Long
End Type
Public Type DYNAMIC_TIME_ZONE_INFORMATION
    Bias As Long
    StandardName(31) As Integer
    StandardDate As SYSTEMTIME
    StandardBias As Long
    DaylightName(31) As Integer
    DaylightDate As SYSTEMTIME
    DaylightBias As Long
    TimeZoneKeyName(127) As Integer
    DynamicDaylightTimeDisabled As Byte
End Type

Public Enum TIME_ZONE_ID
    TIME_ZONE_ID_UNKNOWN = 0
    TIME_ZONE_ID_STANDARD = 1
    TIME_ZONE_ID_DAYLIGHT = 2
    TIME_ZONE_ID_INVALID = (&HFFFFFFFF)
End Enum

Public Type OVERLAPPED_ENTRY
    lpCompletionKey As LongPtr
    lpOverlapped As LongPtr
    Internal As LongPtr
    dwNumberOfBytesTransferred As Long
End Type

Public Enum FileCompletionModeFlags
'Don't queue an entry to an associated completion port if returning success synchronously.
    FILE_SKIP_COMPLETION_PORT_ON_SUCCESS = &H1
'  Don't set the file handle event on IO completion.
    FILE_SKIP_SET_EVENT_ON_HANDLE = &H2
    FILE_SKIP_SET_USER_EVENT_ON_FAST_IO = &H4
End Enum

Public Enum CreateSymLinkFlags
    SYMBOLIC_LINK_FLAG_DIRECTORY = (&H1)
'   Specify this flag if you want to allow creation of symbolic links when the
'   process is not elevated.  As of now enabling DEVELOPER MODE on a system
'   is the only scenario that allow unprivileged symlink creation. There may
'   be future scenarios that this flag will enable in the future.
'   Also be aware that the behavior of this API with this flag set will likely
'   be different between a development environment and an and customers
'   environment so please be careful with the usage of this flag.
    SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE = (&H2)
End Enum


Public Declare PtrSafe Function GetOverlappedResult Lib "kernel32" (ByVal hFile As LongPtr, lpOverlapped As OVERLAPPED, lpNumberOfBytesTransferred As Long, ByVal bWait As BOOL) As BOOL
Public Declare PtrSafe Function GetOverlappedResultEx Lib "kernel32" (ByVal hFile As LongPtr, lpOverlapped As OVERLAPPED, lpNumberOfBytesTransferred As Long, ByVal dwMilliseconds As Long, ByVal bAlertable As BOOL) As BOOL
Public Declare PtrSafe Function CancelIo Lib "kernel32" (ByVal hFile As LongPtr) As BOOL
Public Declare PtrSafe Function CancelIoEx Lib "kernel32" (ByVal hFile As LongPtr, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function CancelSynchronousIo Lib "kernel32" (ByVal hThread As LongPtr) As BOOL
Public Declare PtrSafe Function CreateIoCompletionPort Lib "kernel32" (ByVal FileHandle As LongPtr, ByVal ExistingCompletionPort As LongPtr, ByVal CompletionKey As LongPtr, ByVal NumberOfConcurrentThreads As Long) As LongPtr
Public Declare PtrSafe Function GetQueuedCompletionStatus Lib "kernel32" (ByVal CompletionPort As LongPtr, lpNumberOfBytesTransferred As Long, lpCompletionKey As LongPtr, lpOverlapped As LongPtr, ByVal dwMilliseconds As Long) As BOOL
Public Declare PtrSafe Function GetQueuedCompletionStatusEx Lib "kernel32" (ByVal CompletionPort As LongPtr, lpCompletionPortEntries As OVERLAPPED_ENTRY, ByVal ulCount As Long, ulNumEntriesRemoved As Long, ByVal dwMilliseconds As Long, ByVal fAlertable As BOOL) As BOOL
Public Declare PtrSafe Function PostQueuedCompletionStatus Lib "kernel32" (ByVal CompletionPort As LongPtr, ByVal dwNumberOfBytesTransferred As Long, ByVal dwCompletionKey As LongPtr, lpOverlapped As OVERLAPPED) As BOOL
Public DeclareWide PtrSafe Function SetFileIoOverlappedRange Lib "kernel32" (ByVal FileHandle As LongPtr, OverlappedRangeStart As Any, ByVal Length As Long) As BOOL
Public Declare PtrSafe Function SetFileCompletionNotificationModes Lib "kernel32" (ByVal FileHandle As LongPtr, [TypeHint(FileCompletionModeFlags)] ByVal Flags As Byte) As BOOL

Public Declare PtrSafe Function GetFileAttributesA Lib "kernel32" (ByVal lpFileName As String) As FILE_ATTRIBUTES
Public Declare PtrSafe Function GetFileAttributesW Lib "kernel32" (ByVal lpFileName As LongPtr) As FILE_ATTRIBUTES
Public DeclareWide PtrSafe Function GetFileAttributes Lib "kernel32" Alias "GetFileAttributesW" (ByVal lpFileName As String) As FILE_ATTRIBUTES
Public Declare PtrSafe Function GetFileAttributesExA Lib "kernel32" (ByVal lpFileName As String, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any) As Long
Public Declare PtrSafe Function GetFileAttributesExW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any) As Long
Public DeclareWide PtrSafe Function GetFileAttributesEx Lib "kernel32" Alias "GetFileAttributesExW" (ByVal lpFileName As String, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any) As Long
Public Declare PtrSafe Function SetFileAttributesA Lib "kernel32" (ByVal lpFileName As String, ByVal dwFileAttributes As FILE_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function SetFileAttributesW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal dwFileAttributes As FILE_ATTRIBUTES) As BOOL
Public DeclareWide PtrSafe Function SetFileAttributes Lib "kernel32" Alias "SetFileAttributesW" (ByVal lpFileName As String, ByVal dwFileAttributes As FILE_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function GetFileAttributesTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function GetFileAttributesTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function GetFileAttributesTransacted Lib "kernel32" Alias "GetFileAttributesTransactedW" (ByVal lpFileName As String, ByVal fInfoLevelId As GET_FILEEX_INFO_LEVELS, ByRef lpFileInformation As Any, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function SetFileAttributesTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal dwFileAttributes As FILE_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function SetFileAttributesTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal dwFileAttributes As FILE_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long
Public DeclareWide PtrSafe Function SetFileAttributesTransacted Lib "kernel32" Alias "SetFileAttributesTransactedW" (ByVal lpFileName As String, ByVal dwFileAttributes As FILE_ATTRIBUTES, ByVal hTransaction As LongPtr) As Long
Public Declare PtrSafe Function Wow64DisableWow64FsRedirection Lib "kernel32" (pOldVal As LongPtr) As BOOL
Public Declare PtrSafe Function Wow64RevertWow64FsRedirection Lib "kernel32" (ByVal pOldVal As LongPtr) As BOOL
[Description("This function has known bugs. Use Wow64DisableWow64FsRedirection/Wow64RevertWow64FsRedirection instead (do not combine with this API).")]
Public Declare PtrSafe Function Wow64EnableWow64FsRedirection Lib "kernel32" (ByVal Wow64FsEnableRedirection As Byte) As Byte
Public Declare PtrSafe Function CompareFileTime Lib "kernel32" (lpFileTime1 As FILETIME, lpFileTime2 As FILETIME) As Long
Public Declare PtrSafe Function MulDiv Lib "kernel32" (ByVal nNumber As Long, ByVal nNumerator As Long, ByVal nDenominator As Long) As Long
Public Declare PtrSafe Function SetFileBandwidthReservation Lib "kernel32" (ByVal hFile As LongPtr, ByVal nPeriodMilliseconds As Long, ByVal nBytesPerPeriod As Long, ByVal bDiscardable As BOOL, lpTransferSize As Long, lpNumOutstandingRequests As Long) As BOOL
Public Declare PtrSafe Function GetFileBandwidthReservation Lib "kernel32" (ByVal hFile As LongPtr, lpPeriodMilliseconds As Long, lpBytesPerPeriod As Long, pDiscardable As BOOL, lpTransferSize As Long, lpNumOutstandingRequests As Long) As BOOL


Public Declare PtrSafe Function QueryDosDeviceA Lib "kernel32" (ByVal lpDeviceName As String, ByVal lpTargetPath As String, ByVal ucchMax As Long) As Long
Public Declare PtrSafe Function QueryDosDeviceW Lib "kernel32" (ByVal lpDeviceName As LongPtr, ByVal lpTargetPath As LongPtr, ByVal ucchMax As Long) As Long
Public DeclareWide PtrSafe Function QueryDosDevice Lib "kernel32" Alias "QueryDosDeviceW" (ByVal lpDeviceName As String, ByVal lpTargetPath As String, ByVal ucchMax As Long) As Long
Public Declare PtrSafe Function DefineDosDeviceA Lib "kernel32" (ByVal dwFlags As DDD_Flags, ByVal lpDeviceName As String, Optional ByVal lpTargetPath As String) As BOOL
Public Declare PtrSafe Function DefineDosDeviceW Lib "kernel32" (ByVal dwFlags As DDD_Flags, ByVal lpDeviceName As LongPtr, Optional ByVal lpTargetPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DefineDosDevice Lib "kernel32" Alias "DefineDosDeviceW" (ByVal dwFlags As DDD_Flags, ByVal lpDeviceName As String, Optional ByVal lpTargetPath As String) As BOOL
Public DeclareWide PtrSafe Function FindFirstVolume Lib "kernel32" Alias "FindFirstVolumeW" (ByVal lpszVolumeName As String, ByVal cchBufferLen As Long) As LongPtr
Public Declare PtrSafe Function FindFirstVolumeA Lib "kernel32" (ByVal lpszVolumeName As String, ByVal cchBufferLen As Long) As LongPtr
Public Declare PtrSafe Function FindFirstVolumeW Lib "kernel32" (ByVal lpszVolumeName As LongPtr, ByVal cchBufferLen As Long) As LongPtr
Public DeclareWide PtrSafe Function FindNextVolume Lib "kernel32" Alias "FindNextVolumeW" (ByVal hFindVolume As LongPtr, ByVal lpszVolumeName As String, ByVal cchBufferLen As Long) As BOOL
Public Declare PtrSafe Function FindNextVolumeA Lib "kernel32" (ByVal hFindVolume As LongPtr, ByVal lpszVolumeName As String, ByVal cchBufferLen As Long) As BOOL
Public Declare PtrSafe Function FindNextVolumeW Lib "kernel32" (ByVal hFindVolume As LongPtr, ByVal lpszVolumeName As LongPtr, ByVal cchBufferLen As Long) As BOOL
Public Declare PtrSafe Function FindVolumeClose Lib "kernel32" (ByVal hFindVolume As LongPtr) As BOOL
Public Declare PtrSafe Function GetVolumePathNamesForVolumeNameA Lib "kernel32" (ByVal lpszVolumeName As String, ByVal lpszVolumePathNames As String, ByVal cchBufferLength As Long, lpcchReturnLength As Long) As BOOL
Public Declare PtrSafe Function GetVolumePathNamesForVolumeNameW Lib "kernel32" (ByVal lpszVolumeName As LongPtr, ByVal lpszVolumePathNames As LongPtr, ByVal cchBufferLength As Long, lpcchReturnLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumePathNamesForVolumeName Lib "kernel32" Alias "GetVolumePathNamesForVolumeNameW" (ByVal lpszVolumeName As String, ByVal lpszVolumePathNames As String, ByVal cchBufferLength As Long, lpcchReturnLength As Long) As BOOL
Public Declare PtrSafe Function SetVolumeLabelA Lib "kernel32" (ByVal lpRootPathName As String, ByVal lpVolumeName As String) As Long
Public Declare PtrSafe Function SetVolumeLabelW Lib "kernel32" (ByVal lpRootPathName As LongPtr, ByVal lpVolumeName As LongPtr) As Long
Public DeclareWide PtrSafe Function SetVolumeLabel Lib "kernel32" Alias "SetVolumeLabelW" (ByVal lpRootPathName As String, ByVal lpVolumeName As String) As Long
Public Declare PtrSafe Function CreateHardLinkA Lib "kernel32" (ByVal lpFileName As String, ByVal lpExistingFileName As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function CreateHardLinkW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal lpExistingFileName As LongPtr, lpSecurityAttributes As SECURITY_ATTRIBUTES) As BOOL
Public DeclareWide PtrSafe Function CreateHardLink Lib "kernel32" Alias "CreateHardLinkW" (ByVal lpFileName As String, ByVal lpExistingFileName As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function CreateHardLinkTransactedA Lib "kernel32" (ByVal lpFileName As String, ByVal lpExistingFileName As String, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function CreateHardLinkTransactedW Lib "kernel32" (ByVal lpFileName As LongPtr, ByVal lpExistingFileName As LongPtr, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal hTransaction As LongPtr) As BOOL
Public DeclareWide PtrSafe Function CreateHardLinkTransacted Lib "kernel32" Alias "CreateHardLinkTransactedW" (ByVal lpFileName As String, ByVal lpExistingFileName As String, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal hTransaction As LongPtr) As BOOL
Public Declare PtrSafe Function CreateSymbolicLinkA Lib "kernel32" (ByVal lpSymlinkFileName As String, ByVal lpTargetFileName As String, ByVal dwFlags As CreateSymLinkFlags) As Byte 'boolean
Public Declare PtrSafe Function CreateSymbolicLinkW Lib "kernel32" (ByVal lpSymlinkFileName As LongPtr, ByVal lpTargetFileName As LongPtr, ByVal dwFlags As CreateSymLinkFlags) As Byte 'boolean
Public DeclareWide PtrSafe Function CreateSymbolicLink Lib "kernel32" Alias "CreateSymbolicLinkW" (ByVal lpSymlinkFileName As String, ByVal lpTargetFileName As String, ByVal dwFlags As CreateSymLinkFlags) As Byte 'boolean
Public Declare PtrSafe Function CreateSymbolicLinkTransactedA Lib "kernel32" (ByVal lpSymlinkFileName As String, ByVal lpTargetFileName As String, ByVal dwFlags As CreateSymLinkFlags, ByVal hTransaction As LongPtr) As Byte 'boolean
Public Declare PtrSafe Function CreateSymbolicLinkTransactedW Lib "kernel32" (ByVal lpSymlinkFileName As LongPtr, ByVal lpTargetFileName As LongPtr, ByVal dwFlags As CreateSymLinkFlags, ByVal hTransaction As LongPtr) As Byte 'boolean
Public DeclareWide PtrSafe Function CreateSymbolicLinkTransacted Lib "kernel32" Alias "CreateSymbolicLinkTransactedW" (ByVal lpSymlinkFileName As String, ByVal lpTargetFileName As String, ByVal dwFlags As CreateSymLinkFlags, ByVal hTransaction As LongPtr) As Byte 'boolean


Public Declare PtrSafe Function SetVolumeMountPointA Lib "kernel32" (ByVal lpszVolumeMountPoint As String, ByVal lpszVolumeName As String) As BOOL
Public Declare PtrSafe Function SetVolumeMountPointW Lib "kernel32" (ByVal lpszVolumeMountPoint As LongPtr, ByVal lpszVolumeName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetVolumeMountPoint Lib "kernel32" Alias "SetVolumeMountPointW" (ByVal lpszVolumeMountPoint As String, ByVal lpszVolumeName As String) As BOOL
Public Declare PtrSafe Function GetVolumeNameForVolumeMountPointA Lib "kernel32" (ByVal lpszVolumeMountPoint As String, ByVal lpszVolumePathNames As String, ByVal cchBufferLength As Long) As BOOL
Public Declare PtrSafe Function GetVolumeNameForVolumeMountPointW Lib "kernel32" (ByVal lpszVolumeMountPoint As LongPtr, ByVal lpszVolumePathNames As LongPtr, ByVal cchBufferLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumeNameForVolumeMountPoint Lib "kernel32" Alias "GetVolumeNameForVolumeMountPointW" (ByVal lpszVolumeMountPoint As String, ByVal lpszVolumePathNames As String, ByVal cchBufferLength As Long) As BOOL
Public Declare PtrSafe Function GetVolumePathNameA Lib "kernel32" (ByVal lpszFileName As LongPtr, ByVal lpszVolumePathName As LongPtr, ByVal cchBufferLength As Long) As BOOL
Public Declare PtrSafe Function GetVolumePathNameW Lib "kernel32" (ByVal lpszFileName As LongPtr, ByVal lpszVolumePathName As LongPtr, ByVal cchBufferLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumePathName Lib "kernel32" Alias "GetVolumePathNameW" (ByVal lpszFileName As LongPtr, ByVal lpszVolumePathName As LongPtr, ByVal cchBufferLength As Long) As BOOL
Public Declare PtrSafe Function GetVolumeInformationA Lib "kernel32" (ByVal lpRootPathName As String, ByVal lpVolumeNameBuffer As String, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As String, ByVal nFileSystemNameSize As Long) As BOOL
Public Declare PtrSafe Function GetVolumeInformationW Lib "kernel32" (ByVal lpRootPathName As LongPtr, ByVal lpVolumeNameBuffer As LongPtr, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As LongPtr, ByVal nFileSystemNameSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumeInformation Lib "kernel32" Alias "GetVolumeInformationW" (ByVal lpRootPathName As String, ByVal lpVolumeNameBuffer As String, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As String, ByVal nFileSystemNameSize As Long) As BOOL
'does not exist Public Declare PtrSafe Function GetVolumeInformationByHandleA Lib "kernel32" (ByVal hFile As LongPtr, ByVal lpVolumeNameBuffer As String, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As String, ByVal nFileSystemNameSize As Long) As BOOL
Public Declare PtrSafe Function GetVolumeInformationByHandleW Lib "kernel32" (ByVal hFile As LongPtr, ByVal lpVolumeNameBuffer As LongPtr, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As LongPtr, ByVal nFileSystemNameSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetVolumeInformationByHandle Lib "kernel32" Alias "GetVolumeInformationByHandleW" (ByVal hFile As LongPtr, ByVal lpVolumeNameBuffer As String, ByVal nVolumeNameSize As Long, lpVolumeSerialNumber As Long, lpMaximumComponentLength As Long, lpFileSystemFlags As FileSystemFlags, ByVal lpFileSystemNameBuffer As String, ByVal nFileSystemNameSize As Long) As BOOL
Public Declare PtrSafe Function DeleteVolumeMountPointA Lib "kernel32" (ByVal lpszVolumeMountPoint As String) As BOOL
Public Declare PtrSafe Function DeleteVolumeMountPointW Lib "kernel32" (ByVal lpszVolumeMountPoint As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeleteVolumeMountPoint Lib "kernel32" Alias "DeleteVolumeMountPointW" (ByVal lpszVolumeMountPoint As String) As BOOL
Public Declare PtrSafe Function FindFirstVolumeMountPointA Lib "kernel32" (ByVal lpszRootPathName As String, ByVal lpszVolumeMountPoint As String, ByVal cchBufferLength As Long) As LongPtr
Public Declare PtrSafe Function FindFirstVolumeMountPointW Lib "kernel32" (ByVal lpszRootPathName As LongPtr, ByVal lpszVolumeMountPoint As LongPtr, ByVal cchBufferLength As Long) As LongPtr
Public DeclareWide PtrSafe Function FindFirstVolumeMountPoint Lib "kernel32" Alias "FindFirstVolumeMountPointW" (ByVal lpszRootPathName As String, ByVal lpszVolumeMountPoint As String, ByVal cchBufferLength As Long) As LongPtr
Public Declare PtrSafe Function FindNextVolumeMountPointA Lib "kernel32" (ByVal hFindVolumeMountPoint As LongPtr, ByVal lpszVolumeMountPoint As String, ByVal cchBufferLength As Long) As BOOL
Public Declare PtrSafe Function FindNextVolumeMountPointW Lib "kernel32" (ByVal hFindVolumeMountPoint As LongPtr, ByVal lpszVolumeMountPoint As LongPtr, ByVal cchBufferLength As Long) As BOOL
Public DeclareWide PtrSafe Function FindNextVolumeMountPoint Lib "kernel32" Alias "FindNextVolumeMountPointW" (ByVal hFindVolumeMountPoint As LongPtr, ByVal lpszVolumeMountPoint As String, ByVal cchBufferLength As Long) As BOOL
Public Declare PtrSafe Function FindVolumeMountPointClose Lib "kernel32" (ByVal hFindVolumeMountPoint As LongPtr) As BOOL

Public Declare PtrSafe Function AreFileApisANSI Lib "kernel32" () As BOOL
Public Declare PtrSafe Sub SetFileApisToOEM Lib "kernel32" ()
Public Declare PtrSafe Sub SetFileApisToANSI Lib "kernel32" ()
Public Declare PtrSafe Function CheckNameLegalDOS8Dot3A Lib "kernel32" (ByVal lpName As String, ByVal lpOemName As String, ByVal OemNameSize As Long, Optional pbNameContainsSpaces As BOOL, Optional pbNameLegal As BOOL) As BOOL
Public Declare PtrSafe Function CheckNameLegalDOS8Dot3W Lib "kernel32" (ByVal lpName As LongPtr, ByVal lpOemName As LongPtr, ByVal OemNameSize As Long, Optional pbNameContainsSpaces As BOOL, Optional pbNameLegal As BOOL) As BOOL
Public DeclareWide PtrSafe Function CheckNameLegalDOS8Dot3 Lib "kernel32" Alias "CheckNameLegalDOS8Dot3W" (ByVal lpName As String, ByVal lpOemName As String, ByVal OemNameSize As Long, Optional pbNameContainsSpaces As BOOL, Optional pbNameLegal As BOOL) As BOOL


Public Enum PROCESS_INFORMATION_CLASS
    ProcessMemoryPriority          '// MEMORY_PRIORITY_INFORMATION
    ProcessMemoryExhaustionInfo    '// PROCESS_MEMORY_EXHAUSTION_INFO
    ProcessAppMemoryInfo           '// APP_MEMORY_INFORMATION
    ProcessInPrivateInfo           '// BOOLEAN
    ProcessPowerThrottling         '// PROCESS_POWER_THROTTLING_STATE
    ProcessReservedValue1          '// Used to be for ProcessActivityThrottlePolicyInfo
    ProcessTelemetryCoverageInfo   '// TELEMETRY_COVERAGE_POINT
    ProcessProtectionLevelInfo     '// PROCESS_PROTECTION_LEVEL_INFORMATION
    ProcessLeapSecondInfo          '// PROCESS_LEAP_SECOND_INFO
    ProcessMachineTypeInfo         '// PROCESS_MACHINE_INFORMATION
    ProcessInformationClassMax
End Enum

Public Enum MEMORY_PRIORITY_VALUES
    MEMORY_PRIORITY_LOWEST = 0
    MEMORY_PRIORITY_VERY_LOW = 1
    MEMORY_PRIORITY_LOW = 2
    MEMORY_PRIORITY_MEDIUM = 3
    MEMORY_PRIORITY_BELOW_NORMAL = 4
    MEMORY_PRIORITY_NORMAL = 5
End Enum
Public Type MEMORY_PRIORITY_INFORMATION
    MemoryPriority As MEMORY_PRIORITY_VALUES
End Type

Public Const PME_CURRENT_VERSION = 1
Public Enum PROCESS_MEMORY_EXHAUSTION_TYPE
    PMETypeFailFastOnCommitFailure
    PMETypeMax = 1
End Enum
Public Enum PME_FAILFAST_VALUES
    PME_FAILFAST_ON_COMMIT_FAIL_DISABLE = &H0
    PME_FAILFAST_ON_COMMIT_FAIL_ENABLE = &H1
End Enum
Public Type PROCESS_MEMORY_EXHAUSTION_INFO
    Version As Integer
    Reserved As Integer
    Type As PROCESS_MEMORY_EXHAUSTION_TYPE
    /* [ TypeHint(PME_FAILFAST_VALUES) ] */ Value As LongPtr
End Type

Public Enum POWER_THROTTLING_VERSION
    PROCESS_POWER_THROTTLING_CURRENT_VERSION = 1
End Enum
Public Enum POWER_THROTTLING_FLAGS
    PROCESS_POWER_THROTTLING_EXECUTION_SPEED = &H1
    PROCESS_POWER_THROTTLING_IGNORE_TIMER_RESOLUTION = &H4
    PROCESS_POWER_THROTTLING_VALID_FLAGS = ((PROCESS_POWER_THROTTLING_EXECUTION_SPEED Or PROCESS_POWER_THROTTLING_IGNORE_TIMER_RESOLUTION))
End Enum
Public Type PROCESS_POWER_THROTTLING_STATE
    Version As POWER_THROTTLING_VERSION
    ControlMask As POWER_THROTTLING_FLAGS
    StateMask As POWER_THROTTLING_FLAGS
End Type

Public Enum PROCESS_PROTECTION_LEVEL
    PROTECTION_LEVEL_WINTCB_LIGHT = &H00000000
    PROTECTION_LEVEL_WINDOWS = &H00000001
    PROTECTION_LEVEL_WINDOWS_LIGHT = &H00000002
    PROTECTION_LEVEL_ANTIMALWARE_LIGHT = &H00000003
    PROTECTION_LEVEL_LSA_LIGHT = &H00000004
'  The following protection levels are supplied for testing only (no win32
'  callers need these).
    PROTECTION_LEVEL_WINTCB = &H00000005
    PROTECTION_LEVEL_CODEGEN_LIGHT = &H00000006
    PROTECTION_LEVEL_AUTHENTICODE = &H00000007
    PROTECTION_LEVEL_PPL_APP = &H00000008
    PROTECTION_LEVEL_SAME = &HFFFFFFFF
'  The following is only used as a value for ProtectionLevel
'  when querying ProcessProtectionLevelInfo in GetProcessInformation.
    PROTECTION_LEVEL_NONE = &HFFFFFFFE
End Enum
Public Type PROCESS_PROTECTION_LEVEL_INFORMATION
    ProtectionLevel As PROCESS_PROTECTION_LEVEL
End Type

Public Enum PROCESS_LEAP_SECOND_FLAGS
    PROCESS_LEAP_SECOND_INFO_FLAG_ENABLE_SIXTY_SECOND = &H1
End Enum
Public Type PROCESS_LEAP_SECOND_INFO
    Flags As PROCESS_LEAP_SECOND_FLAGS
    Reserved As Long
End Type

Public Type APP_MEMORY_INFORMATION
    AvailableCommit As LongLong
    PrivateCommitUsage As LongLong
    PeakPrivateCommitUsage As LongLong
    TotalCommitUsage As LongLong
End Type

Public Enum MACHINE_ATTRIBUTES
    UserEnabled = &H00000001
    KernelEnabled = &H00000002
    Wow64Container = &H00000004
End Enum
Public Type PROCESS_MACHINE_INFORMATION
    /* [ TypeHint(ImageMachineType) ] */ ProcessMachine As Integer
    Res0 As Integer
    MachineAttributes As MACHINE_ATTRIBUTES
End Type

Public Enum THREAD_INFORMATION_CLASS
    ThreadMemoryPriority
    ThreadAbsoluteCpuPriority
    ThreadDynamicCodePolicy
    ThreadPowerThrottling
    ThreadInformationClassMax
End Enum

Public Enum THREAD_POWER_THROTTLING_VERSIONS
    THREAD_POWER_THROTTLING_CURRENT_VERSION = 1
End Enum
Public Enum THREAD_POWER_THROTTLING_FLAGS
    THREAD_POWER_THROTTLING_EXECUTION_SPEED = &H1
End Enum
Public Type THREAD_POWER_THROTTLING_STATE
    Version As THREAD_POWER_THROTTLING_VERSIONS
    ControlMask As THREAD_POWER_THROTTLING_FLAGS
    StateMask As THREAD_POWER_THROTTLING_FLAGS
End Type

Public Enum PROCESSOR_FEATURES
    PF_FLOATING_POINT_PRECISION_ERRATA = 0
    PF_FLOATING_POINT_EMULATED = 1
    PF_COMPARE_EXCHANGE_DOUBLE = 2
    PF_MMX_INSTRUCTIONS_AVAILABLE = 3
    PF_PPC_MOVEMEM_64BIT_OK = 4
    PF_ALPHA_BYTE_INSTRUCTIONS = 5
    PF_XMMI_INSTRUCTIONS_AVAILABLE = 6
    PF_3DNOW_INSTRUCTIONS_AVAILABLE = 7
    PF_RDTSC_INSTRUCTION_AVAILABLE = 8
    PF_PAE_ENABLED = 9
    PF_XMMI64_INSTRUCTIONS_AVAILABLE = 10
    PF_SSE_DAZ_MODE_AVAILABLE = 11
    PF_NX_ENABLED = 12
    PF_SSE3_INSTRUCTIONS_AVAILABLE = 13
    PF_COMPARE_EXCHANGE128 = 14
    PF_COMPARE64_EXCHANGE128 = 15
    PF_CHANNELS_ENABLED = 16
    PF_XSAVE_ENABLED = 17
    PF_ARM_VFP_32_REGISTERS_AVAILABLE = 18
    PF_ARM_NEON_INSTRUCTIONS_AVAILABLE = 19
    PF_SECOND_LEVEL_ADDRESS_TRANSLATION = 20
    PF_VIRT_FIRMWARE_ENABLED = 21
    PF_RDWRFSGSBASE_AVAILABLE = 22
    PF_FASTFAIL_AVAILABLE = 23
    PF_ARM_DIVIDE_INSTRUCTION_AVAILABLE = 24
    PF_ARM_64BIT_LOADSTORE_ATOMIC = 25
    PF_ARM_EXTERNAL_CACHE_AVAILABLE = 26
    PF_ARM_FMAC_INSTRUCTIONS_AVAILABLE = 27
    PF_RDRAND_INSTRUCTION_AVAILABLE = 28
    PF_ARM_V8_INSTRUCTIONS_AVAILABLE = 29
    PF_ARM_V8_CRYPTO_INSTRUCTIONS_AVAILABLE = 30
    PF_ARM_V8_CRC32_INSTRUCTIONS_AVAILABLE = 31
    PF_RDTSCP_INSTRUCTION_AVAILABLE = 32
    PF_RDPID_INSTRUCTION_AVAILABLE = 33
    PF_ARM_V81_ATOMIC_INSTRUCTIONS_AVAILABLE = 34
    PF_MONITORX_INSTRUCTION_AVAILABLE = 35
    PF_SSSE3_INSTRUCTIONS_AVAILABLE = 36
    PF_SSE4_1_INSTRUCTIONS_AVAILABLE = 37
    PF_SSE4_2_INSTRUCTIONS_AVAILABLE = 38
    PF_AVX_INSTRUCTIONS_AVAILABLE = 39
    PF_AVX2_INSTRUCTIONS_AVAILABLE = 40
    PF_AVX512F_INSTRUCTIONS_AVAILABLE = 41
    PF_ERMS_AVAILABLE = 42
    PF_ARM_V82_DP_INSTRUCTIONS_AVAILABLE = 43
    PF_ARM_V83_JSCVT_INSTRUCTIONS_AVAILABLE = 44
    PF_ARM_V83_LRCPC_INSTRUCTIONS_AVAILABLE = 45
End Enum

Public Enum SCS_BINARY_TYPES
    SCS_32BIT_BINARY = 0
    SCS_DOS_BINARY = 1
    SCS_WOW_BINARY = 2
    SCS_PIF_BINARY = 3
    SCS_POSIX_BINARY = 4
    SCS_OS216_BINARY = 5
    SCS_64BIT_BINARY = 6
#If Win64 Then
    SCS_THIS_PLATFORM_BINARY = SCS_64BIT_BINARY
#Else
    SCS_THIS_PLATFORM_BINARY = SCS_32BIT_BINARY
#End If
End Enum

Public Type IO_COUNTERS
    ReadOperationCount As LongLong
    WriteOperationCount As LongLong
    OtherOperationCount As LongLong
    ReadTransferCount As LongLong
    WriteTransferCount As LongLong
    OtherTransferCount As LongLong
End Type

Public Enum PROCESS_SHUTDOWN_FLAGS
    SHUTDOWN_NORETRY = 1
End Enum

Public Declare PtrSafe Function CreateProcessA Lib "kernel32" (ByVal lpApplicationName As String, ByVal lpCommandLine As String, lpProccessAttributes As SECURITY_ATTRIBUTES, lpThreadAttributes As SECURITY_ATTRIBUTES, ByVal bInheritHandles As BOOL, _
                                                                ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFOA, lpProcessInformation As PROCESS_INFORMATION) As BOOL
Public DeclareWide PtrSafe Function CreateProcessW Lib "kernel32" (ByVal lpApplicationName As LongPtr, ByVal lpCommandLine As LongPtr, lpProccessAttributes As SECURITY_ATTRIBUTES, lpThreadAttributes As SECURITY_ATTRIBUTES, _
                                                                   ByVal bInheritHandles As BOOL, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, ByVal lpCurrentDirectory As LongPtr, lpStartupInfo As STARTUPINFOW, lpProcessInformation As PROCESS_INFORMATION) As BOOL
Public DeclareWide PtrSafe Function CreateProcess Lib "kernel32" Alias "CreateProcessW" (ByVal lpApplicationName As String, ByVal lpCommandLine As String, lpProccessAttributes As SECURITY_ATTRIBUTES, lpThreadAttributes As SECURITY_ATTRIBUTES, _
                                                                    ByVal bInheritHandles As BOOL, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFO, lpProcessInformation As PROCESS_INFORMATION) As BOOL
Public Declare PtrSafe Function CreateProcessAsUserA Lib "kernel32" (ByVal hToken As LongPtr, ByVal lpApplicationName As String, ByVal lpCommandLine As String, lpProccessAttributes As SECURITY_ATTRIBUTES, lpThreadAttributes As SECURITY_ATTRIBUTES, ByVal bInheritHandles As BOOL, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, _
    ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFOA, lpProcessInformation As PROCESS_INFORMATION) As BOOL
Public DeclareWide PtrSafe Function CreateProcessAsUserW Lib "kernel32" (ByVal hToken As LongPtr, ByVal lpApplicationName As LongPtr, ByVal lpCommandLine As LongPtr, lpProccessAttributes As SECURITY_ATTRIBUTES, lpThreadAttributes As SECURITY_ATTRIBUTES, ByVal bInheritHandles As BOOL, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, _
    ByVal lpCurrentDirectory As LongPtr, lpStartupInfo As STARTUPINFOW, lpProcessInformation As PROCESS_INFORMATION) As BOOL
Public DeclareWide PtrSafe Function CreateProcessAsUser Lib "kernel32" Alias "CreateProcessAsUserW" (ByVal hToken As LongPtr, ByVal lpApplicationName As String, ByVal lpCommandLine As String, lpProccessAttributes As SECURITY_ATTRIBUTES, lpThreadAttributes As SECURITY_ATTRIBUTES, ByVal bInheritHandles As BOOL, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, _
    ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFO, lpProcessInformation As PROCESS_INFORMATION) As BOOL
Public Declare PtrSafe Sub ExitProcess Lib "kernel32" (ByVal uExitCode As Long)
Public Declare PtrSafe Sub ExitThread Lib "kernel32" (ByVal dwExitCode As Long)
Public Declare PtrSafe Function GetExitCodeProcess Lib "kernel32" (ByVal hProcess As LongPtr, lpExitCode As Long) As BOOL
Public Declare PtrSafe Function GetExitCodeThread Lib "kernel32" (ByVal hThread As LongPtr, lpExitCode As Long) As BOOL
Public Declare PtrSafe Function GetProcessShutdownParameters Lib "kernel32" (lpdwLevel As Long, lpdwFlags As PROCESS_SHUTDOWN_FLAGS) As BOOL
Public Declare PtrSafe Function SetProcessShutdownParameters Lib "kernel32" (ByVal dwLevel As Long, ByVal dwFlags As PROCESS_SHUTDOWN_FLAGS) As BOOL
Public Declare PtrSafe Function GetCurrentProcessorNumber Lib "kernel32" () As Long
Public Declare PtrSafe Sub GetCurrentProcessorNumberEx Lib "kernel32" (ProcNumber As PROCESSOR_NUMBER)
Public Declare PtrSafe Function SetThreadIdealProcessor Lib "kernel32" (ByVal hThread As LongPtr, ByVal dwIdealProcessor As Long) As Long
Public Declare PtrSafe Function SetThreadIdealProcessorEx Lib "kernel32" (ByVal hThread As LongPtr, lpIdealProcessor As PROCESSOR_NUMBER, lpPreviousIdealProcessor As PROCESSOR_NUMBER) As BOOL
Public Declare PtrSafe Function GetThreadIdealProcessorEx Lib "kernel32" (ByVal hThread As LongPtr, lpIdealProcessor As PROCESSOR_NUMBER) As BOOL
Public Declare PtrSafe Function SwitchToThread Lib "kernel32" () As BOOL
Public Declare PtrSafe Function SetThreadPriority Lib "kernel32" (ByVal hThread As LongPtr, ByVal nPriority As ThreadPriorityClasses) As BOOL
Public Declare PtrSafe Function GetThreadPriority Lib "kernel32" (ByVal hThread As LongPtr) As ThreadPriorityClasses
Public Declare PtrSafe Function SetThreadPriorityBoost Lib "kernel32" (ByVal hThread As LongPtr, ByVal bDisablePriorityBoost As BOOL) As BOOL
Public Declare PtrSafe Function GetThreadPriorityBoost Lib "kernel32" (ByVal hThread As LongPtr, pbDisablePriorityBoost As BOOL) As BOOL
Public Declare PtrSafe Function SetPriorityClass Lib "kernel32" (ByVal hProcess As LongPtr, ByVal dwPriority As PriorityClass) As BOOL
Public Declare PtrSafe Function GetPriorityClass Lib "kernel32" (ByVal hProcess As LongPtr) As PriorityClass
Public Declare PtrSafe Function SetProcessPriorityBoost Lib "kernel32" (ByVal hProcess As LongPtr, ByVal bDisablePriorityBoost As BOOL) As BOOL
Public Declare PtrSafe Function GetProcessPriorityBoost Lib "kernel32" (ByVal hProcess As LongPtr, pbDisablePriorityBoost As BOOL) As BOOL
Public Declare PtrSafe Function GetCommandLineA Lib "kernel32" () As String
Public Declare PtrSafe Function GetCommandLineW Lib "kernel32" () As LongPtr
Public DeclareWide PtrSafe Function GetCommandLine Lib "kernel32" Alias "GetCommandLineW" () As String
Public Declare PtrSafe Function GetProcessIdOfThread Lib "kernel32" (ByVal Thread As LongPtr) As Long
Public Declare PtrSafe Function GetProcessVersion Lib "kernel32" (ByVal ProcessId As Long) As Long
[Description("Determines if the current process is a 32bit executable running on a 64bit OS")]
Public Declare PtrSafe Function IsWow64Process Lib "kernel32" (ByVal hProcess As LongPtr, Wow64Process As BOOL) As BOOL
Public Declare PtrSafe Function IsWow64Process2 Lib "kernel32" (ByVal hProcess As LongPtr, [TypeHint(ImageMachineType)] pProcessMachine As Integer, [TypeHint(ImageMachineType)] Optional ByRef pNativeMachine As Integer) As BOOL
Public Declare PtrSafe Function GetSystemWow64DirectoryA Lib "kernel32" (ByVal lpBuffer As String, ByVal uSize As Long) As Long
Public Declare PtrSafe Function GetSystemWow64DirectoryW Lib "kernel32" (ByVal lpBuffer As LongPtr, ByVal uSize As Long) As Long
Public DeclareWide PtrSafe Function GetSystemWow64Directory Lib "kernel32" Alias "GetSystemWow64DirectoryW" (ByVal lpBuffer As String, ByVal uSize As Long) As Long
Public Declare PtrSafe Function GetSystemWow64Directory2A Lib "kernelbase" (ByVal lpBuffer As String, ByVal uSize As Long, [TypeHint(ImageMachineType)] ByVal ImageFileMachineType As Integer) As Long
Public Declare PtrSafe Function GetSystemWow64Directory2W Lib "kernelbase" (ByVal lpBuffer As LongPtr, ByVal uSize As Long, [TypeHint(ImageMachineType)] ByVal ImageFileMachineType As Integer) As Long
Public DeclareWide PtrSafe Function GetSystemWow64Directory2 Lib "kernelbase" Alias "GetSystemWow64Directory2W" (ByVal lpBuffer As String, ByVal uSize As Long, [TypeHint(ImageMachineType)] ByVal ImageFileMachineType As Integer) As Long
Public Declare PtrSafe Function IsWow64GuestMachineSupported Lib "kernel32" ([TypeHint(ImageMachineType)] ByVal WowGuestMachine As Integer, MachineIsSupported As BOOL) As Long
Public Declare PtrSafe Function CreateThread Lib "kernel32" (ByRef lpThreadAttributes As Any, ByVal dwStackSize As LongPtr, ByVal lpStartAddress As LongPtr, ByRef lpParameter As Any, ByVal dwCreationFlags As Long, ByRef lpThreadId As Long) As LongPtr
Public Declare PtrSafe Function CreateRemoteThread Lib "kernel32" (ByVal hProcess As LongPtr, ByRef lpThreadAttributes As Any, ByVal dwStackSize As LongPtr, ByVal lpStartAddress As LongPtr, ByRef lpParameter As Any, ByVal dwCreationFlags As Long, ByRef lpThreadId As Long) As LongPtr
Public Declare PtrSafe Function CreateRemoteThreadEx Lib "kernel32" (ByVal hProcess As LongPtr, ByRef lpThreadAttributes As Any, ByVal dwStackSize As LongPtr, ByVal lpStartAddress As LongPtr, ByRef lpParameter As Any, ByVal dwCreationFlags As Long, ByVal lpThreadAttributesList As LongPtr, ByRef lpThreadId As Long) As LongPtr
Public Declare PtrSafe Function ResumeThread Lib "kernel32" (ByVal hThread As LongPtr) As Long
Public Declare PtrSafe Function SuspendThread Lib "kernel32" (ByVal hThread As LongPtr) As Long
Public Declare PtrSafe Function Wow64SuspendThread Lib "kernel32" (ByVal hThread As LongPtr) As Long
Public Declare PtrSafe Function TerminateThread Lib "kernel32" (ByVal hThread As LongPtr, ByVal dwExitCode As Long) As Long
Public Declare PtrSafe Function TerminateProcess Lib "kernel32" (ByVal hProcess As LongPtr, ByVal dwExitCode As Long) As Long
Public Declare PtrSafe Function OpenThread Lib "kernel32" (ByVal dwDesiredAccess As ThreadAccessRights, ByVal bInheritHandle As BOOL, ByVal dwThreadId As Long) As LongPtr
Public Declare PtrSafe Function OpenProcess Lib "kernel32" (ByVal dwDesiredAccess As ProcessAccessRights, ByVal bInheritHandle As BOOL, ByVal dwProcessId As Long) As LongPtr
Public Declare PtrSafe Function GetProcessHandleCount Lib "kernel32" (ByVal hProcess As LongPtr, pdwHandleCount As Long) As BOOL
Public Declare PtrSafe Function GetProcessInformation Lib "kernel32" (ByVal hProcess As LongPtr, ByVal ProcessInformationClass As PROCESS_INFORMATION_CLASS, ProcessInformation As Any, ByVal ProcessInformationSize As Long) As BOOL
Public Declare PtrSafe Function SetProcessInformation Lib "kernel32" (ByVal hProcess As LongPtr, ByVal ProcessInformationClass As PROCESS_INFORMATION_CLASS, ProcessInformation As Any, ByVal ProcessInformationSize As Long) As BOOL
Public Declare PtrSafe Function GetThreadInformation Lib "kernel32" (ByVal hThread As LongPtr, ByVal ThreadInformationClass As THREAD_INFORMATION_CLASS, ThreadInformation As Any, ByVal ThreadInformationSize As Long) As BOOL
Public Declare PtrSafe Function SetThreadInformation Lib "kernel32" (ByVal hThread As LongPtr, ByVal ThreadInformationClass As THREAD_INFORMATION_CLASS, ThreadInformation As Any, ByVal ThreadInformationSize As Long) As BOOL
Public Declare PtrSafe Function InitializeProcThreadAttributeList Lib "kernel32" (ByVal lpAttributeList As LongPtr, ByVal dwAttributeCount As Long, ByVal dwFlags As Long, lpSize As LongPtr) As BOOL
Public Declare PtrSafe Function UpdateProcThreadAttribute Lib "kernel32" (ByVal lpAttributeList As LongPtr, ByVal dwFlags As Long, [TypeHint(PROC_THREAD_ATTRIBUTES)] ByVal Attribute As LongPtr, lpValue As Any, ByVal cbSize As LongPtr, lpPreviousValue As Any, lpReturnSize As LongPtr) As BOOL
Public Declare PtrSafe Sub DeleteProcThreadAttributeList Lib "kernel32" (ByVal lpAttributeList As LongPtr)
Public Declare PtrSafe Sub GetCurrentThreadStackLimits Lib "kernel32" (LowLimit As LongPtr, HighLimit As LongPtr)
Public Declare PtrSafe Function SetProcessDEPPolicy Lib "kernel32" (ByVal dwFlags As ProcessDEPFlags) As BOOL
Public Declare PtrSafe Function GetProcessDEPPolicy Lib "kernel32" (ByVal hProcess As LongPtr, pdwFlags As ProcessDEPFlags, lpPermanent As BOOL) As BOOL
Public Declare PtrSafe Function GetProcessMitigationPolicy Lib "kernel32" (ByVal hProcess As LongPtr, ByVal MitigationPolicy As PROCESS_MITIGATION_POLICY, lpBuffer As Any, ByVal dwLength As LongPtr) As BOOL
Public Declare PtrSafe Function SetProcessMitigationPolicy Lib "kernel32" (ByVal MitigationPolicy As PROCESS_MITIGATION_POLICY, lpBuffer As Any, ByVal dwLength As LongPtr) As BOOL
Public Declare PtrSafe Function GetThreadIOPendingFlag Lib "kernel32" (ByVal hThread As LongPtr, lpIOIsPending As BOOL) As BOOL
Public Declare PtrSafe Function IsProcessorFeaturePresent Lib "kernel32" (ByVal ProcessorFeature As PROCESSOR_FEATURES) As BOOL
Public Declare PtrSafe Function GetThreadTimes Lib "kernel32" (ByVal hThread As LongPtr, lpCreationTime As FILETIME, lpExitTime As FILETIME, lpKernelTime As FILETIME, lpUserTime As FILETIME) As BOOL
Public Declare PtrSafe Function GetBinaryTypeA Lib "kernel32" (ByVal lpApplicationName As String, lpBinaryType As SCS_BINARY_TYPES) As BOOL
Public Declare PtrSafe Function GetBinaryTypeW Lib "kernel32" (ByVal lpApplicationName As LongPtr, lpBinaryType As SCS_BINARY_TYPES) As BOOL
Public DeclareWide PtrSafe Function GetBinaryType Lib "kernel32" Alias "GetBinaryTypeW" (ByVal lpApplicationName As String, lpBinaryType As SCS_BINARY_TYPES) As BOOL
Public Declare PtrSafe Function GetProcessIoCounters Lib "kernel32" (ByVal hProcess As LongPtr, lpIoCounters As IO_COUNTERS) As BOOL
Public Declare PtrSafe Function SetThreadStackGuarantee Lib "kernel32" (StackSizeInBytes As Long) As BOOL
Public Declare PtrSafe Function ProcessIdToSessionId Lib "kernel32" (ByVal dwProcessId As Long, pSessionId As Long) As BOOL
Public Declare PtrSafe Function GetProcessId Lib "kernel32" (ByVal Process As LongPtr) As Long
Public Declare PtrSafe Function GetThreadId Lib "kernel32" (ByVal Thread As LongPtr) As Long
Public Declare PtrSafe Sub FlushProcessWriteBuffers Lib "kernel32" ()
Public Declare PtrSafe Function SetProcessDynamicEHContinuationTargets Lib "kernel32" (ByVal Process As LongPtr, ByVal NumberOfTargets As Integer, Targets As PROCESS_DYNAMIC_EH_CONTINUATION_TARGET) As BOOL
Public Declare PtrSafe Function SetProcessDynamicEnforcedCetCompatibleRanges Lib "kernel32" (ByVal Process As LongPtr, ByVal NumberOfRanges As Integer, Ranges As PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE) As BOOL
Public Declare PtrSafe Function SetProcessAffinityUpdateMode Lib "kernel32" (ByVal hProcess As LongPtr, ByVal dwFlags As ProcessAffinityUpdateFlags) As BOOL
Public Declare PtrSafe Function QueryProcessAffinityUpdateMode Lib "kernel32" (ByVal hProcess As LongPtr, Optional lpdwFlags As ProcessAffinityUpdateFlags) As BOOL
Public Declare PtrSafe Function GetSystemTimes Lib "kernel32" (lpIdleTime As FILETIME, lpKernelTime As FILETIME, lpUserTime As FILETIME) As BOOL
Public Declare PtrSafe Function SetProtectedPolicy Lib "kernel32" (PolicyGuid As UUID, ByVal PolicyValue As LongPtr, Optional OldPolicyValue As LongPtr) As BOOL
Public Declare PtrSafe Function QueryProtectedPolicy Lib "kernel32" (PolicyGuid As UUID, PolicyValue As LongPtr) As BOOL
Public DeclareWide PtrSafe Sub RaiseFailFastException Lib "kernel32" (pExceptionRecord As EXCEPTION_RECORD, pContextRecord As Any, ByVal dwFlags As FailFastExceptionFlags)
[Description("**DEPRECATED** Only for 16bit compatibility. Use CreateProcess or ShellExecute.")]
Public Declare PtrSafe Function WinExec Lib "kernel32" (ByVal lpCmdLine As String, ByVal uCmdShow As SHOWWINDOW) As Long
Public Declare PtrSafe Function AddSecureMemoryCacheCallback Lib "kernel32" (ByVal pfnCallBack As LongPtr) As BOOL
Public Declare PtrSafe Function RemoveSecureMemoryCacheCallback Lib "kernel32" (ByVal pfnCallBack As LongPtr) As BOOL

Public Declare PtrSafe Function EnableThreadProfiling Lib "kernel32" (ByVal ThreadHandle As LongPtr, ByVal Flags As ThreadProfilingFlags, ByVal HardwareCounters As LongLong, PerformanceDataHandle As LongPtr) As Long
Public Declare PtrSafe Function DisableThreadProfiling Lib "kernel32" (ByVal PerformanceDataHandle As LongPtr) As Long
Public Declare PtrSafe Function QueryThreadProfiling Lib "kernel32" (ByVal ThreadHandle As LongPtr, Enabled As Byte) As Long
Public Declare PtrSafe Function ReadThreadProfilingData Lib "kernel32" (ByVal PerformanceDataHandle As LongPtr, ByVal Flags As ReadThreadProfilingFlags, PerformanceData As PERFORMANCE_DATA) As Long

Public Function GetCurrentProcessToken() As LongPtr: Return (-4): End Function
Public Function GetCurrentThreadToken() As LongPtr: Return (-5): End Function
Public Function GetCurrentThreadEffectiveToken() As LongPtr: Return (-6): End Function

Public Const MAX_HW_COUNTERS = 16

Public Enum ThreadProfilingFlags
    THREAD_PROFILING_FLAG_DISPATCH = &H00000001
End Enum

Public Enum HARDWARE_COUNTER_TYPE
    PMCCounter
    MaxHardwareCounterType
End Enum

Public Enum ReadThreadProfilingFlags
    READ_THREAD_PROFILING_FLAG_DISPATCHING = &H00000001
    READ_THREAD_PROFILING_FLAG_HARDWARE_COUNTERS = &H00000002
End Enum

Public Type HARDWARE_COUNTER_DATA
    Type As HARDWARE_COUNTER_TYPE
    Reserved As Long
    Value As LongLong
End Type

Public Const PERFORMANCE_DATA_VERSION = 1
Public Type PERFORMANCE_DATA
    Size As Integer
    Version As Byte
    HwCountersCount As Byte
    ContextSwitchCount As Long
    WaitReasonBitMap As LongLong
    CycleTime As LongLong
    RetryCount As Long
    Reserved As Long
    HwCounters(0 To (MAX_HW_COUNTERS - 1)) As HARDWARE_COUNTER_DATA
End Type

Public Enum ProcessAffinityUpdateFlags
    PROCESS_AFFINITY_ENABLE_AUTO_UPDATE = &H00000001
End Enum

Public Enum JobAccessRights
    JOB_OBJECT_ASSIGN_PROCESS = (&H0001)
    JOB_OBJECT_SET_ATTRIBUTES = (&H0002)
    JOB_OBJECT_QUERY = (&H0004)
    JOB_OBJECT_TERMINATE = (&H0008)
    JOB_OBJECT_SET_SECURITY_ATTRIBUTES = (&H0010)
    JOB_OBJECT_IMPERSONATE = (&H0020)
    JOB_OBJECT_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or SYNCHRONIZE Or &H3F)
End Enum

Public Type JOB_SET_ARRAY
    JobHandle As LongPtr ' Handle to job object to insert
    MemberLevel As Long ' Level of this job in the set. Must be > 0. Can be sparse.
    Flags As Long ' Unused. Must be zero
End Type

Public Enum JOBOBJECTINFOCLASS
    JobObjectBasicAccountingInformation = 1
    JobObjectBasicLimitInformation
    JobObjectBasicProcessIdList
    JobObjectBasicUIRestrictions
    JobObjectSecurityLimitInformation ' deprecated
    JobObjectEndOfJobTimeInformation
    JobObjectAssociateCompletionPortInformation
    JobObjectBasicAndIoAccountingInformation
    JobObjectExtendedLimitInformation
    JobObjectJobSetInformation
    JobObjectGroupInformation
    JobObjectNotificationLimitInformation
    JobObjectLimitViolationInformation
    JobObjectGroupInformationEx
    JobObjectCpuRateControlInformation
    JobObjectCompletionFilter
    JobObjectCompletionCounter

'
'

    JobObjectReserved1Information = 18
    JobObjectReserved2Information
    JobObjectReserved3Information
    JobObjectReserved4Information
    JobObjectReserved5Information
    JobObjectReserved6Information
    JobObjectReserved7Information
    JobObjectReserved8Information
    JobObjectReserved9Information
    JobObjectReserved10Information
    JobObjectReserved11Information
    JobObjectReserved12Information
    JobObjectReserved13Information
    JobObjectReserved14Information = 31
    JobObjectNetRateControlInformation
    JobObjectNotificationLimitInformation2
    JobObjectLimitViolationInformation2
    JobObjectCreateSilo
    JobObjectSiloBasicInformation
    JobObjectReserved15Information = 37
    JobObjectReserved16Information = 38
    JobObjectReserved17Information = 39
    JobObjectReserved18Information = 40
    JobObjectReserved19Information = 41
    JobObjectReserved20Information = 42
    JobObjectReserved21Information = 43
    JobObjectReserved22Information = 44
    JobObjectReserved23Information = 45
    JobObjectReserved24Information = 46
    JobObjectReserved25Information = 47
    JobObjectReserved26Information = 48
    JobObjectReserved27Information = 49
    MaxJobObjectInfoClass
End Enum

Public Enum JOB_OBJ_EOJ
    JOB_OBJECT_TERMINATE_AT_END_OF_JOB = 0
    JOB_OBJECT_POST_AT_END_OF_JOB = 1
End Enum
Public Enum JOB_OBJ_MSGS
    JOB_OBJECT_MSG_END_OF_JOB_TIME = 1
    JOB_OBJECT_MSG_END_OF_PROCESS_TIME = 2
    JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT = 3
    JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO = 4
    JOB_OBJECT_MSG_NEW_PROCESS = 6
    JOB_OBJECT_MSG_EXIT_PROCESS = 7
    JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS = 8
    JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT = 9
    JOB_OBJECT_MSG_JOB_MEMORY_LIMIT = 10
    JOB_OBJECT_MSG_NOTIFICATION_LIMIT = 11
    JOB_OBJECT_MSG_JOB_CYCLE_TIME_LIMIT = 12
    JOB_OBJECT_MSG_SILO_TERMINATED = 13
End Enum
Public Enum JOB_CPU_RATE_CTL
    JOB_OBJECT_CPU_RATE_CONTROL_ENABLE = &H1
    JOB_OBJECT_CPU_RATE_CONTROL_WEIGHT_BASED = &H2
    JOB_OBJECT_CPU_RATE_CONTROL_HARD_CAP = &H4
    JOB_OBJECT_CPU_RATE_CONTROL_NOTIFY = &H8
    JOB_OBJECT_CPU_RATE_CONTROL_MIN_MAX_RATE = &H10
    JOB_OBJECT_CPU_RATE_CONTROL_VALID_FLAGS = &H1f
End Enum
Public Enum JOB_OBJ_UI_LIMITS
    JOB_OBJECT_UILIMIT_NONE = &H00000000
    JOB_OBJECT_UILIMIT_HANDLES = &H00000001
    JOB_OBJECT_UILIMIT_READCLIPBOARD = &H00000002
    JOB_OBJECT_UILIMIT_WRITECLIPBOARD = &H00000004
    JOB_OBJECT_UILIMIT_SYSTEMPARAMETERS = &H00000008
    JOB_OBJECT_UILIMIT_DISPLAYSETTINGS = &H00000010
    JOB_OBJECT_UILIMIT_GLOBALATOMS = &H00000020
    JOB_OBJECT_UILIMIT_DESKTOP = &H00000040
    JOB_OBJECT_UILIMIT_EXITWINDOWS = &H00000080
    JOB_OBJECT_UILIMIT_IME = &H00000100
    JOB_OBJECT_UILIMIT_ALL = &H000001FF
    JOB_OBJECT_UI_VALID_FLAGS = &H000001FF
End Enum
Public Enum JOB_OBJ_SECURITY
    JOB_OBJECT_SECURITY_NO_ADMIN = &H00000001
    JOB_OBJECT_SECURITY_RESTRICTED_TOKEN = &H00000002
    JOB_OBJECT_SECURITY_ONLY_TOKEN = &H00000004
    JOB_OBJECT_SECURITY_FILTER_TOKENS = &H00000008
    JOB_OBJECT_SECURITY_VALID_FLAGS = &H0000000f
End Enum
Public Enum JOB_OBJ_BASIC_LIMITS
    JOB_OBJECT_LIMIT_WORKINGSET = &H00000001
    JOB_OBJECT_LIMIT_PROCESS_TIME = &H00000002
    JOB_OBJECT_LIMIT_JOB_TIME = &H00000004
    JOB_OBJECT_LIMIT_ACTIVE_PROCESS = &H00000008
    JOB_OBJECT_LIMIT_AFFINITY = &H00000010
    JOB_OBJECT_LIMIT_PRIORITY_CLASS = &H00000020
    JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME = &H00000040
    JOB_OBJECT_LIMIT_SCHEDULING_CLASS = &H00000080
    JOB_OBJECT_LIMIT_PROCESS_MEMORY = &H00000100
    JOB_OBJECT_LIMIT_JOB_MEMORY = &H00000200
    JOB_OBJECT_LIMIT_JOB_MEMORY_HIGH = JOB_OBJECT_LIMIT_JOB_MEMORY
    JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION = &H00000400
    JOB_OBJECT_LIMIT_BREAKAWAY_OK = &H00000800
    JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK = &H00001000
    JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE = &H00002000
    JOB_OBJECT_LIMIT_SUBSET_AFFINITY = &H00004000
    JOB_OBJECT_LIMIT_JOB_MEMORY_LOW = &H00008000&
    JOB_OBJECT_LIMIT_JOB_READ_BYTES = &H00010000
    JOB_OBJECT_LIMIT_JOB_WRITE_BYTES = &H00020000
    JOB_OBJECT_LIMIT_RATE_CONTROL = &H00040000
    JOB_OBJECT_LIMIT_CPU_RATE_CONTROL = JOB_OBJECT_LIMIT_RATE_CONTROL
    JOB_OBJECT_LIMIT_IO_RATE_CONTROL = &H00080000
    JOB_OBJECT_LIMIT_NET_RATE_CONTROL = &H00100000
End Enum
Public Enum JOB_OBJ_VALID_FLAGS
    JOB_OBJECT_LIMIT_VALID_FLAGS = &H0007ffff
    JOB_OBJECT_BASIC_LIMIT_VALID_FLAGS = &H000000ff
    JOB_OBJECT_EXTENDED_LIMIT_VALID_FLAGS = &H00007fff
    JOB_OBJECT_NOTIFICATION_LIMIT_VALID_FLAGS = (JOB_OBJECT_LIMIT_JOB_READ_BYTES Or JOB_OBJECT_LIMIT_JOB_WRITE_BYTES Or JOB_OBJECT_LIMIT_JOB_TIME Or JOB_OBJECT_LIMIT_JOB_MEMORY_LOW Or JOB_OBJECT_LIMIT_JOB_MEMORY_HIGH Or JOB_OBJECT_LIMIT_CPU_RATE_CONTROL Or JOB_OBJECT_LIMIT_IO_RATE_CONTROL Or JOB_OBJECT_LIMIT_NET_RATE_CONTROL)
End Enum

Public Const JOB_OBJECT_MSG_MINIMUM  = 1
Public Const JOB_OBJECT_MSG_MAXIMUM  = 13
Public Const JOB_OBJECT_VALID_COMPLETION_FILTER  = (((1 << (JOB_OBJECT_MSG_MAXIMUM + 1)) - 1) - ((1 << JOB_OBJECT_MSG_MINIMUM) - 1))

Public Type JOBOBJECT_BASIC_ACCOUNTING_INFORMATION
    TotalUserTime As LARGE_INTEGER
    TotalKernelTime As LARGE_INTEGER
    ThisPeriodTotalUserTime As LARGE_INTEGER
    ThisPeriodTotalKernelTime As LARGE_INTEGER
    TotalPageFaultCount As Long
    TotalProcesses As Long
    ActiveProcesses As Long
    TotalTerminatedProcesses As Long
End Type
Public Type JOBOBJECT_BASIC_LIMIT_INFORMATION
    PerProcessUserTimeLimit As LARGE_INTEGER
    PerJobUserTimeLimit As LARGE_INTEGER
    LimitFlags As JOB_OBJ_BASIC_LIMITS
    MinimumWorkingSetSize As LongPtr
    MaximumWorkingSetSize As LongPtr
    ActiveProcessLimit As Long
    Affinity As LongPtr
    PriorityClass As PriorityClass
    SchedulingClass As Long
End Type
Public Type JOBOBJECT_EXTENDED_LIMIT_INFORMATION
    BasicLimitInformation As JOBOBJECT_BASIC_LIMIT_INFORMATION
    IoInfo As IO_COUNTERS
    ProcessMemoryLimit As LongPtr
    JobMemoryLimit As LongPtr
    PeakProcessMemoryUsed As LongPtr
    PeakJobMemoryUsed As LongPtr
End Type
[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type JOBOBJECT_BASIC_PROCESS_ID_LIST
    NumberOfAssignedProcesses As Long
    NumberOfProcessIdsInList As Long
    ProcessIdList() As LongPtr
End Type
Public Type JOBOBJECT_BASIC_UI_RESTRICTIONS
    UIRestrictionsClass As JOB_OBJ_UI_LIMITS
End Type
Public Type JOBOBJECT_SECURITY_LIMIT_INFORMATION
    SecurityLimitFlags As JOB_OBJ_SECURITY
    JobToken As LongPtr
    SidsToDisable As LongPtr 'PTOKEN_GROUPS
    PrivilegesToDelete As LongPtr 'PTOKEN_PRIVILEGES
    RestrictedSids As LongPtr 'PTOKEN_GROUPS
End Type
Public Type JOBOBJECT_END_OF_JOB_TIME_INFORMATION
    EndOfJobTimeAction As JOB_OBJ_EOJ
End Type
Public Type JOBOBJECT_ASSOCIATE_COMPLETION_PORT
    CompletionKey As LongPtr
    CompletionPort As LongPtr
End Type
Public Type JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION
    BasicInfo As JOBOBJECT_BASIC_ACCOUNTING_INFORMATION
    IoInfo As IO_COUNTERS
End Type
Public Type JOBOBJECT_JOBSET_INFORMATION
    MemberLevel As Long
End Type
Public Enum JOBOBJECT_RATE_CONTROL_TOLERANCE
    ToleranceLow = 1
    ToleranceMedium
    ToleranceHigh
End Enum
Public Enum JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
    ToleranceIntervalShort = 1
    ToleranceIntervalMedium
    ToleranceIntervalLong
End Enum
Public Type JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION
    IoReadBytesLimit As LongLong
    IoWriteBytesLimit As LongLong
    PerJobUserTimeLimit As LARGE_INTEGER
    JobMemoryLimit As LongLong
    RateControlTolerance As JOBOBJECT_RATE_CONTROL_TOLERANCE
    RateControlToleranceInterval As JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
    LimitFlags As JOB_OBJ_BASIC_LIMITS
End Type
Public Type JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2
    IoReadBytesLimit As LongLong
    IoWriteBytesLimit As LongLong
    PerJobUserTimeLimit As LARGE_INTEGER
    'union {
    '    DWORD64 JobHighMemoryLimit;
    '    DWORD64 JobMemoryLimit;
    '} DUMMYUNIONNAME;
    JobMemoryLimits As LongLong
    'union {
    '    JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    '    JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlTolerance;
    '} DUMMYUNIONNAME2;
    RateControl As JOBOBJECT_RATE_CONTROL_TOLERANCE
    'union {
    '    JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval;
    '    JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
    '        CpuRateControlToleranceInterval;
    '} DUMMYUNIONNAME3;
    RateControlToleranceInterval As JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
    LimitFlags As JOB_OBJ_BASIC_LIMITS
    IoRateControlTolerance As JOBOBJECT_RATE_CONTROL_TOLERANCE
    JobLowMemoryLimit As LongLong
    IoRateControlToleranceInterval As JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
    NetRateControlTolerance As JOBOBJECT_RATE_CONTROL_TOLERANCE
    NetRateControlToleranceInterval As JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
End Type
Public Type JOBOBJECT_LIMIT_VIOLATION_INFORMATION
    LimitFlags As JOB_OBJ_BASIC_LIMITS
    ViolationLimitFlags As JOB_OBJ_BASIC_LIMITS
    IoReadBytes As LongLong
    IoReadBytesLimit As LongLong
    IoWriteBytes As LongLong
    IoWriteBytesLimit As LongLong
    PerJobUserTime As LARGE_INTEGER
    PerJobUserTimeLimit As LARGE_INTEGER
    JobMemory As LongLong
    JobMemoryLimit As LongLong
    RateControlTolerance As JOBOBJECT_RATE_CONTROL_TOLERANCE
    RateControlToleranceLimit As JOBOBJECT_RATE_CONTROL_TOLERANCE
End Type
Public Type JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2
    LimitFlags As JOB_OBJ_BASIC_LIMITS
    ViolationLimitFlags As JOB_OBJ_BASIC_LIMITS
    IoReadBytes As LongLong
    IoReadBytesLimit As LongLong
    IoWriteBytes As LongLong
    IoWriteBytesLimit As LongLong
    PerJobUserTime As LARGE_INTEGER
    PerJobUserTimeLimit As LARGE_INTEGER
    JobMemory As LongLong
    
    'union {
    '    DWORD64 JobHighMemoryLimit;
    '    DWORD64 JobMemoryLimit;
    '} DUMMYUNIONNAME;
    JobMemoryLimits As LongLong
    'union {
    '    JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    '    JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlTolerance;
    '} DUMMYUNIONNAME2;
    RateControl As JOBOBJECT_RATE_CONTROL_TOLERANCE
    'union {
    '    JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlToleranceLimit;
    '    JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlToleranceLimit;
    '} DUMMYUNIONNAME3;
    RateControlToleranceInterval As JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
    
    JobLowMemoryLimit As LongLong
    IoRateControlTolerance As JOBOBJECT_RATE_CONTROL_TOLERANCE
    IoRateControlToleranceLimit As JOBOBJECT_RATE_CONTROL_TOLERANCE
    NetRateControlTolerance As JOBOBJECT_RATE_CONTROL_TOLERANCE
    NetRateControlToleranceLimit As JOBOBJECT_RATE_CONTROL_TOLERANCE
End Type
Public Type JOBOBJECT_CPU_RATE_CONTROL_INFORMATION
    ControlFlags As JOB_CPU_RATE_CTL
    'union {
    '    DWORD CpuRate;
    '    DWORD Weight;
    '    struct {
    '        WORD   MinRate;
    '        WORD   MaxRate;
    '    } DUMMYSTRUCTNAME;
    '} DUMMYUNIONNAME;
    RateOrWeight As Long
End Type

Public Enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS
    JOB_OBJECT_NET_RATE_CONTROL_ENABLE = &H1
    JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH = &H2
    JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG = &H4
    JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS = &H7
End Enum

Public Const JOB_OBJECT_NET_RATE_CONTROL_MAX_DSCP_TAG = 64
Public Type JOBOBJECT_NET_RATE_CONTROL_INFORMATION
    MaxBandwidth As LongLong
    ControlFlags As JOB_OBJECT_NET_RATE_CONTROL_FLAGS
    DscpTag As Byte
End Type

Public Enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS
    JOB_OBJECT_IO_RATE_CONTROL_ENABLE = &H1
    JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME = &H2
    JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL = &H4
    JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP = &H8
    JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS = JOB_OBJECT_IO_RATE_CONTROL_ENABLE Or JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME Or JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL Or JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP
End Enum
Public Type JOBOBJECT_IO_RATE_CONTROL_INFORMATION
    MaxIops As LongLong
    MaxBandwidth As LongLong
    ReservationIops As LongLong
    VolumeName As LongPtr
    BaseIoSize As Long
    ControlFlags As JOB_OBJECT_IO_RATE_CONTROL_FLAGS
End Type
Public Type JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE
    MaxIops As LongLong
    MaxBandwidth As LongLong
    ReservationIops As LongLong
    VolumeName As LongPtr
    BaseIoSize As Long
    ControlFlags As JOB_OBJECT_IO_RATE_CONTROL_FLAGS
    VolumeNameLength As Integer
End Type
Public Type JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2
    MaxIops As LongLong
    MaxBandwidth As LongLong
    ReservationIops As LongLong
    VolumeName As LongPtr
    BaseIoSize As Long
    ControlFlags As JOB_OBJECT_IO_RATE_CONTROL_FLAGS
    VolumeNameLength As Integer
    CriticalReservationIops As LongLong
    ReservationBandwidth As LongLong
    CriticalReservationBandwidth As LongLong
    MaxTimePercent As LongLong
    ReservationTimePercent As LongLong
    CriticalReservationTimePercent As LongLong
End Type
Public Type JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3
    MaxIops As LongLong
    MaxBandwidth As LongLong
    ReservationIops As LongLong
    VolumeName As LongPtr
    BaseIoSize As Long
    ControlFlags As JOB_OBJECT_IO_RATE_CONTROL_FLAGS
    VolumeNameLength As Integer
    CriticalReservationIops As LongLong
    ReservationBandwidth As LongLong
    CriticalReservationBandwidth As LongLong
    MaxTimePercent As LongLong
    ReservationTimePercent As LongLong
    CriticalReservationTimePercent As LongLong
    SoftMaxIops As LongLong
    SoftMaxBandwidth As LongLong
    SoftMaxTimePercent As LongLong
    LimitExcessNotifyIops As LongLong
    LimitExcessNotifyBandwidth As LongLong
    LimitExcessNotifyTimePercent As LongLong
End Type
Public Enum JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS
    JOBOBJECT_IO_ATTRIBUTION_CONTROL_ENABLE = &H1
    JOBOBJECT_IO_ATTRIBUTION_CONTROL_DISABLE = &H2
    JOBOBJECT_IO_ATTRIBUTION_CONTROL_VALID_FLAGS = &H3
End Enum
Public Type JOBOBJECT_IO_ATTRIBUTION_STATS
    IoCount As LongPtr
    TotalNonOverlappedQueueTime As LongLong
    TotalNonOverlappedServiceTime As LongLong
    TotalSize As LongLong
End Type
Public Type JOBOBJECT_IO_ATTRIBUTION_INFORMATION
    ControlFlags As JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS
    ReadStats As JOBOBJECT_IO_ATTRIBUTION_STATS
    WriteStats As JOBOBJECT_IO_ATTRIBUTION_STATS
End Type

Public Declare PtrSafe Function CreateJobObjectA Lib "kernel32" (lpJobAttributes As SECURITY_ATTRIBUTES, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function CreateJobObjectW Lib "kernel32" (lpJobAttributes As SECURITY_ATTRIBUTES, ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateJobObject Lib "kernel32" Alias "CreateJobObjectW" (lpJobAttributes As SECURITY_ATTRIBUTES, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function AssignProcessToJobObject Lib "kernel32" (ByVal hJob As LongPtr, ByVal hProcess As LongPtr) As BOOL
Public Declare PtrSafe Function OpenJobObjectA Lib "kernel32" ([TypeHint(StandardAccessTypes, JobAccessRights)] ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function OpenJobObjectW Lib "kernel32" ([TypeHint(StandardAccessTypes, JobAccessRights)] ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenJobObject Lib "kernel32" Alias "OpenJobObjectW" ([TypeHint(StandardAccessTypes, JobAccessRights)] ByVal dwDesiredAccess As Long, ByVal bInheritHandle As BOOL, ByVal lpName As String) As LongPtr
Public DeclareWide PtrSafe Function SetInformationJobObject Lib "kernel32" (ByVal hJob As LongPtr, ByVal JobObjectInformationClass As JOBOBJECTINFOCLASS, lpJobObjectInformation As Any, ByVal cbJobObjectInformationLength As Long) As BOOL
Public DeclareWide PtrSafe Function QueryInformationJobObject Lib "kernel32" (ByVal hJob As LongPtr, ByVal JobObjectInformationClass As JOBOBJECTINFOCLASS, lpJobObjectInformation As Any, ByVal cbJobObjectInformationLength As Long, Optional lpReturnLength As Long) As BOOL
Public Declare PtrSafe Function IsProcessInJob Lib "kernel32" (ByVal ProcessHandle As LongPtr, ByVal JobHandle As LongPtr, Result As BOOL) As BOOL
Public Declare PtrSafe Sub FreeMemoryJobObject Lib "kernel32" (ByVal Buffer As LongPtr)
Public Declare PtrSafe Function TerminateJobObject Lib "kernel32" (ByVal hJob As LongPtr, ByVal uExitCode As Long) As BOOL
Public Declare PtrSafe Function SetIoRateControlInformationJobObject Lib "kernel32" (ByVal hJob As LongPtr, IoRateControlInfo As JOBOBJECT_IO_RATE_CONTROL_INFORMATION) As Long
Public DeclareWide PtrSafe Function QueryIoRateControlInformationJobObject Lib "kernel32" (ByVal hJob As LongPtr, ByVal VolumeName As String, InfoBlocks As LongPtr /*JOBOBJECT_IO_RATE_CONTROL_INFORMATION*/, InfoBlockCount As Long) As Long

Public Declare PtrSafe Function GetEnvironmentVariableA Lib "kernel32" (ByVal lpName As String, ByVal lpBuffer As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetEnvironmentVariableW Lib "kernel32" (ByVal lpName As LongPtr, ByVal lpBuffer As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetEnvironmentVariable Lib "kernel32" Alias "GetEnvironmentVariableW" (ByVal lpName As String, ByVal lpBuffer As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function SetEnvironmentVariableA Lib "kernel32" (ByVal lpName As String, Optional ByVal lpValue As String) As BOOL
Public Declare PtrSafe Function SetEnvironmentVariableW Lib "kernel32" (ByVal lpName As LongPtr, Optional ByVal lpValue As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetEnvironmentVariable Lib "kernel32" Alias "SetEnvironmentVariableW" (ByVal lpName As String, Optional ByVal lpValue As String) As BOOL
Public Declare PtrSafe Function ExpandEnvironmentStringsA Lib "kernel32" (ByVal lpSrc As String, ByVal lpDst As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function ExpandEnvironmentStringsW Lib "kernel32" (ByVal lpSrc As LongPtr, ByVal lpDst As LongPtr, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function ExpandEnvironmentStrings Lib "kernel32" Alias "ExpandEnvironmentStringsW" (ByVal lpSrc As String, ByVal lpDst As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function SetEnvironmentStringsA Lib "kernel32" (ByVal NewEnvironment As String) As BOOL
Public Declare PtrSafe Function SetEnvironmentStringsW Lib "kernel32" (ByVal NewEnvironment As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetEnvironmentStrings Lib "kernel32" Alias "SetEnvironmentStringsW" (ByVal NewEnvironment As String) As BOOL
Public Declare PtrSafe Function GetEnvironmentStrings Lib "kernel32" () As String
Public Declare PtrSafe Function GetEnvironmentStringsA Lib "kernel32" () As String
Public Declare PtrSafe Function GetEnvironmentStringsW Lib "kernel32" () As LongPtr
Public Declare PtrSafe Function FreeEnvironmentStringsA Lib "kernel32" (ByVal penv As LongPtr) As BOOL
Public Declare PtrSafe Function FreeEnvironmentStringsW Lib "kernel32" (ByVal penv As LongPtr) As BOOL
Public DeclareWide PtrSafe Function FreeEnvironmentStrings Lib "kernel32" Alias "FreeEnvironmentStringsW" (ByVal penv As LongPtr) As BOOL

Public Declare PtrSafe Function LocalFileTimeToFileTime Lib "kernel32" (lpFileTime As FILETIME, lpLocalFileTime As FILETIME) As BOOL
Public Declare PtrSafe Function FileTimeToLocalFileTime Lib "kernel32" (lpFileTime As FILETIME, lpLocalFileTime As FILETIME) As BOOL
Public Declare PtrSafe Function FileTimeToSystemTime Lib "kernel32" (lpFileTime As FILETIME, lpSystemTime As SYSTEMTIME) As BOOL
Public Declare PtrSafe Function SystemTimeToFileTime Lib "kernel32" (lpSystemTime As SYSTEMTIME, lpFileTime As FILETIME) As BOOL
Public Declare PtrSafe Function DosDateTimeToFileTime Lib "kernel32" (ByVal wFatDate As Integer, ByVal wFatTime As Integer, lpFileTime As FILETIME) As BOOL
Public Declare PtrSafe Function FileTimeToDosDateTime Lib "kernel32" (lpFileTime As FILETIME, lpFatDate As Integer, lpFatTime As Integer) As BOOL
Public Declare PtrSafe Function SetSystemTime Lib "kernel32" (lpSystemTime As SYSTEMTIME) As BOOL
Public Declare PtrSafe Sub GetSystemTime Lib "kernel32" (lpSystemTime As SYSTEMTIME)
Public Declare PtrSafe Sub GetSystemTimeAsFileTime Lib "kernel32" (lpSystemTime As FILETIME)
Public Declare PtrSafe Sub GetSystemTimePreciseAsFileTime Lib "kernel32" (lpSystemTime As FILETIME)
Public Declare PtrSafe Function SetLocalTime Lib "kernel32" (lpSystemTime As SYSTEMTIME) As BOOL
Public Declare PtrSafe Sub GetLocalTime Lib "kernel32" (lpSystemTime As SYSTEMTIME)
Public Declare PtrSafe Function SetSystemTimeAdjustment Lib "kernel32" (ByVal dwTimeAdjustment As Long, ByVal bTimeAdjustmentDisabled As Long) As BOOL
Public Declare PtrSafe Function SetSystemTimeAdjustmentPrecise Lib "kernelbase" (ByVal dwTimeAdjustment As LongLong, ByVal bTimeAdjustmentDisabled As Long) As BOOL
Public Declare PtrSafe Function GetSystemTimeAdjustment Lib "kernel32" (lpTimeAdjustment As Long, lpTimeIncrement As Long, lpTimeAdjustmentDisabled As Long) As BOOL
Public Declare PtrSafe Function GetSystemTimeAdjustmentPrecise Lib "kernelbase" (lpTimeAdjustment As Long, lpTimeIncrement As Long, lpTimeAdjustmentDisabled As Long) As BOOL
Public Declare PtrSafe Function SystemTimeToTzSpecificLocalTime Lib "kernel32" (lpTimeZoneInformation As TIME_ZONE_INFORMATION, lpUniversalTime As SYSTEMTIME, lpLocalTime As SYSTEMTIME) As BOOL
Public Declare PtrSafe Function SystemTimeToTzSpecificLocalTimeEx Lib "kernel32" (lpTimeZoneInformation As DYNAMIC_TIME_ZONE_INFORMATION, lpUniversalTime As SYSTEMTIME, lpLocalTime As SYSTEMTIME) As BOOL
Public Declare PtrSafe Function TzSpecificLocalTimeToSystemTime Lib "kernel32" (lpTimeZoneInformation As TIME_ZONE_INFORMATION, lpLocalTime As SYSTEMTIME, lpUniversalTime As SYSTEMTIME) As BOOL
Public Declare PtrSafe Function TzSpecificLocalTimeToSystemTimeEx Lib "kernel32" (lpTimeZoneInformation As DYNAMIC_TIME_ZONE_INFORMATION, lpLocalTime As SYSTEMTIME, lpUniversalTime As SYSTEMTIME) As BOOL
Public Declare PtrSafe Function GetDynamicTimeZoneInformation Lib "kernel32" (lpTimeZoneInformation As DYNAMIC_TIME_ZONE_INFORMATION) As TIME_ZONE_ID
Public Declare PtrSafe Function SetDynamicTimeZoneInformation Lib "kernel32" (lpTimeZoneInformation As DYNAMIC_TIME_ZONE_INFORMATION) As BOOL
Public Declare PtrSafe Function GetTimeZoneInformation Lib "kernel32" (lpTimeZoneInformation As TIME_ZONE_INFORMATION) As TIME_ZONE_ID
Public Declare PtrSafe Function SetTimeZoneInformation Lib "kernel32" (lpTimeZoneInformation As TIME_ZONE_INFORMATION) As BOOL
Public Declare PtrSafe Function GetTimeZoneInformationForYear Lib "kernel32" (ByVal wYear As Integer, pdtzi As DYNAMIC_TIME_ZONE_INFORMATION, ptzi As TIME_ZONE_INFORMATION) As BOOL

Public Enum COMPUTER_NAME_FORMAT
  ComputerNameNetBIOS
  ComputerNameDnsHostname
  ComputerNameDnsDomain
  ComputerNameDnsFullyQualified
  ComputerNamePhysicalNetBIOS
  ComputerNamePhysicalDnsHostname
  ComputerNamePhysicalDnsDomain
  ComputerNamePhysicalDnsFullyQualified
  ComputerNameMax
End Enum

Public Const MAX_COMPUTERNAME_LENGTH = 15

Public Enum SCNEX2_Flags
    SCEX2_ALT_NETBIOS_NAME = &H1
End Enum


Public Declare PtrSafe Function GetComputerNameA Lib "kernel32" (ByVal lpBuffer As String, nSize As Long) As BOOL
Public Declare PtrSafe Function GetComputerNameW Lib "kernel32" (ByVal lpBuffer As LongPtr, nSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetComputerName Lib "kernel32" Alias "GetComputerNameW" (ByVal lpBuffer As String, nSize As Long) As BOOL
Public Declare PtrSafe Function SetComputerNameA Lib "kernel32" (ByVal lpBuffer As String) As BOOL
Public Declare PtrSafe Function SetComputerNameW Lib "kernel32" (ByVal lpBuffer As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetComputerName Lib "kernel32" Alias "SetComputerNameW" (ByVal lpBuffer As String) As BOOL
Public Declare PtrSafe Function GetComputerNameExA Lib "kernel32" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As String, nSize As Long) As BOOL
Public Declare PtrSafe Function GetComputerNameExW Lib "kernel32" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As LongPtr, nSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetComputerNameEx Lib "kernel32" Alias "GetComputerNameExW" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As String, nSize As Long) As BOOL
Public Declare PtrSafe Function SetComputerNameExA Lib "kernel32" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As String) As BOOL
Public Declare PtrSafe Function SetComputerNameExW Lib "kernel32" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetComputerNameEx Lib "kernel32" Alias "SetComputerNameExW" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal lpBuffer As String) As BOOL
'SetComputerNameEx2A does not exist.
Public Declare PtrSafe Function SetComputerNameEx2W Lib "kernel32" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal Flags As SCNEX2_Flags, ByVal lpBuffer As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetComputerNameEx2 Lib "kernel32" Alias "SetComputerNameEx2W" (ByVal nameType As COMPUTER_NAME_FORMAT, ByVal Flags As SCNEX2_Flags, ByVal lpBuffer As String) As BOOL
Public Declare PtrSafe Function DnsHostnameToComputerNameA Lib "kernel32" (ByVal Hostname As String, ByVal ComputerName As String, nSize As Long) As BOOL
Public Declare PtrSafe Function DnsHostnameToComputerNameW Lib "kernel32" (ByVal Hostname As LongPtr, ByVal ComputerName As LongPtr, nSize As Long) As BOOL
Public DeclareWide PtrSafe Function DnsHostnameToComputerName Lib "kernel32" Alias "DnsHostnameToComputerNameW" (ByVal Hostname As String, ByVal ComputerName As String, nSize As Long) As BOOL


Public Declare PtrSafe Function GlobalAddAtomW Lib "kernel32" (ByVal lpString As LongPtr) As Integer
Public Declare PtrSafe Function GlobalAddAtomA Lib "kernel32" (ByVal lpString As String) As Integer
Public DeclareWide PtrSafe Function GlobalAddAtom Lib "kernel32" Alias "GlobalAddAtomW" (ByVal lpString As String) As Integer
Public Declare PtrSafe Function GlobalDeleteAtom Lib "kernel32" (ByVal nAtom As Integer) As Integer
Public Declare PtrSafe Function DeleteAtom Lib "kernel32" (ByVal nAtom As Integer) As Integer
Public Declare PtrSafe Function InitAtomTable Lib "kernel32" (ByVal nSize As Long) As BOOL
Public Declare PtrSafe Function AddAtomW Lib "kernel32" (ByVal lpString As LongPtr) As Integer
Public Declare PtrSafe Function AddAtomA Lib "kernel32" (ByVal lpString As String) As Integer
Public DeclareWide PtrSafe Function AddAtom Lib "kernel32" Alias "AddAtomW" (ByVal lpString As String) As Integer
Public Declare PtrSafe Function FindAtomW Lib "kernel32" (ByVal lpString As LongPtr) As Integer
Public Declare PtrSafe Function FindAtomA Lib "kernel32" (ByVal lpString As String) As Integer
Public DeclareWide PtrSafe Function FindAtom Lib "kernel32" Alias "FindAtomW" (ByVal lpString As String) As Integer
Public Declare PtrSafe Function GlobalFindAtomW Lib "kernel32" (ByVal lpString As LongPtr) As Integer
Public Declare PtrSafe Function GlobalFindAtomA Lib "kernel32" (ByVal lpString As String) As Integer
Public DeclareWide PtrSafe Function GlobalFindAtom Lib "kernel32" Alias "GlobalFindAtomW" (ByVal lpString As String) As Integer
Public Declare PtrSafe Function GetAtomNameW Lib "kernel32" (ByVal nAtom As Integer, ByVal lpBuffer As LongPtr, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GetAtomNameA Lib "kernel32" (ByVal nAtom As Integer, ByVal lpBuffer As String, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GetAtomName Lib "kernel32" Alias "GetAtomNameW" (ByVal nAtom As Integer, ByVal lpBuffer As String, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GlobalGetAtomNameW Lib "kernel32" (ByVal nAtom As Integer, ByVal lpBuffer As LongPtr, ByVal nSize As Long) As Long
Public Declare PtrSafe Function GlobalGetAtomNameA Lib "kernel32" (ByVal nAtom As Integer, ByVal lpBuffer As String, ByVal nSize As Long) As Long
Public DeclareWide PtrSafe Function GlobalGetAtomName Lib "kernel32" Alias "GlobalGetAtomNameW" (ByVal nAtom As Integer, ByVal lpBuffer As String, ByVal nSize As Long) As Long

Public Declare PtrSafe Function CreateNamedPipeA Lib "kernel32" (ByVal lpName As String, [TypeHint(PipeOpenMode, FILE_FLAGS, StandardAccessTypes)] ByVal dwOpenMode As Long, ByVal dwPipeMode As PipeModeFlags, ByVal nMaxInstances As Long, ByVal nOutBufferSize As Long, ByVal nInBufferSize As Long, ByVal nDefaultTimeOut As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES) As LongPtr
Public Declare PtrSafe Function CreateNamedPipeW Lib "kernel32" (ByVal lpName As LongPtr, [TypeHint(PipeOpenMode, FILE_FLAGS, StandardAccessTypes)] ByVal dwOpenMode As Long, ByVal dwPipeMode As PipeModeFlags, ByVal nMaxInstances As Long, ByVal nOutBufferSize As Long, ByVal nInBufferSize As Long, ByVal nDefaultTimeOut As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES) As LongPtr
Public DeclareWide PtrSafe Function CreateNamedPipe Lib "kernel32" Alias "CreateNamedPipeW" (ByVal lpName As String, [TypeHint(PipeOpenMode, FILE_FLAGS, StandardAccessTypes)] ByVal dwOpenMode As Long, ByVal dwPipeMode As PipeModeFlags, ByVal nMaxInstances As Long, ByVal nOutBufferSize As Long, ByVal nInBufferSize As Long, ByVal nDefaultTimeOut As Long, lpSecurityAttributes As SECURITY_ATTRIBUTES) As LongPtr
Public Declare PtrSafe Function DisconnectNamedPipe Lib "kernel32" (ByVal hNamedPipe As LongPtr) As BOOL
Public Declare PtrSafe Function CallNamedPipeA Lib "kernel32" (ByVal lpNamedPipeName As String, lpInBuffer As Any, ByVal nInBufferSize As Long, lpOutBuffer As Any, ByVal nOutBufferSize As Long, lpBytesRead As Long, ByVal nTimeOut As Long) As BOOL
Public Declare PtrSafe Function CallNamedPipeW Lib "kernel32" (ByVal lpNamedPipeName As LongPtr, lpInBuffer As Any, ByVal nInBufferSize As Long, lpOutBuffer As Any, ByVal nOutBufferSize As Long, lpBytesRead As Long, ByVal nTimeOut As Long) As BOOL
Public DeclareWide PtrSafe Function CallNamedPipe Lib "kernel32" Alias "CallNamedPipeW" (ByVal lpNamedPipeName As String, lpInBuffer As Any, ByVal nInBufferSize As Long, lpOutBuffer As Any, ByVal nOutBufferSize As Long, lpBytesRead As Long, ByVal nTimeOut As Long) As BOOL
Public Declare PtrSafe Function CreatePipe Lib "kernel32" (hReadPipe As LongPtr, hWritePipe As LongPtr, lpPipeAttributes As SECURITY_ATTRIBUTES, ByVal nSize As Long) As BOOL
Public Declare PtrSafe Function ConnectNamedPipe Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpOverlapped As OVERLAPPED) As BOOL
Public DeclareWide PtrSafe Function PeekNamedPipe Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpBuffer As Any, ByVal nBufferSize As Long, lpBytesRead As Long, lpTotalBytesAvail As Long, lpBytesLeftThisMessage As Long) As BOOL
Public Declare PtrSafe Function SetNamedPipeHandleState Lib "kernel32" (ByVal hNamedPipe As LongPtr, Optional lpMode As Long, Optional lpMaxCollectionCount As Long, Optional lpCollectDataTimeout As Long) As BOOL
Public DeclareWide PtrSafe Function TransactNamedPipe Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpInBuffer As Any, ByVal nInBufferSize As Long, lpOutBuffer As Any, ByVal nOutBufferSize As Long, lpBytesRead As Long, lpOverlapped As OVERLAPPED) As BOOL
Public DeclareWide PtrSafe Function WaitNamedPipe Lib "kernel32" Alias "WaitNamedPipeW" (ByVal lpNamedPipeName As String, ByVal nTimeOut As Long) As BOOL
Public Declare PtrSafe Function WaitNamedPipeA Lib "kernel32" (ByVal lpNamedPipeName As String, ByVal nTimeOut As Long) As BOOL
Public Declare PtrSafe Function WaitNamedPipeW Lib "kernel32" (ByVal lpNamedPipeName As LongPtr, ByVal nTimeOut As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeClientComputerNameA Lib "kernel32" (ByVal Pipe As LongPtr, ByVal ClientComputerName As String, ByVal ClientComputerNameLength As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeClientComputerNameW Lib "kernel32" (ByVal Pipe As LongPtr, ByVal ClientComputerName As LongPtr, ByVal ClientComputerNameLength As Long) As BOOL
Public DeclareWide PtrSafe Function GetNamedPipeClientComputerName Lib "kernel32" Alias "GetNamedPipeClientComputerNameW" (ByVal Pipe As LongPtr, ByVal ClientComputerName As String, ByVal ClientComputerNameLength As Long) As BOOL
Public Declare PtrSafe Function ImpersonateNamedPipeClient Lib "kernelbase" (ByVal hNamedPipe As LongPtr) As BOOL
Public Declare PtrSafe Function GetNamedPipeInfo Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpFlags As Long, lpOutBufferSize As Long, lpInBufferSize As Long, lpMaxInstances As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeHandleStateA Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpState As PipeModeFlags, lpCurInstances As Long, lpMaxCollectionCount As Long, lpCollectionDataTimeout As Long, ByVal lpUserName As String, ByVal nMaxUserNameSize As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeHandleStateW Lib "kernel32" (ByVal hNamedPipe As LongPtr, lpState As PipeModeFlags, lpCurInstances As Long, lpMaxCollectionCount As Long, lpCollectionDataTimeout As Long, ByVal lpUserName As LongPtr, ByVal nMaxUserNameSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetNamedPipeHandleState Lib "kernel32" Alias "GetNamedPipeHandleStateW" (ByVal hNamedPipe As LongPtr, lpState As PipeModeFlags, lpCurInstances As Long, lpMaxCollectionCount As Long, lpCollectionDataTimeout As Long, ByVal lpUserName As String, ByVal nMaxUserNameSize As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeServerProcessId Lib "kernel32" (ByVal Pipe As LongPtr, ServerProcessId As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeServerSessionId Lib "kernel32" (ByVal Pipe As LongPtr, ServerSessionId As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeClientProcessId Lib "kernel32" (ByVal Pipe As LongPtr, ClientProcessId As Long) As BOOL
Public Declare PtrSafe Function GetNamedPipeClientSessionId Lib "kernel32" (ByVal Pipe As LongPtr, ClientSessionId As Long) As BOOL


Public Enum HandleInfoFlags
    HANDLE_FLAG_INHERIT = &H00000001
    HANDLE_FLAG_PROTECT_FROM_CLOSE = &H00000002
End Enum
Public Declare PtrSafe Function CompareObjectHandles Lib "kernelbase" (ByVal hFirstObjectHandle As LongPtr, ByVal hSecondObjectHandle As LongPtr) As BOOL
Public Declare PtrSafe Function SetHandleInformation Lib "kernel32" (ByVal hObject As LongPtr, ByVal dwMask As HandleInfoFlags, ByVal dwFlags As HandleInfoFlags) As BOOL
Public Declare PtrSafe Function GetHandleInformation Lib "kernel32" (ByVal hObject As LongPtr, lpdwFlags As HandleInfoFlags) As BOOL



Public Declare PtrSafe Function GetPhysicallyInstalledSystemMemory Lib "kernel32" (TotalMemoryInKilobytes As LongLong) As BOOL
Public Declare PtrSafe Function QueryPerformanceCounter Lib "kernel32" (lpPerformanceCount As LongLong) As BOOL
Public Declare PtrSafe Function QueryPerformanceFrequency Lib "kernel32" (lpFrequency As LongLong) As BOOL
Public Declare PtrSafe Function GetLogicalDriveStringsA Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function GetLogicalDriveStringsW Lib "kernel32" (ByVal nBufferLength As Long, ByVal lpBuffer As LongPtr) As Long
Public DeclareWide PtrSafe Function GetLogicalDriveStrings Lib "kernel32" Alias "GetLogicalDriveStringsW" (ByVal nBufferLength As Long, ByVal lpBuffer As String) As Long
Public Declare PtrSafe Function GetLogicalDrives Lib "kernel32" () As Long
Public DeclareWide PtrSafe Function GetDriveType Lib "kernel32" Alias "GetDriveTypeW" (Optional ByVal lpRootPathName As String) As DriveTypes
Public Declare PtrSafe Function GetDriveTypeW Lib "kernel32" (Optional ByVal lpRootPathName As LongPtr) As DriveTypes




[Description("⚠️ **WARNING:** This function is deprecated.")]
Public Declare PtrSafe Function GetVersion Lib "kernel32" () As Long
[Description("⚠️ **WARNING:** This function will indicate Windows 8.1 unless you supply an application manifest targeting Windows 10.")]
Public DeclareWide PtrSafe Function GetVersionEx Lib "kernel32" Alias "GetVersionExW" (lpVersionInformation As OSVERSIONINFOEX) As BOOL
[Description("⚠️ **WARNING:** This function will indicate Windows 8.1 unless you supply an application manifest targeting Windows 10.")]
Public Declare PtrSafe Function GetVersionExW Lib "kernel32" (lpVersionInformation As OSVERSIONINFOEXW) As BOOL
[Description("⚠️ **WARNING:** This function will indicate Windows 8.1 unless you supply an application manifest targeting Windows 10.")]
Public Declare PtrSafe Function GetVersionExA Lib "kernel32" (lpVersionInformation As OSVERSIONINFOEXA) As BOOL
Public Declare PtrSafe Function GetProductInfo Lib "kernel32" (ByVal dwOSMajorVersion As Long, ByVal dwOSMinorVersion As Long, ByVal dwSpMajorVersion As Long, ByVal dwSpMinorVersion As Long, pdwReturnedProductInfo As WINVER_PRODUCT_TYPES) As BOOL
Public Declare PtrSafe Function IsNativeVhdBoot Lib "kernel32" (NativeVhdBoot As BOOL) As BOOL



'processsnapshot.h, 100%
Public Enum PSS_HANDLE_FLAGS
    PSS_HANDLE_NONE = &H00
    PSS_HANDLE_HAVE_TYPE = &H01
    PSS_HANDLE_HAVE_NAME = &H02
    PSS_HANDLE_HAVE_BASIC_INFORMATION = &H04
    PSS_HANDLE_HAVE_TYPE_SPECIFIC_INFORMATION = &H08
End Enum

Public Enum PSS_OBJECT_TYPE
    PSS_OBJECT_TYPE_UNKNOWN = 0
    PSS_OBJECT_TYPE_PROCESS = 1
    PSS_OBJECT_TYPE_THREAD = 2
    PSS_OBJECT_TYPE_MUTANT = 3
    PSS_OBJECT_TYPE_EVENT = 4
    PSS_OBJECT_TYPE_SECTION = 5
    '  BUGBUG WINBLUE 571662 2013-12-31 GenghisK: #ifdef this for OS after
    '  WINBLUE
    PSS_OBJECT_TYPE_SEMAPHORE = 6
End Enum

Public Enum PSS_CAPTURE_FLAGS
    PSS_CAPTURE_NONE = &H00000000
    PSS_CAPTURE_VA_CLONE = &H00000001
    PSS_CAPTURE_RESERVED_00000002 = &H00000002
    PSS_CAPTURE_HANDLES = &H00000004
    PSS_CAPTURE_HANDLE_NAME_INFORMATION = &H00000008
    PSS_CAPTURE_HANDLE_BASIC_INFORMATION = &H00000010
    PSS_CAPTURE_HANDLE_TYPE_SPECIFIC_INFORMATION = &H00000020
    PSS_CAPTURE_HANDLE_TRACE = &H00000040
    PSS_CAPTURE_THREADS = &H00000080
    PSS_CAPTURE_THREAD_CONTEXT = &H00000100
    PSS_CAPTURE_THREAD_CONTEXT_EXTENDED = &H00000200
    PSS_CAPTURE_RESERVED_00000400 = &H00000400
    PSS_CAPTURE_VA_SPACE = &H00000800
    PSS_CAPTURE_VA_SPACE_SECTION_INFORMATION = &H00001000
    PSS_CAPTURE_IPT_TRACE = &H00002000
    PSS_CAPTURE_RESERVED_00004000 = &H00004000
    PSS_CREATE_BREAKAWAY_OPTIONAL = &H04000000
    PSS_CREATE_BREAKAWAY = &H08000000
    PSS_CREATE_FORCE_BREAKAWAY = &H10000000
    PSS_CREATE_USE_VM_ALLOCATIONS = &H20000000
    PSS_CREATE_MEASURE_PERFORMANCE = &H40000000
    PSS_CREATE_RELEASE_SECTION = &H80000000
End Enum

Public Const PSS_PERF_RESOLUTION = 1000000

Public Enum PSS_QUERY_INFORMATION_CLASS
    PSS_QUERY_PROCESS_INFORMATION = 0
    PSS_QUERY_VA_CLONE_INFORMATION = 1
    PSS_QUERY_AUXILIARY_PAGES_INFORMATION = 2
    PSS_QUERY_VA_SPACE_INFORMATION = 3
    PSS_QUERY_HANDLE_INFORMATION = 4
    PSS_QUERY_THREAD_INFORMATION = 5
    PSS_QUERY_HANDLE_TRACE_INFORMATION = 6
    PSS_QUERY_PERFORMANCE_COUNTERS = 7
End Enum

Public Enum PSS_WALK_INFORMATION_CLASS
    PSS_WALK_AUXILIARY_PAGES = 0
    PSS_WALK_VA_SPACE = 1
    PSS_WALK_HANDLES = 2
    PSS_WALK_THREADS = 3
End Enum

Public Enum PSS_DUPLICATE_FLAGS
    PSS_DUPLICATE_NONE = &H00
    PSS_DUPLICATE_CLOSE_SOURCE = &H01
End Enum

Public Enum PSS_PROCESS_FLAGS
    PSS_PROCESS_FLAGS_NONE = &H00000000
    PSS_PROCESS_FLAGS_PROTECTED = &H00000001
    PSS_PROCESS_FLAGS_WOW64 = &H00000002
    PSS_PROCESS_FLAGS_RESERVED_03 = &H00000004
    PSS_PROCESS_FLAGS_RESERVED_04 = &H00000008
    PSS_PROCESS_FLAGS_FROZEN = &H00000010
End Enum

Public Type PSS_PROCESS_INFORMATION
    ExitStatus As Long
    PebBaseAddress As LongPtr
    AffinityMask As LongPtr
    BasePriority As Long
    ProcessId As Long
    ParentProcessId As Long
    Flags As PSS_PROCESS_FLAGS
    CreateTime As FILETIME
    ExitTime As FILETIME
    KernelTime As FILETIME
    UserTime As FILETIME
    PriorityClass As Long
    PeakVirtualSize As LongPtr
    VirtualSize As LongPtr
    PageFaultCount As Long
    PeakWorkingSetSize As LongPtr
    WorkingSetSize As LongPtr
    QuotaPeakPagedPoolUsage As LongPtr
    QuotaPagedPoolUsage As LongPtr
    QuotaPeakNonPagedPoolUsage As LongPtr
    QuotaNonPagedPoolUsage As LongPtr
    PagefileUsage As LongPtr
    PeakPagefileUsage As LongPtr
    PrivateUsage As LongPtr
    ExecuteFlags As Long
    ImageFileName(0 To (MAX_PATH - 1)) As Integer
End Type

Public Type PSS_VA_CLONE_INFORMATION
    VaCloneHandle As LongPtr
End Type

Public Type PSS_AUXILIARY_PAGES_INFORMATION
    AuxPagesCaptured As Long
End Type

Public Type PSS_VA_SPACE_INFORMATION
    RegionCount As Long
End Type

Public Type PSS_HANDLE_INFORMATION
    HandlesCaptured As Long
End Type

Public Type PSS_THREAD_INFORMATION
    ThreadsCaptured As Long
    ContextLength As Long
End Type

Public Type PSS_HANDLE_TRACE_INFORMATION
    SectionHandle As LongPtr
    Size As Long
End Type

Public Type PSS_PERFORMANCE_COUNTERS
    TotalCycleCount As LongLong
    TotalWallClockPeriod As LongLong
    VaCloneCycleCount As LongLong
    VaCloneWallClockPeriod As LongLong
    VaSpaceCycleCount As LongLong
    VaSpaceWallClockPeriod As LongLong
    AuxPagesCycleCount As LongLong
    AuxPagesWallClockPeriod As LongLong
    HandlesCycleCount As LongLong
    HandlesWallClockPeriod As LongLong
    ThreadsCycleCount As LongLong
    ThreadsWallClockPeriod As LongLong
End Type

Public Type PSS_AUXILIARY_PAGE_ENTRY
    Address As LongPtr 'void*
    BasicInformation As MEMORY_BASIC_INFORMATION
    CaptureTime As FILETIME
    PageContents As LongPtr 'void*
    PageSize As Long
End Type

Public Type PSS_VA_SPACE_ENTRY
    BaseAddress As LongPtr 'void*
    AllocationBase As LongPtr 'void*
    AllocationProtect As MemProtectFlags
    RegionSize As LongPtr
    State As MemAllocType
    Protect As MemProtectFlags
    Type As MemAllocType
    TimeDateStamp As Long ' IMAGE_NT_HEADERS.FileHeader.TimeDateStamp
    SizeOfImage As Long ' IMAGE_NT_HEADERS.OptionalHeader.SizeOfImage
    ImageBase As LongPtr 'void* ' IMAGE_NT_HEADERS.OptionalHeader.ImageBase
    CheckSum As Long ' IMAGE_NT_HEADERS.OptionalHeader.CheckSum
    MappedFileNameLength As Integer
    MappedFileName As LongPtr '*wchar_t const ' valid for life time of walk marker
End Type

[Description("Custom types are provided for the union options until supported. You can copy the contents of TypeSpecificInformation to types named for their union member; e.g. PSS_HANDLE_PROCESS, PSS_HANDLE_THREAD, for the Process and Thread sections, respectively.")]
Public Type PSS_HANDLE_ENTRY
    Handle As LongPtr
    Flags As PSS_HANDLE_FLAGS
    ObjectType As PSS_OBJECT_TYPE
    CaptureTime As FILETIME
    ' Object basic information.
    Attributes As Long
    GrantedAccess As Long
    HandleCount As Long
    PointerCount As Long
    PagedPoolCharge As Long
    NonPagedPoolCharge As Long
    CreationTime As FILETIME
    TypeNameLength As Integer
    TypeName As LongPtr 'wchar_t const ' valid for life time of walk marker
    ObjectNameLength As Integer
    ObjectName As LongPtr 'wchar_t const ' valid for life time of walk marker
    #If Win64 Then
    TypeSpecificInformation(47) As Byte
    #Else
    pad As Long 'correct for 8 byte alignment because of Section.LARGE_INTEGER
    TypeSpecificInformation(31) As Byte
    #End If
    ' union
    ' {
        ' // Valid for ObjectType = PSS_OBJECT_TYPE_PROCESS.
        ' struct
        ' {
            ' DWORD ExitStatus;
            ' void* PebBaseAddress;
            ' ULONG_PTR AffinityMask;
            ' LONG BasePriority;
            ' DWORD ProcessId;
            ' DWORD ParentProcessId;
            ' DWORD Flags;
        ' } Process;
        ' // Valid for ObjectType = PSS_OBJECT_TYPE_THREAD.
        ' struct
        ' {
            ' DWORD ExitStatus;
            ' void* TebBaseAddress;
            ' DWORD ProcessId;
            ' DWORD ThreadId;
            ' ULONG_PTR AffinityMask;
            ' int Priority;
            ' int BasePriority;
            ' void* Win32StartAddress;
        ' } Thread;
        ' // Valid for ObjectType = PSS_OBJECT_TYPE_MUTANT.
        ' struct
        ' {
            ' LONG CurrentCount;
            ' BOOL Abandoned;
            ' DWORD OwnerProcessId;
            ' DWORD OwnerThreadId;
        ' } Mutant;
        ' // Valid for ObjectType = PSS_OBJECT_TYPE_EVENT.
        ' struct
        ' {
            ' BOOL ManualReset;
            ' BOOL Signaled;
        ' } Event;
        ' // Valid for ObjectType = PSS_OBJECT_TYPE_SECTION.
        ' struct
        ' {
            ' void* BaseAddress;
            ' DWORD AllocationAttributes;
            ' LARGE_INTEGER MaximumSize;
        ' } Section;
        ' // Valid for ObjectType = PSS_OBJECT_TYPE_SEMAPHORE.

        ' struct
        ' {
            ' LONG CurrentCount;
            ' LONG MaximumCount;
        ' } Semaphore;
    ' } TypeSpecificInformation;
End Type

Public Type PSS_HANDLE_PROCESS
    ExitStatus As Long
    PebBaseAddress As LongPtr 'void*
    AffinityMask As LongPtr
    BasePriority As Long
    ProcessId As Long
    ParentProcessId As Long
    Flags As Long
End Type
Public Type PSS_HANDLE_THREAD
    ExitStatus As Long
    TebBaseAddress As LongPtr 'void*
    ProcessId As Long
    ThreadId As Long
    AffinityMask As LongPtr
    Priority As Long
    BasePriority As Long
    Win32StartAddress As LongPtr 'void*
End Type
Public Type PSS_HANDLE_SEMAHORE
    CurrentCount As Long
    MaximumCount As Long
End Type
Public Type PSS_HANDLE_SECTION
    BaseAddress As LongPtr
    AllocationAttributes As Long
    MaximumSize As LARGE_INTEGER
End Type
Public Type PSS_HANDLE_EVENT
	ManualReset As BOOL
    Signaled As BOOL
End Type
Public Type PSS_HANDLE_MUTANT
    CurrentCount As Long
    Abandoned As BOOL
    OwnerProcessId As Long
    OwnerThreadId As Long
End Type

Public Enum PSS_THREAD_FLAGS
    PSS_THREAD_FLAGS_NONE = &H0000
    PSS_THREAD_FLAGS_TERMINATED = &H0001
End Enum

Public Type PSS_THREAD_ENTRY
    ExitStatus As Long
    TebBaseAddress As LongPtr 'void*
    ProcessId As Long
    ThreadId As Long
    AffinityMask As LongPtr
    Priority As Long
    BasePriority As Long
    LastSyscallFirstArgument As LongPtr 'void*
    LastSyscallNumber As Integer
    CreateTime As FILETIME
    ExitTime As FILETIME
    KernelTime As FILETIME
    UserTime As FILETIME
    Win32StartAddress As LongPtr 'void*
    CaptureTime As FILETIME
    Flags As PSS_THREAD_FLAGS
    SuspendCount As Integer
    SizeOfContextRecord As Integer
    ContextRecord As LongPtr 'PCONTEXT ' valid for life time of walk marker
End Type

Public Type PSS_ALLOCATOR
    Context As LongPtr
    AllocRoutine As LongPtr
    FreeRoutine As LongPtr
    ' void* Context;
    ' void* (WINAPI *AllocRoutine) (_In_ void* Context, _In_ DWORD Size);
    ' void (WINAPI *FreeRoutine) (_In_ void* Context, _In_opt_ void* Address);
End Type

Public Declare PtrSafe Function PssCaptureSnapshot Lib "kernel32" (ByVal ProcessHandle As LongPtr, ByVal CaptureFlags As PSS_CAPTURE_FLAGS, ByVal ThreadContextFlags As EXCEPTION_CONTEXT_FLAGS, SnapshotHandle As LongPtr) As Long
Public Declare PtrSafe Function PssFreeSnapshot Lib "kernel32" (ByVal ProcessHandle As LongPtr, ByVal SnapshotHandle As LongPtr) As Long
Public Declare PtrSafe Function PssQuerySnapshot Lib "kernel32" (ByVal SnapshotHandle As LongPtr, ByVal InformationCLass As PSS_QUERY_INFORMATION_CLASS, Buffer As Any, ByVal BufferLength As Long) As Long
Public Declare PtrSafe Function PssWalkSnapshot Lib "kernel32" (ByVal SnapshotHandle As LongPtr, ByVal InformationCLass As PSS_WALK_INFORMATION_CLASS, ByVal WalkMarkerHandle As LongPtr, Buffer As Any, ByVal BufferLength As Long) As Long
Public Declare PtrSafe Function PssDuplicateSnapshot Lib "kernel32" (ByVal SourceProcessHandle As LongPtr, ByVal SnapshotHandle As LongPtr, ByVal TargetProcessHandle As LongPtr, TargetSnapshotHandle As LongPtr, Optional ByVal Flags As PSS_DUPLICATE_FLAGS) As Long
Public Declare PtrSafe Function PssWalkMarkerCreate Lib "kernel32" (Allocator As PSS_ALLOCATOR, WalkMarkerHandle As LongPtr) As Long
Public Declare PtrSafe Function PssWalkMarkerFree Lib "kernel32" (ByVal WalkMarkerHandle As LongPtr) As Long
Public Declare PtrSafe Function PssWalkMarkerGetPosition Lib "kernel32" (ByVal WalkMarkerHandle As LongPtr, Position As LongPtr) As Long
Public Declare PtrSafe Function PssWalkMarkerSetPosition Lib "kernel32" (ByVal WalkMarkerHandle As LongPtr, ByVal Position As LongPtr) As Long
Public Declare PtrSafe Function PssWalkMarkerSeekToBeginning Lib "kernel32" (ByVal WalkMarkerHandle As LongPtr) As Long






Public Delegate Function ApplicationRecoveryCallback (ByVal pvParameter As LongPtr) As Long
Public Const RECOVERY_DEFAULT_PING_INTERVAL  = 5000
Public Const RECOVERY_MAX_PING_INTERVAL  = (5 * 60 * 1000)
Public Const RESTART_MAX_CMD_LINE  = 1024
Public Enum RegisterRestartFlags
	RESTART_NO_CRASH = 1
'  Do not restart the process for termination due to application hangs
	RESTART_NO_HANG = 2
'  Do not restart the process for termination due to patch installations
	RESTART_NO_PATCH = 4
'  Do not restart the process when the system is rebooted due to patch installations
	RESTART_NO_REBOOT = 8
End Enum
Public DeclareWide PtrSafe Function RegisterApplicationRestart Lib "kernel32" (ByVal pwzCommandLine As String, ByVal dwFlags As RegisterRestartFlags) As Long
Public Declare PtrSafe Function UnregisterApplicationRestart Lib "kernel32" () As Long
Public DeclareWide PtrSafe Function GetApplicationRestartSettings Lib "kernel32" (ByVal hProcess As LongPtr, ByVal pwzCommandLine As String, pcchSize As Long, pdwFlags As RegisterRestartFlags) As Long
' Public DeclareWide PtrSafe Function RegisterApplicationRecoveryCallback Lib "kernel32" (ByVal pRecoveryCallback As ApplicationRecoveryCallback, pvParameter As Any, ByVal dwPingInterval As Long, ByVal dwFlags As Long) As Long
' Public Declare PtrSafe Function UnregisterApplicationRecoveryCallback Lib "kernel32" () As Long
' Public Declare PtrSafe Function GetApplicationRecoveryCallback Lib "kernel32" (ByVal hProcess As LongPtr, pRecoveryCallback As ApplicationRecoveryCallback, ppvParameter As LongPtr, pdwPingInterval As Long, pdwFlags As Long) As Long
Public DeclareWide PtrSafe Function RegisterApplicationRecoveryCallback Lib "kernel32" (ByVal pRecoveryCallback As LongPtr, pvParameter As Any, ByVal dwPingInterval As Long, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function UnregisterApplicationRecoveryCallback Lib "kernel32" () As Long
Public Declare PtrSafe Function GetApplicationRecoveryCallback Lib "kernel32" (ByVal hProcess As LongPtr, pRecoveryCallback As LongPtr, ppvParameter As LongPtr, pdwPingInterval As Long, pdwFlags As Long) As Long
Public Declare PtrSafe Function ApplicationRecoveryInProgress Lib "kernel32" (pbCancelled As BOOL) As Long
Public Declare PtrSafe Sub ApplicationRecoveryFinished Lib "kernel32" (ByVal bSuccess As BOOL)

Public Declare PtrSafe Function GetDiskFreeSpaceA Lib "kernel32" (ByVal lpRootPathName As String, lpSectorsPerCluster As Long, lpBytesPerSector As Long, lpNumberOfFreeClusters As Long, lpTotalNumberOfClusters As Long) As BOOL
Public Declare PtrSafe Function GetDiskFreeSpaceW Lib "kernel32" (ByVal lpRootPathName As LongPtr, lpSectorsPerCluster As Long, lpBytesPerSector As Long, lpNumberOfFreeClusters As Long, lpTotalNumberOfClusters As Long) As BOOL
Public DeclareWide PtrSafe Function GetDiskFreeSpace Lib "kernel32" Alias "GetDiskFreeSpaceW" (ByVal lpRootPathName As String, lpSectorsPerCluster As Long, lpBytesPerSector As Long, lpNumberOfFreeClusters As Long, lpTotalNumberOfClusters As Long) As BOOL
Public Declare PtrSafe Function GetDiskFreeSpaceExA Lib "kernel32" (Optional ByVal lpDirectoryName As String, Optional lpFreeBytesAvailableToCaller As LongLong, Optional lpTotalNumberOfBytes As LongLong, Optional lpTotalNumberOfFreeBytes As LongLong) As BOOL
Public Declare PtrSafe Function GetDiskFreeSpaceExW Lib "kernel32" (Optional ByVal lpDirectoryName As LongPtr, Optional lpFreeBytesAvailableToCaller As LongLong, Optional lpTotalNumberOfBytes As LongLong, Optional lpTotalNumberOfFreeBytes As LongLong) As BOOL
Public DeclareWide PtrSafe Function GetDiskFreeSpaceEx Lib "kernel32" Alias "GetDiskFreeSpaceExW" (Optional ByVal lpDirectoryName As String, Optional lpFreeBytesAvailableToCaller As LongLong, Optional lpTotalNumberOfBytes As LongLong, Optional lpTotalNumberOfFreeBytes As LongLong) As BOOL
[Description("This function is only available on Windows 10 17763 and newer")]
Public Declare PtrSafe Function GetDiskSpaceInformationA Lib "kernel32" (ByVal rootPath As String, diskSpaceInfo As DISK_SPACE_INFORMATION) As Long
[Description("This function is only available on Windows 10 17763 and newer")]
Public Declare PtrSafe Function GetDiskSpaceInformationW Lib "kernel32" (ByVal rootPath As LongPtr, diskSpaceInfo As DISK_SPACE_INFORMATION) As Long
[Description("This function is only available on Windows 10 17763 and newer")]
Public DeclareWide PtrSafe Function GetDiskSpaceInformation Lib "kernel32" Alias "GetDiskSpaceInformationW" (ByVal rootPath As String, diskSpaceInfo As DISK_SPACE_INFORMATION) As Long
Public Type DISK_SPACE_INFORMATION
	ActualTotalAllocationUnits As LongLong
	ActualAvailableAllocationUnits As LongLong
	ActualPoolUnavailableAllocationUnits As LongLong
	CallerTotalAllocationUnits As LongLong
	CallerAvailableAllocationUnits As LongLong
	CallerPoolUnavailableAllocationUnits As LongLong
	UsedAllocationUnits As LongLong
	TotalReservedAllocationUnits As LongLong
	VolumeStorageReserveAllocationUnits As LongLong
	AvailableCommittedAllocationUnits As LongLong
	PoolAvailableAllocationUnits As LongLong
	SectorsPerAllocationUnit As Long
	BytesPerSector As Long
End Type

Public Enum PipeOpenMode
    PIPE_ACCESS_DUPLEX = &H3
    PIPE_ACCESS_INBOUND = &H1
    PIPE_ACCESS_OUTBOUND = &H2
End Enum
Public Enum PipeEndFlags
	PIPE_CLIENT_END = &H00000000
	PIPE_SERVER_END = &H00000001
End Enum
Public Enum PipeModeFlags
	PIPE_WAIT = &H00000000
	PIPE_NOWAIT = &H00000001
	PIPE_READMODE_BYTE = &H00000000
	PIPE_READMODE_MESSAGE = &H00000002
	PIPE_TYPE_BYTE = &H00000000
	PIPE_TYPE_MESSAGE = &H00000004
	PIPE_ACCEPT_REMOTE_CLIENTS = &H00000000
	PIPE_REJECT_REMOTE_CLIENTS = &H00000008
End Enum
Public Const PIPE_UNLIMITED_INSTANCES    = 255

Public Type PROCESSOR_NUMBER
    Group As Integer
    Number As Byte
    Reserved As Byte
End Type

Public Enum DriveTypes
	DRIVE_UNKNOWN
    DRIVE_NO_ROOT_DIR
    DRIVE_REMOVABLE
    DRIVE_FIXED
    DRIVE_REMOTE
    DRIVE_CDROM
    DRIVE_RAMDISK
End Enum

Public Enum DDD_Flags
	DDD_RAW_TARGET_PATH = &H00000001
	DDD_REMOVE_DEFINITION = &H00000002
	DDD_EXACT_MATCH_ON_REMOVE = &H00000004
	DDD_NO_BROADCAST_SYSTEM = &H00000008
	DDD_LUID_BROADCAST_DRIVE = &H00000010
End Enum


Public Enum FileMoveMethods
    FILE_BEGIN
    FILE_CURRENT
    FILE_END
End Enum

Public Enum VersionInfoConditions
    VER_EQUAL = 1
    VER_GREATER = 2
    VER_GREATER_EQUAL = 3
    VER_LESS = 4
    VER_LESS_EQUAL = 5
    VER_AND = 6
    VER_OR = 7
    VER_CONDITION_MASK = 7
    VER_NUM_BITS_PER_CONDITION_MASK = 3
End Enum
Public Enum VersionTypeMask
    VER_MINORVERSION = &H0000001
    VER_MAJORVERSION = &H0000002
    VER_BUILDNUMBER = &H0000004
    VER_PLATFORMID = &H0000008
    VER_SERVICEPACKMINOR = &H0000010
    VER_SERVICEPACKMAJOR = &H0000020
    VER_SUITENAME = &H0000040
    VER_PRODUCT_TYPE = &H0000080
End Enum


Public Enum VERSION_PLATFORM
    VER_PLATFORM_WIN32s = 0
    VER_PLATFORM_WIN32_WINDOWS = 1
    VER_PLATFORM_WIN32_NT = 2
End Enum

Public Enum VERSION_PRODUCT_TYPE
    VER_NT_WORKSTATION = &H0000001
    VER_NT_DOMAIN_CONTROLLER = &H0000002
    VER_NT_SERVER = &H0000003
End Enum

Public Type OSVERSIONINFOW
	dwOSVersionInfoSize As Long
	dwMajorVersion As Long
	dwMinorVersion As Long
	dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
	szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
End Type
Public Type OSVERSIONINFOEXW
	dwOSVersionInfoSize As Long
	dwMajorVersion As Long
	dwMinorVersion As Long
	dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
	szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
	wServicePackMajor As Integer
	wServicePackMinor As Integer
	/* [ TypeHint(VER_SUITE_VALUES) ] */ wSuiteMask As Integer
	/* [ TypeHint(VERSION_PRODUCT_TYPE) ] */ wProductType As Byte
	wReserved As Byte
End Type
'Alias OSVERSIONINFO As OSVERSIONINFOW
Public Type OSVERSIONINFO
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
End Type
'Alias OSVERSIONINFOEX As OSVERSIONINFOEXW
Public Type OSVERSIONINFOEX
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
    wServicePackMajor As Integer
    wServicePackMinor As Integer
    /* [ TypeHint(VER_SUITE_VALUES) ] */ wSuiteMask As Integer
    /* [ TypeHint(VERSION_PRODUCT_TYPE) ] */ wProductType As Byte
    wReserved As Byte
End Type
Public Type OSVERSIONINFOA
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Byte ' Maintenance string for PSS usage
End Type
Public Type OSVERSIONINFOEXA
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Byte ' Maintenance string for PSS usage
    wServicePackMajor As Integer
    wServicePackMinor As Integer
    /* [ TypeHint(VER_SUITE_VALUES) ] */ wSuiteMask As Integer
    /* [ TypeHint(VERSION_PRODUCT_TYPE) ] */ wProductType As Byte
    wReserved As Byte
End Type

Public Type RTL_OSVERSIONINFOW
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
End Type
Public Type RTL_OSVERSIONINFOEXW
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
    wServicePackMajor As Integer
    wServicePackMinor As Integer
    /* [ TypeHint(VER_SUITE_VALUES) ] */ wSuiteMask As Integer
    /* [ TypeHint(VERSION_PRODUCT_TYPE) ] */ wProductType As Byte
    wReserved As Byte
End Type
'Alias RTL_OSVERSIONINFO As RTL_OSVERSIONINFOW
Public Type RTL_OSVERSIONINFO
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
End Type
'Alias RTL_OSVERSIONINFOEX As RTL_OSVERSIONINFOEXW
Public Type RTL_OSVERSIONINFOEX
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Integer ' Maintenance string for PSS usage
    wServicePackMajor As Integer
    wServicePackMinor As Integer
    /* [ TypeHint(VER_SUITE_VALUES) ] */ wSuiteMask As Integer
    /* [ TypeHint(VERSION_PRODUCT_TYPE) ] */ wProductType As Byte
    wReserved As Byte
End Type
Public Type RTL_OSVERSIONINFOA
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Byte ' Maintenance string for PSS usage
End Type
Public Type RTL_OSVERSIONINFOEXA
    dwOSVersionInfoSize As Long
    dwMajorVersion As Long
    dwMinorVersion As Long
    dwBuildNumber As Long
    dwPlatformId As VERSION_PLATFORM
    szCSDVersion(0 To 127) As Byte ' Maintenance string for PSS usage
    wServicePackMajor As Integer
    wServicePackMinor As Integer
    /* [ TypeHint(VER_SUITE_VALUES) ] */ wSuiteMask As Integer
    /* [ TypeHint(VERSION_PRODUCT_TYPE) ] */ wProductType As Byte
    wReserved As Byte
End Type




Public Enum COMM_BAUD_RATES
    CBR_110 = 110
    CBR_300 = 300
    CBR_600 = 600
    CBR_1200 = 1200
    CBR_2400 = 2400
    CBR_4800 = 4800
    CBR_9600 = 9600
    CBR_14400 = 14400
    CBR_19200 = 19200
    CBR_38400 = 38400
    CBR_56000 = 56000
    CBR_57600 = 57600
    CBR_115200 = 115200
    CBR_128000 = 128000
    CBR_256000 = 256000
End Enum

Public Enum COMM_DTR_CONTROL
    DTR_CONTROL_DISABLE = &H00
    DTR_CONTROL_ENABLE = &H01
    DTR_CONTROL_HANDSHAKE = &H02
End Enum
Public Enum COMM_RTS_CONTROL
    RTS_CONTROL_DISABLE = &H00
    RTS_CONTROL_ENABLE = &H01
    RTS_CONTROL_HANDSHAKE = &H02
    RTS_CONTROL_TOGGLE = &H03
End Enum

Public Enum COMM_PARITY
    NOPARITY = 0
    ODDPARITY = 1
    EVENPARITY = 2
    MARKPARITY = 3
    SPACEPARITY = 4
End Enum

Public Enum COMM_STOPBITS
    ONESTOPBIT = 0
    ONE5STOPBITS = 1
    TWOSTOPBITS = 2
End Enum

Public Const IGNORE = 0

Public Type DCB
    DCBlength As Long
    BaudRate As COMM_BAUD_RATES
    fBitFields As Long 'See Comments in Win32API.Txt
    wReserved As Integer
    XonLim As Integer
    XoffLim As Integer
    ByteSize As Byte
    Parity As Byte
    StopBits As Byte
    XonChar As Byte
    XoffChar As Byte
    ErrorChar As Byte
    EofChar As Byte
    EvtChar As Byte
    wReserved1 As Integer 'Reserved; Do Not Use 
End Type
' The fourteen actual DCB bit-sized data fields within the four bytes of fBitFields can be manipulated by bitwise logical And/Or operations.
' FieldName             Bit #     Description
' -----------------     -----     ------------------------------
' fBinary                 1       binary mode, no EOF check
' fParity                 2       enable parity checking
' fOutxCtsFlow            3       CTS output flow control
' fOutxDsrFlow            4       DSR output flow control
' fDtrControl             5       DTR flow control type (2 bits)
' fDsrSensitivity         7       DSR sensitivity
' fTXContinueOnXoff       8       XOFF continues Tx
' fOutX                   9       XON/XOFF out flow control
' fInX                   10       XON/XOFF in flow control
' fErrorChar             11       enable error replacement
' fNull                  12       enable null stripping
' fRtsControl            13       RTS flow control (2 bits)
' fAbortOnError          15       abort reads/writes on error
' fDummy2                16       reserved 

Public Enum COMM_ERROR_FLAGS
    CE_RXOVER = &H0001  ' Receive Queue overflow
    CE_OVERRUN = &H0002  ' Receive Overrun Error
    CE_RXPARITY = &H0004  ' Receive Parity Error
    CE_FRAME = &H0008  ' Receive Framing error
    CE_BREAK = &H0010  ' Break Detected
    CE_TXFULL = &H0100  ' TX Queue is full
    CE_PTO = &H0200  ' LPTx Timeout
    CE_IOE = &H0400  ' LPTx I/O Error
    CE_DNS = &H0800  ' LPTx Device not selected
    CE_OOP = &H1000  ' LPTx Out-Of-Paper
    CE_MODE = &H8000&  ' Requested mode unsupported
End Enum
Public Enum COMM_ERRORS
    IE_BADID = (-1)  ' Invalid or unsupported id
    IE_OPEN = (-2)  ' Device Already Open
    IE_NOPEN = (-3)  ' Device Not Open
    IE_MEMORY = (-4)  ' Unable to allocate queues
    IE_DEFAULT = (-5)  ' Error in default parameters
    IE_HARDWARE = (-10)  ' Hardware Not Present
    IE_BYTESIZE = (-11)  ' Illegal Byte Size
    IE_BAUDRATE = (-12)  ' Unsupported BaudRate
End Enum
Public Enum COMM_EVENTS
    EV_RXCHAR = &H0001  ' Any Character received
    EV_RXFLAG = &H0002  ' Received certain character
    EV_TXEMPTY = &H0004  ' Transmitt Queue Empty
    EV_CTS = &H0008  ' CTS changed state
    EV_DSR = &H0010  ' DSR changed state
    EV_RLSD = &H0020  ' RLSD changed state
    EV_BREAK = &H0040  ' BREAK received
    EV_ERR = &H0080  ' Line status error occurred
    EV_RING = &H0100  ' Ring signal detected
    EV_PERR = &H0200  ' Printer error occured
    EV_RX80FULL = &H0400  ' Receive buffer is 80 percent full
    EV_EVENT1 = &H0800  ' Provider specific event 1
    EV_EVENT2 = &H1000  ' Provider specific event 2
End Enum
Public Enum COMM_ESCAPEFUNC
    SETXOFF = 1  ' Simulate XOFF received
    SETXON = 2  ' Simulate XON received
    SETRTS = 3  ' Set RTS high
    CLRRTS = 4  ' Set RTS low
    SETDTR = 5  ' Set DTR high
    CLRDTR = 6  ' Set DTR low
    RESETDEV = 7  ' Reset device if possible
    SETBREAK = 8  ' Set the device break line.
    CLRBREAK = 9  ' Clear the device break line.
End Enum
Public Enum COMM_PURGEF_FLAGS
    PURGE_TXABORT = &H0001  ' Kill the pending/current writes to the comm port.
    PURGE_RXABORT = &H0002  ' Kill the pending/current reads to the comm port.
    PURGE_TXCLEAR = &H0004  ' Kill the transmit queue if there.
    PURGE_RXCLEAR = &H0008  ' Kill the typeahead buffer if there.
    LPTx = &H80  ' Set if ID is for LPT device
End Enum
Public Enum COMM_MODEM_STATUS
    MS_CTS_ON = (&H0010)
    MS_DSR_ON = (&H0020)
    MS_RING_ON = (&H0040)
    MS_RLSD_ON = (&H0080)
End Enum

Public Type COMMTIMEOUTS
   ReadIntervalTimeout As Long ' Maximum time between read chars.
   ReadTotalTimeoutMultiplier As Long   ' Multiplier of characters.
   ReadTotalTimeoutConstant As Long ' Constant in milliseconds.
   WriteTotalTimeoutMultiplier As Long ' Multiplier of characters.
   WriteTotalTimeoutConstant As Long ' Constant in milliseconds.
End Type

[Description("NOTE: This needs to be put into a byte array followed by wcProviderData")]
Public Type COMMCONFIG
    dwSize As Long '* Size of the entire struct
    wVersion As Integer '* version of the structure
    wReserved As Integer '* alignment
    dcb As DCB '* device control block
    dwProviderSubType As Long '* ordinal value for identifying provider-defined data structure format*/
    dwProviderOffset As Long '* Specifies the offset of provider specific data field in bytes from the start
    dwProviderSize As Long '* size of the provider-specific data field
    wcProviderData(0) As Integer '* provider-specific data
End Type

Public Type COMSTAT
    Bitfield As Long
    cbInQue As Long
    cbOutQue As Long
End Type
/*
typedef struct _COMSTAT {
DWORD fCtsHold : 1;
DWORD fDsrHold : 1;
DWORD fRlsdHold : 1;
DWORD fXoffHold : 1;
DWORD fXoffSent : 1;
DWORD fEof : 1;
DWORD fTxim : 1;
DWORD fReserved : 25;
DWORD cbInQue;
DWORD cbOutQue;
} COMSTAT, *LPCOMSTAT;
*/

Public Const COMMPROP_INITIALIZED = (&HE73CF52E)

Public Enum COMM_BAUD
    BAUD_075 = (&H00000001)
    BAUD_110 = (&H00000002)
    BAUD_134_5 = (&H00000004)
    BAUD_150 = (&H00000008)
    BAUD_300 = (&H00000010)
    BAUD_600 = (&H00000020)
    BAUD_1200 = (&H00000040)
    BAUD_1800 = (&H00000080)
    BAUD_2400 = (&H00000100)
    BAUD_4800 = (&H00000200)
    BAUD_7200 = (&H00000400)
    BAUD_9600 = (&H00000800)
    BAUD_14400 = (&H00001000)
    BAUD_19200 = (&H00002000)
    BAUD_38400 = (&H00004000)
    BAUD_56K = (&H00008000&)
    BAUD_128K = (&H00010000)
    BAUD_115200 = (&H00020000)
    BAUD_57600 = (&H00040000)
    BAUD_USER = (&H10000000)
End Enum
Public Enum COMM_PROV_SUBTYPE
    PST_UNSPECIFIED = (&H00000000)
    PST_RS232 = (&H00000001)
    PST_PARALLELPORT = (&H00000002)
    PST_RS422 = (&H00000003)
    PST_RS423 = (&H00000004)
    PST_RS449 = (&H00000005)
    PST_MODEM = (&H00000006)
    PST_FAX = (&H00000021)
    PST_SCANNER = (&H00000022)
    PST_NETWORK_BRIDGE = (&H00000100)
    PST_LAT = (&H00000101)
    PST_TCPIP_TELNET = (&H00000102)
    PST_X25 = (&H00000103)
End Enum
Public Enum COMM_PROV_SETTABLE_DATABITS
    DATABITS_5 = (&H0001)
    DATABITS_6 = (&H0002)
    DATABITS_7 = (&H0004)
    DATABITS_8 = (&H0008)
    DATABITS_16 = (&H0010)
    DATABITS_16X = (&H0020)
End Enum

Public Enum COMM_PROV_CAPABILITY
    PCF_DTRDSR = (&H0001)
    PCF_RTSCTS = (&H0002)
    PCF_RLSD = (&H0004)
    PCF_PARITY_CHECK = (&H0008)
    PCF_XONXOFF = (&H0010)
    PCF_SETXCHAR = (&H0020)
    PCF_TOTALTIMEOUTS = (&H0040)
    PCF_INTTIMEOUTS = (&H0080)
    PCF_SPECIALCHARS = (&H0100)
    PCF_16BITMODE = (&H0200)
End Enum
Public Enum COMM_PROV_SETTABLE_PARAMS
    SP_PARITY = (&H0001)
    SP_BAUD = (&H0002)
    SP_DATABITS = (&H0004)
    SP_STOPBITS = (&H0008)
    SP_HANDSHAKING = (&H0010)
    SP_PARITY_CHECK = (&H0020)
    SP_RLSD = (&H0040)
End Enum
Public Enum COMM_PROV_SETTABLE_STOPPARITY
    STOPBITS_10 = (&H0001)
    STOPBITS_15 = (&H0002)
    STOPBITS_20 = (&H0004)
    PARITY_NONE = (&H0100)
    PARITY_ODD = (&H0200)
    PARITY_EVEN = (&H0400)
    PARITY_MARK = (&H0800)
    PARITY_SPACE = (&H1000)
End Enum
Public Enum COMM_SERVICE
    SP_SERIALCOMM = 1
End Enum

Public Type COMMPROP
    wPacketLength As Integer
    wPacketVersion As Integer
    dwServiceMask As COMM_SERVICE
    dwReserved1 As Long
    dwMaxTxQueue As Long
    dwMaxRxQueue As Long
    dwMaxBaud As COMM_BAUD
    dwProvSubType As COMM_PROV_SUBTYPE
    dwProvCapabilities As COMM_PROV_CAPABILITY
    dwSettableParams As COMM_PROV_SETTABLE_PARAMS
    dwSettableBaud As COMM_BAUD
    /* [ TypeHint(COMM_PROV_SETTABLE_DATABITS) ] */ wSettableData As Integer
    /* [ TypeHint(COMM_PROV_SETTABLE_STOPPARITY) ] */ wSettableStopParity As Integer
    dwCurrentTxQueue As Long
    dwCurrentRxQueue As Long
    dwProvSpec1 As Long
    dwProvSpec2 As Long
    wcProvChar(0 To 0) As Integer
End Type

Public Enum MODEM_DIAL_OPTIONS
    DIALOPTION_BILLING = &H00000040  ' Supports wait for bong "$"
    DIALOPTION_QUIET = &H00000080  ' Supports wait for quiet "@"
    DIALOPTION_DIALTONE = &H00000100  ' Supports wait for dial tone "W
End Enum
Public Enum MODEM_DEVCAPS_DIAL_VOLUME
    MDMVOLFLAG_LOW = &H00000001
    MDMVOLFLAG_MEDIUM = &H00000002
    MDMVOLFLAG_HIGH = &H00000004
End Enum
Public Enum MODEM_SPEAKER_VOLUME
    MDMVOL_LOW = &H00000000
    MDMVOL_MEDIUM = &H00000001
    MDMVOL_HIGH = &H00000002
End Enum
Public Enum MODEM_DEVCAPS_SPEAKERMODE
    MDMSPKRFLAG_OFF = &H00000001
    MDMSPKRFLAG_DIAL = &H00000002
    MDMSPKRFLAG_ON = &H00000004
    MDMSPKRFLAG_CALLSETUP = &H00000008
End Enum
Public Enum MODEM_SETTINGS_SPEAKERMODE
    MDMSPKR_OFF = &H00000000
    MDMSPKR_DIAL = &H00000001
    MDMSPKR_ON = &H00000002
    MDMSPKR_CALLSETUP = &H00000003
End Enum
Public Enum MODEM_OPTIONS
    MDM_COMPRESSION = &H00000001
    MDM_ERROR_CONTROL = &H00000002
    MDM_FORCED_EC = &H00000004
    MDM_CELLULAR = &H00000008
    MDM_FLOWCONTROL_HARD = &H00000010
    MDM_FLOWCONTROL_SOFT = &H00000020
    MDM_CCITT_OVERRIDE = &H00000040
    MDM_SPEED_ADJUST = &H00000080
    MDM_TONE_DIAL = &H00000100
    MDM_BLIND_DIAL = &H00000200
    MDM_V23_OVERRIDE = &H00000400
    MDM_DIAGNOSTICS = &H00000800
End Enum
Public Enum MODEM_EXTENDED_OPTIONS
    MDM_MASK_BEARERMODE = &H0000f000&
    MDM_SHIFT_BEARERMODE = 12
    MDM_MASK_PROTOCOLID = &H000f0000
    MDM_SHIFT_PROTOCOLID = 16
    MDM_MASK_PROTOCOLDATA = &H0ff00000
    MDM_SHIFT_PROTOCOLDATA = 20
'  PROTOCOLINFO is the union of PROTOCOLID and PROTOCOLDATA ...
    MDM_MASK_PROTOCOLINFO = (MDM_MASK_PROTOCOLID Or MDM_MASK_PROTOCOLDATA)
    MDM_SHIFT_PROTOCOLINFO = MDM_SHIFT_PROTOCOLID
'  EXTENDEDINFO is the union of BEARERMODE and PROTOCOLINFO
    MDM_MASK_EXTENDEDINFO = (MDM_MASK_BEARERMODE Or MDM_MASK_PROTOCOLINFO)
    MDM_SHIFT_EXTENDEDINFO = MDM_SHIFT_BEARERMODE
End Enum
Public Enum MODEM_BEARER_MODES
    MDM_BEARERMODE_ANALOG = &H0
    MDM_BEARERMODE_ISDN = &H1
    MDM_BEARERMODE_GSM = &H2
End Enum
Public Enum MODEM_PROTOCOLS
    MDM_PROTOCOLID_DEFAULT = &H0
    MDM_PROTOCOLID_HDLCPPP = &H1
    MDM_PROTOCOLID_V128 = &H2
    MDM_PROTOCOLID_X75 = &H3
    MDM_PROTOCOLID_V110 = &H4
    MDM_PROTOCOLID_V120 = &H5
    MDM_PROTOCOLID_AUTO = &H6  ' Auto protocol detection.
    MDM_PROTOCOLID_ANALOG = &H7  ' Applicable only to GSM
    MDM_PROTOCOLID_GPRS = &H8
    MDM_PROTOCOLID_PIAFS = &H9
End Enum
Public Enum MODEM_PROTOCOL_HDLCPP
    MDM_SHIFT_HDLCPPP_SPEED = &H0
    MDM_MASK_HDLCPPP_SPEED = &H7  ' 3 bits
    MDM_HDLCPPP_SPEED_DEFAULT = &H0
    MDM_HDLCPPP_SPEED_64K = &H1
    MDM_HDLCPPP_SPEED_56K = &H2
    MDM_SHIFT_HDLCPPP_AUTH = &H3
    MDM_MASK_HDLCPPP_AUTH = (&H7 << 3)  ' 3 bits
    MDM_HDLCPPP_AUTH_DEFAULT = &H0
    MDM_HDLCPPP_AUTH_NONE = &H1
    MDM_HDLCPPP_AUTH_PAP = &H2
    MDM_HDLCPPP_AUTH_CHAP = &H3
    MDM_HDLCPPP_AUTH_MSCHAP = &H4
    MDM_SHIFT_HDLCPPP_ML = &H6
    MDM_MASK_HDLCPPP_ML = (&H3 << 6)  ' 2 bits
    MDM_HDLCPPP_ML_DEFAULT = &H0
    MDM_HDLCPPP_ML_NONE = &H1
    MDM_HDLCPPP_ML_2 = &H2
End Enum
Public Enum MODEM_PROTOCOL_V120
    MDM_SHIFT_V120_SPEED = &H0
    MDM_MASK_V120_SPEED = &H7  ' 3 bits
    MDM_V120_SPEED_DEFAULT = &H0
    MDM_V120_SPEED_64K = &H1
    MDM_V120_SPEED_56K = &H2
    MDM_SHIFT_V120_ML = &H6
    MDM_MASK_V120_ML = (&H3 << 6)  ' 2 bits
    MDM_V120_ML_DEFAULT = &H0
    MDM_V120_ML_NONE = &H1
    MDM_V120_ML_2 = &H2
End Enum
Public Enum MODEM_PROTOCOL_X75
    MDM_SHIFT_X75_DATA = &H0
    MDM_MASK_X75_DATA = &H7  ' 3 bits
    MDM_X75_DATA_DEFAULT = &H0
    MDM_X75_DATA_64K = &H1
    MDM_X75_DATA_128K = &H2
    MDM_X75_DATA_T_70 = &H3
    MDM_X75_DATA_BTX = &H4
End Enum
Public Enum MODEM_PROTOCOL_V110
    MDM_SHIFT_V110_SPEED = &H0
    MDM_MASK_V110_SPEED = &Hf  ' 4 bits
    MDM_V110_SPEED_DEFAULT = &H0
    MDM_V110_SPEED_1DOT2K = &H1
    MDM_V110_SPEED_2DOT4K = &H2
    MDM_V110_SPEED_4DOT8K = &H3
    MDM_V110_SPEED_9DOT6K = &H4
    MDM_V110_SPEED_12DOT0K = &H5
    MDM_V110_SPEED_14DOT4K = &H6
    MDM_V110_SPEED_19DOT2K = &H7
    MDM_V110_SPEED_28DOT8K = &H8
    MDM_V110_SPEED_38DOT4K = &H9
    MDM_V110_SPEED_57DOT6K = &HA
End Enum
Public Enum MODEM_PROTOCOL_AUTO
    MDM_SHIFT_AUTO_SPEED = &H0
    MDM_MASK_AUTO_SPEED = &H7  ' 3 bits
    MDM_AUTO_SPEED_DEFAULT = &H0
    MDM_SHIFT_AUTO_ML = &H6
    MDM_MASK_AUTO_ML = (&H3 << 6)  ' 2 bits
    MDM_AUTO_ML_DEFAULT = &H0
    MDM_AUTO_ML_NONE = &H1
    MDM_AUTO_ML_2 = &H2
End Enum
Public Enum MODEM_PROTOCOL_ANALOG
    MDM_ANALOG_RLP_ON = &H0
    MDM_ANALOG_RLP_OFF = &H1
    MDM_ANALOG_V34 = &H2
End Enum
Public Enum MODEM_PROTOCOL_PIAFS
    MDM_PIAFS_INCOMING = 0
    MDM_PIAFS_OUTGOING = 1
End Enum
Public Type MODEMDEVCAPS
    dwActualSize As Long
    dwRequiredSize As Long
    dwDevSpecificOffset As Long
    dwDevSpecificSize As Long
    ' product and version identification
    dwModemProviderVersion As Long
    dwModemManufacturerOffset As Long
    dwModemManufacturerSize As Long
    dwModemModelOffset As Long
    dwModemModelSize As Long
    dwModemVersionOffset As Long
    dwModemVersionSize As Long
    ' local option capabilities
    dwDialOptions As MODEM_DIAL_OPTIONS ' bitmap of supported values
    dwCallSetupFailTimer As Long ' maximum in seconds
    dwInactivityTimeout As Long ' maximum in seconds
    dwSpeakerVolume As MODEM_DEVCAPS_DIAL_VOLUME ' bitmap of supported values
    dwSpeakerMode As MODEM_DEVCAPS_SPEAKERMODE ' bitmap of supported values
    dwModemOptions As MODEM_OPTIONS ' bitmap of supported values
    dwMaxDTERate As Long ' maximum value in bit/s
    dwMaxDCERate As Long ' maximum value in bit/s
    ' Variable portion for proprietary expansion
    abVariablePortion(0 To 0) As Byte
End Type
Public Type MODEMSETTINGS
    dwActualSize As Long
    dwRequiredSize As Long
    dwDevSpecificOffset As Long
    dwDevSpecificSize As Long
    ' static local options (read/write)
    dwCallSetupFailTimer As Long ' seconds
    dwInactivityTimeout As Long ' seconds
    dwSpeakerVolume As MODEM_SPEAKER_VOLUME ' level
    dwSpeakerMode As MODEM_SETTINGS_SPEAKERMODE ' mode
    dwPreferredModemOptions As MODEM_OPTIONS ' bitmap
    ' negotiated options (read only) for current or last call
    dwNegotiatedModemOptions As MODEM_OPTIONS ' bitmap
    dwNegotiatedDCERate As Long ' bit/s
    ' Variable portion for proprietary expansion
    abVariablePortion(0 To 0) As Byte
End Type




Public Declare PtrSafe Function SetCommState Lib "kernel32" (ByVal hFile As LongPtr, lpDCB As DCB) As BOOL
Public Declare PtrSafe Function SetCommTimeouts Lib "kernel32" (ByVal hFile As LongPtr, lpCommTimeouts As COMMTIMEOUTS) As BOOL
Public Declare PtrSafe Function GetCommState Lib "kernel32" (ByVal hFile As LongPtr, lpDCB As DCB) As BOOL
Public Declare PtrSafe Function GetCommTimeouts Lib "kernel32" (ByVal hFile As LongPtr, lpCommTimeouts As COMMTIMEOUTS) As BOOL
Public Declare PtrSafe Function PurgeComm Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwFlags As COMM_PURGEF_FLAGS) As BOOL
Public Declare PtrSafe Function BuildCommDCBA Lib "kernel32" (ByVal lpDef As String, lpDCB As DCB) As BOOL
Public Declare PtrSafe Function BuildCommDCBW Lib "kernel32" (ByVal lpDef As LongPtr, lpDCB As DCB) As BOOL
Public DeclareWide PtrSafe Function BuildCommDCB Lib "kernel32" Alias "BuildCommDCBW" (ByVal lpDef As String, lpDCB As DCB) As BOOL
Public Declare PtrSafe Function BuildCommDCBAndTimeoutsA Lib "kernel32" (ByVal lpDef As String, lpDCB As DCB, lpCommTimeouts As COMMTIMEOUTS) As BOOL
Public Declare PtrSafe Function BuildCommDCBAndTimeoutsW Lib "kernel32" (ByVal lpDef As LongPtr, lpDCB As DCB, lpCommTimeouts As COMMTIMEOUTS) As BOOL
Public DeclareWide PtrSafe Function BuildCommDCBAndTimeouts Lib "kernel32" Alias "BuildCommDCBAndTimeoutsW" (ByVal lpDef As String, lpDCB As DCB, lpCommTimeouts As COMMTIMEOUTS) As BOOL
Public Declare PtrSafe Function TransmitCommChar Lib "kernel32" (ByVal hFile As LongPtr, ByVal cChar As Byte) As BOOL
Public Declare PtrSafe Function SetCommBreak Lib "kernel32" (ByVal hFile As LongPtr) As BOOL
Public Declare PtrSafe Function SetCommMask Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwEvtMask As COMM_EVENTS) As BOOL
Public Declare PtrSafe Function ClearCommBreak Lib "kernel32" (ByVal hFile As LongPtr) As BOOL
Public Declare PtrSafe Function ClearCommError Lib "kernel32" (ByVal hFile As LongPtr, lpErrors As COMM_ERROR_FLAGS, lpStat As COMSTAT) As BOOL
Public Declare PtrSafe Function SetupComm Lib "kernel32" (ByVal hFile As Long, ByVal dwInQueue As Long, ByVal dwOutQueue As Long) As BOOL
Public Declare PtrSafe Function EscapeCommFunction Lib "kernel32" (ByVal hFile As LongPtr, ByVal dwFunc As COMM_ESCAPEFUNC) As BOOL
Public Declare PtrSafe Function GetCommMask Lib "kernel32" (ByVal hFile As LongPtr, lpEvtMask As COMM_EVENTS) As BOOL
Public Declare PtrSafe Function GetCommProperties Lib "kernel32" (ByVal hFile As LongPtr, lpCommProp As COMMPROP) As BOOL
Public Declare PtrSafe Function GetCommModemStatus Lib "kernel32" (ByVal hFile As LongPtr, lpModemStat As COMM_MODEM_STATUS) As BOOL
Public Declare PtrSafe Function WaitCommEvent Lib "kernel32" (ByVal hFile As LongPtr, lpEvtMask As COMM_EVENTS, lpOverlapped As OVERLAPPED) As BOOL
Public Declare PtrSafe Function GetCommConfig Lib "kernel32" (ByVal hCommDev As LongPtr, lpCC As COMMCONFIG, lpdwSize As Long) As BOOL
Public Declare PtrSafe Function SetCommConfig Lib "kernel32" (ByVal hCommDev As LongPtr, lpCC As COMMCONFIG, ByVal dwSize As Long) As BOOL
Public Declare PtrSafe Function OpenCommPort Lib "kernelbase" (ByVal uPortNumber As Long, [TypeHint(GenericRights, StandardAccessTypes, FileAccessRights)] ByVal dwDesiredAccess As Long, ByVal dwFlagsAndAttributes As Long) As LongPtr
Public Declare PtrSafe Function GetCommPorts Lib "kernelbase" (lpPortNumbers As Long, ByVal uPortNumbersCount As Long, puPortNumbersFound As Long) As Long
Public Declare PtrSafe Function GetDefaultCommConfigA Lib "kernel32" (ByVal lpszName As String, lpCC As COMMCONFIG, lpdwSize As Long) As BOOL
Public Declare PtrSafe Function GetDefaultCommConfigW Lib "kernel32" (ByVal lpszName As LongPtr, lpCC As COMMCONFIG, lpdwSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetDefaultCommConfig Lib "kernel32" Alias "GetDefaultCommConfigW" (ByVal lpszName As String, lpCC As COMMCONFIG, lpdwSize As Long) As BOOL
Public Declare PtrSafe Function SetDefaultCommConfigA Lib "kernel32" (ByVal lpszName As String, lpCC As COMMCONFIG, ByVal dwSize As Long) As BOOL
Public Declare PtrSafe Function SetDefaultCommConfigW Lib "kernel32" (ByVal lpszName As LongPtr, lpCC As COMMCONFIG, ByVal dwSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetDefaultCommConfig Lib "kernel32" Alias "SetDefaultCommConfigW" (ByVal lpszName As String, lpCC As COMMCONFIG, ByVal dwSize As Long) As BOOL
Public Declare PtrSafe Function CommConfigDialogA Lib "kernel32" (ByVal lpszName As String, ByVal hWnd As LongPtr, lpCC As COMMCONFIG) As BOOL
Public Declare PtrSafe Function CommConfigDialogW Lib "kernel32" (ByVal lpszName As LongPtr, ByVal hWnd As LongPtr, lpCC As COMMCONFIG) As BOOL
Public DeclareWide PtrSafe Function CommConfigDialog Lib "kernel32" Alias "CommConfigDialogW" (ByVal lpszName As String, ByVal hWnd As LongPtr, lpCC As COMMCONFIG) As BOOL

[Description("⚠️ **WARNING:** This is a legacy compatibility API, new applications should use CreateFile etc.")]
Public Declare PtrSafe Function _lopen Lib "kernel32" (ByVal lpPathName As String, ByVal iReadWrite As Long) As Long
[Description("⚠️ **WARNING:** This is a legacy compatibility API, new applications should use CreateFile etc.")]
Public Declare PtrSafe Function _lclose Lib "kernel32" (ByVal hFile As Long) As Long
[Description("⚠️ **WARNING:** This is a legacy compatibility API, new applications should use CreateFile etc.")]
Public Declare PtrSafe Function _lcreat Lib "kernel32" (ByVal lpPathName As String, ByVal iAttribute As Long) As Long
[Description("⚠️ **WARNING:** This is a legacy compatibility API, new applications should use CreateFile etc.")]
Public Declare PtrSafe Function _llseek Lib "kernel32" (ByVal hFile As Long, ByVal lOffset As Long, ByVal iOrigin As Long) As Long
[Description("⚠️ **WARNING:** This is a legacy compatibility API, new applications should use CreateFile etc.")]
Public Declare PtrSafe Function _lread Lib "kernel32" (ByVal hFile As Long, lpBuffer As Any, ByVal wBytes As Long) As Long
[Description("⚠️ **WARNING:** This is a legacy compatibility API, new applications should use CreateFile etc.")]
Public Declare PtrSafe Function _lwrite Lib "kernel32" (ByVal hFile As Long, ByVal lpBuffer As String, ByVal wBytes As Long) As Long

[Description("⚠️ **WARNING:** This is a legacy compatibility API, new applications should use CreateFile etc.")]
Public Declare PtrSafe Function _hread Lib "kernel32" (ByVal hFile As Long, lpBuffer As Any, ByVal lBytes As Long) As Long
[Description("⚠️ **WARNING:** This is a legacy compatibility API, new applications should use CreateFile etc.")]
Public Declare PtrSafe Function _hwrite Lib "kernel32" (ByVal hFile As Long, ByVal lpBuffer As String, ByVal lBytes As Long) As Long

#End Region

#Region "ntdll"

Public Const IMAGE_DOS_SIGNATURE  = &H5A4D  ' MZ
Public Const IMAGE_OS2_SIGNATURE  = &H454E  ' NE
Public Const IMAGE_OS2_SIGNATURE_LE  = &H454C  ' LE
Public Const IMAGE_VXD_SIGNATURE  = &H454C  ' LE
Public Const IMAGE_NT_SIGNATURE  = &H00004550  ' PE00


Public Type IMAGE_DOS_HEADER ' DOS .EXE header
	e_magic As Integer ' Magic number
	e_cblp As Integer ' Bytes on last page of file
	e_cp As Integer ' Pages in file
	e_crlc As Integer ' Relocations
	e_cparhdr As Integer ' Size of header in paragraphs
	e_minalloc As Integer ' Minimum extra paragraphs needed
	e_maxalloc As Integer ' Maximum extra paragraphs needed
	e_ss As Integer ' Initial (relative) SS value
	e_sp As Integer ' Initial SP value
	e_csum As Integer ' Checksum
	e_ip As Integer ' Initial IP value
	e_cs As Integer ' Initial (relative) CS value
	e_lfarlc As Integer ' File address of relocation table
	e_ovno As Integer ' Overlay number
	e_res(0 To 3) As Integer ' Reserved words
	e_oemid As Integer ' OEM identifier (for e_oeminfo)
	e_oeminfo As Integer ' OEM information; e_oemid specific
	e_res2(0 To 9) As Integer ' Reserved words
	e_lfanew As Long ' File address of new exe header
End Type

Public Const IMAGE_SIZEOF_FILE_HEADER            = 20
Public Enum ImageFileCharacteristics
	IMAGE_FILE_RELOCS_STRIPPED = &H0001  ' Relocation info stripped from file.
	IMAGE_FILE_EXECUTABLE_IMAGE = &H0002  ' File is executable  (i.e. no unresolved external references).
	IMAGE_FILE_LINE_NUMS_STRIPPED = &H0004  ' Line nunbers stripped from file.
	IMAGE_FILE_LOCAL_SYMS_STRIPPED = &H0008  ' Local symbols stripped from file.
	IMAGE_FILE_AGGRESIVE_WS_TRIM = &H0010  ' Aggressively trim working set
	IMAGE_FILE_LARGE_ADDRESS_AWARE = &H0020  ' App can handle >2gb addresses
	IMAGE_FILE_BYTES_REVERSED_LO = &H0080  ' Bytes of machine word are reversed.
	IMAGE_FILE_32BIT_MACHINE = &H0100  ' 32 bit word machine.
	IMAGE_FILE_DEBUG_STRIPPED = &H0200  ' Debugging info stripped from file in .DBG file
	IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP = &H0400  ' If Image is on removable media, copy and run from the swap file.
	IMAGE_FILE_NET_RUN_FROM_SWAP = &H0800  ' If Image is on Net, copy and run from the swap file.
	IMAGE_FILE_SYSTEM = &H1000  ' System File.
	IMAGE_FILE_DLL = &H2000  ' File is a DLL.
	IMAGE_FILE_UP_SYSTEM_ONLY = &H4000  ' File should only be run on a UP machine
	IMAGE_FILE_BYTES_REVERSED_HI = &H8000&  ' Bytes of machine word are reversed.
End Enum
Public Enum ImageMachineType
	IMAGE_FILE_MACHINE_UNKNOWN = 0
	IMAGE_FILE_MACHINE_TARGET_HOST = &H0001  ' Useful for indicating we want to interact with the host and not a WoW guest.
	IMAGE_FILE_MACHINE_I386 = &H014c  ' Intel 386.
	IMAGE_FILE_MACHINE_R3000 = &H0162  ' MIPS little-endian, 0x160 big-endian
	IMAGE_FILE_MACHINE_R4000 = &H0166  ' MIPS little-endian
	IMAGE_FILE_MACHINE_R10000 = &H0168  ' MIPS little-endian
	IMAGE_FILE_MACHINE_WCEMIPSV2 = &H0169  ' MIPS little-endian WCE v2
	IMAGE_FILE_MACHINE_ALPHA = &H0184  ' Alpha_AXP
	IMAGE_FILE_MACHINE_SH3 = &H01a2  ' SH3 little-endian
	IMAGE_FILE_MACHINE_SH3DSP = &H01a3
	IMAGE_FILE_MACHINE_SH3E = &H01a4  ' SH3E little-endian
	IMAGE_FILE_MACHINE_SH4 = &H01a6  ' SH4 little-endian
	IMAGE_FILE_MACHINE_SH5 = &H01a8  ' SH5
	IMAGE_FILE_MACHINE_ARM = &H01c0  ' ARM Little-Endian
	IMAGE_FILE_MACHINE_THUMB = &H01c2  ' ARM Thumb/Thumb-2 Little-Endian
	IMAGE_FILE_MACHINE_ARMNT = &H01c4  ' ARM Thumb-2 Little-Endian
	IMAGE_FILE_MACHINE_AM33 = &H01d3
	IMAGE_FILE_MACHINE_POWERPC = &H01F0  ' IBM PowerPC Little-Endian
	IMAGE_FILE_MACHINE_POWERPCFP = &H01f1
	IMAGE_FILE_MACHINE_IA64 = &H0200  ' Intel 64
	IMAGE_FILE_MACHINE_MIPS16 = &H0266  ' MIPS
	IMAGE_FILE_MACHINE_ALPHA64 = &H0284  ' ALPHA64
	IMAGE_FILE_MACHINE_MIPSFPU = &H0366  ' MIPS
	IMAGE_FILE_MACHINE_MIPSFPU16 = &H0466  ' MIPS
	IMAGE_FILE_MACHINE_AXP64 = IMAGE_FILE_MACHINE_ALPHA64
	IMAGE_FILE_MACHINE_TRICORE = &H0520  ' Infineon
	IMAGE_FILE_MACHINE_CEF = &H0CEF
	IMAGE_FILE_MACHINE_EBC = &H0EBC  ' EFI Byte Code
	IMAGE_FILE_MACHINE_AMD64 = &H8664&  ' AMD64 (K8)
	IMAGE_FILE_MACHINE_M32R = &H9041&  ' M32R little-endian
	IMAGE_FILE_MACHINE_ARM64 = &HAA64&  ' ARM64 Little-Endian
	IMAGE_FILE_MACHINE_CEE = &HC0EE&
    IMAGE_FILE_MACHINE_ARM64EC = &HA641&
    IMAGE_FILE_MACHINE_ARM64X = &HA64E&
End Enum
Public Type IMAGE_FILE_HEADER
	/* [ TypeHint(ImageMachineType) ] */ Machine As Integer
	NumberOfSections As Integer
	TimeDateStamp As Long
	PointerToSymbolTable As Long
	NumberOfSymbols As Long
	SizeOfOptionalHeader As Integer
	/* [ TypeHint(ImageFileCharacteristics) ] */ Characteristics As Integer
End Type

Public Type IMAGE_BASE_RELOCATION
    VirtualAddress As Long
    SizeOfBlock As Long
    '  WORD    TypeOffset[1];
End Type

Public Enum IMAGE_REL_NS_BASED
    IMAGE_REL_BASED_ABSOLUTE = 0
    IMAGE_REL_BASED_HIGH = 1
    IMAGE_REL_BASED_LOW = 2
    IMAGE_REL_BASED_HIGHLOW = 3
    IMAGE_REL_BASED_HIGHADJ = 4
    IMAGE_REL_BASED_MACHINE_SPECIFIC_5 = 5
    IMAGE_REL_BASED_RESERVED = 6
    IMAGE_REL_BASED_MACHINE_SPECIFIC_7 = 7
    IMAGE_REL_BASED_MACHINE_SPECIFIC_8 = 8
    IMAGE_REL_BASED_MACHINE_SPECIFIC_9 = 9
    IMAGE_REL_BASED_DIR64 = 10
End Enum
Public Enum IMAGE_REL_BASED
    IMAGE_REL_BASED_IA64_IMM64 = 9
    IMAGE_REL_BASED_MIPS_JMPADDR = 5
    IMAGE_REL_BASED_MIPS_JMPADDR16 = 9
    IMAGE_REL_BASED_ARM_MOV32 = 5
    IMAGE_REL_BASED_THUMB_MOV32 = 7
End Enum

Public Const IMAGE_ARCHIVE_START_SIZE  = 8
Public Const IMAGE_ARCHIVE_START  = "!<arch>\n"
Public Const IMAGE_ARCHIVE_END  = "`\n"
Public Const IMAGE_ARCHIVE_PAD  = "\n"
Public Const IMAGE_ARCHIVE_LINKER_MEMBER  = "/               "
Public Const IMAGE_ARCHIVE_LONGNAMES_MEMBER  = "//              "
Public Const IMAGE_ARCHIVE_HYBRIDMAP_MEMBER  = "/<HYBRIDMAP>/   "

Public Type IMAGE_ARCHIVE_MEMBER_HEADER
    Name(0 To 15) As Byte ' File member name - `/' terminated.
    Date(0 To 11) As Byte ' File member date - decimal.
    UserID(0 To 5) As Byte ' File member user id - decimal.
    GroupID(0 To 5) As Byte ' File member group id - decimal.
    Mode(0 To 7) As Byte ' File member mode - octal.
    Size(0 To 9) As Byte ' File member size - decimal.
    EndHeader(0 To 1) As Byte ' String to end header.
End Type

Public Const IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR = 60


Public Const IMAGE_ORDINAL_FLAG64  = &H8000000000000000
Public Const IMAGE_ORDINAL_FLAG32  = &H80000000
#If Win64 Then
Public Const IMAGE_ORDINAL_FLAG = IMAGE_ORDINAL_FLAG64
#Else
Public Const IMAGE_ORDINAL_FLAG = IMAGE_ORDINAL_FLAG32
#End If

Public Type IMAGE_DATA_DIRECTORY
	VirtualAddress As Long
	Size As Long
End Type

Public Type IMAGE_EXPORT_DIRECTORY
    Characteristics As Long
    TimeDateStamp As Long
    MajorVersion As Integer
    MinorVersion As Integer
    Name As Long
    Base As Long
    NumberOfFunctions As Long
    NumberOfNames As Long
    AddressOfFunctions As Long ' RVA from base of image
    AddressOfNames As Long ' RVA from base of image
    AddressOfNameOrdinals As Long ' RVA from base of image
End Type
' typedef struct _IMAGE_THUNK_DATA64 {
' union {
    ' ULONGLONG ForwarderString;  // PBYTE 
    ' ULONGLONG Function;         // PDWORD
    ' ULONGLONG Ordinal;
    ' ULONGLONG AddressOfData;    // PIMAGE_IMPORT_BY_NAME
' } u1;
' } IMAGE_THUNK_DATA64;
Public Type IMAGE_THUNK_DATA32
	u1 As Long
End Type
Public Type IMAGE_THUNK_DATA64
    u1 As LongLong
End Type
/*
#If Win64 Then
Alias IMAGE_THUNK_DATA As IMAGE_THUNK_DATA64
#Else
Alias IMAGE_THUNK_DATA As IMAGE_THUNK_DATA32
*/
Public Type IMAGE_THUNK_DATA
    u1 As LongPtr
End Type

Public Type IMAGE_TLS_DIRECTORY32
    StartAddressOfRawData As Long
    EndAddressOfRawData As Long
    AddressOfIndex As Long ' PDWORD
    AddressOfCallBacks As Long ' PIMAGE_TLS_CALLBACK *
    SizeOfZeroFill As Long
    'union {
    Characteristics As Long
    '     struct {
    '         DWORD Reserved0 : 20;
    '         DWORD Alignment : 4;
    '          DWORD Reserved1 : 8;
    '      } DUMMYSTRUCTNAME;
    '  } DUMMYUNIONNAME;
End Type
Public Type IMAGE_TLS_DIRECTORY64
    StartAddressOfRawData As LongLong
    EndAddressOfRawData As LongLong
    AddressOfIndex As LongLong ' PDWORD
    AddressOfCallBacks As LongLong ' PIMAGE_TLS_CALLBACK *
    SizeOfZeroFill As Long
    'union {
    Characteristics As Long
    '     struct {
    '         DWORD Reserved0 : 20;
    '         DWORD Alignment : 4;
    '          DWORD Reserved1 : 8;
    '      } DUMMYSTRUCTNAME;
    '  } DUMMYUNIONNAME;
End Type
Public Type IMAGE_TLS_DIRECTORY
    StartAddressOfRawData As LongPtr
    EndAddressOfRawData As LongPtr
    AddressOfIndex As LongPtr ' PDWORD
    AddressOfCallBacks As LongPtr ' PIMAGE_TLS_CALLBACK *
    SizeOfZeroFill As Long
    'union {
    Characteristics As Long
    '     struct {
    '         DWORD Reserved0 : 20;
    '         DWORD Alignment : 4;
    '          DWORD Reserved1 : 8;
    '      } DUMMYSTRUCTNAME;
    '  } DUMMYUNIONNAME;
End Type

Public Type IMAGE_DELAYLOAD_DESCRIPTOR
    'union {
    AllAttributes As Long
    '    struct {
    '        DWORD RvaBased : 1;             // Delay load version 2
    '        DWORD ReservedAttributes : 31;
    '    } DUMMYSTRUCTNAME;
    '} Attributes;
    DllNameRVA As Long ' RVA to the name of the target library (NULL-terminate ASCII string)
    ModuleHandleRVA As Long ' RVA to the HMODULE caching location (PHMODULE)
    ImportAddressTableRVA As Long ' RVA to the start of the IAT (PIMAGE_THUNK_DATA)
    ImportNameTableRVA As Long ' RVA to the start of the name table (PIMAGE_THUNK_DATA::AddressOfData)
    BoundImportAddressTableRVA As Long ' RVA to an optional bound IAT
    UnloadInformationTableRVA As Long ' RVA to an optional unload info table
    TimeDateStamp As Long ' 0 if not bound,
    ' Otherwise, date/time of the target DLL
End Type

Public Type IMAGE_RESOURCE_DIRECTORY
    Characteristics As Long
    TimeDateStamp As Long
    MajorVersion As Integer
    MinorVersion As Integer
    NumberOfNamedEntries As Integer
    NumberOfIdEntries As Integer
    '  IMAGE_RESOURCE_DIRECTORY_ENTRY DirectoryEntries[];
End Type

Public Const IMAGE_RESOURCE_NAME_IS_STRING  = &H80000000
Public Const IMAGE_RESOURCE_DATA_IS_DIRECTORY  = &H80000000

' // Each directory contains the 32-bit Name of the entry and an offset,
' // relative to the beginning of the resource directory of the data associated
' // with this directory entry.  If the name of the entry is an actual text
' // string instead of an integer Id, then the high order bit of the name field
' // is set to one and the low order 31-bits are an offset, relative to the
' // beginning of the resource directory of the string, which is of type
' // IMAGE_RESOURCE_DIRECTORY_STRING.  Otherwise the high bit is clear and the
' // low-order 16-bits are the integer Id that identify this resource directory
' // entry. If the directory entry is yet another resource directory (i.e. a
' // subdirectory), then the high order bit of the offset field will be
' // set to indicate this.  Otherwise the high bit is clear and the offset
' // field points to a resource data entry.
' //

' //@[comment("MVI_tracked")]
' typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY {
    ' union {
        ' struct {
            ' DWORD NameOffset:31;
            ' DWORD NameIsString:1;
        ' } DUMMYSTRUCTNAME;
        ' DWORD   Name;
        ' WORD    Id;
    ' } DUMMYUNIONNAME;
    ' union {
        ' DWORD   OffsetToData;
        ' struct {
            ' DWORD   OffsetToDirectory:31;
            ' DWORD   DataIsDirectory:1;
        ' } DUMMYSTRUCTNAME2;
    ' } DUMMYUNIONNAME2;
' } IMAGE_RESOURCE_DIRECTORY_ENTRY, *PIMAGE_RESOURCE_DIRECTORY_ENTRY;
Public Type IMAGE_RESOURCE_DIRECTORY_ENTRY
    Name As Long
    OffsetToData As Long
End Type
[Description("⚠️ **WARNING:** Do not copy this all at once. Use length to determine what to copy.")]
Public Type IMAGE_RESOURCE_DIRECTORY_STRING
    Length As Integer
    NameString(0 To 79) As Byte
End Type
[Description("⚠️ **WARNING:** Do not copy this all at once. Use length to determine what to copy.")]
Public Type IMAGE_RESOURCE_DIR_STRING_U
    Length As Integer
    NameString(0 To 79) As Integer
End Type

Public Type IMAGE_RESOURCE_DATA_ENTRY
    OffsetToData As Long
    Size As Long
    CodePage As Long
    Reserved As Long
End Type





Public Type IMAGE_IMPORT_DESCRIPTOR
    'union {
    '   DWORD   Characteristics;            // 0 for terminating null import descriptor
    '     DWORD   OriginalFirstThunk;         // RVA to original unbound IAT (PIMAGE_THUNK_DATA)
    ' } DUMMYUNIONNAME;
    [Description("Union of Characteristics and OriginalFirstThunk")]
    ChrctrsOrOrigThunk As Long
    TimeDateStamp As Long ' 0 if not bound,
    ' -1 if bound, and real date\time stamp
    '     in IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT (new BIND)
    ' O.W. date/time stamp of DLL bound to (Old BIND)
    ForwarderChain As Long ' -1 if no forwarders
    Name As Long
    FirstThunk As Long ' RVA to IAT (if bound this IAT has actual addresses)
End Type
Public Type IMAGE_BOUND_IMPORT_DESCRIPTOR
    TimeDateStamp As Long
    OffsetModuleName As Integer
    NumberOfModuleForwarderRefs As Integer
    ' Array of zero or more IMAGE_BOUND_FORWARDER_REF follows
End Type
Public Type IMAGE_BOUND_FORWARDER_REF
    TimeDateStamp As Long
    OffsetModuleName As Integer
    Reserved As Integer
End Type
Public Type IMAGE_IMPORT_BY_NAME
    Hint As Integer
    Name(0 To 99) As Byte
End Type

Public Const IMAGE_NUMBEROF_DIRECTORY_ENTRIES   = 16

Public Enum ImageSubsystemType
	IMAGE_SUBSYSTEM_UNKNOWN = 0  ' Unknown subsystem.
	IMAGE_SUBSYSTEM_NATIVE = 1  ' Image doesn't require a subsystem.
	IMAGE_SUBSYSTEM_WINDOWS_GUI = 2  ' Image runs in the Windows GUI subsystem.
	IMAGE_SUBSYSTEM_WINDOWS_CUI = 3  ' Image runs in the Windows character subsystem.
	IMAGE_SUBSYSTEM_OS2_CUI = 5  ' image runs in the OS/2 character subsystem.
	IMAGE_SUBSYSTEM_POSIX_CUI = 7  ' image runs in the Posix character subsystem.
	IMAGE_SUBSYSTEM_NATIVE_WINDOWS = 8  ' image is a native Win9x driver.
	IMAGE_SUBSYSTEM_WINDOWS_CE_GUI = 9  ' Image runs in the Windows CE subsystem.
	IMAGE_SUBSYSTEM_EFI_APPLICATION = 10  '
	IMAGE_SUBSYSTEM_EFI_BOOT_SERVICE_DRIVER = 11  '
	IMAGE_SUBSYSTEM_EFI_RUNTIME_DRIVER = 12  '
	IMAGE_SUBSYSTEM_EFI_ROM = 13
	IMAGE_SUBSYSTEM_XBOX = 14
	IMAGE_SUBSYSTEM_WINDOWS_BOOT_APPLICATION = 16
	IMAGE_SUBSYSTEM_XBOX_CODE_CATALOG = 17
End Enum
Public Enum ImageDllCharacteristics
	IMAGE_LIBRARY_PROCESS_INIT = &H0001  ' Reserved.
	IMAGE_LIBRARY_PROCESS_TERM = &H0002  ' Reserved.
	IMAGE_LIBRARY_THREAD_INIT = &H0004  ' Reserved.
	IMAGE_LIBRARY_THREAD_TERM = &H0008  ' Reserved.
	IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA = &H0020  ' Image can handle a high entropy 64-bit virtual address space.
	IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE = &H0040  ' DLL can move.
	IMAGE_DLLCHARACTERISTICS_FORCE_INTEGRITY = &H0080  ' Code Integrity Image
	IMAGE_DLLCHARACTERISTICS_NX_COMPAT = &H0100  ' Image is NX compatible
	IMAGE_DLLCHARACTERISTICS_NO_ISOLATION = &H0200  ' Image understands isolation and doesn't want it
	IMAGE_DLLCHARACTERISTICS_NO_SEH = &H0400  ' Image does not use SEH.  No SE handler may reside in this image
	IMAGE_DLLCHARACTERISTICS_NO_BIND = &H0800  ' Do not bind this image.
	IMAGE_DLLCHARACTERISTICS_APPCONTAINER = &H1000  ' Image should execute in an AppContainer
	IMAGE_DLLCHARACTERISTICS_WDM_DRIVER = &H2000  ' Driver uses WDM model
	IMAGE_DLLCHARACTERISTICS_GUARD_CF = &H4000  ' Image supports Control Flow Guard.
	IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE = &H8000&
End Enum
Public Enum ImageDirectories
	IMAGE_DIRECTORY_ENTRY_EXPORT = 0  ' Export Directory
	IMAGE_DIRECTORY_ENTRY_IMPORT = 1  ' Import Directory
	IMAGE_DIRECTORY_ENTRY_RESOURCE = 2  ' Resource Directory
	IMAGE_DIRECTORY_ENTRY_EXCEPTION = 3  ' Exception Directory
	IMAGE_DIRECTORY_ENTRY_SECURITY = 4  ' Security Directory
	IMAGE_DIRECTORY_ENTRY_BASERELOC = 5  ' Base Relocation Table
	IMAGE_DIRECTORY_ENTRY_DEBUG = 6  ' Debug Directory
'       IMAGE_DIRECTORY_ENTRY_COPYRIGHT       7   // (X86 usage)
	IMAGE_DIRECTORY_ENTRY_ARCHITECTURE = 7  ' Architecture Specific Data
	IMAGE_DIRECTORY_ENTRY_GLOBALPTR = 8  ' RVA of GP
	IMAGE_DIRECTORY_ENTRY_TLS = 9  ' TLS Directory
	IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG = 10  ' Load Configuration Directory
	IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT = 11  ' Bound Import Directory in headers
	IMAGE_DIRECTORY_ENTRY_IAT = 12  ' Import Address Table
	IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT = 13  ' Delay Load Import Descriptors
	IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR = 14  ' COM Runtime descriptor
End Enum

Public Enum IMAGE_MAGIC_VALUES
    IMAGE_NT_OPTIONAL_HDR32_MAGIC = &H10b
    IMAGE_NT_OPTIONAL_HDR64_MAGIC = &H20b
    IMAGE_ROM_OPTIONAL_HDR_MAGIC = &H107
End Enum

Public Type IMAGE_OPTIONAL_HEADER
	' Standard fields.
	/* [ TypeHint(IMAGE_MAGIC_VALUES) ] */ Magic As Integer
	MajorLinkerVersion As Byte
	MinorLinkerVersion As Byte
	SizeOfCode As Long
	SizeOfInitializedData As Long
	SizeOfUninitializedData As Long
	AddressOfEntryPoint As Long
	BaseOfCode As Long
    #If Win64 = 0 Then
	BaseOfData As Long
    #End If
	' NT additional fields.
	ImageBase As LongPtr
	SectionAlignment As Long
	FileAlignment As Long
	MajorOperatingSystemVersion As Integer
	MinorOperatingSystemVersion As Integer
	MajorImageVersion As Integer
	MinorImageVersion As Integer
	MajorSubsystemVersion As Integer
	MinorSubsystemVersion As Integer
	Win32VersionValue As Long
	SizeOfImage As Long
	SizeOfHeaders As Long
	CheckSum As Long
	/* [ TypeHint(ImageSubsystemType) ] */ Subsystem As Integer
	/* [ TypeHint(ImageDllCharacteristics) ] */ DllCharacteristics As Integer
	SizeOfStackReserve As LongPtr
	SizeOfStackCommit As LongPtr
	SizeOfHeapReserve As LongPtr
	SizeOfHeapCommit As LongPtr
	LoaderFlags As Long
	NumberOfRvaAndSizes As Long
	DataDirectory(0 To (IMAGE_NUMBEROF_DIRECTORY_ENTRIES - 1)) As IMAGE_DATA_DIRECTORY
End Type
Public Type IMAGE_OPTIONAL_HEADER32
    ' Standard fields.
    Magic As Integer
    MajorLinkerVersion As Byte
    MinorLinkerVersion As Byte
    SizeOfCode As Long
    SizeOfInitializedData As Long
    SizeOfUninitializedData As Long
    AddressOfEntryPoint As Long
    BaseOfCode As Long
    BaseOfData As Long
    ' NT additional fields.
    ImageBase As Long
    SectionAlignment As Long
    FileAlignment As Long
    MajorOperatingSystemVersion As Integer
    MinorOperatingSystemVersion As Integer
    MajorImageVersion As Integer
    MinorImageVersion As Integer
    MajorSubsystemVersion As Integer
    MinorSubsystemVersion As Integer
    Win32VersionValue As Long
    SizeOfImage As Long
    SizeOfHeaders As Long
    CheckSum As Long
    /* [ TypeHint(ImageSubsystemType) ] */ Subsystem As Integer
    /* [ TypeHint(ImageDllCharacteristics) ] */ DllCharacteristics As Integer
    SizeOfStackReserve As Long
    SizeOfStackCommit As Long
    SizeOfHeapReserve As Long
    SizeOfHeapCommit As Long
    LoaderFlags As Long
    NumberOfRvaAndSizes As Long
    DataDirectory(0 To (IMAGE_NUMBEROF_DIRECTORY_ENTRIES - 1)) As IMAGE_DATA_DIRECTORY
End Type
Public Type IMAGE_OPTIONAL_HEADER64
    Magic As Integer
    MajorLinkerVersion As Byte
    MinorLinkerVersion As Byte
    SizeOfCode As Long
    SizeOfInitializedData As Long
    SizeOfUninitializedData As Long
    AddressOfEntryPoint As Long
    BaseOfCode As Long
    ImageBase As LongLong
    SectionAlignment As Long
    FileAlignment As Long
    MajorOperatingSystemVersion As Integer
    MinorOperatingSystemVersion As Integer
    MajorImageVersion As Integer
    MinorImageVersion As Integer
    MajorSubsystemVersion As Integer
    MinorSubsystemVersion As Integer
    Win32VersionValue As Long
    SizeOfImage As Long
    SizeOfHeaders As Long
    CheckSum As Long
    /* [ TypeHint(ImageSubsystemType) ] */ Subsystem As Integer
    /* [ TypeHint(ImageDllCharacteristics) ] */ DllCharacteristics As Integer
    SizeOfStackReserve As LongLong
    SizeOfStackCommit As LongLong
    SizeOfHeapReserve As LongLong
    SizeOfHeapCommit As LongLong
    LoaderFlags As Long
    NumberOfRvaAndSizes As Long
    DataDirectory(0 To (IMAGE_NUMBEROF_DIRECTORY_ENTRIES - 1)) As IMAGE_DATA_DIRECTORY
End Type

Public Type IMAGE_ROM_OPTIONAL_HEADER
    Magic As Integer
    MajorLinkerVersion As Byte
    MinorLinkerVersion As Byte
    SizeOfCode As Long
    SizeOfInitializedData As Long
    SizeOfUninitializedData As Long
    AddressOfEntryPoint As Long
    BaseOfCode As Long
    BaseOfData As Long
    BaseOfBss As Long
    GprMask As Long
    CprMask(0 To 3) As Long
    GpValue As Long
End Type

Public Type IMAGE_ROM_HEADERS
    FileHeader As IMAGE_FILE_HEADER
    OptionalHeader As IMAGE_ROM_OPTIONAL_HEADER
End Type

Public Type IMAGE_NT_HEADERS
    Signature As Long
    FileHeader As IMAGE_FILE_HEADER
    OptionalHeader As IMAGE_OPTIONAL_HEADER
End Type
Public Type IMAGE_NT_HEADERS32
    Signature As Long
    FileHeader As IMAGE_FILE_HEADER
    OptionalHeader As IMAGE_OPTIONAL_HEADER32
End Type
Public Type IMAGE_NT_HEADERS64
    Signature As Long
    FileHeader As IMAGE_FILE_HEADER
    OptionalHeader As IMAGE_OPTIONAL_HEADER64
End Type

Public Type ANON_OBJECT_HEADER
    Sig1 As Integer ' Must be IMAGE_FILE_MACHINE_UNKNOWN
    Sig2 As Integer ' Must be 0xffff
    Version As Integer ' >= 1 (implies the CLSID field is present)
    Machine As Integer
    TimeDateStamp As Long
    ClassID As UUID ' Used to invoke CoCreateInstance
    SizeOfData As Long ' Size of data that follows the header
End Type
Public Type ANON_OBJECT_HEADER_V2
    Sig1 As Integer ' Must be IMAGE_FILE_MACHINE_UNKNOWN
    Sig2 As Integer ' Must be 0xffff
    Version As Integer ' >= 2 (implies the Flags field is present - otherwise V1)
    Machine As Integer
    TimeDateStamp As Long
    ClassID As UUID ' Used to invoke CoCreateInstance
    SizeOfData As Long ' Size of data that follows the header
    Flags As Long ' 0x1 -> contains metadata
    MetaDataSize As Long ' Size of CLR metadata
    MetaDataOffset As Long ' Offset of CLR metadata
End Type
Public Type ANON_OBJECT_HEADER_BIGOBJ
   'same as ANON_OBJECT_HEADER_V2
   Sig1 As Integer ' Must be IMAGE_FILE_MACHINE_UNKNOWN
   Sig2 As Integer ' Must be 0xffff
   Version As Integer ' >= 2 (implies the Flags field is present)
   Machine As Integer ' Actual machine - IMAGE_FILE_MACHINE_xxx
   TimeDateStamp As Long
   ClassID As UUID ' {D1BAA1C7-BAEE-4ba9-AF20-FAF66AA4DCB8}
   SizeOfData As Long ' Size of data that follows the header
   Flags As Long ' 0x1 -> contains metadata
   MetaDataSize As Long ' Size of CLR metadata
   MetaDataOffset As Long ' Offset of CLR metadata
   'bigobj specifics
   NumberOfSections As Long ' extended from WORD
   PointerToSymbolTable As Long
   NumberOfSymbols As Long
End Type


Public Const IMAGE_SIZEOF_SECTION_HEADER     = 40
Public Const IMAGE_SIZEOF_SHORT_NAME        = 8
Public Type IMAGE_SECTION_HEADER
	Name(0 To (IMAGE_SIZEOF_SHORT_NAME - 1)) As Byte
	Misc As Long
	VirtualAddress As Long
	SizeOfRawData As Long
	PointerToRawData As Long
	PointerToRelocations As Long
	PointerToLinenumbers As Long
	NumberOfRelocations As Integer
	NumberOfLinenumbers As Integer
	Characteristics As ImageSectionCharacteristics
End Type

Public Enum ImageSectionCharacteristics
	IMAGE_SCN_TYPE_REG = &H00000000  ' Reserved.
	IMAGE_SCN_TYPE_DSECT = &H00000001  ' Reserved.
	IMAGE_SCN_TYPE_NOLOAD = &H00000002  ' Reserved.
	IMAGE_SCN_TYPE_GROUP = &H00000004  ' Reserved.
	IMAGE_SCN_TYPE_NO_PAD = &H00000008  ' Reserved.
	IMAGE_SCN_TYPE_COPY = &H00000010  ' Reserved.
	IMAGE_SCN_CNT_CODE = &H00000020  ' Section contains code.
	IMAGE_SCN_CNT_INITIALIZED_DATA = &H00000040  ' Section contains initialized data.
	IMAGE_SCN_CNT_UNINITIALIZED_DATA = &H00000080  ' Section contains uninitialized data.
	IMAGE_SCN_LNK_OTHER = &H00000100  ' Reserved.
	IMAGE_SCN_LNK_INFO = &H00000200  ' Section contains comments or some other type of information.
'       IMAGE_SCN_TYPE_OVER                  0x00000400  // Reserved.
	IMAGE_SCN_LNK_REMOVE = &H00000800  ' Section contents will not become part of image.
	IMAGE_SCN_LNK_COMDAT = &H00001000  ' Section contents comdat.
'                                            0x00002000  // Reserved.
'       IMAGE_SCN_MEM_PROTECTED - Obsolete   0x00004000
	IMAGE_SCN_NO_DEFER_SPEC_EXC = &H00004000  ' Reset speculative exceptions handling bits in the TLB entries for this section.
	IMAGE_SCN_GPREL = &H00008000&  ' Section content can be accessed relative to GP
	IMAGE_SCN_MEM_FARDATA = &H00008000&
'       IMAGE_SCN_MEM_SYSHEAP  - Obsolete    0x00010000
	IMAGE_SCN_MEM_PURGEABLE = &H00020000
	IMAGE_SCN_MEM_16BIT = &H00020000
	IMAGE_SCN_MEM_LOCKED = &H00040000
	IMAGE_SCN_MEM_PRELOAD = &H00080000
	IMAGE_SCN_ALIGN_1BYTES = &H00100000  '
	IMAGE_SCN_ALIGN_2BYTES = &H00200000  '
	IMAGE_SCN_ALIGN_4BYTES = &H00300000  '
	IMAGE_SCN_ALIGN_8BYTES = &H00400000  '
	IMAGE_SCN_ALIGN_16BYTES = &H00500000  ' Default alignment if no others are specified.
	IMAGE_SCN_ALIGN_32BYTES = &H00600000  '
	IMAGE_SCN_ALIGN_64BYTES = &H00700000  '
	IMAGE_SCN_ALIGN_128BYTES = &H00800000  '
	IMAGE_SCN_ALIGN_256BYTES = &H00900000  '
	IMAGE_SCN_ALIGN_512BYTES = &H00A00000  '
	IMAGE_SCN_ALIGN_1024BYTES = &H00B00000  '
	IMAGE_SCN_ALIGN_2048BYTES = &H00C00000  '
	IMAGE_SCN_ALIGN_4096BYTES = &H00D00000  '
	IMAGE_SCN_ALIGN_8192BYTES = &H00E00000  '
'  Unused                                    0x00F00000
	IMAGE_SCN_ALIGN_MASK = &H00F00000
	IMAGE_SCN_LNK_NRELOC_OVFL = &H01000000  ' Section contains extended relocations.
	IMAGE_SCN_MEM_DISCARDABLE = &H02000000  ' Section can be discarded.
	IMAGE_SCN_MEM_NOT_CACHED = &H04000000  ' Section is not cachable.
	IMAGE_SCN_MEM_NOT_PAGED = &H08000000  ' Section is not pageable.
	IMAGE_SCN_MEM_SHARED = &H10000000  ' Section is shareable.
	IMAGE_SCN_MEM_EXECUTE = &H20000000  ' Section is executable.
	IMAGE_SCN_MEM_READ = &H40000000  ' Section is readable.
	IMAGE_SCN_MEM_WRITE = &H80000000  ' Section is writeable.
End Enum

Public Const IMAGE_SCN_SCALE_INDEX = 1

Public Enum IMAGE_SECTION_VALUES
    IMAGE_SYM_UNDEFINED = 0  ' Symbol is undefined or is common.
    IMAGE_SYM_ABSOLUTE = -1  ' Symbol is an absolute value.
    IMAGE_SYM_DEBUG = -2  ' Symbol is a special debug item.
    IMAGE_SYM_SECTION_MAX = &HFEFF&  ' Values 0xFF00-0xFFFF are special
    IMAGE_SYM_SECTION_MAX_EX = MAXLONG
End Enum
Public Enum IMAGE_SYM_TYPE
    IMAGE_SYM_TYPE_NULL = &H0000  ' no type.
    IMAGE_SYM_TYPE_VOID = &H0001  '
    IMAGE_SYM_TYPE_CHAR = &H0002  ' type character.
    IMAGE_SYM_TYPE_SHORT = &H0003  ' type short integer.
    IMAGE_SYM_TYPE_INT = &H0004  '
    IMAGE_SYM_TYPE_LONG = &H0005  '
    IMAGE_SYM_TYPE_FLOAT = &H0006  '
    IMAGE_SYM_TYPE_DOUBLE = &H0007  '
    IMAGE_SYM_TYPE_STRUCT = &H0008  '
    IMAGE_SYM_TYPE_UNION = &H0009  '
    IMAGE_SYM_TYPE_ENUM = &H000A  ' enumeration.
    IMAGE_SYM_TYPE_MOE = &H000B  ' member of enumeration.
    IMAGE_SYM_TYPE_BYTE = &H000C  '
    IMAGE_SYM_TYPE_WORD = &H000D  '
    IMAGE_SYM_TYPE_UINT = &H000E  '
    IMAGE_SYM_TYPE_DWORD = &H000F  '
    IMAGE_SYM_TYPE_PCODE = &H8000&  '
End Enum
Public Enum IMAGE_SYM_TYPE_DERIVED
    IMAGE_SYM_DTYPE_NULL = 0  ' no derived type.
    IMAGE_SYM_DTYPE_POINTER = 1  ' pointer.
    IMAGE_SYM_DTYPE_FUNCTION = 2  ' function.
    IMAGE_SYM_DTYPE_ARRAY = 3  ' array.
End Enum
Public Enum IMAGE_STORAGE_CLASS
    IMAGE_SYM_CLASS_END_OF_FUNCTION = -1
    IMAGE_SYM_CLASS_NULL = &H0000
    IMAGE_SYM_CLASS_AUTOMATIC = &H0001
    IMAGE_SYM_CLASS_EXTERNAL = &H0002
    IMAGE_SYM_CLASS_STATIC = &H0003
    IMAGE_SYM_CLASS_REGISTER = &H0004
    IMAGE_SYM_CLASS_EXTERNAL_DEF = &H0005
    IMAGE_SYM_CLASS_LABEL = &H0006
    IMAGE_SYM_CLASS_UNDEFINED_LABEL = &H0007
    IMAGE_SYM_CLASS_MEMBER_OF_STRUCT = &H0008
    IMAGE_SYM_CLASS_ARGUMENT = &H0009
    IMAGE_SYM_CLASS_STRUCT_TAG = &H000A
    IMAGE_SYM_CLASS_MEMBER_OF_UNION = &H000B
    IMAGE_SYM_CLASS_UNION_TAG = &H000C
    IMAGE_SYM_CLASS_TYPE_DEFINITION = &H000D
    IMAGE_SYM_CLASS_UNDEFINED_STATIC = &H000E
    IMAGE_SYM_CLASS_ENUM_TAG = &H000F
    IMAGE_SYM_CLASS_MEMBER_OF_ENUM = &H0010
    IMAGE_SYM_CLASS_REGISTER_PARAM = &H0011
    IMAGE_SYM_CLASS_BIT_FIELD = &H0012
    IMAGE_SYM_CLASS_FAR_EXTERNAL = &H0044  '
    IMAGE_SYM_CLASS_BLOCK = &H0064
    IMAGE_SYM_CLASS_FUNCTION = &H0065
    IMAGE_SYM_CLASS_END_OF_STRUCT = &H0066
    IMAGE_SYM_CLASS_FILE = &H0067
'  new
    IMAGE_SYM_CLASS_SECTION = &H0068
    IMAGE_SYM_CLASS_WEAK_EXTERNAL = &H0069
    IMAGE_SYM_CLASS_CLR_TOKEN = &H006B
End Enum

Public Const N_BTMASK  = &H000F
Public Const N_TMASK  = &H0030
Public Const N_TMASK1  = &H00C0
Public Const N_TMASK2  = &H00F0
Public Const N_BTSHFT  = 4
Public Const N_TSHIFT  = 2


Public Const IMAGE_SIZEOF_SYMBOL  = 18

[PackingAlignment(2)]
Public Type IMAGE_SYMBOL
    ' union {
        ' BYTE    ShortName[8];
        ' struct {
            ' DWORD   Short;     // if 0, use LongName
            ' DWORD   Long;      // offset into string table
        ' } Name;
        ' DWORD   LongName[2];    // PBYTE [2]
    ' } N;
    N(7) As Byte
    Value As Long
    SectionNumber As Integer
    /* [ TypeHint(IMAGE_SYM_TYPE_DERIVED) ] */ Type As Integer
    /* [ TypeHint(IMAGE_STORAGE_CLASS) ] */ StorageClass As Byte
    NumberOfAuxSymbols As Byte
End Type
[PackingAlignment(2)]
Public Type IMAGE_SYMBOL_EX
    ' union {
        ' BYTE    ShortName[8];
        ' struct {
            ' DWORD   Short;     // if 0, use LongName
            ' DWORD   Long;      // offset into string table
        ' } Name;
        ' DWORD   LongName[2];    // PBYTE [2]
    ' } N;
    N(7) As Byte
    Value As Long
    SectionNumber As Long
    /* [ TypeHint(IMAGE_SYM_TYPE_DERIVED) ] */ Type As Integer
    /* [ TypeHint(IMAGE_STORAGE_CLASS) ] */ StorageClass As Byte
    NumberOfAuxSymbols As Byte
End Type

[PackingAlignment(2)]
Public Type IMAGE_AUX_SYMBOL_TOKEN_DEF
    bAuxType As Byte ' IMAGE_AUX_SYMBOL_TYPE
    bReserved As Byte ' Must be 0
    SymbolTableIndex As Long
    rgbReserved(0 To 11) As Byte ' Must be 0
End Type

[PackingAlignment(2)]
Public Type IMAGE_AUX_SYMBOL
	Sym_TagIndex As Long
    Sym_Misc As Long
    Sym_FcnAry(7) As Byte
    Sym_TvIndex As Long
    File_Name(0 To (IMAGE_SIZEOF_SYMBOL - 1)) As Byte
    Section_Length As Long ' section length
    Section_NumberOfRelocations As Integer ' number of relocation entries
    Section_NumberOfLinenumbers As Integer ' number of line numbers
    Section_CheckSum As Long ' checksum for communal
    Section_Number As Integer ' section number to associate with
    Section_Selection As Byte ' communal selection type
    Section_bReserved As Byte
    Section_HighNumber As Integer ' high bits of the section number
    TokenDef As IMAGE_AUX_SYMBOL_TOKEN_DEF
    CRC_crc As Long
    CRC_rgbReserved(13) As Byte
End Type
[PackingAlignment(2)]
Public Type IMAGE_AUX_SYMBOL_EX
    Sym_WeakDefaultSymIndex As Long
    Sym_WeakSearchType As Long
    Sym_rgbReserved(11) As Byte
    File_Name(0 To (IMAGE_SIZEOF_SYMBOL - 1)) As Byte
    Section_Length As Long ' section length
    Section_NumberOfRelocations As Integer ' number of relocation entries
    Section_NumberOfLinenumbers As Integer ' number of line numbers
    Section_CheckSum As Long ' checksum for communal
    Section_Number As Integer ' section number to associate with
    Section_Selection As Byte ' communal selection type
    Section_rgbReserved(1) As Byte
    Section_HighNumber As Integer ' high bits of the section number
    TokenDef As IMAGE_AUX_SYMBOL_TOKEN_DEF
    rgbReserved(1) As Byte
    CRC_crc As Long
    CRC_rgbReserved(15) As Byte
End Type

Public Enum IMAGE_AUX_SYMBOL_TYPE
    IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF = 1
End Enum

Public Enum IMAGE_COMMUNAL_SELTYPE
    IMAGE_COMDAT_SELECT_NODUPLICATES = 1
    IMAGE_COMDAT_SELECT_ANY = 2
    IMAGE_COMDAT_SELECT_SAME_SIZE = 3
    IMAGE_COMDAT_SELECT_EXACT_MATCH = 4
    IMAGE_COMDAT_SELECT_ASSOCIATIVE = 5
    IMAGE_COMDAT_SELECT_LARGEST = 6
    IMAGE_COMDAT_SELECT_NEWEST = 7
End Enum

Public Enum IMAGE_WEAK_EXTERN
    IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY = 1
    IMAGE_WEAK_EXTERN_SEARCH_LIBRARY = 2
    IMAGE_WEAK_EXTERN_SEARCH_ALIAS = 3
    IMAGE_WEAK_EXTERN_ANTI_DEPENDENCY = 4
End Enum

Public Enum IMAGE_RELOC_TYPE_I386
    IMAGE_REL_I386_ABSOLUTE = &H0000  ' Reference is absolute, no relocation is necessary
    IMAGE_REL_I386_DIR16 = &H0001  ' Direct 16-bit reference to the symbols virtual address
    IMAGE_REL_I386_REL16 = &H0002  ' PC-relative 16-bit reference to the symbols virtual address
    IMAGE_REL_I386_DIR32 = &H0006  ' Direct 32-bit reference to the symbols virtual address
    IMAGE_REL_I386_DIR32NB = &H0007  ' Direct 32-bit reference to the symbols virtual address, base not included
    IMAGE_REL_I386_SEG12 = &H0009  ' Direct 16-bit reference to the segment-selector bits of a 32-bit virtual address
    IMAGE_REL_I386_SECTION = &H000A
    IMAGE_REL_I386_SECREL = &H000B
    IMAGE_REL_I386_TOKEN = &H000C  ' clr token
    IMAGE_REL_I386_SECREL7 = &H000D  ' 7 bit offset from base of section containing target
    IMAGE_REL_I386_REL32 = &H0014  ' PC-relative 32-bit reference to the symbols virtual address
End Enum
Public Enum IMAGE_RELOC_TYPE_MIPS
    IMAGE_REL_MIPS_ABSOLUTE = &H0000  ' Reference is absolute, no relocation is necessary
    IMAGE_REL_MIPS_REFHALF = &H0001
    IMAGE_REL_MIPS_REFWORD = &H0002
    IMAGE_REL_MIPS_JMPADDR = &H0003
    IMAGE_REL_MIPS_REFHI = &H0004
    IMAGE_REL_MIPS_REFLO = &H0005
    IMAGE_REL_MIPS_GPREL = &H0006
    IMAGE_REL_MIPS_LITERAL = &H0007
    IMAGE_REL_MIPS_SECTION = &H000A
    IMAGE_REL_MIPS_SECREL = &H000B
    IMAGE_REL_MIPS_SECRELLO = &H000C  ' Low 16-bit section relative referemce (used for >32k TLS)
    IMAGE_REL_MIPS_SECRELHI = &H000D  ' High 16-bit section relative reference (used for >32k TLS)
    IMAGE_REL_MIPS_TOKEN = &H000E  ' clr token
    IMAGE_REL_MIPS_JMPADDR16 = &H0010
    IMAGE_REL_MIPS_REFWORDNB = &H0022
    IMAGE_REL_MIPS_PAIR = &H0025
End Enum
Public Enum IMAGE_RELOC_TYPE_PPC
    IMAGE_REL_PPC_ABSOLUTE = &H0000  ' NOP
    IMAGE_REL_PPC_ADDR64 = &H0001  ' 64-bit address
    IMAGE_REL_PPC_ADDR32 = &H0002  ' 32-bit address
    IMAGE_REL_PPC_ADDR24 = &H0003  ' 26-bit address, shifted left 2 (branch absolute)
    IMAGE_REL_PPC_ADDR16 = &H0004  ' 16-bit address
    IMAGE_REL_PPC_ADDR14 = &H0005  ' 16-bit address, shifted left 2 (load doubleword)
    IMAGE_REL_PPC_REL24 = &H0006  ' 26-bit PC-relative offset, shifted left 2 (branch relative)
    IMAGE_REL_PPC_REL14 = &H0007  ' 16-bit PC-relative offset, shifted left 2 (br cond relative)
    IMAGE_REL_PPC_TOCREL16 = &H0008  ' 16-bit offset from TOC base
    IMAGE_REL_PPC_TOCREL14 = &H0009  ' 16-bit offset from TOC base, shifted left 2 (load doubleword)
    IMAGE_REL_PPC_ADDR32NB = &H000A  ' 32-bit addr w/o image base
    IMAGE_REL_PPC_SECREL = &H000B  ' va of containing section (as in an image sectionhdr)
    IMAGE_REL_PPC_SECTION = &H000C  ' sectionheader number
    IMAGE_REL_PPC_IFGLUE = &H000D  ' substitute TOC restore instruction iff symbol is glue code
    IMAGE_REL_PPC_IMGLUE = &H000E  ' symbol is glue code; virtual address is TOC restore instruction
    IMAGE_REL_PPC_SECREL16 = &H000F  ' va of containing section (limited to 16 bits)
    IMAGE_REL_PPC_REFHI = &H0010
    IMAGE_REL_PPC_REFLO = &H0011
    IMAGE_REL_PPC_PAIR = &H0012
    IMAGE_REL_PPC_SECRELLO = &H0013  ' Low 16-bit section relative reference (used for >32k TLS)
    IMAGE_REL_PPC_SECRELHI = &H0014  ' High 16-bit section relative reference (used for >32k TLS)
    IMAGE_REL_PPC_GPREL = &H0015
    IMAGE_REL_PPC_TOKEN = &H0016  ' clr token
    IMAGE_REL_PPC_TYPEMASK = &H00FF  ' mask to isolate above values in IMAGE_RELOCATION.Type
'  Flag bits in IMAGE_RELOCATION.TYPE
    IMAGE_REL_PPC_NEG = &H0100  ' subtract reloc value rather than adding it
    IMAGE_REL_PPC_BRTAKEN = &H0200  ' fix branch prediction bit to predict branch taken
    IMAGE_REL_PPC_BRNTAKEN = &H0400  ' fix branch prediction bit to predict branch not taken
    IMAGE_REL_PPC_TOCDEFN = &H0800  ' toc slot defined in file (or, data in toc)
End Enum
Public Enum IMAGE_RELOC_TYPE_SH3
    IMAGE_REL_SH3_ABSOLUTE = &H0000  ' No relocation
    IMAGE_REL_SH3_DIRECT16 = &H0001  ' 16 bit direct
    IMAGE_REL_SH3_DIRECT32 = &H0002  ' 32 bit direct
    IMAGE_REL_SH3_DIRECT8 = &H0003  ' 8 bit direct, -128..255
    IMAGE_REL_SH3_DIRECT8_WORD = &H0004  ' 8 bit direct .W (0 ext.)
    IMAGE_REL_SH3_DIRECT8_LONG = &H0005  ' 8 bit direct .L (0 ext.)
    IMAGE_REL_SH3_DIRECT4 = &H0006  ' 4 bit direct (0 ext.)
    IMAGE_REL_SH3_DIRECT4_WORD = &H0007  ' 4 bit direct .W (0 ext.)
    IMAGE_REL_SH3_DIRECT4_LONG = &H0008  ' 4 bit direct .L (0 ext.)
    IMAGE_REL_SH3_PCREL8_WORD = &H0009  ' 8 bit PC relative .W
    IMAGE_REL_SH3_PCREL8_LONG = &H000A  ' 8 bit PC relative .L
    IMAGE_REL_SH3_PCREL12_WORD = &H000B  ' 12 LSB PC relative .W
    IMAGE_REL_SH3_STARTOF_SECTION = &H000C  ' Start of EXE section
    IMAGE_REL_SH3_SIZEOF_SECTION = &H000D  ' Size of EXE section
    IMAGE_REL_SH3_SECTION = &H000E  ' Section table index
    IMAGE_REL_SH3_SECREL = &H000F  ' Offset within section
    IMAGE_REL_SH3_DIRECT32_NB = &H0010  ' 32 bit direct not based
    IMAGE_REL_SH3_GPREL4_LONG = &H0011  ' GP-relative addressing
    IMAGE_REL_SH3_TOKEN = &H0012  ' clr token
    IMAGE_REL_SHM_PCRELPT = &H0013  ' Offset from current
                                    '   instruction in longwords
                                    '   if not NOMODE, insert the
                                    '   inverse of the low bit at
                                    '   bit 32 to select PTA/PTB
    IMAGE_REL_SHM_REFLO = &H0014  ' Low bits of 32-bit address
    IMAGE_REL_SHM_REFHALF = &H0015  ' High bits of 32-bit address
    IMAGE_REL_SHM_RELLO = &H0016  ' Low bits of relative reference
    IMAGE_REL_SHM_RELHALF = &H0017  ' High bits of relative reference
    IMAGE_REL_SHM_PAIR = &H0018  ' offset operand for relocation
    IMAGE_REL_SH_NOMODE = &H8000&  ' relocation ignores section mode
End Enum
Public Enum IMAGE_RELOC_TYPE_ARM
    IMAGE_REL_ARM_ABSOLUTE = &H0000  ' No relocation required
    IMAGE_REL_ARM_ADDR32 = &H0001  ' 32 bit address
    IMAGE_REL_ARM_ADDR32NB = &H0002  ' 32 bit address w/o image base
    IMAGE_REL_ARM_BRANCH24 = &H0003  ' 24 bit offset << 2 & sign ext.
    IMAGE_REL_ARM_BRANCH11 = &H0004  ' Thumb: 2 11 bit offsets
    IMAGE_REL_ARM_TOKEN = &H0005  ' clr token
    IMAGE_REL_ARM_GPREL12 = &H0006  ' GP-relative addressing (ARM)
    IMAGE_REL_ARM_GPREL7 = &H0007  ' GP-relative addressing (Thumb)
    IMAGE_REL_ARM_BLX24 = &H0008
    IMAGE_REL_ARM_BLX11 = &H0009
    IMAGE_REL_ARM_SECTION = &H000E  ' Section table index
    IMAGE_REL_ARM_SECREL = &H000F  ' Offset within section
    IMAGE_REL_ARM_MOV32A = &H0010  ' ARM: MOVW/MOVT
    IMAGE_REL_ARM_MOV32 = &H0010  ' ARM: MOVW/MOVT (deprecated)
    IMAGE_REL_ARM_MOV32T = &H0011  ' Thumb: MOVW/MOVT
    IMAGE_REL_THUMB_MOV32 = &H0011  ' Thumb: MOVW/MOVT (deprecated)
    IMAGE_REL_ARM_BRANCH20T = &H0012  ' Thumb: 32-bit conditional B
    IMAGE_REL_THUMB_BRANCH20 = &H0012  ' Thumb: 32-bit conditional B (deprecated)
    IMAGE_REL_ARM_BRANCH24T = &H0014  ' Thumb: 32-bit B or BL
    IMAGE_REL_THUMB_BRANCH24 = &H0014  ' Thumb: 32-bit B or BL (deprecated)
    IMAGE_REL_ARM_BLX23T = &H0015  ' Thumb: BLX immediate
    IMAGE_REL_THUMB_BLX23 = &H0015  ' Thumb: BLX immediate (deprecated)
    IMAGE_REL_AM_ABSOLUTE = &H0000
    IMAGE_REL_AM_ADDR32 = &H0001
    IMAGE_REL_AM_ADDR32NB = &H0002
    IMAGE_REL_AM_CALL32 = &H0003
    IMAGE_REL_AM_FUNCINFO = &H0004
    IMAGE_REL_AM_REL32_1 = &H0005
    IMAGE_REL_AM_REL32_2 = &H0006
    IMAGE_REL_AM_SECREL = &H0007
    IMAGE_REL_AM_SECTION = &H0008
    IMAGE_REL_AM_TOKEN = &H0009
End Enum
Public Enum IMAGE_RELOC_TYPE_ARM64
    IMAGE_REL_ARM64_ABSOLUTE = &H0000  ' No relocation required
    IMAGE_REL_ARM64_ADDR32 = &H0001  ' 32 bit address. Review! do we need it?
    IMAGE_REL_ARM64_ADDR32NB = &H0002  ' 32 bit address w/o image base (RVA: for Data/PData/XData)
    IMAGE_REL_ARM64_BRANCH26 = &H0003  ' 26 bit offset << 2 & sign ext. for B & BL
    IMAGE_REL_ARM64_PAGEBASE_REL21 = &H0004  ' ADRP
    IMAGE_REL_ARM64_REL21 = &H0005  ' ADR
    IMAGE_REL_ARM64_PAGEOFFSET_12A = &H0006  ' ADD/ADDS (immediate) with zero shift, for page offset
    IMAGE_REL_ARM64_PAGEOFFSET_12L = &H0007  ' LDR (indexed, unsigned immediate), for page offset
    IMAGE_REL_ARM64_SECREL = &H0008  ' Offset within section
    IMAGE_REL_ARM64_SECREL_LOW12A = &H0009  ' ADD/ADDS (immediate) with zero shift, for bit 0:11 of section offset
    IMAGE_REL_ARM64_SECREL_HIGH12A = &H000A  ' ADD/ADDS (immediate) with zero shift, for bit 12:23 of section offset
    IMAGE_REL_ARM64_SECREL_LOW12L = &H000B  ' LDR (indexed, unsigned immediate), for bit 0:11 of section offset
    IMAGE_REL_ARM64_TOKEN = &H000C
    IMAGE_REL_ARM64_SECTION = &H000D  ' Section table index
    IMAGE_REL_ARM64_ADDR64 = &H000E  ' 64 bit address
    IMAGE_REL_ARM64_BRANCH19 = &H000F  ' 19 bit offset << 2 & sign ext. for conditional B
End Enum
Public Enum IMAGE_RELOC_TYPE_AMD64
    IMAGE_REL_AMD64_ABSOLUTE = &H0000  ' Reference is absolute, no relocation is necessary
    IMAGE_REL_AMD64_ADDR64 = &H0001  ' 64-bit address (VA).
    IMAGE_REL_AMD64_ADDR32 = &H0002  ' 32-bit address (VA).
    IMAGE_REL_AMD64_ADDR32NB = &H0003  ' 32-bit address w/o image base (RVA).
    IMAGE_REL_AMD64_REL32 = &H0004  ' 32-bit relative address from byte following reloc
    IMAGE_REL_AMD64_REL32_1 = &H0005  ' 32-bit relative address from byte distance 1 from reloc
    IMAGE_REL_AMD64_REL32_2 = &H0006  ' 32-bit relative address from byte distance 2 from reloc
    IMAGE_REL_AMD64_REL32_3 = &H0007  ' 32-bit relative address from byte distance 3 from reloc
    IMAGE_REL_AMD64_REL32_4 = &H0008  ' 32-bit relative address from byte distance 4 from reloc
    IMAGE_REL_AMD64_REL32_5 = &H0009  ' 32-bit relative address from byte distance 5 from reloc
    IMAGE_REL_AMD64_SECTION = &H000A  ' Section index
    IMAGE_REL_AMD64_SECREL = &H000B  ' 32 bit offset from base of section containing target
    IMAGE_REL_AMD64_SECREL7 = &H000C  ' 7 bit unsigned offset from base of section containing target
    IMAGE_REL_AMD64_TOKEN = &H000D  ' 32 bit metadata token
    IMAGE_REL_AMD64_SREL32 = &H000E  ' 32 bit signed span-dependent value emitted into object
    IMAGE_REL_AMD64_PAIR = &H000F
    IMAGE_REL_AMD64_SSPAN32 = &H0010  ' 32 bit signed span-dependent value applied at link time
    IMAGE_REL_AMD64_EHANDLER = &H0011
    IMAGE_REL_AMD64_IMPORT_BR = &H0012  ' Indirect branch to an import
    IMAGE_REL_AMD64_IMPORT_CALL = &H0013  ' Indirect call to an import
    IMAGE_REL_AMD64_CFG_BR = &H0014  ' Indirect branch to a CFG check
    IMAGE_REL_AMD64_CFG_BR_REX = &H0015  ' Indirect branch to a CFG check, with REX.W prefix
    IMAGE_REL_AMD64_CFG_CALL = &H0016  ' Indirect call to a CFG check
    IMAGE_REL_AMD64_INDIR_BR = &H0017  ' Indirect branch to a target in RAX (no CFG)
    IMAGE_REL_AMD64_INDIR_BR_REX = &H0018  ' Indirect branch to a target in RAX, with REX.W prefix (no CFG)
    IMAGE_REL_AMD64_INDIR_CALL = &H0019  ' Indirect call to a target in RAX (no CFG)
    IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_FIRST = &H0020  ' Indirect branch for a switch table using Reg 0 (RAX)
    IMAGE_REL_AMD64_INDIR_BR_SWITCHTABLE_LAST = &H002F  ' Indirect branch for a switch table using Reg 15 (R15)
End Enum
Public Enum IMAGE_RELOC_TYPE_IA64
    IMAGE_REL_IA64_ABSOLUTE = &H0000
    IMAGE_REL_IA64_IMM14 = &H0001
    IMAGE_REL_IA64_IMM22 = &H0002
    IMAGE_REL_IA64_IMM64 = &H0003
    IMAGE_REL_IA64_DIR32 = &H0004
    IMAGE_REL_IA64_DIR64 = &H0005
    IMAGE_REL_IA64_PCREL21B = &H0006
    IMAGE_REL_IA64_PCREL21M = &H0007
    IMAGE_REL_IA64_PCREL21F = &H0008
    IMAGE_REL_IA64_GPREL22 = &H0009
    IMAGE_REL_IA64_LTOFF22 = &H000A
    IMAGE_REL_IA64_SECTION = &H000B
    IMAGE_REL_IA64_SECREL22 = &H000C
    IMAGE_REL_IA64_SECREL64I = &H000D
    IMAGE_REL_IA64_SECREL32 = &H000E
    IMAGE_REL_IA64_DIR32NB = &H0010
    IMAGE_REL_IA64_SREL14 = &H0011
    IMAGE_REL_IA64_SREL22 = &H0012
    IMAGE_REL_IA64_SREL32 = &H0013
    IMAGE_REL_IA64_UREL32 = &H0014
    IMAGE_REL_IA64_PCREL60X = &H0015  ' This is always a BRL and never converted
    IMAGE_REL_IA64_PCREL60B = &H0016  ' If possible, convert to MBB bundle with NOP.B in slot 1
    IMAGE_REL_IA64_PCREL60F = &H0017  ' If possible, convert to MFB bundle with NOP.F in slot 1
    IMAGE_REL_IA64_PCREL60I = &H0018  ' If possible, convert to MIB bundle with NOP.I in slot 1
    IMAGE_REL_IA64_PCREL60M = &H0019  ' If possible, convert to MMB bundle with NOP.M in slot 1
    IMAGE_REL_IA64_IMMGPREL64 = &H001A
    IMAGE_REL_IA64_TOKEN = &H001B  ' clr token
    IMAGE_REL_IA64_GPREL32 = &H001C
    IMAGE_REL_IA64_ADDEND = &H001F
End Enum
Public Enum IMAGE_RELOC_TYPE_CEF
    IMAGE_REL_CEF_ABSOLUTE = &H0000  ' Reference is absolute, no relocation is necessary
    IMAGE_REL_CEF_ADDR32 = &H0001  ' 32-bit address (VA).
    IMAGE_REL_CEF_ADDR64 = &H0002  ' 64-bit address (VA).
    IMAGE_REL_CEF_ADDR32NB = &H0003  ' 32-bit address w/o image base (RVA).
    IMAGE_REL_CEF_SECTION = &H0004  ' Section index
    IMAGE_REL_CEF_SECREL = &H0005  ' 32 bit offset from base of section containing target
    IMAGE_REL_CEF_TOKEN = &H0006  ' 32 bit metadata token
End Enum
Public Enum IMAGE_RELOC_TYPE_CEE
    IMAGE_REL_CEE_ABSOLUTE = &H0000  ' Reference is absolute, no relocation is necessary
    IMAGE_REL_CEE_ADDR32 = &H0001  ' 32-bit address (VA).
    IMAGE_REL_CEE_ADDR64 = &H0002  ' 64-bit address (VA).
    IMAGE_REL_CEE_ADDR32NB = &H0003  ' 32-bit address w/o image base (RVA).
    IMAGE_REL_CEE_SECTION = &H0004  ' Section index
    IMAGE_REL_CEE_SECREL = &H0005  ' 32 bit offset from base of section containing target
    IMAGE_REL_CEE_TOKEN = &H0006  ' 32 bit metadata token
End Enum
Public Enum IMAGE_RELOC_TYPE_M32R
    IMAGE_REL_M32R_ABSOLUTE = &H0000  ' No relocation required
    IMAGE_REL_M32R_ADDR32 = &H0001  ' 32 bit address
    IMAGE_REL_M32R_ADDR32NB = &H0002  ' 32 bit address w/o image base
    IMAGE_REL_M32R_ADDR24 = &H0003  ' 24 bit address
    IMAGE_REL_M32R_GPREL16 = &H0004  ' GP relative addressing
    IMAGE_REL_M32R_PCREL24 = &H0005  ' 24 bit offset << 2 & sign ext.
    IMAGE_REL_M32R_PCREL16 = &H0006  ' 16 bit offset << 2 & sign ext.
    IMAGE_REL_M32R_PCREL8 = &H0007  ' 8 bit offset << 2 & sign ext.
    IMAGE_REL_M32R_REFHALF = &H0008  ' 16 MSBs
    IMAGE_REL_M32R_REFHI = &H0009  ' 16 MSBs; adj for LSB sign ext.
    IMAGE_REL_M32R_REFLO = &H000A  ' 16 LSBs
    IMAGE_REL_M32R_PAIR = &H000B  ' Link HI and LO
    IMAGE_REL_M32R_SECTION = &H000C  ' Section table index
    IMAGE_REL_M32R_SECREL32 = &H000D  ' 32 bit section relative reference
    IMAGE_REL_M32R_TOKEN = &H000E  ' clr token
End Enum
Public Enum IMAGE_RELOC_TYPE_EBC
    IMAGE_REL_EBC_ABSOLUTE = &H0000  ' No relocation required
    IMAGE_REL_EBC_ADDR32NB = &H0001  ' 32 bit address w/o image base
    IMAGE_REL_EBC_REL32 = &H0002  ' 32-bit relative address from byte following reloc
    IMAGE_REL_EBC_SECTION = &H0003  ' Section table index
    IMAGE_REL_EBC_SECREL = &H0004  ' Offset within section
End Enum

Public Type IMAGE_RUNTIME_FUNCTION_ENTRY
    BeginAddress As Long
    EndAddress As Long
    UnwindInfoAddress As Long
End Type
'Alias RUNTIME_FUNCTION As IMAGE_RUNTIME_FUNCTION_ENTRY
Public Type RUNTIME_FUNCTION
    BeginAddress As Long
    EndAddress As Long
    UnwindInfoAddress As Long
End Type

Public Type UNWIND_HISTORY_TABLE_ENTRY
    ImageBase As LongPtr
    FunctionEntry As LongPtr 'PRUNTIME_FUNCTION
End Type

Public Type IMAGE_DYNAMIC_RELOCATION_TABLE
    Version As Long
    Size As Long
    '  IMAGE_DYNAMIC_RELOCATION DynamicRelocations[0];
End Type

Public Type UNWIND_HISTORY_TABLE
    Count As Long
    LocalHint As Byte
    GlobalHint As Byte
    Search As Byte
    Once As Byte
    LowAddress As LongPtr
    HighAddress As LongPtr
    Entry(0 To (UNWIND_HISTORY_TABLE_SIZE - 1)) As UNWIND_HISTORY_TABLE_ENTRY
End Type

[PackingAlignment(1)]
Public Type IMAGE_DYNAMIC_RELOCATION32
    Symbol As Long
    BaseRelocSize As Long
    '  IMAGE_BASE_RELOCATION BaseRelocations[0];
End Type
[PackingAlignment(1)]
Public Type IMAGE_DYNAMIC_RELOCATION64
    Symbol As LongLong
    BaseRelocSize As Long
    '  IMAGE_BASE_RELOCATION BaseRelocations[0];
End Type
#If Win64 Then
	'Alias IMAGE_DYNAMIC_RELOCATION As IMAGE_DYNAMIC_RELOCATION64
    [PackingAlignment(1)]
    Public Type IMAGE_DYNAMIC_RELOCATION
        Symbol As LongLong
        BaseRelocSize As Long
        '  IMAGE_BASE_RELOCATION BaseRelocations[0];
    End Type
#Else
    'Alias IMAGE_DYNAMIC_RELOCATION As IMAGE_DYNAMIC_RELOCATION32
    [PackingAlignment(1)]
    Public Type IMAGE_DYNAMIC_RELOCATION
        Symbol As Long
        BaseRelocSize As Long
        '  IMAGE_BASE_RELOCATION BaseRelocations[0];
    End Type
#End If

[PackingAlignment(1)]
Public Type IMAGE_DYNAMIC_RELOCATION32_V2
    HeaderSize As Long
    FixupInfoSize As Long
    Symbol As Long
    SymbolGroup As Long
    Flags As Long
    ' ...     variable length header fields
    ' BYTE    FixupInfo[FixupInfoSize]
End Type
[PackingAlignment(1)]
Public Type IMAGE_DYNAMIC_RELOCATION64_V2
    HeaderSize As Long
    FixupInfoSize As Long
    Symbol As LongLong
    SymbolGroup As Long
    Flags As Long
    ' ...     variable length header fields
    ' BYTE    FixupInfo[FixupInfoSize]
End Type

#If Win64 Then
[PackingAlignment(1)]
Public Type IMAGE_DYNAMIC_RELOCATION_V2
    HeaderSize As Long
    FixupInfoSize As Long
    Symbol As LongLong
    SymbolGroup As Long
    Flags As Long
    ' ...     variable length header fields
    ' BYTE    FixupInfo[FixupInfoSize]
End Type
#Else
[PackingAlignment(1)]
Public Type IMAGE_DYNAMIC_RELOCATION_V2
    HeaderSize As Long
    FixupInfoSize As Long
    Symbol As Long
    SymbolGroup As Long
    Flags As Long
    ' ...     variable length header fields
    ' BYTE    FixupInfo[FixupInfoSize]
End Type
#End If


[PackingAlignment(2)]
Public Type IMAGE_RELOCATION
    ' union {
        ' DWORD   VirtualAddress;
        ' DWORD   RelocCount;             // Set to the real count when IMAGE_SCN_LNK_NRELOC_OVFL is set
    ' } DUMMYUNIONNAME;
    VirtAddrOrRelocCt As Long
    SymbolTableIndex As Long
    nType As Integer
End Type

[PackingAlignment(2)]
Public Type IMAGE_LINENUMBER
    '    union {
    '        DWORD   SymbolTableIndex;               // Symbol table index of function name if Linenumber is 0.
    '        DWORD   VirtualAddress;                 // Virtual address of line number.
    '   } Type;
    nType As Long
    Linenumber As Integer ' Line number.
End Type


Public Type IMAGE_LOAD_CONFIG_CODE_INTEGRITY
    Flags As Integer ' Flags to indicate if CI information is available, etc.
    Catalog As Integer ' 0xFFFF means not available
    CatalogOffset As Long
    Reserved As Long ' Additional bitmask to be defined later
End Type
Public Enum ImageLoadConfigGuardFlags
    IMAGE_GUARD_CF_INSTRUMENTED = &H00000100  ' Module performs control flow integrity checks using system-supplied support
    IMAGE_GUARD_CFW_INSTRUMENTED = &H00000200  ' Module performs control flow and write integrity checks
    IMAGE_GUARD_CF_FUNCTION_TABLE_PRESENT = &H00000400  ' Module contains valid control flow target metadata
    IMAGE_GUARD_SECURITY_COOKIE_UNUSED = &H00000800  ' Module does not make use of the /GS security cookie
    IMAGE_GUARD_PROTECT_DELAYLOAD_IAT = &H00001000  ' Module supports read only delay load IAT
    IMAGE_GUARD_DELAYLOAD_IAT_IN_ITS_OWN_SECTION = &H00002000  ' Delayload import table in its own .didat section (with nothing else in it) that can be freely reprotected
    IMAGE_GUARD_CF_EXPORT_SUPPRESSION_INFO_PRESENT = &H00004000  ' Module contains suppressed export information. This also infers that the address taken
'  taken IAT table is also present in the load config.
    IMAGE_GUARD_CF_ENABLE_EXPORT_SUPPRESSION = &H00008000&  ' Module enables suppression of exports
    IMAGE_GUARD_CF_LONGJUMP_TABLE_PRESENT = &H00010000  ' Module contains longjmp target information
    IMAGE_GUARD_RF_INSTRUMENTED = &H00020000  ' Module contains return flow instrumentation and metadata
    IMAGE_GUARD_RF_ENABLE = &H00040000  ' Module requests that the OS enable return flow protection
    IMAGE_GUARD_RF_STRICT = &H00080000  ' Module requests that the OS enable return flow protection in strict mode
    IMAGE_GUARD_RETPOLINE_PRESENT = &H00100000  ' Module was built with retpoline support
'  DO_NOT_USE                                          0x00200000 // Was EHCont flag on VB (20H1)
    IMAGE_GUARD_EH_CONTINUATION_TABLE_PRESENT = &H00400000  ' Module contains EH continuation target information
    IMAGE_GUARD_XFG_ENABLED = &H00800000  ' Module was built with xfg
    IMAGE_GUARD_CASTGUARD_PRESENT = &H01000000  ' Module has CastGuard instrumentation present
    IMAGE_GUARD_MEMCPY_PRESENT = &H02000000  ' Module has Guarded Memcpy instrumentation present
    IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_MASK = &HF0000000  ' Stride of Guard CF function table encoded in these bits (additional count of bytes per element)
    IMAGE_GUARD_CF_FUNCTION_TABLE_SIZE_SHIFT = 28  ' Shift to right-justify Guard CF function table stride
End Enum
[Description("⚠️ **WARNING:** CHECK SIZE BEFORE COPYING: This UDT has members appended in most Windows versions. Only copy the available size.")]
Public Type IMAGE_LOAD_CONFIG_DIRECTORY64
    Size As Long
    TimeDateStamp As Long
    MajorVersion As Integer
    MinorVersion As Integer
    GlobalFlagsClear As Long
    GlobalFlagsSet As Long
    CriticalSectionDefaultTimeout As Long
    DeCommitFreeBlockThreshold As LongLong
    DeCommitTotalFreeThreshold As LongLong
    LockPrefixTable As LongLong ' VA
    MaximumAllocationSize As LongLong
    VirtualMemoryThreshold As LongLong
    ProcessAffinityMask As LongLong
    ProcessHeapFlags As Long
    CSDVersion As Integer
    DependentLoadFlags As Integer
    EditList As LongLong ' VA
    SecurityCookie As LongLong ' VA
    SEHandlerTable As LongLong ' VA
    SEHandlerCount As LongLong
    'Fields available in v8.1+ of the Windows SDK.
    GuardCFCheckFunctionPointer As LongLong ' VA
    GuardCFDispatchFunctionPointer As LongLong ' VA
    GuardCFFunctionTable As LongLong ' VA
    GuardCFFunctionCount As LongLong
    GuardFlags As ImageLoadConfigGuardFlags
    'Fields available in v10.0.10586.0+ of the Windows SDK.
    CodeIntegrity As IMAGE_LOAD_CONFIG_CODE_INTEGRITY
    GuardAddressTakenIatEntryTable As LongLong ' VA
    GuardAddressTakenIatEntryCount As LongLong
    GuardLongJumpTargetTable As LongLong ' VA
    GuardLongJumpTargetCount As LongLong
    DynamicValueRelocTable As LongLong ' VA
    CHPEMetadataPointer As LongLong ' VA
    'Fields available in the v10.0.15063.468+ of the SDK.
    GuardRFFailureRoutine As LongLong ' VA
    GuardRFFailureRoutineFunctionPointer As LongLong ' VA
    DynamicValueRelocTableOffset As Long
    DynamicValueRelocTableSection As Integer
    Reserved2 As Integer
    'Windows 11
    GuardRFVerifyStackPointerFunctionPointer As LongLong ' VA
    HotPatchTableOffset As Long
    Reserved3 As Long
    EnclaveConfigurationPointer As LongLong ' VA
    VolatileMetadataPointer As LongLong ' VA
    GuardEHContinuationTable As LongLong ' VA
    GuardEHContinuationCount As LongLong
    GuardXFGCheckFunctionPointer As LongLong ' VA
    GuardXFGDispatchFunctionPointer As LongLong ' VA
    GuardXFGTableDispatchFunctionPointer As LongLong ' VA
    CastGuardOsDeterminedFailureMode As LongLong ' VA
    GuardMemcpyFunctionPointer As LongLong ' VA
End Type
[Description("⚠️ **WARNING:** CHECK SIZE BEFORE COPYING: This UDT has members appended in most Windows versions. Only copy the available size.")]
Public Type IMAGE_LOAD_CONFIG_DIRECTORY32
    Size As Long
    TimeDateStamp As Long
    MajorVersion As Integer
    MinorVersion As Integer
    GlobalFlagsClear As Long
    GlobalFlagsSet As Long
    CriticalSectionDefaultTimeout As Long
    DeCommitFreeBlockThreshold As Long
    DeCommitTotalFreeThreshold As Long
    LockPrefixTable As Long ' VA
    MaximumAllocationSize As Long
    VirtualMemoryThreshold As Long
    ProcessAffinityMask As Long
    ProcessHeapFlags As Long
    CSDVersion As Integer
    DependentLoadFlags As Integer
    EditList As Long ' VA
    SecurityCookie As Long ' VA
    SEHandlerTable As Long ' VA
    SEHandlerCount As Long
    'Fields available in v8.1+ of the Windows SDK.
    GuardCFCheckFunctionPointer As Long ' VA
    GuardCFDispatchFunctionPointer As Long ' VA
    GuardCFFunctionTable As Long ' VA
    GuardCFFunctionCount As Long
    GuardFlags As ImageLoadConfigGuardFlags
    'Fields available in v10.0.10586.0+ of the Windows SDK.
    CodeIntegrity As IMAGE_LOAD_CONFIG_CODE_INTEGRITY
    GuardAddressTakenIatEntryTable As Long ' VA
    GuardAddressTakenIatEntryCount As Long
    GuardLongJumpTargetTable As Long ' VA
    GuardLongJumpTargetCount As Long
    DynamicValueRelocTable As Long ' VA
    CHPEMetadataPointer As Long ' VA
    'Fields available in the v10.0.15063.468+ of the SDK.
    GuardRFFailureRoutine As Long ' VA
    GuardRFFailureRoutineFunctionPointer As Long ' VA
    DynamicValueRelocTableOffset As Long
    DynamicValueRelocTableSection As Integer
    Reserved2 As Integer
    'Windows 11
    GuardRFVerifyStackPointerFunctionPointer As Long ' VA
    HotPatchTableOffset As Long
    Reserved3 As Long
    EnclaveConfigurationPointer As Long ' VA
    VolatileMetadataPointer As Long ' VA
    GuardEHContinuationTable As Long ' VA
    GuardEHContinuationCount As Long
    GuardXFGCheckFunctionPointer As Long ' VA
    GuardXFGDispatchFunctionPointer As Long ' VA
    GuardXFGTableDispatchFunctionPointer As Long ' VA
    CastGuardOsDeterminedFailureMode As Long ' VA
    GuardMemcpyFunctionPointer As Long ' VA
End Type
[Description("⚠️ **WARNING:** CHECK SIZE BEFORE COPYING: This UDT has members appended in most Windows versions. Only copy the available size.")]
Public Type IMAGE_LOAD_CONFIG_DIRECTORY
    Size As Long
    TimeDateStamp As Long
    MajorVersion As Integer
    MinorVersion As Integer
    GlobalFlagsClear As Long
    GlobalFlagsSet As Long
    CriticalSectionDefaultTimeout As Long
    DeCommitFreeBlockThreshold As LongPtr
    DeCommitTotalFreeThreshold As LongPtr
    LockPrefixTable As LongPtr ' VA
    MaximumAllocationSize As LongPtr
    VirtualMemoryThreshold As LongPtr
    ProcessAffinityMask As LongPtr
    ProcessHeapFlags As Long
    CSDVersion As Integer
    DependentLoadFlags As Integer
    EditList As LongPtr ' VA
    SecurityCookie As LongPtr ' VA
    SEHandlerTable As LongPtr ' VA
    SEHandlerCount As LongPtr
    'Fields available in v8.1+ of the Windows SDK.
    GuardCFCheckFunctionPointer As LongPtr ' VA
    GuardCFDispatchFunctionPointer As LongPtr ' VA
    GuardCFFunctionTable As LongPtr ' VA
    GuardCFFunctionCount As LongPtr
    GuardFlags As ImageLoadConfigGuardFlags
    'Fields available in v10.0.10586.0+ of the Windows SDK.
    CodeIntegrity As IMAGE_LOAD_CONFIG_CODE_INTEGRITY
    GuardAddressTakenIatEntryTable As LongPtr ' VA
    GuardAddressTakenIatEntryCount As LongPtr
    GuardLongJumpTargetTable As LongPtr ' VA
    GuardLongJumpTargetCount As LongPtr
    DynamicValueRelocTable As LongPtr ' VA
    CHPEMetadataPointer As LongPtr ' VA
    'Fields available in the v10.0.15063.468+ of the SDK.
    GuardRFFailureRoutine As LongPtr ' VA
    GuardRFFailureRoutineFunctionPointer As LongPtr ' VA
    DynamicValueRelocTableOffset As Long
    DynamicValueRelocTableSection As Integer
    Reserved2 As Integer
    'Windows 11
    GuardRFVerifyStackPointerFunctionPointer As LongPtr ' VA
    HotPatchTableOffset As Long
    Reserved3 As Long
    EnclaveConfigurationPointer As LongPtr ' VA
    VolatileMetadataPointer As LongPtr ' VA
    GuardEHContinuationTable As LongPtr ' VA
    GuardEHContinuationCount As LongPtr
    GuardXFGCheckFunctionPointer As LongPtr ' VA
    GuardXFGDispatchFunctionPointer As LongPtr ' VA
    GuardXFGTableDispatchFunctionPointer As LongPtr ' VA
    CastGuardOsDeterminedFailureMode As LongPtr ' VA
    GuardMemcpyFunctionPointer As LongPtr ' VA
End Type

Public Enum IMAGE_DEBUG_TYPE
    IMAGE_DEBUG_TYPE_UNKNOWN = 0
    IMAGE_DEBUG_TYPE_COFF = 1
    IMAGE_DEBUG_TYPE_CODEVIEW = 2 '_PDB_INFO
    IMAGE_DEBUG_TYPE_FPO = 3
    IMAGE_DEBUG_TYPE_MISC = 4
    IMAGE_DEBUG_TYPE_EXCEPTION = 5
    IMAGE_DEBUG_TYPE_FIXUP = 6
    IMAGE_DEBUG_TYPE_OMAP_TO_SRC = 7
    IMAGE_DEBUG_TYPE_OMAP_FROM_SRC = 8
    IMAGE_DEBUG_TYPE_BORLAND = 9
    IMAGE_DEBUG_TYPE_RESERVED10 = 10
    IMAGE_DEBUG_TYPE_BBT = IMAGE_DEBUG_TYPE_RESERVED10
    IMAGE_DEBUG_TYPE_CLSID = 11
    IMAGE_DEBUG_TYPE_VC_FEATURE = 12
    IMAGE_DEBUG_TYPE_POGO = 13
    IMAGE_DEBUG_TYPE_ILTCG = 14
    IMAGE_DEBUG_TYPE_MPX = 15
    IMAGE_DEBUG_TYPE_REPRO = 16
    IMAGE_DEBUG_TYPE_SPGO = 18
    IMAGE_DEBUG_TYPE_EX_DLLCHARACTERISTICS = 20
End Enum
Public Type IMAGE_DEBUG_DIRECTORY
    Characteristics As Long
    TimeDateStamp As Long
    MajorVersion As Integer
    MinorVersion As Integer
    Type As IMAGE_DEBUG_TYPE
    SizeOfData As Long
    AddressOfRawData As Long
    PointerToRawData As Long
End Type
Public Enum IMAGE_DEBUG_EX_CH
    IMAGE_DLLCHARACTERISTICS_EX_CET_COMPAT = &H01
    IMAGE_DLLCHARACTERISTICS_EX_CET_COMPAT_STRICT_MODE = &H02
    IMAGE_DLLCHARACTERISTICS_EX_CET_SET_CONTEXT_IP_VALIDATION_RELAXED_MODE = &H04
    IMAGE_DLLCHARACTERISTICS_EX_CET_DYNAMIC_APIS_ALLOW_IN_PROC = &H08
    IMAGE_DLLCHARACTERISTICS_EX_CET_RESERVED_1 = &H10  ' Reserved for CET policy *downgrade* only!
    IMAGE_DLLCHARACTERISTICS_EX_CET_RESERVED_2 = &H20  ' Reserved for CET policy *downgrade* only!
End Enum

Public Type IMAGE_COFF_SYMBOLS_HEADER
    NumberOfSymbols As Long
    LvaToFirstSymbol As Long
    NumberOfLinenumbers As Long
    LvaToFirstLinenumber As Long
    RvaToFirstByteOfCode As Long
    RvaToLastByteOfCode As Long
    RvaToFirstByteOfData As Long
    RvaToLastByteOfData As Long
End Type

[Description("PdbFileName is a null-terminated ANSI string for which you don't know the length beforehand. Read until null char.")]
Public Type _PDB_INFO
    CvSignature As Long
    Signature As UUID
    Age As Long
    PdbFileName As Byte
End Type

Public Enum FPO_FRAME
    FRAME_FPO = 0
    FRAME_TRAP = 1
    FRAME_TSS = 2
    FRAME_NONFPO = 3
End Enum
Public Type FPO_DATA
    ulOffStart As Long ' offset 1st byte of function code
    cbProcSize As Long ' # bytes in function
    cdwLocals As Long ' # bytes in locals/4
    cdwParams As Integer ' # bytes in params/4
    [Description("Bitfield. See comments in definition.")] Flags As Integer
    'WORD        cbProlog : 8;           // # bytes in prolog
    'WORD        cbRegs   : 3;           // # regs saved
    'WORD        fHasSEH  : 1;           // TRUE if SEH in func
    'WORD        fUseBP   : 1;           // TRUE if EBP has been allocated
    'WORD        reserved : 1;           // reserved for future use
    'WORD        cbFrame  : 2;           // frame type
End Type
Public Const SIZEOF_RFPO_DATA = 16

Public Type IMAGE_DEBUG_MISC
    DataType As Long ' type of misc data, see defines
    Length As Long ' total length of record, rounded to four
    ' byte multiple.
    Unicode As Byte ' TRUE if data is unicode string
    Reserved(0 To 2) As Byte
    Data(0 To 0) As Byte ' Actual data
End Type

Public Const IMAGE_POLICY_METADATA_VERSION  = 1
Public Const IMAGE_POLICY_SECTION_NAME  = ".tPolicy"
Public Const IMAGE_POLICY_METADATA_NAME  = "__ImagePolicyMetadata"

Public Enum IMAGE_POLICY_ENTRY_TYPE
    ImagePolicyEntryTypeNone = 0
    ImagePolicyEntryTypeBool
    ImagePolicyEntryTypeInt8
    ImagePolicyEntryTypeUInt8
    ImagePolicyEntryTypeInt16
    ImagePolicyEntryTypeUInt16
    ImagePolicyEntryTypeInt32
    ImagePolicyEntryTypeUInt32
    ImagePolicyEntryTypeInt64
    ImagePolicyEntryTypeUInt64
    ImagePolicyEntryTypeAnsiString
    ImagePolicyEntryTypeUnicodeString
    ImagePolicyEntryTypeOverride
    ImagePolicyEntryTypeMaximum
End Enum
Public Enum IMAGE_POLICY_ID
    ImagePolicyIdNone = 0
    ImagePolicyIdEtw
    ImagePolicyIdDebug
    ImagePolicyIdCrashDump
    ImagePolicyIdCrashDumpKey
    ImagePolicyIdCrashDumpKeyGuid
    ImagePolicyIdParentSd
    ImagePolicyIdParentSdRev
    ImagePolicyIdSvn
    ImagePolicyIdDeviceId
    ImagePolicyIdCapability
    ImagePolicyIdScenarioId
    ImagePolicyIdMaximum
End Enum

Public Type IMAGE_POLICY_ENTRY
    Type As IMAGE_POLICY_ENTRY_TYPE
    PolicyId As IMAGE_POLICY_ID
' union {
    ' const VOID* None;
    ' BOOLEAN BoolValue;
    ' INT8 Int8Value;
    ' UINT8 UInt8Value;
    ' INT16 Int16Value;
    ' UINT16 UInt16Value;
    ' INT32 Int32Value;
    ' UINT32 UInt32Value;
    ' INT64 Int64Value;
    ' UINT64 UInt64Value;
    ' PCSTR AnsiStringValue;
    ' PCWSTR UnicodeStringValue;
' } u;    
    u As LongLong
End Type
Public Type IMAGE_POLICY_METADATA
    Version As Byte
    Reserved0(0 To 6) As Byte
    ApplicationId As LongLong
    Policies(ImagePolicyIdMaximum - 1) As IMAGE_POLICY_ENTRY
End Type


Public Enum RTL_FAST_FAIL
    FAST_FAIL_LEGACY_GS_VIOLATION = 0
    FAST_FAIL_VTGUARD_CHECK_FAILURE = 1
    FAST_FAIL_STACK_COOKIE_CHECK_FAILURE = 2
    FAST_FAIL_CORRUPT_LIST_ENTRY = 3
    FAST_FAIL_INCORRECT_STACK = 4
    FAST_FAIL_INVALID_ARG = 5
    FAST_FAIL_GS_COOKIE_INIT = 6
    FAST_FAIL_FATAL_APP_EXIT = 7
    FAST_FAIL_RANGE_CHECK_FAILURE = 8
    FAST_FAIL_UNSAFE_REGISTRY_ACCESS = 9
    FAST_FAIL_GUARD_ICALL_CHECK_FAILURE = 10
    FAST_FAIL_GUARD_WRITE_CHECK_FAILURE = 11
    FAST_FAIL_INVALID_FIBER_SWITCH = 12
    FAST_FAIL_INVALID_SET_OF_CONTEXT = 13
    FAST_FAIL_INVALID_REFERENCE_COUNT = 14
    FAST_FAIL_INVALID_JUMP_BUFFER = 18
    FAST_FAIL_MRDATA_MODIFIED = 19
    FAST_FAIL_CERTIFICATION_FAILURE = 20
    FAST_FAIL_INVALID_EXCEPTION_CHAIN = 21
    FAST_FAIL_CRYPTO_LIBRARY = 22
    FAST_FAIL_INVALID_CALL_IN_DLL_CALLOUT = 23
    FAST_FAIL_INVALID_IMAGE_BASE = 24
    FAST_FAIL_DLOAD_PROTECTION_FAILURE = 25
    FAST_FAIL_UNSAFE_EXTENSION_CALL = 26
    FAST_FAIL_DEPRECATED_SERVICE_INVOKED = 27
    FAST_FAIL_INVALID_BUFFER_ACCESS = 28
    FAST_FAIL_INVALID_BALANCED_TREE = 29
    FAST_FAIL_INVALID_NEXT_THREAD = 30
    FAST_FAIL_GUARD_ICALL_CHECK_SUPPRESSED = 31  ' Telemetry, nonfatal
    FAST_FAIL_APCS_DISABLED = 32
    FAST_FAIL_INVALID_IDLE_STATE = 33
    FAST_FAIL_MRDATA_PROTECTION_FAILURE = 34
    FAST_FAIL_UNEXPECTED_HEAP_EXCEPTION = 35
    FAST_FAIL_INVALID_LOCK_STATE = 36
    FAST_FAIL_GUARD_JUMPTABLE = 37  ' Known to compiler, must retain value 37
    FAST_FAIL_INVALID_LONGJUMP_TARGET = 38
    FAST_FAIL_INVALID_DISPATCH_CONTEXT = 39
    FAST_FAIL_INVALID_THREAD = 40
    FAST_FAIL_INVALID_SYSCALL_NUMBER = 41  ' Telemetry, nonfatal
    FAST_FAIL_INVALID_FILE_OPERATION = 42  ' Telemetry, nonfatal
    FAST_FAIL_LPAC_ACCESS_DENIED = 43  ' Telemetry, nonfatal
    FAST_FAIL_GUARD_SS_FAILURE = 44
    FAST_FAIL_LOADER_CONTINUITY_FAILURE = 45  ' Telemetry, nonfatal
    FAST_FAIL_GUARD_EXPORT_SUPPRESSION_FAILURE = 46
    FAST_FAIL_INVALID_CONTROL_STACK = 47
    FAST_FAIL_SET_CONTEXT_DENIED = 48
    FAST_FAIL_INVALID_IAT = 49
    FAST_FAIL_HEAP_METADATA_CORRUPTION = 50
    FAST_FAIL_PAYLOAD_RESTRICTION_VIOLATION = 51
    FAST_FAIL_LOW_LABEL_ACCESS_DENIED = 52  ' Telemetry, nonfatal
    FAST_FAIL_ENCLAVE_CALL_FAILURE = 53
    FAST_FAIL_UNHANDLED_LSS_EXCEPTON = 54
    FAST_FAIL_ADMINLESS_ACCESS_DENIED = 55  ' Telemetry, nonfatal
    FAST_FAIL_UNEXPECTED_CALL = 56
    FAST_FAIL_CONTROL_INVALID_RETURN_ADDRESS = 57
    FAST_FAIL_UNEXPECTED_HOST_BEHAVIOR = 58
    FAST_FAIL_FLAGS_CORRUPTION = 59
    FAST_FAIL_VEH_CORRUPTION = 60
    FAST_FAIL_ETW_CORRUPTION = 61
    FAST_FAIL_RIO_ABORT = 62
    FAST_FAIL_INVALID_PFN = 63
    FAST_FAIL_GUARD_ICALL_CHECK_FAILURE_XFG = 64
    FAST_FAIL_CAST_GUARD = 65  ' Known to compiler, must retain value 65
    FAST_FAIL_HOST_VISIBILITY_CHANGE = 66
    FAST_FAIL_KERNEL_CET_SHADOW_STACK_ASSIST = 67
    FAST_FAIL_PATCH_CALLBACK_FAILED = 68
    FAST_FAIL_NTDLL_PATCH_FAILED = 69
    FAST_FAIL_INVALID_FLS_DATA = 70
    FAST_FAIL_INVALID_FAST_FAIL_CODE = &HFFFFFFFF
End Enum

Public Type KSYSTEM_TIME
    LowPart As Long '0x0
    High1Time As Long '0x4
    High2Time As Long '0x8
End Type
Public Enum NT_PRODUCT_TYPE
    NtProductWinNt = 1
    NtProductLanManNt = 2
    NtProductServer = 3
End Enum
Public Enum ALTERNATIVE_ARCHITECTURE_TYPE
    StandardDesign = 0
    NEC98x86 = 1
    EndAlternatives = 2
End Enum

Public Enum SharedDataFlagsMasks
    DbgErrorPortPresent = &H0001
    DbgElevationEnabled = &H0002
    DbgVirtEnabled = &H0004
    DbgInstallerDetectEnabled = &H0008
    DbgLkgEnabled = &H0010 '6.2 and higher
    DbgSystemDllRelocated = &H0010 '6.0 and 6.1
    DbgDynProcessorEnabled = &H0020
    DbgSEHValidationEnabled = &H0040 '6.1 only
    DbgConsoleBrokerEnabled = &H0040 '6.2 and higher
    DbgSecureBootEnabled = &H0080 '6.2 and higher
    DbgMultiSessionSku = &H0100 '10.0 and higher
    DbgMultiUsersInSessionSku = &H200 '1607 and higher
    DbgStateSeparationEnabled = &H400 '1709 and higher
End Enum


[Description("Included members are through XP SP2; above that they are increasingly volatile.")]
Public Type KUSER_SHARED_DATA
    TickCountLowDeprecated As Long '0x0
    TickCountMultiplier As Long '0x4
    InterruptTime As KSYSTEM_TIME '0x8
    SystemTime As KSYSTEM_TIME '0x14
    TimeZoneBias As KSYSTEM_TIME '0x20
    ImageNumberLow As Integer '0x2c
    ImageNumberHigh As Integer '0x2e
    NtSystemRoot(0 To 259) As Integer '0x30
    MaxStackTraceDepth As Long '0x238
    CryptoExponent As Long '0x23c
    TimeZoneId As Long '0x240
    LargePageMinimum As Long '0x244
    ' Reserved2(0 To 6) As Long '0x248
    AitSamplingValue As Long '0x24C
    AppCompatFlag As Long '0x250
    #If (TWINBASIC = 1) Or (Win64 = 1) Then
    RNGSeedVersion As LongLong
    #Else
    RNGSeedVersion As Currency
    #End If
    GlobalValidationRunlevel As Long
    TimeZoneBiasStamp As Long
    NtBuildNumber As Long
    NtProductType As NT_PRODUCT_TYPE '0x264
    ProductTypeIsValid As Byte '0x268
    Reserved0 As Byte
    NativeProcessorArchitecture As Integer
    NtMajorVersion As Long '0x26c
    NtMinorVersion As Long '0x270
    ProcessorFeatures(0 To 63) As Byte '0x274  See PROCESSOR_FEATURES enum. The order matches.
    Reserved1 As Long '0x2b4 MmHighestUserAddress 
    Reserved3 As Long '0x2b8 MmSystemRangeStart
    TimeSlip As Long '0x2bc
    AlternativeArchitecture As ALTERNATIVE_ARCHITECTURE_TYPE '0x2c0
    BootId As Long 'Windows 10+ only
    SystemExpirationDate As LARGE_INTEGER '0x2c8
    SuiteMask As VER_SUITE_VALUES '0x2d0
    KdDebuggerEnabled As Byte '0x2d4
    MitigationPolicies As Byte '0x2d5
    'struct MitigationPolicies {
    '    UCHAR NXSupportPolicy:2
    '    UCHAR SEHValidationPolicy:2
    '    UCHAR CurDirDevicesSkippedForDlls:2
    '    UCHAR Reserved:2
    '}
    ' Microsoft defines the following as allowed values for the NXSupportPolicy:
    ' 0 for NX_SUPPORT_POLICY_ALWAYSOFF;
    ' 1 for NX_SUPPORT_POLICY_ALWAYSON;
    ' 2 for NX_SUPPORT_POLICY_OPTIN;
    ' 3 for NX_SUPPORT_POLICY_OPTOUT;
    ' and another set for the SEHValidationPolicy:
    ' 0 for SEH_VALIDATION_POLICY_ON;
    ' 1 for SEH_VALIDATION_POLICY_OFF;
    ' 2 for SEH_VALIDATION_POLICY_TELEMETRY;
    ' 3 for SEH_VALIDATION_POLICY_DEFER.
    CyclesPerYield As Integer 'Only on Win10 1903 and higher
    ActiveConsoleId As Long '0x2d8
    DismountCount As Long '0x2dc
    ComPlusPackage As Long '0x2e0
    LastSystemRITEventTickCount As Long '0x2e4
    NumberOfPhysicalPages As Long '0x2e8
    SafeBootMode As Byte '0x2ec
    VirtualizationFlags As Byte
    Reserved12(1) As Byte
    SharedDataFlags As SharedDataFlagsMasks '0x2f0 NOTE: TraceLogging on 2k/XP
    DataFlagsPad(0) As Long
    #If (TWINBASIC = 1) Or (Win64 = 1) Then
    TestRetInstruction As LongLong '0x2f8
    #Else
    TestRetInstruction As Currency
    #End If
    SystemCall As Long '0x300
    SystemCallReturn As Long '0x304
    #If (TWINBASIC = 1) Or (Win64 = 1) Then
    SystemCallPad(0 To 2) As LongLong '0x308
    TickCountQuad As LongLong '0x320
    #Else
    SystemCallPad(0 To 2) As Currency    
    TickCountQuad As Currency
    #End If
    'union
    '{
    '    volatile struct _KSYSTEM_TIME TickCount;                            //0x320
    'TickCount As KSYSTEM_TIME
    ReservedTickCountOverlay(1) As Long 'Since not using _KSYSTEM_TIME
    '};
    Cookie As Long '0x330
    'Wow64SharedInformation(0 To 15) As Long '0x334
End Type






Public Type CLIENT_ID
    UniqueProcess As LongPtr
    UniqueThread  As LongPtr
End Type

Public Enum ObjectAttributeValues
	OBJ_INHERIT = &H00000002
	OBJ_PERMANENT = &H00000010
	OBJ_EXCLUSIVE = &H00000020
	OBJ_CASE_INSENSITIVE = &H00000040
	OBJ_OPENIF = &H00000080
	OBJ_OPENLINK = &H00000100
	OBJ_KERNEL_HANDLE = &H00000200
	OBJ_FORCE_ACCESS_CHECK = &H00000400
	OBJ_IGNORE_IMPERSONATED_DEVICEMAP = &H00000800
	OBJ_DONT_REPARSE = &H00001000
	OBJ_VALID_ATTRIBUTES = &H00001FF2
End Enum


Public Type OBJECT_ATTRIBUTES
	Length As Long
    RootDirectory As LongPtr
    ObjectName As LongPtr
    Attributes As ObjectAttributeValues
    SecurityDescriptor As LongPtr
    SecurityQualityOfService As LongPtr
End Type

Public Enum OBJECT_INFORMATION_CLASS
    ObjectBasicInformation = 0
    ObjectNameInformation
    ObjectTypeInformation
    ObjectTypesInformation
    ObjectHandleFlagInformation
    ObjectSessionInformation
    ObjectSessionObjectInformation
End Enum

Public Type OBJECT_BASIC_INFORMATION
    Attributes As ObjectAttributeValues
    GrantedAccess As Long
    HandleCount As Long
    PointerCount As Long
    PagedPoolCharge As Long
    NonPagedPoolCharge As Long
    Reserved(2) As Long
    NameInfoSize As Long
    TypeInfoSize As Long
    SecurityDescriptorSize As Long
    CreationTime As LongLong
End Type

Public Type OBJECT_NAME_INFORMATION
    Name As UNICODE_STRING
End Type

Public Type GENERIC_MAPPING
    GenericRead As Long
    GenericWrite As Long
    GenericExecute As Long
    GenericAll As Long
End Type

Public Type OBJECT_TYPES_INFORMATION
    NumberOfTypes As Long
End Type

[Description("This structure is followed by the string described by TypeName.")]
Public Type OBJECT_TYPE_INFORMATION
   TypeName                    As UNICODE_STRING   '
   TotalNumberOfObjects        As Long    'ULONG   '
   TotalNumberOfHandles        As Long    'ULONG   '
   TotalPagedPoolUsage         As Long    'ULONG   '
   TotalNonPagedPoolUsage      As Long    'ULONG   '
   TotalNamePoolUsage          As Long    'ULONG   '
   TotalHandleTableUsage       As Long    'ULONG   '
   HighWaterNumberOfObjects    As Long    'ULONG   '
   HighWaterNumberOfHandles    As Long    'ULONG   '
   HighWaterPagedPoolUsage     As Long    'ULONG   '
   HighWaterNonPagedPoolUsage  As Long    'ULONG   '
   HighWaterNamePoolUsage      As Long    'ULONG   '
   HighWaterHandleTableUsage   As Long    'ULONG   '
   InvalidAttributes           As Long    'ULONG   '
   GenericMapping              As GENERIC_MAPPING  '
   ValidAccessMask             As Long    'ULONG   '
   SecurityRequired            As Byte    'BOOLEAN '
   MaintainHandleCount         As Byte    'BOOLEAN '
   TypeIndex                   As Byte    'UCHAR
   PoolType                    As POOL_TYPE    'ULONG   '
   DefaultPagedPoolCharge      As Long    'ULONG   '
   DefaultNonPagedPoolCharge   As Long    'ULONG   ' total 22 x ULONG
End Type

Public Type OBJECT_DIRECTORY_INFORMATION
    Name As UNICODE_STRING
    TypeName As UNICODE_STRING
End Type

Public Type OBJECT_HANDLE_FLAG_INFORMATION
    Inherit As Byte
    ProtectFromClose As Byte
End Type


Public Enum DuplicateObjectOptions
	DUPLICATE_CLOSE_SOURCE = &H00000001
	DUPLICATE_SAME_ACCESS = &H00000002
	DUPLICATE_SAME_ATTRIBUTES = &H00000004
End Enum




Public Enum SYSTEM_INFORMATION_CLASS
    SystemBasicInformation' // q: SYSTEM_BASIC_INFORMATION
    SystemProcessorInformation' // q: SYSTEM_PROCESSOR_INFORMATION
    SystemPerformanceInformation' // q: SYSTEM_PERFORMANCE_INFORMATION
    SystemTimeOfDayInformation' // q: SYSTEM_TIMEOFDAY_INFORMATION
    SystemPathInformation' // not implemented
    SystemProcessInformation' // q: SYSTEM_PROCESS_INFORMATION
    SystemCallCountInformation' // q: SYSTEM_CALL_COUNT_INFORMATION
    SystemDeviceInformation' // q: SYSTEM_DEVICE_INFORMATION
    SystemProcessorPerformanceInformation' // q: SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION
    SystemFlagsInformation' // q: SYSTEM_FLAGS_INFORMATION
    SystemCallTimeInformation' // not implemented // SYSTEM_CALL_TIME_INFORMATION // 10
    SystemModuleInformation' // q: RTL_PROCESS_MODULES
    SystemLocksInformation' // q: RTL_PROCESS_LOCKS
    SystemStackTraceInformation' // q: RTL_PROCESS_BACKTRACES
    SystemPagedPoolInformation' // not implemented
    SystemNonPagedPoolInformation' // not implemented
    SystemHandleInformation' // q: SYSTEM_HANDLE_INFORMATION
    SystemObjectInformation' // q: SYSTEM_OBJECTTYPE_INFORMATION mixed with SYSTEM_OBJECT_INFORMATION
    SystemPageFileInformation' // q: SYSTEM_PAGEFILE_INFORMATION
    SystemVdmInstemulInformation' // q: SYSTEM_VDM_INSTEMUL_INFO
    SystemVdmBopInformation' // not implemented // 20
    SystemFileCacheInformation' // q: SYSTEM_FILECACHE_INFORMATION; s (requires SeIncreaseQuotaPrivilege) (info for WorkingSetTypeSystemCache)
    SystemPoolTagInformation' // q: SYSTEM_POOLTAG_INFORMATION
    SystemInterruptInformation' // q: SYSTEM_INTERRUPT_INFORMATION
    SystemDpcBehaviorInformation' // q: SYSTEM_DPC_BEHAVIOR_INFORMATION; s: SYSTEM_DPC_BEHAVIOR_INFORMATION (requires SeLoadDriverPrivilege)
    SystemFullMemoryInformation' // not implemented // SYSTEM_MEMORY_USAGE_INFORMATION
    SystemLoadGdiDriverInformation' // s (kernel-mode only)
    SystemUnloadGdiDriverInformation' // s (kernel-mode only)
    SystemTimeAdjustmentInformation' // q: SYSTEM_QUERY_TIME_ADJUST_INFORMATION; s: SYSTEM_SET_TIME_ADJUST_INFORMATION (requires SeSystemtimePrivilege)
    SystemSummaryMemoryInformation' // not implemented // SYSTEM_MEMORY_USAGE_INFORMATION
    SystemMirrorMemoryInformation' // s (requires license value "Kernel-MemoryMirroringSupported") (requires SeShutdownPrivilege) // 30
    SystemPerformanceTraceInformation' // q; s: (type depends on EVENT_TRACE_INFORMATION_CLASS)
    SystemObsolete0' // not implemented
    SystemExceptionInformation' // q: SYSTEM_EXCEPTION_INFORMATION
    SystemCrashDumpStateInformation' // s: SYSTEM_CRASH_DUMP_STATE_INFORMATION (requires SeDebugPrivilege)
    SystemKernelDebuggerInformation' // q: SYSTEM_KERNEL_DEBUGGER_INFORMATION
    SystemContextSwitchInformation' // q: SYSTEM_CONTEXT_SWITCH_INFORMATION
    SystemRegistryQuotaInformation' // q: SYSTEM_REGISTRY_QUOTA_INFORMATION; s (requires SeIncreaseQuotaPrivilege)
    SystemExtendServiceTableInformation' // s (requires SeLoadDriverPrivilege) // loads win32k only
    SystemPrioritySeperation' // s (requires SeTcbPrivilege)
    SystemVerifierAddDriverInformation' // s (requires SeDebugPrivilege) // 40
    SystemVerifierRemoveDriverInformation' // s (requires SeDebugPrivilege)
    SystemProcessorIdleInformation' // q: SYSTEM_PROCESSOR_IDLE_INFORMATION
    SystemLegacyDriverInformation' // q: SYSTEM_LEGACY_DRIVER_INFORMATION
    SystemCurrentTimeZoneInformation' // q; s: RTL_TIME_ZONE_INFORMATION
    SystemLookasideInformation' // q: SYSTEM_LOOKASIDE_INFORMATION
    SystemTimeSlipNotification' // s: HANDLE (NtCreateEvent) (requires SeSystemtimePrivilege)
    SystemSessionCreate' // not implemented
    SystemSessionDetach' // not implemented
    SystemSessionInformation' // not implemented (SYSTEM_SESSION_INFORMATION)
    SystemRangeStartInformation' // q: SYSTEM_RANGE_START_INFORMATION // 50
    SystemVerifierInformation' // q: SYSTEM_VERIFIER_INFORMATION; s (requires SeDebugPrivilege)
    SystemVerifierThunkExtend' // s (kernel-mode only)
    SystemSessionProcessInformation' // q: SYSTEM_SESSION_PROCESS_INFORMATION
    SystemLoadGdiDriverInSystemSpace' // s: SYSTEM_GDI_DRIVER_INFORMATION (kernel-mode only) (same as SystemLoadGdiDriverInformation)
    SystemNumaProcessorMap' // q: SYSTEM_NUMA_INFORMATION
    SystemPrefetcherInformation' // q; s: PREFETCHER_INFORMATION // PfSnQueryPrefetcherInformation
    SystemExtendedProcessInformation' // q: SYSTEM_PROCESS_INFORMATION
    SystemRecommendedSharedDataAlignment' // q: ULONG // KeGetRecommendedSharedDataAlignment
    SystemComPlusPackage' // q; s: ULONG
    SystemNumaAvailableMemory' // q: SYSTEM_NUMA_INFORMATION // 60
    SystemProcessorPowerInformation' // q: SYSTEM_PROCESSOR_POWER_INFORMATION
    SystemEmulationBasicInformation' // q: SYSTEM_BASIC_INFORMATION
    SystemEmulationProcessorInformation' // q: SYSTEM_PROCESSOR_INFORMATION
    SystemExtendedHandleInformation' // q: SYSTEM_HANDLE_INFORMATION_EX
    SystemLostDelayedWriteInformation' // q: ULONG
    SystemBigPoolInformation' // q: SYSTEM_BIGPOOL_INFORMATION
    SystemSessionPoolTagInformation' // q: SYSTEM_SESSION_POOLTAG_INFORMATION
    SystemSessionMappedViewInformation' // q: SYSTEM_SESSION_MAPPED_VIEW_INFORMATION
    SystemHotpatchInformation' // q; s: SYSTEM_HOTPATCH_CODE_INFORMATION
    SystemObjectSecurityMode' // q: ULONG // 70
    SystemWatchdogTimerHandler' // s: SYSTEM_WATCHDOG_HANDLER_INFORMATION // (kernel-mode only)
    SystemWatchdogTimerInformation' // q: SYSTEM_WATCHDOG_TIMER_INFORMATION // (kernel-mode only)
    SystemLogicalProcessorInformation' // q: SYSTEM_LOGICAL_PROCESSOR_INFORMATION (EX in: USHORT ProcessorGroup)
    SystemWow64SharedInformationObsolete' // not implemented
    SystemRegisterFirmwareTableInformationHandler' // s: SYSTEM_FIRMWARE_TABLE_HANDLER // (kernel-mode only)
    SystemFirmwareTableInformation' // SYSTEM_FIRMWARE_TABLE_INFORMATION
    SystemModuleInformationEx' // q: RTL_PROCESS_MODULE_INFORMATION_EX
    SystemVerifierTriageInformation' // not implemented
    SystemSuperfetchInformation' // q; s: SUPERFETCH_INFORMATION // PfQuerySuperfetchInformation
    SystemMemoryListInformation' // q: SYSTEM_MEMORY_LIST_INFORMATION; s: SYSTEM_MEMORY_LIST_COMMAND (requires SeProfileSingleProcessPrivilege) // 80
    SystemFileCacheInformationEx' // q: SYSTEM_FILECACHE_INFORMATION; s (requires SeIncreaseQuotaPrivilege) (same as SystemFileCacheInformation)
    SystemThreadPriorityClientIdInformation' // s: SYSTEM_THREAD_CID_PRIORITY_INFORMATION (requires SeIncreaseBasePriorityPrivilege)
    SystemProcessorIdleCycleTimeInformation' // q: SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION[] (EX in: USHORT ProcessorGroup)
    SystemVerifierCancellationInformation' // SYSTEM_VERIFIER_CANCELLATION_INFORMATION // name:wow64:whNT32QuerySystemVerifierCancellationInformation
    SystemProcessorPowerInformationEx' // not implemented
    SystemRefTraceInformation' // q; s: SYSTEM_REF_TRACE_INFORMATION // ObQueryRefTraceInformation
    SystemSpecialPoolInformation' // q; s: SYSTEM_SPECIAL_POOL_INFORMATION (requires SeDebugPrivilege) // MmSpecialPoolTag' then MmSpecialPoolCatchOverruns != 0
    SystemProcessIdInformation' // q: SYSTEM_PROCESS_ID_INFORMATION
    SystemErrorPortInformation' // s (requires SeTcbPrivilege)
    SystemBootEnvironmentInformation' // q: SYSTEM_BOOT_ENVIRONMENT_INFORMATION // 90
    SystemHypervisorInformation' // q: SYSTEM_HYPERVISOR_QUERY_INFORMATION
    SystemVerifierInformationEx' // q; s: SYSTEM_VERIFIER_INFORMATION_EX
    SystemTimeZoneInformation' // q; s: RTL_TIME_ZONE_INFORMATION (requires SeTimeZonePrivilege)
    SystemImageFileExecutionOptionsInformation' // s: SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION (requires SeTcbPrivilege)
    SystemCoverageInformation' // q: COVERAGE_MODULES s: COVERAGE_MODULE_REQUEST // ExpCovQueryInformation (requires SeDebugPrivilege)
    SystemPrefetchPatchInformation' // SYSTEM_PREFETCH_PATCH_INFORMATION
    SystemVerifierFaultsInformation' // s: SYSTEM_VERIFIER_FAULTS_INFORMATION (requires SeDebugPrivilege)
    SystemSystemPartitionInformation' // q: SYSTEM_SYSTEM_PARTITION_INFORMATION
    SystemSystemDiskInformation' // q: SYSTEM_SYSTEM_DISK_INFORMATION
    SystemProcessorPerformanceDistribution' // q: SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION // 100
    SystemNumaProximityNodeInformation' // q; s: SYSTEM_NUMA_PROXIMITY_MAP
    SystemDynamicTimeZoneInformation' // q; s: RTL_DYNAMIC_TIME_ZONE_INFORMATION (requires SeTimeZonePrivilege)
    SystemCodeIntegrityInformation' // q: SYSTEM_CODEINTEGRITY_INFORMATION // SeCodeIntegrityQueryInformation
    SystemProcessorMicrocodeUpdateInformation' // s: SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION
    SystemProcessorBrandString' // q: CHAR[] // HaliQuerySystemInformation -> HalpGetProcessorBrandString' info class 23
    SystemVirtualAddressInformation' // q: SYSTEM_VA_LIST_INFORMATION[]; s: SYSTEM_VA_LIST_INFORMATION[] (requires SeIncreaseQuotaPrivilege) // MmQuerySystemVaInformation
    SystemLogicalProcessorAndGroupInformation' // q: SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX // since WIN7 // KeQueryLogicalProcessorRelationship
    SystemProcessorCycleTimeInformation' // q: SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION[] (EX in: USHORT ProcessorGroup)
    SystemStoreInformation' // q; s: SYSTEM_STORE_INFORMATION (requires SeProfileSingleProcessPrivilege) // SmQueryStoreInformation
    SystemRegistryAppendString' // s: SYSTEM_REGISTRY_APPEND_STRING_PARAMETERS // 110
    SystemAitSamplingValue' // s: ULONG (requires SeProfileSingleProcessPrivilege)
    SystemVhdBootInformation' // q: SYSTEM_VHD_BOOT_INFORMATION
    SystemCpuQuotaInformation' // q; s: PS_CPU_QUOTA_QUERY_INFORMATION
    SystemNativeBasicInformation' // q: SYSTEM_BASIC_INFORMATION
    SystemErrorPortTimeouts' // SYSTEM_ERROR_PORT_TIMEOUTS
    SystemLowPriorityIoInformation' // q: SYSTEM_LOW_PRIORITY_IO_INFORMATION
    SystemTpmBootEntropyInformation' // q: TPM_BOOT_ENTROPY_NT_RESULT // ExQueryTpmBootEntropyInformation
    SystemVerifierCountersInformation' // q: SYSTEM_VERIFIER_COUNTERS_INFORMATION
    SystemPagedPoolInformationEx' // q: SYSTEM_FILECACHE_INFORMATION; s (requires SeIncreaseQuotaPrivilege) (info for WorkingSetTypePagedPool)
    SystemSystemPtesInformationEx' // q: SYSTEM_FILECACHE_INFORMATION; s (requires SeIncreaseQuotaPrivilege) (info for WorkingSetTypeSystemPtes) // 120
    SystemNodeDistanceInformation'
    SystemAcpiAuditInformation' // q: SYSTEM_ACPI_AUDIT_INFORMATION // HaliQuerySystemInformation -> HalpAuditQueryResults' info class 26
    SystemBasicPerformanceInformation' // q: SYSTEM_BASIC_PERFORMANCE_INFORMATION // name:wow64:whNtQuerySystemInformation_SystemBasicPerformanceInformation
    SystemQueryPerformanceCounterInformation' // q: SYSTEM_QUERY_PERFORMANCE_COUNTER_INFORMATION // since WIN7 SP1
    SystemSessionBigPoolInformation' // q: SYSTEM_SESSION_POOLTAG_INFORMATION // since WIN8
    SystemBootGraphicsInformation' // q; s: SYSTEM_BOOT_GRAPHICS_INFORMATION (kernel-mode only)
    SystemScrubPhysicalMemoryInformation' // q; s: MEMORY_SCRUB_INFORMATION
    SystemBadPageInformation'
    SystemProcessorProfileControlArea' // q; s: SYSTEM_PROCESSOR_PROFILE_CONTROL_AREA
    SystemCombinePhysicalMemoryInformation' // s: MEMORY_COMBINE_INFORMATION' MEMORY_COMBINE_INFORMATION_EX' MEMORY_COMBINE_INFORMATION_EX2 // 130
    SystemEntropyInterruptTimingInformation' // q; s: SYSTEM_ENTROPY_TIMING_INFORMATION
    SystemConsoleInformation' // q: SYSTEM_CONSOLE_INFORMATION
    SystemPlatformBinaryInformation' // q: SYSTEM_PLATFORM_BINARY_INFORMATION (requires SeTcbPrivilege)
    SystemPolicyInformation' // q: SYSTEM_POLICY_INFORMATION
    SystemHypervisorProcessorCountInformation' // q: SYSTEM_HYPERVISOR_PROCESSOR_COUNT_INFORMATION
    SystemDeviceDataInformation' // q: SYSTEM_DEVICE_DATA_INFORMATION
    SystemDeviceDataEnumerationInformation' // q: SYSTEM_DEVICE_DATA_INFORMATION
    SystemMemoryTopologyInformation' // q: SYSTEM_MEMORY_TOPOLOGY_INFORMATION
    SystemMemoryChannelInformation' // q: SYSTEM_MEMORY_CHANNEL_INFORMATION
    SystemBootLogoInformation' // q: SYSTEM_BOOT_LOGO_INFORMATION // 140
    SystemProcessorPerformanceInformationEx' // q: SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION_EX // since WINBLUE
    SystemCriticalProcessErrorLogInformation'
    SystemSecureBootPolicyInformation' // q: SYSTEM_SECUREBOOT_POLICY_INFORMATION
    SystemPageFileInformationEx' // q: SYSTEM_PAGEFILE_INFORMATION_EX
    SystemSecureBootInformation' // q: SYSTEM_SECUREBOOT_INFORMATION
    SystemEntropyInterruptTimingRawInformation'
    SystemPortableWorkspaceEfiLauncherInformation' // q: SYSTEM_PORTABLE_WORKSPACE_EFI_LAUNCHER_INFORMATION
    SystemFullProcessInformation' // q: SYSTEM_PROCESS_INFORMATION with SYSTEM_PROCESS_INFORMATION_EXTENSION (requires admin)
    SystemKernelDebuggerInformationEx' // q: SYSTEM_KERNEL_DEBUGGER_INFORMATION_EX
    SystemBootMetadataInformation' // 150
    SystemSoftRebootInformation' // q: ULONG
    SystemElamCertificateInformation' // s: SYSTEM_ELAM_CERTIFICATE_INFORMATION
    SystemOfflineDumpConfigInformation' // q: OFFLINE_CRASHDUMP_CONFIGURATION_TABLE_V2
    SystemProcessorFeaturesInformation' // q: SYSTEM_PROCESSOR_FEATURES_INFORMATION
    SystemRegistryReconciliationInformation' // s: NULL (requires admin) (flushes registry hives)
    SystemEdidInformation' // q: SYSTEM_EDID_INFORMATION
    SystemManufacturingInformation' // q: SYSTEM_MANUFACTURING_INFORMATION // since THRESHOLD
    SystemEnergyEstimationConfigInformation' // q: SYSTEM_ENERGY_ESTIMATION_CONFIG_INFORMATION
    SystemHypervisorDetailInformation' // q: SYSTEM_HYPERVISOR_DETAIL_INFORMATION
    SystemProcessorCycleStatsInformation' // q: SYSTEM_PROCESSOR_CYCLE_STATS_INFORMATION // 160
    SystemVmGenerationCountInformation'
    SystemTrustedPlatformModuleInformation' // q: SYSTEM_TPM_INFORMATION
    SystemKernelDebuggerFlags' // SYSTEM_KERNEL_DEBUGGER_FLAGS
    SystemCodeIntegrityPolicyInformation' // q: SYSTEM_CODEINTEGRITYPOLICY_INFORMATION
    SystemIsolatedUserModeInformation' // q: SYSTEM_ISOLATED_USER_MODE_INFORMATION
    SystemHardwareSecurityTestInterfaceResultsInformation'
    SystemSingleModuleInformation' // q: SYSTEM_SINGLE_MODULE_INFORMATION
    SystemAllowedCpuSetsInformation'
    SystemVsmProtectionInformation' // q: SYSTEM_VSM_PROTECTION_INFORMATION (previously SystemDmaProtectionInformation)
    SystemInterruptCpuSetsInformation' // q: SYSTEM_INTERRUPT_CPU_SET_INFORMATION // 170
    SystemSecureBootPolicyFullInformation' // q: SYSTEM_SECUREBOOT_POLICY_FULL_INFORMATION
    SystemCodeIntegrityPolicyFullInformation'
    SystemAffinitizedInterruptProcessorInformation' // (requires SeIncreaseBasePriorityPrivilege)
    SystemRootSiloInformation' // q: SYSTEM_ROOT_SILO_INFORMATION
    SystemCpuSetInformation' // q: SYSTEM_CPU_SET_INFORMATION // since THRESHOLD2
    SystemCpuSetTagInformation' // q: SYSTEM_CPU_SET_TAG_INFORMATION
    SystemWin32WerStartCallout'
    SystemSecureKernelProfileInformation' // q: SYSTEM_SECURE_KERNEL_HYPERGUARD_PROFILE_INFORMATION
    SystemCodeIntegrityPlatformManifestInformation' // q: SYSTEM_SECUREBOOT_PLATFORM_MANIFEST_INFORMATION // since REDSTONE
    SystemInterruptSteeringInformation' // SYSTEM_INTERRUPT_STEERING_INFORMATION_INPUT // 180
    SystemSupportedProcessorArchitectures' // p: in opt: HANDLE' out: SYSTEM_SUPPORTED_PROCESSOR_ARCHITECTURES_INFORMATION[] // NtQuerySystemInformationEx
    SystemMemoryUsageInformation' // q: SYSTEM_MEMORY_USAGE_INFORMATION
    SystemCodeIntegrityCertificateInformation' // q: SYSTEM_CODEINTEGRITY_CERTIFICATE_INFORMATION
    SystemPhysicalMemoryInformation' // q: SYSTEM_PHYSICAL_MEMORY_INFORMATION // since REDSTONE2
    SystemControlFlowTransition'
    SystemKernelDebuggingAllowed' // s: ULONG
    SystemActivityModerationExeState' // SYSTEM_ACTIVITY_MODERATION_EXE_STATE
    SystemActivityModerationUserSettings' // SYSTEM_ACTIVITY_MODERATION_USER_SETTINGS
    SystemCodeIntegrityPoliciesFullInformation'
    SystemCodeIntegrityUnlockInformation' // SYSTEM_CODEINTEGRITY_UNLOCK_INFORMATION // 190
    SystemIntegrityQuotaInformation'
    SystemFlushInformation' // q: SYSTEM_FLUSH_INFORMATION
    SystemProcessorIdleMaskInformation' // q: ULONG_PTR // since REDSTONE3
    SystemSecureDumpEncryptionInformation'
    SystemWriteConstraintInformation' // SYSTEM_WRITE_CONSTRAINT_INFORMATION
    SystemKernelVaShadowInformation' // SYSTEM_KERNEL_VA_SHADOW_INFORMATION
    SystemHypervisorSharedPageInformation' // SYSTEM_HYPERVISOR_SHARED_PAGE_INFORMATION // since REDSTONE4
    SystemFirmwareBootPerformanceInformation'
    SystemCodeIntegrityVerificationInformation' // SYSTEM_CODEINTEGRITYVERIFICATION_INFORMATION
    SystemFirmwarePartitionInformation' // SYSTEM_FIRMWARE_PARTITION_INFORMATION // 200
    SystemSpeculationControlInformation' // SYSTEM_SPECULATION_CONTROL_INFORMATION // (CVE-2017-5715) REDSTONE3 and above.
    SystemDmaGuardPolicyInformation' // SYSTEM_DMA_GUARD_POLICY_INFORMATION
    SystemEnclaveLaunchControlInformation' // SYSTEM_ENCLAVE_LAUNCH_CONTROL_INFORMATION
    SystemWorkloadAllowedCpuSetsInformation' // SYSTEM_WORKLOAD_ALLOWED_CPU_SET_INFORMATION // since REDSTONE5
    SystemCodeIntegrityUnlockModeInformation'
    SystemLeapSecondInformation' // SYSTEM_LEAP_SECOND_INFORMATION
    SystemFlags2Information' // q: SYSTEM_FLAGS_INFORMATION
    SystemSecurityModelInformation' // SYSTEM_SECURITY_MODEL_INFORMATION // since 19H1
    SystemCodeIntegritySyntheticCacheInformation'
    SystemFeatureConfigurationInformation' // SYSTEM_FEATURE_CONFIGURATION_INFORMATION // since 20H1 // 210
    SystemFeatureConfigurationSectionInformation' // SYSTEM_FEATURE_CONFIGURATION_SECTIONS_INFORMATION
    SystemFeatureUsageSubscriptionInformation' // SYSTEM_FEATURE_USAGE_SUBSCRIPTION_DETAILS
    SystemSecureSpeculationControlInformation' // SECURE_SPECULATION_CONTROL_INFORMATION
    SystemSpacesBootInformation' // since 20H2
    SystemFwRamdiskInformation' // SYSTEM_FIRMWARE_RAMDISK_INFORMATION
    SystemWheaIpmiHardwareInformation'
    SystemDifSetRuleClassInformation'
    SystemDifClearRuleClassInformation'
    SystemDifApplyPluginVerificationOnDriver'
    SystemDifRemovePluginVerificationOnDriver' // 220
    SystemShadowStackInformation' // SYSTEM_SHADOW_STACK_INFORMATION
    SystemBuildVersionInformation' // SYSTEM_BUILD_VERSION_INFORMATION
    SystemPoolLimitInformation' // SYSTEM_POOL_LIMIT_INFORMATION
    SystemCodeIntegrityAddDynamicStore'
    SystemCodeIntegrityClearDynamicStores'
    SystemDifPoolTrackingInformation'
    SystemPoolZeroingInformation' // SYSTEM_POOL_ZEROING_INFORMATION
    SystemDpcWatchdogInformation'
    SystemDpcWatchdogInformation2'
    SystemSupportedProcessorArchitectures2'// q: in opt: HANDLE' out: SYSTEM_SUPPORTED_PROCESSOR_ARCHITECTURES_INFORMATION[] // NtQuerySystemInformationEx  // 230
    SystemSingleProcessorRelationshipInformation'
    SystemXfgCheckFailureInformation'
    SystemIommuStateInformation' // since 11H1
    SystemHypervisorMinrootInformation'
    SystemHypervisorBootPagesInformation'
    SystemPointerAuthInformation'
    SystemSecureKernelDebuggerInformation'
    MaxSystemInfoClass
End Enum

Public Type SYSTEM_BASIC_INFORMATION
    Reserved As Long
    TimerResolution As Long
    PageSize As Long
    NumberOfPhysicalPages As Long
    LowestPhysicalPageNumber As Long
    HighestPhysicalPageNumber As Long
    AllocationGranularity As Long
    MinimumUserModeAddress As LongPtr
    MaximumUserModeAddress As LongPtr
    ActiveProcessorsAffinityMask As LongPtr
    NumberOfProcessors As Byte
End Type

Public Type SYSTEM_PROCESSOR_INFORMATION
    ProcessorArchitecture As Integer /* PROCESSOR_ARCHITECTURE */
    ProcessorLevel As Integer
    ProcessorRevision As Integer
    MaximumProcessors As Integer 'Win7+ only
    ProcessorFeatureBits As Long
End Type

Public Type SYSTEM_PERFORMANCE_INFORMATION
    IdleProcessTime As LARGE_INTEGER
    IoReadTransferCount As LARGE_INTEGER
    IoWriteTransferCount As LARGE_INTEGER
    IoOtherTransferCount As LARGE_INTEGER
    IoReadOperationCount As Long
    IoWriteOperationCount As Long
    IoOtherOperationCount As Long
    AvailablePages As Long
    CommittedPages As Long
    CommitLimit As Long
    PeakCommitment As Long
    PageFaultCount As Long
    CopyOnWriteCount As Long
    TransitionCount As Long
    CacheTransitionCount As Long
    DemandZeroCount As Long
    PageReadCount As Long
    PageReadIoCount As Long
    CacheReadCount As Long
    CacheIoCount As Long
    DirtyPagesWriteCount As Long
    DirtyWriteIoCount As Long
    MappedPagesWriteCount As Long
    MappedWriteIoCount As Long
    PagedPoolPages As Long
    NonPagedPoolPages As Long
    PagedPoolAllocs As Long
    PagedPoolFrees As Long
    NonPagedPoolAllocs As Long
    NonPagedPoolFrees As Long
    FreeSystemPtes As Long
    ResidentSystemCodePage As Long
    TotalSystemDriverPages As Long
    TotalSystemCodePages As Long
    NonPagedPoolLookasideHits As Long
    PagedPoolLookasideHits As Long
    AvailablePagedPoolPages As Long
    ResidentSystemCachePage As Long
    ResidentPagedPoolPage As Long
    ResidentSystemDriverPage As Long
    CcFastReadNoWait As Long
    CcFastReadWait As Long
    CcFastReadResourceMiss As Long
    CcFastReadNotPossible As Long
    CcFastMdlReadNoWait As Long
    CcFastMdlReadWait As Long
    CcFastMdlReadResourceMiss As Long
    CcFastMdlReadNotPossible As Long
    CcMapDataNoWait As Long
    CcMapDataWait As Long
    CcMapDataNoWaitMiss As Long
    CcMapDataWaitMiss As Long
    CcPinMappedDataCount As Long
    CcPinReadNoWait As Long
    CcPinReadWait As Long
    CcPinReadNoWaitMiss As Long
    CcPinReadWaitMiss As Long
    CcCopyReadNoWait As Long
    CcCopyReadWait As Long
    CcCopyReadNoWaitMiss As Long
    CcCopyReadWaitMiss As Long
    CcMdlReadNoWait As Long
    CcMdlReadWait As Long
    CcMdlReadNoWaitMiss As Long
    CcMdlReadWaitMiss As Long
    CcReadAheadIos As Long
    CcLazyWriteIos As Long
    CcLazyWritePages As Long
    CcDataFlushes As Long
    CcDataPages As Long
    ContextSwitches As Long
    FirstLevelTbFills As Long
    SecondLevelTbFills As Long
    SystemCalls As Long
    CcTotalDirtyPages As LongLong 'Windows 10 only
    CcDirtyPageThreshold As LongLong 'Windows 10 only
    ResidentAvailablePages As LongLong 'Windows 10 only
    SharedCommittedPages As LongLong 'Windows 10 only
End Type

Public Type SYSTEM_TIMEOFDAY_INFORMATION
    BootTime As LARGE_INTEGER
    CurrentTime As LARGE_INTEGER
    TimeZoneBias As LARGE_INTEGER
    TimeZoneId As Long
    Reserved As Long
    BootTimeBias As LongLong
    SleepTimeBias As LongLong
End Type

Public Type SYSTEM_PROCESS_INFORMATION
	NextEntryOffset As Long
	NumberOfThreads As Long
	'The following 48 bytes may change and are invalid on some early Windows versions:
    WorkingSetPrivateSize As LARGE_INTEGER
    HardFaultCount As Long
    NumberOfThreadsHighWatermark As Long
    CycleTime As LongLong
    CreateTime As LARGE_INTEGER
    UserTime As LARGE_INTEGER
    KernelTime As LARGE_INTEGER
	ImageName As UNICODE_STRING
	BasePriority As Long
    'Resume documented members
	UniqueProcessId As Long
	InheritedFromUniqueProcessId As LongPtr
	HandleCount As Long
	SessionId As Long
	UniqueProcessKey As LongPtr
	PeakVirtualSize As LongPtr
	VirtualSize As LongPtr
	PageFaultCount As Long
	PeakWorkingSetSize As LongPtr
	WorkingSetSize As LongPtr
	QuotaPeakPagedPoolUsage As LongPtr
	QuotaPagedPoolUsage As LongPtr
	QuotaPeakNonPagedPoolUsage As LongPtr
	QuotaNonPagedPoolUsage As LongPtr
	PagefileUsage As LongPtr
	PeakPagefileUsage As LongPtr
	PrivatePageCount As LongPtr
    ReadOperationCount As LARGE_INTEGER
    WriteOperationCount As LARGE_INTEGER
    OtherOperationCount As LARGE_INTEGER
    ReadTransferCount As LARGE_INTEGER
    WriteTransferCount As LARGE_INTEGER
    OtherTransferCount As LARGE_INTEGER
End Type
Public Type SYSTEM_THREAD_INFORMATION
	KernelTime As LARGE_INTEGER
	UserTime As LARGE_INTEGER
	CreateTime As LARGE_INTEGER
	WaitTime As Long
	StartAddress As LongPtr
	ClientId As CLIENT_ID
	Priority As Long
	BasePriority As Long
	ContextSwitches As Long
	ThreadState As Long
	WaitReason As Long
End Type

Public Type SYSTEM_CALL_COUNT_INFORMATION
    Length As Long
    NumberOfTables As Long
End Type

Public Type SYSTEM_DEVICE_INFORMATION
    NumberOfDisks As Long
    NumberOfFloppies As Long
    NumberOfCdRoms As Long
    NumberOfTapes As Long
    NumberOfSerialPorts As Long
    NumberOfParallelPorts As Long
End Type

Public Type SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION
    IdleTime As LARGE_INTEGER
    KernelTime As LARGE_INTEGER
    UserTime As LARGE_INTEGER
    DpcTime As LARGE_INTEGER
    InterruptTime As LARGE_INTEGER
    InterruptCount As Long
End Type

Public Type SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION_EX
    IdleTime As LARGE_INTEGER
    KernelTime As LARGE_INTEGER
    UserTime As LARGE_INTEGER
    DpcTime As LARGE_INTEGER
    InterruptTime As LARGE_INTEGER
    InterruptCount As Long
    Spare0 As Long
    AvailableTime As LARGE_INTEGER
    Spare1 As LARGE_INTEGER
    Spare2 As LARGE_INTEGER
End Type

Public Type SYSTEM_FLAGS_INFORMATION
    Flags As NTGLB_Flags
End Type

Public Type PROCESS_DISK_COUNTERS
    BytesRead As LongLong
    BytesWritten As LongLong
    ReadOperationCount As LongLong
    WriteOperationCount As LongLong
    FlushOperationCount As LongLong
End Type

Public Enum SYSTEM_PROCESS_CLASSIFICATION
    SystemProcessClassificationNormal
    SystemProcessClassificationSystem
    SystemProcessClassificationSecureSystem
    SystemProcessClassificationMemCompression
    SystemProcessClassificationRegistry   ' REDSTONE4
    SystemProcessClassificationMaximum
End Enum
Public Type SYSTEM_PROCESS_INFORMATION_EXTENSION
    DiskCounters As PROCESS_DISK_COUNTERS
    ContextSwitches As LongLong
    'union
    '{
    '    ULONG Flags;
    '    struct
    '    {
    '        ULONG HasStrongId : 1;
    '        ULONG Classification : 4; // SYSTEM_PROCESS_CLASSIFICATION
    '        ULONG BackgroundActivityModerated : 1;
    '        ULONG Spare : 26;
    '    };
    '};
    Flags As Long
    UserSidOffset As Long
    PackageFullNameOffset As Long ' since THRESHOLD
    EnergyValues As PROCESS_ENERGY_VALUES ' since THRESHOLD
    AppIdOffset As Long ' since THRESHOLD
    SharedCommitCharge As LongPtr ' since THRESHOLD2
    JobObjectId As Long ' since REDSTONE
    SpareUlong As Long ' since REDSTONE
    ProcessSequenceNumber As LongLong
End Type

Public Type SYSTEM_PORTABLE_WORKSPACE_EFI_LAUNCHER_INFORMATION
    EfiLauncherEnabled As Byte
End Type

Public Type SYSTEM_KERNEL_DEBUGGER_INFORMATION_EX
    DebuggerAllowed As Byte
    DebuggerEnabled As Byte
    DebuggerPresent As Byte
End Type

[Description("EDID v1.4 standard data format")]
Public Type SYSTEM_EDID_INFORMATION
    Edid(0 To 127) As Byte
End Type

Public Type SYSTEM_MANUFACTURING_INFORMATION
    Options As Long
    ProfileName As UNICODE_STRING
End Type

Public Type SYSTEM_TPM_INFORMATION
    Flags As Long
End Type

[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type SYSTEM_CALL_TIME_INFORMATION
    Length As Long
    TotalCalls As Long
    TimeOfCalls() As LARGE_INTEGER
End Type

[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type RTL_PROCESS_MODULES
    NumberOfModules As Long
    Modules() As RTL_PROCESS_MODULE_INFORMATION
End Type
Public Type RTL_PROCESS_MODULE_INFORMATION
    Section As LongPtr
    MappedBase As LongPtr
    ImageBase As LongPtr
    ImageSize As Long
    Flags As LDR_DATA_TABLE_FLAGS
    LoadOrderIndex As Integer
    InitOrderIndex As Integer
    LoadCount As Integer
    OffsetToFileName As Integer
    FullPathName(0 To 255) As Byte
End Type

Public Type RTL_PROCESS_MODULE_INFORMATION_EX
    NextOffset As Integer
    BaseInfo As RTL_PROCESS_MODULE_INFORMATION
    ImageChecksum As Long
    TimeDateStamp As Long
    DefaultBase As LongPtr
End Type

Public Type RTL_PROCESS_LOCK_INFORMATION
    Address As LongPtr
    Type As Integer 'Always 1
    CreatorBackTraceIndex As Integer
    OwningThread As LongPtr
    LockCount As Long
    ContentionCount As Long
    EntryCount As Long
    RecursionCount As Long
    NumberOfWaitingShared As Long
    NumberOfWaitingExclusive As Long
End Type
[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type RTL_PROCESS_LOCKS
    NumberOfLocks As Long
    Locks() As RTL_PROCESS_LOCK_INFORMATION
End Type

Public Type RTL_PROCESS_BACKTRACE_INFORMATION
    SymbolicBackTrace As LongPtr
    TraceCount As Long
    Index As Integer
    Depth As Integer
    BackTrace(0 To 31) As LongPtr
End Type
[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type RTL_PROCESS_BACKTRACES
    CommittedMemory As Long
    ReservedMemory As Long
    NumberOfBackTraceLookups As Long
    NumberOfBackTraces As Long
    BackTraces() As RTL_PROCESS_BACKTRACE_INFORMATION
End Type

Public Type SYSTEM_HANDLE_TABLE_ENTRY_INFO
	UniqueProcessId As Integer
    CreatorBackTraceIndex As Integer
    ObjectTypeIndex As Byte
    HandleAttributes As Byte
    HandleValue As Integer
    Object As LongPtr
    GrantedAccess As Long
End Type
[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type SYSTEM_HANDLE_INFORMATION
    NumberOfHandles As Long
    Handles() As SYSTEM_HANDLE_TABLE_ENTRY_INFO
End Type

Public Enum OB_OBJECT_FLAGS
    OB_FLAG_NEW_OBJECT = &H01
    OB_FLAG_KERNEL_OBJECT = &H02
    OB_FLAG_KERNEL_ONLY_ACCESS = &H04
    OB_FLAG_EXCLUSIVE_OBJECT = &H08
    OB_FLAG_PERMANENT_OBJECT = &H10
    OB_FLAG_DEFAULT_SECURITY_QUOTA = &H20
    OB_FLAG_SINGLE_HANDLE_ENTRY = &H40
    OB_FLAG_DELETED_INLINE = &H80
End Enum
Public Enum POOL_TYPE
    NonPagedPool = 0
    NonPagedPoolExecute = NonPagedPool
    PagedPool = 1
    NonPagedPoolMustSucceed = NonPagedPool + 2
    DontUseThisType = 2
    NonPagedPoolCacheAligned = NonPagedPool + 4
    PagedPoolCacheAligned = 3
    NonPagedPoolCacheAlignedMustS = NonPagedPool + 6
    MaxPoolType = 4
    NonPagedPoolBase = 0
    NonPagedPoolBaseMustSucceed = NonPagedPoolBase + 2
    NonPagedPoolBaseCacheAligned = NonPagedPoolBase + 4
    NonPagedPoolBaseCacheAlignedMustS = NonPagedPoolBase + 6
    NonPagedPoolSession = 32
    PagedPoolSession = NonPagedPoolSession + 1
    NonPagedPoolMustSucceedSession = PagedPoolSession + 1
    DontUseThisTypeSession = NonPagedPoolMustSucceedSession + 1
    NonPagedPoolCacheAlignedSession = DontUseThisTypeSession + 1
    PagedPoolCacheAlignedSession = NonPagedPoolCacheAlignedSession + 1
    NonPagedPoolCacheAlignedMustSSession = PagedPoolCacheAlignedSession + 1
    NonPagedPoolNx = 512
    NonPagedPoolNxCacheAligned = NonPagedPoolNx + 4
    NonPagedPoolSessionNx = NonPagedPoolNx + 32
End Enum
Public Type SYSTEM_OBJECTTYPE_INFORMATION
	NextEntryOffset As Long
    NumberOfObjects As Long
    NumberOfHandles As Long
    TypeIndex As Long
    InvalidAttributes As Long
    GenericMapping As GENERIC_MAPPING
    ValidAccessMask As Long
    PoolType As POOL_TYPE
    SecurityRequired As Byte
    WaitableObject As Byte
    TypeName As UNICODE_STRING
End Type
Public Type SYSTEM_OBJECT_INFORMATION
	NextEntryOffset As Long
    Object As LongPtr
    CreatorUniqueProcess As LongPtr
    CreatorBackTraceIndex As Integer
    /* [TypeHint(OB_OBJECT_FLAGS)] */ Flags As Integer
    PointerCount As Long
    HandleCount As Long
    PagedPoolCharge As Long
    NonPagedPoolCharge As Long
    ExclusiveProcessId As LongPtr
    SecurityDescriptor As LongPtr
    NameInfo As OBJECT_NAME_INFORMATION
End Type

Public Type SYSTEM_PROCESS_ID_INFORMATION
	ProcessId As LongPtr
    ImageName As UNICODE_STRING
End Type
Public Enum SYSTEM_BOOT_ENV_FLAGS
    DbgMenuOsSelection = &H1
    DbgHiberBoot = &H2
    DbgSoftBoot = &H4
    DbgMeasuredLaunch = &H8 'Win810 1809+
    DbgMeasuredLaunchCapable = &H10
    DbgSystemHiveReplace = &H20
    DbgMeasuredLaunchSmmProtections = &H40
    DbgMeasuredLaunchSmmLevel = &H80
End Enum
Public Enum FIRMWARE_TYPE
    FirmwareTypeUnknown
    FirmwareTypeBios
    FirmwareTypeUefi
    FirmwareTypeMax
End Enum
Public Type SYSTEM_BOOT_ENVIRONMENT_INFORMATION
	BootIdentifier As UUID
    FirmwareType As FIRMWARE_TYPE
    /* [ TypeHint(SYSTEM_BOOT_ENV_FLAGS) ] BootFlags As LongLong*/
    Padding As Long
    UnusedLongLongBytes As Long
    BootFlags As SYSTEM_BOOT_ENV_FLAGS
End Type



Public Enum SYSTEM_CODEINTEGRITY_OPTIONS
    CODEINTEGRITY_OPTION_ENABLED = &H01
    CODEINTEGRITY_OPTION_TESTSIGN = &H02
    CODEINTEGRITY_OPTION_UMCI_ENABLED = &H04
    CODEINTEGRITY_OPTION_UMCI_AUDITMODE_ENABLED = &H08
    CODEINTEGRITY_OPTION_UMCI_EXCLUSIONPATHS_ENABLED = &H10
    CODEINTEGRITY_OPTION_TEST_BUILD = &H20
    CODEINTEGRITY_OPTION_PREPRODUCTION_BUILD = &H40
    CODEINTEGRITY_OPTION_DEBUGMODE_ENABLED = &H80
    CODEINTEGRITY_OPTION_FLIGHT_BUILD = &H100
    CODEINTEGRITY_OPTION_FLIGHTING_ENABLED = &H200
    CODEINTEGRITY_OPTION_HVCI_KMCI_ENABLED = &H400
    CODEINTEGRITY_OPTION_HVCI_KMCI_AUDITMODE_ENABLED = &H800
    CODEINTEGRITY_OPTION_HVCI_KMCI_STRICTMODE_ENABLED = &H1000
    CODEINTEGRITY_OPTION_HVCI_IUM_ENABLED = &H2000
    CODEINTEGRITY_OPTION_WHQL_ENFORCEMENT_ENABLED = &H4000
    CODEINTEGRITY_OPTION_WHQL_AUDITMODE_ENABLED = &H8000&
End Enum
Public Enum SYSTEM_CODEINTEGRITYPOLICY_OPTIONS
    CODEINTEGRITYPOLICY_OPTION_ENABLED = &H01
    CODEINTEGRITYPOLICY_OPTION_AUDIT = &H02
    CODEINTEGRITYPOLICY_OPTION_REQUIRE_WHQL = &H04
    CODEINTEGRITYPOLICY_OPTION_DISABLED_FLIGHTSIGNING = &H08
    CODEINTEGRITYPOLICY_OPTION_ENABLED_UMCI = &H10
    CODEINTEGRITYPOLICY_OPTION_ENABLED_UPDATE_POLICY_NOREBOOT = &H20
    CODEINTEGRITYPOLICY_OPTION_ENABLED_SECURE_SETTING_POLICY = &H40
    CODEINTEGRITYPOLICY_OPTION_ENABLED_UNSIGNED_SYSTEMINTEGRITY_POLICY = &H80
    CODEINTEGRITYPOLICY_OPTION_DYNAMIC_CODE_POLICY_ENABLED = &H100
    CODEINTEGRITYPOLICY_OPTION_RELOAD_POLICY_NO_REBOOT = &H10000000  ' NtSetSystemInformation reloads SiPolicy.p7b
    CODEINTEGRITYPOLICY_OPTION_CONDITIONAL_LOCKDOWN = &H20000000
    CODEINTEGRITYPOLICY_OPTION_NOLOCKDOWN = &H40000000
    CODEINTEGRITYPOLICY_OPTION_LOCKDOWN = &H80000000
End Enum
Public Enum SYSTEM_CODEINTEGRITYPOLICY_HVCI_OPTIONS
    CODEINTEGRITYPOLICY_HVCIOPTION_ENABLED = &H01
    CODEINTEGRITYPOLICY_HVCIOPTION_STRICT = &H02
    CODEINTEGRITYPOLICY_HVCIOPTION_DEBUG = &H04
End Enum

Public Type SYSTEM_CODEINTEGRITY_INFORMATION
    Length As Long
    CodeIntegrityOptions As SYSTEM_CODEINTEGRITY_OPTIONS
End Type
Public Type SYSTEM_CODEINTEGRITYPOLICY_INFORMATION
    Options As SYSTEM_CODEINTEGRITYPOLICY_OPTIONS
    HVCIOptions As SYSTEM_CODEINTEGRITYPOLICY_HVCI_OPTIONS
    Version As LongLong
    PolicyGuid As UUID
End Type
Public Type SYSTEM_CODEINTEGRITYVERIFICATION_INFORMATION
    FileHandle As LongPtr
    ImageSize As Long
    Image As LongPtr
End Type

Public Type SYSTEM_BOOT_LOGO_INFORMATION
	Flags As Long '1 if OEM set outside bootres.dll
    BitmapOffset As Long
End Type

Public Type SYSTEM_PAGEFILE_INFORMATION
	NextEntryOffset As Long
    TotalSize As Long
    TotalInUse As Long
    PeakUsage As Long
    PageFileName As UNICODE_STRING
End Type
Public Type SYSTEM_PAGEFILE_INFORMATION_EX
	Info As SYSTEM_PAGEFILE_INFORMATION
    MinimumSize As Long
    MaximumSize As Long
End Type

Public Type SYSTEM_SECUREBOOT_INFORMATION
    SecureBootEnabled As Byte
    SecureBootCapable As Byte
End Type

Public Type SYSTEM_KERNEL_DEBUGGER_INFORMATION
    KernelDebuggerEnabled As Byte
    KernelDebuggerNotPresent As Byte
End Type

Public Type SYSTEM_POLICY_INFORMATION
    InputData As LongPtr
    OutputData As LongPtr
    InputDataSize As Long
    OutputDataSize As Long
    Version As Long
End Type

Public Type SYSTEM_HYPERVISOR_PROCESSOR_COUNT_INFORMATION
    NumberOfLogicalProcessors As Long
    NumberOfCores As Long
End Type

Public Type SYSTEM_MEMORY_USAGE_INFORMATION
    TotalPhysicalBytes As LongLong
    AvailableBytes As LongLong
    ResidentAvailableBytes As LongLong
    CommittedBytes As LongLong
    SharedCommittedBytes As LongLong
    CommitLimitBytes As LongLong
    PeakCommitmentBytes As LongLong
End Type

Public Type SYSTEM_MEMORY_LIST_INFORMATION
    ZeroPageCount As LongPtr
    FreePageCount As LongPtr
    ModifiedPageCount As LongPtr
    ModifiedNoWritePageCount As LongPtr
    BadPageCount As LongPtr
    PageCountByPriority(0 To 7) As LongPtr
    RepurposedPagesByPriority(0 To 7) As LongPtr
    ModifiedPageCountPageFile As LongPtr
End Type

Public Enum SYSTEM_MEMORY_LIST_COMMAND
    MemoryCaptureAccessedBits
    MemoryCaptureAndResetAccessedBits
    MemoryEmptyWorkingSets
    MemoryFlushModifiedList
    MemoryPurgeStandbyList
    MemoryPurgeLowPriorityStandbyList
    MemoryCommandMax
End Enum

Public Enum QUOTA_LIMITS_FLAGS
    QUOTA_LIMITS_HARDWS_MIN_ENABLE = &H00000001
    QUOTA_LIMITS_HARDWS_MIN_DISABLE = &H00000002
    QUOTA_LIMITS_HARDWS_MAX_ENABLE = &H00000004
    QUOTA_LIMITS_HARDWS_MAX_DISABLE = &H00000008
    QUOTA_LIMITS_USE_DEFAULT_LIMITS = &H00000010
End Enum
Public Type SYSTEM_FILECACHE_INFORMATION
	CurrentSize As LongPtr
    PeakSize As LongPtr
    PageFaultCount As Long
    MinimumWorkingSet As LongPtr
    MaximumWorkingSet As LongPtr
    CurrentSizeIncludingTransitionInPages As LongPtr
    PeakSizeIncludingTransitionInPages As LongPtr
    TransitionRePurposeCount As Long
    Flags As QUOTA_LIMITS_FLAGS
End Type

Public Type SYSTEM_FLUSH_INFORMATION
    SupportedFlushMethods As Long
    ProcessorCacheFlushSize As Long
    SystemFlushCapabilities As LongLong
    Reserved(0 To 1) As LongLong
End Type

Public Enum SystemKernelVaShadowFlags
    KvaShadowEnabled = &H1
    KvaShadowUserGlobal = &H2
    KvaShadowPcid = &H4
    KvaShadowInvpcid = &H8
    KvaShadowRequired = &H10
    KvaShadowRequiredAvailable = &H20
    
    
    '(InvalidPteBit - 6 bits)
    
    
    
    L1DataCacheFlushSupported = &H1000
    L1TerminalFaultMitigationPresent = &H2000
End Enum
Public Type SYSTEM_KERNEL_VA_SHADOW_INFORMATION
    KvaShadowFlags As SystemKernelVaShadowFlags
End Type

Public Type SYSTEM_DMA_GUARD_POLICY_INFORMATION
    DmaGuardPolicyEnabled As Byte
End Type

Public Type TIME_FIELDS
    Year As Integer
    Month As Integer
    Day As Integer
    Hour As Integer
    Minute As Integer
    Second As Integer
    Milliseconds As Integer
    Weekday As Integer
End Type
Public Type RTL_TIME_ZONE_INFORMATION
    Bias As Long
    StandardName (0 To 31) As Integer
    StandardDate As TIME_FIELDS
    StandardBias As Long
    DaylightName (0 To 31) As Integer
    DaylightDate As TIME_FIELDS
    DaylightBias As Long
End Type
Public Type RTL_DYNAMIC_TIME_ZONE_INFORMATION
    tzi As RTL_TIME_ZONE_INFORMATION
    TimeZoneKeyName (&H7F) As Integer
    DynamicDaylightTimeDisabled As Byte
End Type

Public Type SYSTEM_BASIC_PERFORMANCE_INFORMATION
    AvailablePages As LongPtr
    CommittedPages As LongPtr
    CommitLimit As LongPtr
    PeakCommitment As LongPtr
End Type

Public Enum SYSTEM_PIXEL_FORMAT
    SystemPixelFormatUnknown
    SystemPixelFormatR8G8B8
    SystemPixelFormatR8B8G8X8
    SystemPixelFormatB8G8R8
    SystemPixelFormatB8G8R8X8
End Enum

Public Type SYSTEM_BOOT_GRAPHICS_INFORMATION
	FrameBuffer As LARGE_INTEGER
    Width As Long
    Height As Long
    PixelStride As Long
    Flags As Long
    Format As SYSTEM_PIXEL_FORMAT
End Type

Public Type SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION
    Operation As Long
End Type

Public Type PS_CPU_QUOTA_QUERY_ENTRY
    SessionId As Long
    Weight As Long
End Type
[Description("WARNING: Buffered fixed array substituted for variable C-style array.")]
Public Type PS_CPU_QUOTA_QUERY_INFORMATION
    SessionCount As Long
    SessionInformation(0 To 1023) As PS_CPU_QUOTA_QUERY_ENTRY
End Type


Public Type SYSTEM_PHYSICAL_MEMORY_INFORMATION
    TotalPhysicalBytes As LongLong
    LowestPhysicalAddress As LongLong
    HighestPhysicalAddress As LongLong
End Type

Public Enum STORE_INFORMATION_CLASS
    StorePageRequest = 1
    StoreStatsRequest = 2 ' q: SM_STATS_REQUEST // SmProcessStatsRequest
    StoreCreateRequest = 3 ' s: SM_CREATE_REQUEST (requires SeProfileSingleProcessPrivilege)
    StoreDeleteRequest = 4 ' s: SM_DELETE_REQUEST (requires SeProfileSingleProcessPrivilege)
    StoreListRequest = 5 ' q: SM_STORE_LIST_REQUEST / SM_STORE_LIST_REQUEST_EX // SmProcessListRequest
    Available1 = 6
    StoreEmptyRequest = 7
    CacheListRequest = 8 ' q: SMC_CACHE_LIST_REQUEST // SmcProcessListRequest
    CacheCreateRequest = 9 ' s: SMC_CACHE_CREATE_REQUEST (requires SeProfileSingleProcessPrivilege)
    CacheDeleteRequest = 10 ' s: SMC_CACHE_DELETE_REQUEST (requires SeProfileSingleProcessPrivilege)
    CacheStoreCreateRequest = 11 ' s: SMC_STORE_CREATE_REQUEST (requires SeProfileSingleProcessPrivilege)
    CacheStoreDeleteRequest = 12 ' s: SMC_STORE_DELETE_REQUEST (requires SeProfileSingleProcessPrivilege)
    CacheStatsRequest = 13 ' q: SMC_CACHE_STATS_REQUEST // SmcProcessStatsRequest
    Available2 = 14
    RegistrationRequest = 15 ' q: SM_REGISTRATION_REQUEST (requires SeProfileSingleProcessPrivilege) // SmProcessRegistrationRequest
    GlobalCacheStatsRequest = 16
    StoreResizeRequest = 17 ' s: SM_STORE_RESIZE_REQUEST (requires SeProfileSingleProcessPrivilege)
    CacheStoreResizeRequest = 18 ' s: SMC_STORE_RESIZE_REQUEST (requires SeProfileSingleProcessPrivilege)
    SmConfigRequest = 19 ' s: SM_CONFIG_REQUEST (requires SeProfileSingleProcessPrivilege)
    StoreHighMemoryPriorityRequest = 20 ' s: SM_STORE_HIGH_MEM_PRIORITY_REQUEST (requires SeProfileSingleProcessPrivilege)
    SystemStoreTrimRequest = 21 ' s: SM_SYSTEM_STORE_TRIM_REQUEST (requires SeProfileSingleProcessPrivilege)
    MemCompressionInfoRequest = 22 ' q: SM_MEM_COMPRESSION_INFO_REQUEST // SmProcessCompressionInfoRequest
    ProcessStoreInfoRequest = 23 ' SmProcessProcessStoreInfoRequest
    StoreInformationMax = 2
End Enum
Public Enum SystemStoreInformationVersions
    SYSTEM_STORE_INFORMATION_VERSION = 1
End Enum
Public Type SYSTEM_STORE_INFORMATION
    Version As Long '_In_
    StoreInformationClass As STORE_INFORMATION_CLASS '_In_
    Data As LongPtr '_Inout_
    Length As Long '_Inout_
End Type
Public Enum SystemStoreStatsInformationVersions
    SYSTEM_STORE_STATS_INFORMATION_VERSION = 2
End Enum
Public Enum ST_STATS_LEVEL
    StStatsLevelBasic = 0
    StStatsLevelIoStats = 1
    StStatsLevelRegionSpace = 2 ' requires SeProfileSingleProcessPrivilege
    StStatsLevelSpaceBitmap = 3 ' requires SeProfileSingleProcessPrivilege
    StStatsLevelMax = 4
End Enum
Public Type SM_STATS_REQUEST
    ' ULONG Version : 8; // SYSTEM_STORE_STATS_INFORMATION_VERSION
    ' ULONG DetailLevel : 8; // ST_STATS_LEVEL
    ' ULONG StoreId : 16;
    Bitfield As Long
    BufferSize As Long
    Buffer As LongPtr
End Type
Public Type ST_DATA_MGR_STATS
    RegionCount As Long
    PagesStored As Long
    UniquePagesStored As Long
    LazyCleanupRegionCount As Long
    'struct {
    '    ULONG RegionsInUse;
    '    ULONG SpaceUsed;
    '} Space[8];
    Space(7) As Long
End Type
Public Type ST_IO_STATS_PERIOD
    PageCounts(0 To 4) As Long
End Type
Public Type ST_IO_STATS
    PeriodCount As Long
    Periods(0 To 63) As ST_IO_STATS_PERIOD
End Type
Public Type ST_READ_LATENCY_BUCKET
    LatencyUs As Long
    Count As Long
End Type
Public Type ST_READ_LATENCY_STATS
    Buckets(0 To 7) As ST_READ_LATENCY_BUCKET
End Type
Public Type ST_STATS_REGION_INFO
    SpaceUsed As Integer
    Priority As Byte
    Spare As Byte
End Type
Public Type ST_STATS_SPACE_BITMAP
    CompressedBytes As LongPtr
    BytesPerBit As Long
    StoreBitmap(0 To 0) As Byte
End Type

Public Type ST_STATS
    ' ULONG Version : 8;
    ' ULONG Level : 4;
    ' ULONG StoreType : 4;
    ' ULONG NoDuplication : 1;
    ' ULONG NoCompression : 1;
    ' ULONG EncryptionStrength : 12;
    ' ULONG VirtualRegions : 1;
    ' ULONG Spare0 : 1;
    Bitfield As Long
    CompressionFormat As Integer
    Spare As Integer
    Basic_RegionSize As Long
    Basic_RegionCount As Long
    Basic_RegionCountMax As Long
    Basic_Granularity As Long
    Basic_UserData As ST_DATA_MGR_STATS
    Basic_Metadata As ST_DATA_MGR_STATS
    Io_IoStats As ST_IO_STATS
    Io_ReadLatencyStats As ST_READ_LATENCY_STATS
    ' // ST_STATS_REGION_INFO[Basic_RegionCountMax]
    ' // ST_STATS_SPACE_BITMAP
End Type
Public Const SYSTEM_STORE_CREATE_INFORMATION_VERSION = 6
Public Enum SM_STORE_TYPE
    StoreTypeInMemory = 0
    StoreTypeFile = 1
    StoreTypeMax = 2
End Enum
Public Type SM_STORE_BASIC_PARAMS
    'union
    '{
    '    struct
    '    {
    '        ULONG StoreType : 8; // SM_STORE_TYPE
    '        ULONG NoDuplication : 1;
    '        ULONG FailNoCompression : 1;
    '        ULONG NoCompression : 1 ;
    '        ULONG NoEncryption : 1;
    '        ULONG NoEvictOnAdd : 1;
    '        ULONG PerformsFileIo : 1;
    '        ULONG VdlNotSet : 1 ;
    '        ULONG UseIntermediateAddBuffer : 1;
    '        ULONG CompressNoHuff : 1;
    '        ULONG LockActiveRegions : 1;
    '        ULONG VirtualRegions : 1;
    '        ULONG Spare : 13;
    '};
    StoreFlags As Long
    '};
    Granularity As Long
    RegionSize As Long
    RegionCountMax As Long
End Type
'Kernel mode only:
' Public Type SMKM_REGION_EXTENT
'     RegionCount As Long
'     ByteOffset As LongPtr
' End Type
' Public Type SMKM_FILE_INFO
'     FileHandle As LongPtr
'     FileObject As LongPtr 'PFILE_OBJECT
'     VolumeFileObject As LongPtr 'PFILE_OBJECT
'     VolumeDeviceObject As LongPtr 'PDEVICE_OBJECT
'     VolumePnpHandle As LongPtr
'     UsageNotificationIrp As LongPtr 'PIRP
'     Extents As LongPtr 'PSMKM_REGION_EXTENT
'     ExtentCount As Long
' End Type
Public Type SM_STORE_CACHE_BACKED_PARAMS
    SectorSize As Long
    EncryptionKey As LongPtr
    EncryptionKeySize As Long
    FileInfo As LongPtr 'PSMKM_FILE_INFO
    EtaContext As LongPtr
    StoreRegionBitmap As LongPtr 'PRTL_BITMAP
End Type
Public Type SM_STORE_PARAMETERS
    Store As SM_STORE_BASIC_PARAMS
    Priority As Long
    Flags As Long
    CacheBacked As SM_STORE_CACHE_BACKED_PARAMS
End Type
Public Type SM_CREATE_REQUEST
    ' ULONG Version : 8; // SYSTEM_STORE_CREATE_INFORMATION_VERSION
    ' ULONG AcquireReference : 1;
    ' ULONG KeyedStore : 1;
    ' ULONG Spare : 22;
    Bitfield As Long
    Params As SM_STORE_PARAMETERS
    StoreId As Long
End Type
Public Const SYSTEM_STORE_DELETE_INFORMATION_VERSION = 1
Public Type SM_DELETE_REQUEST
    ' ULONG Version : 8; // SYSTEM_STORE_DELETE_INFORMATION_VERSION
    ' ULONG Spare : 24;
    Bitfield As Long
    StoreId As Long
End Type
Public Const SYSTEM_STORE_LIST_INFORMATION_VERSION = 2
Public Type SM_STORE_LIST_REQUEST
    ' ULONG Version : 8; // SYSTEM_STORE_LIST_INFORMATION_VERSION
    ' ULONG StoreCount : 8; // = 0
    ' ULONG ExtendedRequest : 1; // SM_STORE_LIST_REQUEST_EX if set
    ' ULONG Spare : 15;
    Bitfield As Long
    StoreId(0 To 31) As Long
End Type
Public Type SM_STORE_LIST_REQUEST_EX
    Request As SM_STORE_LIST_REQUEST
    NameBuffer(0 To 63, 0 To 31) As Integer
End Type
Public Const SYSTEM_CACHE_LIST_INFORMATION_VERSION = 2
Public Type SMC_CACHE_LIST_REQUEST
    ' ULONG Version : 8; // SYSTEM_CACHE_LIST_INFORMATION_VERSION
    ' ULONG CacheCount : 8; // = 0
    ' ULONG Spare : 16;
    Bitfield As Long
    CacheId(0 To 15) As Long
End Type
Public Const SYSTEM_CACHE_CREATE_INFORMATION_VERSION = 3
Public Type SMC_CACHE_PARAMETERS
    CacheFileSize As LongPtr
    StoreAlignment As Long
    'ULONG PerformsFileIo : 1;
    'ULONG VdlNotSet : 1;
    'ULONG Spare : 30;
    Bitfield As Long
    CacheFlags As Long
    Priority As Long
End Type
Public Type SMC_CACHE_CREATE_PARAMETERS
    CacheParameters As SMC_CACHE_PARAMETERS
    TemplateFilePath(0 To 511) As Integer
End Type
Public Type SMC_CACHE_CREATE_REQUEST
    ' ULONG Version : 8; // SYSTEM_CACHE_CREATE_INFORMATION_VERSION
    ' ULONG Spare : 24;
    Bitfield As Long
    CacheId As Long
    CacheCreateParams As SMC_CACHE_CREATE_PARAMETERS
End Type
Public Const SYSTEM_CACHE_DELETE_INFORMATION_VERSION = 1
Public Type SMC_CACHE_DELETE_REQUEST
    ' ULONG Version : 8; // SYSTEM_CACHE_DELETE_INFORMATION_VERSION
    ' ULONG Spare : 24;
    Bitfield As Long
    CacheId As Long
End Type
Public Const SYSTEM_CACHE_STORE_CREATE_INFORMATION_VERSION = 2
Public Enum SM_STORE_MANAGER_TYPE
    SmStoreManagerTypePhysical = 0
    SmStoreManagerTypeVirtual = 1
    SmStoreManagerTypeMax = 2
End Enum
Public Type SMC_STORE_CREATE_REQUEST
    'ULONG Version : 8; // SYSTEM_CACHE_STORE_CREATE_INFORMATION_VERSION
    'ULONG Spare : 24;
    Bitfield As Long
    StoreParams As SM_STORE_BASIC_PARAMS
    CacheId As Long
    StoreManagerType As SM_STORE_MANAGER_TYPE
    StoreId As Long
End Type
Public Const SYSTEM_CACHE_STORE_DELETE_INFORMATION_VERSION = 1
Public Type SMC_STORE_DELETE_REQUEST
    'ULONG Version : 8; // SYSTEM_CACHE_STORE_DELETE_INFORMATION_VERSION
    'ULONG Spare : 24;
    Bitfield As Long
    CacheId As Long
    StoreManagerType As SM_STORE_MANAGER_TYPE
    StoreId As Long
End Type
Public Const SYSTEM_CACHE_STATS_INFORMATION_VERSION = 3
Public Type SMC_CACHE_STATS
    TotalFileSize As LongPtr
    StoreCount As Long
    RegionCount As Long
    RegionSizeBytes As Long
    'ULONG FileCount : 6;
    'ULONG PerformsFileIo : 1;
    'ULONG Spare : 25;
    Bitfield As Long
    StoreIds(0 To 15) As Long
    PhysicalStoreBitmap As Long
    Priority As Long
    TemplateFilePath(0 To 511) As Integer
End Type
Public Type SMC_CACHE_STATS_REQUEST
    'ULONG Version : 8; // SYSTEM_CACHE_STATS_INFORMATION_VERSION
    'ULONG NoFilePath : 1;
    'ULONG Spare : 23;
    Bitfield As Long
    CacheId As Long
    CacheStats As SMC_CACHE_STATS
End Type
Public Const SYSTEM_STORE_REGISTRATION_INFORMATION_VERSION = 1
Public Type SM_REGISTRATION_INFO
    CachesUpdatedEvent As LongPtr
End Type
Public Type SM_REGISTRATION_REQUEST
    'ULONG Version : 8; // SYSTEM_STORE_REGISTRATION_INFORMATION_VERSION
    'ULONG Spare : 24;
    Bitfield As Long
    RegInfo As SM_REGISTRATION_INFO
End Type
Public Const SYSTEM_STORE_RESIZE_INFORMATION_VERSION = 6
Public Type SM_STORE_RESIZE_REQUEST
    'ULONG Version : 8; // SYSTEM_STORE_RESIZE_INFORMATION_VERSION
    'ULONG AddRegions : 1;
    'ULONG Spare : 23;
    Bitfield As Long
    StoreId As Long
    NumberOfRegions As Long
    RegionBitmap As LongPtr 'PRTL_BITMAP
End Type
Public Const SYSTEM_CACHE_STORE_RESIZE_INFORMATION_VERSION = 1
Public Type SMC_STORE_RESIZE_REQUEST
    'ULONG Version : 8; // SYSTEM_CACHE_STORE_RESIZE_INFORMATION_VERSION
    'ULONG AddRegions : 1;
    'ULONG Spare : 23;
    Bitfield As Long
    CacheId As Long
    StoreId As Long
    StoreManagerType As SM_STORE_MANAGER_TYPE
    RegionCount As Long
End Type
Public Const SYSTEM_STORE_CONFIG_INFORMATION_VERSION = 4
Public Enum SM_CONFIG_TYPE
    SmConfigDirtyPageCompression = 0
    SmConfigAsyncInswap = 1
    SmConfigPrefetchSeekThreshold = 2
    SmConfigTypeMax = 3
End Enum
Public Type SM_CONFIG_REQUEST
    'ULONG Version : 8; // SYSTEM_STORE_CONFIG_INFORMATION_VERSION
    'ULONG Spare : 16;
    'ULONG ConfigType : 8; // SM_CONFIG_TYPE
    Bitfield As Long
    ConfigValue As Long
End Type
Public Const SYSTEM_STORE_HIGH_MEM_PRIORITY_INFORMATION_VERSION = 1
Public Type SM_STORE_HIGH_MEM_PRIORITY_REQUEST
    'ULONG Version : 8; // SYSTEM_STORE_HIGH_MEM_PRIORITY_INFORMATION_VERSION
    'ULONG SetHighMemoryPriority : 1;
    'ULONG Spare : 23;
    Bitfield As Long
    ProcessHandle As LongPtr
End Type
Public Const SYSTEM_STORE_TRIM_INFORMATION_VERSION = 1
Public Type SM_SYSTEM_STORE_TRIM_REQUEST
    'ULONG Version : 8; // SYSTEM_STORE_TRIM_INFORMATION_VERSION
    'ULONG Spare : 24;
    Bitfield As Long
    PagesToTrim As LongPtr ' ULONG?
End Type
Public Const SYSTEM_STORE_COMPRESSION_INFORMATION_VERSION = 3
Public Type SM_MEM_COMPRESSION_INFO_REQUEST
    'ULONG Version : 8; // SYSTEM_STORE_COMPRESSION_INFORMATION_VERSION
    'ULONG Spare : 24;
    Bitfield As Long
    CompressionPid As Long
    WorkingSetSize As Long
    TotalDataCompressed As LongPtr
    TotalCompressedSize As LongPtr
    TotalUniqueDataCompressed As LongPtr
End Type

Public Type RTL_BITMAP
    SizeOfBitMap As Long
    Buffer As LongPtr
End Type



Public Enum SYSTEM_ACTIVITY_MODERATION_STATE
    SystemActivityModerationStateSystemManaged = 0
    SystemActivityModerationStateUserManagedAllowThrottling = 1
    SystemActivityModerationStateUserManagedDisableThrottling = 2
    MaxSystemActivityModerationState = 3
End Enum
Public Type SYSTEM_ACTIVITY_MODERATION_EXE_STATE ' REDSTONE3: Renamed SYSTEM_ACTIVITY_MODERATION_INFO
    ExePathNt As UNICODE_STRING
    ModerationState As SYSTEM_ACTIVITY_MODERATION_STATE
End Type

Public Enum SYSTEM_ACTIVITY_MODERATION_APP_TYPE
    SystemActivityModerationAppTypeClassic = 0
    SystemActivityModerationAppTypePackaged = 1
    MaxSystemActivityModerationAppType = 2
End Enum
Public Type SYSTEM_ACTIVITY_MODERATION_INFO
    Identifier As UNICODE_STRING
    ModerationState As SYSTEM_ACTIVITY_MODERATION_STATE
    AppType As SYSTEM_ACTIVITY_MODERATION_APP_TYPE
End Type

Public Type SYSTEM_ACTIVITY_MODERATION_USER_SETTINGS
    UserKeyHandle As LongPtr
End Type

Public Type SYSTEM_SPECULATION_CONTROL_INFORMATION
	Flags As Long
    ' union
    ' {
        ' ULONG Flags;
        ' struct
        ' {
            ' ULONG BpbEnabled : 1;
            ' ULONG BpbDisabledSystemPolicy : 1;
            ' ULONG BpbDisabledNoHardwareSupport : 1;
            ' ULONG SpecCtrlEnumerated : 1;
            ' ULONG SpecCmdEnumerated : 1;
            ' ULONG IbrsPresent : 1;
            ' ULONG StibpPresent : 1;
            ' ULONG SmepPresent : 1;
            ' ULONG SpeculativeStoreBypassDisableAvailable : 1; // REDSTONE4 (CVE-2018-3639)
            ' ULONG SpeculativeStoreBypassDisableSupported : 1;
            ' ULONG SpeculativeStoreBypassDisabledSystemWide : 1;
            ' ULONG SpeculativeStoreBypassDisabledKernel : 1;
            ' ULONG SpeculativeStoreBypassDisableRequired : 1;
            ' ULONG BpbDisabledKernelToUser : 1;
            ' ULONG SpecCtrlRetpolineEnabled : 1;
            ' ULONG SpecCtrlImportOptimizationEnabled : 1;
            ' ULONG EnhancedIbrs : 1; // since 19H1
            ' ULONG HvL1tfStatusAvailable : 1;
            ' ULONG HvL1tfProcessorNotAffected : 1;
            ' ULONG HvL1tfMigitationEnabled : 1;
            ' ULONG HvL1tfMigitationNotEnabled_Hardware : 1;
            ' ULONG HvL1tfMigitationNotEnabled_LoadOption : 1;
            ' ULONG HvL1tfMigitationNotEnabled_CoreScheduler : 1;
            ' ULONG EnhancedIbrsReported : 1;
            ' ULONG MdsHardwareProtected : 1; // since 19H2
            ' ULONG MbClearEnabled : 1;
            ' ULONG MbClearReported : 1;
            ' ULONG Reserved : 5;
        ' };
    ' };
End Type

Public Enum SYSTEM_VA_TYPE
    SystemVaTypeAll = 0
    SystemVaTypeNonPagedPool = 1
    SystemVaTypePagedPool = 2
    SystemVaTypeSystemCache = 3
    SystemVaTypeSystemPtes = 4
    SystemVaTypeSessionSpace = 5
    SystemVaTypeMax = 6
End Enum
Public Type SYSTEM_VA_LIST_INFORMATION
    VirtualSize As LongPtr
    VirtualPeak As LongPtr
    VirtualLimit As LongPtr
    AllocationFailures As LongPtr
End Type

Public Type SYSTEM_PROCESSOR_POWER_INFORMATION
    CurrentFrequency As Byte
    ThermalLimitFrequency As Byte
    ConstantThrottleFrequency As Byte
    DegradedThrottleFrequency As Byte
    LastBusyFrequency As Byte
    LastC3Frequency As Byte
    LastAdjustedBusyFrequency As Byte
    ProcessorMinThrottle As Byte
    ProcessorMaxThrottle As Byte
    NumberOfFrequencies As Long
    PromotionCount As Long
    DemotionCount As Long
    ErrorCount As Long
    RetryCount As Long
    CurrentFrequencyTime As LongLong
    CurrentProcessorTime As LongLong
    CurrentProcessorIdleTime As LongLong
    LastProcessorTime As LongLong
    LastProcessorIdleTime As LongLong
    Energy As LongLong
End Type

Public Type SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX
    Object As LongPtr
    UniqueProcessId As LongPtr
    HandleValue As LongPtr
    GrantedAccess As Long
    CreatorBackTraceIndex As Integer
    ObjectTypeIndex As Integer
    HandleAttributes As Long
    Reserved As Long
End Type
[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type SYSTEM_HANDLE_INFORMATION_EX
    NumberOfHandles As LongPtr
    Reserved As LongPtr
    Handles() As SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX
End Type

Public Type SYSTEM_BIGPOOL_ENTRY
    ' union
    ' {
        ' PVOID VirtualAddress;
        ' ULONG_PTR NonPaged : 1;
    ' };
    ' SIZE_T SizeInBytes;
    ' union
    ' {
        ' UCHAR Tag[4];
        ' ULONG TagUlong;
    ' };
    VirtualAddressOrNonPaged As LongPtr
    SizeInBytes As LongPtr
    Tag As Long
End Type

Public Type SYSTEM_POOL_ENTRY
    Allocated As Byte
    Spare0 As Byte
    AllocatorBackTraceIndex As Integer
    Size As Long
    'union
    '{
    '    UCHAR Tag[4];
    '    ULONG TagUlong;
    ProcessChargedQuotaOrTag As LongPtr
    '};
End Type
[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type SYSTEM_POOL_INFORMATION
    TotalSize As LongPtr
    FirstEntry As LongPtr
    EntryOverhead As Integer
    PoolTagPresent As Byte
    Spare0 As Byte
    NumberOfEntries As Long
    Entries() As SYSTEM_POOL_ENTRY
End Type

Public Type SYSTEM_SINGLE_MODULE_INFORMATION
    TargetModuleAddress As LongPtr
    ExInfo As RTL_PROCESS_MODULE_INFORMATION_EX
End Type

Public Type SYSTEM_INTERRUPT_CPU_SET_INFORMATION
    Gsiv As Long
    Group As Integer
    CpuSets As LongLong
End Type

Public Type SYSTEM_SECURITY_MODEL_INFORMATION
    SecurityModelFlags As Long
    ' union
    ' {
        ' ULONG SecurityModelFlags;
        ' struct
        ' {
            ' ULONG SModeAdminlessEnabled : 1;
            ' ULONG AllowDeviceOwnerProtectionDowngrade : 1;
            ' ULONG Reserved : 30;
        ' };
    ' };
End Type

Public Type SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION
    FlagsToEnable As Long
    FlagsToDisable As Long
End Type

Public Type SYSTEM_PREFETCH_PATCH_INFORMATION
    PrefetchPatchCount As Long
End Type

Public Type SYSTEM_VERIFIER_FAULTS_INFORMATION
    Probability As Long
    MaxProbability As Long
    PoolTags As UNICODE_STRING
    Applications As UNICODE_STRING
End Type

Public Type SYSTEM_CONTEXT_SWITCH_INFORMATION
    ContextSwitches As Long
    FindAny As Long
    FindLast As Long
    FindIdeal As Long
    IdleAny As Long
    IdleCurrent As Long
    IdleLast As Long
    IdleIdeal As Long
    PreemptAny As Long
    PreemptCurrent As Long
    PreemptLast As Long
    SwitchToIdle As Long
End Type

Public Type SYSTEM_PROCESSOR_IDLE_INFORMATION
    IdleTime As LongLong
    C1Time As LongLong
    C2Time As LongLong
    C3Time As LongLong
    C1Transitions As Long
    C2Transitions As Long
    C3Transitions As Long
    Padding As Long
End Type

Public Type SYSTEM_QUERY_TIME_ADJUST_INFORMATION
    TimeAdjustment As Long
    TimeIncrement As Long
    Enable As Byte
End Type
Public Type SYSTEM_QUERY_TIME_ADJUST_INFORMATION_PRECISE
    TimeAdjustment As LongLong
    TimeIncrement As LongLong
    Enable As Byte
End Type
Public Type SYSTEM_SET_TIME_ADJUST_INFORMATION
    TimeAdjustment As Long
    Enable As Byte
End Type
Public Type SYSTEM_SET_TIME_ADJUST_INFORMATION_PRECISE
    TimeAdjustment As LongLong
    Enable As Byte
End Type

Public Type SYSTEM_INTERRUPT_INFORMATION
    ContextSwitches As Long
    DpcCount As Long
    DpcRate As Long
    TimeIncrement As Long
    DpcBypassCount As Long
    ApcBypassCount As Long
End Type

Public Type SYSTEM_DPC_BEHAVIOR_INFORMATION
    Spare As Long
    DpcQueueDepth As Long
    MinimumDpcRate As Long
    AdjustDpcThreshold As Long
    IdealDpcRate As Long
End Type





Public Type SYSTEM_REGISTRY_QUOTA_INFORMATION
    RegistryQuotaAllowed As Long
    RegistryQuotaUsed As Long
    PagedPoolSize As LongPtr
End Type

Public Type SYSTEM_EXCEPTION_INFORMATION
    AlignmentFixupCount As Long
    ExceptionDispatchCount As Long
    FloatingEmulationCount As Long
    ByteWordEmulationCount As Long
End Type

Public Enum SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS
    SystemCrashDumpDisable
    SystemCrashDumpReconfigure
    SystemCrashDumpInitializationComplete
End Enum
Public Type SYSTEM_CRASH_DUMP_STATE_INFORMATION
    CrashDumpConfigurationClass As SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS
End Type


[Description("IMPORTANT: For Win10 19H1 and newer, use SYSTEM_VERIFIER_INFORMATION_19H1")]
Public Type SYSTEM_VERIFIER_INFORMATION  ' pre-19H1
    NextEntryOffset As Long
    Level As Long
    DriverName As UNICODE_STRING
    RaiseIrqls As Long
    AcquireSpinLocks As Long
    SynchronizeExecutions As Long
    AllocationsAttempted As Long
    AllocationsSucceeded As Long
    AllocationsSucceededSpecialPool As Long
    AllocationsWithNoTag As Long
    TrimRequests As Long
    Trims As Long
    AllocationsFailed As Long
    AllocationsFailedDeliberately As Long
    Loads As Long
    Unloads As Long
    UnTrackedPool As Long
    CurrentPagedPoolAllocations As Long
    CurrentNonPagedPoolAllocations As Long
    PeakPagedPoolAllocations As Long
    PeakNonPagedPoolAllocations As Long
    PagedPoolUsageInBytes As LongPtr
    NonPagedPoolUsageInBytes As LongPtr
    PeakPagedPoolUsageInBytes As LongPtr
    PeakNonPagedPoolUsageInBytes As LongPtr
End Type
Public Type SYSTEM_VERIFIER_INFORMATION_19H1
    NextEntryOffset As Long
    Level As Long
    RuleClasses(0 To 1) As Long
    TriageContext As Long
    AreAllDriversBeingVerified As Long
    DriverName As UNICODE_STRING
    RaiseIrqls As Long
    AcquireSpinLocks As Long
    SynchronizeExecutions As Long
    AllocationsAttempted As Long
    AllocationsSucceeded As Long
    AllocationsSucceededSpecialPool As Long
    AllocationsWithNoTag As Long
    TrimRequests As Long
    Trims As Long
    AllocationsFailed As Long
    AllocationsFailedDeliberately As Long
    Loads As Long
    Unloads As Long
    UnTrackedPool As Long
    CurrentPagedPoolAllocations As Long
    CurrentNonPagedPoolAllocations As Long
    PeakPagedPoolAllocations As Long
    PeakNonPagedPoolAllocations As Long
    PagedPoolUsageInBytes As LongPtr
    NonPagedPoolUsageInBytes As LongPtr
    PeakPagedPoolUsageInBytes As LongPtr
    PeakNonPagedPoolUsageInBytes As LongPtr
End Type


Public Type SYSTEM_VERIFIER_INFORMATION_EX
    VerifyMode As Long
    OptionChanges As Long
    PreviousBucketName As UNICODE_STRING
    IrpCancelTimeoutMsec As Long
    VerifierExtensionEnabled As Long
    #If Win64 Then
    Reserved(0 To 0) As Long
    #Else
    Reserved(0 To 2) As Long
    #End If
End Type

Public Type SYSTEM_SYSTEM_PARTITION_INFORMATION
    SystemPartition As UNICODE_STRING
End Type
Public Type SYSTEM_SYSTEM_DISK_INFORMATION
    SystemDisk As UNICODE_STRING
End Type

Public Type SYSTEM_THREAD_CID_PRIORITY_INFORMATION
    ClientId As CLIENT_ID
    Priority As KPRIORITY
End Type

Public Type SYSTEM_REGISTRY_APPEND_STRING_PARAMETERS
    KeyHandle As LongPtr
    ValueNamePointer As LongPtr 'PUNICODE_STRING
    RequiredLengthPointer As LongPtr
    Buffer As LongPtr 'PUCHAR
    BufferLength As Long
    Type As Long
    AppendBuffer As LongPtr 'PUCHAR
    AppendBufferLength As Long
    CreateIfDoesntExist As Byte
    TruncateExistingValue As Byte
End Type

Public Type SYSTEM_ELAM_CERTIFICATE_INFORMATION
    ElamDriverFile As LongPtr
End Type

Public Enum QUERY_PERFORMANCE_COUNTER_FLAGS
    QPCF_KernelTransition = 1
End Enum
Public Type SYSTEM_QUERY_PERFORMANCE_COUNTER_INFORMATION
    Version As Long
    Flags As QUERY_PERFORMANCE_COUNTER_FLAGS
    ValidFlags As QUERY_PERFORMANCE_COUNTER_FLAGS
End Type

Public Type SYSTEM_LEGACY_DRIVER_INFORMATION
    VetoType As Long
    VetoList As UNICODE_STRING
End Type

Public Type MEMORY_SCRUB_INFORMATION
    Handle As LongPtr
    PagesScrubbed As LongPtr
End Type

Public Type MEMORY_COMBINE_INFORMATION
    Handle As LongPtr
    PagesCombined As LongPtr
End Type

Public Enum MemoryCombineFlags
    MEMORY_COMBINE_FLAGS_COMMON_PAGES_ONLY = &H4
End Enum
Public Type MEMORY_COMBINE_INFORMATION_EX
    Handle As LongPtr
    PagesCombined As LongPtr
    Flags As MemoryCombineFlags
End Type

Public Type MEMORY_COMBINE_INFORMATION_EX2
    Handle As LongPtr
    PagesCombined As LongPtr
    Flags As MemoryCombineFlags
    ProcessHandle As LongPtr
End Type

Public Type PHYSICAL_CHANNEL_RUN
    NodeNumber As Long
    ChannelNumber As Long
    BasePage As LongLong
    PageCount As LongLong
    Flags As Long
End Type
[Description("WARNING: Cannot be used as-is due to SAFEARRAY substitution for variable C-style array. Copy fixed info, redim, then fill Run(0).")]
Public Type SYSTEM_MEMORY_TOPOLOGY_INFORMATION
    NumberOfRuns As LongLong
    NumberOfNodes As Long
    NumberOfChannels As Long
    Run() As PHYSICAL_CHANNEL_RUN
End Type

Public Type SYSTEM_MEMORY_CHANNEL_INFORMATION
    ChannelNumber As Long
    ChannelHeatIndex As Long
    TotalPageCount As LongLong
    ZeroPageCount As LongLong
    FreePageCount As LongLong
    StandbyPageCount As LongLong
End Type


Public Type SYSTEM_DEVICE_DATA_INFORMATION
    DeviceId As UNICODE_STRING
    DataName As UNICODE_STRING
    DataType As Long
    DataBufferLength As Long
    DataBuffer As LongPtr
End Type

Public Type SYSTEM_POOL_LIMIT_MEM_INFO
    MemoryLimit As LongLong
    NotificationLimit As LongLong
End Type
Public Type WNF_STATE_NAME
    Data (0 To 1) As Long
End Type
Public Type SYSTEM_POOL_LIMIT_INFO
    PoolTag As Long
    MemLimits (0 To 1) As SYSTEM_POOL_LIMIT_MEM_INFO
    NotificationHandle As WNF_STATE_NAME
End Type
[Description("WARNING - Struct cannot be used as-is; LimitEntries is a C-style array.")]
Public Type SYSTEM_POOL_LIMIT_INFORMATION
    Version As Long
    EntryCount As Long
    LimitEntries () As SYSTEM_POOL_LIMIT_INFO
End Type

Public Enum SYSTEM_BUILD_VERSION_INFORMATION_FLAGS
	BVI_IsTopLevel = &H1
    BVI_IsChecked = &h2
End Enum
Public Type SYSTEM_BUILD_VERSION_INFORMATION
    LayerNumber As Integer
    LayerCount As Integer
    OsMajorVersion As Long
    OsMinorVersion As Long
    NtBuildNumber As Long
    NtBuildQfe As Long
    LayerName(0 To 127) As Byte
    NtBuildBranch(0 To 127) As Byte
    NtBuildLab(0 To 127) As Byte
    NtBuildLabEx(0 To 127) As Byte
    NtBuildStamp(0 To 25) As Byte
    NtBuildArch(0 To 15) As Byte
    Flags As SYSTEM_BUILD_VERSION_INFORMATION_FLAGS
End Type

' typedef struct _SYSTEM_SHADOW_STACK_INFORMATION
' {
    ' union
    ' {
        ' ULONG Flags;
        ' struct
        ' {
            ' ULONG CetCapable : 1;
            ' ULONG UserCetAllowed : 1;
            ' ULONG ReservedForUserCet : 6;
            ' ULONG KernelCetEnabled : 1;
            ' ULONG KernelCetAuditModeEnabled : 1;
            ' ULONG ReservedForKernelCet : 6;       // since Windows 10 build 21387
            ' ULONG Reserved : 16;
        ' };
    ' };
' } SYSTEM_SHADOW_STACK_INFORMATION, *PSYSTEM_SHADOW_STACK_INFORMATION;
Public Enum SystemShadowStackFlags
    SSSF_CetCapable = &H1
    SSSF_UserCetAllowed = &H2
    SSSF_KernelCetEnabled = &H80
    SSSF_KernelCetAuditModeEnabled = &H100
End Enum
Public Type SYSTEM_SHADOW_STACK_INFORMATION
	Flags As SystemShadowStackFlags
End Type

Public Type SYSTEM_FIRMWARE_RAMDISK_INFORMATION
    Version As Long
    BlockSize As Long
    BaseAddress As LongPtr
    Size As LongPtr
End Type




Public Type FILE_DIRECTORY_INFORMATION
  NextEntryOffset As Long
  FileIndex As Long
  CreationTime As FILETIME
  LastAccessTime As FILETIME
  LastWriteTime As FILETIME
  ChangeTime As FILETIME
  EndOfFile As LARGE_INTEGER
  AllocationSize As LARGE_INTEGER
  FileAttributes As FILE_ATTRIBUTES
  FileNameLength As Long
  FileName1(MAX_PATH - 1) As Integer 'OFFSET=&H40 (64)
End Type
Public Type FILE_FULL_DIR_INFORMATION
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Long
    EaSize As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_BOTH_DIR_INFORMATION
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Long
    EaSize As Long
    ShortNameLength As Byte
    ShortName(0 To 11) As Integer
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_BASIC_INFORMATION
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
End Type
Public Type FILE_STANDARD_INFORMATION
    AllocationSize As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    NumberOfLinks As Long
    DeletePending As Byte
    Directory As Byte
End Type
Public Type FILE_INTERNAL_INFORMATION
    IndexNumber As LARGE_INTEGER
End Type
Public Type FILE_EA_INFORMATION
    EaSize As Long
End Type
Public Type FILE_ACCESS_INFORMATION
    AccessFlags As FileAccessRights
End Type
Public Type FILE_NAME_INFORMATION
    FileNameLength As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_RENAME_INFORMATION
    ReplaceIfExists As Byte
    RootDirectory As LongPtr
    FileNameLength As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_LINK_INFORMATION
    ReplaceIfExists As Byte
    RootDirectory As LongPtr
    FileNameLength As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_NAMES_INFORMATION
    NextEntryOffset As Long
    FileIndex As Long
    FileNameLength As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_DISPOSITION_INFORMATION
    DeleteFile As Byte
End Type
Public Type FILE_POSITION_INFORMATION
    CurrentByteOffset As LARGE_INTEGER
End Type
Public Type FILE_FULL_EA_INFORMATION
    NextEntryOffset As Long
    Flags As Byte
    EaNameLength As Byte
    EaValueLength As Integer
    EaName(MAX_PATH - 1) As Byte
End Type
Public Type FILE_MODE_INFORMATION
    Mode As FileAccessFlags
End Type
Public Type FILE_ALIGNMENT_INFORMATION
    AlignmentRequirement As Long
End Type
Public Type FILE_ALL_INFORMATION
    BasicInformation As FILE_BASIC_INFORMATION
    StandardInformation As FILE_STANDARD_INFORMATION
    InternalInformation As FILE_INTERNAL_INFORMATION
    EaInformation As FILE_EA_INFORMATION
    AccessInformation As FILE_ACCESS_INFORMATION
    PositionInformation As FILE_POSITION_INFORMATION
    ModeInformation As FILE_MODE_INFORMATION
    AlignmentInformation As FILE_ALIGNMENT_INFORMATION
    NameInformation As FILE_NAME_INFORMATION
End Type
Public Type FILE_ALLOCATION_INFORMATION
    AllocationSize As LARGE_INTEGER
End Type
Public Type FILE_END_OF_FILE_INFORMATION
    EndOfFile As LARGE_INTEGER
End Type
Public Type FILE_STREAM_INFORMATION
    NextEntryOffset As Long
    StreamNameLength As Long
    StreamSize As LARGE_INTEGER
    StreamAllocationSize As LARGE_INTEGER
    StreamName(MAX_PATH - 1) As Integer
End Type
Public Enum FILE_PIPE_READ_MODE
    FILE_PIPE_BYTE_STREAM_MODE = &H00000000
    FILE_PIPE_MESSAGE_MODE = &H00000001
End Enum
Public Enum FILE_PIPE_COMPLETION_MODE
    FILE_PIPE_QUEUE_OPERATION = &H00000000
    FILE_PIPE_COMPLETE_OPERATION = &H00000001
End Enum
Public Type FILE_PIPE_INFORMATION
    ReadMode As FILE_PIPE_READ_MODE
    CompletionMode As FILE_PIPE_COMPLETION_MODE
End Type
Public Enum FILE_PIPE_TYPE
    FILE_PIPE_BYTE_STREAM_TYPE = &H00000000
    FILE_PIPE_MESSAGE_TYPE = &H00000001
    FILE_PIPE_ACCEPT_REMOTE_CLIENTS = &H00000000
    FILE_PIPE_REJECT_REMOTE_CLIENTS = &H00000002
    FILE_PIPE_TYPE_VALID_MASK = &H00000003
End Enum
Public Enum FILE_PIPE_CONFIG
    FILE_PIPE_INBOUND = &H00000000
    FILE_PIPE_OUTBOUND = &H00000001
    FILE_PIPE_FULL_DUPLEX = &H00000002
End Enum
Public Enum FILE_PIPE_STATE
    FILE_PIPE_DISCONNECTED_STATE = &H00000001
    FILE_PIPE_LISTENING_STATE = &H00000002
    FILE_PIPE_CONNECTED_STATE = &H00000003
    FILE_PIPE_CLOSING_STATE = &H00000004
End Enum
Public Enum FILE_PIPE_END
    FILE_PIPE_CLIENT_END = &H00000000
    FILE_PIPE_SERVER_END = &H00000001
End Enum
Public Type FILE_PIPE_LOCAL_INFORMATION
    NamedPipeType As FILE_PIPE_TYPE
    NamedPipeConfiguration As FILE_PIPE_CONFIG
    MaximumInstances As Long
    CurrentInstances As Long
    InboundQuota As Long
    ReadDataAvailable As Long
    OutboundQuota As Long
    WriteQuotaAvailable As Long
    NamedPipeState As FILE_PIPE_STATE
    NamedPipeEnd As FILE_PIPE_END
End Type
Public Type FILE_PIPE_REMOTE_INFORMATION
    CollectDataTime As LARGE_INTEGER
    MaximumCollectionCount As Long
End Type
Public Type FILE_MAILSLOT_QUERY_INFORMATION
    MaximumMessageSize As Long
    MailslotQuota As Long
    NextMessageSize As Long
    MessagesAvailable As Long
    ReadTimeout As LARGE_INTEGER
End Type
Public Type FILE_MAILSLOT_SET_INFORMATION
    ReadTimeout As LongPtr 'PLARGE_INTEGER
End Type
Public Enum NT_COMPRESSION_FORMAT
    COMPRESSION_FORMAT_NONE = (&H0000)  ' winnt
    COMPRESSION_FORMAT_DEFAULT = (&H0001)  ' winnt
    COMPRESSION_FORMAT_LZNT1 = (&H0002)  ' winnt
    COMPRESSION_FORMAT_XPRESS = (&H0003)  ' winnt
    COMPRESSION_FORMAT_XPRESS_HUFF = (&H0004)  ' winnt
    COMPRESSION_FORMAT_XP10 = (&H0005)  ' winnt
    COMPRESSION_FORMAT_MAX = (&H0005)
    COMPRESSION_ENGINE_STANDARD = (&H0000)  ' winnt
    COMPRESSION_ENGINE_MAXIMUM = (&H0100)  ' winnt
    COMPRESSION_ENGINE_HIBER = (&H0200)  ' winnt
    COMPRESSION_ENGINE_MAX = (&H0200)
    COMPRESSION_FORMAT_MASK = (&H00FF)
    COMPRESSION_ENGINE_MASK = (&HFF00&)
    COMPRESSION_FORMAT_ENGINE_MASK = (COMPRESSION_FORMAT_MASK Or COMPRESSION_ENGINE_MASK)
End Enum
Public Type FILE_COMPRESSION_INFORMATION
    CompressedFileSize As LARGE_INTEGER
    /* [ TypeHint(NT_COMPRESSION_FORMAT) ] */ CompressionFormat As Integer
    CompressionUnitShift As Byte
    ChunkShift As Byte
    ClusterShift As Byte
    Reserved(0 To 2) As Byte
End Type
Public Type FILE_OBJECTID_INFORMATION
    FileReference As LongLong
    ObjectId(0 To 15) As Byte ' GUID
    'union
    '{
    '    struct
    '    {
    '        UCHAR BirthVolumeId[16];
    '         UCHAR BirthObjectId[16];
    '         UCHAR DomainId[16];
    '     };
    '    UCHAR ExtendedInfo[48];
    '};
    IdOrInfo(47) As Byte
End Type
Public Type FILE_COMPLETION_INFORMATION
    Port As LongPtr
    Key As LongPtr
End Type
Public Type FILE_MOVE_CLUSTER_INFORMATION
    ClusterCount As Long
    RootDirectory As LongPtr
    FileNameLength As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_QUOTA_INFORMATION
    NextEntryOffset As Long
    SidLength As Long
    ChangeTime As LARGE_INTEGER
    QuotaUsed As LARGE_INTEGER
    QuotaThreshold As LARGE_INTEGER
    QuotaLimit As LARGE_INTEGER
    Sid As SID
End Type
Public Type FILE_REPARSE_POINT_INFORMATION
    FileReference As LongLong
    Tag As Long
End Type
Public Type FILE_NETWORK_OPEN_INFORMATION
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
End Type
Public Type FILE_ATTRIBUTE_TAG_INFORMATION
    FileAttributes As FILE_ATTRIBUTES
    ReparseTag As Long
End Type
Public Type FILE_TRACKING_INFORMATION
    DestinationFile As LongPtr
    ObjectInformationLength As Long
    ObjectInformation() As Byte
End Type
Public Type FILE_ID_BOTH_DIR_INFORMATION
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Long
    EaSize As Long
    ShortNameLength As Byte
    ShortName(0 To 11) As Integer
    FileId As LARGE_INTEGER
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_ID_FULL_DIR_INFORMATION
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Long
    EaSize As Long
    FileId As LARGE_INTEGER
    FileName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_VALID_DATA_LENGTH_INFORMATION
    ValidDataLength As LARGE_INTEGER
End Type
Public Type FILE_IO_COMPLETION_NOTIFICATION_INFORMATION
    Flags As FileCompletionModeFlags
End Type
Public Type FILE_IOSTATUSBLOCK_RANGE_INFORMATION
    IoStatusBlockRange As LongPtr
    Length As Long
End Type
Public Enum IO_PRIORITY_HINT
    IoPriorityVeryLow = 0 ' Defragging, content indexing and other background I/Os.
    IoPriorityLow   ' Prefetching for applications.
    IoPriorityNormal   ' Normal I/Os.
    IoPriorityHigh   ' Used by filesystems for checkpoint I/O.
    IoPriorityCritical  ' Used by memory manager. Not available for applications.
    MaxIoPriorityTypes
End Enum
Public Type FILE_IO_PRIORITY_HINT_INFORMATION
    PriorityHint As IO_PRIORITY_HINT
    Pad As Long 'DESCLSPEC_ALIGN(8)
End Type
Public Type FILE_SFIO_RESERVE_INFORMATION
    RequestsPerPeriod As Long
    Period As Long
    RetryFailures As Byte
    Discardable As Byte
    RequestSize As Long
    NumOutstandingRequests As Long
End Type
Public Type FILE_SFIO_VOLUME_INFORMATION
    MaximumRequestsPerPeriod As Long
    MinimumPeriod As Long
    MinimumTransferSize As Long
End Type
Public Type FILE_LINK_ENTRY_INFORMATION
    NextEntryOffset As Long
    ParentFileId As LongLong ' LARGE_INTEGER
    FileNameLength As Long
    FileName(0 To MAX_PATH) As Integer
End Type
Public Type FILE_LINKS_INFORMATION
    BytesNeeded As Long
    EntriesReturned As Long
    Entry As FILE_LINK_ENTRY_INFORMATION
End Type
[Description("⚠️ **WARNING:** Buffered variable C-style array; if NumberOfProcessIdsInList > 256, then use processing manually or via FILE_PROCESS_IDS_USING_FILE_INFORMATION_sa")]
Public Type FILE_PROCESS_IDS_USING_FILE_INFORMATION
    NumberOfProcessIdsInList As Long
    ProcessIdList(255) As LongPtr
End Type
[Description("⚠️ **WARNING:** You cannot use this struct as-is due to SAFEARRAY considerations. Copy the first 4 bytes, determine the size, then copy the rest into ProcessIdList(0) ")]
Public Type FILE_PROCESS_IDS_USING_FILE_INFORMATION_sa
    NumberOfProcessIdsInList As Long
    ProcessIdList() As LongPtr
End Type
Public Type FILE_NETWORK_PHYSICAL_NAME_INFORMATION
    FileNameLength As Long
    FileName(0 To MAX_PATH) As Integer
End Type
Public Enum FILE_TX_DIRINFO_FLAGS
    FILE_ID_GLOBAL_TX_DIR_INFO_FLAG_WRITELOCKED = &H00000001
    FILE_ID_GLOBAL_TX_DIR_INFO_FLAG_VISIBLE_TO_TX = &H00000002
    FILE_ID_GLOBAL_TX_DIR_INFO_FLAG_VISIBLE_OUTSIDE_TX = &H00000004
End Enum
Public Type FILE_ID_GLOBAL_TX_DIR_INFORMATION
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Long
    FileId As LARGE_INTEGER
    LockingTransactionId As UUID
    TxInfoFlags As FILE_TX_DIRINFO_FLAGS
    FileName(0 To MAX_PATH) As Integer
End Type
Public Type FILE_IS_REMOTE_DEVICE_INFORMATION
    IsRemote As Byte
End Type
Public Type FILE_NUMA_NODE_INFORMATION
    NodeNumber As Integer
End Type
Public Type FILE_STANDARD_LINK_INFORMATION
    NumberOfAccessibleLinks As Long
    TotalNumberOfLinks As Long
    DeletePending As Byte
    Directory As Byte
End Type
Public Type FILE_REMOTE_PROTOCOL_INFORMATION
    StructureVersion As Integer
    StructureSize As Integer
    Protocol As WNNC_CODES
    ProtocolMajorVersion As Integer
    ProtocolMinorVersion As Integer
    ProtocolRevision As Integer
    Reserved As Integer
    Flags As REMOTE_PROTOCOL_FLAGS
    GenericReserved(7) As Long
    ProtocolSpecific(15) As Long
End Type
Public Type FILE_VOLUME_NAME_INFORMATION
    DeviceNameLength As Long
    DeviceName(31) As Integer
End Type
Public Type FILE_ID_INFORMATION
    VolumeSerialNumber As LongLong
    FileId As FILE_ID_128
End Type
Public Type FILE_ID_EXTD_DIR_INFORMATION
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Long
    EaSize As Long
    ReparsePointTag As Long
    FileId As FILE_ID_128
    FileName(0 To MAX_PATH) As Integer
End Type
Public Type FILE_LINK_ENTRY_FULL_ID_INFORMATION
    NextEntryOffset As Long
    ParentFileId As FILE_ID_128
    FileNameLength As Long
    FileName(0 To MAX_PATH) As Integer
End Type
Public Type FILE_ID_EXTD_BOTH_DIR_INFORMATION
    NextEntryOffset As Long
    FileIndex As Long
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Long
    EaSize As Long
    ReparsePointTag As Long
    FileId As FILE_ID_128
    ShortNameLength As Byte
    ShortName(0 To 11) As Integer
    FileName(0 To MAX_PATH) As Integer
End Type
Public Enum FILE_DISPOSITION_EX_FLAGS
    FILE_DISPOSITION_FLAG_DO_NOT_DELETE = &H00000000
    FILE_DISPOSITION_FLAG_DELETE = &H00000001
    FILE_DISPOSITION_FLAG_POSIX_SEMANTICS = &H00000002
    FILE_DISPOSITION_FLAG_FORCE_IMAGE_SECTION_CHECK = &H00000004
    FILE_DISPOSITION_FLAG_ON_CLOSE = &H00000008
End Enum
Public Type FILE_DISPOSITION_INFO_EX
    Flags As FILE_DISPOSITION_EX_FLAGS
End Type
Public Enum FILE_RENAME_EX_FLAGS
    FILE_RENAME_REPLACE_IF_EXISTS = &H00000001
    FILE_RENAME_POSIX_SEMANTICS = &H00000002
' #endif
' #if (PHNT_VERSION >= PHNT_REDSTONE3)
    FILE_RENAME_SUPPRESS_PIN_STATE_INHERITANCE = &H00000004
' #endif
' #if (PHNT_VERSION >= PHNT_REDSTONE5)
    FILE_RENAME_SUPPRESS_STORAGE_RESERVE_INHERITANCE = &H00000008
    FILE_RENAME_NO_INCREASE_AVAILABLE_SPACE = &H00000010
    FILE_RENAME_NO_DECREASE_AVAILABLE_SPACE = &H00000020
    FILE_RENAME_PRESERVE_AVAILABLE_SPACE = &H00000030
    FILE_RENAME_IGNORE_READONLY_ATTRIBUTE = &H00000040
' #endif
' #if (PHNT_VERSION >= PHNT_19H1)
    FILE_RENAME_FORCE_RESIZE_TARGET_SR = &H00000080
    FILE_RENAME_FORCE_RESIZE_SOURCE_SR = &H00000100
    FILE_RENAME_FORCE_RESIZE_SR = &H00000180
End Enum
Public Type FILE_RENAME_INFORMATION_EX
    Flags As FILE_RENAME_EX_FLAGS
    RootDirectory As LongPtr
    FileNameLength As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Enum FILE_STORAGE_TIER_CLASS
    FileStorageTierClassUnspecified = 0
    FileStorageTierClassCapacity = 1
    FileStorageTierClassPerformance = 2
    FileStorageTierClassMax = 3
End Enum
Public Enum FILE_STORAGE_TIER_FLAGS
    FILE_STORAGE_TIER_FLAG_NO_SEEK_PENALTY = (&H00020000)
    FILE_STORAGE_TIER_FLAG_WRITE_BACK_CACHE = (&H00200000)
    FILE_STORAGE_TIER_FLAG_READ_CACHE = (&H00400000)
    FILE_STORAGE_TIER_FLAG_PARITY = (&H00800000)
    FILE_STORAGE_TIER_FLAG_SMR = (&H01000000)
End Enum
Public Type FILE_DESIRED_STORAGE_CLASS_INFORMATION
    ' Class type of the tier
    Class As FILE_STORAGE_TIER_CLASS
    ' Flags
    Flags As FILE_STORAGE_TIER_FLAGS
End Type
Public Type FILE_STAT_INFORMATION
    FileId As LARGE_INTEGER
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    ReparseTag As Long
    NumberOfLinks As Long
    EffectiveAccess As Long
End Type
Public Type FILE_MEMORY_PARTITION_INFORMATION
    OwnerPartitionHandle As LongPtr
    'union
    ' {
    '     struct
    '     {
    '         UCHAR NoCrossPartitionAccess;
    '         UCHAR Spare[3];
    '     };
    AllFlags As Long
    '} Flags;
End Type
Public Enum FILE_LX_FLAGS
    LX_FILE_METADATA_HAS_UID = &H1
    LX_FILE_METADATA_HAS_GID = &H2
    LX_FILE_METADATA_HAS_MODE = &H4
    LX_FILE_METADATA_HAS_DEVICE_ID = &H8
    LX_FILE_CASE_SENSITIVE_DIR = &H10
End Enum
Public Enum FILE_LX_MODE
    _S_IFMT  = &HF000&  ' File type mask
    _S_IFDIR  = &H4000  ' Directory
    _S_IFCHR  = &H2000  ' Character special
    _S_IFIFO  = &H1000  ' Pipe
    _S_IFREG  = &H8000&  ' Regular
    _S_IREAD  = &H0100  ' Read permission, owner
    _S_IWRITE  = &H0080  ' Write permission, owner
    _S_IEXEC  = &H0040  ' Execute/search permission, owner
    S_IFMT = _S_IFMT
    S_IFDIR = _S_IFDIR
    S_IFCHR = _S_IFCHR
    S_IFREG = _S_IFREG
    S_IREAD = _S_IREAD
    S_IWRITE = _S_IWRITE
    S_IEXEC = _S_IEXEC
End Enum
Public Type FILE_STAT_LX_INFORMATION
    FileId As LARGE_INTEGER
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    ReparseTag As Long
    NumberOfLinks As Long
    EffectiveAccess As FileAccessRights
    LxFlags As FILE_LX_FLAGS
    LxUid As Long
    LxGid As Long
    LxMode As FILE_LX_MODE
    LxDeviceIdMajor As Long
    LxDeviceIdMinor As Long
End Type
Public Type FILE_STAT_BASIC_INFORMATION
    FileId As LARGE_INTEGER
    CreationTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    AllocationSize As LARGE_INTEGER
    EndOfFile As LARGE_INTEGER
    FileAttributes As FILE_ATTRIBUTES
    ReparseTag As Long
    NumberOfLinks As Long
    DeviceType As DEVICE_TYPE
    DeviceCharacteristics As FILE_DEVICE_CHARACTERISTICS
    Reserved As Long
    VolumeSerialNumber As LARGE_INTEGER
    FileId128 As FILE_ID_128
End Type
Public Enum FILE_CS_FLAGS
    FILE_CS_FLAG_CASE_SENSITIVE_DIR = &H00000001
End Enum
Public Type FILE_CASE_SENSITIVE_INFORMATION
    Flags As FILE_CS_FLAGS
End Type
Public Enum FILE_LINK_EX_FLAGS
    FILE_LINK_REPLACE_IF_EXISTS = &H00000001
    FILE_LINK_POSIX_SEMANTICS = &H00000002
    FILE_LINK_SUPPRESS_STORAGE_RESERVE_INHERITANCE = &H00000008
    FILE_LINK_NO_INCREASE_AVAILABLE_SPACE = &H00000010
    FILE_LINK_NO_DECREASE_AVAILABLE_SPACE = &H00000020
    FILE_LINK_PRESERVE_AVAILABLE_SPACE = &H00000030
    FILE_LINK_IGNORE_READONLY_ATTRIBUTE = &H00000040
    '19H1+
    FILE_LINK_FORCE_RESIZE_TARGET_SR = &H00000080
    FILE_LINK_FORCE_RESIZE_SOURCE_SR = &H00000100
    FILE_LINK_FORCE_RESIZE_SR = &H00000180
End Enum
Public Type FILE_LINK_INFORMATION_EX
    Flags As FILE_LINK_EX_FLAGS
    RootDirectory As LongPtr
    FileNameLength As Long
    FileName(MAX_PATH - 1) As Integer
End Type
Public Enum FILE_KNOWN_FOLDER_TYPE
    KnownFolderNone = 0
    KnownFolderDesktop = 1
    KnownFolderDocuments = 2
    KnownFolderDownloads = 3
    KnownFolderMusic = 4
    KnownFolderPictures = 5
    KnownFolderVideos = 6
    KnownFolderOther = 7
    KnownFolderMax = 7
End Enum
Public Type FILE_KNOWN_FOLDER_INFORMATION
    Type As FILE_KNOWN_FOLDER_TYPE
End Type


Public Type IO_STATUS_BLOCK
    StatusPointer As LongPtr
    Information As LongPtr
End Type

Public Enum FILE_INFORMATION_CLASS
    FileDirectoryInformation = 1 ' FILE_DIRECTORY_INFORMATION
    FileFullDirectoryInformation ' FILE_FULL_DIR_INFORMATION
    FileBothDirectoryInformation ' FILE_BOTH_DIR_INFORMATION
    FileBasicInformation ' FILE_BASIC_INFORMATION
    FileStandardInformation ' FILE_STANDARD_INFORMATION
    FileInternalInformation ' FILE_INTERNAL_INFORMATION
    FileEaInformation ' FILE_EA_INFORMATION
    FileAccessInformation ' FILE_ACCESS_INFORMATION
    FileNameInformation ' FILE_NAME_INFORMATION
    FileRenameInformation ' FILE_RENAME_INFORMATION // 10
    FileLinkInformation ' FILE_LINK_INFORMATION
    FileNamesInformation ' FILE_NAMES_INFORMATION
    FileDispositionInformation ' FILE_DISPOSITION_INFORMATION
    FilePositionInformation ' FILE_POSITION_INFORMATION
    FileFullEaInformation ' FILE_FULL_EA_INFORMATION
    FileModeInformation ' FILE_MODE_INFORMATION
    FileAlignmentInformation ' FILE_ALIGNMENT_INFORMATION
    FileAllInformation ' FILE_ALL_INFORMATION
    FileAllocationInformation ' FILE_ALLOCATION_INFORMATION
    FileEndOfFileInformation ' FILE_END_OF_FILE_INFORMATION // 20
    FileAlternateNameInformation ' FILE_NAME_INFORMATION
    FileStreamInformation ' FILE_STREAM_INFORMATION
    FilePipeInformation ' FILE_PIPE_INFORMATION
    FilePipeLocalInformation ' FILE_PIPE_LOCAL_INFORMATION
    FilePipeRemoteInformation ' FILE_PIPE_REMOTE_INFORMATION
    FileMailslotQueryInformation ' FILE_MAILSLOT_QUERY_INFORMATION
    FileMailslotSetInformation ' FILE_MAILSLOT_SET_INFORMATION
    FileCompressionInformation ' FILE_COMPRESSION_INFORMATION
    FileObjectIdInformation ' FILE_OBJECTID_INFORMATION
    FileCompletionInformation ' FILE_COMPLETION_INFORMATION // 30
    FileMoveClusterInformation ' FILE_MOVE_CLUSTER_INFORMATION
    FileQuotaInformation ' FILE_QUOTA_INFORMATION
    FileReparsePointInformation ' FILE_REPARSE_POINT_INFORMATION
    FileNetworkOpenInformation ' FILE_NETWORK_OPEN_INFORMATION
    FileAttributeTagInformation ' FILE_ATTRIBUTE_TAG_INFORMATION
    FileTrackingInformation ' FILE_TRACKING_INFORMATION
    FileIdBothDirectoryInformation ' FILE_ID_BOTH_DIR_INFORMATION
    FileIdFullDirectoryInformation ' FILE_ID_FULL_DIR_INFORMATION
    FileValidDataLengthInformation ' FILE_VALID_DATA_LENGTH_INFORMATION
    FileShortNameInformation ' FILE_NAME_INFORMATION // 40
    FileIoCompletionNotificationInformation ' FILE_IO_COMPLETION_NOTIFICATION_INFORMATION // since VISTA
    FileIoStatusBlockRangeInformation ' FILE_IOSTATUSBLOCK_RANGE_INFORMATION
    FileIoPriorityHintInformation ' FILE_IO_PRIORITY_HINT_INFORMATION, FILE_IO_PRIORITY_HINT_INFORMATION_EX
    FileSfioReserveInformation ' FILE_SFIO_RESERVE_INFORMATION
    FileSfioVolumeInformation ' FILE_SFIO_VOLUME_INFORMATION
    FileHardLinkInformation ' FILE_LINKS_INFORMATION
    FileProcessIdsUsingFileInformation ' FILE_PROCESS_IDS_USING_FILE_INFORMATION
    FileNormalizedNameInformation ' FILE_NAME_INFORMATION
    FileNetworkPhysicalNameInformation ' FILE_NETWORK_PHYSICAL_NAME_INFORMATION
    FileIdGlobalTxDirectoryInformation ' FILE_ID_GLOBAL_TX_DIR_INFORMATION // since WIN7 // 50
    FileIsRemoteDeviceInformation ' FILE_IS_REMOTE_DEVICE_INFORMATION
    FileUnusedInformation
    FileNumaNodeInformation ' FILE_NUMA_NODE_INFORMATION
    FileStandardLinkInformation ' FILE_STANDARD_LINK_INFORMATION
    FileRemoteProtocolInformation ' FILE_REMOTE_PROTOCOL_INFORMATION
    FileRenameInformationBypassAccessCheck ' (kernel-mode only); FILE_RENAME_INFORMATION // since WIN8
    FileLinkInformationBypassAccessCheck ' (kernel-mode only); FILE_LINK_INFORMATION
    FileVolumeNameInformation ' FILE_VOLUME_NAME_INFORMATION
    FileIdInformation ' FILE_ID_INFORMATION
    FileIdExtdDirectoryInformation ' FILE_ID_EXTD_DIR_INFORMATION // 60
    FileReplaceCompletionInformation ' FILE_COMPLETION_INFORMATION // since WINBLUE
    FileHardLinkFullIdInformation ' FILE_LINK_ENTRY_FULL_ID_INFORMATION
    FileIdExtdBothDirectoryInformation ' FILE_ID_EXTD_BOTH_DIR_INFORMATION // since THRESHOLD
    FileDispositionInformationEx ' FILE_DISPOSITION_INFO_EX // since REDSTONE
    FileRenameInformationEx ' FILE_RENAME_INFORMATION_EX
    FileRenameInformationExBypassAccessCheck ' (kernel-mode only); FILE_RENAME_INFORMATION_EX
    FileDesiredStorageClassInformation ' FILE_DESIRED_STORAGE_CLASS_INFORMATION // since REDSTONE2
    FileStatInformation ' FILE_STAT_INFORMATION
    FileMemoryPartitionInformation ' FILE_MEMORY_PARTITION_INFORMATION // since REDSTONE3
    FileStatLxInformation ' FILE_STAT_LX_INFORMATION // since REDSTONE4 // 70
    FileCaseSensitiveInformation ' FILE_CASE_SENSITIVE_INFORMATION
    FileLinkInformationEx ' FILE_LINK_INFORMATION_EX // since REDSTONE5
    FileLinkInformationExBypassAccessCheck ' (kernel-mode only); FILE_LINK_INFORMATION_EX
    FileStorageReserveIdInformation ' FILE_SET_STORAGE_RESERVE_ID_INFORMATION
    FileCaseSensitiveInformationForceAccessCheck ' FILE_CASE_SENSITIVE_INFORMATION
    FileKnownFolderInformation ' FILE_KNOWN_FOLDER_INFORMATION // since WIN11
    FileMaximumInformation
End Enum

Public Enum FS_INFORMATION_CLASS
    FileFsVolumeInformation
    FileFsLabelInformation
    FileFsSizeInformation
    FileFsDeviceInformation
    FileFsAttributeInformation
    FileFsControlInformation
    FileFsFullSizeInformation
    FileFsObjectIdInformation
    FileFsDriverPathInformation
    FileFsVolumeFlagsInformation
    FileFsSectorSizeInformation
    FileFsDataCopyInformation
    FileFsMetadataSizeInformation
    FileFsFullSizeInformationEx
    FileFsMaximumInformation
End Enum
Public Type FILE_FS_VOLUME_INFORMATION
    VolumeCreationTime As LARGE_INTEGER
    VolumeSerialNumber As Long
    VolumeLabelLength As Long
    SupportsObjects As Byte
    VolumeLabel(MAX_PATH - 1) As Integer
End Type
Public Type FILE_FS_LABEL_INFORMATION
    VolumeLabelLength As Long
    VolumeLabel(MAX_PATH - 1) As Integer
End Type
Public Type FILE_FS_SIZE_INFORMATION
    TotalAllocationUnits As LARGE_INTEGER
    AvailableAllocationUnits As LARGE_INTEGER
    SectorsPerAllocationUnit As Long
    BytesPerSector As Long
End Type
Public Enum FILE_DEVICE_CHARACTERISTICS
    FILE_REMOVABLE_MEDIA = &H00000001
    FILE_READ_ONLY_DEVICE = &H00000002
    FILE_FLOPPY_DISKETTE = &H00000004
    FILE_WRITE_ONCE_MEDIA = &H00000008
    FILE_REMOTE_DEVICE = &H00000010
    FILE_DEVICE_IS_MOUNTED = &H00000020
    FILE_VIRTUAL_VOLUME = &H00000040
    FILE_AUTOGENERATED_DEVICE_NAME = &H00000080
    FILE_DEVICE_SECURE_OPEN = &H00000100
    FILE_CHARACTERISTIC_PNP_DEVICE = &H00000800
    FILE_CHARACTERISTIC_TS_DEVICE = &H00001000
    FILE_CHARACTERISTIC_WEBDAV_DEVICE = &H00002000
    FILE_CHARACTERISTIC_CSV = &H00010000
    FILE_DEVICE_ALLOW_APPCONTAINER_TRAVERSAL = &H00020000
    FILE_PORTABLE_DEVICE = &H00040000
    FILE_REMOTE_DEVICE_VSMB = &H00080000
    FILE_DEVICE_REQUIRE_SECURITY_CHECK = &H00100000
End Enum
Public Type FILE_FS_DEVICE_INFORMATION
    DeviceType As DEVICE_TYPE
    Characteristics As FILE_DEVICE_CHARACTERISTICS
End Type
[PackingAlignment(8)]
Public Type FILE_FS_DRIVER_PATH_INFORMATION
    DriverInPath As Byte
    DriverNameLength As Long
    DriverName(MAX_PATH - 1) As Integer
End Type
Public Type FILE_FS_FULL_SIZE_INFORMATION
    TotalAllocationUnits As LARGE_INTEGER
    CallerAvailableAllocationUnits As LARGE_INTEGER
    ActualAvailableAllocationUnits As LARGE_INTEGER
    SectorsPerAllocationUnit As Long
    BytesPerSector As Long
End Type
Public Type FILE_FS_OBJECTID_INFORMATION
    ObjectId(0 To 15) As Byte
    ExtendedInfo(0 To 47) As Byte
End Type
Public Type FILE_FS_ATTRIBUTE_INFORMATION
    FileSystemAttributes As FileSystemFlags
    MaximumComponentNameLength As Long
    FileSystemNameLength As Long
    FileSystemName(80) As Integer
End Type
Public Enum FS_CONTROL_FLAGS
    FILE_VC_QUOTA_NONE = &H00000000
    FILE_VC_QUOTA_TRACK = &H00000001
    FILE_VC_QUOTA_ENFORCE = &H00000002
    FILE_VC_QUOTA_MASK = &H00000003
    FILE_VC_CONTENT_INDEX_DISABLED = &H00000008
    FILE_VC_LOG_QUOTA_THRESHOLD = &H00000010
    FILE_VC_LOG_QUOTA_LIMIT = &H00000020
    FILE_VC_LOG_VOLUME_THRESHOLD = &H00000040
    FILE_VC_LOG_VOLUME_LIMIT = &H00000080
    FILE_VC_QUOTAS_INCOMPLETE = &H00000100
    FILE_VC_QUOTAS_REBUILDING = &H00000200
    FILE_VC_VALID_MASK = &H000003ff
End Enum
Public Type FILE_FS_CONTROL_INFORMATION
    FreeSpaceStartFiltering As LARGE_INTEGER
    FreeSpaceThreshold As LARGE_INTEGER
    FreeSpaceStopFiltering As LARGE_INTEGER
    DefaultQuotaThreshold As LARGE_INTEGER
    DefaultQuotaLimit As LARGE_INTEGER
    FileSystemControlFlags As FS_CONTROL_FLAGS
End Type
Public Type FILE_FS_DATA_COPY_INFORMATION
    NumberOfCopies As Long
End Type
Public Enum SECTOR_SIZE_FLAGS
    SSINFO_FLAGS_ALIGNED_DEVICE = &H00000001
'   If SET the partition is properly aligned with the alignment of the device
'   If NOT SET the partition is NOT properly aligned with the partition which can
'       lead to performance issues on this device
    SSINFO_FLAGS_PARTITION_ALIGNED_ON_DEVICE = &H00000002
'   If SET the device reports that it does not have a seek penalty (usually this means an SSD)
'   If NOT SET the device reports it does have a seek penalty or the property could not be queried
    SSINFO_FLAGS_NO_SEEK_PENALTY = &H00000004
'   If SET the device supports the TRIM operation
'   If NOT SET the device does not support trim operations or the property could not be queried
    SSINFO_FLAGS_TRIM_ENABLED = &H00000008
'   If SET this is a byte addressable storage device (i.e. a storage class memory or a persistent
'   memory device).
'   If NOT SET this is not a byte addressable storage device.
'   NOTE: File systems like NTFS and ReFS can support byte addressable mode where a file is directly
'   mapped to the physical address that the storage device expose, if the hardware supports
'   byte addressing (which is what this flag indicates) and the volume type allows byte
'   addressing.  To know if the volume type and the file system supports byte addressing, check
'   that FileSystemAttributes of FileFsAttributeInformation has FILE_DAX_VOLUME set.
    SSINFO_FLAGS_BYTE_ADDRESSABLE = &H00000010
'   If this value is set for the Sector and Partition alignment
'   fields then it means the alignment is not known and the
'   alignment flags have no meaning
    SSINFO_OFFSET_UNKNOWN = (&Hffffffff)
End Enum
Public Type FILE_FS_SECTOR_SIZE_INFORMATION
    LogicalBytesPerSector As Long
    PhysicalBytesPerSectorForAtomicity As Long
    PhysicalBytesPerSectorForPerformance As Long
    FileSystemEffectivePhysicalBytesPerSectorForAtomicity As Long
    Flags As SECTOR_SIZE_FLAGS
    ByteOffsetForSectorAlignment As Long
    ByteOffsetForPartitionAlignment As Long
End Type
Public Type FILE_FS_FULL_SIZE_INFORMATION_EX
    ActualTotalAllocationUnits As LongLong
    ActualAvailableAllocationUnits As LongLong
    ActualPoolUnavailableAllocationUnits As LongLong
    CallerTotalAllocationUnits As LongLong
    CallerAvailableAllocationUnits As LongLong
    CallerPoolUnavailableAllocationUnits As LongLong
    UsedAllocationUnits As LongLong
    TotalReservedAllocationUnits As LongLong
    VolumeStorageReserveAllocationUnits As LongLong
    AvailableCommittedAllocationUnits As LongLong
    PoolAvailableAllocationUnits As LongLong
    SectorsPerAllocationUnit As Long
    BytesPerSector As Long
End Type
Public Type FILE_FS_VOLUME_FLAGS_INFORMATION
    Flags As FileSystemFlags
End Type
Public Type FILE_FS_METADATA_SIZE_INFORMATION
    TotalMetadataAllocationUnits As LARGE_INTEGER
    SectorsPerAllocationUnit As Long
    BytesPerSector As Long
End Type

Public Type TOKEN_USER
    User As SID_AND_ATTRIBUTES
End Type

Public Type TOKEN_GROUPS
    GroupCount As Long
    Groups(100) As SID_AND_ATTRIBUTES
End Type

Public Type TOKEN_OWNER
    psid As LongPtr
End Type

Public Type TOKEN_PRIMARY_GROUP
    psid As LongPtr
End Type

Public Type TOKEN_DEFAULT_DACL
	DefaultDacl As LongPtr
End Type

Public Const TOKEN_SOURCE_LENGTH = 8
Public Type TOKEN_SOURCE
	SourceName(0 To (TOKEN_SOURCE_LENGTH - 1)) As Byte
	SourceIdentifier As LUID
End Type

Public Type TOKEN_CONTROL
	TokenId As LUID
    AuthenticationId As LUID
    ModifiedId As LUID
    TokenSource As TOKEN_SOURCE
End Type

Public Type TOKEN_STATISTICS
    TokenId As LUID
    AuthenticationId As LUID
    ExpirationTime As LARGE_INTEGER
    TokenType As TOKEN_TYPE
    ImpersonationLevel As SECURITY_IMPERSONATION_LEVEL
    DynamicCharged As Long
    DynamicAvailable As Long
    GroupCount As Long
    PrivilegeCount As Long
    ModifiedId As LUID
End Type

Public Type TOKEN_GROUPS_AND_PRIVILEGES
    SidCount As Long
    SidLength As Long
    Sids As LongPtr
    RestrictedSidCount As Long
    RestrictedSidLength As Long
    RestrictedSids As LongPtr
    PrivilegeCount As Long
    PrivilegeLength As Long
    Privileges As LongPtr
    AuthenticationId As LUID
End Type

Public Type TOKEN_ORIGIN
    OriginatingLogonSession As LUID
End Type

Public Enum TOKEN_ELEVATION_TYPE
    TokenElevationTypeDefault = 1
    TokenElevationTypeFull = 2
    TokenElevationTypeLimited = 3
End Enum

Public Type TOKEN_ELEVATION
    TokenIsElevated As Long
End Type

Public Enum TOKEN_MANDATORY_POLICY_FLAGS
    TOKEN_MANDATORY_POLICY_OFF = &H0
    TOKEN_MANDATORY_POLICY_NO_WRITE_UP = &H1
    TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN = &H2
    TOKEN_MANDATORY_POLICY_VALID_MASK = (TOKEN_MANDATORY_POLICY_NO_WRITE_UP Or TOKEN_MANDATORY_POLICY_NEW_PROCESS_MIN)
End Enum
Public Type TOKEN_MANDATORY_POLICY
    Policy As TOKEN_MANDATORY_POLICY_FLAGS
End Type

Public Type TOKEN_ACCESS_INFORMATION
    SidHash As LongPtr
    RestrictedSidHash As LongPtr
    Privileges As LongPtr
    AuthenticationId As LUID
    TokenType As TOKEN_TYPE
    ImpersonationLevel As SECURITY_IMPERSONATION_LEVEL
    MandatoryPolicy As TOKEN_MANDATORY_POLICY
    Flags As Long
    AppContainerNumber As Long
    PackageSid As LongPtr
    CapabilitiesHash As LongPtr
    TrustLevelSid As LongPtr
    SecurityAttributes As LongPtr
End Type

Public Enum MANDATORY_LEVEL
    MandatoryLevelUntrusted = 0
    MandatoryLevelLow
    MandatoryLevelMedium
    MandatoryLevelHigh
    MandatoryLevelSystem
    MandatoryLevelSecureProcess
    MandatoryLevelCount
End Enum
Public Type TOKEN_MANDATORY_LABEL
    Label As SID_AND_ATTRIBUTES
End Type

Public Type TOKEN_APPCONTAINER_INFORMATION
    TokenAppContainer As LongPtr
End Type

Public Type TOKEN_LINKED_TOKEN
    LinkedToken As LongPtr
End Type

[Description("⚠️ **WARNING:** WINDOWS 8 AND EARLIER MUST USE 56 instead!")]
Public Const POLICY_AUDIT_SUBCATEGORY_COUNT_Vista = 53
Public Const POLICY_AUDIT_SUBCATEGORY_COUNT_Win8 = 56
[Description("⚠️ **WARNING:** WINDOWS 10+ ONLY. WINDOWS 8 AND EARLIER MUST USE _Win8 or _Vista variants.!")]
Public Const POLICY_AUDIT_SUBCATEGORY_COUNT = 59 'Windows 10
[Description("⚠️ **WARNING:** WINDOWS 10+ ONLY. WINDOWS 8 AND EARLIER MUST USE _Win8 or _Vista variants.!")]
Public Type TOKEN_AUDIT_POLICY
	PerUserPolicy(POLICY_AUDIT_SUBCATEGORY_COUNT >> 1) As Byte
End Type
[Description("WINVISTA/7")]
Public Type TOKEN_AUDIT_POLICY_Vista
    PerUserPolicy(POLICY_AUDIT_SUBCATEGORY_COUNT_Vista >> 1) As Byte
End Type
[Description("WIN8 AND EARLIER")]
Public Type TOKEN_AUDIT_POLICY_Win8
    PerUserPolicy(POLICY_AUDIT_SUBCATEGORY_COUNT_win8 >> 1) As Byte
End Type
Public Type TOKEN_DEVICE_CLAIMS
    DeviceClaims As LongPtr
End Type
Public Type TOKEN_USER_CLAIMS
    UserClaims As LongPtr
End Type

Public Type TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE
    Version As LongLong
    Name As UNICODE_STRING
End Type
Public Type TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE
    pValue As LongPtr
    ValueLength As Long
End Type
Public Type TOKEN_SECURITY_ATTRIBUTE_V1
    Name As UNICODE_STRING
    ValueType As Integer
    Reserved As Integer
    Flags As Long
    ValueCount As Long
    '    union
    '    {
    '        PLONG64 pInt64;
    '        PULONG64 pUint64;
    '        PUNICODE_STRING pString;
    '        PTOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE pFqbn;
    '        PTOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE pOctetString;
    '    } Values;
    Values As LongPtr
End Type
Public Type TOKEN_SECURITY_ATTRIBUTES_INFORMATION
    Version As Integer
    Reserved As Integer
    AttributeCount As Long
    '    union
    '    {
    pAttributeV1 As LongPtr 'PTOKEN_SECURITY_ATTRIBUTE_V1
    '    } Attribute;
End Type


Public Enum KPROFILE_SOURCE
    ProfileTime
    ProfileAlignmentFixup
    ProfileTotalIssues
    ProfilePipelineDry
    ProfileLoadInstructions
    ProfilePipelineFrozen
    ProfileBranchInstructions
    ProfileTotalNonissues
    ProfileDcacheMisses
    ProfileIcacheMisses
    ProfileCacheMisses
    ProfileBranchMispredictions
    ProfileStoreInstructions
    ProfileFpInstructions
    ProfileIntegerInstructions
    Profile2Issue
    Profile3Issue
    Profile4Issue
    ProfileSpecialInstructions
    ProfileTotalCycles
    ProfileIcacheIssues
    ProfileDcacheAccesses
    ProfileMemoryBarrierCycles
    ProfileLoadLinkedIssues
    ProfileMaximum
End Enum

Public Type GROUP_AFFINITY
    Mask As LongPtr 'KAFFINITY
    Group As Integer
    Reserved(0 To 2) As Integer
End Type

Public Type POWER_PLATFORM_INFORMATION
    AoAc As Byte
End Type
Public Type PROCESSOR_POWER_INFORMATION
    Number As Long
    MaxMhz As Long
    CurrentMhz As Long
    MhzLimit As Long
    MaxIdleState As Long
    CurrentIdleState As Long
End Type

Public Enum SHUTDOWN_ACTION
    ShutdownNoReboot
    ShutdownReboot
    ShutdownPowerOff
End Enum

Public Enum FileCreateDisposition
    FILE_SUPERSEDE = &H00000000
    FILE_OPEN = &H00000001
    FILE_CREATE = &H00000002
    FILE_OPEN_IF = &H00000003
    FILE_OVERWRITE = &H00000004
    FILE_OVERWRITE_IF = &H00000005
    FILE_MAXIMUM_DISPOSITION = &H00000005
End Enum
Public Enum FileCreateOutcome
    FILE_SUPERSEDED = &H00000000
    FILE_OPENED = &H00000001
    FILE_CREATED = &H00000002
    FILE_OVERWRITTEN = &H00000003
    FILE_EXISTS = &H00000004
    FILE_DOES_NOT_EXIST = &H00000005
End Enum
Public Enum FileAccessFlags
    FILE_DIRECTORY_FILE = &H00000001
    FILE_WRITE_THROUGH = &H00000002
    FILE_SEQUENTIAL_ONLY = &H00000004
    FILE_NO_INTERMEDIATE_BUFFERING = &H00000008
    FILE_SYNCHRONOUS_IO_ALERT = &H00000010
    FILE_SYNCHRONOUS_IO_NONALERT = &H00000020
    FILE_NON_DIRECTORY_FILE = &H00000040
    FILE_CREATE_TREE_CONNECTION = &H00000080
    FILE_COMPLETE_IF_OPLOCKED = &H00000100
    FILE_NO_EA_KNOWLEDGE = &H00000200
    FILE_OPEN_REMOTE_INSTANCE = &H00000400
    FILE_RANDOM_ACCESS = &H00000800
    FILE_DELETE_ON_CLOSE = &H00001000
    FILE_OPEN_BY_FILE_ID = &H00002000
    FILE_OPEN_FOR_BACKUP_INTENT = &H00004000
    FILE_NO_COMPRESSION = &H00008000&
' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN7)
    FILE_OPEN_REQUIRING_OPLOCK = &H00010000
    FILE_DISALLOW_EXCLUSIVE = &H00020000
    FILE_SESSION_AWARE = &H00040000
    FILE_RESERVE_OPFILTER = &H00100000
    FILE_OPEN_REPARSE_POINT = &H00200000
    FILE_OPEN_NO_RECALL = &H00400000
    FILE_OPEN_FOR_FREE_SPACE_QUERY = &H00800000
    'Windows 11
    FILE_CONTAINS_EXTENDED_CREATE_INFORMATION = &H10000000
' #endif

    FILE_VALID_OPTION_FLAGS = &H00ffffff
    FILE_VALID_PIPE_OPTION_FLAGS = &H00000032
    FILE_VALID_MAILSLOT_OPTION_FLAGS = &H00000032
    FILE_VALID_SET_FLAGS = &H00000036
End Enum

Public Type PEB_LDR_DATA
	Length As Long
    Initialized As Byte
    SsHandle As LongPtr
    InLoadOrderModuleList As LIST_ENTRY
    InMemoryOrderModuleList As LIST_ENTRY
    InInitializationOrderModuleList As LIST_ENTRY
    EntryInProgress As LongPtr
    ShutdownInProgress As Byte
    ShutdownThreadId As LongPtr
End Type

Public Type LDR_MODULE
    InLoadOrderModuleList As LIST_ENTRY
    InMemoryOrderModuleList As LIST_ENTRY
    InInitializationOrderModuleList As LIST_ENTRY
    BaseAddress As LongPtr
    EntryPoint As LongPtr
    SizeOfImage As Long
    FullDllName As UNICODE_STRING
    BaseDllName As UNICODE_STRING
    Flags As Long
    LoadCount As Integer
    TlsIndex As Integer
    HashTableEntry As LIST_ENTRY
    TimeDateStamp As Long
End Type

Public Type PEB_FREE_BLOCK
    Next As LongPtr 'PEB_FREE_BLOCK*
    Size As Long
End Type



Public Enum IrpFlags
    IRP_NOCACHE = &H1
    IRP_PAGING_IO = &H2
    IRP_MOUNT_COMPLETION = &H2
    IRP_SYNCHRONOUS_API = &H4
    IRP_ASSOCIATED_IRP = &H8
    IRP_BUFFERED_IO = &H10
    IRP_DEALLOCATE_BUFFER = &H20
    IRP_INPUT_OPERATION = &H40
    IRP_SYNCHRONOUS_PAGING_IO = &H40
    IRP_CREATE_OPERATION = &H80
    IRP_READ_OPERATION = &H100
    IRP_WRITE_OPERATION = &H200
    IRP_CLOSE_OPERATION = &H400
    IRP_DEFER_IO_COMPLETION = &H800
    IRP_OB_QUERY_NAME = &H1000
    IRP_HOLD_DEVICE_QUEUE = &H2000
'  Define I/O request packet (IRP) alternate flags for allocation control.
    IRP_QUOTA_CHARGED = &H1
    IRP_ALLOCATED_MUST_SUCCEED = &H2
    IRP_ALLOCATED_FIXED_SIZE = &H4
    IRP_LOOKASIDE_ALLOCATION = &H8
End Enum

Public Enum LDR_DATA_TABLE_FLAGS
    LDRP_STATIC_LINK = &H00000002  ' ntdll
    LDRP_IMAGE_DLL = &H00000004  ' ntdll
    LDRP_LOAD_IN_PROGRESS = &H00001000  ' ntdll
    LDRP_UNLOAD_IN_PROGRESS = &H00002000  ' ntdll
    LDRP_ENTRY_PROCESSED = &H00004000  ' ntldr, ntoskrnl and ntdll
    LDRP_ENTRY_INSERTED = &H00008000&
    LDRP_CURRENT_LOAD = &H00010000
    LDRP_FAILED_BUILTIN_LOAD = &H00020000  ' ntoskrnl
' 6.2 and later:
    LDRP_PACKAGED_BINARY = &H00000001
    LDRP_MARKED_FOR_REMOVAL = &H00000002
    LDRP_LOAD_NOTIFICATION_SENT = &H00000008
    LDRP_TELEMETRY_ENTRY_PROCESSED = &H00000010
    LDRP_PROCESS_STATIC_IMPORT = &H00000020
    LDRP_IN_LEGACY_LISTS = &H00000040
    LDRP_IN_INDEXES = &H00000080
    LDRP_SHIM_DLL = &H00000100
    LDRP_IN_EXCEPTION_TABLE = &H00000200
    LDRP_LOAD_CONFIG_PROCESSED = &H00002000  'Win10+
    LDRP_PROTECTED_PAYLOAD = &H00008000&  'Win10+
    LDRP_DONT_CALL_FOR_THREADS = &H00040000
    LDRP_PROCESS_ATTACH_CALLED = &H00080000
    LDRP_PROCESS_ATTACH_FAILED = &H00100000
    LDRP_COR_DEFERRED_VALIDATE = &H00200000
    LDRP_COR_IMAGE = &H00400000
    LDRP_DONT_RELOCATE = &H00800000
    LDRP_COR_IL_ONLY = &H01000000
    LDRP_CHPE_IMAGE = &H02000000
    LDRP_CHPE_EMULATOR_IMAGE = &H04000000
    LDRP_REDIRECTED = &H10000000
    LDRP_COMPAT_DATABASE_PROCESSED = &H80000000
End Enum
[Description("This structure is complete only up until Windows XP. Additional members have been added.")]
Public Type LDR_DATA_TABLE_ENTRY
    InLoadOrderLinks As LIST_ENTRY
    InMemoryOrderLinks As LIST_ENTRY
    InInitializationOrderLinks As LIST_ENTRY
    DllBase As LongPtr
    EntryPoint As LongPtr
    SizeOfImage As Long
    FullDllName As UNICODE_STRING
    BaseDllName As UNICODE_STRING
    Flags As LDR_DATA_TABLE_FLAGS
    LoadCount As Integer 'Obsolete starting in Win8
    TlsIndex As Integer
    HashLinks As LIST_ENTRY
    TimeDateStamp As Long
    EntryPointActivationContext As LongPtr
    PatchInformationOrLock As LongPtr 'PatchInfo on XP-8, Lock on 10
End Type

[Description("This structure is complete only up until Windows XP. Additional members have been added.")]
Public Type LDR_DATA_TABLE_ENTRY32
    InLoadOrderLinks As LIST_ENTRY32
    InMemoryOrderLinks As LIST_ENTRY32
    InInitializationOrderLinks As LIST_ENTRY32
    DllBase As Long
    EntryPoint As Long
    SizeOfImage As Long
    FullDllName As UNICODE_STRING32
    BaseDllName As UNICODE_STRING32
    Flags As LDR_DATA_TABLE_FLAGS
    LoadCount As Integer 'Obsolete starting in Win8
    TlsIndex As Integer
    HashLinks As LIST_ENTRY32
    TimeDateStamp As Long
    EntryPointActivationContext As Long
    PatchInformationOrLock As Long 'PatchInfo on XP-8, Lock on 10
End Type
[Description("This structure is complete only up until Windows XP. Additional members have been added.")]
Public Type LDR_DATA_TABLE_ENTRY64
    InLoadOrderLinks As LIST_ENTRY64
    InMemoryOrderLinks As LIST_ENTRY64
    InInitializationOrderLinks As LIST_ENTRY64
    DllBase As LongLong
    EntryPoint As LongLong
    SizeOfImage As Long
    FullDllName As UNICODE_STRING64
    BaseDllName As UNICODE_STRING64
    Flags As LDR_DATA_TABLE_FLAGS
    LoadCount As Integer 'Obsolete starting in Win8
    TlsIndex As Integer
    HashLinks As LIST_ENTRY64
    TimeDateStamp As Long
    EntryPointActivationContext As LongLong
    PatchInformationOrLock As LongLong 'PatchInfo on XP-8, Lock on 10
End Type
Public Enum PROCESS_CREATE_FLAGS
    PROCESS_CREATE_FLAGS_BREAKAWAY = &H00000001  ' NtCreateProcessEx & NtCreateUserProcess
    PROCESS_CREATE_FLAGS_NO_DEBUG_INHERIT = &H00000002  ' NtCreateProcessEx & NtCreateUserProcess
    PROCESS_CREATE_FLAGS_INHERIT_HANDLES = &H00000004  ' NtCreateProcessEx & NtCreateUserProcess
    PROCESS_CREATE_FLAGS_OVERRIDE_ADDRESS_SPACE = &H00000008  ' NtCreateProcessEx only
    PROCESS_CREATE_FLAGS_LARGE_PAGES = &H00000010  ' NtCreateProcessEx only, requires SeLockMemory
    PROCESS_CREATE_FLAGS_LARGE_PAGE_SYSTEM_DLL = &H00000020  ' NtCreateProcessEx only, requires SeLockMemory
    PROCESS_CREATE_FLAGS_PROTECTED_PROCESS = &H00000040  ' NtCreateUserProcess only
    PROCESS_CREATE_FLAGS_CREATE_SESSION = &H00000080  ' NtCreateProcessEx & NtCreateUserProcess, requires SeLoadDriver
    PROCESS_CREATE_FLAGS_INHERIT_FROM_PARENT = &H00000100  ' NtCreateProcessEx & NtCreateUserProcess
    PROCESS_CREATE_FLAGS_SUSPENDED = &H00000200  ' NtCreateProcessEx & NtCreateUserProcess
    PROCESS_CREATE_FLAGS_FORCE_BREAKAWAY = &H00000400  ' NtCreateProcessEx & NtCreateUserProcess, requires SeTcb
    PROCESS_CREATE_FLAGS_MINIMAL_PROCESS = &H00000800  ' NtCreateProcessEx only
    PROCESS_CREATE_FLAGS_RELEASE_SECTION = &H00001000  ' NtCreateProcessEx & NtCreateUserProcess
    PROCESS_CREATE_FLAGS_CLONE_MINIMAL = &H00002000  ' NtCreateProcessEx only
    PROCESS_CREATE_FLAGS_CLONE_MINIMAL_REDUCED_COMMIT = &H00004000  '
    PROCESS_CREATE_FLAGS_AUXILIARY_PROCESS = &H00008000& ' NtCreateProcessEx & NtCreateUserProcess, requires SeTcb
    PROCESS_CREATE_FLAGS_CREATE_STORE = &H00020000  ' NtCreateProcessEx only
    PROCESS_CREATE_FLAGS_USE_PROTECTED_ENVIRONMENT = &H00040000  ' NtCreateProcessEx & NtCreateUserProces
End Enum
Public Enum THREAD_CREATE_FLAGS
    THREAD_CREATE_FLAGS_CREATE_SUSPENDED = &H00000001  ' NtCreateUserProcess & NtCreateThreadEx
    THREAD_CREATE_FLAGS_SKIP_THREAD_ATTACH = &H00000002  ' NtCreateThreadEx only
    THREAD_CREATE_FLAGS_HIDE_FROM_DEBUGGER = &H00000004  ' NtCreateThreadEx only
    THREAD_CREATE_FLAGS_LOADER_WORKER = &H00000010  ' NtCreateThreadEx only
    THREAD_CREATE_FLAGS_SKIP_LOADER_INIT = &H00000020  ' NtCreateThreadEx only
    THREAD_CREATE_FLAGS_BYPASS_PROCESS_FREEZE = &H00000040  ' NtCreateThreadEx only
    THREAD_CREATE_FLAGS_INITIAL_THREAD = &H00000080  ' ?
End Enum

Public Enum PSCI_OUTFLAGS
    PSCI_ProtectedProcess = &H1
    PSCI_AddressSpaceOverride = &H2
    PSCI_DevOverrideEnabled = &H4
    PSCI_ManifestDetected = &H8
    PSCI_ProtectedProcessLight = &H10
End Enum
Public Enum PSCI_INITFLAGS
    PSCI_WriteOutputOnExit = &H1
    PSCI_DetectManifest = &H2
    PSCI_IFEOSkipDebugger = &H4
End Enum

Public Enum PS_CREATE_STATE
    PsCreateInitialState
    PsCreateFailOnFileOpen
    PsCreateFailOnSectionCreate
    PsCreateFailExeFormat
    PsCreateFailMachineMismatch
    PsCreateFailExeName
    PsCreateSuccess
    PsCreateMaximumStates
End Enum
Public Type PS_CREATE_INFO
    Size As LongPtr
    State As PS_CREATE_STATE
    #If Win64 Then
        uniondata(75) As Byte
    #Else
        uniondata(63) As Byte
    #End If
    /*
    union {
    struct {
       HANDLE FileHandle;
    } FailSection;
    struct {
       USHORT DllCharacteristics;
    } ExeFormat;
    struct {
       HANDLE IFEOKey;
    } ExeName;
    struct {
      ULONG InitFlags; //PSCI_INITFLAGS
      ACCESS_MASK AdditionalFileAccess;
    }
    struct {
        ULONG OutputFlags; //PSCI_OUTFLAGS
        HANDLE FileHandle;
        HANDLE SectionHandle;
        ULONGLONG  UserProcessParametersNative;
        ULONG UserProcessParametersWow64;
        ULONG CurrentParameterFlags;
        ULONGLONG PebAddressNative;
        ULONG PebAddressWow64;
        ULONGLONG ManifestAddress;
        ULONG ManifestSize
    }
    */
End Type
Public Type PS_CREATE_INFO_SUCCESS_U
    OutputFlags As Long 'PSCI_OUTFLAGS
    FileHandle As LongPtr
    SectionHandle As LongPtr
    UserProcessParametersNative As LongLong
    UserProcessParametersWow64 As Long
    CurrentParameterFlags As Long
    PebAddressNative As LongLong
    PebAddressWow64 As Long
    ManifestAddress As LongLong
    ManifestSiz As Long
End Type
Public Enum PS_ATTRIBUTE_NUM
    PsAttributeParentProcess ' in HANDLE
    PsAttributeDebugPort ' in HANDLE
    PsAttributeToken ' in HANDLE
    PsAttributeClientId ' out PCLIENT_ID
    PsAttributeTebAddress ' out PTEB *
    PsAttributeImageName ' in PWSTR
    PsAttributeImageInfo ' out PSECTION_IMAGE_INFORMATION
    PsAttributeMemoryReserve ' in PPS_MEMORY_RESERVE
    PsAttributePriorityClass ' in UCHAR
    PsAttributeErrorMode ' in ULONG
    PsAttributeStdHandleInfo ' 10, in PPS_STD_HANDLE_INFO
    PsAttributeHandleList ' in PHANDLE
    PsAttributeGroupAffinity ' in PGROUP_AFFINITY
    PsAttributePreferredNode ' in PUSHORT
    PsAttributeIdealProcessor ' in PPROCESSOR_NUMBER
    PsAttributeUmsThread ' ? in PUMS_CREATE_THREAD_ATTRIBUTES
    PsAttributeMitigationOptions ' in UCHAR
    PsAttributeProtectionLevel ' in ULONG
    PsAttributeSecureProcess ' since THRESHOLD
    PsAttributeJobList
    PsAttributeChildProcessPolicy ' since THRESHOLD2
    PsAttributeAllApplicationPackagesPolicy ' since REDSTONE
    PsAttributeWin32kFilter
    PsAttributeSafeOpenPromptOriginClaim
    PsAttributeBnoIsolation ' PS_BNO_ISOLATION_PARAMETERS
    PsAttributeDesktopAppPolicy ' in ULONG
    PsAttributeChpe ' since REDSTONE3
    PsAttributeMitigationAuditOptions ' since 21H1
    PsAttributeMachineType ' since WIN11
    PsAttributeComponentFilter
    PsAttributeEnableOptionalXStateFeatures
    PsAttributeMax
End Enum
Public Const PS_ATTRIBUTE_NUMBER_MASK  = &H0000ffff
Public Const PS_ATTRIBUTE_THREAD  = &H00010000  ' may be used with thread creation
Public Const PS_ATTRIBUTE_INPUT  = &H00020000  ' input only
Public Const PS_ATTRIBUTE_ADDITIVE  = &H00040000  ' "accumulated" e.g. bitmasks, counters, etc.

Public Enum PS_ATTRIBUTE_ID
    PS_ATTRIBUTE_PARENT_PROCESS = &H60000
    PS_ATTRIBUTE_DEBUG_PORT = &H60001
    PS_ATTRIBUTE_TOKEN = &H60002
    PS_ATTRIBUTE_CLIENT_ID = &H10003
    PS_ATTRIBUTE_TEB_ADDRESS = &H10004
    PS_ATTRIBUTE_IMAGE_NAME = &H20005
    PS_ATTRIBUTE_IMAGE_INFO = &H6
    PS_ATTRIBUTE_MEMORY_RESERVE = &H20007
    PS_ATTRIBUTE_PRIORITY_CLASS = &H20008
    PS_ATTRIBUTE_ERROR_MODE = &H20009
    PS_ATTRIBUTE_STD_HANDLE_INFO = &H2000a
    PS_ATTRIBUTE_HANDLE_LIST = &H2000b
    PS_ATTRIBUTE_GROUP_AFFINITY = &H3000c
    PS_ATTRIBUTE_PREFERRED_NODE = &H2000d
    PS_ATTRIBUTE_IDEAL_PROCESSOR = &H3000e
    PS_ATTRIBUTE_UMS_THREAD = &H3000f
    PS_ATTRIBUTE_MITIGATION_OPTIONS = &H60010
    PS_ATTRIBUTE_PROTECTION_LEVEL = &H60011
    PS_ATTRIBUTE_SECURE_PROCESS = &H20012
    PS_ATTRIBUTE_JOB_LIST = &H20013
    PS_ATTRIBUTE_CHILD_PROCESS_POLICY = &H20014
    PS_ATTRIBUTE_ALL_APPLICATION_PACKAGES_POLICY = &H20015
    PS_ATTRIBUTE_WIN32K_FILTER = &H20016
    PS_ATTRIBUTE_SAFE_OPEN_PROMPT_ORIGIN_CLAIM = &H20017
    PS_ATTRIBUTE_BNO_ISOLATION = &H20018
    PS_ATTRIBUTE_DESKTOP_APP_POLICY = &H20019
End Enum
Public Type PS_ATTRIBUTE
    Attribute As LongPtr
    Size As LongPtr
    'union
    ' {
    '    ULONG_PTR Value;
    ValuePtrOrValue As LongPtr
    '};
    ReturnLength As LongPtr 'PSIZE_T
End Type
[Description("IMPORTANT: Set length only to length *actually used*-- this is buffered to the maximum possible, but they can't be uninitialized/unused.")]
Public Type PS_ATTRIBUTE_LIST
    TotalLength As LongPtr
    Attributes(0 To 30) As PS_ATTRIBUTE
End Type

Public Type PS_MEMORY_RESERVE
    ReserveAddress As LongPtr
    ReserveSize As LongPtr
End Type
Public Enum PS_STD_HANDLES
    PS_STD_INPUT_HANDLE = &H1
    PS_STD_OUTPUT_HANDLE = &H2
    PS_STD_ERROR_HANDLE = &H4
End Enum
Public Enum PS_STD_HANDLE_STATE
    PsNeverDuplicate
    PsRequestDuplicate ' duplicate standard handles specified by PseudoHandleMask, and only if StdHandleSubsystemType matches the image subsystem
    PsAlwaysDuplicate ' always duplicate standard handles
    PsMaxStdHandleStates
End Enum
Public Type PS_STD_HANDLE_INFO
    /* [ TypeHint(PS_STD_HANDLE_STATE, PS_STD_HANDLES) ] */ Flags As PS_STD_HANDLE_STATE
    StdHandleSubsystemType As Long
End Type

Public Type PS_BNO_ISOLATION_PARAMETERS
    IsolationPrefix As UNICODE_STRING
    HandleCount As Long
    Handles As LongPtr
    IsolationEnabled As Byte
End Type

Public Enum PS_MITIGATION_OPTION
    PS_MITIGATION_OPTION_NX
    PS_MITIGATION_OPTION_SEHOP
    PS_MITIGATION_OPTION_FORCE_RELOCATE_IMAGES
    PS_MITIGATION_OPTION_HEAP_TERMINATE
    PS_MITIGATION_OPTION_BOTTOM_UP_ASLR
    PS_MITIGATION_OPTION_HIGH_ENTROPY_ASLR
    PS_MITIGATION_OPTION_STRICT_HANDLE_CHECKS
    PS_MITIGATION_OPTION_WIN32K_SYSTEM_CALL_DISABLE
    PS_MITIGATION_OPTION_EXTENSION_POINT_DISABLE
    PS_MITIGATION_OPTION_PROHIBIT_DYNAMIC_CODE
    PS_MITIGATION_OPTION_CONTROL_FLOW_GUARD
    PS_MITIGATION_OPTION_BLOCK_NON_MICROSOFT_BINARIES
    PS_MITIGATION_OPTION_FONT_DISABLE
    PS_MITIGATION_OPTION_IMAGE_LOAD_NO_REMOTE
    PS_MITIGATION_OPTION_IMAGE_LOAD_NO_LOW_LABEL
    PS_MITIGATION_OPTION_IMAGE_LOAD_PREFER_SYSTEM32
    PS_MITIGATION_OPTION_RETURN_FLOW_GUARD
    PS_MITIGATION_OPTION_LOADER_INTEGRITY_CONTINUITY
    PS_MITIGATION_OPTION_STRICT_CONTROL_FLOW_GUARD
    PS_MITIGATION_OPTION_RESTRICT_SET_THREAD_CONTEXT
    PS_MITIGATION_OPTION_ROP_STACKPIVOT 'since REDSTONE3
    PS_MITIGATION_OPTION_ROP_CALLER_CHECK
    PS_MITIGATION_OPTION_ROP_SIMEXEC
    PS_MITIGATION_OPTION_EXPORT_ADDRESS_FILTER
    PS_MITIGATION_OPTION_EXPORT_ADDRESS_FILTER_PLUS
    PS_MITIGATION_OPTION_RESTRICT_CHILD_PROCESS_CREATION
    PS_MITIGATION_OPTION_IMPORT_ADDRESS_FILTER
    PS_MITIGATION_OPTION_MODULE_TAMPERING_PROTECTION
    PS_MITIGATION_OPTION_RESTRICT_INDIRECT_BRANCH_PREDICTION
    PS_MITIGATION_OPTION_SPECULATIVE_STORE_BYPASS_DISABLE ' since REDSTONE5
    PS_MITIGATION_OPTION_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY
    PS_MITIGATION_OPTION_CET_USER_SHADOW_STACKS
    PS_MITIGATION_OPTION_USER_CET_SET_CONTEXT_IP_VALIDATION 'since 21H1
    PS_MITIGATION_OPTION_BLOCK_NON_CET_BINARIES
    PS_MITIGATION_OPTION_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY
    PS_MITIGATION_OPTION_REDIRECTION_TRUST
End Enum

Public Type RTL_HEAP_PARAMETERS
    Length As Long
    SegmentReserve As LongPtr
    SegmentCommit As LongPtr
    DeCommitFreeBlockThreshold As LongPtr
    DeCommitTotalFreeThreshold As LongPtr
    MaximumAllocationSize As LongPtr
    VirtualMemoryThreshold As LongPtr
    InitialCommit As LongPtr
    InitialReserve As LongPtr
    CommitRoutine As LongPtr 'PRTL_HEAP_COMMIT_ROUTINE
    Reserved(0 To 1) As LongPtr
End Type

Public Enum RTL_UPP_FLAGS
    RTL_USER_PROCESS_PARAMETERS_NORMALIZED = &H01
    RTL_USER_PROCESS_PARAMETERS_PROFILE_USER = &H02
    RTL_USER_PROCESS_PARAMETERS_PROFILE_KERNEL = &H04
    RTL_USER_PROCESS_PARAMETERS_PROFILE_SERVER = &H08
    RTL_USER_PROCESS_PARAMETERS_UNKNOWN = &H10
    RTL_USER_PROCESS_PARAMETERS_RESERVE_1MB = &H20
    RTL_USER_PROCESS_PARAMETERS_RESERVE_16MB = &H40
    RTL_USER_PROCESS_PARAMETERS_CASE_SENSITIVE = &H80
    RTL_USER_PROCESS_PARAMETERS_DISABLE_HEAP_CHECKS = &H100
    RTL_USER_PROCESS_PARAMETERS_PROCESS_OR_1 = &H200
    RTL_USER_PROCESS_PARAMETERS_PROCESS_OR_2 = &H400
    RTL_USER_PROCESS_PARAMETERS_PRIVATE_DLL_PATH = &H1000
    RTL_USER_PROCESS_PARAMETERS_LOCAL_DLL_PATH = &H2000
    RTL_USER_PROCESS_PARAMETERS_IMAGE_KEY_MISSING = &H4000
    RTL_USER_PROCESS_PARAMETERS_NX = &H20000
End Enum

Public Type _SEP_TOKEN_PRIVILEGES
	Present As LongLong
    Enabled As LongLong
    EnabledByDefault As LongLong
End Type

Public Type _SEP_AUDIT_POLICY
	AdtTokenPolicy As TOKEN_AUDIT_POLICY
    PolicySetStatus As Byte
End Type

[Description("Windows 10 through Windows 11 22H2 (last verified)")]
Public Type _TOKEN
	TokenSource As TOKEN_SOURCE
    TokenId As LUID
    AuthenticationId As LUID
    ParentTokenId As LUID
    ExpirationTime As LARGE_INTEGER
    TokenLock As LongPtr 'PERESOURCE
    ModifiedId As LUID
    Privileges As _SEP_TOKEN_PRIVILEGES
    SessionId As Long
    UserAndGroupCount As Long
    RestrictedSidCount As Long
    VariableLength As Long
    DynamicCharged As Long
    DynamicAvailable As Long
    DefaultOwnerIndex As Long
    UserAndGroups As LongPtr 'SID_AND_ATTRIBUTES
    RestrictedSids As LongPtr 'SID_AND_ATTRIBUTES
    PrimaryGroup As LongPtr
    DynamicPart As LongPtr 'ULONG*
    DefaultDacl As LongPtr '_ACL*
    TokenType As TOKEN_TYPE
    ImpersonationLevel As SECURITY_IMPERSONATION_LEVEL
    TokenFlags As TOKEN_FLAGS
    TokenInUse As Byte
    IntegrityLevelIndex As Long
    MandatoryPolicy As TOKEN_MANDATORY_POLICY_FLAGS
    LogonSession As LongPtr '_SEP_LOGON_SESSION_REFERENCES*
    OriginatingLogonSession As LUID
    SidHash As SID_AND_ATTRIBUTES_HASH
    RestrictedSidHash As SID_AND_ATTRIBUTES_HASH
    pSecurityAttributes As LongPtr ' _AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION*
    Package As LongPtr
    Capabilities As LongPtr 'SID_AND_ATTRIBUTES*
    CapabilityCount As Long
    CapabilitiesHash As SID_AND_ATTRIBUTES_HASH
    LowboxNumberEntry As LongPtr '_SEP_LOWBOX_NUMBER_ENTRY*
    LowboxHandlesEntry As LongPtr '_SEP_LOWBOX_HANDLES_ENTRY* 
    pClaimAttributes As LongPtr '_AUTHZBASEP_CLAIM_ATTRIBUTES_COLLECTION*
    TrustLevelSid As LongPtr
    TrustLinkedToken As LongPtr '_TOKEN*
    IntegrityLevelSidValue As LongPtr 'PVOID
    TokenSidValues As LongPtr '_SEP_SID_VALUES_BLOCK*
    IndexEntry As LongPtr '_SEP_LUID_TO_INDEX_MAP_ENTRY*
    DiagnosticInfo As LongPtr '_SEP_TOKEN_DIAG_TRACK_ENTRY*
    VariablePart As LongLong
End Type

Public Enum EXTENDED_CREATE_FLAGS
    EX_CREATE_FLAG_FILE_SOURCE_OPEN_FOR_COPY = &H00000001
    EX_CREATE_FLAG_FILE_DEST_OPEN_FOR_COPY = &H00000002
End Enum

Public Type EXTENDED_CREATE_INFORMATION
    /* [ TypeHint(EXTENDED_CREATE_FLAGS) ] */ ExtendedCreateFlags As LongLong
    EaBuffer As LongPtr
    EaLength As Long
End Type

Public Enum PortAccessRights
    PORT_CONNECT = &H0001
    PORT_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or SYNCHRONIZE Or &H1)
End Enum

Public Type PORT_MESSAGE
	Length As Long
    ' [ Description("union {" & vbCrLf & _
    '               "  struct{" & vbCrLf & _
    '               "    CSHORT Type;" & vbCrLf & _
    '               "    CSHORT DataInfoOffset;" & vbCrLf & _
    '               "  } s2;" & vbCrLf & _
    '               "  ULONG ZeroInit;" & vbCrLf & _
    '               "}") ]
    u2 As Long
    ClientId As CLIENT_ID
    MessageId As Long
    ClientViewSizeOrCallbackId As LongPtr
End Type
Public Type PORT_DATA_ENTRY
    Base As LongPtr
    Size As Long
End Type
[Description("⚠️ **WARNING:** You cannot use this struct as-is due to SAFEARRAY considerations. Copy the first 8 bytes, determine the size, then copy the rest into bRawData(0) ")]
Public Type PORT_DATA_INFORMATION
    CountDataEntries As Long
    'DataEntries(0 To 0) As PORT_DATA_ENTRY
End Type
Public Enum NT_LPC_MSG_TYPE
    LPC_REQUEST = 1
    LPC_REPLY = 2
    LPC_DATAGRAM = 3
    LPC_LOST_REPLY = 4
    LPC_PORT_CLOSED = 5
    LPC_CLIENT_DIED = 6
    LPC_EXCEPTION = 7
    LPC_DEBUG_EVENT = 8
    LPC_ERROR_EVENT = 9
    LPC_CONNECTION_REQUEST = 10
    LPC_KERNELMODE_MESSAGE = &H8000&
    LPC_NO_IMPERSONATE = &H4000&
End Enum

#If Win64 Then
Public Const PORT_MAXIMUM_MESSAGE_LENGTH = 512
#Else
Public Const PORT_MAXIMUM_MESSAGE_LENGTH = 256
#End If

Public Type LPC_MESSAGE
    DataLength As Integer
    Length As Integer
    /* [ TypeHint(NT_LPC_MSG_TYPE) ] */ MessageType As Integer
    DataInfoOffset As Integer
    ClientId As CLIENT_ID
    MessageId As Long
    CallbackId As Long
End Type
Public Enum HARDERROR_RESPONSE_OPTION
    HardError_OptionAbortRetryIgnore
    HardError_OptionOk
    HardError_OptionOkCancel
    HardError_OptionRetryCancel
    HardError_OptionYesNo
    HardError_OptionYesNoCancel
    HardError_OptionShutdownSystem
End Enum
Public Enum HARDERROR_RESPONSE
    HardError_ResponseReturnToCaller
    HardError_ResponseNotHandled
    HardError_ResponseAbort
    HardError_ResponseCancel
    HardError_ResponseIgnore
    HardError_ResponseNo
    HardError_ResponseOk
    HardError_ResponseRetry
    HardError_ResponseYes
End Enum
Public Const HARDERROR_OVERRIDE_ERRORMODE     = &H10000000

'LAYOUT OF Level BITFIELD:
'TTT A SSSS
'(Type, Audit, Signer)
Public Type PS_PROTECTION
	Level As Byte
End Type
Public Enum PS_PROTECTED_TYPE
    PsProtectedTypeNone
    PsProtectedTypeProtectedLight = &B00000001
    PsProtectedTypeProtected = &B00000010
    PsProtectedTypeMax = &B00000011
    
End Enum
[Description("NOTE: These defs differ from other sources and are meant to be checked against the Level whole byte because there's no bitfield support to compare from 0 against the upper bits alone.")]
Public Enum PS_PROTECTED_SIGNER
    PsProtectedSignerNone
    PsProtectedSignerAuthenticode = &B00010000
    PsProtectedSignerCodeGen = &B00100000
    PsProtectedSignerAntimalware = &B00110000
    PsProtectedSignerLsa = &B01000000
    PsProtectedSignerWindows = &B01010000
    PsProtectedSignerWinTcb = &B01100000
    PsProtectedSignerWinSystem = &B01110000
    PsProtectedSignerApp = &B10000000
    PsProtectedSignerMax = &B10010000
End Enum

Public Type RTL_MODULE_BASIC_INFO
    ImageBase As LongPtr
End Type
Public Type RTL_MODULE_EXTENDED_INFO
    BasicInfo As RTL_MODULE_BASIC_INFO
    ImageSize As Long
    FileNameOffset As Integer
    FullPathName(0 To 255) As Byte
End Type

Public Enum SECTION_INHERIT
    SECINH_ViewShare = 1
    SECINH_ViewUnmap = 2
End Enum

Public Const UNIFIEDBUILDREVISION_KEY  = "\Registry\Machine\Software\Microsoft\Windows NT\CurrentVersion"
Public Const UNIFIEDBUILDREVISION_VALUE  = "UBR"
Public Const UNIFIEDBUILDREVISION_MIN  = &H00000000
Public Const DEVICEFAMILYDEVICEFORM_KEY  = "\Registry\Machine\Software\Microsoft\Windows NT\CurrentVersion\OEM"
Public Const DEVICEFAMILYDEVICEFORM_VALUE  = "DeviceForm"
Public Enum DEVICEFAMILYINFOENUM
    DEVICEFAMILYINFOENUM_UAP = &H00000000
    DEVICEFAMILYINFOENUM_WINDOWS_8X = &H00000001
    DEVICEFAMILYINFOENUM_WINDOWS_PHONE_8X = &H00000002
    DEVICEFAMILYINFOENUM_DESKTOP = &H00000003
    DEVICEFAMILYINFOENUM_MOBILE = &H00000004
    DEVICEFAMILYINFOENUM_XBOX = &H00000005
    DEVICEFAMILYINFOENUM_TEAM = &H00000006
    DEVICEFAMILYINFOENUM_IOT = &H00000007
    DEVICEFAMILYINFOENUM_IOT_HEADLESS = &H00000008
    DEVICEFAMILYINFOENUM_SERVER = &H00000009
    DEVICEFAMILYINFOENUM_HOLOGRAPHIC = &H0000000A
    DEVICEFAMILYINFOENUM_XBOXSRA = &H0000000B
    DEVICEFAMILYINFOENUM_XBOXERA = &H0000000C
    DEVICEFAMILYINFOENUM_SERVER_NANO = &H0000000D
    DEVICEFAMILYINFOENUM_8828080 = &H0000000E
    DEVICEFAMILYINFOENUM_7067329 = &H0000000F
    DEVICEFAMILYINFOENUM_WINDOWS_CORE = &H00000010
    DEVICEFAMILYINFOENUM_WINDOWS_CORE_HEADLESS = &H00000011
    DEVICEFAMILYINFOENUM_MAX = &H00000011
End Enum
Public Enum DEVICEFAMILYDEVICEFORM
    DEVICEFAMILYDEVICEFORM_UNKNOWN = &H00000000
    DEVICEFAMILYDEVICEFORM_PHONE = &H00000001
    DEVICEFAMILYDEVICEFORM_TABLET = &H00000002
    DEVICEFAMILYDEVICEFORM_DESKTOP = &H00000003
    DEVICEFAMILYDEVICEFORM_NOTEBOOK = &H00000004
    DEVICEFAMILYDEVICEFORM_CONVERTIBLE = &H00000005
    DEVICEFAMILYDEVICEFORM_DETACHABLE = &H00000006
    DEVICEFAMILYDEVICEFORM_ALLINONE = &H00000007
    DEVICEFAMILYDEVICEFORM_STICKPC = &H00000008
    DEVICEFAMILYDEVICEFORM_PUCK = &H00000009
    DEVICEFAMILYDEVICEFORM_LARGESCREEN = &H0000000A
    DEVICEFAMILYDEVICEFORM_HMD = &H0000000B
    DEVICEFAMILYDEVICEFORM_INDUSTRY_HANDHELD = &H0000000C
    DEVICEFAMILYDEVICEFORM_INDUSTRY_TABLET = &H0000000D
    DEVICEFAMILYDEVICEFORM_BANKING = &H0000000E
    DEVICEFAMILYDEVICEFORM_BUILDING_AUTOMATION = &H0000000F
    DEVICEFAMILYDEVICEFORM_DIGITAL_SIGNAGE = &H00000010
    DEVICEFAMILYDEVICEFORM_GAMING = &H00000011
    DEVICEFAMILYDEVICEFORM_HOME_AUTOMATION = &H00000012
    DEVICEFAMILYDEVICEFORM_INDUSTRIAL_AUTOMATION = &H00000013
    DEVICEFAMILYDEVICEFORM_KIOSK = &H00000014
    DEVICEFAMILYDEVICEFORM_MAKER_BOARD = &H00000015
    DEVICEFAMILYDEVICEFORM_MEDICAL = &H00000016
    DEVICEFAMILYDEVICEFORM_NETWORKING = &H00000017
    DEVICEFAMILYDEVICEFORM_POINT_OF_SERVICE = &H00000018
    DEVICEFAMILYDEVICEFORM_PRINTING = &H00000019
    DEVICEFAMILYDEVICEFORM_THIN_CLIENT = &H0000001A
    DEVICEFAMILYDEVICEFORM_TOY = &H0000001B
    DEVICEFAMILYDEVICEFORM_VENDING = &H0000001C
    DEVICEFAMILYDEVICEFORM_INDUSTRY_OTHER = &H0000001D
    DEVICEFAMILYDEVICEFORM_XBOX_ONE = &H0000001E
    DEVICEFAMILYDEVICEFORM_XBOX_ONE_S = &H0000001F
    DEVICEFAMILYDEVICEFORM_XBOX_ONE_X = &H00000020
    DEVICEFAMILYDEVICEFORM_XBOX_ONE_X_DEVKIT = &H00000021
    DEVICEFAMILYDEVICEFORM_XBOX_SERIES_X = &H00000022
    DEVICEFAMILYDEVICEFORM_XBOX_SERIES_X_DEVKIT = &H00000023
    DEVICEFAMILYDEVICEFORM_XBOX_SERIES_S = &H00000024
'  This is a range reserved for future Xbox consoles.
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_01 = &H00000025
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_02 = &H00000026
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_03 = &H00000027
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_04 = &H00000028
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_05 = &H00000029
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_06 = &H0000002A
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_07 = &H0000002B
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_08 = &H0000002C
    DEVICEFAMILYDEVICEFORM_XBOX_RESERVED_09 = &H0000002D
    DEVICEFAMILYDEVICEFORM_MAX = &H0000002D
End Enum

Public Enum MEMORY_INFORMATION_CLASS
    MemoryBasicInformation = 0 ' q: MEMORY_BASIC_INFORMATION
    MemoryWorkingSetInformation = 1 ' q: MEMORY_WORKING_SET_INFORMATION
    MemoryMappedFilenameInformation = 2 ' q: UNICODE_STRING
    MemoryRegionInformation = 3 ' q: MEMORY_REGION_INFORMATION
    MemoryWorkingSetExInformation = 4 ' q: MEMORY_WORKING_SET_EX_INFORMATION // since VISTA
    MemorySharedCommitInformation = 5 ' q: MEMORY_SHARED_COMMIT_INFORMATION // since WIN8
    MemoryImageInformation = 6 ' q: MEMORY_IMAGE_INFORMATION
    MemoryRegionInformationEx = 7 ' MEMORY_REGION_INFORMATION
    MemoryPrivilegedBasicInformation = 8 ' MEMORY_BASIC_INFORMATION
    MemoryEnclaveImageInformation = 9 ' MEMORY_ENCLAVE_IMAGE_INFORMATION // since REDSTONE3
    MemoryBasicInformationCapped = 10 ' 10
    MemoryPhysicalContiguityInformation = 11 ' MEMORY_PHYSICAL_CONTIGUITY_INFORMATION // since 20H1
    MemoryBadInformation = 12 ' since WIN11
    MemoryBadInformationAllProcesses = 13 ' since 22H1
    MaxMemoryInfoClass = 14
End Enum
Public Type MEMORY_WORKING_SET_BLOCK
    ' ULONG_PTR Protection : 5;
    ' ULONG_PTR ShareCount : 3;
    ' ULONG_PTR Shared : 1;
    ' ULONG_PTR Node : 3;
' #ifdef _WIN64
    ' ULONG_PTR VirtualPage : 52;
' #else
    ' ULONG VirtualPage : 20;
' #endif
    u(7) As Byte
End Type
[Description("WARNING: Cannot be used as-is. Copy number of entries, redim appropriately, then copy remainder info WorkSetInfo(0).")]
Public Type MEMORY_WORKING_SET_INFORMATION
    NumberOfEntries As LongPtr
    WorkingSetInfo() As MEMORY_WORKING_SET_BLOCK
End Type

Public Enum NtMemoryRegionInfoFlags
    NTMRIF_Private = &B00000000_00000000_00000000_00000001
    NTMRIF_MappedDataFile = &B00000000_00000000_00000000_00000010
    NTMRIF_MappedImage = &B00000000_00000000_00000000_00000100
    NTMRIF_MappedPageFile = &B00000000_00000000_00000000_00001000
    NTMRIF_MappedPhysical = &B00000000_00000000_00000000_00010000
    NTMRIF_DirectMapped = &B00000000_00000000_00000000_00100000
    NTMRIF_SoftwareEnclave = &B00000000_00000000_00000000_01000000 'Redstone 3
    NTMRIF_PageSize64K = &B00000000_00000000_00000000_10000000
    NTMRIF_PlaceholderReservation = &B00000000_00000000_00000001_00000000 'Redstone 4
    NTMRIF_MappedAwe = &B00000000_00000000_00000010_00000000
    NTMRIF_MappedWriteWatch = &B00000000_00000000_00000100_00000000
    NTMRIF_PageSizeLarge = &B00000000_00000000_00001000_00000000
    NTMRIF_PageSizeHuge = &B00000000_00000000_00010000_00000000
End Enum
[Description("WARNING: Last two members added in 19H1 and 20H1; exclude from size if not targeting those OS versions or higher.")]
Public Type MEMORY_REGION_INFORMATION
    AllocationBase As LongPtr
    AllocationProtect As Long
    '    union {
    RegionType As NtMemoryRegionInfoFlags
    '        struct {
    '            ULONG Private : 1;
    '            ULONG MappedDataFile : 1;
    '            ULONG MappedImage : 1;
    '            ULONG MappedPageFile : 1;
    '            ULONG MappedPhysical : 1;
    '            ULONG DirectMapped : 1;
    '            ULONG Reserved : 26;
    '        } DUMMYSTRUCTNAME;
    '    } DUMMYUNIONNAME;
    RegionSize As LongPtr
    CommitSize As LongPtr
    PartitionId As LongPtr
    NodePreference As LongPtr
End Type

Public Enum MEMORY_WORKING_SET_EX_LOCATION
    MemoryLocationInvalid
    MemoryLocationResident
    MemoryLocationPagefile
    MemoryLocationReserved
End Enum
Public Type MEMORY_WORKING_SET_EX_BLOCK
    ' union
    ' {
        ' struct
        ' {
            ' ULONG_PTR Valid : 1;
            ' ULONG_PTR ShareCount : 3;
            ' ULONG_PTR Win32Protection : 11;
            ' ULONG_PTR Shared : 1;
            ' ULONG_PTR Node : 6;
            ' ULONG_PTR Locked : 1;
            ' ULONG_PTR LargePage : 1;
            ' ULONG_PTR Priority : 3;
            ' ULONG_PTR Reserved : 3;
            ' ULONG_PTR SharedOriginal : 1;
            ' ULONG_PTR Bad : 1;
            ' ULONG_PTR Win32GraphicsProtection : 4; // 19H1
' #ifdef _WIN64
            ' ULONG_PTR ReservedUlong : 28;
' #endif
        ' };
        ' struct
        ' {
            ' ULONG_PTR Valid : 1;
            ' ULONG_PTR Reserved0 : 14;
            ' ULONG_PTR Shared : 1;
            ' ULONG_PTR Reserved1 : 5;
            ' ULONG_PTR PageTable : 1;
            ' ULONG_PTR Location : 2;
            ' ULONG_PTR Priority : 3;
            ' ULONG_PTR ModifiedList : 1;
            ' ULONG_PTR Reserved2 : 2;
            ' ULONG_PTR SharedOriginal : 1;
            ' ULONG_PTR Bad : 1;
' #ifdef _WIN64
            ' ULONG_PTR ReservedUlong : 32;
' #endif
        ' } Invalid;
    ' };
    u(7) As Byte
End Type
Public Type MEMORY_WORKING_SET_EX_INFORMATION
    VirtualAddress As LongPtr
    ' union
    ' {
        ' MEMORY_WORKING_SET_EX_BLOCK VirtualAttributes;
        ' ULONG_PTR Long;
    ' } u1;
    VirtualAttributes As MEMORY_WORKING_SET_EX_BLOCK
End Type

Public Type MEMORY_SHARED_COMMIT_INFORMATION
    CommitSize As LongPtr
End Type

Public Type MEMORY_IMAGE_INFORMATION
    ImageBase As LongPtr
    SizeOfImage As LongPtr
    '    union
    '    {
    ImageFlags As Long
    '        struct
    '        {
    '            ULONG ImagePartialMap : 1;
    '           ULONG ImageNotExecutable : 1;
    '            ULONG ImageSigningLevel : 4; // REDSTONE3
    '            ULONG Reserved : 26;
    '        };
    '    };
End Type
'Alias SE_SIGNING_LEVEL As Byte
Public Enum SeSigningLevel
    SE_SIGNING_LEVEL_UNCHECKED = &H00000000
    SE_SIGNING_LEVEL_UNSIGNED = &H00000001
    SE_SIGNING_LEVEL_ENTERPRISE = &H00000002
    SE_SIGNING_LEVEL_CUSTOM_1 = &H00000003
    SE_SIGNING_LEVEL_DEVELOPER = SE_SIGNING_LEVEL_CUSTOM_1
    SE_SIGNING_LEVEL_AUTHENTICODE = &H00000004
    SE_SIGNING_LEVEL_CUSTOM_2 = &H00000005
    SE_SIGNING_LEVEL_STORE = &H00000006
    SE_SIGNING_LEVEL_CUSTOM_3 = &H00000007
    SE_SIGNING_LEVEL_ANTIMALWARE = SE_SIGNING_LEVEL_CUSTOM_3
    SE_SIGNING_LEVEL_MICROSOFT = &H00000008
    SE_SIGNING_LEVEL_CUSTOM_4 = &H00000009
    SE_SIGNING_LEVEL_CUSTOM_5 = &H0000000A
    SE_SIGNING_LEVEL_DYNAMIC_CODEGEN = &H0000000B
    SE_SIGNING_LEVEL_WINDOWS = &H0000000C
    SE_SIGNING_LEVEL_CUSTOM_7 = &H0000000D
    SE_SIGNING_LEVEL_WINDOWS_TCB = &H0000000E
    SE_SIGNING_LEVEL_CUSTOM_6 = &H0000000F
End Enum
Public Enum SE_IMAGE_SIGNATURE_TYPE
    SeImageSignatureNone = 0
    SeImageSignatureEmbedded
    SeImageSignatureCache
    SeImageSignatureCatalogCached
    SeImageSignatureCatalogNotCached
    SeImageSignatureCatalogHint
    SeImageSignaturePackageCatalog
    SeImageSignaturePplMitigated
End Enum
Public Type SECURITY_CAPABILITIES
    AppContainerSid As LongPtr 'PSID
    Capabilities As LongPtr 'PSID_AND_ATTRIBUTES
    CapabilityCount As Long
    Reserved As Long
End Type

Public Type MEMORY_ENCLAVE_IMAGE_INFORMATION
    ImageInfo As MEMORY_IMAGE_INFORMATION
    UniqueID(0 To 31) As Byte
    AuthorID(0 To 31) As Byte
End Type

Public Enum MEMORY_PHYSICAL_CONTIGUITY_UNIT_STATE
    MemoryNotContiguous
    MemoryAlignedAndContiguous
    MemoryNotResident
    MemoryNotEligibleToMakeContiguous
    MemoryContiguityStateMax
End Enum
Public Type MEMORY_PHYSICAL_CONTIGUITY_UNIT_INFORMATION
    '    union
    '    {
    '        struct
    '        {
    '            ULONG State : 2;
    '            ULONG Reserved : 30;
    '        };
    AllInformation As Long
End Type
Public Type MEMORY_PHYSICAL_CONTIGUITY_INFORMATION
    VirtualAddress As LongPtr
    Size As LongPtr
    ContiguityUnitSize As LongPtr
    Flags As Long
    ContiguityUnitInformation As LongPtr 'PMEMORY_PHYSICAL_CONTIGUITY_UNIT_INFORMATION
End Type

Public Enum LockVMMapTypes
    MAP_PROCESS = 1
    MAP_SYSTEM = 2
End Enum

Public Enum NtFileQueryFlags
    SL_RESTART_SCAN = &H01
    SL_RETURN_SINGLE_ENTRY = &H02
    SL_INDEX_SPECIFIED = &H04
    SL_RETURN_ON_DISK_ENTRIES_ONLY = &H08
    SL_NO_CURSOR_UPDATE = &H10
    SL_QUERY_DIRECTORY_MASK = &H1b
End Enum

Public Const RTL_CORRELATION_VECTOR_STRING_LENGTH  = 129
Public Const RTL_CORRELATION_VECTOR_VERSION_1 As Byte = (1)
Public Const RTL_CORRELATION_VECTOR_VERSION_2 As Byte = (2)
Public Const RTL_CORRELATION_VECTOR_VERSION_CURRENT  = RTL_CORRELATION_VECTOR_VERSION_2
Public Const RTL_CORRELATION_VECTOR_V1_PREFIX_LENGTH  = (16)
Public Const RTL_CORRELATION_VECTOR_V1_LENGTH  = (64)
Public Const RTL_CORRELATION_VECTOR_V2_PREFIX_LENGTH  = (22)
Public Const RTL_CORRELATION_VECTOR_V2_LENGTH  = (128)
Public Type CORRELATION_VECTOR
    Version As Byte
    Vector(0 To (RTL_CORRELATION_VECTOR_STRING_LENGTH - 1)) As Byte
End Type


' VOID CALLBACK LdrDllNotification(
' _In_     ULONG                       NotificationReason,
' _In_     PCLDR_DLL_NOTIFICATION_DATA NotificationData,
' _In_opt_ PVOID                       Context
' );
Public Enum LdrDllNotifyReasons
    LDR_DLL_NOTIFICATION_REASON_LOADED = 1
    LDR_DLL_NOTIFICATION_REASON_UNLOADED = 2
End Enum
Public Type LDR_DLL_LOADED_NOTIFICATION_DATA
    Flags As Long 'Reserved.
    FullDllName As LongPtr 'PCUNICODE_STRING 'The full path name of the DLL module.
    BaseDllName As LongPtr 'PCUNICODE_STRING 'The base file name of the DLL module.
    DllBase As LongPtr 'A pointer to the base address for the DLL in memory.
    SizeOfImage As Long 'The size of the DLL image, in bytes.
End Type
Public Type LDR_DLL_UNLOADED_NOTIFICATION_DATA
    Flags As Long 'Reserved.
    FullDllName As LongPtr 'PCUNICODE_STRING 'The full path name of the DLL module.
    BaseDllName As LongPtr 'PCUNICODE_STRING 'The base file name of the DLL module.
    DllBase As LongPtr 'A pointer to the base address for the DLL in memory.
    SizeOfImage As Long 'The size of the DLL image, in bytes.
End Type
' typedef union _LDR_DLL_NOTIFICATION_DATA {
' LDR_DLL_LOADED_NOTIFICATION_DATA Loaded;
' LDR_DLL_UNLOADED_NOTIFICATION_DATA Unloaded;
' } LDR_DLL_NOTIFICATION_DATA,
Public Type LDR_DLL_NOTIFICATION_DATA
    Flags As Long 'Reserved.
    FullDllName As LongPtr 'PCUNICODE_STRING 'The full path name of the DLL module.
    BaseDllName As LongPtr 'PCUNICODE_STRING 'The base file name of the DLL module.
    DllBase As LongPtr 'A pointer to the base address for the DLL in memory.
    SizeOfImage As Long 'The size of the DLL image, in bytes.
End Type

Public Const UNWIND_HISTORY_TABLE_SIZE = 32

Public Enum TIMER_TYPE
    NotificationTimer
    SynchronizationTimer
End Enum

Public Enum TIMER_INFORMATION_CLASS
    TimerBasicInformation
End Enum
Public Type TIMER_BASIC_INFORMATION
    RemainingTime As LARGE_INTEGER
    TimerState As Byte
End Type

Public Enum ElevationFlags
    ELEVATION_UAC_ENABLED = 1
    ELEVATION_VIRTUALIZATION_ENABLED = 2
    ELEVATION_INSTALLER_DETECTION_ENABLED = 4
End Enum

Public Enum THREADINFOCLASS
    ThreadBasicInformation = 0 ' q: THREAD_BASIC_INFORMATION
    ThreadTimes = 1 ' q: KERNEL_USER_TIMES
    ThreadPriority = 2 ' s: KPRIORITY (requires SeIncreaseBasePriorityPrivilege)
    ThreadBasePriority = 3 ' s: KPRIORITY
    ThreadAffinityMask = 4 ' s: KAFFINITY
    ThreadImpersonationToken = 5 ' s: HANDLE
    ThreadDescriptorTableEntry = 6 ' q: DESCRIPTOR_TABLE_ENTRY (or WOW64_DESCRIPTOR_TABLE_ENTRY)
    ThreadEnableAlignmentFaultFixup = 7 ' s: BOOLEAN
    ThreadEventPair = 8
    ThreadQuerySetWin32StartAddress = 9 ' q: ULONG_PTR
    ThreadZeroTlsCell = 10 ' s: ULONG // TlsIndex // 10
    ThreadPerformanceCount = 11 ' q: LARGE_INTEGER
    ThreadAmILastThread = 12 ' q: ULONG
    ThreadIdealProcessor = 13 ' s: ULONG
    ThreadPriorityBoost = 14 ' qs: ULONG
    ThreadSetTlsArrayAddress = 15 ' s: ULONG_PTR // Obsolete
    ThreadIsIoPending = 16 ' q: ULONG
    ThreadHideFromDebugger = 17 ' q: BOOLEAN; s: void
    ThreadBreakOnTermination = 18 ' qs: ULONG
    ThreadSwitchLegacyState = 19 ' s: void // NtCurrentThread // NPX/FPU
    ThreadIsTerminated = 20 ' q: ULONG // 20
    ThreadLastSystemCall = 21 ' q: THREAD_LAST_SYSCALL_INFORMATION
    ThreadIoPriority = 22 ' qs: IO_PRIORITY_HINT (requires SeIncreaseBasePriorityPrivilege)
    ThreadCycleTime = 23 ' q: THREAD_CYCLE_TIME_INFORMATION
    ThreadPagePriority = 24 ' qs: PAGE_PRIORITY_INFORMATION
    ThreadActualBasePriority = 25 ' s: LONG (requires SeIncreaseBasePriorityPrivilege)
    ThreadTebInformation = 26 ' q: THREAD_TEB_INFORMATION (requires THREAD_GET_CONTEXT + THREAD_SET_CONTEXT)
    ThreadCSwitchMon = 27 ' Obsolete
    ThreadCSwitchPmu = 28
    ThreadWow64Context = 29 ' qs: WOW64_CONTEXT, ARM_NT_CONTEXT since 20H1
    ThreadGroupInformation = 30 ' qs: GROUP_AFFINITY // 30
    ThreadUmsInformation = 31 ' q: THREAD_UMS_INFORMATION // Obsolete
    ThreadCounterProfiling = 32 ' q: BOOLEAN; s: THREAD_PROFILING_INFORMATION?
    ThreadIdealProcessorEx = 33 ' qs: PROCESSOR_NUMBER; s: previous PROCESSOR_NUMBER on return
    ThreadCpuAccountingInformation = 34 ' q: BOOLEAN; s: HANDLE (NtOpenSession) // NtCurrentThread // since WIN8
    ThreadSuspendCount = 35 ' q: ULONG // since WINBLUE
    ThreadHeterogeneousCpuPolicy = 36 ' q: KHETERO_CPU_POLICY // since THRESHOLD
    ThreadContainerId = 37 ' q: GUID
    ThreadNameInformation = 38 ' qs: THREAD_NAME_INFORMATION
    ThreadSelectedCpuSets = 39
    ThreadSystemThreadInformation = 40 ' q: SYSTEM_THREAD_INFORMATION // 40
    ThreadActualGroupAffinity = 41 ' q: GROUP_AFFINITY // since THRESHOLD2
    ThreadDynamicCodePolicyInfo = 42 ' q: ULONG; s: ULONG (NtCurrentThread)
    ThreadExplicitCaseSensitivity = 43 ' qs: ULONG; s: 0 disables, otherwise enables
    ThreadWorkOnBehalfTicket = 44 ' RTL_WORK_ON_BEHALF_TICKET_EX
    ThreadSubsystemInformation = 45 ' q: SUBSYSTEM_INFORMATION_TYPE // since REDSTONE2
    ThreadDbgkWerReportActive = 46 ' s: ULONG; s: 0 disables, otherwise enables
    ThreadAttachContainer = 47 ' s: HANDLE (job object) // NtCurrentThread
    ThreadManageWritesToExecutableMemory = 48 ' MANAGE_WRITES_TO_EXECUTABLE_MEMORY // since REDSTONE3
    ThreadPowerThrottlingState = 49 ' POWER_THROTTLING_THREAD_STATE // since REDSTONE3 (set), WIN11 22H2 (query)
    ThreadWorkloadClass = 50 ' THREAD_WORKLOAD_CLASS // since REDSTONE5 // 50
    ThreadCreateStateChange = 51 ' since WIN11
    ThreadApplyStateChange = 52
    ThreadStrongerBadHandleChecks = 53 ' since 22H1
    ThreadEffectiveIoPriority = 54 ' q: IO_PRIORITY_HINT
    ThreadEffectivePagePriority = 55 ' q: ULONG
    MaxThreadInfoClass = 56
End Enum

Public Type THREAD_BASIC_INFORMATION
    ExitStatus As NTSTATUS
    TebBaseAddress As LongPtr 'PTEB
    ClientId As CLIENT_ID
    AffinityMask As LongPtr 'KAFFINITY
    Priority As KPRIORITY
    BasePriority As KPRIORITY
End Type

Public Type THREAD_LAST_SYSCALL_INFORMATION
    FirstArgument As LongPtr
    SystemCallNumber As Integer
    WaitTime As LongLong
End Type

Public Type THREAD_CYCLE_TIME_INFORMATION
    AccumulatedCycles As LongLong
    CurrentCycleCount As LongLong
End Type

Public Type THREAD_TEB_INFORMATION
    TebInformation As LongPtr ' buffer to place data in
    TebOffset As Long ' offset in TEB to begin reading from
    BytesToRead As Long ' number of bytes to read
End Type

Public Type THREAD_NAME_INFORMATION
    ThreadName As UNICODE_STRING
End Type

Public Enum THREAD_UMS_INFORMATION_COMMAND
    UmsInformationCommandInvalid
    UmsInformationCommandAttach
    UmsInformationCommandDetach
    UmsInformationCommandQuery
End Enum

Public Type RTL_UMS_COMPLETION_LIST
    ThreadListHead As LongPtr 'PSINGLE_LIST_ENTRY
    CompletionEvent As LongPtr
    CompletionFlags As Long
    InternalListHead As SINGLE_LIST_ENTRY
End Type

Public Enum THREAD_WORKLOAD_CLASS
    ThreadWorkloadClassDefault
    ThreadWorkloadClassGraphics
    MaxThreadWorkloadClass
End Enum

Public Enum RTL_SYSTEM_GLOBAL_DATA_ID
    GlobalDataIdUnknown = 0
    GlobalDataIdRngSeedVersion
    GlobalDataIdInterruptTime
    GlobalDataIdTimeZoneBias
    GlobalDataIdImageNumberLow
    GlobalDataIdImageNumberHigh
    GlobalDataIdTimeZoneId
    GlobalDataIdNtMajorVersion
    GlobalDataIdNtMinorVersion
    GlobalDataIdSystemExpirationDate
    GlobalDataIdKdDebuggerEnabled
    GlobalDataIdCyclesPerYield
    GlobalDataIdSafeBootMode
    GlobalDataIdLastSystemRITEventTickCount
    GlobalDataIdConsoleSharedDataFlags
    GlobalDataIdNtSystemRootDrive
    GlobalDataIdQpcBypassEnabled
    GlobalDataIdQpcData
    GlobalDataIdQpcBias
End Enum
    


'NTDLL APIs should only be added if they don't have higher level equivalents. If the NTDLL version has substantially more functionality, it's not equivalent and should be added.
Public Declare PtrSafe Function NtQuerySystemInformation Lib "ntdll" (ByVal SystemInformationClass As SYSTEM_INFORMATION_CLASS, SystemInformation As Any, ByVal SystemInformationLength As Long, ReturnLength As Long) As Long
Public Declare PtrSafe Function NtSetSystemInformation Lib "ntdll" (ByVal SystemInformationClass As SYSTEM_INFORMATION_CLASS, SystemInformation As Any, ByVal SystemInformationLength As Long) As Long
Public Declare PtrSafe Function NtQueryInformationProcess Lib "ntdll" (ByVal ProcessHandle As LongPtr, ByVal ProcessInformationClass As PROCESSINFOCLASS, ProcessInformation As Any, ByVal ProcessInformationLength As Long, ReturnLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtSetInformationProcess Lib "ntdll" (ByVal ProcessHandle As LongPtr, ByVal ProcessInformationClass As PROCESSINFOCLASS, ProcessInformation As Any, ByVal ProcessInformationLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtQueryVirtualMemory Lib "ntdll" (ByVal ProcessHandle As LongPtr, ByVal BaseAddress As LongPtr, ByVal MemoryInformationClass As MEMORY_INFORMATION_CLASS, MemoryInformation As Any, ByVal MemoryInformationLength As LongPtr, ReturnLength As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtAllocateVirtualMemory Lib "ntdll" (ByVal ProcessHandle As LongPtr, BaseAddress As LongPtr, ByVal ZeroBits As LongPtr, RegionSize As LongPtr, ByVal AllocationType As MemAllocType, ByVal Protect As MemProtectFlags) As NTSTATUS
Public Declare PtrSafe Function NtFreeVirtualMemory Lib "ntdll" (ByVal ProcessHandle As LongPtr, BaseAddress As LongPtr, RegionSize As LongPtr, ByVal FreeType As MemAllocType) As NTSTATUS
Public Declare PtrSafe Function NtWriteVirtualMemory Lib "ntdll" (ByVal ProcessHandle As LongPtr, ByVal BaseAddress As LongPtr, Buffer As Any, ByVal BufferSize As LongPtr, NumberOfBytesWritten As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtReadVirtualMemory Lib "ntdll" (ByVal ProcessHandle As LongPtr, ByVal BaseAddress As LongPtr, Buffer As Any, ByVal BufferSize As LongPtr, NumberOfBytesRead As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtLockVirtualMemory Lib "ntdll" (ByVal ProcessHandle As LongPtr, BaseAddress As LongPtr, RegionSize As LongPtr, ByVal MapType As LockVMMapTypes) As NTSTATUS
Public Declare PtrSafe Function NtUnlockVirtualMemory Lib "ntdll" (ByVal ProcessHandle As LongPtr, BaseAddress As LongPtr, RegionSize As LongPtr, ByVal MapType As LockVMMapTypes) As NTSTATUS
Public Declare PtrSafe Function NtClose Lib "ntdll" (ByVal ObjectHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtCreateFile Lib "ntdll" (FileHandle As LongPtr, [TypeHint(GenericRights, FileAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, IoStatusBlock As IO_STATUS_BLOCK, AllocationSize As Any, ByVal FileAttributes As FILE_ATTRIBUTES, ByVal ShareAccess As FileShareMode, ByVal CreateDisposition As FileCreateDisposition, ByVal CreateOptions As FileAccessFlags, EaBuffer As Any, ByVal EaLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtOpenFile Lib "ntdll" (FileHandle As LongPtr, [TypeHint(GenericRights, FileAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, IoStatusBlock As IO_STATUS_BLOCK, ByVal ShareAccess As FileShareMode, ByVal OpenOptions As Long) As NTSTATUS
Public Declare PtrSafe Function NtReadFile Lib "ntdll" (ByVal FileHandle As LongPtr, ByVal hEvent As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, ByRef IoStatusBlock As IO_STATUS_BLOCK, Buffer As Any, ByVal Length As Long, ByteOffset As LARGE_INTEGER, Optional Key As Long) As NTSTATUS
Public Declare PtrSafe Function NtWriteFile Lib "ntdll" (ByVal FileHandle As LongPtr, ByVal hEvent As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, ByRef IoStatusBlock As IO_STATUS_BLOCK, Buffer As Any, ByVal Length As Long, ByteOffset As LARGE_INTEGER, Optional Key As Long) As NTSTATUS
Public Declare PtrSafe Function NtLockFile Lib "ntdll" (ByVal FileHandle As LongPtr, ByVal hEvent As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, ByRef IoStatusBlock As IO_STATUS_BLOCK, ByteOffset As LARGE_INTEGER, Length As LARGE_INTEGER, ByVal Key As Long, ByVal FailImmediately As Byte, ByVal ExclusiveLock As Byte) As NTSTATUS
Public Declare PtrSafe Function NtUnlockFile Lib "ntdll" (ByVal FileHandle As LongPtr, ByRef IoStatusBlock As IO_STATUS_BLOCK, ByteOffset As LARGE_INTEGER, Length As LARGE_INTEGER, ByVal Key As Long) As NTSTATUS
Public Declare PtrSafe Function NtQueryDirectoryFile Lib "ntdll" (ByVal FileHandle As LongPtr, ByVal hEvent As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, ByRef IoStatusBlock As IO_STATUS_BLOCK, FileInformation As Any, ByVal Length As Long, ByVal FileInformationClass As FILE_INFORMATION_CLASS, ByVal ReturnSingleEntry As Byte, FileName As Any, ByVal RestartScan As Byte) As NTSTATUS
Public Declare PtrSafe Function NtQueryDirectoryFileEx Lib "ntdll" (ByVal FileHandle As LongPtr, ByVal hEvent As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, ByRef IoStatusBlock As IO_STATUS_BLOCK, FileInformation As Any, ByVal Length As Long, ByVal FileInformationClass As FILE_INFORMATION_CLASS, ByVal QueryFlags As NtFileQueryFlags, Filename As UNICODE_STRING) As NTSTATUS
Public Declare PtrSafe Function NtQueryInformationFile Lib "ntdll" (ByVal FileHandle As LongPtr, IoStatusBlock As IO_STATUS_BLOCK, lpFileInformation As Any, ByVal Length As Long, ByVal FileInformationClass As FILE_INFORMATION_CLASS) As Long
Public Declare PtrSafe Function NtSetInformationFile Lib "ntdll" (ByVal FileHandle As LongPtr, IoStatusBlock As IO_STATUS_BLOCK, lpFileInformation As Any, ByVal Length As Long, ByVal FileInformationClass As FILE_INFORMATION_CLASS) As Long
Public Declare PtrSafe Function NtSetEaFile Lib "ntdll" (ByVal FileHandle As LongPtr, IoStatusBlock As IO_STATUS_BLOCK, Buffer As Any, ByVal Length As Long) As NTSTATUS
Public Declare PtrSafe Function NtQueryVolumeInformationFile Lib "ntdll" (ByVal FileHandle As LongPtr, IoStatusBlock As IO_STATUS_BLOCK, FsInformation As Any, ByVal Length As Long, ByVal FsInformationClass As FS_INFORMATION_CLASS) As Long
Public Declare PtrSafe Function NtSetVolumeInformationFile Lib "ntdll" (ByVal FileHandle As LongPtr, IoStatusBlock As IO_STATUS_BLOCK, FsInformation As Any, ByVal Length As Long, ByVal FsInformationClass As FS_INFORMATION_CLASS) As Long
Public Declare PtrSafe Function NtQueryFullAttributesFile Lib "ntdll" (ObjectAttributes As OBJECT_ATTRIBUTES, Attributes As Any) As NTSTATUS
Public Declare PtrSafe Function NtImpersonateThread Lib "ntdll" (ByVal hThread As LongPtr, ByVal hThreadToImpersonate As LongPtr, SecurityQualityOfService As SECURITY_QUALITY_OF_SERVICE) As Long
Public Declare PtrSafe Function NtImpersonateAnonymousToken Lib "ntdll" (ByVal ThreadHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtQueryObject Lib "ntdll" (ByVal Handle As LongPtr, ByVal ObjectInformationClass As OBJECT_INFORMATION_CLASS, ObjectInformation As Any, ByVal ObjectInformationLength As Long, ReturnLength As Long) As Long
Public Declare PtrSafe Function NtDuplicateObject Lib "ntdll" (ByVal SourceProcessHandle As LongPtr, ByVal SourceHandle As LongPtr, pTargetHandle As LongPtr, ByVal DesiredAccess As Long, ByVal HandleAttributes As ObjectAttributeValues, ByVal Options As DuplicateObjectOptions) As Long
Public Declare PtrSafe Function NtOpenProcess Lib "ntdll" (ProcessHandle As LongPtr, [TypeHint(ProcessAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, ClientID As CLIENT_ID) As Long
Public Declare PtrSafe Function NtSuspendProcess Lib "ntdll" (ByVal hProcess As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtResumeProcess Lib "ntdll" (ByVal hProcess As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtTerminateProcess Lib "ntdll" (ByVal ProcessHandle As LongPtr, ByVal ExitStatus As NTSTATUS) As NTSTATUS
Public Declare PtrSafe Function NtQueryInformationToken Lib "ntdll" (ByVal TokenHandle As LongPtr, ByVal TokenInformationClass As TOKEN_INFORMATION_CLASS, TokenInformation As Any, ByVal TokenInformationLength As Long, ReturnLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtSetInformationToken Lib "ntdll" (ByVal TokenHandle As LongPtr, ByVal TokenInformationClass As TOKEN_INFORMATION_CLASS, TokenInformation As Any, ByVal TokenInformationLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtOpenProcessToken Lib "ntdll" (ByVal ProcessHandle As LongPtr, [TypeHint(TokenAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, TokenHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtOpenProcessTokenEx Lib "ntdll" (ByVal ProcessHandle As LongPtr, [TypeHint(TokenAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, ByVal HandleAttributes As ObjectAttributeValues, TokenHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtOpenThread Lib "ntdll" (ThreadHandle As LongPtr, ByVal DesiredAccess As ThreadAccessRights, ObjectAttributes As OBJECT_ATTRIBUTES, ClientId As CLIENT_ID) As NTSTATUS
Public Declare PtrSafe Function NtOpenThreadToken Lib "ntdll" (ByVal ProcessHandle As LongPtr, [TypeHint(TokenAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, ByVal OpenAsSelf As Boolean, TokenHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtOpenThreadTokenEx Lib "ntdll" (ByVal ProcessHandle As LongPtr, [TypeHint(TokenAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, ByVal OpenAsSelf As Boolean, ByVal HandleAttributes As ObjectAttributeValues, TokenHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtQueryInformationThread Lib "ntdll" (ByVal ThreadHandle As LongPtr, ByVal ThreadInformationClass As THREADINFOCLASS, ThreadInformation As Any, ByVal ThreadInformationLength As Long, ReturnLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtSetInformationThread Lib "ntdll" (ByVal ThreadHandle As LongPtr, ByVal ThreadInformationClass As THREADINFOCLASS, ThreadInformation As Any, ByVal ThreadInformationLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtGetNextProcess Lib "ntdll" (ByVal ProcessHandle As LongPtr, [TypeHint(ProcessAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, [TypeHint(ObjectAttributeValues)] ByVal HandleAttributes As Long, ByVal Flags As Long, NewProcessHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtGetNextThread Lib "ntdll" (ByVal ProcessHandle As LongPtr, ByVal ThreadHandle As LongPtr, [TypeHint(ThreadAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, [TypeHint(ObjectAttributeValues)] ByVal HandleAttributes As Long, ByVal Flags As Long, NewProcessHandle As LongPtr) As NTSTATUS

Public Declare PtrSafe Function NtDeviceIoControlFile Lib "ntdll" (ByVal FileHandle As LongPtr, ByVal hEvent As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, ByRef IoStatusBlock As IO_STATUS_BLOCK, ByVal IoControlCode As Long, InputBuffer As Any, ByVal InputBufferLength As Long, OutputBuffer As Any, ByVal OutputBufferLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtAllocateLocallyUniqueId Lib "ntdll" (pLuid As LUID) As NTSTATUS
Public Declare PtrSafe Function NtCreateToken Lib "ntdll" (TokenHandle As LongPtr, [TypeHint(TokenAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, ByVal TokenType As TOKEN_TYPE, AuthenticationId As LUID, ExpirationTime As LongLong, TokenUser As Any, TokenGroups As Any, TokenPrivileges As Any, TokenOwner As TOKEN_OWNER, TokenPrimaryGroup As TOKEN_PRIMARY_GROUP, TokenDefaultDacl As TOKEN_DEFAULT_DACL, TokenSource As TOKEN_SOURCE) As NTSTATUS
Public Declare PtrSafe Function NtCreateTokenEx Lib "ntdll" (TokenHandle As LongPtr, [TypeHint(TokenAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, ByVal TokenType As TOKEN_TYPE, AuthenticationId As LUID, ExpirationTime As LongLong, TokenUser As Any, TokenGroups As Any, TokenPrivileges As Any, UserAttributes As TOKEN_SECURITY_ATTRIBUTES_INFORMATION, DeviceAttributes As TOKEN_SECURITY_ATTRIBUTES_INFORMATION, DeviceGroups As Any, MandatoryPolicy As TOKEN_MANDATORY_POLICY, Owner As TOKEN_OWNER, PrimaryGroup As TOKEN_PRIMARY_GROUP, DefaultDacl As TOKEN_DEFAULT_DACL, TokenSource As TOKEN_SOURCE) As NTSTATUS
Public Declare PtrSafe Function NtCompareTokens Lib "ntdll" (ByVal FirstTokenHandle As LongPtr, ByVal SecondTokenHandle As LongPtr, pEqual As Byte) As Long
Public Declare PtrSafe Function NtDuplicateToken Lib "ntdll" (ByVal ExistingTokenHandle As LongPtr, [TypeHint(TokenAccessRights, StandardAccessTypes)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, ByVal EffectiveOnly As Byte, ByVal TokenType As TOKEN_TYPE, NewTokenHandle As LongPtr) As Long
Public Declare PtrSafe Function NtFilterToken Lib "ntdll" (ByVal ExistingTokenHandle As LongPtr, ByVal Flags As RestrictedTokenFlags, SidsToDisable As TOKEN_GROUPS, PrivilegesToDisable As TOKEN_PRIVILEGES, RestrictedSids As TOKEN_GROUPS, NewTokenHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtQuerySecurityAttributesToken Lib "ntdll" (ByVal TokenHandle As LongPtr, Attributes As UNICODE_STRING, ByVal NumberOfAttributes As Long, Buffer As Any, ByVal Length As Long, ReturnLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtCreateSection Lib "ntdll" (SectionHandle As LongPtr, [TypeHint(StandardAccessTypes, NTSectionAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, MaximumSize As LARGE_INTEGER, ByVal SectionPageProtection As MemProtectFlags, ByVal AllocationAttributes As NTSectionFlags, Optional ByVal FileHandle As LongPtr) As Long
Public Declare PtrSafe Function NtCreateSectionEx Lib "ntdll" (SectionHandle As LongPtr, [TypeHint(StandardAccessTypes, NTSectionAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, MaximumSize As LARGE_INTEGER, ByVal SectionPageProtection As MemProtectFlags, ByVal AllocationAttributes As NTSectionFlags, ByVal FileHandle As LongPtr, ExtendedParameters As MEM_EXTENDED_PARAMETER, ByVal ExtendedParameterCount As Long) As Long
Public Declare PtrSafe Function NtOpenSection Lib "ntdll" (SectionHandle As LongPtr, [TypeHint(StandardAccessTypes, NTSectionAccessRights, GenericRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES) As NTSTATUS
Public Declare PtrSafe Function NtMapViewOfSection Lib "ntdll" (ByVal SectionHandle As LongPtr, ByVal ProcessHandle As LongPtr, BaseAddress As LongPtr, ByVal ZeroBits As LongPtr, ByVal CommitSize As LongPtr, SectionOffset As LARGE_INTEGER, ViewSize As LongPtr, ByVal AllocationType As MemAllocType, ByVal Win32Protect As MemProtectFlags) As NTSTATUS
Public Declare PtrSafe Function NtUnmapViewOfSection Lib "ntdll" (ByVal ProcessHandle As LongPtr, Optional ByVal BaseAddress As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtCreateProfile Lib "ntdll" (ProfileHandle As LongPtr, ByVal Process As LongPtr, ByVal ProfileBase As LongPtr, ByVal ProfileSize As LongPtr, Buffer As Long, ByVal BufferSize As Long, ByVal ProfileSource As KPROFILE_SOURCE, ByVal Affinity As LongPtr) As Long
Public Declare PtrSafe Function NtCreateProfileEx Lib "ntdll" (ProfileHandle As LongPtr, ByVal Process As LongPtr, ByVal ProfileBase As LongPtr, ByVal ProfileSize As LongPtr, Buffer As Long, ByVal BufferSize As Long, ByVal ProfileSource As KPROFILE_SOURCE, ByVal GroupCount As Long, AffinityArray As GROUP_AFFINITY) As Long
Public Declare PtrSafe Function NtSetIntervalProfile Lib "ntdll" (ByVal Interval As Long, ByVal ProfileSource As KPROFILE_SOURCE) As Long
Public Declare PtrSafe Function NtQueryIntervalProfile Lib "ntdll" (ByVal ProfileSource As KPROFILE_SOURCE, Interval As Long) As Long
Public Declare PtrSafe Function NtStartProfile Lib "ntdll" (ByVal ProfileHandle As LongPtr) As Long
Public Declare PtrSafe Function NtStopProfile Lib "ntdll" (ByVal ProfileHandle As LongPtr) As Long
Public Declare PtrSafe Function NtPowerInformation Lib "ntdll" (ByVal InformationLevel As POWER_INFORMATION_LEVEL, InputBuffer As Any, ByVal InputBufferLength As Long, OutputBuffer As Any, ByVal OutputBufferLength As Long) As Long
Public Declare PtrSafe Function NtShutdownSystem Lib "ntdll" (ByVal Action As SHUTDOWN_ACTION) As Long
[Description("⚠️ **WARNING:** For emergency shutdown only; one step above flipping the power switch. Requires SE_SHUTDOWN_PRIVILEGE")]
Public Declare PtrSafe Function NtSetSystemPowerState Lib "ntdll" (ByVal SystemAction As POWER_ACTION, ByVal MinSystemState As SYSTEM_POWER_STATE, ByVal Flags As SystemShutdownReasons) As Long
Public Declare PtrSafe Function NtGetDevicePowerState Lib "ntdll" (ByVal DeviceHandle As LongPtr, DevicePowerState As DEVICE_POWER_STATE) As NTSTATUS
Public Declare PtrSafe Function NtOpenSymbolicLinkObject Lib "ntdll" (LinkHandle As LongPtr, [TypeHint(GenericRights, SymbolicLinkAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES) As Long
Public Declare PtrSafe Function NtCreateSymbolicLinkObject Lib "ntdll" (LinkHandle As LongPtr, [TypeHint(GenericRights, SymbolicLinkAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, LinkTarget As UNICODE_STRING) As NTSTATUS
Public Declare PtrSafe Function NtQuerySymbolicLinkObject Lib "ntdll" (ByVal LinkHandle As LongPtr, LinkTarget As UNICODE_STRING, Optional ReturnLenfth As Long) As NTSTATUS
Public Declare PtrSafe Function NtOpenDirectoryObject Lib "ntdll" (DirectoryHandle As LongPtr, [TypeHint(GenericRights, DirectoryAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES) As Long
Public Declare PtrSafe Function NtQueryDirectoryObject Lib "ntdll" (ByVal DirectoryHandle As LongPtr, Buffer As Any, ByVal Length As Long, ByVal ReturnSingleEntry As Byte, ByVal RestartScan As Byte, Context As Long, Optional ReturnLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtCreateDirectoryObject Lib "ntdll" (DirectoryHandle As LongPtr, [TypeHint(GenericRights, DirectoryAccessRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES) As NTSTATUS
Public Declare PtrSafe Function NtLoadDriver Lib "ntdll" (DriverServiceName As UNICODE_STRING) As NTSTATUS
Public Declare PtrSafe Function NtUnloadDriver Lib "ntdll" (DriverServiceName As UNICODE_STRING) As NTSTATUS
Public Declare PtrSafe Function NtQuerySystemTime Lib "ntdll" (SystemTime As LARGE_INTEGER) As NTSTATUS
Public Declare PtrSafe Function NtSetSystemTime Lib "ntdll" (SystemTime As LARGE_INTEGER, PreviousTime As LARGE_INTEGER) As NTSTATUS
Public Declare PtrSafe Function NtQueryTimerResolution Lib "ntdll" (MinimumResolution As Long, MaximumResolution As Long, CurrentResolution As Long) As NTSTATUS
Public Declare PtrSafe Function NtSetTimerResolution Lib "ntdll" (ByVal DesiredResolution As Long, ByVal SetResolution As Byte, CurrentResolution As Long) As NTSTATUS
Public Declare PtrSafe Function NtCreateTimer Lib "ntdll" (TimerHandle As LongPtr, ByVal DesiredAccess As TimerAccessRights, ObjectAttributes As OBJECT_ATTRIBUTES, ByVal TimerType As TIMER_TYPE) As NTSTATUS
Public Declare PtrSafe Function NtCancelTimer Lib "ntdll" (ByVal TimerHandle As LongPtr, Optional CurrentState As Byte) As NTSTATUS
Public Declare PtrSafe Function NtSetTimer Lib "ntdll" (ByVal TimerHandle As LongPtr, DueTime As LARGE_INTEGER, ByVal TimerApcRoutine As LongPtr, ByVal TimerContext As LongPtr, ByVal ResumeTimer As Byte, Optional ByVal Period As Long, Optional PreviousState As Byte) As NTSTATUS
Public Declare PtrSafe Function NtQueryTimer Lib "ntdll" (ByVal TimerHandle As LongPtr, ByVal TimerInformationClass As TIMER_INFORMATION_CLASS, TimerInformation As Any, ReturnLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtGetTickCount Lib "ntdll" () As Long
Public Declare PtrSafe Function NtYieldExecution Lib "ntdll" () As NTSTATUS
Public Declare PtrSafe Function NtWaitForSingleObject Lib "ntdll" (ByVal Handle As LongPtr, ByVal Alertable As Byte, Timeout As LARGE_INTEGER) As NTSTATUS
Public Declare PtrSafe Function NtRaiseHardError Lib "ntdll" (ByVal ErrorStatus As NTSTATUS, ByVal NumberOfParameters As Long, ByVal UnicodeStringParametersMask As Long, Parameters As Any, ByVal ResponseOption As HARDERROR_RESPONSE_OPTION, Response As HARDERROR_RESPONSE) As NTSTATUS
Public Declare PtrSafe Function NtCreateUserProcess Lib "ntdll" (ProcessHandle As LongPtr, ThreadHandle As LongPtr, [TypeHint(ProcessAccessRights, StandardAccessTypes)] ByVal ProcessDesiredAccess As Long, [TypeHint(ThreadAccessRights, StandardAccessTypes)] ByVal ThreadDesiredAccess As Long, _
                                                                    ProcessObjectAttributes As OBJECT_ATTRIBUTES, ThreadObjectAttributes As OBJECT_ATTRIBUTES, ByVal ProcessFlags As PROCESS_CREATE_FLAGS, ByVal ThreadFlags As THREAD_CREATE_FLAGS, ProcessParameters As Any, CreateInfo As PS_CREATE_INFO, AttributeList As PS_ATTRIBUTE_LIST) As NTSTATUS

Public Function NtCurrentProcess() As LongPtr: Return (-1): End Function
Public Function NtCurrentThread() As LongPtr: Return (-2): End Function
Public Function NtCurrentProcessToken() As LongPtr: Return (-4): End Function
Public Function NtCurrentThreadToken() As LongPtr: Return (-5): End Function
Public Function NtCurrentThreadEffectiveToken() As LongPtr: Return (-6): End Function

Public Enum NtRegBootConditionFlags
    REG_INIT_BOOT_SM = &H0000
    REG_INIT_BOOT_SETUP = &H0001
    REG_INIT_BOOT_ACCEPTED_BASE = &H0002
    REG_INIT_BOOT_ACCEPTED_MAX = REG_INIT_BOOT_ACCEPTED_BASE + 999
End Enum

Public Const REG_MAX_KEY_VALUE_NAME_LENGTH  = 32767
Public Const REG_MAX_KEY_NAME_LENGTH  = 512

Public Enum KEY_INFORMATION_CLASS
    KeyBasicInformation ' KEY_BASIC_INFORMATION
    KeyNodeInformation ' KEY_NODE_INFORMATION
    KeyFullInformation ' KEY_FULL_INFORMATION
    KeyNameInformation ' KEY_NAME_INFORMATION
    KeyCachedInformatio ' KEY_CACHED_INFORMATION
    KeyFlagsInformation ' KEY_FLAGS_INFORMATION
    KeyVirtualizationInformation ' KEY_VIRTUALIZATION_INFORMATION
    KeyHandleTagsInformation ' KEY_HANDLE_TAGS_INFORMATION
    KeyTrustInformation ' KEY_TRUST_INFORMATION
    KeyLayerInformation ' KEY_LAYER_INFORMATION
    MaxKeyInfoClass
End Enum
    
[Description("IMPORTANT: Name is variable C-style array.")]
Public Type KEY_BASIC_INFORMATION
    LastWriteTime As LARGE_INTEGER
    TitleIndex As Long
    NameLength As Long
    Name(REG_MAX_KEY_NAME_LENGTH) As Integer
End Type

[Description("IMPORTANT: This is a header type only; the members are followed in memory by two variable-length C-style arrays.")]
Public Type KEY_NODE_INFORMATION
    LastWriteTime As LARGE_INTEGER
    TitleIndex As Long
    ClassOffset As Long
    ClassLength As Long
    NameLength As Long
    'Name(REG_MAX_KEY_NAME_LENGTH) As Integer
    ' ...
    ' WCHAR Class[1];
End Type

[Description("IMPORTANT: Class is variable C-style array.")]
Public Type KEY_FULL_INFORMATION
    LastWriteTime As LARGE_INTEGER
    TitleIndex As Long
    ClassOffset As Long
    ClassLength As Long
    SubKeys As Long
    MaxNameLength As Long
    MaxClassLength As Long
    Values As Long
    MaxValueNameLength As Long
    MaxValueDataLength As Long
    Class(0 To REG_MAX_KEY_NAME_LENGTH) As Integer
End Type

[Description("IMPORTANT: Name is variable C-style array.")]
Public Type KEY_NAME_INFORMATION
    NameLength As Long
    Name(0 To REG_MAX_KEY_NAME_LENGTH) As Integer
End Type

[Description("IMPORTANT: Name is variable C-style array.")]
Public Type KEY_CACHED_INFORMATION
    LastWriteTime As LARGE_INTEGER
    TitleIndex As Long
    SubKeys As Long
    MaxNameLength As Long
    Values As Long
    MaxValueNameLength As Long
    MaxValueDataLength As Long
    NameLength As Long
    Name(0 To REG_MAX_KEY_NAME_LENGTH) As Integer
End Type

Public Enum NtRegFlags
    REG_FLAG_VOLATILE = &H0001
    REG_FLAG_LINK = &H0002
End Enum

Public Enum NtRegKeyFlags
    REG_KEY_DONT_VIRTUALIZE = &H0002
    REG_KEY_DONT_SILENT_FAIL = &H0004
    REG_KEY_RECURSE_FLAG = &H0008
End Enum

Public Type KEY_FLAGS_INFORMATION
    Wow64Flags As Long
    KeyFlags As NtRegFlags ' REG_FLAG_*
    ControlFlags As NtRegKeyFlags ' REG_KEY_*
End Type

Public Type KEY_VIRTUALIZATION_INFORMATION
    ' ULONG VirtualizationCandidate : 1; // Tells whether the key is part of the virtualization namespace scope (only HKLM\Software for now).
    ' ULONG VirtualizationEnabled : 1; // Tells whether virtualization is enabled on this key. Can be 1 only if above flag is 1.
    ' ULONG VirtualTarget : 1; // Tells if the key is a virtual key. Can be 1 only if above 2 are 0. Valid only on the virtual store key handles.
    ' ULONG VirtualStore : 1; // Tells if the key is a part of the virtual store path. Valid only on the virtual store key handles.
    ' ULONG VirtualSource : 1; // Tells if the key has ever been virtualized, can be 1 only if VirtualizationCandidate is 1.
    ' ULONG Reserved : 27;
    Flags As Long
End Type

Public Type KEY_TRUST_INFORMATION
    ' ULONG TrustedKey : 1;
    ' ULONG Reserved : 31;
    Flags As Long
End Type

Public Type KEY_LAYER_INFORMATION
    ' ULONG IsTombstone : 1;
    ' ULONG IsSupersedeLocal : 1;
    ' ULONG IsSupersedeTree : 1;
    ' ULONG ClassIsInherited : 1;
    ' ULONG Reserved : 28;
    Flags As Long
End Type

Public Enum KEY_SET_INFORMATION_CLASS
    KeyWriteTimeInformation ' KEY_WRITE_TIME_INFORMATION
    KeyWow64FlagsInformation ' KEY_WOW64_FLAGS_INFORMATION
    KeyControlFlagsInformation ' KEY_CONTROL_FLAGS_INFORMATION
    KeySetVirtualizationInformation ' KEY_SET_VIRTUALIZATION_INFORMATION
    KeySetDebugInformation
    KeySetHandleTagsInformation ' KEY_HANDLE_TAGS_INFORMATION
    KeySetLayerInformation ' KEY_SET_LAYER_INFORMATION
    MaxKeySetInfoClass
End Enum

Public Type KEY_WRITE_TIME_INFORMATION
    LastWriteTime As LARGE_INTEGER
End Type

Public Type KEY_WOW64_FLAGS_INFORMATION
    UserFlags As Long
End Type

Public Type KEY_HANDLE_TAGS_INFORMATION
    HandleTags As Long
End Type

Public Type KEY_SET_LAYER_INFORMATION
    ' ULONG IsTombstone : 1;
    ' ULONG IsSupersedeLocal : 1;
    ' ULONG IsSupersedeTree : 1;
    ' ULONG ClassIsInherited : 1;
    ' ULONG Reserved : 28;
    Flags As Long
End Type

Public Type KEY_CONTROL_FLAGS_INFORMATION
    ControlFlags As Long
End Type

Public Type KEY_SET_VIRTUALIZATION_INFORMATION
    ' ULONG VirtualTarget : 1;
    ' ULONG VirtualStore : 1;
    ' ULONG VirtualSource : 1; // true if key has been virtualized at least once
    ' ULONG Reserved : 29;
    Flags As Long
End Type

Public Enum KEY_VALUE_INFORMATION_CLASS
    KeyValueBasicInformation ' KEY_VALUE_BASIC_INFORMATION
    KeyValueFullInformation ' KEY_VALUE_FULL_INFORMATION
    KeyValuePartialInformation ' KEY_VALUE_PARTIAL_INFORMATION
    KeyValueFullInformationAlign64
    KeyValuePartialInformationAlign64 ' KEY_VALUE_PARTIAL_INFORMATION_ALIGN64
    KeyValueLayerInformation ' KEY_VALUE_LAYER_INFORMATION
    MaxKeyValueInfoClass
End Enum

[Description("IMPORTANT: Name is variable C-style array.")]
Public Type KEY_VALUE_BASIC_INFORMATION
    TitleIndex As Long
    Type As Long
    NameLength As Long
    Name(0 To REG_MAX_KEY_NAME_LENGTH) As Integer
End Type

[Description("IMPORTANT: This is a header type only; the members are followed in memory by two variable-length C-style arrays.")]
Public Type KEY_VALUE_FULL_INFORMATION
    TitleIndex As Long
    Type As Long
    DataOffset As Long
    DataLength As Long
    NameLength As Long
    '   _Field_size_bytes_(NameLength) WCHAR Name[1];
    ' ...
    ' UCHAR Data[1];
End Type

[Description("IMPORTANT: Data is variable C-style array.")]
Public Type KEY_VALUE_PARTIAL_INFORMATION
    TitleIndex As Long
    Type As Long
    DataLength As Long
    Data(0 To REG_MAX_KEY_VALUE_NAME_LENGTH) As Byte
End Type

[Description("IMPORTANT: Data is variable C-style array.")]
Public Type KEY_VALUE_PARTIAL_INFORMATION_ALIGN64
    Type As Long
    DataLength As Long
    Data(0 To REG_MAX_KEY_VALUE_NAME_LENGTH) As Byte
End Type

Public Type KEY_VALUE_LAYER_INFORMATION
    ' ULONG IsTombstone : 1;
    ' ULONG Reserved : 31;
    Flags As Long
End Type

Public Enum CM_EXTENDED_PARAMETER_TYPE
    CmExtendedParameterInvalidType
    CmExtendedParameterTrustClassKey
    CmExtendedParameterEvent
    CmExtendedParameterFileAccessToken
    CmExtendedParameterMax
End Enum

Public Const CM_EXTENDED_PARAMETER_TYPE_BITS = 8

' typedef struct DECLSPEC_ALIGN(8) _CM_EXTENDED_PARAMETER
Public Type CM_EXTENDED_PARAMETER
    ' struct
    ' {
        ' ULONG64 Type : CM_EXTENDED_PARAMETER_TYPE_BITS;
        ' ULONG64 Reserved : 64 - CM_EXTENDED_PARAMETER_TYPE_BITS;
    ' };
    uType As LongLong
    ' union
    ' {
        ' ULONG64 ULong64;
        ' PVOID Pointer;
        ' SIZE_T Size;
        ' HANDLE Handle;
        ' ULONG ULong;
        ' ACCESS_MASK AccessMask;
    ' };
    u As LongLong
End Type

Public Type KEY_VALUE_ENTRY
    ValueName As LongPtr 'PUNICODE_STRING
    DataLength As Long
    DataOffset As Long
    Type As Long
End Type

Public Enum REG_ACTION
    KeyAdded
    KeyRemoved
    KeyModified
End Enum

[Description("IMPORTANT: This is a header type only; the members are followed in memory by a variable-length C-style array.")]
Public Type REG_NOTIFY_INFORMATION
    NextEntryOffset As Long
    Action As REG_ACTION
    KeyLength As Long
    '    _Field_size_bytes_(KeyLength) WCHAR Key[1];
End Type

Public Type KEY_PID_ARRAY
    ProcessId As LongPtr
    KeyName As UNICODE_STRING
End Type

[Description("IMPORTANT: This is a header type only; the members are followed in memory by a variable-length C-style array.")]
Public Type KEY_OPEN_SUBKEYS_INFORMATION
    Count As Long
    'KeyArray(0 To 0) As KEY_PID_ARRAY
End Type

Public Enum NtLoadKeyExFlags
    NTLKEF_AppKey = &H10
    NTLKEF_Exclusive = &H20
    NTLKEF_Unknown800 = &H800
    NTLKEF_ReadOnly = &H2000
End Enum

Public Declare PtrSafe Function NtCreateKey Lib "ntdll" (KeyHandle As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, ByVal TitleIndex As Long, Class As UNICODE_STRING, ByVal CreateOptions As RegOptions, Disposition As RegistryCreateDispositions) As NTSTATUS
Public Declare PtrSafe Function NtCreateKeyTransacted Lib "ntdll" (KeyHandle As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, ByVal TitleIndex As Long, Class As UNICODE_STRING, ByVal CreateOptions As RegOptions, ByVal TransactionHandle As LongPtr, Disposition As RegistryCreateDispositions) As NTSTATUS
Public Declare PtrSafe Function NtOpenKey Lib "ntdll" (KeyHandle As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES) As NTSTATUS
Public Declare PtrSafe Function NtOpenKeyTransacted Lib "ntdll" (KeyHandle As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, ByVal TransactionHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtOpenKeyEx Lib "ntdll" (KeyHandle As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, ByVal OpenOptions As RegOptions) As NTSTATUS
Public Declare PtrSafe Function NtOpenKeyTransactedEx Lib "ntdll" (KeyHandle As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, ObjectAttributes As OBJECT_ATTRIBUTES, ByVal OpenOptions As RegOptions, ByVal TransactionHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtDeleteKey Lib "ntdll" (ByVal KeyHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtRenameKey Lib "ntdll" (ByVal KeyHandle As LongPtr, NewName As UNICODE_STRING) As NTSTATUS
Public Declare PtrSafe Function NtDeleteValueKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ValueName As UNICODE_STRING) As NTSTATUS
Public Declare PtrSafe Function NtQueryKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ByVal KeyInformationClass As KEY_INFORMATION_CLASS, KeyInformation As Any, ByVal Length As Long, ResultLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtSetInformationKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ByVal KeySetInformationClass As KEY_SET_INFORMATION_CLASS, KeySetInformation As Any, ByVal KeySetInformationLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtQueryValueKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ValueName As UNICODE_STRING, ByVal KeyValueInformationClass As KEY_VALUE_INFORMATION_CLASS, KeyValueInformation As Any, ByVal Length As Long, ResultLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtSetValueKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ValueName As UNICODE_STRING, ByVal TitleIndex As Long, ByVal Type As REGTYPES, Data As Any, ByVal DataSize As Long) As NTSTATUS
Public Declare PtrSafe Function NtQueryMultipleValueKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ValueEntries As Any, ByVal EntryCount As Long, ValueBuffer As Any, BufferLength As Long, Optional RequiredBufferLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtEnumerateKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ByVal Index As Long, ByVal KeyInformationClass As KEY_INFORMATION_CLASS, KeyInformation As Any, ByVal Length As Long, ResultLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtEnumerateValueKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ByVal Index As Long, ByVal KeyValueInformationClass As KEY_VALUE_INFORMATION_CLASS, KeyValueInformation As Any, ByVal Length As Long, ResultLength As Long) As NTSTATUS
Public Declare PtrSafe Function NtFlushKey Lib "ntdll" (ByVal KeyHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtCompactKeys Lib "ntdll" (ByVal Count As Long, KeyArray As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtCompressKey Lib "ntdll" (ByVal KeyHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtLoadKey Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES, SourceFile As OBJECT_ATTRIBUTES) As NTSTATUS
Public Declare PtrSafe Function NtLoadKey2 Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES, SourceFile As OBJECT_ATTRIBUTES, ByVal Flags As RegKeyRestoreAndLoadHiveFlags) As NTSTATUS
[Description("NOTE: This function existed prior to Vista but only had 4 arguments.")]
Public Declare PtrSafe Function NtLoadKeyEx Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES, SourceFile As OBJECT_ATTRIBUTES, ByVal Flags As NtLoadKeyExFlags, ByVal TrustClassKey As LongPtr, ByVal Event As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, RootHandle As LongPtr, ByVal Reserved As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtLoadKey3 Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES, SourceFile As OBJECT_ATTRIBUTES, ByVal Flags As RegKeyRestoreAndLoadHiveFlags, ExtendedParameters As CM_EXTENDED_PARAMETER, ByVal ExtendedParameterCount As Long, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, RootHandle As LongPtr, ByVal Reserved As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtReplaceKey Lib "ntdll" (NewFile As OBJECT_ATTRIBUTES, ByVal TargetHandle As LongPtr, OldFile As OBJECT_ATTRIBUTES) As NTSTATUS
Public Declare PtrSafe Function NtSaveKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ByVal FileHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtSaveKeyEx Lib "ntdll" (ByVal KeyHandle As LongPtr, ByVal FileHandle As LongPtr, ByVal Format As RegSaveKeyFlags) As NTSTATUS
Public Declare PtrSafe Function NtSaveMergedKeys Lib "ntdll" (ByVal HighPrecedenceKeyHandle As LongPtr, ByVal LowPrecedenceKeyHandle As LongPtr, ByVal FileHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtRestoreKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ByVal FileHandle As LongPtr, ByVal Flags As RegKeyRestoreAndLoadHiveFlags) As NTSTATUS
Public Declare PtrSafe Function NtUnloadKey Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES) As NTSTATUS
Public Declare PtrSafe Function NtUnloadKey2 Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES, ByVal Flags As RegUnloadFlags) As NTSTATUS
Public Declare PtrSafe Function NtUnloadKeyEx Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES, ByVal Event As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtNotifyChangeKey Lib "ntdll" (ByVal KeyHandle As LongPtr, ByVal Event As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, IoStatusBlock As IO_STATUS_BLOCK, ByVal CompletionFilter As RegNotifyChangeValues, ByVal WatchTree As Byte, Buffer As Any, ByVal BufferSize As Long, ByVal Asynchronous As Byte) As NTSTATUS
Public Declare PtrSafe Function NtNotifyChangeMultipleKeys Lib "ntdll" (ByVal MasterKeyHandle As LongPtr, ByVal Count As Long, SubordinateObjects As OBJECT_ATTRIBUTES, ByVal Event As LongPtr, ByVal ApcRoutine As LongPtr, ByVal ApcContext As LongPtr, IoStatusBlock As IO_STATUS_BLOCK, ByVal CompletionFilter As RegNotifyChangeValues, ByVal WatchTree As Byte, Buffer As Any, ByVal BufferSize As Long, ByVal Asynchronous As Byte) As NTSTATUS
Public Declare PtrSafe Function NtQueryOpenSubKeys Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES, HandleCount As Long) As NTSTATUS
Public Declare PtrSafe Function NtQueryOpenSubKeysEx Lib "ntdll" (TargetKey As OBJECT_ATTRIBUTES, ByVal BufferLength As Long, Buffer As Any, RequiredSize As Long) As NTSTATUS
Public Declare PtrSafe Function NtInitializeRegistry Lib "ntdll" (ByVal BootCondition As Integer) As NTSTATUS
Public Declare PtrSafe Function NtLockRegistryKey Lib "ntdll" (ByVal KeyHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NtLockProductActivationKeys Lib "ntdll" (pPrivateVer As Long, pSafeMode As Long) As NTSTATUS
Public Declare PtrSafe Function NtFreezeRegistry Lib "ntdll" (ByVal TimeOutInSeconds As Long) As NTSTATUS
Public Declare PtrSafe Function NtThawRegistry Lib "ntdll" () As NTSTATUS
Public Declare PtrSafe Function NtCreateRegistryTransaction Lib "ntdll" (RegistryTransactionHandle As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, ObjAttributes As OBJECT_ATTRIBUTES, ByVal CreateOptions As Long) As NTSTATUS
Public Declare PtrSafe Function NtOpenRegistryTransaction Lib "ntdll" (RegistryTransactionHandle As LongPtr, [TypeHint(REGSAM, StandardAccessTypes, GenericRights)] ByVal DesiredAccess As Long, ObjAttributes As OBJECT_ATTRIBUTES) As NTSTATUS
Public Declare PtrSafe Function NtCommitRegistryTransaction Lib "ntdll" (ByVal RegistryTransactionHandle As LongPtr, ByVal Flags As Long) As NTSTATUS
Public Declare PtrSafe Function NtRollbackRegistryTransaction Lib "ntdll" (ByVal RegistryTransactionHandle As LongPtr, ByVal Flags As Long) As NTSTATUS



'
Public Declare PtrSafe Function RtlAdjustPrivilege Lib "ntdll" (ByVal Privilege As NTDefinedPrivilegeConsts, ByVal Enable As Byte, ByVal CurrentThread As Byte, Enabled As Byte) As Long
Public Declare PtrSafe Sub RtlFreeUnicodeString Lib "ntdll" (UnicodeString As UNICODE_STRING)
Public Declare PtrSafe Sub RtlInitUnicodeString Lib "ntdll" (DestinationString As Any, ByVal SourceString As LongPtr)
Public Declare PtrSafe Function RtlUpcaseUnicodeString Lib "ntdll" (DestinationString As UNICODE_STRING, SourceString As UNICODE_STRING, ByVal AllocateDestinationString As Byte) As Long
Public Declare PtrSafe Function RtlEqualUnicodeString Lib "ntdll" (String1 As UNICODE_STRING, String2 As UNICODE_STRING, ByVal CaseInSensitive As Byte) As Byte
Public Declare PtrSafe Function CompareMemory Lib "ntdll" Alias "RtlCompareMemory" (Source1 As Any, Source2 As Any, ByVal Length As LongPtr) As LongPtr
Public Declare PtrSafe Function RtlCompareMemory Lib "ntdll" (Source1 As Any, Source2 As Any, ByVal Length As LongPtr) As LongPtr
Public Declare PtrSafe Function RtlIsZeroMemory Lib "ntdll" (Buffer As Any, ByVal Length As LongPtr) As Byte 'BOOLEAN
[Description("Returns true Windows version. Takes either OSVERSIONINFO or OSVERSIONINFOEX types (RTL_OSV... is an alias for these).")]
Public Declare PtrSafe Function RtlGetVersion Lib "ntdll" (lpVersionInformation As Any) As Long
Public Declare PtrSafe Sub RtlGetNtVersionNumbers Lib "ntdll" (Major As Long, Minor As Long, Build As Long)
Public Declare PtrSafe Function RtlDosPathNameToNtPathName_U Lib "ntdll" (ByVal DosFileName As LongPtr, NtFileName As UNICODE_STRING, FilePart As LongPtr, RelativeName As Any) As Boolean
Public Declare PtrSafe Function RtlGetCurrentPeb Lib "ntdll" () As LongPtr
Public Declare PtrSafe Sub RtlAcquirePebLock Lib "ntdll" ()
Public Declare PtrSafe Sub RtlReleasePebLock Lib "ntdll" ()
Public Declare PtrSafe Function RtlNtStatusToDosError Lib "ntdll" (ByVal ntStatus As NTSTATUS) As Long
[Description("Generates a uniform random number using D.H. Lehmer's 1948 algorithm.")]
Public Declare PtrSafe Function RtlUniform Lib "ntdll" (Seed As Long) As Long
Public Declare PtrSafe Function RtlImageNtHeader Lib "ntdll" (ByVal ModuleBase As LongPtr) As LongPtr
Public Declare PtrSafe Function RtlImageRvaToVa Lib "ntdll" (ByVal NtHeaders As LongPtr, ByVal ModuleBase As LongPtr, ByVal Rva As Long, pLastSection As IMAGE_SECTION_HEADER) As LongPtr
Public Declare PtrSafe Function RtlImageRvaToSection Lib "ntdll" (nt As IMAGE_NT_HEADERS, ByVal BaseAddress As LongPtr, ByVal rva As Long) As LongPtr
Public Declare PtrSafe Function RtlImageDirectoryEntryToData Lib "ntdll" (ByVal BaseAddress As LongPtr, ByVal MappedAsImage As Byte, [TypeHint(ImageDirectories)] ByVal Directory As Integer, size As Long) As LongPtr
Public Declare PtrSafe Function RtlGetNtGlobalFlags Lib "ntdll" () As NTGLB_Flags
Public Declare PtrSafe Function RtlAllocateHeap Lib "ntdll" (ByVal HeapHandle As LongPtr, ByVal Flags As HeapFlags, ByVal Size As LongPtr) As LongPtr
Public Declare PtrSafe Function RtlCreateHeap Lib "ntdll" (ByVal Flags As HeapFlags, ByVal HeapBase As LongPtr, ByVal ReserveSize As LongPtr, ByVal CommitSize As LongPtr, ByVal Lock As LongPtr, Parameters As RTL_HEAP_PARAMETERS) As LongPtr
Public Declare PtrSafe Function RtlFreeHeap Lib "ntdll" (ByVal HeapHandle As LongPtr, ByVal Flags As HeapFlags, ByVal BaseAddress As LongPtr) As Long
Public Declare PtrSafe Function RtlDestroyHeap Lib "ntdll" (ByVal HeapHandle As LongPtr) As LongPtr
Public Declare PtrSafe Function RtlCreateProcessParametersEx Lib "ntdll" (pProcessParameters As Any, ImagePathName As UNICODE_STRING, DllPath As UNICODE_STRING, CurrentDirectory As UNICODE_STRING, CommandLine As UNICODE_STRING, _
                                               Environment As Any, WindowTitle As UNICODE_STRING, DesktopInfo As UNICODE_STRING, ShellInfo As UNICODE_STRING, RuntimeData As UNICODE_STRING, ByVal Flags As RTL_UPP_FLAGS) As NTSTATUS
Public Declare PtrSafe Function RtlCreateProcessParameters Lib "ntdll" (pProcessParameters As Any, ImagePathName As UNICODE_STRING, DllPath As UNICODE_STRING, CurrentDirectory As UNICODE_STRING, CommandLine As UNICODE_STRING, _
                                               ByVal Environment As LongPtr, WindowTitle As UNICODE_STRING, DesktopInfo As UNICODE_STRING, ShellInfo As UNICODE_STRING, RuntimeData As UNICODE_STRING) As NTSTATUS
Public Declare PtrSafe Function RtlCreateEnvironment Lib "ntdll" (ByVal bInherit As Byte, Environment As LongPtr) As NTSTATUS
Public Declare PtrSafe Function RtlDestroyProcessParameters Lib "ntdll" (pProcessParameters As Any) As NTSTATUS
Public Declare PtrSafe Function RtlQueryModuleInformation Lib "ntdll" (InformationLength As Long, ByVal SizePerModule As Long, InformationBuffer As Any) As NTSTATUS
Public Declare PtrSafe Function RtlCrc32 Lib "ntdll" (Buffer As Any, ByVal size As LongPtr, ByVal InitialCrc As Long) As Long
Public Declare PtrSafe Function RtlCrc64 Lib "ntdll" (Buffer As Any, ByVal size As LongPtr, ByVal InitialCrc As LongLong) As LongLong
Public Declare PtrSafe Function RtlCompressBuffer Lib "ntdll" ([TypeHint(NT_COMPRESSION_FORMAT)] ByVal CompressionFormatAndEngine As Integer, UncompressedBuffer As Any, ByVal UncompressedBufferSize As Long, CompressedBuffer As Any, ByVal CompressedBufferSize As Long, ByVal UncompressedChunkSize As Long, FinalCompressedSize As Long, ByVal Workspace As LongPtr) As NTSTATUS
Public Declare PtrSafe Function RtlDecompressBuffer Lib "ntdll" ([TypeHint(NT_COMPRESSION_FORMAT)] ByVal CompressionFormat As Integer, UncompressedBuffer As Any, ByVal UncompressedBufferSize As Long, CompressedBuffer As Any, ByVal CompressedBufferSize As Long, FinalUncompressedSize As Long) As NTSTATUS
Public Declare PtrSafe Function RtlDecompressBufferEx Lib "ntdll" ([TypeHint(NT_COMPRESSION_FORMAT)] ByVal CompressionFormat As Integer, UncompressedBuffer As Any, ByVal UncompressedBufferSize As Long, CompressedBuffer As Any, ByVal CompressedBufferSize As Long, FinalUncompressedSize As Long, ByVal Workspace As LongPtr) As NTSTATUS
Public Declare PtrSafe Function RtlDecompressBufferEx2 Lib "ntdll" ([TypeHint(NT_COMPRESSION_FORMAT)] ByVal CompressionFormat As Integer, UncompressedBuffer As Any, ByVal UncompressedBufferSize As Long, CompressedBuffer As Any, ByVal CompressedBufferSize As Long, ByVal UncompressedChunkSize As Long, FinalUncompressedSize As Long, ByVal Workspace As LongPtr) As NTSTATUS
Public Declare PtrSafe Function RtlDecompressFragment Lib "ntdll" ([TypeHint(NT_COMPRESSION_FORMAT)] ByVal CompressionFormat As Integer, UncompressedFragment As Any, ByVal UncompressedFragmentSize As Long, CompressedBuffer As Any, ByVal CompressedBufferSize As Long, ByVal FragmentOffset As Long, FinalUncompressedSize As Long, ByVal Workspace As LongPtr) As NTSTATUS
Public Declare PtrSafe Function RtlDecompressFragmentEx Lib "ntdll" ([TypeHint(NT_COMPRESSION_FORMAT)] ByVal CompressionFormat As Integer, UncompressedFragment As Any, ByVal UncompressedFragmentSize As Long, CompressedBuffer As Any, ByVal CompressedBufferSize As Long, ByVal FragmentOffset As Long, ByVal UncompressedChunkSize As Long, FinalUncompressedSize As Long, ByVal Workspace As LongPtr) As NTSTATUS
Public Declare PtrSafe Function RtlGetCompressionWorkSpaceSize Lib "ntdll" ([TypeHint(NT_COMPRESSION_FORMAT)] ByVal CompressionFormatAndEngine As Integer, CompressBufferWorkSpaceSize As Long, CompressFragmentWorkSpaceSize As Long) As NTSTATUS
Public Declare PtrSafe Sub RtlGetDeviceFamilyInfoEnum Lib "ntdll" (pullUAPInfo As LongLong, pulDeviceFamily As DEVICEFAMILYINFOENUM, pulDeviceForm As DEVICEFAMILYDEVICEFORM)
Public DeclareWide PtrSafe Function RtlConvertDeviceFamilyInfoToString Lib "ntdll" (pulDeviceFamilyBufferSize As Long, pulDeviceFormBufferSize As Long, ByVal DeviceFamily As String, ByVal DeviceForm As String) As Long
Public Declare PtrSafe Function RtlCreateUserThread Lib "ntdll" (ByVal ProcessHandle As LongPtr, SecurityDescriptor As SECURITY_DESCRIPTOR, ByVal CreateSuspended As Byte, ByVal StackZeroBits As Long, ByVal StackReserve As LongPtr, ByVal StackCommit As LongPtr, ByVal StartAddress As LongPtr, Parameter As Any, ThreadHandle As LongPtr, ClientId As CLIENT_ID) As NTSTATUS
Public Declare PtrSafe Function RtlTimeFieldsToTime Lib "ntdll" (TimeFields As TIME_FIELDS, pTime As LARGE_INTEGER) As Byte
Public Declare PtrSafe Sub RtlTimeToTimeFields Lib "ntdll" (pTime As LARGE_INTEGER, TimeFields As TIME_FIELDS)
Public Declare PtrSafe Function RtlInitializeCorrelationVector Lib "ntdll" (CorrelationVector As CORRELATION_VECTOR, ByVal Version As Long, Guid As UUID) As Long
Public Declare PtrSafe Function RtlIncrementCorrelationVector Lib "ntdll" (CorrelationVector As CORRELATION_VECTOR) As Long
Public Declare PtrSafe Function RtlExtendCorrelationVector Lib "ntdll" (CorrelationVector As CORRELATION_VECTOR) As Long
Public Declare PtrSafe Function RtlValidateCorrelationVector Lib "ntdll" (CorrelationVector As CORRELATION_VECTOR) As Long
Public Declare PtrSafe Function RtlCaptureStackBackTrace Lib "ntdll" (ByVal FramesToSkip As Long, ByVal FramesToCapture As Long, BackTrace As LongPtr, Optional BackTraceHash As Long) As Integer
Public Declare PtrSafe Sub RtlUnwind Lib "ntdll" (ByVal TargetFrame As LongPtr, ByVal TargetIp As LongPtr, ExceptionRecord As EXCEPTION_RECORD, ByVal ReturnValue As LongPtr)
Public Declare PtrSafe Sub RtlUnwindEx Lib "ntdll" (ByVal TargetFrame As LongPtr, ByVal TargetIp As LongPtr, ExceptionRecord As EXCEPTION_RECORD, ByVal ReturnValue As LongPtr, ContextRecord As _CONTEXT, HistoryTable As UNWIND_HISTORY_TABLE)
Public Declare PtrSafe Function RtlQueryElevationFlags Lib "ntdll" (pFlags As ElevationFlags) As NTSTATUS
Public Declare PtrSafe Function RtlAddFunctionTable CDecl Lib "ntdll" (FunctionTable As RUNTIME_FUNCTION, ByVal EntryCount As Long, ByVal BaseAddress As LongLong) As Byte
Public Declare PtrSafe Function RtlDeleteFunctionTable CDecl Lib "ntdll" (FunctionTable As RUNTIME_FUNCTION) As Byte
Public Declare PtrSafe Function RtlInstallFunctionTableCallback CDecl Lib "ntdll" (ByVal TableIdentifier As LongLong, ByVal BaseAddress As LongLong, ByVal Length As Long, ByVal Callback As LongPtr, ByVal Context As LongPtr, ByVal OutOfProcessCallbackDll As LongPtr) As Byte
Public Declare PtrSafe Function RtlLookupFunctionEntry Lib "ntdll" (ByVal ControlPc As LongLong, ImageBase As LongLong, HistoryTable As UNWIND_HISTORY_TABLE) As LongPtr
Public Declare PtrSafe Function RtlGetSystemGlobalData Lib "ntdll" (ByVal DataId As RTL_SYSTEM_GLOBAL_DATA_ID, Buffer As Any, ByVal Size As Long) As Long
Public Declare PtrSafe Function RtlSetSystemGlobalData Lib "ntdll" (ByVal DataId As RTL_SYSTEM_GLOBAL_DATA_ID, Buffer As Any, ByVal Size As Long) As Long
[Description("While MSDN asserts this as required for accessing the NtSystemRoot field of KUSER_SHARED_DATA, a field present since NT4, it's only available in Win10 RS2+")]
Public Declare PtrSafe Function RtlGetNtSystemRoot Lib "ntdll" () As LongPtr

Public Declare PtrSafe Function RtlIpv4AddressToStringA Lib "ntdll" (Addr As IN_ADDR, ByVal s As String) As LongPtr
Public Declare PtrSafe Function RtlIpv4AddressToStringW Lib "ntdll" (Addr As IN_ADDR, ByVal s As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function RtlIpv4AddressToString Lib "ntdll" Alias "RtlIpv4AddressToStringW" (Addr As IN_ADDR, ByVal s As String) As LongPtr
Public Declare PtrSafe Function RtlIpv4AddressToStringExA Lib "ntdll" (Address As IN_ADDR, ByVal Port As Integer, ByVal AddressString As String, AddressStringLength As Long) As Long
Public Declare PtrSafe Function RtlIpv4AddressToStringExW Lib "ntdll" (Address As IN_ADDR, ByVal Port As Integer, ByVal AddressString As LongPtr, AddressStringLength As Long) As Long
Public DeclareWide PtrSafe Function RtlIpv4AddressToStringEx Lib "ntdll" Alias "RtlIpv4AddressToStringExW" (Address As IN_ADDR, ByVal Port As Integer, ByVal AddressString As String, AddressStringLength As Long) As Long
Public Declare PtrSafe Function RtlIpv4StringToAddressA Lib "ntdll" (ByVal s As String, ByVal Strict As Byte, Terminator As LongPtr, Addr As IN_ADDR) As Long
Public Declare PtrSafe Function RtlIpv4StringToAddressW Lib "ntdll" (ByVal s As LongPtr, ByVal Strict As Byte, Terminator As LongPtr, Addr As IN_ADDR) As Long
Public DeclareWide PtrSafe Function RtlIpv4StringToAddress Lib "ntdll" Alias "RtlIpv4StringToAddressW" (ByVal s As String, ByVal Strict As Byte, Terminator As LongPtr, Addr As IN_ADDR) As Long
Public Declare PtrSafe Function RtlIpv4StringToAddressExA Lib "ntdll" (ByVal AddressString As String, ByVal Strict As Byte, Address As IN_ADDR, Port As Integer) As Long
Public Declare PtrSafe Function RtlIpv4StringToAddressExW Lib "ntdll" (ByVal AddressString As LongPtr, ByVal Strict As Byte, Address As IN_ADDR, Port As Integer) As Long
Public DeclareWide PtrSafe Function RtlIpv4StringToAddressEx Lib "ntdll" Alias "RtlIpv4StringToAddressExW" (ByVal AddressString As String, ByVal Strict As Byte, Address As IN_ADDR, Port As Integer) As Long
Public Declare PtrSafe Function RtlIpv6AddressToStringA Lib "ntdll" (Addr As IN6_ADDR, ByVal s As String) As LongPtr
Public Declare PtrSafe Function RtlIpv6AddressToStringW Lib "ntdll" (Addr As IN6_ADDR, ByVal s As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function RtlIpv6AddressToString Lib "ntdll" Alias "RtlIpv6AddressToStringW" (Addr As IN6_ADDR, ByVal s As String) As LongPtr
Public Declare PtrSafe Function RtlIpv6AddressToStringExA Lib "ntdll" (Address As IN6_ADDR, ByVal ScopeId As Long, ByVal Port As Integer, ByVal AddressString As String, AddressStringLength As Long) As Long
Public Declare PtrSafe Function RtlIpv6AddressToStringExW Lib "ntdll" (Address As IN6_ADDR, ByVal ScopeId As Long, ByVal Port As Integer, ByVal AddressString As LongPtr, AddressStringLength As Long) As Long
Public DeclareWide PtrSafe Function RtlIpv6AddressToStringEx Lib "ntdll" Alias "RtlIpv6AddressToStringExW" (Address As IN6_ADDR, ByVal ScopeId As Long, ByVal Port As Integer, ByVal AddressString As String, AddressStringLength As Long) As Long
Public Declare PtrSafe Function RtlIpv6StringToAddressA Lib "ntdll" (ByVal s As String, Terminator As LongPtr, Addr As IN6_ADDR) As Long
Public Declare PtrSafe Function RtlIpv6StringToAddressW Lib "ntdll" (ByVal s As LongPtr, Terminator As LongPtr, Addr As IN6_ADDR) As Long
Public DeclareWide PtrSafe Function RtlIpv6StringToAddress Lib "ntdll" Alias "RtlIpv6StringToAddressW" (ByVal s As String, Terminator As LongPtr, Addr As IN6_ADDR) As Long
Public Declare PtrSafe Function RtlIpv6StringToAddressExA Lib "ntdll" (ByVal AddressString As String, Address As IN6_ADDR, ScopeId As Long, Port As Integer) As Long
Public Declare PtrSafe Function RtlIpv6StringToAddressExW Lib "ntdll" (ByVal AddressString As LongPtr, Address As IN6_ADDR, ScopeId As Long, Port As Integer) As Long
Public DeclareWide PtrSafe Function RtlIpv6StringToAddressEx Lib "ntdll" Alias "RtlIpv6StringToAddressExW" (ByVal AddressString As String, Address As IN6_ADDR, ScopeId As Long, Port As Integer) As Long


Public Declare PtrSafe Function LdrGetDllHandle Lib "ntdll" (ByVal pwPath As LongPtr, ByVal unused As LongPtr, ModuleFileName As UNICODE_STRING, pHModule As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LdrGetProcedureAddress Lib "ntdll" (ByVal ModuleHandle As LongPtr, FunctionName As ANSI_STRING, ByVal Ordinal As Integer, FunctionAddress As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LdrLoadDll Lib "ntdll" (ByVal PathToFile As LongPtr, ByVal Flags As LoadLibraryFlags, ModuleFileName As UNICODE_STRING, ModuleHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LdrUnloadDll Lib "ntdll" (ByVal ModuleHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LdrRegisterDllNotification Lib "ntdll" (ByVal Flags As Long, ByVal NotificationFunction As LongPtr, ByVal Context As LongPtr, Cookie As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LdrUnregisterDllNotification Lib "ntdll" (ByVal Cookie As LongPtr) As NTSTATUS
Public Declare PtrSafe Sub LdrFastFailInLoaderCallout Lib "ntdll" ()
Public Declare PtrSafe Function LdrDisableThreadCalloutsForDll Lib "ntdll" (ByVal DllHandle As LongPtr) As NTSTATUS


Public Declare PtrSafe Function DbgPrint CDecl Lib "ntdll" (ByVal Format As String, ByVal ParamArray vargs As Any()) As Long
 


#If Win64 = 0 Then
Public Declare Function NtWow64QueryInformationProcess64 Lib "ntdll" ( _
                         ByVal hProcess As Long, _
                         ByVal ProcessInformationClass As Long, _
                         ByRef pProcessInformation As Any, _
                         ByVal ProcessInformationLength As Long, _
                         ByRef puReturnLength As Long) As Long
Public Declare Function NtWow64ReadVirtualMemory64 Lib "ntdll" ( _
                         ByVal hProcess As Long, _
                         ByVal BaseAddress As LongLong, _
                         ByRef Buffer As Any, _
                         ByVal BufferLengthL As Long, _
                         ByVal BufferLengthH As Long, _
                         ByRef ReturnLength As LongLong) As Long
#End If




#End Region

#Region "ole32"
'**********************************************************
'ole32.dll

Public Type STGOPTIONS
	usVersion As Integer
	reserved As Integer
	ulSectorSize As Long
	pwcsTemplateFile As LongPtr
	'const WCHAR *pwcsTemplateFile;
End Type

Public Enum STGFMT
    STGFMT_STORAGE = 0
    STGFMT_FILE = 3
    STGFMT_ANY = 4
    STGFMT_DOCFILE = 5
End Enum

Public Enum MEMCTX
    MEMCTX_TASK = 1
    MEMCTX_SHARED = 2
    MEMCTX_MACSYSTEM = 3
    MEMCTX_UNKNOWN = -1
    MEMCTX_SAME = -2
End Enum

Public Enum STDMSHLFLAGS
    SMEXF_SERVER = 1
    SMEXF_HANDLER = 2
End Enum

Public Enum OLERENDER
    OLERENDER_NONE = 0
    OLERENDER_DRAW = 1
    OLERENDER_FORMAT = 2
    OLERENDER_ASIS = 3
End Enum

Public Enum OLECREATE_UDT
    OLECREATE_LEAVERUNNING = 1
End Enum

Public Enum REGCLS
  REGCLS_SINGLEUSE = 0
  REGCLS_MULTIPLEUSE = 1
  REGCLS_MULTI_SEPARATE = 2
  REGCLS_SUSPENDED = 4
  REGCLS_SURROGATE = 8
  REGCLS_AGILE = &H10
End Enum

Public Enum COINIT
  COINIT_APARTMENTTHREADED = &H2
  COINIT_MULTITHREADED
  COINIT_DISABLE_OLE1DDE = &H4
  COINIT_SPEED_OVER_MEMORY = &H8
End Enum



Public Type COAUTHIDENTITY
	User As Integer
	UserLength As Long
	Domain As Integer
	DomainLength As Long
	Password As Integer
	PasswordLength As Long
	Flags As Long
End Type
Public Type COAUTHINFO
	dwAuthnSvc As RPC_AUTHN
	dwAuthzSvc As RPC_AUTHZ
	pwszServerPrincName As LongPtr
	dwAuthnLevel As RPC_AUTHN_LVL
	dwImpersonationLevel As RPC_IMP_LVL
	pAuthIdentityData As LongPtr
	dwCapabilities As EOLE_AUTHENTICATION_CAPABILITIES
End Type
Public Type COSERVERINFO
	dwReserved1 As Long
	pwszName As LongPtr
	pAuthInfo As LongPtr
	dwReserved2 As Long
End Type

Public Enum CWMO_FLAGS
	CWMO_DEFAULT = 0
	CWMO_DISPATCH_CALLS = 1
	CWMO_DISPATCH_WINDOW_MESSAGES = 2
End Enum

Public Enum COWAIT_FLAGS
	COWAIT_DEFAULT = 0
	COWAIT_WAITALL = 1
	COWAIT_ALERTABLE = 2
	COWAIT_INPUTAVAILABLE = 4
	COWAIT_DISPATCH_CALLS = 8
	COWAIT_DISPATCH_WINDOW_MESSAGES = &H10
End Enum

Public Type SOLE_AUTHENTICATION_SERVICE
	dwAuthnSvc As RPC_AUTHN
	dwAuthzSvc As RPC_AUTHZ
	pPrincipalName As LongPtr 'OLECHAR
	hr As Long
End Type

Public Type SOLE_AUTHENTICATION_INFO
	dwAuthnSvc As RPC_AUTHN
	dwAuthzSvc As RPC_AUTHZ
	pAuthInfo As LongPtr
End Type

Public Enum APTTYPEQUALIFIER
    APTTYPEQUALIFIER_NONE = 0
    APTTYPEQUALIFIER_IMPLICIT_MTA = 1
    APTTYPEQUALIFIER_NA_ON_MTA = 2
    APTTYPEQUALIFIER_NA_ON_STA = 3
    APTTYPEQUALIFIER_NA_ON_IMPLICIT_MTA = 4
    APTTYPEQUALIFIER_NA_ON_MAINSTA = 5
    APTTYPEQUALIFIER_APPLICATION_STA = 6
    APTTYPEQUALIFIER_RESERVED_1 = 7
End Enum
Public Enum APTTYPE
    APTTYPE_CURRENT = -1
    APTTYPE_STA = 0
    APTTYPE_MTA = 1
    APTTYPE_NA = 2
    APTTYPE_MAINSTA = 3
End Enum


' Public Declare PtrSafe Function CoCreateInstance Lib "ole32" (rclsid As Any, ByVal pUnkOuter As LongPtr, ByVal dwClsContext As CLSCTX, riid As Any, pvarResult As Any) As Long
Public Declare PtrSafe Function CoCreateInstance Lib "ole32" (ByRef clsid As UUID, ByVal pUnkOuter As stdole.IUnknown, ByVal dwClsContext As CLSCTX, ByRef iid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function CoCreateGuid Lib "ole32" (ByRef pGUID As UUID) As Long
Public Declare PtrSafe Function CoCreateGuid Lib "ole32" (ByRef bt As Byte) As Long
Public Declare PtrSafe Function CoTaskMemAlloc Lib "ole32" (ByVal cb As LongPtr) As LongPtr
Public Declare PtrSafe Function CoTaskMemRealloc Lib "ole32" (ByVal pv As LongPtr, ByVal cb As LongPtr) As LongPtr
Public Declare PtrSafe Sub CoTaskMemFree Lib "ole32" (ByVal pv As LongPtr)
Public DeclareWide PtrSafe Function StgOpenStorageEx Lib "ole32" (ByVal pwcsName As LongPtr, ByVal grfMode As STGM, ByVal stgfmt As STGFMT, ByVal grfAttrs As Long, pStgOptions As STGOPTIONS, ByVal reserved2 As LongPtr, riid As UUID, ppObjectOpen As Any) As Long
Public Declare PtrSafe Function StgCreateStorageEx Lib "ole32" (ByVal pwcsName As LongPtr, ByVal grfMode As STGM, ByVal stgfmt As STGFMT, ByVal grfAttrs As Long, ByVal pStgOptions As LongPtr, ByVal pSecurityDescriptor As LongPtr, riid As UUID, ppObjectOpen As Any) As Long
Public DeclareWide PtrSafe Function StgIsStorageFile Lib "ole32" (ByVal lpwcsFileName As String) As Long
Public DeclareWide PtrSafe Function StgOpenStorage Lib "ole32" (ByVal pwcsName As String, ByVal pstgPriority As IStorage, ByVal grfMode As STGM, ByVal snbExclude As String, ByVal reserved As Long, ppstgOpen As IStorage) As Long
[PreserveSig(False)]
Public DeclareWide PtrSafe Function StgOpenStorage Lib "ole32" (ByVal pwcsName As String, ByVal pstgPriority As IStorage, ByVal grfMode As STGM, ByVal snbExclude As String, ByVal reserved As Long) As IStorage
Public DeclareWide PtrSafe Function StgCreateDocfile Lib "ole32" (ByVal pwcsName As String, ByVal grfMode As STGM, ByVal reserved As Long, ppstgOpen As IStorage) As Long
[PreserveSig(False)]
Public DeclareWide PtrSafe Function StgCreateDocfile Lib "ole32" (ByVal pwcsName As String, ByVal grfMode As STGM, ByVal reserved As Long) As IStorage
Public Declare PtrSafe Function GetHGlobalFromILockBytes Lib "ole32" (ByVal plkbyt As ILockBytes, phglobal As LongPtr) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function GetHGlobalFromILockBytes Lib "ole32" (ByVal plkbyt As ILockBytes) As LongPtr
Public Declare PtrSafe Function CreateILockBytesOnHGlobal Lib "ole32" (ByVal hGlobal As LongPtr, ByVal fDeleteOnRelease As BOOL, pplkbyt As ILockBytes) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function CreateILockBytesOnHGlobal Lib "ole32" (ByVal hGlobal As LongPtr, ByVal fDeleteOnRelease As BOOL) As ILockBytes
Public Declare PtrSafe Function GetHGlobalFromStream Lib "ole32" (ByVal pStm As IStream, phglobal As LongPtr) As Long
Public Declare PtrSafe Function CreateStreamOnHGlobal Lib "ole32" (ByVal hGlobal As LongPtr, ByVal fDeleteOnRelease As BOOL, ppstm As IStream) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function CreateStreamOnHGlobal Lib "ole32" (ByVal hGlobal As LongPtr, ByVal fDeleteOnRelease As BOOL) As IStream
Public Declare PtrSafe Function StgCreateDocfileOnILockBytes Lib "ole32" (ByVal plkbyt As ILockBytes, ByVal grfMode As STGM, ByVal reserved As Long, ppstgOpen As IStorage) As Long
Public DeclareWide PtrSafe Function StgOpenStorageOnILockBytes Lib "ole32" (ByVal plkbyt As ILockBytes, ByVal pstgPriority As IStorage, ByVal grfMode As STGM, ByVal snbExclude As String, ByVal reserved As Long, ppstgOpen As IStorage) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function StgCreateDocfileOnILockBytes Lib "ole32" (ByVal plkbyt As ILockBytes, ByVal grfMode As STGM, ByVal reserved As Long) As IStorage
[PreserveSig(False)]
Public DeclareWide PtrSafe Function StgOpenStorageOnILockBytes Lib "ole32" (ByVal plkbyt As ILockBytes, ByVal pstgPriority As IStorage, ByVal grfMode As STGM, ByVal snbExclude As String, ByVal reserved As Long) As IStorage
Public Declare PtrSafe Function StgIsStorageILockBytes Lib "ole32" (ByVal plkbyt As ILockBytes) As Long
Public Declare PtrSafe Function ReadClassStg Lib "ole32" (ByVal pStg As IStorage, ByRef pclsid As UUID) As Long
Public Declare PtrSafe Function WriteClassStg Lib "ole32" (ByVal pStg As IStorage, ByRef rclsid As UUID) As Long
Public Declare PtrSafe Function ReadClassStm Lib "ole32" (ByVal pStg As IStream, ByRef rclsid As UUID) As Long
Public Declare PtrSafe Function WriteClassStm Lib "ole32" (ByVal pStg As IStream, ByRef rclsid As UUID) As Long
Public Declare PtrSafe Function PropVariantClear Lib "ole32" (ByRef pvarg As Variant) As Long
Public Declare PtrSafe Function PropVariantCopy Lib "ole32" (ByRef pvarDest As Variant, ByRef pvarSrc As Variant) As Long
Public DeclareWide PtrSafe Function CLSIDFromProgID Lib "ole32" (ByVal lpszProgID As String, ByRef lpclsid As UUID) As Long
Public DeclareWide PtrSafe Function CLSIDFromProgIDEx Lib "ole32" (ByVal lpszProgID As String, ByRef lpclsid As UUID) As Long
Public DeclareWide PtrSafe Function CLSIDFromString Lib "ole32" (ByVal lpszProgID As String, ByRef lpclsid As UUID) As Long
Public Declare PtrSafe Function ProgIDFromCLSID Lib "ole32" (ByRef clsid As UUID, ByRef lplpszProgID As LongPtr) As Long
Public DeclareWide PtrSafe Function IIDFromString Lib "ole32" (ByVal lpsz As String, lpiid As UUID) As Long
Public Declare PtrSafe Function StringFromIID Lib "ole32" (ByRef rclsid As UUID, ByRef lplpsz As LongPtr) As Long
Public Declare PtrSafe Function StringFromCLSID Lib "ole32" (ByRef rclsid As UUID, ByRef lplpsz As LongPtr) As Long
Public Declare PtrSafe Function StringFromGUID2 Lib "ole32" (ByRef UUID As UUID, ByVal lpsz As LongPtr, ByVal cbMax As Long) As Long
Public Declare PtrSafe Function BindMoniker Lib "ole32" (ByVal pmk As IMoniker, ByVal grfOpt As Long, ByRef iidResult As UUID, ByRef ppvResult As Any) As Long
Public DeclareWide PtrSafe Function CoGetObject Lib "ole32" (ByVal pszName As String, ByRef pBindOptions As BIND_OPTS, ByRef riid As UUID, ByRef ppv As Any) As Long
Public DeclareWide PtrSafe Function MkParseDisplayName Lib "ole32" (ByVal pbc As IBindCtx, ByVal szUserName As String, ByRef pchEaten As Long, ppmk As IMoniker) As Long
[PreserveSig(False)]
Public DeclareWide PtrSafe Function MkParseDisplayName Lib "ole32" (ByVal pbc As IBindCtx, ByVal szUserName As String, ByRef pchEaten As Long) As IMoniker
Public Declare PtrSafe Function MonikerRelativePathTo Lib "ole32" (ByVal pmkSrc As IMoniker, ByVal pmkDest As IMoniker, ByRef ppmkRelPath As IMoniker, ByVal dwReserved As Long) As Long
Public Declare PtrSafe Function MonikerCommonPrefixWith Lib "ole32" (ByVal pmkThis As IMoniker, ByVal pmkOther As IMoniker, ppmkCommon As IMoniker) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function MonikerCommonPrefixWith Lib "ole32" (ByVal pmkThis As IMoniker, ByVal pmkOther As IMoniker) As IMoniker
Public Declare PtrSafe Function CreateBindCtx Lib "ole32" (ByVal reserved As Long, ppbc As IBindCtx) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function CreateBindCtx Lib "ole32" (ByVal reserved As Long) As IBindCtx
Public Declare PtrSafe Function CreateGenericComposite Lib "ole32" (ByVal pmkFirst As IMoniker, ByVal pmkRest As IMoniker, ppmkComposite As IMoniker) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function CreateGenericComposite Lib "ole32" (ByVal pmkFirst As IMoniker, ByVal pmkRest As IMoniker) As IMoniker
Public DeclareWide PtrSafe Function GetClassFile Lib "ole32" (ByVal szFileName As String, ByRef pclsid As UUID) As Long
Public Declare PtrSafe Function CreateClassMoniker Lib "ole32" (ByRef rclsid As UUID, ppmk As IMoniker) As Long
Public DeclareWide PtrSafe Function CreateFileMoniker Lib "ole32" (ByVal lpszPathName As String, ppmk As IMoniker) As Long
Public DeclareWide PtrSafe Function CreateItemMoniker Lib "ole32" (ByVal lpszDelim As String, ByVal lpszItem As String, ppmk As IMoniker) As Long
Public Declare PtrSafe Function CreateAntiMoniker Lib "ole32" (ppmk As IMoniker) As Long
Public Declare PtrSafe Function CreatePointerMoniker Lib "ole32" (ByVal pUnk As stdole.IUnknown, ppmk As IMoniker) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function CreateClassMoniker Lib "ole32" (ByRef rclsid As UUID) As IMoniker
[PreserveSig(False)]
Public DeclareWide PtrSafe Function CreateFileMoniker Lib "ole32" (ByVal lpszPathName As String) As IMoniker
[PreserveSig(False)]
Public DeclareWide PtrSafe Function CreateItemMoniker Lib "ole32" (ByVal lpszDelim As String, ByVal lpszItem As String) As IMoniker
[PreserveSig(False)]
Public Declare PtrSafe Function CreateAntiMoniker Lib "ole32" () As IMoniker
[PreserveSig(False)]
Public Declare PtrSafe Function CreatePointerMoniker Lib "ole32" (ByVal pUnk As stdole.IUnknown) As IMoniker
Public Declare PtrSafe Function CreateObjrefMoniker Lib "ole32" (ByVal pUnk As stdole.IUnknown, ppmk As IMoniker) As Long
Public Declare PtrSafe Function CreateDataAdviseHolder Lib "ole32" (ppDAHolder As IDataAdviseHolder) As Long
Public Declare PtrSafe Function CreateOleAdviseHolder Lib "ole32" (ppOAHolder As IDataAdviseHolder) As Long

Public Declare PtrSafe Function GetRunningObjectTable Lib "ole32" (ByVal reserved As Long, pprot As IRunningObjectTable) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function GetRunningObjectTable Lib "ole32" (ByVal reserved As Long) As IRunningObjectTable
Public Declare PtrSafe Function CoGetClassObject Lib "ole32" (ByRef rclsid As UUID, ByVal dwClsContext As CLSCTX, ByRef pvReserved As Any, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function CoRegisterClassObject Lib "ole32" (ByRef rclsid As UUID, ByVal pUnk As stdole.IUnknown, ByVal dwClsContext As CLSCTX, ByVal flags As REGCLS, lpdwRegister As Long) As Long
Public Declare PtrSafe Function CoRegisterMessageFilter Lib "ole32" (ByVal pNewMessageFilter As IMessageFilter, lplpMessageFilter As IMessageFilter) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function CoRegisterMessageFilter Lib "ole32" (ByVal pNewMessageFilter As IMessageFilter) As IMessageFilter
Public Declare PtrSafe Function CoRevokeClassObject Lib "ole32" (ByVal dwRegister As Long) As Long
Public Declare PtrSafe Function CoResumeClassObjects Lib "ole32" () As Long
Public Declare PtrSafe Function CoSuspendClassObjects Lib "ole32" () As Long
Public DeclareWide PtrSafe Function CoLoadLibrary Lib "ole32" (ByVal lpszLibName As String, ByVal bAutoFree As BOOL) As LongPtr
Public Declare PtrSafe Sub CoFreeLibrary Lib "ole32" (ByVal hInst As LongPtr)
Public Declare PtrSafe Sub CoFreeAllLibraries Lib "ole32" ()
Public Declare PtrSafe Sub CoFreeUnusedLibraries Lib "ole32" ()
Public Declare PtrSafe Sub CoFreeUnusedLibrariesEx Lib "ole32" (ByVal dwUnloadDelay As Long, ByVal dwReserved As Long)
Public Declare PtrSafe Function CoFileTimeNow Lib "ole32" (lpFileTime As FILETIME) As Long
Public DeclareWide PtrSafe Function CreateStdProgressIndicator Lib "ole32" (ByVal hwndParent As LongPtr, ByVal pszTitle As String, ByVal pIbscCaller As IBindStatusCallback, ppIbsc As IBindStatusCallback) As Long
[PreserveSig(False)]
Public DeclareWide PtrSafe Function CreateStdProgressIndicator Lib "ole32" (ByVal hwndParent As LongPtr, ByVal pszTitle As String, ByVal pIbscCaller As IBindStatusCallback) As IBindStatusCallback
Public Declare PtrSafe Function IsEqualGUID Lib "ole32" (ByRef rguid1 As UUID, ByRef rguid2 As UUID) As BOOL
Public Declare PtrSafe Function CoBuildVersion Lib "ole32" () As Long
Public Declare PtrSafe Function CoInitialize Lib "ole32" (ByRef pvReserved As Any) As Long
Public Declare PtrSafe Function OleInitialize Lib "ole32" (ByRef pvReserved As Any) As Long
Public Declare PtrSafe Sub OleUninitialize Lib "ole32" ()
Public Declare PtrSafe Function CoInitializeEx Lib "ole32" (ByRef pvReserved As Any, ByVal dwCoInit As COINIT) As Long
Public Declare PtrSafe Sub CoUninitialize Lib "ole32" ()
Public Declare PtrSafe Function vbCoInitialize Lib "ole32" Alias "CoInitialize" (ByRef pvReserved As Any) As Long
Public Declare PtrSafe Sub vbCoUninitialize Lib "ole32" Alias "CoUninitialize" ()
Public Declare PtrSafe Function CoGetMalloc Lib "ole32" (ByVal dwMemContext As MEMCTX, ppMalloc As IMalloc) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function CoGetMalloc Lib "ole32" (ByVal dwMemContext As MEMCTX) As IMalloc
Public Declare PtrSafe Function CoCreateInstanceEx Lib "ole32" (ByRef clsid As UUID, ByVal pUnkOuter As stdole.IUnknown, ByVal dwClsContext As CLSCTX, pServerInfo As COSERVERINFO, ByVal dwCount As Long, pResults As MULTI_QI) As Long
Public Declare PtrSafe Function CoGetCurrentProcess Lib "ole32" () As Long
Public Declare PtrSafe Function CoGetCallerTID Lib "ole32" (lpwdwTID As Long) As Long
Public Declare PtrSafe Function CoGetCurrentLogicalThreadId Lib "ole32" (ByRef pguid As UUID) As Long
Public Declare PtrSafe Function CoGetContextToken Lib "ole32" (pToken As LongPtr) As Long
Public Declare PtrSafe Function CoGetDefaultContext Lib "ole32" (ByVal aptType As APTTYPE, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function CoGetApartmentType Lib "ole32" (pAptType As APTTYPE, pAptQualifier As APTTYPEQUALIFIER) As Long
Public Declare PtrSafe Function CoCreateStandardMalloc Lib "ole32" (ByVal MEMCTX As MEMCTX, ppMalloc As IMalloc) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function CoCreateStandardMalloc Lib "ole32" (ByVal MEMCTX As MEMCTX) As IMalloc
Public Declare PtrSafe Function CoGetMarshalSizeMax Lib "ole32" (ByRef pulSize As Long, ByRef riid As UUID, ByVal pUnk As stdole.IUnknown, ByVal dwDestContext As MSHCTX, ByRef pvDestContext As Any, ByVal MSHLFLAGS As MSHLFLAGS) As Long
Public Declare PtrSafe Function CoMarshalInterface Lib "ole32" (ByVal pStm As IStream, ByRef riid As UUID, ByVal pUnk As stdole.IUnknown, ByVal dwDestContext As MSHCTX, ByRef pvDestContext As Any, ByVal MSHLFLAGS As MSHLFLAGS) As Long
Public Declare PtrSafe Function CoMarshalInterface Lib "ole32" (ByVal pStm As LongPtr, ByRef riid As UUID, ByVal pUnk As stdole.IUnknown, ByVal dwDestContext As MSHCTX, ByRef pvDestContext As Any, ByVal MSHLFLAGS As MSHLFLAGS) As Long
Public Declare PtrSafe Function CoMarshalInterface Lib "ole32" (ByVal pStm As LongPtr, ByRef riid As UUID, ByVal pUnk As LongPtr, ByVal dwDestContext As MSHCTX, ByRef pvDestContext As Any, ByVal MSHLFLAGS As MSHLFLAGS) As Long
Public Declare PtrSafe Function CoUnmarshalInterface Lib "ole32" (ByVal pStm As IStream, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function CoUnmarshalInterface Lib "ole32" (ByVal pStm As LongPtr, ByRef riid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function CoMarshalInterThreadInterfaceInStream Lib "ole32" (ByRef riid As UUID, ByVal pUnk As stdole.IUnknown, ppStm As IStream) As Long
Public Declare PtrSafe Function CoMarshalInterThreadInterfaceInStream Lib "ole32" (ByRef riid As UUID, ByVal pUnk As LongPtr, ppStm As LongPtr) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function CoMarshalInterThreadInterfaceInStream Lib "ole32" (ByRef riid As UUID, ByVal pUnk As LongPtr) As IStream
Public Declare PtrSafe Function CoGetInterfaceAndReleaseStream Lib "ole32" (ByVal pStm As IStream, ByRef iid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function CoGetInterfaceAndReleaseStream Lib "ole32" (ByVal pStm As LongPtr, ByRef iid As UUID, ByRef ppv As Any) As Long
Public Declare PtrSafe Function CoMarshalHresult Lib "ole32" (ByVal pStm As IStream, ByVal hresult As Long) As Long
Public Declare PtrSafe Function CoMarshalHresult Lib "ole32" (ByVal pStm As LongPtr, ByVal hresult As Long) As Long
Public Declare PtrSafe Function CoUnmarshalHresult Lib "ole32" (ByVal pStm As IStream, phresult As Long) As Long
Public Declare PtrSafe Function CoUnmarshalHresult Lib "ole32" (ByVal pStm As LongPtr, phresult As Long) As Long
Public Declare PtrSafe Function CoReleaseMarshalData Lib "ole32" (ByVal pStm As IStream) As Long
Public Declare PtrSafe Function CoReleaseMarshalData Lib "ole32" (ByVal pStm As LongPtr) As Long
Public Declare PtrSafe Function CoDisconnectObject Lib "ole32" (ByVal pUnk As stdole.IUnknown, ByVal dwReserved As Long) As Long
Public Declare PtrSafe Function CoLockObjectExternal Lib "ole32" (ByVal pUnk As stdole.IUnknown, ByVal fLock As BOOL, ByVal fLastUnlockReleases As BOOL) As Long
Public Declare PtrSafe Function CoLockObjectExternal Lib "ole32" (ByVal pUnk As LongPtr, ByVal fLock As BOOL, ByVal fLastUnlockReleases As BOOL) As Long
Public Declare PtrSafe Function CoGetStandardMarshal Lib "ole32" (ByRef riid As UUID, ByVal pUnk As stdole.IUnknown, ByVal dwDestContext As MSHCTX, ByRef pvDestContext As Any, ByVal MSHLFLAGS As MSHLFLAGS, ppMarshal As IMarshal) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function CoGetStandardMarshal Lib "ole32" (ByRef riid As UUID, ByVal pUnk As stdole.IUnknown, ByVal dwDestContext As MSHCTX, ByRef pvDestContext As Any, ByVal MSHLFLAGS As MSHLFLAGS) As IMarshal
Public Declare PtrSafe Function CoGetStandardMarshal Lib "ole32" (ByRef riid As UUID, ByVal pUnk As LongPtr, ByVal dwDestContext As MSHCTX, ByRef pvDestContext As Any, ByVal MSHLFLAGS As MSHLFLAGS, ppMarshal As IMarshal) As Long
Public Declare PtrSafe Function CoGetStandardMarshal Lib "ole32" (ByRef riid As UUID, ByVal pUnk As LongPtr, ByVal dwDestContext As MSHCTX, ByRef pvDestContext As Any, ByVal MSHLFLAGS As MSHLFLAGS, ppMarshal As LongPtr) As Long
Public Declare PtrSafe Function CoGetStdMarshalEx Lib "ole32" (ByVal pUnkOuter As stdole.IUnknown, ByVal smexflags As STDMSHLFLAGS, ppunkInner As stdole.IUnknown) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function CoGetStdMarshalEx Lib "ole32" (ByVal pUnkOuter As stdole.IUnknown, ByVal smexflags As STDMSHLFLAGS) As stdole.IUnknown
Public Declare PtrSafe Function CoGetStdMarshalEx Lib "ole32" (ByVal pUnkOuter As LongPtr, ByVal smexflags As STDMSHLFLAGS, ppunkInner As LongPtr) As Long
Public Declare PtrSafe Function CoCreateFreeThreadedMarshaler Lib "ole32" (ByVal pUnkOuter As stdole.IUnknown, ppunkMarshal As stdole.IUnknown) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function CoCreateFreeThreadedMarshaler Lib "ole32" (ByVal pUnkOuter As stdole.IUnknown) As stdole.IUnknown
Public Declare PtrSafe Function CoCreateFreeThreadedMarshaler Lib "ole32" (ByVal pUnkOuter As LongPtr, ppunkMarshal As LongPtr) As Long
Public Declare PtrSafe Function CoGetCallContext Lib "ole32" (riid As UUID, ByRef ppInterface As Any) As Long
Public Declare PtrSafe Function CoQueryProxyBlanket Lib "ole32" (ByVal pProxy As stdole.IUnknown, pwAuthnSvc As RPC_AUTHN, pAuthzSvc As RPC_AUTHZ, pServerPrincName As LongPtr, pAuthnLevel As RPC_AUTHN_LVL, pImpLevel As RPC_IMP_LVL, pAuthInfo As LongPtr, pCapabilities As EOLE_AUTHENTICATION_CAPABILITIES) As Long
Public Declare PtrSafe Function CoQueryProxyBlanket Lib "ole32" (ByVal pProxy As LongPtr, pwAuthnSvc As RPC_AUTHN, pAuthzSvc As RPC_AUTHZ, pServerPrincName As LongPtr, pAuthnLevel As RPC_AUTHN_LVL, pImpLevel As RPC_IMP_LVL, pAuthInfo As LongPtr, pCapabilities As EOLE_AUTHENTICATION_CAPABILITIES) As Long
Public Declare PtrSafe Function CoSetProxyBlanket Lib "ole32" (ByVal pProxy As stdole.IUnknown, ByVal dwAuthnSvc As RPC_AUTHN, ByVal dwAuthzSvc As RPC_AUTHZ, ByVal pServerPrincName As LongPtr, ByVal dwAuthnLevel As RPC_AUTHN_LVL, ByVal dwImpLevel As RPC_IMP_LVL, ByVal pAuthInfo As LongPtr, ByVal dwCapabilities As EOLE_AUTHENTICATION_CAPABILITIES) As Long
Public Declare PtrSafe Function CoSetProxyBlanket Lib "ole32" (ByVal pProxy As LongPtr, ByVal dwAuthnSvc As RPC_AUTHN, ByVal dwAuthzSvc As RPC_AUTHZ, ByVal pServerPrincName As LongPtr, ByVal dwAuthnLevel As RPC_AUTHN_LVL, ByVal dwImpLevel As RPC_IMP_LVL, ByVal pAuthInfo As LongPtr, ByVal dwCapabilities As EOLE_AUTHENTICATION_CAPABILITIES) As Long
Public Declare PtrSafe Function CoCopyProxy Lib "ole32" (ByVal pProxy As stdole.IUnknown, ppCopy As stdole.IUnknown) As Long
Public Declare PtrSafe Function CoCopyProxy Lib "ole32" (ByVal pProxy As LongPtr, ppCopy As LongPtr) As Long
Public Declare PtrSafe Function CoQueryClientBlanket Lib "ole32" (pAuthnSvc As RPC_AUTHN, pAuthzSvc As RPC_AUTHZ, pServerPrincName As LongPtr, pAuthnLevel As RPC_AUTHN_LVL, pImpLevel As RPC_IMP_LVL, pPrivs As Any, pCapabilities As EOLE_AUTHENTICATION_CAPABILITIES) As Long
Public Declare PtrSafe Function CoImpersonateClient Lib "ole32" () As Long
Public Declare PtrSafe Function CoRevertToSelf Lib "ole32" () As Long
Public Declare PtrSafe Function CoQueryAuthenticationServices Lib "ole32" (pcAuthSvc As Long, asAuthSvc As LongPtr) As Long
Public Declare PtrSafe Function CoDisconnectContext Lib "ole32" (ByVal dwTimeout As Long) As Long
Public Declare PtrSafe Function CoSwitchCallContext Lib "ole32" (ByVal pNewObject As IUnknown, ppOldObject As IUnknown) As Long
Public Declare PtrSafe Function CoSwitchCallContext Lib "ole32" (ByVal pNewObject As LongPtr, ppOldObject As LongPtr) As Long
Public Declare PtrSafe Function CoWaitForMultipleObjects Lib "ole32" (ByVal dwFlags As CWMO_FLAGS, ByVal dwTimeout As Long, ByVal cHandles As Long, pHandles As LongPtr, lpdwindex As Long) As Long
Public Declare PtrSafe Function CoWaitForMultipleHandles Lib "ole32" (ByVal dwFlags As COWAIT_FLAGS, ByVal dwTimeout As Long, ByVal cHandles As Long, pHandles As LongPtr, lpdwindex As Long) As Long
Public Declare PtrSafe Function CoInitializeSecurity Lib "ole32" (pSecDesc As SECURITY_DESCRIPTOR, ByVal cAuthSvc As Long, asAuthSvc As SOLE_AUTHENTICATION_SERVICE, ByVal pReserved1 As LongPtr, ByVal dwAuthnLevel As RPC_AUTHN_LVL, ByVal dwImpLevel As RPC_IMP_LVL, pAuthList As Any, ByVal dwCapabilities As EOLE_AUTHENTICATION_CAPABILITIES, Optional ByVal dwReserved3 As LongPtr = 0) As Long
Public DeclareWide PtrSafe Function CoGetModuleType Lib "ole32" (ByVal pwszFile As String, pModuleType As ImageMachineType) As Long
Public Declare PtrSafe Function CoAllowUnmarshalerCLSID Lib "ole32" (ByRef clsid As UUID) As Long


Public Declare PtrSafe Sub ReleaseStgMedium Lib "ole32" (ByRef STM As STGMEDIUM)
Public DeclareWide PtrSafe Function OleGetIconOfClass Lib "ole32" (ByRef rclsid As UUID, ByVal lpszLabel As String, ByVal fUseTypeAsLabel As BOOL) As LongPtr
Public DeclareWide PtrSafe Function OleMetafilePictFromIconAndLabel Lib "ole32" (ByVal hIcon As LongPtr, ByVal lpszLabel As String, ByVal lpszSourceFile As String, ByVal iIconIndex As Long) As LongPtr
Public Declare PtrSafe Function OleSetContainedObject Lib "ole32" (ByVal pUnk As stdole.IUnknown, ByVal fContained As BOOL) As Long
Public Declare PtrSafe Function OleCreate Lib "ole32" (ByRef rclsid As UUID, ByRef riid As UUID, ByVal renderopt As OLERENDER, ByVal pformatetc As LongPtr, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObject As Any) As Long
Public Declare PtrSafe Function OleCreateEx Lib "ole32" (ByRef rclsid As UUID, ByRef riid As UUID, ByVal dwFlags As OLECREATE_UDT, ByVal renderopt As OLERENDER, ByVal cFormats As Long, ByRef rgAdvf As ADVF, ByRef rgFormatEtc As FORMATETC, ByVal lpAdviseSink As IAdviseSink, ByRef rgdwConnection As Long, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateFromData Lib "ole32" (ByVal pSrcDataObj As IDataObject, ByRef riid As UUID, ByVal renderopt As OLERENDER, ByRef pformatetc As FORMATETC, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateFromDataEx Lib "ole32" (ByVal pSrcDataObj As IDataObject, ByRef riid As UUID, ByVal dwFlags As OLECREATE_UDT, ByVal renderopt As OLERENDER, ByVal cFormats As Long, ByRef rgAdvf As Long, ByRef rgFormatEtc As FORMATETC, ByVal lpAdviseSink As IAdviseSink, ByRef rgdwConnection As Long, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateLinkFromData Lib "ole32" (ByVal pSrcDataObj As IDataObject, ByRef riid As UUID, ByVal renderopt As OLERENDER, ByRef pformatetc As Any, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateLinkFromDataEx Lib "ole32" (ByVal pSrcDataObj As IDataObject, ByRef riid As UUID, ByVal dwFlags As OLECREATE_UDT, ByVal renderopt As OLERENDER, ByVal cFormats As Long, ByRef rgAdvf As Long, ByRef rgFormatEtc As Any, ByVal lpAdviseSink As IAdviseSink, ByRef rgdwConnection As Long, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateStaticFromData Lib "ole32" (ByVal pSrcDataObj As IDataObject, ByRef iid As UUID, ByVal renderopt As OLERENDER, ByRef pformatetc As Any, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateLink Lib "ole32" (ByVal pmkLinkSrc As IMoniker, ByRef riid As UUID, ByVal renderopt As OLERENDER, ByRef rgFormatEtc As Any, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleCreateLinkEx Lib "ole32" (ByVal pmkLinkSrc As IMoniker, ByRef riid As UUID, ByVal dwFlags As OLECREATE_UDT, ByVal renderopt As OLERENDER, ByVal cFormats As Long, ByRef rgAdvf As ADVF, ByRef rgFormatEtc As Any, ByVal lpAdviseSink As IAdviseSink, ByRef rgdwConnection As Long, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public DeclareWide PtrSafe Function OleCreateLinkToFile Lib "ole32" (ByVal lpszFileName As String, ByRef riid As UUID, ByVal renderopt As OLERENDER, ByRef rgFormatEtc As Any, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public DeclareWide PtrSafe Function OleCreateLinkToFileEx Lib "ole32" (ByVal lpszFileName As String, ByRef riid As UUID, ByVal dwFlags As OLECREATE_UDT, ByVal renderopt As OLERENDER, ByVal cFormats As Long, ByRef rgAdvf As Long, ByRef rgFormatEtc As Any, ByVal lpAdviseSink As IAdviseSink, ByRef rgdwConnection As Long, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public DeclareWide PtrSafe Function OleCreateFromFile Lib "ole32" (ByRef rclsid As Any, ByVal lpszFileName As String, ByRef riid As UUID, ByVal renderopt As OLERENDER, ByRef rgFormatEtc As Any, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public DeclareWide PtrSafe Function OleCreateFromFileEx Lib "ole32" (ByRef rclsid As UUID, ByVal lpszFileName As String, ByRef riid As UUID, ByVal dwFlags As OLECREATE_UDT, ByVal renderopt As OLERENDER, ByVal cFormats As Long, ByRef rgAdvf As ADVF, ByRef rgFormatEtc As FORMATETC, ByVal lpAdviseSink As IAdviseSink, ByRef rgdwConnection As Long, ByVal pClientSite As IOleClientSite, ByVal pStg As IStorage, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleLoad Lib "ole32" (ByVal pStg As IStorage, ByRef riid As UUID, ByVal pClientSite As IOleClientSite, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleSave Lib "ole32" (ByVal pps As IPersistStorage, ByVal pStg As IStorage, ByVal fSameAsLoad As BOOL) As Long
Public Declare PtrSafe Function OleLoadFromStream Lib "ole32" (ByVal pStm As IStream, ByRef iidInterface As UUID, ByRef ppvObj As Any) As Long
Public Declare PtrSafe Function OleSaveToStream Lib "ole32" (ByVal ppstm As IPersistStream, ByVal pStm As IStream) As Long
Public Declare PtrSafe Function OleNoteObjectVisible Lib "ole32" (ByVal pUnknown As stdole.IUnknown, ByVal fVisible As BOOL) As Long
Public Declare PtrSafe Function RegisterDragDrop Lib "ole32" (ByVal hWnd As LongPtr, ByVal DropTarget As IDropTarget) As Long
Public Declare PtrSafe Function RevokeDragDrop Lib "ole32" (ByVal hWnd As LongPtr) As Long
Public Declare PtrSafe Function DoDragDrop Lib "ole32" (ByVal pDataObj As IDataObject, ByVal pDropSource As IDropSource, ByVal dwOKEffects As DROPEFFECTS, ByRef pdwEffect As DROPEFFECTS) As Long
Public Declare PtrSafe Function OleSetClipboard Lib "ole32" (ByVal pDataObj As IDataObject) As Long
Public Declare PtrSafe Function OleRegGetUserType Lib "ole32" (ByRef clsid As UUID, ByVal dwFormOfType As USERCLASSTYPE, pszUserType As LongPtr) As Long
Public Declare PtrSafe Function OleRegGetMiscStatus Lib "ole32" (ByRef clsid As UUID, ByVal dwAspect As DVASPECT, pdwStatus As Long) As Long
Public Declare PtrSafe Function OleRegEnumVerbs Lib "ole32" (ByRef clsid As UUID, ppenum As IEnumOLEVERB) As Long
Public Declare PtrSafe Function OleRegEnumFormatEtc Lib "ole32" (clsid As UUID, ByVal dwDirection As DATADIR, ppenum As IEnumFormatETC) As Long

Public Declare PtrSafe Function OleGetClipboard Lib "ole32" (ppDataObj As IDataObject) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function OleGetClipboard Lib "ole32" () As IDataObject
Public Declare PtrSafe Function OleGetClipboardWithEnterpriseInfo Lib "ole32" (ppDataObj As IDataObject, dataEnterpriseId As LongPtr, sourceDescription As LongPtr, targetDescription As LongPtr, dataDescription As LongPtr) As Long
Public Declare PtrSafe Function OleFlushClipboard Lib "ole32" () As Long
Public Declare PtrSafe Function OleIsCurrentClipboard Lib "ole32" (ByVal pDataObj As IDataObject) As Long
Public Declare PtrSafe Function OleCreateMenuDescriptor Lib "ole32" (ByVal hmenuCombined As LongPtr, ByRef lpMenuWidths As OLEMENUGROUPWIDTHS) As LongPtr
Public Declare PtrSafe Function OleSetMenuDescriptor Lib "ole32" (ByVal holemenu As LongPtr, ByVal hwndFrame As LongPtr, ByVal hwndActiveObject As LongPtr, ByVal lpFrame As IOleInPlaceFrame, ByVal lpActiveObj As IOleInPlaceActiveObject) As Long
Public Declare PtrSafe Function OleDestroyMenuDescriptor Lib "ole32" (ByVal holemenu As LongPtr) As Long
Public Declare PtrSafe Function OleTranslateAccelerator Lib "ole32" (ByVal lpFrame As IOleInPlaceFrame, ByRef lpFrameInfo As OLEINPLACEFRAMEINFO, ByRef lpmsg As MSG) As Long
Public Declare PtrSafe Function OleDuplicateData Lib "ole32" (ByVal hSrc As LongPtr, ByVal cfFormat As Integer, ByVal uiFlags As GMEM) As LongPtr
Public Declare PtrSafe Function OleDraw Lib "ole32" (ByVal pUnknown As stdole.IUnknown, ByVal dwAspect As DVASPECT, ByVal hdcDraw As LongPtr, ByRef lprcBounds As RECT) As Long
Public Declare PtrSafe Function OleRun Lib "ole32" (ByVal pUnknown As stdole.IUnknown) As Long
Public Declare PtrSafe Function OleIsRunning Lib "ole32" (ByVal pObject As IOleObject) As Long
Public Declare PtrSafe Function OleLockRunning Lib "ole32" (ByVal pUnknown As stdole.IUnknown, ByVal fLock As BOOL, ByVal fLastUnlockCloses As BOOL) As Long
Public Declare PtrSafe Function CreateDataCache Lib "ole32" (ByVal pUnkOuter As stdole.IUnknown, ByRef rclsid As UUID, ByRef iid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function OleCreateDefaultHandler Lib "ole32" (ByRef clsid As UUID, ByVal pUnkOuter As stdole.IUnknown, ByRef riid As UUID, ByRef lplpObj As Any) As Long
Public Declare PtrSafe Function IsAccelerator Lib "ole32" (ByVal haccel As LongPtr, ByVal cAccelEntries As Long, ByRef lpmsg As MSG, ByRef lpwCmd As Integer) As Long
Public Declare PtrSafe Function OleGetIconOfFile Lib "ole32" (ByVal lpszPath As LongPtr, ByVal fUseFileAsLabel As BOOL) As LongPtr

Public Const VIEW_E_DRAW = &H80040140
Public Const E_DRAW  = VIEW_E_DRAW
'  IDataObject Error Codes
Public Const DATA_E_FORMATETC  = DV_E_FORMATETC

Public Enum OleEmbedHelperFlags
    EMBDHLP_INPROC_HANDLER = &H0000
    EMBDHLP_INPROC_SERVER = &H0001
    EMBDHLP_CREATENOW = &H00000000
    EMBDHLP_DELAYCREATE = &H00010000
End Enum
 

Public Enum OleStreamConvFlags
    OLESTREAM_CONVERSION_DEFAULT = &H00000000
    OLESTREAM_CONVERSION_DISABLEOLELINK = &H00000001
End Enum

Public Declare PtrSafe Function OleBuildVersion Lib "ole32" () As Long
Public Declare PtrSafe Function WriteFmtUserTypeStg Lib "ole32" (ByVal pstg As IStorage, [TypeHint(StdClipboardFormats)] ByVal cf As Integer, ByVal lpszUserType As LongPtr) As Long
Public Declare PtrSafe Function ReadFmtUserTypeStg Lib "ole32" (ByVal pstg As IStorage, [TypeHint(StdClipboardFormats)] pcf As Integer, lplpszUserType As LongPtr) As Long
Public Declare PtrSafe Function OleQueryLinkFromData Lib "ole32" (ByVal pSrcDataObject As IDataObject) As Long
Public Declare PtrSafe Function OleQueryCreateFromData Lib "ole32" (ByVal pSrcDataObject As IDataObject) As Long
Public Declare PtrSafe Function OleCreateEmbeddingHelper Lib "ole32" (clsid As UUID, ByVal pUnkOuter As IUnknown, ByVal flags As OleEmbedHelperFlags, ByVal pCF As IClassFactory, riid As UUID, lplpObj As Any) As Long

Public Delegate Function OleStreamGetCallback (stm As OLESTREAM, ByVal ptr As LongPtr, ByVal dw As Long) As Long
Public Delegate Function OleStreamPutCallback (stm As OLESTREAM, ByVal ptr As LongPtr, ByVal dw As Long) As Long

' #If WINDEVLIB_NO_DELEGATES Then
    Public Type OLESTREAMVTBL
        Get As LongPtr
        Put As LongPtr
    End Type
' #Else
'     Public Type OLESTREAMVTBL
'         Get As OleStreamGetCallback
'         Put As OleStreamPutCallback
'     End Type
' #End If

Public Type OLESTREAM
    lpstbl As LongPtr
End Type
    
Public Delegate Function OLESTREAMQUERYCONVERTOLELINKCALLBACK (pClsid As UUID, ByVal szClass As LongPtr, ByVal szTopicName As LongPtr, ByVal szItemName As LongPtr, ByVal szUNCName As LongPtr, ByVal linkUpdatingOption As Long, ByVal pvContext As LongPtr) As Long

Public Declare PtrSafe Function OleConvertOLESTREAMToIStorage Lib "ole32" (lpolestream As OLESTREAM, ByVal pstg As IStorage, ptd As DVTARGETDEVICE) As Long
' #If WINDEVLIB_NO_DELEGATES Then
Public Declare PtrSafe Function OleConvertOLESTREAMToIStorage2 Lib "ole32" (lpolestream As OLESTREAM, ByVal pstg As IStorage, ptd As DVTARGETDEVICE, ByVal opt As OleStreamConvFlags, ByVal pvCallbackContext As LongPtr, ByVal pQueryConvertOLELinkCallback As LongPtr) As Long
Public Declare PtrSafe Function OleConvertOLESTREAMToIStorageEx2 Lib "ole32" (polestm As OLESTREAM, ByVal pstg As IStorage, [TypeHint(StdClipboardFormats)] pcfFormat As Integer, plWidth As Long, plHeight As Long, pdwSize As Long, pmedium As STGMEDIUM, ByVal opt As OleStreamConvFlags, ByVal pvCallbackContext As LongPtr, ByVal pQueryConvertOLELinkCallback As LongPtr) As Long
' #Else
' Public Declare PtrSafe Function OleConvertOLESTREAMToIStorage2 Lib "ole32" (lpolestream As OLESTREAM, ByVal pstg As IStorage, ptd As DVTARGETDEVICE, ByVal opt As OleStreamConvFlags, ByVal pvCallbackContext As LongPtr, ByVal pQueryConvertOLELinkCallback As OLESTREAMQUERYCONVERTOLELINKCALLBACK) As Long
' Public Declare PtrSafe Function OleConvertOLESTREAMToIStorageEx2 Lib "ole32" (polestm As OLESTREAM, ByVal pstg As IStorage, [TypeHint(StdClipboardFormats)] pcfFormat As Integer, plWidth As Long, plHeight As Long, pdwSize As Long, pmedium As STGMEDIUM, ByVal opt As OleStreamConvFlags, ByVal pvCallbackContext As LongPtr, ByVal pQueryConvertOLELinkCallback As OLESTREAMQUERYCONVERTOLELINKCALLBACK) As Long
' #End If
Public Declare PtrSafe Function OleConvertIStorageToOLESTREAM Lib "ole32" (ByVal pstg As IStorage, lpolestream As OLESTREAM) As Long
Public Declare PtrSafe Function OleDoAutoConvert Lib "ole32" (ByVal pstg As IStorage, pClsidNew As UUID) As Long
Public Declare PtrSafe Function OleGetAutoConvert Lib "ole32" (clsidOld As UUID, pClsidNew As UUID) As Long
Public Declare PtrSafe Function OleSetAutoConvert Lib "ole32" (clsidOld As UUID, pClsidNew As UUID) As Long
Public Declare PtrSafe Function SetConvertStg Lib "ole32" (ByVal pstg As IStorage, ByVal fConvert As BOOL) As Long
Public Declare PtrSafe Function OleConvertIStorageToOLESTREAMEx Lib "ole32" (ByVal pstg As IStorage, [TypeHint(StdClipboardFormats)] ByVal cfFormat As Integer, ByVal lWidth As Long, ByVal lHeight As Long, ByVal dwSize As Long, pmedium As STGMEDIUM, polestm As OLESTREAM) As Long
Public Declare PtrSafe Function OleConvertOLESTREAMToIStorageEx Lib "ole32" (polestm As OLESTREAM, ByVal pstg As IStorage, [TypeHint(StdClipboardFormats)] pcfFormat As Integer, plWidth As Long, plHeight As Long, pdwSize As Long, pmedium As STGMEDIUM) As Long





#End Region

#Region "oleaut32"
'****************************************************
'oleaut32.dll
'oleauto.h 100% coverage
'olectl.h 100% coverage

Public Enum REGKIND
    REGKIND_DEFAULT = 0
    REGKIND_REGISTER = 1
    REGKIND_NONE = 2
End Enum
    
Public Enum VARFORMAT_FLAGS
	VAR_TIMEVALUEONLY = &H00000001 ' return time value */
	VAR_DATEVALUEONLY = &H00000002 ' return date value */
	VAR_VALIDDATE = &H00000004
	VAR_CALENDAR_HIJRI = &H00000008 ' use Hijri calender */
	VAR_LOCALBOOL = &H00000010
	VAR_FORMAT_NOSUBSTITUTE = &H00000020
    VAR_FOURDIGITYEARS = &H00000040
    VAR_CALENDAR_THAI = &H00000080
    VAR_CALENDAR_GREGORIAN = &H00000100
    LOCALE_USE_NLS = &H10000000
End Enum

Public Const VTDATEGRE_MAX  = 2958465 /* Dec 31, 9999, 0:0:0 in Gregorain Calendar */
Public Const VTDATEGRE_MIN  = -657434 /* Jan 1, 100, 0:0:0 in Gregorain Calendar */


Public Enum NAMEDFORMATS
    GeneralDate = 0                                      ' &H00000000&
    LongDate = 1                                         ' &H00000001&
    ShortDate = 2                                        ' &H00000002&
    LongTime = 3                                         ' &H00000003&
    ShortTime = 4                                        ' &H00000004&
End Enum

Public Enum ACTIVEOBJECTFLAGS
    ACTIVEOBJECT_STRONG = 0                              ' &H00000000&
    ACTIVEOBJECT_WEAK = 1                                ' &H00000001&
End Enum

Public Enum NUMPRS
	NUMPRS_LEADING_WHITE = &H0001
	NUMPRS_TRAILING_WHITE = &H0002
	NUMPRS_LEADING_PLUS = &H0004
	NUMPRS_TRAILING_PLUS = &H0008
	NUMPRS_LEADING_MINUS = &H0010
	NUMPRS_TRAILING_MINUS = &H0020
	NUMPRS_HEX_OCT = &H0040
	NUMPRS_PARENS = &H0080
	NUMPRS_DECIMAL = &H0100
	NUMPRS_THOUSANDS = &H0200
	NUMPRS_CURRENCY = &H0400
	NUMPRS_EXPONENT = &H0800
	NUMPRS_USE_ALL = &H1000
	NUMPRS_STD = &H1FFF
	NUMPRS_NEG = &H10000
	NUMPRS_INEXACT = &H20000
End Enum

Public Type NUMPARSE
    cDig As Long                                         ' offset &H0000
    dwInFlags As NUMPRS                                    ' offset &H0004
    dwOutFlags As NUMPRS                                   ' offset &H0008
    cchUsed As Long                                      ' offset &H000C
    nBaseShift As Long                                   ' offset &H0010
    nPwr10 As Long                                       ' offset &H0014
End Type                                                 ' LenB() = &H0018, Len() = &H0018, UDT Alignment = &H0004

Public Enum VarNPNBits
    VTBIT_I1 = (1 << VT_I1)
    VTBIT_UI1 = (1 << VT_UI1)
    VTBIT_I2 = (1 << VT_I2)
    VTBIT_UI2 = (1 << VT_UI2)
    VTBIT_I4 = (1 << VT_I4)
    VTBIT_UI4 = (1 << VT_UI4)
    VTBIT_I8 = (1 << VT_I8)
    VTBIT_UI8 = (1 << VT_UI8)
    VTBIT_R4 = (1 << VT_R4)
    VTBIT_R8 = (1 << VT_R8)
    VTBIT_CY = (1 << VT_CY)
    VTBIT_DECIMAL = (1 << VT_DECIMAL)
End Enum


Public Enum VARCMPRES
    VARCMP_LT = 0                                        ' &H00000000&
    VARCMP_EQ = 1                                        ' &H00000001&
    VARCMP_GT = 2                                        ' &H00000002&
    VARCMP_NULL = 3                                      ' &H00000003&
End Enum

Public Type PARAMDATA
    szName As LongPtr '/ parameter name
    /* [ TypeHint (VARENUM) ] */ vt As Integer      '  / parameter type 
End Type
 
Public Type METHODDATA
	szName As LongPtr
   [Description("Pointer to array of PARAMDATA")]
    ppdata As LongPtr
    dispid As Long
    iMeth As Long
    cc As CALLCONV
    cArgs As Long
    /* [ TypeHint (DispatchTypes) ] */ wFlags As Integer
    /* [ TypeHint (VARENUM) ] */ vtReturn As Integer
End Type

[Description("Takes a pointer to an array of METHODDATA and a count of the array.")]
Public Type INTERFACEDATA
	pmethdata As LongPtr
    cMembers As Long
End Type
        
Public Enum VariantChangeTypeFlags
    VARIANT_NOVALUEPROP = &H01
    VARIANT_ALPHABOOL = &H02  ' For VT_BOOL to VT_BSTR conversions, convert to "True"/"False" instead of "-1"/"0"
    VARIANT_NOUSEROVERRIDE = &H04  ' For conversions to/from VT_BSTR, passes LOCALE_NOUSEROVERRIDE to core coercion routines
    VARIANT_CALENDAR_HIJRI = &H08
    VARIANT_LOCALBOOL = &H10  ' For VT_BOOL to VT_BSTR and back, convert to local language rather than English
    VARIANT_CALENDAR_THAI = &H20  ' SOUTHASIA calendar support
    VARIANT_CALENDAR_GREGORIAN = &H40  ' SOUTHASIA calendar support
    VARIANT_USE_NLS = &H80  ' NLS function call support
End Enum

Public Const MEMBERID_NIL  = DISPID_UNKNOWN
Public Const ID_DEFAULTINST  = -2


Public Enum LoadTlbBitnessFlags
    LOAD_TLB_AS_32BIT = &H20
    LOAD_TLB_AS_64BIT = &H40
    MASK_TO_RESET_TLB_BITS = Not (LOAD_TLB_AS_32BIT Or LOAD_TLB_AS_64BIT)
End Enum


Public Declare PtrSafe Function DispCallFunc Lib "oleaut32" (ByRef pvInstance As Any, ByVal oVft As LongPtr, ByVal cc As CALLCONV, [TypeHint(VARENUM)] ByVal vtReturn As Integer, ByVal cActuals As Long, ByRef prgvt As Any, ByRef prgpvarg As Any, ByRef pvargResult As Any) As Long
Public Declare PtrSafe Function DispGetParam Lib "oleaut32" (ByRef pDispParams As DISPPARAMS, ByVal position As Long, ByVal vtTarg As Integer, ByRef pVarResult As Variant, ByRef puArgErr As Long) As Long
Public DeclareWide PtrSafe Function DispGetIDsOfNames Lib "oleaut32" (ByVal pTInfo As ITypeInfo, ByRef rgszNames As String, ByVal cNames As Long, ByRef rgdispid As Long) As Long
Public Declare PtrSafe Function DispInvoke Lib "oleaut32" (ByRef this As Any, ByVal pTInfo As ITypeInfo, ByVal dispidMember As Long, ByVal wFlags As Integer, ByRef pparams As DISPPARAMS, ByRef pVarResult As Variant, ByRef pExcepInfo As EXCEPINFO, ByRef puArgErr As Long) As Long
Public Declare PtrSafe Function SystemTimeToVariantTime Lib "oleaut32" (ByRef lpSystemTime As SYSTEMTIME, ByRef pvtime As Double) As Long
Public Declare PtrSafe Function VariantTimeToSystemTime Lib "oleaut32" (ByVal vtime As Double, ByRef lpSystemTime As SYSTEMTIME) As Long
Public Declare PtrSafe Function DosDateTimeToVariantTime Lib "oleaut32" (ByVal wDosDate As Integer, ByVal wDosTime As Integer, ByRef pvtime As Double) As Long
Public Declare PtrSafe Function VariantTimeToDosDateTime Lib "oleaut32" (ByVal vtime As Double, ByRef pwDosDate As Integer, ByRef pwDosTime As Integer) As Long
Public DeclareWide PtrSafe Function VectorFromBstr Lib "oleaut32" (ByVal bstr As String, ppsa() As String) As Long
Public DeclareWide PtrSafe Function BstrFromVector Lib "oleaut32" (psa As Any, pbstr As String) As Long

Public Function LHashValOfName(ByVal lcid As Long, ByVal szName As String) As Long: Return LHashValOfNameSys(SYS_WIN32, lcid, szName): End Function
Public DeclareWide PtrSafe Function LHashValOfNameSys Lib "oleaut32" (ByVal SYSKIND As SYSKIND, ByVal lcid As Long, ByVal szName As String) As Long
Public Declare PtrSafe Function LHashValOfNameSysA Lib "oleaut32" (ByVal SYSKIND As SYSKIND, ByVal lcid As Long, ByVal szName As String) As Long
Public DeclareWide PtrSafe Function RegisterTypeLib Lib "oleaut32" (ByVal ptlib As ITypeLib, ByVal szFullPath As String, Optional ByVal szHelpDir As String) As Long
Public Declare PtrSafe Function UnRegisterTypeLib Lib "oleaut32" (ByRef libID As UUID, ByVal wVerMajor As Integer, ByVal wVerMinor As Integer, ByVal lcid As Long, ByVal SYSKIND As SYSKIND) As Long
Public DeclareWide PtrSafe Function RegisterTypeLibForUser Lib "oleaut32" (ByVal ptlib As ITypeLib, ByVal szFullPath As String, ByVal szHelpDir As String) As Long
Public Declare PtrSafe Function UnRegisterTypeLibForUser Lib "oleaut32" (ByRef libID As UUID, ByVal wVerMajor As Integer, ByVal wVerMinor As Integer, ByVal lcid As Long, ByVal SYSKIND As SYSKIND) As Long
Public DeclareWide PtrSafe Function CreateTypeLib Lib "oleaut32" (ByVal SYSKIND As SYSKIND, ByVal szFile As String, ppctlib As ICreateTypeLib) As Long
Public DeclareWide PtrSafe Function CreateTypeLib2 Lib "oleaut32" (ByVal SYSKIND As SYSKIND, ByVal szFile As String, ppctlib As ICreateTypeLib2) As Long
[PreserveSig(False)]
Public DeclareWide PtrSafe Function CreateTypeLib Lib "oleaut32" (ByVal SYSKIND As SYSKIND, ByVal szFile As String) As ICreateTypeLib2
[PreserveSig(False)]
Public DeclareWide PtrSafe Function CreateTypeLib2 Lib "oleaut32" (ByVal SYSKIND As SYSKIND, ByVal szFile As String) As ICreateTypeLib2
Public Declare PtrSafe Function LoadRegTypeLib Lib "oleaut32" (ByRef rguid As UUID, ByVal wVerMajor As Integer, ByVal wVerMinor As Integer, ByVal lcid As Long, pptlib As ITypeLib) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function LoadRegTypeLib Lib "oleaut32" (ByRef rguid As UUID, ByVal wVerMajor As Integer, ByVal wVerMinor As Integer, ByVal lcid As Long) As ITypeLib
Public DeclareWide PtrSafe Function LoadTypeLibEx Lib "oleaut32" (ByVal szFile As String, [TypeHint(REGKIND, LoadTlbBitnessFlags)] ByVal REGKIND As Long, pptlib As ITypeLib) As Long
[PreserveSig(False)]
Public DeclareWide PtrSafe Function LoadTypeLibEx Lib "oleaut32" (ByVal szFile As String, [TypeHint(REGKIND, LoadTlbBitnessFlags)] ByVal REGKIND As Long) As ITypeLib
Public DeclareWide PtrSafe Function LoadTypeLib Lib "oleaut32" (ByVal szFile As String, pptlib As ITypeLib) As Long
[PreserveSig(False)]
Public DeclareWide PtrSafe Function LoadTypeLib Lib "oleaut32" (ByVal szFile As String) As ITypeLib
Public DeclareWide PtrSafe Function QueryPathOfRegTypeLib Lib "oleaut32" (ByRef guid As UUID, ByVal wVerMajor As Integer, ByVal wVerMinor As Integer, ByVal lcid As Long, lpbstrPathName As String) As Long
[PreserveSig(False)]
Public DeclareWide PtrSafe Function QueryPathOfRegTypeLib Lib "oleaut32" (ByRef guid As UUID, ByVal wVerMajor As Integer, ByVal wVerMinor As Integer, ByVal lcid As Long) As String
Public Declare PtrSafe Function CreateDispTypeInfo Lib "oleaut32" (pidata As INTERFACEDATA, ByVal lcid As Long, pptinfo As ITypeInfo) As Long
Public Declare PtrSafe Sub ClearCustData Lib "oleaut32" (pCustData As CUSTDATA)


Public Declare PtrSafe Function SysAllocString Lib "oleaut32" (ByVal pStr As LongPtr) As String
Public DeclareWide PtrSafe Function SysAllocStringLen Lib "oleaut32" (ByVal Value As String, ByVal Length As Long) As String
Public Declare PtrSafe Function SysAllocStringPtrPtr Lib "oleaut32" Alias "SysAllocString" (ByVal pStr As LongPtr) As LongPtr
Public Declare PtrSafe Function SysAllocStringPtr Lib "oleaut32" Alias "SysAllocString" (ByVal pStr As String) As LongPtr
[Description("This is an alias for SysAllocString")]
Public DeclareWide PtrSafe Function RTrimNull Lib "oleaut32" Alias "SysAllocString" (ByVal pStr As String) As String
[Description("Use SysReAllocStringW to supply a pointer.")]
Public DeclareWide PtrSafe Function SysReAllocString Lib "oleaut32" (ByRef in As String, ByVal pStr As LongPtr) As Long
[Description("Alias for SysReAllocString supporting Unicode.")]
Public Declare PtrSafe Function SysReAllocStringW Lib "oleaut32" Alias "SysReAllocString" (ByVal pBSTR As LongPtr, Optional ByVal pszStrPtr As LongPtr) As Long
Public Declare PtrSafe Function SysReAllocStringLenW Lib "oleaut32" Alias "SysReAllocStringLen" (ByVal pBSTR As LongPtr, Optional ByVal pszStrPtr As LongPtr, Optional ByVal Length As Long) As Long
[Description("Use SysReAllocStringLenW to supply a pointer.")]
Public DeclareWide PtrSafe Function SysReAllocStringLen Lib "oleaut32" (ByRef bstr As String, ByVal pStr As LongPtr, ByVal cb As Long) As Long
Public DeclareWide PtrSafe Sub SysFreeStringW Lib "oleaut32" Alias "SysFreeString" (ByVal bstr As LongPtr)
Public DeclareWide PtrSafe Sub SysReleaseStringW Lib "oleaut32" Alias "SysReleaseString" (ByVal bstr As LongPtr)
[Description("Use SysFreeStringW to supply a pointer.")]
Public DeclareWide PtrSafe Sub SysFreeString Lib "oleaut32" (ByVal bstr As String)
[Description("Use SysReleaseStringW to supply a pointer.")]
Public DeclareWide PtrSafe Sub SysReleaseString Lib "oleaut32" (ByVal bstr As String)
Public DeclareWide PtrSafe Function SysStringLen Lib "oleaut32" (ByVal str As String) As Long
Public DeclareWide PtrSafe Function SysStringByteLen Lib "oleaut32" (ByVal bstr As String) As Long
Public DeclareWide PtrSafe Function SysAllocStringByteLen Lib "oleaut32" (ByVal psz As Any, ByVal len As Long) As String
Public DeclareWide PtrSafe Function SysAddRefString Lib "oleaut32" (ByVal bstr As String) As Long
Public Declare PtrSafe Function GetAltMonthNames Lib "oleaut32" (ByVal lcid As Long, ByRef prgp As LongPtr) As Long
Public DeclareWide PtrSafe Function VarFormat Lib "oleaut32" (ByRef pvarIn As Variant, ByVal pstrFormat As String, ByVal iFirstDay As Long, ByVal iFirstWeek As Long, ByVal dwFlags As VARFORMAT_FLAGS, pbstrOut As String) As Long
Public Declare PtrSafe Function VarFormatDateTime Lib "oleaut32" (ByRef pvarIn As Variant, ByVal iNamedFormat As NAMEDFORMATS, ByVal dwFlags As VARFORMAT_FLAGS, pbstrOut As String) As Long
Public Declare PtrSafe Function VarFormatNumber Lib "oleaut32" (ByRef pvarIn As Variant, ByVal iNumDig As Long, ByVal iIncLead As Long, ByVal iUseParens As Long, ByVal iGroup As Long, ByVal dwFlags As VARFORMAT_FLAGS, pbstrOut As String) As Long
Public Declare PtrSafe Function VarFormatPercent Lib "oleaut32" (ByRef pvarIn As Variant, ByVal iNumDig As Long, ByVal iIncLead As Long, ByVal iUseParens As Long, ByVal iGroup As Long, ByVal dwFlags As VARFORMAT_FLAGS, pbstrOut As String) As Long
Public Declare PtrSafe Function VarFormatCurrency Lib "oleaut32" (ByRef pvarIn As Variant, ByVal iNumDig As Long, ByVal iIncLead As Long, ByVal iUseParens As Long, ByVal iGroup As Long, ByVal dwFlags As VARFORMAT_FLAGS, pbstrOut As String) As Long
Public Declare PtrSafe Function VarWeekdayName Lib "oleaut32" (ByVal iWeekday As Long, ByVal fAbbrev As Long, ByVal iFirstDay As Long, ByVal dwFlags As VARFORMAT_FLAGS, pbstrOut As String) As Long
Public Declare PtrSafe Function VarMonthName Lib "oleaut32" (ByVal iMonth As Long, ByVal fAbbrev As Long, ByVal dwFlags As VARFORMAT_FLAGS, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarFormatFromTokens Lib "oleaut32" (ByRef pvarIn As Variant, ByVal pstrFormat As String, ByRef pbTokCur As Any, ByVal dwFlags As VARFORMAT_FLAGS, ByRef pbstrOut As String, ByVal lcid As Long) As Long
Public DeclareWide PtrSafe Function VarTokenizeFormatString Lib "oleaut32" (ByVal pstrFormat As String, ByRef rgbTok As Any, ByVal cbTok As Long, ByVal iFirstDay As Long, ByVal iFirstWeek As Long, ByVal lcid As Long, Optional ByRef pcbActual As Long = 0) As Long
Public Declare PtrSafe Function CreateStdDispatch Lib "oleaut32" (ByVal pUnkOuter As stdole.IUnknown, ByRef pvThis As Any, ByVal pTInfo As ITypeInfo, ppunkStdDisp As stdole.IUnknown) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function CreateStdDispatch Lib "oleaut32" (ByVal pUnkOuter As stdole.IUnknown, ByRef pvThis As Any, ByVal pTInfo As ITypeInfo) As stdole.IUnknown
Public Declare PtrSafe Function RegisterActiveObject Lib "oleaut32" (ByVal pUnk As stdole.IUnknown, ByRef rclsid As UUID, ByVal dwFlags As ACTIVEOBJECTFLAGS, pdwRegister As Long) As Long
Public Declare PtrSafe Function RevokeActiveObject Lib "oleaut32" (ByVal dwRegister As Long, ByVal pvReserved As LongPtr) As Long
Public Declare PtrSafe Function GetActiveObject Lib "oleaut32" (ByRef rclsid As UUID, ByVal pvReserved As Long, ppunk As stdole.IUnknown) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function GetActiveObject Lib "oleaut32" (ByRef rclsid As UUID, ByVal pvReserved As Long) As stdole.IUnknown
Public Declare PtrSafe Function SetErrorInfo Lib "oleaut32" (ByVal dwReserved As Long, ByVal perrinfo As IErrorInfo) As Long
Public Declare PtrSafe Function GetErrorInfo Lib "oleaut32" (ByVal dwReserved As Long, pperrinfo As IErrorInfo) As Long
Public Declare PtrSafe Function CreateErrorInfo Lib "oleaut32" (pperrinfo As ICreateErrorInfo) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function GetErrorInfo Lib "oleaut32" (ByVal dwReserved As Long) As IErrorInfo
[PreserveSig(False)]
Public Declare PtrSafe Function CreateErrorInfo Lib "oleaut32" () As ICreateErrorInfo
Public Declare PtrSafe Function GetRecordInfoFromTypeInfo Lib "oleaut32" (ByVal pTypeInfo As ITypeInfo, ppRecInfo As IRecordInfo) As Long
Public Declare PtrSafe Function GetRecordInfoFromGuids Lib "oleaut32" (ByRef rGuidTypeLib As UUID, ByVal uVerMajor As Long, ByVal uVerMinor As Long, ByVal lcid As Long, ByRef rGuidTypeInfo As UUID, ppRecInfo As IRecordInfo) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function GetRecordInfoFromTypeInfo Lib "oleaut32" (ByVal pTypeInfo As ITypeInfo) As IRecordInfo
[PreserveSig(False)]
Public Declare PtrSafe Function GetRecordInfoFromGuids Lib "oleaut32" (ByRef rGuidTypeLib As UUID, ByVal uVerMajor As Long, ByVal uVerMinor As Long, ByVal lcid As Long, ByRef rGuidTypeInfo As UUID) As IRecordInfo
Public Declare PtrSafe Function OaBuildVersion Lib "oleaut32" () As Long
Public Declare PtrSafe Sub OaEnablePerUserTLibRegistration Lib "oleaut32" ()

Public DeclareWide PtrSafe Function VarParseNumFromStr Lib "oleaut32" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As NUMPRS, ByRef pnumprs As NUMPARSE, ByRef rgbDig As Byte) As Long
Public Declare PtrSafe Function VarNumFromParseNum Lib "oleaut32" (ByRef pnumprs As NUMPARSE, ByRef rgbDig As Byte, ByVal dwVtBits As VarNPNBits, pvar As Variant) As Long
Public Declare PtrSafe Function VariantChangeType Lib "oleaut32" (ByRef pvargDest As Variant, ByRef pvarSrc As Variant, [TypeHint(VariantChangeTypeFlags)] ByVal wFlags As Integer, [TypeHint(VARENUM)] ByVal vt As Integer) As Long
Public Declare PtrSafe Function VariantChangeTypeEx Lib "oleaut32" (ByRef pvargDest As Variant, ByRef pvarSrc As Variant, ByVal lcid As Long, [TypeHint(VariantChangeTypeFlags)] ByVal wFlags As Integer, [TypeHint(VARENUM)] ByVal vt As Integer) As Long
Public Declare PtrSafe Function VariantClear Lib "oleaut32" (ByRef pvarg As Variant) As Long
Public Declare PtrSafe Function VariantCopy Lib "oleaut32" (ByRef pvargDest As Variant, ByRef pvargSrc As Variant) As Long
Public Declare PtrSafe Function VariantCopyPtrVar Lib "oleaut32" Alias "VariantCopy" (ByVal pvargDest As Long, ByRef pvargSrc As Variant) As Long
Public Declare PtrSafe Function VariantCopyVarPtr Lib "oleaut32" Alias "VariantCopy" (ByRef pvargDest As Variant, ByVal pvargSrc As LongPtr) As Long
Public Declare PtrSafe Function VariantCopyPtr Lib "oleaut32" Alias "VariantCopy" (ByVal pvargDest As LongPtr, ByVal pvargSrc As LongPtr) As Long
Public Declare PtrSafe Function VariantCopyInd Lib "oleaut32" (ByRef pvargDest As Variant, ByRef pvargSrc As Variant) As Long
Public Declare PtrSafe Function VariantCopyIndPtrVar Lib "oleaut32" Alias "VariantCopyInd" (ByVal pvargDest As LongPtr, ByRef pvargSrc As Variant) As Long
Public Declare PtrSafe Function VariantCopyIndVarPtr Lib "oleaut32" Alias "VariantCopyInd" (ByRef pvargDest As Variant, ByVal pvargSrc As LongPtr) As Long
Public Declare PtrSafe Function VariantCopyIndPtr Lib "oleaut32" Alias "VariantCopyInd" (ByVal pvargDest As LongPtr, ByVal pvargSrc As LongPtr) As Long
Public Declare PtrSafe Sub VariantInit Lib "oleaut32" (ByRef pvarg As Variant)

Public Declare PtrSafe Function SafeArrayCreate Lib "oleaut32" ([TypeHint(VARENUM)] ByVal vt As Integer, ByVal cDims As Long, rgsabound As SAFEARRAYBOUND) As LongPtr
Public Declare PtrSafe Function SafeArrayCreateVector Lib "oleaut32" ([TypeHint(VARENUM)] ByVal vt As Integer, ByVal lLbound As Long, ByVal cElements As Long) As LongPtr
Public DeclareWide PtrSafe Function SafeArrayCreateEx Lib "oleaut32" ([TypeHint(VARENUM)] ByVal vt As Integer, ByVal cDims As Long, rgsabound As SAFEARRAYBOUND, pvExtra As Any) As LongPtr
Public DeclareWide PtrSafe Function SafeArrayCreateVectorEx Lib "oleaut32" ([TypeHint(VARENUM)] ByVal vt As Integer, ByVal lLbound As Long, ByVal cElements As Long, pvExtra As Any) As LongPtr
Public Declare PtrSafe Function SafeArrayLock Lib "oleaut32" (ByVal psa As LongPtr) As Long
Public Declare PtrSafe Function SafeArrayUnlock Lib "oleaut32" (ByVal psa As LongPtr) As Long
Public Declare PtrSafe Function SafeArrayDestroy Lib "oleaut32" (ByVal psa As LongPtr) As Long
Public Declare PtrSafe Function SafeArrayDestroyData Lib "oleaut32" (ByVal psa As LongPtr) As Long
Public Declare PtrSafe Function SafeArrayDestroyDescriptor Lib "oleaut32" (ByVal psa As LongPtr) As Long
Public Declare PtrSafe Function SafeArraySetIID Lib "oleaut32" (ByVal psa As LongPtr, guid As UUID) As Long
Public Declare PtrSafe Function SafeArrayGetIID Lib "oleaut32" (ByVal psa As LongPtr, guid As UUID) As Long
Public Declare PtrSafe Function SafeArrayGetRecordInfo Lib "oleaut32" (ByVal psa As LongPtr, prinfo As IRecordInfo) As Long
Public Declare PtrSafe Function SafeArraySetRecordInfo Lib "oleaut32" (ByVal psa As LongPtr, ByVal prinfo As IRecordInfo) As Long
Public Declare PtrSafe Function SafeArrayAllocDescriptor Lib "oleaut32" (ByVal cDims As Long, ppsaOut As LongPtr) As Long
Public DeclareWide PtrSafe Function SafeArrayAllocDescriptor_2 Lib "oleaut32" Alias "SafeArrayAllocDescriptor" (ByVal cDims As Long, ppsaOut() As Any) As Long
Public Declare PtrSafe Function SafeArrayAllocDescriptorEx Lib "oleaut32" ([TypeHint(VARENUM)] ByVal vt As Integer, ByVal cDims As Long, ppsaOut As LongPtr) As Long
Public Declare PtrSafe Function SafeArrayAllocData Lib "oleaut32" (ByVal psa As LongPtr) As Long
Public Declare PtrSafe Function SafeArrayCopy Lib "oleaut32" (ByVal psa As LongPtr, ppsaOut As LongPtr) As Long
Public Declare PtrSafe Function SafeArrayCopyData Lib "oleaut32" (ByVal psaSource As LongPtr, ByVal psaTarget As LongPtr) As Long
Public DeclareWide PtrSafe Function SafeArrayPutElement Lib "oleaut32" (ByVal psa As LongPtr, rgIndices As Long, pv As Any) As Long
Public DeclareWide PtrSafe Function SafeArrayGetElement Lib "oleaut32" (ByVal psa As LongPtr, rgIndices As Long, pv As Any) As Long
Public Declare PtrSafe Function SafeArrayGetElemsize Lib "oleaut32" (ByVal psa As LongPtr) As Long
Public Declare PtrSafe Function SafeArrayRedim Lib "oleaut32" (ByVal psa As LongPtr, rgsaboundNew As SAFEARRAYBOUND) As Long
Public DeclareWide PtrSafe Function SafeArrayPtrOfIndex Lib "oleaut32" (ByVal psa As LongPtr, rgIndices As Long, pv As Any) As Long
Public Declare PtrSafe Function SafeArrayGetDim Lib "oleaut32" (ByVal psa As LongPtr) As Long
Public Declare PtrSafe Function SafeArrayGetLBound Lib "oleaut32" (ByVal psa As LongPtr, ByVal nDim As Long, plLbound As Long) As Long
Public Declare PtrSafe Function SafeArrayGetUBound Lib "oleaut32" (ByVal psa As LongPtr, ByVal nDim As Long, plUbound As Long) As Long
Public Declare PtrSafe Function SafeArrayGetVartype Lib "oleaut32" (ByVal psa As LongPtr, pvt As Integer) As Long
Public Declare PtrSafe Function SafeArrayAccessData Lib "oleaut32" (ByVal psa As LongPtr, ppvData As LongPtr) As Long
Public Declare PtrSafe Function SafeArrayUnaccessData Lib "oleaut32" (ByVal psa As LongPtr) As Long

Public Declare PtrSafe Function VarUI1FromI2 Lib "oleaut32" (ByVal sIn As Integer, pbOut As Byte) As Long
Public Declare PtrSafe Function VarUI1FromI4 Lib "oleaut32" (ByVal lIn As Long, pbOut As Byte) As Long
Public Declare PtrSafe Function VarUI1FromI8 Lib "oleaut32" (ByVal i64In As LongLong, pbOut As Byte) As Long
Public Declare PtrSafe Function VarUI1FromR4 Lib "oleaut32" (ByVal fltIn As Single, pbOut As Byte) As Long
Public Declare PtrSafe Function VarUI1FromR8 Lib "oleaut32" (ByVal dblIn As Double, pbOut As Byte) As Long
Public Declare PtrSafe Function VarUI1FromCy Lib "oleaut32" (ByVal cyIn As Currency, pbOut As Byte) As Long
Public Declare PtrSafe Function VarUI1FromDate Lib "oleaut32" (ByVal dateIn As Date, pbOut As Byte) As Long
Public DeclareWide PtrSafe Function VarUI1FromStr Lib "oleaut32" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As Long, pbOut As Byte) As Long
Public Declare PtrSafe Function VarUI1FromDisp Lib "oleaut32" (ByVal pdispIn As IDispatch, ByVal lcid As Long, pbOut As Byte) As Long
Public Declare PtrSafe Function VarUI1FromBool Lib "oleaut32" (ByVal boolIn As Boolean, pbOut As Byte) As Long
Public Declare PtrSafe Function VarUI1FromI1 Lib "oleaut32" (ByVal cIn As Byte, pbOut As Byte) As Long
Public Declare PtrSafe Function VarUI1FromUI2 Lib "oleaut32" (ByVal uiIn As Integer, pbOut As Byte) As Long
Public Declare PtrSafe Function VarUI1FromUI4 Lib "oleaut32" (ByVal ulIn As Long, pbOut As Byte) As Long
Public Declare PtrSafe Function VarUI1FromUI8 Lib "oleaut32" (ByVal ui64In As LongLong, pbOut As Byte) As Long
Public Declare PtrSafe Function VarUI1FromDec Lib "oleaut32" (pdecIn As Decimal, pbOut As Byte) As Long

Public Declare PtrSafe Function VarI2FromUI1 Lib "oleaut32" (ByVal bIn As Byte, psOut As Integer) As Long
Public Declare PtrSafe Function VarI2FromI4 Lib "oleaut32" (ByVal lIn As Long, psOut As Integer) As Long
Public Declare PtrSafe Function VarI2FromI8 Lib "oleaut32" (ByVal i64In As LongLong, psOut As Integer) As Long
Public Declare PtrSafe Function VarI2FromR4 Lib "oleaut32" (ByVal fltIn As Single, psOut As Integer) As Long
Public Declare PtrSafe Function VarI2FromR8 Lib "oleaut32" (ByVal dblIn As Double, psOut As Integer) As Long
Public Declare PtrSafe Function VarI2FromCy Lib "oleaut32" (ByVal cyIn As Currency, psOut As Integer) As Long
Public Declare PtrSafe Function VarI2FromDate Lib "oleaut32" (ByVal dateIn As Date, psOut As Integer) As Long
Public DeclareWide PtrSafe Function VarI2FromStr Lib "oleaut32" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As Long, psOut As Integer) As Long
Public Declare PtrSafe Function VarI2FromDisp Lib "oleaut32" (ByVal pdispIn As IDispatch, ByVal lcid As Long, psOut As Integer) As Long
Public Declare PtrSafe Function VarI2FromBool Lib "oleaut32" (ByVal boolIn As Boolean, psOut As Integer) As Long
Public Declare PtrSafe Function VarI2FromI1 Lib "oleaut32" (ByVal cIn As Byte, psOut As Integer) As Long
Public Declare PtrSafe Function VarI2FromUI2 Lib "oleaut32" (ByVal uiIn As Integer, psOut As Integer) As Long
Public Declare PtrSafe Function VarI2FromUI4 Lib "oleaut32" (ByVal ulIn As Long, psOut As Integer) As Long
Public Declare PtrSafe Function VarI2FromUI8 Lib "oleaut32" (ByVal ui64In As LongLong, psOut As Integer) As Long
Public Declare PtrSafe Function VarI2FromDec Lib "oleaut32" (pdecIn As Decimal, psOut As Integer) As Long

Public Declare PtrSafe Function VarI4FromUI1 Lib "oleaut32" (ByVal bIn As Byte, plOut As Long) As Long
Public Declare PtrSafe Function VarI4FromI2 Lib "oleaut32" (ByVal sIn As Integer, plOut As Long) As Long
Public Declare PtrSafe Function VarI4FromI8 Lib "oleaut32" (ByVal i64In As LongLong, plOut As Long) As Long
Public Declare PtrSafe Function VarI4FromR4 Lib "oleaut32" (ByVal fltIn As Single, plOut As Long) As Long
Public Declare PtrSafe Function VarI4FromR8 Lib "oleaut32" (ByVal dblIn As Double, plOut As Long) As Long
Public Declare PtrSafe Function VarI4FromCy Lib "oleaut32" (ByVal cyIn As Currency, plOut As Long) As Long
Public Declare PtrSafe Function VarI4FromDate Lib "oleaut32" (ByVal dateIn As Date, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarI4FromStr Lib "oleaut32" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As Long, plOut As Long) As Long
Public Declare PtrSafe Function VarI4FromDisp Lib "oleaut32" (ByVal pdispIn As IDispatch, ByVal lcid As Long, plOut As Long) As Long
Public Declare PtrSafe Function VarI4FromBool Lib "oleaut32" (ByVal boolIn As Boolean, plOut As Long) As Long
Public Declare PtrSafe Function VarI4FromI1 Lib "oleaut32" (ByVal cIn As Byte, plOut As Long) As Long
Public Declare PtrSafe Function VarI4FromUI2 Lib "oleaut32" (ByVal uiIn As Integer, plOut As Long) As Long
Public Declare PtrSafe Function VarI4FromUI4 Lib "oleaut32" (ByVal ulIn As Long, plOut As Long) As Long
Public Declare PtrSafe Function VarI4FromUI8 Lib "oleaut32" (ByVal ui64In As LongLong, plOut As Long) As Long
Public Declare PtrSafe Function VarI4FromDec Lib "oleaut32" (pdecIn As Decimal, plOut As Long) As Long

Public Declare PtrSafe Function VarI8FromUI1 Lib "oleaut32" (ByVal bIn As Byte, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarI8FromI2 Lib "oleaut32" (ByVal sIn As Integer, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarI8FromR4 Lib "oleaut32" (ByVal fltIn As Single, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarI8FromR8 Lib "oleaut32" (ByVal dblIn As Double, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarI8FromCy Lib "oleaut32" (ByVal cyIn As Currency, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarI8FromDate Lib "oleaut32" (ByVal dateIn As Date, pi64Out As LongLong) As Long
Public DeclareWide PtrSafe Function VarI8FromStr Lib "oleaut32" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As Long, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarI8FromDisp Lib "oleaut32" (ByVal pdispIn As IDispatch, ByVal lcid As Long, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarI8FromBool Lib "oleaut32" (ByVal boolIn As Boolean, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarI8FromI1 Lib "oleaut32" (ByVal cIn As Byte, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarI8FromUI2 Lib "oleaut32" (ByVal uiIn As Integer, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarI8FromUI4 Lib "oleaut32" (ByVal ulIn As Long, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarI8FromUI8 Lib "oleaut32" (ByVal ui64In As LongLong, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarI8FromDec Lib "oleaut32" (pdecIn As Decimal, pi64Out As LongLong) As Long

Public Declare PtrSafe Function VarR4FromUI1 Lib "oleaut32" (ByVal bIn As Byte, pfltOut As Single) As Long
Public Declare PtrSafe Function VarR4FromI2 Lib "oleaut32" (ByVal sIn As Integer, pfltOut As Single) As Long
Public Declare PtrSafe Function VarR4FromI4 Lib "oleaut32" (ByVal lIn As Long, pfltOut As Single) As Long
Public Declare PtrSafe Function VarR4FromI8 Lib "oleaut32" (ByVal i64In As LongLong, pfltOut As Single) As Long
Public Declare PtrSafe Function VarR4FromR8 Lib "oleaut32" (ByVal dblIn As Double, pfltOut As Single) As Long
Public Declare PtrSafe Function VarR4FromCy Lib "oleaut32" (ByVal cyIn As Currency, pfltOut As Single) As Long
Public Declare PtrSafe Function VarR4FromDate Lib "oleaut32" (ByVal dateIn As Date, pfltOut As Single) As Long
Public DeclareWide PtrSafe Function VarR4FromStr Lib "oleaut32" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As Long, pfltOut As Single) As Long
Public Declare PtrSafe Function VarR4FromDisp Lib "oleaut32" (ByVal pdispIn As IDispatch, ByVal lcid As Long, pfltOut As Single) As Long
Public Declare PtrSafe Function VarR4FromBool Lib "oleaut32" (ByVal boolIn As Boolean, pfltOut As Single) As Long
Public Declare PtrSafe Function VarR4FromI1 Lib "oleaut32" (ByVal cIn As Byte, pfltOut As Single) As Long
Public Declare PtrSafe Function VarR4FromUI2 Lib "oleaut32" (ByVal uiIn As Integer, pfltOut As Single) As Long
Public Declare PtrSafe Function VarR4FromUI4 Lib "oleaut32" (ByVal ulIn As Long, pfltOut As Single) As Long
Public Declare PtrSafe Function VarR4FromUI8 Lib "oleaut32" (ByVal ui64In As LongLong, pfltOut As Single) As Long
Public Declare PtrSafe Function VarR4FromDec Lib "oleaut32" (pdecIn As Decimal, pfltOut As Single) As Long

Public Declare PtrSafe Function VarR8FromUI1 Lib "oleaut32" (ByVal bIn As Byte, pdblOut As Double) As Long
Public Declare PtrSafe Function VarR8FromI2 Lib "oleaut32" (ByVal sIn As Integer, pdblOut As Double) As Long
Public Declare PtrSafe Function VarR8FromI4 Lib "oleaut32" (ByVal lIn As Long, pdblOut As Double) As Long
Public Declare PtrSafe Function VarR8FromI8 Lib "oleaut32" (ByVal i64In As LongLong, pdblOut As Double) As Long
Public Declare PtrSafe Function VarR8FromR4 Lib "oleaut32" (ByVal fltIn As Single, pdblOut As Double) As Long
Public Declare PtrSafe Function VarR8FromCy Lib "oleaut32" (ByVal cyIn As Currency, pdblOut As Double) As Long
Public Declare PtrSafe Function VarR8FromDate Lib "oleaut32" (ByVal dateIn As Date, pdblOut As Double) As Long
Public DeclareWide PtrSafe Function VarR8FromStr Lib "oleaut32" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As Long, pdblOut As Double) As Long
Public Declare PtrSafe Function VarR8FromDisp Lib "oleaut32" (ByVal pdispIn As IDispatch, ByVal lcid As Long, pdblOut As Double) As Long
Public Declare PtrSafe Function VarR8FromBool Lib "oleaut32" (ByVal boolIn As Boolean, pdblOut As Double) As Long
Public Declare PtrSafe Function VarR8FromI1 Lib "oleaut32" (ByVal cIn As Byte, pdblOut As Double) As Long
Public Declare PtrSafe Function VarR8FromUI2 Lib "oleaut32" (ByVal uiIn As Integer, pdblOut As Double) As Long
Public Declare PtrSafe Function VarR8FromUI4 Lib "oleaut32" (ByVal ulIn As Long, pdblOut As Double) As Long
Public Declare PtrSafe Function VarR8FromUI8 Lib "oleaut32" (ByVal ui64In As LongLong, pdblOut As Double) As Long
Public Declare PtrSafe Function VarR8FromDec Lib "oleaut32" (pdecIn As Decimal, pdblOut As Double) As Long

Public Declare PtrSafe Function VarDateFromUI1 Lib "oleaut32" (ByVal bIn As Byte, pdateOut As Date) As Long
Public Declare PtrSafe Function VarDateFromI2 Lib "oleaut32" (ByVal sIn As Integer, pdateOut As Date) As Long
Public Declare PtrSafe Function VarDateFromI4 Lib "oleaut32" (ByVal lIn As Long, pdateOut As Date) As Long
Public Declare PtrSafe Function VarDateFromI8 Lib "oleaut32" (ByVal i64In As LongLong, pdateOut As Date) As Long
Public Declare PtrSafe Function VarDateFromR4 Lib "oleaut32" (ByVal fltIn As Single, pdateOut As Date) As Long
Public Declare PtrSafe Function VarDateFromR8 Lib "oleaut32" (ByVal dblIn As Double, pdateOut As Date) As Long
Public Declare PtrSafe Function VarDateFromCy Lib "oleaut32" (ByVal cyIn As Currency, pdateOut As Date) As Long
Public DeclareWide PtrSafe Function VarDateFromStr Lib "oleaut32" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As Long, pdateOut As Date) As Long
Public Declare PtrSafe Function VarDateFromDisp Lib "oleaut32" (ByVal pdispIn As IDispatch, ByVal lcid As Long, pdateOut As Date) As Long
Public Declare PtrSafe Function VarDateFromBool Lib "oleaut32" (ByVal boolIn As Boolean, pdateOut As Date) As Long
Public Declare PtrSafe Function VarDateFromI1 Lib "oleaut32" (ByVal cIn As Byte, pdateOut As Date) As Long
Public Declare PtrSafe Function VarDateFromUI2 Lib "oleaut32" (ByVal uiIn As Integer, pdateOut As Date) As Long
Public Declare PtrSafe Function VarDateFromUI4 Lib "oleaut32" (ByVal ulIn As Long, pdateOut As Date) As Long
Public Declare PtrSafe Function VarDateFromUI8 Lib "oleaut32" (ByVal ui64In As LongLong, pdateOut As Date) As Long
Public Declare PtrSafe Function VarDateFromDec Lib "oleaut32" (pdecIn As Decimal, pdateOut As Date) As Long

Public Declare PtrSafe Function VarCyFromUI1 Lib "oleaut32" (ByVal bIn As Byte, pcyOut As Currency) As Long
Public Declare PtrSafe Function VarCyFromI2 Lib "oleaut32" (ByVal sIn As Integer, pcyOut As Currency) As Long
Public Declare PtrSafe Function VarCyFromI4 Lib "oleaut32" (ByVal lIn As Long, pcyOut As Currency) As Long
Public Declare PtrSafe Function VarCyFromI8 Lib "oleaut32" (ByVal i64In As LongLong, pcyOut As Currency) As Long
Public Declare PtrSafe Function VarCyFromR4 Lib "oleaut32" (ByVal fltIn As Single, pcyOut As Currency) As Long
Public Declare PtrSafe Function VarCyFromR8 Lib "oleaut32" (ByVal dblIn As Double, pcyOut As Currency) As Long
Public Declare PtrSafe Function VarCyFromDate Lib "oleaut32" (ByVal dateIn As Date, pcyOut As Currency) As Long
Public DeclareWide PtrSafe Function VarCyFromStr Lib "oleaut32" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As Long, pcyOut As Currency) As Long
Public Declare PtrSafe Function VarCyFromDisp Lib "oleaut32" (ByVal pdispIn As IDispatch, ByVal lcid As Long, pcyOut As Currency) As Long
Public Declare PtrSafe Function VarCyFromBool Lib "oleaut32" (ByVal boolIn As Boolean, pcyOut As Currency) As Long
Public Declare PtrSafe Function VarCyFromI1 Lib "oleaut32" (ByVal cIn As Byte, pcyOut As Currency) As Long
Public Declare PtrSafe Function VarCyFromUI2 Lib "oleaut32" (ByVal uiIn As Integer, pcyOut As Currency) As Long
Public Declare PtrSafe Function VarCyFromUI4 Lib "oleaut32" (ByVal ulIn As Long, pcyOut As Currency) As Long
Public Declare PtrSafe Function VarCyFromUI8 Lib "oleaut32" (ByVal ui64In As LongLong, pcyOut As Currency) As Long
Public Declare PtrSafe Function VarCyFromDec Lib "oleaut32" (pdecIn As Decimal, pcyOut As Currency) As Long

Public DeclareWide PtrSafe Function VarBstrFromUI1 Lib "oleaut32" (ByVal bIn As Byte, ByVal lcid As Long, ByVal dwFlags As Long, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarBstrFromI2 Lib "oleaut32" (ByVal sIn As Integer, ByVal lcid As Long, ByVal dwFlags As Long, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarBstrFromI4 Lib "oleaut32" (ByVal lIn As Long, ByVal lcid As Long, ByVal dwFlags As Long, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarBstrFromI8 Lib "oleaut32" (ByVal i64In As LongLong, ByVal lcid As Long, ByVal dwFlags As Long, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarBstrFromR4 Lib "oleaut32" (ByVal fltIn As Single, ByVal lcid As Long, ByVal dwFlags As Long, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarBstrFromR8 Lib "oleaut32" (ByVal dblIn As Double, ByVal lcid As Long, ByVal dwFlags As Long, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarBstrFromDate Lib "oleaut32" (ByVal dateIn As Date, ByVal lcid As Long, ByVal dwFlags As Long, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarBstrFromCy Lib "oleaut32" (ByVal cyIn As Currency, ByVal lcid As Long, ByVal dwFlags As Long, ByVal lcid As Long, ByVal dwFlags As Long, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarBstrFromDisp Lib "oleaut32" (ByVal pdispIn As IDispatch, ByVal lcid As Long, ByVal lcid As Long, ByVal dwFlags As Long, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarBstrFromBool Lib "oleaut32" (ByVal boolIn As Boolean, ByVal lcid As Long, ByVal dwFlags As Long, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarBstrFromI1 Lib "oleaut32" (ByVal cIn As Byte, ByVal lcid As Long, ByVal dwFlags As Long, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarBstrFromUI2 Lib "oleaut32" (ByVal uiIn As Integer, ByVal lcid As Long, ByVal dwFlags As Long, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarBstrFromUI4 Lib "oleaut32" (ByVal ulIn As Long, ByVal lcid As Long, ByVal dwFlags As Long, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarBstrFromUI8 Lib "oleaut32" (ByVal ui64In As LongLong, ByVal lcid As Long, ByVal dwFlags As Long, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarBstrFromDec Lib "oleaut32" (pdecIn As Decimal, ByVal lcid As Long, ByVal dwFlags As Long, pbstrOut As String) As Long

Public Declare PtrSafe Function VarBoolFromUI1 Lib "oleaut32" (ByVal bIn As Byte, pboolOut As Boolean) As Long
Public Declare PtrSafe Function VarBoolFromI2 Lib "oleaut32" (ByVal sIn As Integer, pboolOut As Boolean) As Long
Public Declare PtrSafe Function VarBoolFromI4 Lib "oleaut32" (ByVal lIn As Long, pboolOut As Boolean) As Long
Public Declare PtrSafe Function VarBoolFromI8 Lib "oleaut32" (ByVal i64In As LongLong, pboolOut As Boolean) As Long
Public Declare PtrSafe Function VarBoolFromR4 Lib "oleaut32" (ByVal fltIn As Single, pboolOut As Boolean) As Long
Public Declare PtrSafe Function VarBoolFromR8 Lib "oleaut32" (ByVal dblIn As Double, pboolOut As Boolean) As Long
Public Declare PtrSafe Function VarBoolFromDate Lib "oleaut32" (ByVal dateIn As Date, pboolOut As Boolean) As Long
Public DeclareWide PtrSafe Function VarBoolFromStr Lib "oleaut32" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As Long, pboolOut As Boolean) As Long
Public Declare PtrSafe Function VarBoolFromDisp Lib "oleaut32" (ByVal pdispIn As IDispatch, ByVal lcid As Long, pboolOut As Boolean) As Long
Public Declare PtrSafe Function VarBoolFromCy Lib "oleaut32" (ByVal cyIn As Currency, pboolOut As Boolean) As Long
Public Declare PtrSafe Function VarBoolFromI1 Lib "oleaut32" (ByVal cIn As Byte, pboolOut As Boolean) As Long
Public Declare PtrSafe Function VarBoolFromUI2 Lib "oleaut32" (ByVal uiIn As Integer, pboolOut As Boolean) As Long
Public Declare PtrSafe Function VarBoolFromUI4 Lib "oleaut32" (ByVal ulIn As Long, pboolOut As Boolean) As Long
Public Declare PtrSafe Function VarBoolFromUI8 Lib "oleaut32" (ByVal ui64In As LongLong, pboolOut As Boolean) As Long
Public Declare PtrSafe Function VarBoolFromDec Lib "oleaut32" (pdecIn As Decimal, pboolOut As Boolean) As Long

Public Declare PtrSafe Function VarI1FromUI1 Lib "oleaut32" (ByVal bIn As Byte, pcOut As Byte) As Long
Public Declare PtrSafe Function VarI1FromI2 Lib "oleaut32" (ByVal sIn As Integer, pcOut As Byte) As Long
Public Declare PtrSafe Function VarI1FromI4 Lib "oleaut32" (ByVal lIn As Long, pcOut As Byte) As Long
Public Declare PtrSafe Function VarI1FromI8 Lib "oleaut32" (ByVal i64In As LongLong, pcOut As Byte) As Long
Public Declare PtrSafe Function VarI1FromR4 Lib "oleaut32" (ByVal fltIn As Single, pcOut As Byte) As Long
Public Declare PtrSafe Function VarI1FromR8 Lib "oleaut32" (ByVal dblIn As Double, pcOut As Byte) As Long
Public Declare PtrSafe Function VarI1FromDate Lib "oleaut32" (ByVal dateIn As Date, pcOut As Byte) As Long
Public DeclareWide PtrSafe Function VarI1FromStr Lib "oleaut32" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As Long, pcOut As Byte) As Long
Public Declare PtrSafe Function VarI1FromDisp Lib "oleaut32" (ByVal pdispIn As IDispatch, ByVal lcid As Long, pcOut As Byte) As Long
Public Declare PtrSafe Function VarI1FromCy Lib "oleaut32" (ByVal cyIn As Currency, pcOut As Byte) As Long
Public Declare PtrSafe Function VarI1FromBool Lib "oleaut32" (ByVal boolIn As Boolean, pcOut As Byte) As Long
Public Declare PtrSafe Function VarI1FromUI2 Lib "oleaut32" (ByVal uiIn As Integer, pcOut As Byte) As Long
Public Declare PtrSafe Function VarI1FromUI4 Lib "oleaut32" (ByVal ulIn As Long, pcOut As Byte) As Long
Public Declare PtrSafe Function VarI1FromUI8 Lib "oleaut32" (ByVal ui64In As LongLong, pcOut As Byte) As Long
Public Declare PtrSafe Function VarI1FromDec Lib "oleaut32" (pdecIn As Decimal, pcOut As Byte) As Long

Public Declare PtrSafe Function VarUI2FromUI1 Lib "oleaut32" (ByVal bIn As Byte, puiOut As Integer) As Long
Public Declare PtrSafe Function VarUI2FromI2 Lib "oleaut32" (ByVal sIn As Integer, puiOut As Integer) As Long
Public Declare PtrSafe Function VarUI2FromI4 Lib "oleaut32" (ByVal lIn As Long, puiOut As Integer) As Long
Public Declare PtrSafe Function VarUI2FromI8 Lib "oleaut32" (ByVal i64In As LongLong, puiOut As Integer) As Long
Public Declare PtrSafe Function VarUI2FromR4 Lib "oleaut32" (ByVal fltIn As Single, puiOut As Integer) As Long
Public Declare PtrSafe Function VarUI2FromR8 Lib "oleaut32" (ByVal dblIn As Double, puiOut As Integer) As Long
Public Declare PtrSafe Function VarUI2FromDate Lib "oleaut32" (ByVal dateIn As Date, puiOut As Integer) As Long
Public DeclareWide PtrSafe Function VarUI2FromStr Lib "oleaut32" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As Long, puiOut As Integer) As Long
Public Declare PtrSafe Function VarUI2FromDisp Lib "oleaut32" (ByVal pdispIn As IDispatch, ByVal lcid As Long, puiOut As Integer) As Long
Public Declare PtrSafe Function VarUI2FromCy Lib "oleaut32" (ByVal cyIn As Currency, puiOut As Integer) As Long
Public Declare PtrSafe Function VarUI2FromBool Lib "oleaut32" (ByVal boolIn As Boolean, puiOut As Integer) As Long
Public Declare PtrSafe Function VarUI2FromI1 Lib "oleaut32" (ByVal cIn As Byte, puiOut As Integer) As Long
Public Declare PtrSafe Function VarUI2FromUI4 Lib "oleaut32" (ByVal ulIn As Long, puiOut As Integer) As Long
Public Declare PtrSafe Function VarUI2FromUI8 Lib "oleaut32" (ByVal ui64In As LongLong, puiOut As Integer) As Long
Public Declare PtrSafe Function VarUI2FromDec Lib "oleaut32" (pdecIn As Decimal, puiOut As Integer) As Long

Public Declare PtrSafe Function VarUI4FromUI1 Lib "oleaut32" (ByVal bIn As Byte, pulOut As Long) As Long
Public Declare PtrSafe Function VarUI4FromI2 Lib "oleaut32" (ByVal sIn As Integer, pulOut As Long) As Long
Public Declare PtrSafe Function VarUI4FromI4 Lib "oleaut32" (ByVal lIn As Long, pulOut As Long) As Long
Public Declare PtrSafe Function VarUI4FromI8 Lib "oleaut32" (ByVal i64In As LongLong, pulOut As Long) As Long
Public Declare PtrSafe Function VarUI4FromR4 Lib "oleaut32" (ByVal fltIn As Single, pulOut As Long) As Long
Public Declare PtrSafe Function VarUI4FromR8 Lib "oleaut32" (ByVal dblIn As Double, pulOut As Long) As Long
Public Declare PtrSafe Function VarUI4FromDate Lib "oleaut32" (ByVal dateIn As Date, pulOut As Long) As Long
Public DeclareWide PtrSafe Function VarUI4FromStr Lib "oleaut32" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As Long, pulOut As Long) As Long
Public Declare PtrSafe Function VarUI4FromDisp Lib "oleaut32" (ByVal pdispIn As IDispatch, ByVal lcid As Long, pulOut As Long) As Long
Public Declare PtrSafe Function VarUI4FromCy Lib "oleaut32" (ByVal cyIn As Currency, pulOut As Long) As Long
Public Declare PtrSafe Function VarUI4FromBool Lib "oleaut32" (ByVal boolIn As Boolean, pulOut As Long) As Long
Public Declare PtrSafe Function VarUI4FromI1 Lib "oleaut32" (ByVal cIn As Byte, pulOut As Long) As Long
Public Declare PtrSafe Function VarUI4FromUI2 Lib "oleaut32" (ByVal uiIn As Integer, pulOut As Long) As Long
Public Declare PtrSafe Function VarUI4FromUI8 Lib "oleaut32" (ByVal ui64In As LongLong, pulOut As Long) As Long
Public Declare PtrSafe Function VarUI4FromDec Lib "oleaut32" (pdecIn As Decimal, pulOut As Long) As Long

Public Declare PtrSafe Function VarUI8FromUI1 Lib "oleaut32" (ByVal bIn As Byte, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarUI8FromI2 Lib "oleaut32" (ByVal sIn As Integer, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarUI8FromI4 Lib "oleaut32" (ByVal lIn As Long, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarUI8FromI8 Lib "oleaut32" (ByVal i64In As LongLong, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarUI8FromR4 Lib "oleaut32" (ByVal fltIn As Single, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarUI8FromR8 Lib "oleaut32" (ByVal dblIn As Double, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarUI8FromDate Lib "oleaut32" (ByVal dateIn As Date, pi64Out As LongLong) As Long
Public DeclareWide PtrSafe Function VarUI8FromStr Lib "oleaut32" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As Long, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarUI8FromDisp Lib "oleaut32" (ByVal pdispIn As IDispatch, ByVal lcid As Long, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarUI8FromCy Lib "oleaut32" (ByVal cyIn As Currency, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarUI8FromBool Lib "oleaut32" (ByVal boolIn As Boolean, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarUI8FromI1 Lib "oleaut32" (ByVal cIn As Byte, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarUI8FromUI2 Lib "oleaut32" (ByVal uiIn As Integer, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarUI8FromUI4 Lib "oleaut32" (ByVal ulIn As Long, pi64Out As LongLong) As Long
Public Declare PtrSafe Function VarUI8FromDec Lib "oleaut32" (pdecIn As Decimal, pi64Out As LongLong) As Long

Public Declare PtrSafe Function VarDecFromUI1 Lib "oleaut32" (ByVal bIn As Byte, pdecOut As Decimal) As Long
Public Declare PtrSafe Function VarDecFromI2 Lib "oleaut32" (ByVal sIn As Integer, pdecOut As Decimal) As Long
Public Declare PtrSafe Function VarDecFromI4 Lib "oleaut32" (ByVal lIn As Long, pdecOut As Decimal) As Long
Public Declare PtrSafe Function VarDecFromI8 Lib "oleaut32" (ByVal i64In As LongLong, pdecOut As Decimal) As Long
Public Declare PtrSafe Function VarDecFromR4 Lib "oleaut32" (ByVal fltIn As Single, pdecOut As Decimal) As Long
Public Declare PtrSafe Function VarDecFromR8 Lib "oleaut32" (ByVal dblIn As Double, pdecOut As Decimal) As Long
Public Declare PtrSafe Function VarDecFromDate Lib "oleaut32" (ByVal dateIn As Date, pdecOut As Decimal) As Long
Public DeclareWide PtrSafe Function VarDecFromStr Lib "oleaut32" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As Long, pdecOut As Decimal) As Long
Public Declare PtrSafe Function VarDecFromDisp Lib "oleaut32" (ByVal pdispIn As IDispatch, ByVal lcid As Long, pdecOut As Decimal) As Long
Public Declare PtrSafe Function VarDecFromCy Lib "oleaut32" (ByVal cyIn As Currency, pdecOut As Decimal) As Long
Public Declare PtrSafe Function VarDecFromBool Lib "oleaut32" (ByVal boolIn As Boolean, pdecOut As Decimal) As Long
Public Declare PtrSafe Function VarDecFromI1 Lib "oleaut32" (ByVal cIn As Byte, pdecOut As Decimal) As Long
Public Declare PtrSafe Function VarDecFromUI2 Lib "oleaut32" (ByVal uiIn As Integer, pdecOut As Decimal) As Long
Public Declare PtrSafe Function VarDecFromUI4 Lib "oleaut32" (ByVal ulIn As Long, pdecOut As Decimal) As Long
Public Declare PtrSafe Function VarDecFromUI8 Lib "oleaut32" (ByVal ui64In As LongLong, pdecOut As Decimal) As Long

Public Function VarUI4FromUI4(ByVal in As Long, pOut As Long) As Long: pOut = in: End Function
Public Function VarI4FromI4(ByVal in As Long, pOut As Long) As Long: pOut = in: End Function

Public Function VarUI8FromUI8(ByVal in As LongLong, pOut As LongLong) As Long: pOut = in: End Function
Public Function VarI8FromI8(ByVal in As LongLong, pOut As LongLong) As Long: pOut = in: End Function

Public DeclareWide PtrSafe Function VarI4FromUint Lib "oleaut32" Alias "VarI4FromUI4" (ByVal ulIn As Long, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarI8FromUint Lib "oleaut32" Alias "VarI8FromUI4" (ByVal ulIn As Long, pi64Out As LongLong) As Long
Public DeclareWide PtrSafe Function VarR4FromInt Lib "oleaut32" Alias "VarR4FromI4" (ByVal lIn As Long, pfltOut As Single) As Long
Public DeclareWide PtrSafe Function VarR4FromUint Lib "oleaut32" Alias "VarR4FromUI4" (ByVal lIn As Long, pfltOut As Single) As Long
Public DeclareWide PtrSafe Function VarR8FromInt Lib "oleaut32" Alias "VarR4FromI4" (ByVal lIn As Long, pdblOut As Double) As Long
Public DeclareWide PtrSafe Function VarR8FromUint Lib "oleaut32" Alias "VarR4FromUI4" (ByVal lIn As Long, pdblOut As Double) As Long
Public DeclareWide PtrSafe Function VarDateFromInt Lib "oleaut32" Alias "VarDateFromI4" (ByVal lIn As Long, pdateOut As Date) As Long
Public DeclareWide PtrSafe Function VarDateFromUint Lib "oleaut32" Alias "VarDateFromUI4" (ByVal lIn As Long, pdateOut As Date) As Long
Public DeclareWide PtrSafe Function VarCyFromInt Lib "oleaut32" Alias "VarCyFromI4" (ByVal lIn As Long, pcyOut As Currency) As Long
Public DeclareWide PtrSafe Function VarCyFromUint Lib "oleaut32" Alias "VarCyFromUI4" (ByVal lIn As Long, pcyOut As Currency) As Long
Public DeclareWide PtrSafe Function VarBstrFromInt Lib "oleaut32" Alias "VarBstrFromI4" (ByVal lIn As Long, ByVal lcid As Long, ByVal dwFlags As Long, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarBstrFromUint Lib "oleaut32" Alias "VarBstrFromUI4" (ByVal lIn As Long, ByVal lcid As Long, ByVal dwFlags As Long, pbstrOut As String) As Long
Public DeclareWide PtrSafe Function VarBoolFromInt Lib "oleaut32" Alias "VarBoolFromI4" (ByVal lIn As Long, pboolOut As Boolean) As Long
Public DeclareWide PtrSafe Function VarBoolFromUint Lib "oleaut32" Alias "VarBoolFromUI4" (ByVal lIn As Long, pboolOut As Boolean) As Long
Public DeclareWide PtrSafe Function VarI1FromInt Lib "oleaut32" Alias "VarI1FromI4" (ByVal lIn As Long, pcOut As Byte) As Long
Public DeclareWide PtrSafe Function VarI1FromUint Lib "oleaut32" Alias "VarI1FromUI4" (ByVal lIn As Long, pcOut As Byte) As Long
Public DeclareWide PtrSafe Function VarUI2FromInt Lib "oleaut32" Alias "VarUI2FromI4" (ByVal lIn As Long, puiOut As Integer) As Long
Public DeclareWide PtrSafe Function VarUI2FromUint Lib "oleaut32" Alias "VarUI2FromUI4" (ByVal lIn As Long, puiOut As Integer) As Long
Public DeclareWide PtrSafe Function VarUI4FromInt Lib "oleaut32" Alias "VarUI4FromI4" (ByVal lIn As Long, pulOut As Long) As Long
Public Function VarUI4FromUint(ByVal in As Long, pOut As Long) As Long: pOut = in: End Function
Public DeclareWide PtrSafe Function VarDecFromInt Lib "oleaut32" Alias "VarDecFromI4" (ByVal lIn As Long, pdecOut As Decimal) As Long
Public DeclareWide PtrSafe Function VarDecFromUint Lib "oleaut32" Alias "VarDecFromUI4" (ByVal lIn As Long, pdecOut As Decimal) As Long
Public DeclareWide PtrSafe Function VarIntFromUI1 Lib "oleaut32" Alias "VarI4FromUI1" (ByVal bIn As Byte, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarIntFromI2 Lib "oleaut32" Alias "VarI4FromI2" (ByVal sIn As Integer, plOut As Long) As Long
Public Function VarIntFromI4(ByVal in As Long, pOut As Long) As Long: pOut = in: End Function
Public DeclareWide PtrSafe Function VarIntFromI8 Lib "oleaut32" Alias "VarI4FromI8" (ByVal i64In As LongLong, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarIntFromR4 Lib "oleaut32" Alias "VarI4FromR4" (ByVal fltIn As Single, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarIntFromR8 Lib "oleaut32" Alias "VarI4FromR8" (ByVal dblIn As Double, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarIntFromCy Lib "oleaut32" Alias "VarI4FromCy" (ByVal cyIn As Currency, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarIntFromDate Lib "oleaut32" Alias "VarI4FromDate" (ByVal dateIn As Date, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarIntFromStr Lib "oleaut32" Alias "VarI4FromStr" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As Long, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarIntFromDisp Lib "oleaut32" Alias "VarI4FromDisp" (ByVal pdispIn As IDispatch, ByVal lcid As Long, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarIntFromBool Lib "oleaut32" Alias "VarI4FromBool" (ByVal boolIn As Boolean, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarIntFromI1 Lib "oleaut32" Alias "VarI4FromI1" (ByVal cIn As Byte, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarIntFromUI2 Lib "oleaut32" Alias "VarI4FromUI2" (ByVal uiIn As Integer, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarIntFromUI4 Lib "oleaut32" Alias "VarI4FromUI4" (ByVal ulIn As Long, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarIntFromUI8 Lib "oleaut32" Alias "VarI4FromUI8" (ByVal ui64In As LongLong, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarIntFromDec Lib "oleaut32" Alias "VarI4FromDec" (pdecIn As Decimal, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarIntFromUint Lib "oleaut32" Alias "VarI4FromUI4" (ByVal ulIn As Long, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarUintFromUI1 Lib "oleaut32" Alias "VarUI4FromUI1" (ByVal bIn As Byte, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarUintFromI2 Lib "oleaut32" Alias "VarUI4FromI2" (ByVal sIn As Integer, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarUintFromI8 Lib "oleaut32" Alias "VarUI4FromI8" (ByVal i64In As LongLong, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarUintFromR4 Lib "oleaut32" Alias "VarUI4FromR4" (ByVal fltIn As Single, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarUintFromR8 Lib "oleaut32" Alias "VarUI4FromR8" (ByVal dblIn As Double, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarUintFromCy Lib "oleaut32" Alias "VarUI4FromCy" (ByVal cyIn As Currency, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarUintFromDate Lib "oleaut32" Alias "VarUI4FromDate" (ByVal dateIn As Date, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarUintFromStr Lib "oleaut32" Alias "VarUI4FromStr" (ByVal strIn As String, ByVal lcid As Long, ByVal dwFlags As Long, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarUintFromDisp Lib "oleaut32" Alias "VarUI4FromDisp" (ByVal pdispIn As IDispatch, ByVal lcid As Long, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarUintFromBool Lib "oleaut32" Alias "VarUI4FromBool" (ByVal boolIn As Boolean, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarUintFromI1 Lib "oleaut32" Alias "VarUI4FromI1" (ByVal cIn As Byte, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarUintFromUI2 Lib "oleaut32" Alias "VarUI4FromUI2" (ByVal uiIn As Integer, plOut As Long) As Long
Public Function VarUintFromUI4(ByVal in As Long, pOut As Long) As Long: pOut = in: End Function
Public DeclareWide PtrSafe Function VarUintFromUI8 Lib "oleaut32" Alias "VarUI4FromUI8" (ByVal ui64In As LongLong, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarUintFromDec Lib "oleaut32" Alias "VarUI4FromDec" (pdecIn As Decimal, plOut As Long) As Long
Public DeclareWide PtrSafe Function VarUintFromInt Lib "oleaut32" Alias "VarUI4FromI4" (ByVal ulIn As Long, plOut As Long) As Long

Public Declare PtrSafe Function VarAdd Lib "oleaut32" (pvarLeft As Variant, pvarRight As Variant, pvarResult As Variant) As Long
Public Declare PtrSafe Function VarAnd Lib "oleaut32" (pvarLeft As Variant, pvarRight As Variant, pvarResult As Variant) As Long
Public Declare PtrSafe Function VarCat Lib "oleaut32" (pvarLeft As Variant, pvarRight As Variant, pvarResult As Variant) As Long
Public Declare PtrSafe Function VarDiv Lib "oleaut32" (pvarLeft As Variant, pvarRight As Variant, pvarResult As Variant) As Long
Public Declare PtrSafe Function VarEqv Lib "oleaut32" (pvarLeft As Variant, pvarRight As Variant, pvarResult As Variant) As Long
Public Declare PtrSafe Function VarIdiv Lib "oleaut32" (pvarLeft As Variant, pvarRight As Variant, pvarResult As Variant) As Long
Public Declare PtrSafe Function VarImp Lib "oleaut32" (pvarLeft As Variant, pvarRight As Variant, pvarResult As Variant) As Long
Public Declare PtrSafe Function VarMod Lib "oleaut32" (pvarLeft As Variant, pvarRight As Variant, pvarResult As Variant) As Long
Public Declare PtrSafe Function VarMul Lib "oleaut32" (pvarLeft As Variant, pvarRight As Variant, pvarResult As Variant) As Long
Public Declare PtrSafe Function VarOr Lib "oleaut32" (pvarLeft As Variant, pvarRight As Variant, pvarResult As Variant) As Long
Public Declare PtrSafe Function VarPow Lib "oleaut32" (pvarLeft As Variant, pvarRight As Variant, pvarResult As Variant) As Long
Public Declare PtrSafe Function VarSub Lib "oleaut32" (pvarLeft As Variant, pvarRight As Variant, pvarResult As Variant) As Long
Public Declare PtrSafe Function VarXor Lib "oleaut32" (pvarLeft As Variant, pvarRight As Variant, pvarResult As Variant) As Long

Public Declare PtrSafe Function VarAbs Lib "oleaut32" (pvarIn As Variant, pvarResult As Variant) As Long
Public Declare PtrSafe Function VarFix Lib "oleaut32" (pvarIn As Variant, pvarResult As Variant) As Long
Public Declare PtrSafe Function VarInt Lib "oleaut32" (pvarIn As Variant, pvarResult As Variant) As Long
Public Declare PtrSafe Function VarNeg Lib "oleaut32" (pvarIn As Variant, pvarResult As Variant) As Long
Public Declare PtrSafe Function VarNot Lib "oleaut32" (pvarIn As Variant, pvarResult As Variant) As Long

Public Declare PtrSafe Function VarRound Lib "oleaut32" (pvarIn As Variant, ByVal cDecimals As Long, pvarResult As Variant) As Long

Public Declare PtrSafe Function VarCmp Lib "oleaut32" (pvarLeft As Variant, pvarRight As Variant, ByVal lcid As Long, ByVal dwFlags As COMPARE_FLAGS) As VARCMPRES

Public Declare PtrSafe Function VarDecAdd Lib "oleaut32" (pdecLeft As Decimal, pdecRight As Decimal, pdecResult As Decimal) As Long
Public Declare PtrSafe Function VarDecDiv Lib "oleaut32" (pdecLeft As Decimal, pdecRight As Decimal, pdecResult As Decimal) As Long
Public Declare PtrSafe Function VarDecMul Lib "oleaut32" (pdecLeft As Decimal, pdecRight As Decimal, pdecResult As Decimal) As Long
Public Declare PtrSafe Function VarDecSub Lib "oleaut32" (pdecLeft As Decimal, pdecRight As Decimal, pdecResult As Decimal) As Long

Public Declare PtrSafe Function VarDecAbs Lib "oleaut32" (pdecIn As Decimal, pdecResult As Decimal) As Long
Public Declare PtrSafe Function VarDecFix Lib "oleaut32" (pdecIn As Decimal, pdecResult As Decimal) As Long
Public Declare PtrSafe Function VarDecInt Lib "oleaut32" (pdecIn As Decimal, pdecResult As Decimal) As Long
Public Declare PtrSafe Function VarDecNeg Lib "oleaut32" (pdecIn As Decimal, pdecResult As Decimal) As Long

Public Declare PtrSafe Function VarDecRound Lib "oleaut32" (pdecIn As Decimal, ByVal cDecimals As Long, pdecResult As Decimal) As Long

Public Declare PtrSafe Function VarDecCmp Lib "oleaut32" (pdecLeft As Decimal, pdecRight As Decimal) As VARCMPRES
Public Declare PtrSafe Function VarDecCmpR8 Lib "oleaut32" (pdecLeft As Decimal, ByVal dblRight As Double) As VARCMPRES

Public Declare PtrSafe Function VarCyAdd Lib "oleaut32" (ByVal cyLeft As Currency, ByVal cyRight As Currency, pcyResult As Currency) As Long
Public Declare PtrSafe Function VarCyMul Lib "oleaut32" (ByVal cyLeft As Currency, ByVal cyRight As Currency, pcyResult As Currency) As Long
Public Declare PtrSafe Function VarCyMulI4 Lib "oleaut32" (ByVal cyLeft As Currency, ByVal lRight As Long, pcyResult As Currency) As Long
Public Declare PtrSafe Function VarCyMulI8 Lib "oleaut32" (ByVal cyLeft As Currency, ByVal lRight As LongLong, pcyResult As Currency) As Long
Public Declare PtrSafe Function VarCySub Lib "oleaut32" (ByVal cyLeft As Currency, ByVal cyRight As Currency, pcyResult As Currency) As Long

Public Declare PtrSafe Function VarCyAbs Lib "oleaut32" (ByVal cyIn As Currency, pcyResult As Currency) As Long
Public Declare PtrSafe Function VarCyFix Lib "oleaut32" (ByVal cyIn As Currency, pcyResult As Currency) As Long
Public Declare PtrSafe Function VarCyInt Lib "oleaut32" (ByVal cyIn As Currency, pcyResult As Currency) As Long
Public Declare PtrSafe Function VarCyNeg Lib "oleaut32" (ByVal cyIn As Currency, pcyResult As Currency) As Long

Public Declare PtrSafe Function VarCyRound Lib "oleaut32" (ByVal cyIn As Currency, ByVal cDecimals As Long, pcyResult As Currency) As Long

Public Declare PtrSafe Function VarCyCmp Lib "oleaut32" (ByVal cyLeft As Currency, ByVal cyRight As Currency) As VARCMPRES
Public Declare PtrSafe Function VarCyCmpR8 Lib "oleaut32" (ByVal cyLeft As Currency, ByVal dblRight As Double) As VARCMPRES

Public DeclareWide PtrSafe Function VarBstrCat Lib "oleaut32" (ByVal bstrLeft As String, ByVal bstrRight As String, pbstrResult As String) As Long
Public Declare PtrSafe Function VarBstrCmp Lib "oleaut32" (ByVal bstrLeft As String, ByVal bstrRight As String, ByVal lcid As Long, ByVal dwFlags As COMPARE_FLAGS) As VARCMPRES
Public Declare PtrSafe Function VarR8Pow Lib "oleaut32" (ByVal dblLeft As Double, ByVal dblRight As Double, pdblResult As Double) As Long
Public Declare PtrSafe Function VarR4CmpR8 Lib "oleaut32" (ByVal fltLeft As Single, ByVal dblRight As Double) As VARCMPRES
Public Declare PtrSafe Function VarR8Round Lib "oleaut32" (ByVal dblIn As Double, ByVal cDecimals As Long, pdblResult As Double) As Long

Public Type UDATE
    st As SYSTEMTIME
    wDayOfYear As Integer
End Type

Public Declare PtrSafe Function VarDateFromUdate Lib "oleaut32" (pudateIn As UDATE, ByVal dwFlags As VARFORMAT_FLAGS, pdateOut As Date) As Long
Public Declare PtrSafe Function VarDateFromUdateEx Lib "oleaut32" (pudateIn As UDATE, ByVal lcid As Long, ByVal dwFlags As VARFORMAT_FLAGS, pdateOut As Date) As Long
Public Declare PtrSafe Function VarUdateFromDate Lib "oleaut32" (ByVal dateIn As Date, ByVal dwFlags As VARFORMAT_FLAGS, pudateOut As UDATE) As Long


Public Declare PtrSafe Function OleTranslateColor Lib "oleaut32" (ByVal clr As stdole.OLE_COLOR, ByVal hpal As LongPtr, lpcolorref As Long) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function OleTranslateColor Lib "oleaut32" (ByVal clr As stdole.OLE_COLOR, ByVal hpal As LongPtr) As Long
Public Declare PtrSafe Function OleTranslateColorPtr Lib "oleaut32" Alias "OleTranslateColor" (ByVal clr As stdole.OLE_COLOR, ByVal hpal As LongPtr, ByVal lpcolorref As LongPtr) As Long
Public DeclareWide PtrSafe Function OleCreatePropertyFrame Lib "oleaut32" (ByVal hWndOwner As LongPtr, ByVal x As Long, ByVal y As Long, ByVal lpszCaption As String, ByVal cObjects As Long, ByRef ppunk As IUnknown, ByVal cPages As Long, ByRef pPageClsID As Any, ByVal lcid As Long, ByVal dwReserved As Long, ByVal pvReserved As LongPtr) As Long
Public Declare PtrSafe Function OleCreatePropertyFrameIndirect Lib "oleaut32" (ByRef lpParams As OCPFIPARAMS) As Long
Public Declare PtrSafe Function OleCreateFontIndirect Lib "oleaut32" (ByRef lpFontDesc As FONTDESC, ByRef riid As UUID, lplpvObj As stdole.IFont) As Long
Public Declare PtrSafe Function OleCreatePictureIndirect Lib "oleaut32" (ByRef lpPictDesc As PICTDESC, ByRef riid As UUID, ByVal fOwn As BOOL, lplpvObj As stdole.IPicture) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function OleCreateFontIndirect Lib "oleaut32" (ByRef lpFontDesc As FONTDESC, ByRef riid As UUID) As stdole.IFont
[PreserveSig(False)]
Public Declare PtrSafe Function OleCreatePictureIndirect Lib "oleaut32" (ByRef lpPictDesc As PICTDESC, ByRef riid As UUID, ByVal fOwn As BOOL) As stdole.IPicture
Public Declare PtrSafe Function OleIconToCursor Lib "oleaut32" (ByVal hinstExe As LongPtr, ByVal hIcon As LongPtr) As LongPtr
Public Declare PtrSafe Function OleLoadPicture Lib "oleaut32" (ByVal lpstream As IStream, ByVal lSize As Long, ByVal fRunmode As BOOL, ByRef riid As UUID, lplpvObj As Any) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function OleLoadPicture Lib "oleaut32" (ByVal lpstream As IStream, ByVal lSize As Long, ByVal fRunmode As BOOL, ByRef riid As UUID) As stdole.IPicture
Public Declare PtrSafe Function OleLoadPictureEx Lib "oleaut32" (ByVal lpstream As IStream, ByVal lSize As Long, ByVal fRunmode As BOOL, ByRef riid As UUID, ByVal xSizeDesired As Long, ByVal ySizeDesired As Long, ByVal dwFlags As OleLoadPicFlags, lplpvObj As Any) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function OleLoadPictureEx Lib "oleaut32" (ByVal lpstream As IStream, ByVal lSize As Long, ByVal fRunmode As BOOL, ByRef riid As UUID, ByVal xSizeDesired As Long, ByVal ySizeDesired As Long, ByVal dwFlags As OleLoadPicFlags) As stdole.IPicture
Public DeclareWide PtrSafe Function OleLoadPicturePath Lib "oleaut32" (ByVal szURLorPath As String, ByVal punkCaller As IUnknown, ByVal dwReserved As Long, ByVal clrReserved As stdole.OLE_COLOR, ByRef riid As UUID, ppvRet As Any) As Long
Public Declare PtrSafe Function OleLoadPictureFile Lib "oleaut32" (ByVal varFileName As Variant, lplpdispPicture As stdole.IPictureDisp) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function OleLoadPictureFile Lib "oleaut32" (ByVal varFileName As Variant) As stdole.IPictureDisp
Public Declare PtrSafe Function OleLoadPictureFileEx Lib "oleaut32" (ByVal varFileName As Variant, ByVal xSizeDesired As Long, ByVal ySizeDesired As Long, ByVal dwFlags As OleLoadPicFlags, lplpdispPicture As stdole.IPictureDisp) As Long
[PreserveSig(False)]
Public Declare PtrSafe Function OleLoadPictureFileEx Lib "oleaut32" (ByVal varFileName As Variant, ByVal xSizeDesired As Long, ByVal ySizeDesired As Long, ByVal dwFlags As OleLoadPicFlags) As stdole.IPictureDisp
Public DeclareWide PtrSafe Function OleSavePictureFile Lib "oleaut32" (ByVal lpdispPicture As stdole.IPictureDisp, ByVal bstrFileName As String) As Long

Public Enum OLE_TRISTATE
    triUnchecked = 0                                        ' &H00000000&
    triChecked = 1                                          ' &H00000001&
    triGray = 2                                             ' &H00000002&
End Enum


Public Enum OleLoadPicFlags
    LP_DEFAULT = &H00
    LP_MONOCHROME = &H01
    LP_VGACOLOR = &H02
    LP_COLOR = &H04
End Enum

Public Type OCPFIPARAMS
	cbStructSize As Long
	hWndOwner As LongPtr
	x As Long
	y As Long
	lpszCaption As LongPtr
	cObjects As Long
	lplpUnk As LongPtr
	cPages As Long
	lpPagesGUID As LongPtr
	lcid As Long
	dispidInitialProperty As Long
End Type

Public Type FONTDESC
	cbSizeofstruct As Long
	lpstrName As Long
	cySize As Currency
	sWeight As Integer
	sCharset As Integer
	fItalic As Long
	fUnderline As Long
	fStrikethrough As Long
End Type

Public Enum PICTYPE
	PICTYPE_UNINITIALIZED = -1
	PICTYPE_NONE = 0
	PICTYPE_BITMAP = 1
	PICTYPE_METAFILE = 2
	PICTYPE_ICON = 3
	PICTYPE_ENHMETAFILE = 4
End Enum

Public Type PICTDESC
	cbSizeofstruct As Long
	picType As PICTYPE
	#If Win64 Then
    hImage As LongPtr
    hPalette As LongPtr
    #Else
    hImage As LongPtr
    hPalette As LongPtr
    pad As Long
    #End If
    ' union
    ' {
        ' struct
        ' {
            ' HBITMAP   hbitmap;        // Bitmap
            ' HPALETTE  hpal;           // Accompanying palette
        ' } bmp;

        ' struct
        ' {
            ' HMETAFILE hmeta;          // Metafile
            ' int       xExt;
            ' int       yExt;           // Extent
        ' } wmf;

        ' struct
        ' {
            ' HICON hicon;              // Icon
        ' } icon;

' #ifdef _WIN32
        ' struct
        ' {
            ' HENHMETAFILE hemf;        // Enhanced Metafile
        ' } emf;
' #endif
    ' };
End Type

#End Region

    
#Region "comdlg"
'Common Dialogs

'cderr.h
Public Enum ComDlgExtendedErrors
    CDERR_DIALOGFAILURE = &HFFFF&
    CDERR_GENERALCODES = &H0000
    CDERR_STRUCTSIZE = &H0001
    CDERR_INITIALIZATION = &H0002
    CDERR_NOTEMPLATE = &H0003
    CDERR_NOHINSTANCE = &H0004
    CDERR_LOADSTRFAILURE = &H0005
    CDERR_FINDRESFAILURE = &H0006
    CDERR_LOADRESFAILURE = &H0007
    CDERR_LOCKRESFAILURE = &H0008
    CDERR_MEMALLOCFAILURE = &H0009
    CDERR_MEMLOCKFAILURE = &H000A
    CDERR_NOHOOK = &H000B
    CDERR_REGISTERMSGFAIL = &H000C
    PDERR_PRINTERCODES = &H1000
    PDERR_SETUPFAILURE = &H1001
    PDERR_PARSEFAILURE = &H1002
    PDERR_RETDEFFAILURE = &H1003
    PDERR_LOADDRVFAILURE = &H1004
    PDERR_GETDEVMODEFAIL = &H1005
    PDERR_INITFAILURE = &H1006
    PDERR_NODEVICES = &H1007
    PDERR_NODEFAULTPRN = &H1008
    PDERR_DNDMMISMATCH = &H1009
    PDERR_CREATEICFAILURE = &H100A
    PDERR_PRINTERNOTFOUND = &H100B
    PDERR_DEFAULTDIFFERENT = &H100C
    CFERR_CHOOSEFONTCODES = &H2000
    CFERR_NOFONTS = &H2001
    CFERR_MAXLESSTHANMIN = &H2002
    FNERR_FILENAMECODES = &H3000
    FNERR_SUBCLASSFAILURE = &H3001
    FNERR_INVALIDFILENAME = &H3002
    FNERR_BUFFERTOOSMALL = &H3003
    FRERR_FINDREPLACECODES = &H4000
    FRERR_BUFFERLENGTHZERO = &H4001
    CCERR_CHOOSECOLORCODES = &H5000
End Enum

Public Delegate Function OFNHookProc (ByVal hwnd As LongPtr, ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
' Public Type OPENFILENAMEA
'     lStructSize As Long
'     hwndOwner As LongPtr
'     hInstance As LongPtr
'     lpstrFilter As String
'     lpstrCustomFilter As String
'     nMaxCustFilter As Long
'     nFilterIndex As Long
'     lpstrFile As String
'     nMaxFile As Long
'     lpstrFileTitle As String
'     nMaxFileTitle As Long
'     lpstrInitialDir As String
'     lpstrTitle As String
'     Flags As OFNFlags
'     nFileOffset As Integer
'     nFileExtension As Integer
'     lpstrDefExt As String
'     lCustData As LongPtr
'     lpfnHook As OFNHookProc
'     lpTemplateName As String
'     pvReserved As LongPtr
'     dwReserved As Long
'     FlagsEx As OFNFlagsEx
' End Type
' Public Type OPENFILENAMEW
'     lStructSize As Long
'     hwndOwner As LongPtr
'     hInstance As LongPtr
'     lpstrFilter As LongPtr
'     lpstrCustomFilter As LongPtr
'     nMaxCustFilter As Long
'     nFilterIndex As Long
'     lpstrFile As LongPtr
'     nMaxFile As Long
'     lpstrFileTitle As LongPtr
'     nMaxFileTitle As Long
'     lpstrInitialDir As LongPtr
'     lpstrTitle As LongPtr
'     Flags As OFNFlags
'     nFileOffset As Integer
'     nFileExtension As Integer
'     lpstrDefExt As LongPtr
'     lCustData As LongPtr
'     lpfnHook As OFNHookProc
'     lpTemplateName As LongPtr
'     pvReserved As LongPtr
'     dwReserved As Long
'     FlagsEx As OFNFlagsEx
' End Type
' Public Type OPENFILENAME
'     lStructSize As Long
'     hwndOwner As LongPtr
'     hInstance As LongPtr
'     lpstrFilter As LongPtr
'     lpstrCustomFilter As LongPtr
'     nMaxCustFilter As Long
'     nFilterIndex As Long
'     lpstrFile As LongPtr
'     nMaxFile As Long
'     lpstrFileTitle As LongPtr
'     nMaxFileTitle As Long
'     lpstrInitialDir As LongPtr
'     lpstrTitle As LongPtr
'     Flags As OFNFlags
'     nFileOffset As Integer
'     nFileExtension As Integer
'     lpstrDefExt As LongPtr
'     lCustData As LongPtr
'     lpfnHook As OFNHookProc
'     lpTemplateName As LongPtr
'     pvReserved As LongPtr
'     dwReserved As Long
'     FlagsEx As OFNFlagsEx
' End Type
Public Type OPENFILENAMEA
    lStructSize As Long
    hwndOwner As LongPtr
    hInstance As LongPtr
    lpstrFilter As String
    lpstrCustomFilter As String
    nMaxCustFilter As Long
    nFilterIndex As Long
    lpstrFile As String
    nMaxFile As Long
    lpstrFileTitle As String
    nMaxFileTitle As Long
    lpstrInitialDir As String
    lpstrTitle As String
    Flags As OFNFlags
    nFileOffset As Integer
    nFileExtension As Integer
    lpstrDefExt As String
    lCustData As LongPtr
    lpfnHook As LongPtr
    lpTemplateName As String
    pvReserved As LongPtr
    dwReserved As Long
    FlagsEx As OFNFlagsEx
End Type
Public Type OPENFILENAMEW
    lStructSize As Long
    hwndOwner As LongPtr
    hInstance As LongPtr
    lpstrFilter As LongPtr
    lpstrCustomFilter As LongPtr
    nMaxCustFilter As Long
    nFilterIndex As Long
    lpstrFile As LongPtr
    nMaxFile As Long
    lpstrFileTitle As LongPtr
    nMaxFileTitle As Long
    lpstrInitialDir As LongPtr
    lpstrTitle As LongPtr
    Flags As OFNFlags
    nFileOffset As Integer
    nFileExtension As Integer
    lpstrDefExt As LongPtr
    lCustData As LongPtr
    lpfnHook As LongPtr
    lpTemplateName As LongPtr
    pvReserved As LongPtr
    dwReserved As Long
    FlagsEx As OFNFlagsEx
End Type
Public Type OPENFILENAME
    lStructSize As Long
    hwndOwner As LongPtr
    hInstance As LongPtr
    lpstrFilter As LongPtr
    lpstrCustomFilter As LongPtr
    nMaxCustFilter As Long
    nFilterIndex As Long
    lpstrFile As LongPtr
    nMaxFile As Long
    lpstrFileTitle As LongPtr
    nMaxFileTitle As Long
    lpstrInitialDir As LongPtr
    lpstrTitle As LongPtr
    Flags As OFNFlags
    nFileOffset As Integer
    nFileExtension As Integer
    lpstrDefExt As LongPtr
    lCustData As LongPtr
    lpfnHook As LongPtr
    lpTemplateName As LongPtr
    pvReserved As LongPtr
    dwReserved As Long
    FlagsEx As OFNFlagsEx
End Type
Public Enum OFNFlags
    OFN_READONLY = &H00000001
    OFN_OVERWRITEPROMPT = &H00000002
    OFN_HIDEREADONLY = &H00000004
    OFN_NOCHANGEDIR = &H00000008
    OFN_SHOWHELP = &H00000010
    OFN_ENABLEHOOK = &H00000020
    OFN_ENABLETEMPLATE = &H00000040
    OFN_ENABLETEMPLATEHANDLE = &H00000080
    OFN_NOVALIDATE = &H00000100
    OFN_ALLOWMULTISELECT = &H00000200
    OFN_EXTENSIONDIFFERENT = &H00000400
    OFN_PATHMUSTEXIST = &H00000800
    OFN_FILEMUSTEXIST = &H00001000
    OFN_CREATEPROMPT = &H00002000
    OFN_SHAREAWARE = &H00004000
    OFN_NOREADONLYRETURN = &H00008000&
    OFN_NOTESTFILECREATE = &H00010000
    OFN_NONETWORKBUTTON = &H00020000
    OFN_NOLONGNAMES = &H00040000  ' force no long names for 4.x modules
    OFN_EXPLORER = &H00080000  ' new look commdlg
    OFN_NODEREFERENCELINKS = &H00100000
    OFN_LONGNAMES = &H00200000  ' force long names for 3.x modules
'  OFN_ENABLEINCLUDENOTIFY and OFN_ENABLESIZING require
'  Windows 2000 or higher to have any effect.
    OFN_ENABLEINCLUDENOTIFY = &H00400000  ' send include message to callback
    OFN_ENABLESIZING = &H00800000
    OFN_DONTADDTORECENT = &H02000000
    OFN_FORCESHOWHIDDEN = &H10000000  ' Show All files including System and hidden files
End Enum
Public Enum OFNFlagsEx
    OFN_EX_NOPLACESBAR = &H1
End Enum

Public Declare PtrSafe Function GetOpenFileNameA Lib "comdlg32" (pOFN As OPENFILENAMEA) As Long
Public Declare PtrSafe Function GetOpenFileNameW Lib "comdlg32" (pOFN As OPENFILENAMEW) As Long
Public DeclareWide PtrSafe Function GetOpenFileName Lib "comdlg32" Alias "GetOpenFileNameW" (pOFN As OPENFILENAME) As Long

Public Declare PtrSafe Function GetSaveFileNameA Lib "comdlg32" (pOFN As OPENFILENAMEA) As Long
Public Declare PtrSafe Function GetSaveFileNameW Lib "comdlg32" (pOFN As OPENFILENAMEW) As Long
Public DeclareWide PtrSafe Function GetSaveFileName Lib "comdlg32" Alias "GetSaveFileNameW" (pOFN As OPENFILENAME) As Long

Public Declare PtrSafe Function GetFileTitleA Lib "comdlg32" (ByVal Buf As String, ByVal cchSize As Long) As Integer
Public Declare PtrSafe Function GetFileTitleW Lib "comdlg32" (ByVal Buf As LongPtr, ByVal cchSize As Long) As Integer
Public DeclareWide PtrSafe Function GetFileTitle Lib "comdlg32" Alias "GetFileTitleW" (ByVal Buf As String, ByVal cchSize As Long) As Integer

Public Const OFN_SHAREFALLTHROUGH  = 2
Public Const OFN_SHARENOWARN  = 1
Public Const OFN_SHAREWARN  = 0

Public Type OFNOTIFYA
    hdr As NMHDR
    lpOFN As LongPtr
    pszFile As String ' May be NULL
End Type
Public Type OFNOTIFYW
    hdr As NMHDR
    lpOFN As LongPtr
    pszFile As LongPtr ' May be NULL
End Type
Public Type OFNOTIFY
    hdr As NMHDR
    lpOFN As LongPtr
    pszFile As LongPtr ' May be NULL
End Type

Public Type OFNOTIFYEXA
    hdr As NMHDR
    lpOFN As LongPtr
    psf As LongPtr
    pidl As LongPtr ' May be NULL
End Type
Public Type OFNOTIFYEXW
    hdr As NMHDR
    lpOFN As LongPtr
    psf As LongPtr
    pidl As LongPtr ' May be NULL
End Type
Public Type OFNOTIFYEX
    hdr As NMHDR
    lpOFN As LongPtr
    psf As LongPtr
    pidl As LongPtr ' May be NULL
End Type

Public Const CDN_FIRST  = (-601)
Public Const CDN_LAST  = (-699)
'  Notifications from Open or Save dialog
Public Const CDN_INITDONE  = (CDN_FIRST - &H0000)
Public Const CDN_SELCHANGE  = (CDN_FIRST - &H0001)
Public Const CDN_FOLDERCHANGE  = (CDN_FIRST - &H0002)
Public Const CDN_SHAREVIOLATION  = (CDN_FIRST - &H0003)
Public Const CDN_HELP  = (CDN_FIRST - &H0004)
Public Const CDN_FILEOK  = (CDN_FIRST - &H0005)
Public Const CDN_TYPECHANGE  = (CDN_FIRST - &H0006)
Public Const CDN_INCLUDEITEM  = (CDN_FIRST - &H0007)

Private Const WM_USER = &H0400 'DO NOT MAKE PUBLIC:: This is only here as a temp fix to the 'error evaluating constant expression' bug.
Public Const CDM_FIRST = (WM_USER + 100)
Public Const CDM_LAST = (WM_USER + 200)
Public Const CDM_GETSPEC = (CDM_FIRST + &H0000)
Public Const CDM_GETFILEPATH  = (CDM_FIRST + &H0001)
Public Const CDM_GETFOLDERPATH  = (CDM_FIRST + &H0002)
Public Const CDM_GETFOLDERIDLIST  = (CDM_FIRST + &H0003)
Public Const CDM_SETCONTROLTEXT  = (CDM_FIRST + &H0004)
Public Const CDM_HIDECONTROL  = (CDM_FIRST + &H0005)
Public Const CDM_SETDEFEXT  = (CDM_FIRST + &H0006)

Public Delegate Function CCHookProc (ByVal hwnd As LongPtr, ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr

' Public Type CHOOSECOLORA
'     lStructSize As Long
'     hwndOwner As LongPtr
'     hInstance As LongPtr
'     rgbResult As Long
'     lpCustColors As LongPtr
'     Flags As ChooseColorFlags
'     lCustData As LongPtr
'     lpfnHook As CCHookProc
'     lpTemplateName As String
' End Type
' Public Type CHOOSECOLORW
'     lStructSize As Long
'     hwndOwner As LongPtr
'     hInstance As LongPtr
'     rgbResult As Long
'     lpCustColors As LongPtr
'     Flags As ChooseColorFlags
'     lCustData As LongPtr
'     lpfnHook As CCHookProc
'     lpTemplateName As LongPtr
' End Type
' Public Type CHOOSECOLOR
'     lStructSize As Long
'     hwndOwner As LongPtr
'     hInstance As LongPtr
'     rgbResult As Long
'     lpCustColors As LongPtr
'     Flags As ChooseColorFlags
'     lCustData As LongPtr
'     lpfnHook As CCHookProc
'     lpTemplateName As LongPtr
' End Type
Public Type CHOOSECOLORA
    lStructSize As Long
    hwndOwner As LongPtr
    hInstance As LongPtr
    rgbResult As Long
    lpCustColors As LongPtr
    Flags As ChooseColorFlags
    lCustData As LongPtr
    lpfnHook As LongPtr
    lpTemplateName As String
End Type
Public Type CHOOSECOLORW
    lStructSize As Long
    hwndOwner As LongPtr
    hInstance As LongPtr
    rgbResult As Long
    lpCustColors As LongPtr
    Flags As ChooseColorFlags
    lCustData As LongPtr
    lpfnHook As LongPtr
    lpTemplateName As LongPtr
End Type
Public Type CHOOSECOLOR
    lStructSize As Long
    hwndOwner As LongPtr
    hInstance As LongPtr
    rgbResult As Long
    lpCustColors As LongPtr
    Flags As ChooseColorFlags
    lCustData As LongPtr
    lpfnHook As LongPtr
    lpTemplateName As LongPtr
End Type

Public Enum ChooseColorFlags
    CC_RGBINIT = &H00000001
    CC_FULLOPEN = &H00000002
    CC_PREVENTFULLOPEN = &H00000004
    CC_SHOWHELP = &H00000008
    CC_ENABLEHOOK = &H00000010
    CC_ENABLETEMPLATE = &H00000020
    CC_ENABLETEMPLATEHANDLE = &H00000040
    CC_SOLIDCOLOR = &H00000080
    CC_ANYCOLOR = &H00000100
End Enum

Public Declare PtrSafe Function ChooseColorA Lib "comdlg32" (lpCC As CHOOSECOLORA) As Long
Public Declare PtrSafe Function ChooseColorW Lib "comdlg32" (lpCC As CHOOSECOLORW) As Long
Public DeclareWide PtrSafe Function ChooseColor Lib "comdlg32" Alias "ChooseColorW" (lpCC As CHOOSECOLOR) As Long

Public Delegate Function FRHookProc (ByVal hwnd As LongPtr, ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr

' Public Type FINDREPLACEA
'     lStructSize As Long ' size of this struct 0x20
'     hwndOwner As LongPtr ' handle to owner's window
'     hInstance As LongPtr ' instance handle of.EXE that
'     '   contains cust. dlg. template
'     Flags As FindReplaceFlags ' one or more of the FR_??
'     lpstrFindWhat As String ' ptr. to search string
'     lpstrReplaceWith As String ' ptr. to replace string
'     wFindWhatLen As Integer ' size of find buffer
'     wReplaceWithLen As Integer ' size of replace buffer
'     lCustData As LongPtr ' data passed to hook fn.
'     lpfnHook As FRHookProc ' ptr. to hook fn. or NULL
'     lpTemplateName As String ' custom template name
' End Type
' Public Type FINDREPLACEW
'     lStructSize As Long ' size of this struct 0x20
'     hwndOwner As LongPtr ' handle to owner's window
'     hInstance As LongPtr ' instance handle of.EXE that
'     '   contains cust. dlg. template
'     Flags As FindReplaceFlags ' one or more of the FR_??
'     lpstrFindWhat As LongPtr ' ptr. to search string
'     lpstrReplaceWith As LongPtr ' ptr. to replace string
'     wFindWhatLen As Integer ' size of find buffer
'     wReplaceWithLen As Integer ' size of replace buffer
'     lCustData As LongPtr ' data passed to hook fn.
'     lpfnHook As FRHookProc ' ptr. to hook fn. or NULL
'     lpTemplateName As LongPtr ' custom template name
' End Type
' Public Type FINDREPLACE
'     lStructSize As Long ' size of this struct 0x20
'     hwndOwner As LongPtr ' handle to owner's window
'     hInstance As LongPtr ' instance handle of.EXE that
'     '   contains cust. dlg. template
'     Flags As FindReplaceFlags ' one or more of the FR_??
'     lpstrFindWhat As LongPtr ' ptr. to search string
'     lpstrReplaceWith As LongPtr ' ptr. to replace string
'     wFindWhatLen As Integer ' size of find buffer
'     wReplaceWithLen As Integer ' size of replace buffer
'     lCustData As LongPtr ' data passed to hook fn.
'     lpfnHook As FRHookProc ' ptr. to hook fn. or NULL
'     lpTemplateName As LongPtr ' custom template name
' End Type
Public Type FINDREPLACEA
    lStructSize As Long ' size of this struct 0x20
    hwndOwner As LongPtr ' handle to owner's window
    hInstance As LongPtr ' instance handle of.EXE that
    '   contains cust. dlg. template
    Flags As FindReplaceFlags ' one or more of the FR_??
    lpstrFindWhat As String ' ptr. to search string
    lpstrReplaceWith As String ' ptr. to replace string
    wFindWhatLen As Integer ' size of find buffer
    wReplaceWithLen As Integer ' size of replace buffer
    lCustData As LongPtr ' data passed to hook fn.
    lpfnHook As LongPtr ' ptr. to hook fn. or NULL
    lpTemplateName As String ' custom template name
End Type
Public Type FINDREPLACEW
    lStructSize As Long ' size of this struct 0x20
    hwndOwner As LongPtr ' handle to owner's window
    hInstance As LongPtr ' instance handle of.EXE that
    '   contains cust. dlg. template
    Flags As FindReplaceFlags ' one or more of the FR_??
    lpstrFindWhat As LongPtr ' ptr. to search string
    lpstrReplaceWith As LongPtr ' ptr. to replace string
    wFindWhatLen As Integer ' size of find buffer
    wReplaceWithLen As Integer ' size of replace buffer
    lCustData As LongPtr ' data passed to hook fn.
    lpfnHook As LongPtr ' ptr. to hook fn. or NULL
    lpTemplateName As LongPtr ' custom template name
End Type
Public Type FINDREPLACE
    lStructSize As Long ' size of this struct 0x20
    hwndOwner As LongPtr ' handle to owner's window
    hInstance As LongPtr ' instance handle of.EXE that
    '   contains cust. dlg. template
    Flags As FindReplaceFlags ' one or more of the FR_??
    lpstrFindWhat As LongPtr ' ptr. to search string
    lpstrReplaceWith As LongPtr ' ptr. to replace string
    wFindWhatLen As Integer ' size of find buffer
    wReplaceWithLen As Integer ' size of replace buffer
    lCustData As LongPtr ' data passed to hook fn.
    lpfnHook As LongPtr ' ptr. to hook fn. or NULL
    lpTemplateName As LongPtr ' custom template name
End Type

Public Enum FindReplaceFlags
    FR_DOWN = &H00000001
    FR_WHOLEWORD = &H00000002
    FR_MATCHCASE = &H00000004
    FR_FINDNEXT = &H00000008
    FR_REPLACE = &H00000010
    FR_REPLACEALL = &H00000020
    FR_DIALOGTERM = &H00000040
    FR_SHOWHELP = &H00000080
    FR_ENABLEHOOK = &H00000100
    FR_ENABLETEMPLATE = &H00000200
    FR_NOUPDOWN = &H00000400
    FR_NOMATCHCASE = &H00000800
    FR_NOWHOLEWORD = &H00001000
    FR_ENABLETEMPLATEHANDLE = &H00002000
    FR_HIDEUPDOWN = &H00004000
    FR_HIDEMATCHCASE = &H00008000&
    FR_HIDEWHOLEWORD = &H00010000
    FR_RAW = &H00020000
    '---------
    'Win10 RS5+
    FR_SHOWWRAPAROUND = &H00040000
    FR_NOWRAPAROUND = &H00080000
    FR_WRAPAROUND = &H00100000
    '---------
    FR_MATCHDIAC = &H20000000
    FR_MATCHKASHIDA = &H40000000
    FR_MATCHALEFHAMZA = &H80000000
End Enum

Public Const FRM_FIRST = (WM_USER + 100)
Public Const FRM_LAST = (WM_USER + 200)
Public Const FRM_SETOPERATIONRESULT  = (FRM_FIRST + &H0000)
Public Const FRM_SETOPERATIONRESULTTEXT  = (FRM_FIRST + &H0001)

Public Declare PtrSafe Function FindTextA Lib "comdlg32" (lpFR As FINDREPLACEA) As LongPtr
Public Declare PtrSafe Function FindTextW Lib "comdlg32" (lpFR As FINDREPLACEW) As LongPtr
Public Declare PtrSafe Function FindText Lib "comdlg32" Alias "FindTextW" (lpFR As FINDREPLACE) As LongPtr

Public Declare PtrSafe Function ReplaceTextA Lib "comdlg32" (lpFR As FINDREPLACEA) As LongPtr
Public Declare PtrSafe Function ReplaceTextW Lib "comdlg32" (lpFR As FINDREPLACEW) As LongPtr
Public Declare PtrSafe Function ReplaceText Lib "comdlg32" Alias "ReplaceTextW" (lpFR As FINDREPLACE) As LongPtr

Public Delegate Function CFHookProc (ByVal hwnd As LongPtr, ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr

' Public Type CHOOSEFONTA
'     lStructSize As Long
'     hwndOwner As LongPtr ' caller's window handle
'     hDC As LongPtr ' printer DC/IC or NULL
'     lpLogFont As LongPtr ' ptr. to a LOGFONT struct
'     iPointSize As Long ' 10 * size in points of selected font
'     Flags As ChooseFontFlags ' enum. type flags
'     rgbColors As Long ' returned text color
'     lCustData As LongPtr ' data passed to hook fn.
'     lpfnHook As CFHookProc ' ptr. to hook function
'     lpTemplateName As String ' custom template name
'     hInstance As LongPtr ' instance handle of.EXE that
'     '   contains cust. dlg. template
'     lpszStyle As String ' return the style field here
'     ' must be LF_FACESIZE or bigger
'     nFontType As Integer ' same value reported to the EnumFonts
'     '   call back with the extra FONTTYPE_
'     '   bits added
'     MISSING_ALIGNMENT As Integer
'     nSizeMin As Long ' minimum pt size allowed &
'     nSizeMax As Long ' max pt size allowed if
'     '   CF_LIMITSIZE is used
' End Type
' Public Type CHOOSEFONTW
'     lStructSize As Long
'     hwndOwner As LongPtr ' caller's window handle
'     hDC As LongPtr ' printer DC/IC or NULL
'     lpLogFont As LongPtr ' ptr. to a LOGFONT struct
'     iPointSize As Long ' 10 * size in points of selected font
'     Flags As ChooseFontFlags ' enum. type flags
'     rgbColors As Long ' returned text color
'     lCustData As LongPtr ' data passed to hook fn.
'     lpfnHook As CFHookProc ' ptr. to hook function
'     lpTemplateName As LongPtr ' custom template name
'     hInstance As LongPtr ' instance handle of.EXE that
'     '   contains cust. dlg. template
'     lpszStyle As LongPtr ' return the style field here
'     ' must be LF_FACESIZE or bigger
'     nFontType As Integer ' same value reported to the EnumFonts
'     '   call back with the extra FONTTYPE_
'     '   bits added
'     MISSING_ALIGNMENT As Integer
'     nSizeMin As Long ' minimum pt size allowed &
'     nSizeMax As Long ' max pt size allowed if
'     '   CF_LIMITSIZE is used
' End Type
' Public Type CHOOSEFONT
'     lStructSize As Long
'     hwndOwner As LongPtr ' caller's window handle
'     hDC As LongPtr ' printer DC/IC or NULL
'     lpLogFont As LongPtr ' ptr. to a LOGFONT struct
'     iPointSize As Long ' 10 * size in points of selected font
'     Flags As ChooseFontFlags ' enum. type flags
'     rgbColors As Long ' returned text color
'     lCustData As LongPtr ' data passed to hook fn.
'     lpfnHook As CFHookProc ' ptr. to hook function
'     lpTemplateName As LongPtr ' custom template name
'     hInstance As LongPtr ' instance handle of.EXE that
'     '   contains cust. dlg. template
'     lpszStyle As LongPtr ' return the style field here
'     ' must be LF_FACESIZE or bigger
'     nFontType As Integer ' same value reported to the EnumFonts
'     '   call back with the extra FONTTYPE_
'     '   bits added
'     MISSING_ALIGNMENT As Integer
'     nSizeMin As Long ' minimum pt size allowed &
'     nSizeMax As Long ' max pt size allowed if
'     '   CF_LIMITSIZE is used
' End Type
Public Type CHOOSEFONTA
    lStructSize As Long
    hwndOwner As LongPtr ' caller's window handle
    hDC As LongPtr ' printer DC/IC or NULL
    lpLogFont As LongPtr ' ptr. to a LOGFONT struct
    iPointSize As Long ' 10 * size in points of selected font
    Flags As ChooseFontFlags ' enum. type flags
    rgbColors As Long ' returned text color
    lCustData As LongPtr ' data passed to hook fn.
    lpfnHook As LongPtr ' ptr. to hook function
    lpTemplateName As String ' custom template name
    hInstance As LongPtr ' instance handle of.EXE that
    '   contains cust. dlg. template
    lpszStyle As String ' return the style field here
    ' must be LF_FACESIZE or bigger
    nFontType As Integer ' same value reported to the EnumFonts
    '   call back with the extra FONTTYPE_
    '   bits added
    MISSING_ALIGNMENT As Integer
    nSizeMin As Long ' minimum pt size allowed &
    nSizeMax As Long ' max pt size allowed if
    '   CF_LIMITSIZE is used
End Type
Public Type CHOOSEFONTW
    lStructSize As Long
    hwndOwner As LongPtr ' caller's window handle
    hDC As LongPtr ' printer DC/IC or NULL
    lpLogFont As LongPtr ' ptr. to a LOGFONT struct
    iPointSize As Long ' 10 * size in points of selected font
    Flags As ChooseFontFlags ' enum. type flags
    rgbColors As Long ' returned text color
    lCustData As LongPtr ' data passed to hook fn.
    lpfnHook As LongPtr ' ptr. to hook function
    lpTemplateName As LongPtr ' custom template name
    hInstance As LongPtr ' instance handle of.EXE that
    '   contains cust. dlg. template
    lpszStyle As LongPtr ' return the style field here
    ' must be LF_FACESIZE or bigger
    nFontType As Integer ' same value reported to the EnumFonts
    '   call back with the extra FONTTYPE_
    '   bits added
    MISSING_ALIGNMENT As Integer
    nSizeMin As Long ' minimum pt size allowed &
    nSizeMax As Long ' max pt size allowed if
    '   CF_LIMITSIZE is used
End Type
Public Type CHOOSEFONT
    lStructSize As Long
    hwndOwner As LongPtr ' caller's window handle
    hDC As LongPtr ' printer DC/IC or NULL
    lpLogFont As LongPtr ' ptr. to a LOGFONT struct
    iPointSize As Long ' 10 * size in points of selected font
    Flags As ChooseFontFlags ' enum. type flags
    rgbColors As Long ' returned text color
    lCustData As LongPtr ' data passed to hook fn.
    lpfnHook As LongPtr ' ptr. to hook function
    lpTemplateName As LongPtr ' custom template name
    hInstance As LongPtr ' instance handle of.EXE that
    '   contains cust. dlg. template
    lpszStyle As LongPtr ' return the style field here
    ' must be LF_FACESIZE or bigger
    nFontType As Integer ' same value reported to the EnumFonts
    '   call back with the extra FONTTYPE_
    '   bits added
    MISSING_ALIGNMENT As Integer
    nSizeMin As Long ' minimum pt size allowed &
    nSizeMax As Long ' max pt size allowed if
    '   CF_LIMITSIZE is used
End Type

Public Enum ChooseFontFlags
    CF_SCREENFONTS = &H00000001
    CF_PRINTERFONTS = &H00000002
    CF_BOTH = (CF_SCREENFONTS Or CF_PRINTERFONTS)
    CF_SHOWHELP = &H00000004
    CF_ENABLEHOOK = &H00000008
    CF_ENABLETEMPLATE = &H00000010
    CF_ENABLETEMPLATEHANDLE = &H00000020
    CF_INITTOLOGFONTSTRUCT = &H00000040
    CF_USESTYLE = &H00000080
    CF_EFFECTS = &H00000100
    CF_APPLY = &H00000200
    CF_ANSIONLY = &H00000400

    CF_SCRIPTSONLY = CF_ANSIONLY

    CF_NOVECTORFONTS = &H00000800
    CF_NOOEMFONTS = CF_NOVECTORFONTS
    CF_NOSIMULATIONS = &H00001000
    CF_LIMITSIZE = &H00002000
    CF_FIXEDPITCHONLY = &H00004000
    CF_WYSIWYG = &H00008000&  ' must also have CF_SCREENFONTS & CF_PRINTERFONTS
    CF_FORCEFONTEXIST = &H00010000
    CF_SCALABLEONLY = &H00020000
    CF_TTONLY = &H00040000
    CF_NOFACESEL = &H00080000
    CF_NOSTYLESEL = &H00100000
    CF_NOSIZESEL = &H00200000

    CF_SELECTSCRIPT = &H00400000
    CF_NOSCRIPTSEL = &H00800000
    CF_NOVERTFONTS = &H01000000

    CF_INACTIVEFONTS = &H02000000
End Enum

Public Declare PtrSafe Function ChooseFontA Lib "comdlg32" (lpCF As CHOOSEFONTA) As Long
Public Declare PtrSafe Function ChooseFontW Lib "comdlg32" (lpCF As CHOOSEFONTW) As Long
Public DeclareWide PtrSafe Function ChooseFont Lib "comdlg32" Alias "ChooseFontW" (lpCF As CHOOSEFONT) As Long

Public Const SIMULATED_FONTTYPE  = &H8000
Public Const PRINTER_FONTTYPE  = &H4000
Public Const SCREEN_FONTTYPE  = &H2000
Public Const BOLD_FONTTYPE  = &H0100
Public Const ITALIC_FONTTYPE  = &H0200
Public Const REGULAR_FONTTYPE  = &H0400
Public Const RASTER_FONTTYPE  = &H001
Public Const DEVICE_FONTTYPE  = &H002
Public Const TRUETYPE_FONTTYPE  = &H004
Public Const PS_OPENTYPE_FONTTYPE  = &H10000
Public Const TT_OPENTYPE_FONTTYPE  = &H20000
Public Const TYPE1_FONTTYPE  = &H40000
Public Const SYMBOL_FONTTYPE  = &H80000
Public Const WM_CHOOSEFONT_GETLOGFONT = (WM_USER + 1)
Public Const WM_CHOOSEFONT_SETLOGFONT = (WM_USER + 101)
Public Const WM_CHOOSEFONT_SETFLAGS = (WM_USER + 102)

[Description("📝**NOTE:** MUST BE CONVERTED TO ANSI. Use UtfToANSI().")] Public Const LBSELCHSTRINGA = "commdlg_LBSelChangedNotify"
[Description("📝**NOTE:** MUST BE CONVERTED TO ANSI. Use UtfToANSI().")] Public Const SHAREVISTRINGA = "commdlg_ShareViolation"
[Description("📝**NOTE:** MUST BE CONVERTED TO ANSI. Use UtfToANSI().")] Public Const FILEOKSTRINGA  = "commdlg_FileNameOK"
[Description("📝**NOTE:** MUST BE CONVERTED TO ANSI. Use UtfToANSI().")] Public Const COLOROKSTRINGA = "commdlg_ColorOK"
[Description("📝**NOTE:** MUST BE CONVERTED TO ANSI. Use UtfToANSI().")] Public Const SETRGBSTRINGA  = "commdlg_SetRGBColor"
[Description("📝**NOTE:** MUST BE CONVERTED TO ANSI. Use UtfToANSI().")] Public Const HELPMSGSTRINGA = "commdlg_help"
[Description("📝**NOTE:** MUST BE CONVERTED TO ANSI. Use UtfToANSI().")] Public Const FINDMSGSTRINGA = "commdlg_FindReplace"
Public Const LBSELCHSTRINGW = "commdlg_LBSelChangedNotify"
Public Const SHAREVISTRINGW = "commdlg_ShareViolation"
Public Const FILEOKSTRINGW  = "commdlg_FileNameOK"
Public Const COLOROKSTRINGW = "commdlg_ColorOK"
Public Const SETRGBSTRINGW  = "commdlg_SetRGBColor"
Public Const HELPMSGSTRINGW = "commdlg_help"
Public Const FINDMSGSTRINGW = "commdlg_FindReplace"

Public Const LBSELCHSTRING = LBSELCHSTRINGW
Public Const SHAREVISTRING = SHAREVISTRINGW
Public Const FILEOKSTRING  = FILEOKSTRINGW
Public Const COLOROKSTRING = COLOROKSTRINGW
Public Const SETRGBSTRING  = SETRGBSTRINGW
Public Const HELPMSGSTRING = HELPMSGSTRINGW
Public Const FINDMSGSTRING = FINDMSGSTRINGW

Public Const CD_LBSELNOITEMS  = -1
Public Const CD_LBSELCHANGE  = 0
Public Const CD_LBSELSUB  = 1
Public Const CD_LBSELADD  = 2

Public Delegate Function PrintHookProc (ByVal hwnd As LongPtr, ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public Delegate Function SetupHookProc (ByVal hwnd As LongPtr, ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr

' #If Win64 = 0 Then
' [PackingAlignment(1)] 'This technically applies to all UDTs but hasn't mattered so far
' #End If
' Public Type PRINTDLGA
'     lStructSize As Long
'     hwndOwner As LongPtr
'     hDevMode As LongPtr
'     hDevNames As LongPtr
'     hDC As LongPtr
'     Flags As PrintDialogFlags
'     nFromPage As Integer
'     nToPage As Integer
'     nMinPage As Integer
'     nMaxPage As Integer
'     nCopies As Integer
'     hInstance As LongPtr
'     lCustData As LongPtr
'     lpfnPrintHook As PrintHookProc
'     lpfnSetupHook As SetupHookProc
'     lpPrintTemplateName As LongPtr
'     lpSetupTemplateName As LongPtr
'     hPrintTemplate As LongPtr
'     hSetupTemplate As LongPtr
' End Type
' #If Win64 = 0 Then
' [PackingAlignment(1)] 'This technically applies to all UDTs in comdlg.h but hasn't mattered so far
' #End If
' Public Type PRINTDLGW
'     lStructSize As Long
'     hwndOwner As LongPtr
'     hDevMode As LongPtr
'     hDevNames As LongPtr
'     hDC As LongPtr
'     Flags As PrintDialogFlags
'     nFromPage As Integer
'     nToPage As Integer
'     nMinPage As Integer
'     nMaxPage As Integer
'     nCopies As Integer
'     hInstance As LongPtr
'     lCustData As LongPtr
'     lpfnPrintHook As PrintHookProc
'     lpfnSetupHook As SetupHookProc
'     lpPrintTemplateName As LongPtr
'     lpSetupTemplateName As LongPtr
'     hPrintTemplate As LongPtr
'     hSetupTemplate As LongPtr
' End Type
' #If Win64 = 0 Then
' [PackingAlignment(1)] 'This technically applies to all UDTs but hasn't mattered so far
' #End If
' Public Type PRINTDLG
'     lStructSize As Long
'     hwndOwner As LongPtr
'     hDevMode As LongPtr
'     hDevNames As LongPtr
'     hDC As LongPtr
'     Flags As PrintDialogFlags
'     nFromPage As Integer
'     nToPage As Integer
'     nMinPage As Integer
'     nMaxPage As Integer
'     nCopies As Integer
'     hInstance As LongPtr
'     lCustData As LongPtr
'     lpfnPrintHook As PrintHookProc
'     lpfnSetupHook As SetupHookProc
'     lpPrintTemplateName As LongPtr
'     lpSetupTemplateName As LongPtr
'     hPrintTemplate As LongPtr
'     hSetupTemplate As LongPtr
' End Type
#If Win64 = 0 Then
[PackingAlignment(1)] 'This technically applies to all UDTs but hasn't mattered so far
#End If
Public Type PRINTDLGA
    lStructSize As Long
    hwndOwner As LongPtr
    hDevMode As LongPtr
    hDevNames As LongPtr
    hDC As LongPtr
    Flags As PrintDialogFlags
    nFromPage As Integer
    nToPage As Integer
    nMinPage As Integer
    nMaxPage As Integer
    nCopies As Integer
    hInstance As LongPtr
    lCustData As LongPtr
    lpfnPrintHook As LongPtr
    lpfnSetupHook As LongPtr
    lpPrintTemplateName As LongPtr
    lpSetupTemplateName As LongPtr
    hPrintTemplate As LongPtr
    hSetupTemplate As LongPtr
End Type
#If Win64 = 0 Then
[PackingAlignment(1)] 'This technically applies to all UDTs in comdlg.h but hasn't mattered so far
#End If
Public Type PRINTDLGW
    lStructSize As Long
    hwndOwner As LongPtr
    hDevMode As LongPtr
    hDevNames As LongPtr
    hDC As LongPtr
    Flags As PrintDialogFlags
    nFromPage As Integer
    nToPage As Integer
    nMinPage As Integer
    nMaxPage As Integer
    nCopies As Integer
    hInstance As LongPtr
    lCustData As LongPtr
    lpfnPrintHook As LongPtr
    lpfnSetupHook As LongPtr
    lpPrintTemplateName As LongPtr
    lpSetupTemplateName As LongPtr
    hPrintTemplate As LongPtr
    hSetupTemplate As LongPtr
End Type
#If Win64 = 0 Then
[PackingAlignment(1)] 'This technically applies to all UDTs but hasn't mattered so far
#End If
Public Type PRINTDLG
    lStructSize As Long
    hwndOwner As LongPtr
    hDevMode As LongPtr
    hDevNames As LongPtr
    hDC As LongPtr
    Flags As PrintDialogFlags
    nFromPage As Integer
    nToPage As Integer
    nMinPage As Integer
    nMaxPage As Integer
    nCopies As Integer
    hInstance As LongPtr
    lCustData As LongPtr
    lpfnPrintHook As LongPtr
    lpfnSetupHook As LongPtr
    lpPrintTemplateName As LongPtr
    lpSetupTemplateName As LongPtr
    hPrintTemplate As LongPtr
    hSetupTemplate As LongPtr
End Type

Public Enum PrintDialogFlags
    PD_ALLPAGES = &H00000000
    PD_SELECTION = &H00000001
    PD_PAGENUMS = &H00000002
    PD_NOSELECTION = &H00000004
    PD_NOPAGENUMS = &H00000008
    PD_COLLATE = &H00000010
    PD_PRINTTOFILE = &H00000020
    PD_PRINTSETUP = &H00000040
    PD_NOWARNING = &H00000080
    PD_RETURNDC = &H00000100
    PD_RETURNIC = &H00000200
    PD_RETURNDEFAULT = &H00000400
    PD_SHOWHELP = &H00000800
    PD_ENABLEPRINTHOOK = &H00001000
    PD_ENABLESETUPHOOK = &H00002000
    PD_ENABLEPRINTTEMPLATE = &H00004000
    PD_ENABLESETUPTEMPLATE = &H00008000&
    PD_ENABLEPRINTTEMPLATEHANDLE = &H00010000
    PD_ENABLESETUPTEMPLATEHANDLE = &H00020000
    PD_USEDEVMODECOPIES = &H00040000
    PD_USEDEVMODECOPIESANDCOLLATE = &H00040000
    PD_DISABLEPRINTTOFILE = &H00080000
    PD_HIDEPRINTTOFILE = &H00100000
    PD_NONETWORKBUTTON = &H00200000

    PD_CURRENTPAGE = &H00400000
    PD_NOCURRENTPAGE = &H00800000
    PD_EXCLUSIONFLAGS = &H01000000
    PD_USELARGETEMPLATE = &H10000000
End Enum

Public Declare PtrSafe Function PrintDlgA Lib "comdlg32" (lpPD As PRINTDLGA) As Long
Public Declare PtrSafe Function PrintDlgW Lib "comdlg32" (lpPD As PRINTDLGW) As Long
Public DeclareWide PtrSafe Function PrintDlg Lib "comdlg32" Alias "PrintDlgW" (lpPD As PRINTDLG) As Long

Public Type PRINTPAGERANGE
    nFromPage As Long
    nToPage As Long
End Type

Public Enum PrintDialogExclusionFlags
    PD_EXCL_COPIESANDCOLLATE = &H8100&
End Enum

Public Enum PrintDialogResultActions
    PD_RESULT_CANCEL = 0
    PD_RESULT_PRINT = 1
    PD_RESULT_APPLY = 2
End Enum

Public Type PRINTDLGEXA
    lStructSize As Long ' size of structure in bytes
    hwndOwner As LongPtr ' caller's window handle
    hDevMode As LongPtr ' handle to DevMode
    hDevNames As LongPtr ' handle to DevNames
    hDC As LongPtr ' printer DC/IC or NULL
    Flags As PrintDialogFlags ' PD_ flags
    Flags2 As Long ' reserved
    ExclusionFlags As PrintDialogExclusionFlags ' items to exclude from driver pages
    nPageRanges As Long ' number of page ranges
    nMaxPageRanges As Long ' max number of page ranges
    lpPageRanges As LongPtr ' array of page ranges
    nMinPage As Long ' min page number
    nMaxPage As Long ' max page number
    nCopies As Long ' number of copies
    hInstance As LongPtr ' instance handle
    lpPrintTemplateName As String ' template name for app specific area
    lpCallback As LongPtr ' app callback interface
    nPropertyPages As Long ' number of app property pages in lphPropertyPages
    lphPropertyPages As LongPtr ' array of app property page handles
    nStartPage As Long ' start page id
    dwResultAction As PrintDialogResultActions ' result action if S_OK is returned
End Type
Public Type PRINTDLGEXW
    lStructSize As Long ' size of structure in bytes
    hwndOwner As LongPtr ' caller's window handle
    hDevMode As LongPtr ' handle to DevMode
    hDevNames As LongPtr ' handle to DevNames
    hDC As LongPtr ' printer DC/IC or NULL
    Flags As PrintDialogFlags ' PD_ flags
    Flags2 As Long ' reserved
    ExclusionFlags As PrintDialogExclusionFlags ' items to exclude from driver pages
    nPageRanges As Long ' number of page ranges
    nMaxPageRanges As Long ' max number of page ranges
    lpPageRanges As LongPtr ' array of page ranges
    nMinPage As Long ' min page number
    nMaxPage As Long ' max page number
    nCopies As Long ' number of copies
    hInstance As LongPtr ' instance handle
    lpPrintTemplateName As LongPtr ' template name for app specific area
    lpCallback As LongPtr ' app callback interface
    nPropertyPages As Long ' number of app property pages in lphPropertyPages
    lphPropertyPages As LongPtr ' array of app property page handles
    nStartPage As Long ' start page id
    dwResultAction As PrintDialogResultActions ' result action if S_OK is returned
End Type
'Alias PRINTDLGEX As PRINTDLGEXW
Public Type PRINTDLGEX
    lStructSize As Long ' size of structure in bytes
    hwndOwner As LongPtr ' caller's window handle
    hDevMode As LongPtr ' handle to DevMode
    hDevNames As LongPtr ' handle to DevNames
    hDC As LongPtr ' printer DC/IC or NULL
    Flags As PrintDialogFlags ' PD_ flags
    Flags2 As Long ' reserved
    ExclusionFlags As PrintDialogExclusionFlags ' items to exclude from driver pages
    nPageRanges As Long ' number of page ranges
    nMaxPageRanges As Long ' max number of page ranges
    lpPageRanges As LongPtr ' array of page ranges
    nMinPage As Long ' min page number
    nMaxPage As Long ' max page number
    nCopies As Long ' number of copies
    hInstance As LongPtr ' instance handle
    lpPrintTemplateName As LongPtr ' template name for app specific area
    lpCallback As LongPtr ' app callback interface
    nPropertyPages As Long ' number of app property pages in lphPropertyPages
    lphPropertyPages As LongPtr ' array of app property page handles
    nStartPage As Long ' start page id
    dwResultAction As PrintDialogResultActions ' result action if S_OK is returned
End Type

Public Const START_PAGE_GENERAL = &Hffffffff

Public Declare PtrSafe Function PrintDlgExA Lib "comdlg32" (pPD As PRINTDLGEXA) As Long
Public Declare PtrSafe Function PrintDlgExW Lib "comdlg32" (pPD As PRINTDLGEXW) As Long
Public DeclareWide PtrSafe Function PrintDlgEx Lib "comdlg32" Alias "PrintDlgExW" (pPD As PRINTDLGEX) As Long

Public Type DEVNAMES
    wDriverOffset As Integer
    wDeviceOffset As Integer
    wOutputOffset As Integer
    wDefault As Integer
End Type

Public Const DN_DEFAULTPRN  = &H0001

Public Declare PtrSafe Function CommDlgExtendedError Lib "comdlg32" () As ComDlgExtendedErrors

Public Const WM_PSD_PAGESETUPDLG  = (WM_USER)
Public Const WM_PSD_FULLPAGERECT  = (WM_USER + 1)
Public Const WM_PSD_MINMARGINRECT  = (WM_USER + 2)
Public Const WM_PSD_MARGINRECT  = (WM_USER + 3)
Public Const WM_PSD_GREEKTEXTRECT  = (WM_USER + 4)
Public Const WM_PSD_ENVSTAMPRECT  = (WM_USER + 5)
Public Const WM_PSD_YAFULLPAGERECT  = (WM_USER + 6)

Public Delegate Function PageSetupHook (ByVal hwnd As LongPtr, ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public Delegate Function PagePaintHook (ByVal hwnd As LongPtr, ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr

' Public Type PAGESETUPDLGA
'     lStructSize As Long
'     hwndOwner As LongPtr
'     hDevMode As LongPtr
'     hDevNames As LongPtr
'     Flags As PageSetupDialogFlags
'     ptPaperSize As POINT
'     rtMinMargin As RECT
'     rtMargin As RECT
'     hInstance As LongPtr
'     lCustData As LongPtr
'     lpfnPageSetupHook As PageSetupHook
'     lpfnPagePaintHook As PagePaintHook
'     lpPageSetupTemplateName As String
'     hPageSetupTemplate As LongPtr
' End Type
' Public Type PAGESETUPDLGW
'     lStructSize As Long
'     hwndOwner As LongPtr
'     hDevMode As LongPtr
'     hDevNames As LongPtr
'     Flags As PageSetupDialogFlags
'     ptPaperSize As POINT
'     rtMinMargin As RECT
'     rtMargin As RECT
'     hInstance As LongPtr
'     lCustData As LongPtr
'     lpfnPageSetupHook As PageSetupHook
'     lpfnPagePaintHook As PagePaintHook
'     lpPageSetupTemplateName As LongPtr
'     hPageSetupTemplate As LongPtr
' End Type
' 'Alias PAGESETUPDLG As PAGESETUPDLGW
' Public Type PAGESETUPDLG
'     lStructSize As Long
'     hwndOwner As LongPtr
'     hDevMode As LongPtr
'     hDevNames As LongPtr
'     Flags As PageSetupDialogFlags
'     ptPaperSize As POINT
'     rtMinMargin As RECT
'     rtMargin As RECT
'     hInstance As LongPtr
'     lCustData As LongPtr
'     lpfnPageSetupHook As PageSetupHook
'     lpfnPagePaintHook As PagePaintHook
'     lpPageSetupTemplateName As LongPtr
'     hPageSetupTemplate As LongPtr
' End Type
Public Type PAGESETUPDLGA
    lStructSize As Long
    hwndOwner As LongPtr
    hDevMode As LongPtr
    hDevNames As LongPtr
    Flags As PageSetupDialogFlags
    ptPaperSize As POINT
    rtMinMargin As RECT
    rtMargin As RECT
    hInstance As LongPtr
    lCustData As LongPtr
    lpfnPageSetupHook As LongPtr
    lpfnPagePaintHook As LongPtr
    lpPageSetupTemplateName As String
    hPageSetupTemplate As LongPtr
End Type
Public Type PAGESETUPDLGW
    lStructSize As Long
    hwndOwner As LongPtr
    hDevMode As LongPtr
    hDevNames As LongPtr
    Flags As PageSetupDialogFlags
    ptPaperSize As POINT
    rtMinMargin As RECT
    rtMargin As RECT
    hInstance As LongPtr
    lCustData As LongPtr
    lpfnPageSetupHook As LongPtr
    lpfnPagePaintHook As LongPtr
    lpPageSetupTemplateName As LongPtr
    hPageSetupTemplate As LongPtr
End Type
'Alias PAGESETUPDLG As PAGESETUPDLGW
Public Type PAGESETUPDLG
    lStructSize As Long
    hwndOwner As LongPtr
    hDevMode As LongPtr
    hDevNames As LongPtr
    Flags As PageSetupDialogFlags
    ptPaperSize As POINT
    rtMinMargin As RECT
    rtMargin As RECT
    hInstance As LongPtr
    lCustData As LongPtr
    lpfnPageSetupHook As LongPtr
    lpfnPagePaintHook As LongPtr
    lpPageSetupTemplateName As LongPtr
    hPageSetupTemplate As LongPtr
End Type



Public Enum PageSetupDialogFlags
    PSD_DEFAULTMINMARGINS = &H00000000  ' default (printer's)
    PSD_INWININIINTLMEASURE = &H00000000  ' 1st of 4 possible
    PSD_MINMARGINS = &H00000001  ' use caller's
    PSD_MARGINS = &H00000002  ' use caller's
    PSD_INTHOUSANDTHSOFINCHES = &H00000004  ' 2nd of 4 possible
    PSD_INHUNDREDTHSOFMILLIMETERS = &H00000008  ' 3rd of 4 possible
    PSD_DISABLEMARGINS = &H00000010
    PSD_DISABLEPRINTER = &H00000020
    PSD_NOWARNING = &H00000080  ' must be same as PD_*
    PSD_DISABLEORIENTATION = &H00000100
    PSD_RETURNDEFAULT = &H00000400  ' must be same as PD_*
    PSD_DISABLEPAPER = &H00000200
    PSD_SHOWHELP = &H00000800  ' must be same as PD_*
    PSD_ENABLEPAGESETUPHOOK = &H00002000  ' must be same as PD_*
    PSD_ENABLEPAGESETUPTEMPLATE = &H00008000&  ' must be same as PD_*
    PSD_ENABLEPAGESETUPTEMPLATEHANDLE = &H00020000  ' must be same as PD_*
    PSD_ENABLEPAGEPAINTHOOK = &H00040000
    PSD_DISABLEPAGEPAINTING = &H00080000
    PSD_NONETWORKBUTTON = &H00200000  ' must be same as PD_*
End Enum

Public Declare PtrSafe Function PageSetupDlgA Lib "comdlg32" (pPSD As PAGESETUPDLGA) As Long
Public Declare PtrSafe Function PageSetupDlgW Lib "comdlg32" (pPSD As PAGESETUPDLGW) As Long
Public DeclareWide PtrSafe Function PageSetupDlg Lib "comdlg32" Alias "PageSetupDlgW" (pPSD As PAGESETUPDLG) As Long

#End Region

#Region "user32"

'winuser.h 100% coverage 

Public Declare PtrSafe Function wsprintfA CDecl Lib "user32" (ByVal buf As String, ByVal format As String, ByVal ParamArray args As Any()) As Long
Public DeclareWide PtrSafe Function wsprintfW CDecl Lib "user32" (ByVal buf As LongPtr, ByVal format As LongPtr, ByVal ParamArray args As Any()) As Long
Public DeclareWide PtrSafe Function wsprintf CDecl Lib "user32" Alias "wsprintfW" (ByVal buf As String, ByVal format As String, ByVal ParamArray args As Any()) As Long
Public Declare PtrSafe Function wvsprintfA CDecl Lib "user32" (ByVal buf As String, ByVal format As String, ByVal arglist As LongPtr) As Long
Public DeclareWide PtrSafe Function wvsprintfW CDecl Lib "user32" (ByVal buf As LongPtr, ByVal format As LongPtr, ByVal arglist As LongPtr) As Long
Public DeclareWide PtrSafe Function wvsprintf CDecl Lib "user32" Alias "wvsprintfW" (ByVal buf As String, ByVal format As String, ByVal arglist As LongPtr) As Long

Public Enum DT_Flags
    DT_BOTTOM = &H8&
    DT_CENTER = &H1&
    DT_LEFT = &H0&
    DT_CALCRECT = &H400&
    DT_WORDBREAK = &H10&
    DT_VCENTER = &H4&
    DT_TOP = &H0&
    DT_TABSTOP = &H80&
    DT_SINGLELINE = &H20&
    DT_RIGHT = &H2&
    DT_NOCLIP = &H100&
    DT_INTERNAL = &H1000&
    DT_EXTERNALLEADING = &H200&
    DT_EXPANDTABS = &H40&
    DT_NOPREFIX = &H800&
    DT_EDITCONTROL = &H2000&
    DT_PATH_ELLIPSIS = &H4000&
    DT_END_ELLIPSIS = &H8000&
    DT_MODIFYSTRING = &H10000
    DT_RTLREADING = &H20000
    DT_WORD_ELLIPSIS = &H40000
    DT_HIDEPREFIX = &H00100000
    DT_PREFIXONLY = &H00200000
End Enum

Public Type WINDOWPOS
    hWnd As LongPtr
    hWndInsertAfter As LongPtr
    X As Long
    Y As Long
    cx As Long
    cy As Long
    dwFlags As SWP_Flags 'SWP_*
End Type

Public Enum LoadResourceFlags
  LR_DEFAULTCOLOR = &H0
  LR_MONOCHROME = &H1
  LR_COLOR = &H2
  LR_COPYRETURNORG = &H4
  LR_COPYDELETEORG = &H8
  LR_LOADFROMFILE = &H10
  LR_LOADTRANSPARENT = &H20
  LR_DEFAULTSIZE = &H40
  LR_VGACOLOR = &H80
  LR_LOADMAP3DCOLORS = &H1000
  LR_CREATEDIBSECTION = &H2000
  LR_COPYFROMRESOURCE = &H4000
  LR_SHARED = &H8000&
End Enum


Public Enum SPI
    SPI_GETBEEP = &H1
    SPI_SETBEEP = &H2
    SPI_GETMOUSE = &H3
    SPI_SETMOUSE = &H4
    SPI_GETBORDER = &H5
    SPI_SETBORDER = &H6
    SPI_GETKEYBOARDSPEED = &HA
    SPI_SETKEYBOARDSPEED = &HB
    SPI_LANGDRIVER = &HC
    SPI_ICONHORIZONTALSPACING = &HD
    SPI_GETSCREENSAVETIMEOUT = &HE
    SPI_SETSCREENSAVETIMEOUT = &HF
    SPI_GETSCREENSAVEACTIVE = &H10
    SPI_SETSCREENSAVEACTIVE = &H11
    SPI_GETGRIDGRANULARITY = &H12
    SPI_SETGRIDGRANULARITY = &H13
    SPI_SETDESKWALLPAPER = &H14
    SPI_SETDESKPATTERN = &H15
    SPI_GETKEYBOARDDELAY = &H16
    SPI_SETKEYBOARDDELAY = &H17
    SPI_ICONVERTICALSPACING = &H18
    SPI_GETICONTITLEWRAP = &H19
    SPI_SETICONTITLEWRAP = &H1A
    SPI_GETMENUDROPALIGNMENT = &H1B
    SPI_SETMENUDROPALIGNMENT = &H1C
    SPI_SETDOUBLECLKWIDTH = &H1D
    SPI_SETDOUBLECLKHEIGHT = &H1E
    SPI_GETICONTITLELOGFONT = &H1F
    SPI_SETDOUBLECLICKTIME = &H20
    SPI_SETMOUSEBUTTONSWAP = &H21
    SPI_SETICONTITLELOGFONT = &H22
    SPI_GETFASTTASKSWITCH = &H23
    SPI_SETFASTTASKSWITCH = &H24
    SPI_SETDRAGFULLWINDOWS = &H25
    SPI_GETDRAGFULLWINDOWS = &H26
    SPI_GETNONCLIENTMETRICS = &H29
    SPI_SETNONCLIENTMETRICS = &H2A
    SPI_GETMINIMIZEDMETRICS = &H2B
    SPI_SETMINIMIZEDMETRICS = &H2C
    SPI_GETICONMETRICS = &H2D
    SPI_SETICONMETRICS = &H2E
    SPI_SETWORKAREA = &H2F
    SPI_GETWORKAREA = &H30
    SPI_SETPENWINDOWS = &H31

    SPI_GETHIGHCONTRAST = &H42
    SPI_SETHIGHCONTRAST = &H43
    SPI_GETKEYBOARDPREF = &H44
    SPI_SETKEYBOARDPREF = &H45
    SPI_GETSCREENREADER = &H46
    SPI_SETSCREENREADER = &H47
    SPI_GETANIMATION = &H48
    SPI_SETANIMATION = &H49
    SPI_GETFONTSMOOTHING = &H4A
    SPI_SETFONTSMOOTHING = &H4B
    SPI_SETDRAGWIDTH = &H4C
    SPI_SETDRAGHEIGHT = &H4D
    SPI_SETHANDHELD = &H4E
    SPI_GETLOWPOWERTIMEOUT = &H4F
    SPI_GETPOWEROFFTIMEOUT = &H50
    SPI_SETLOWPOWERTIMEOUT = &H51
    SPI_SETPOWEROFFTIMEOUT = &H52
    SPI_GETLOWPOWERACTIVE = &H53
    SPI_GETPOWEROFFACTIVE = &H54
    SPI_SETLOWPOWERACTIVE = &H55
    SPI_SETPOWEROFFACTIVE = &H56
    SPI_SETCURSORS = &H57
    SPI_SETICONS = &H58
    SPI_GETDEFAULTINPUTLANG = &H59
    SPI_SETDEFAULTINPUTLANG = &H5A
    SPI_SETLANGTOGGLE = &H5B
    SPI_GETWINDOWSEXTENSION = &H5C
    SPI_SETMOUSETRAILS = &H5D
    SPI_GETMOUSETRAILS = &H5E
    SPI_SETSCREENSAVERRUNNING = &H61
    SPI_SCREENSAVERRUNNING = SPI_SETSCREENSAVERRUNNING
    SPI_GETFILTERKEYS = &H32
    SPI_SETFILTERKEYS = &H33
    SPI_GETTOGGLEKEYS = &H34
    SPI_SETTOGGLEKEYS = &H35
    SPI_GETMOUSEKEYS = &H36
    SPI_SETMOUSEKEYS = &H37
    SPI_GETSHOWSOUNDS = &H38
    SPI_SETSHOWSOUNDS = &H39
    SPI_GETSTICKYKEYS = &H3A
    SPI_SETSTICKYKEYS = &H3B
    SPI_GETACCESSTIMEOUT = &H3C
    SPI_SETACCESSTIMEOUT = &H3D
    SPI_GETSERIALKEYS = &H3E
    SPI_SETSERIALKEYS = &H3F
    SPI_GETSOUNDSENTRY = &H40
    SPI_SETSOUNDSENTRY = &H41
    SPI_GETSNAPTODEFBUTTON = &H5F
    SPI_SETSNAPTODEFBUTTON = &H60
    SPI_GETMOUSEHOVERWIDTH = &H62
    SPI_SETMOUSEHOVERWIDTH = &H63
    SPI_GETMOUSEHOVERHEIGHT = &H64
    SPI_SETMOUSEHOVERHEIGHT = &H65
    SPI_GETMOUSEHOVERTIME = &H66
    SPI_SETMOUSEHOVERTIME = &H67
    SPI_GETWHEELSCROLLLINES = &H68
    SPI_SETWHEELSCROLLLINES = &H69
    SPI_GETMENUSHOWDELAY = &H6A
    SPI_SETMENUSHOWDELAY = &H6B

    SPI_GETWHEELSCROLLCHARS = &H6C
    SPI_SETWHEELSCROLLCHARS = &H6D

    SPI_GETSHOWIMEUI = &H6E
    SPI_SETSHOWIMEUI = &H6F

    SPI_GETMOUSESPEED = &H70
    SPI_SETMOUSESPEED = &H71
    SPI_GETSCREENSAVERRUNNING = &H72
    SPI_GETDESKWALLPAPER = &H73

    SPI_GETAUDIODESCRIPTION = &H74
    SPI_SETAUDIODESCRIPTION = &H75

    SPI_GETSCREENSAVESECURE = &H76
    SPI_SETSCREENSAVESECURE = &H77

    SPI_GETHUNGAPPTIMEOUT = &H78
    SPI_SETHUNGAPPTIMEOUT = &H79
    SPI_GETWAITTOKILLTIMEOUT = &H7A
    SPI_SETWAITTOKILLTIMEOUT = &H7B
    SPI_GETWAITTOKILLSERVICETIMEOUT = &H7C
    SPI_SETWAITTOKILLSERVICETIMEOUT = &H7D
    SPI_GETMOUSEDOCKTHRESHOLD = &H7E
    SPI_SETMOUSEDOCKTHRESHOLD = &H7F
    SPI_GETPENDOCKTHRESHOLD = &H80
    SPI_SETPENDOCKTHRESHOLD = &H81
    SPI_GETWINARRANGING = &H82
    SPI_SETWINARRANGING = &H83
    SPI_GETMOUSEDRAGOUTTHRESHOLD = &H84
    SPI_SETMOUSEDRAGOUTTHRESHOLD = &H85
    SPI_GETPENDRAGOUTTHRESHOLD = &H86
    SPI_SETPENDRAGOUTTHRESHOLD = &H87
    SPI_GETMOUSESIDEMOVETHRESHOLD = &H88
    SPI_SETMOUSESIDEMOVETHRESHOLD = &H89
    SPI_GETPENSIDEMOVETHRESHOLD = &H8A
    SPI_SETPENSIDEMOVETHRESHOLD = &H8B
    SPI_GETDRAGFROMMAXIMIZE = &H8C
    SPI_SETDRAGFROMMAXIMIZE = &H8D
    SPI_GETSNAPSIZING = &H8E
    SPI_SETSNAPSIZING = &H8F
    SPI_GETDOCKMOVING = &H90
    SPI_SETDOCKMOVING = &H91
    SPI_GETTOUCHPREDICTIONPARAMETERS = &H9C
    SPI_SETTOUCHPREDICTIONPARAMETERS = &H9D
    SPI_GETLOGICALDPIOVERRIDE = &H9E
    SPI_SETLOGICALDPIOVERRIDE = &H9F


    SPI_GETMENURECT = &HA2
    SPI_SETMENURECT = &HA3
    SPI_GETACTIVEWINDOWTRACKING = &H1000
    SPI_SETACTIVEWINDOWTRACKING = &H1001
    SPI_GETMENUANIMATION = &H1002
    SPI_SETMENUANIMATION = &H1003
    SPI_GETCOMBOBOXANIMATION = &H1004
    SPI_SETCOMBOBOXANIMATION = &H1005
    SPI_GETLISTBOXSMOOTHSCROLLING = &H1006
    SPI_SETLISTBOXSMOOTHSCROLLING = &H1007
    SPI_GETGRADIENTCAPTIONS = &H1008
    SPI_SETGRADIENTCAPTIONS = &H1009
    SPI_GETKEYBOARDCUES = &H100A
    SPI_SETKEYBOARDCUES = &H100B
    SPI_GETMENUUNDERLINES = SPI_GETKEYBOARDCUES
    SPI_SETMENUUNDERLINES = SPI_SETKEYBOARDCUES
    SPI_GETACTIVEWNDTRKZORDER = &H100C
    SPI_SETACTIVEWNDTRKZORDER = &H100D
    SPI_GETHOTTRACKING = &H100E
    SPI_SETHOTTRACKING = &H100F
    SPI_GETMENUFADE = &H1012
    SPI_SETMENUFADE = &H1013
    SPI_GETSELECTIONFADE = &H1014
    SPI_SETSELECTIONFADE = &H1015
    SPI_GETTOOLTIPANIMATION = &H1016
    SPI_SETTOOLTIPANIMATION = &H1017
    SPI_GETTOOLTIPFADE = &H1018
    SPI_SETTOOLTIPFADE = &H1019
    SPI_GETCURSORSHADOW = &H101A
    SPI_SETCURSORSHADOW = &H101B
    SPI_GETMOUSESONAR = &H101C
    SPI_SETMOUSESONAR = &H101D
    SPI_GETMOUSECLICKLOCK = &H101E
    SPI_SETMOUSECLICKLOCK = &H101F
    SPI_GETMOUSEVANISH = &H1020
    SPI_SETMOUSEVANISH = &H1021
    SPI_GETFLATMENU = &H1022
    SPI_SETFLATMENU = &H1023
    SPI_GETDROPSHADOW = &H1024
    SPI_SETDROPSHADOW = &H1025
    SPI_GETBLOCKSENDINPUTRESETS = &H1026
    SPI_SETBLOCKSENDINPUTRESETS = &H1027

    SPI_GETUIEFFECTS = &H103E
    SPI_SETUIEFFECTS = &H103F

    SPI_GETDISABLEOVERLAPPEDCONTENT = &H1040
    SPI_SETDISABLEOVERLAPPEDCONTENT = &H1041
    SPI_GETCLIENTAREAANIMATION = &H1042
    SPI_SETCLIENTAREAANIMATION = &H1043
    SPI_GETCLEARTYPE = &H1048
    SPI_SETCLEARTYPE = &H1049
    SPI_GETSPEECHRECOGNITION = &H104A
    SPI_SETSPEECHRECOGNITION = &H104B

    SPI_GETCARETBROWSING = &H104C
    SPI_SETCARETBROWSING = &H104D
    SPI_GETTHREADLOCALINPUTSETTINGS = &H104E
    SPI_SETTHREADLOCALINPUTSETTINGS = &H104F
    SPI_GETSYSTEMLANGUAGEBAR = &H1050
    SPI_SETSYSTEMLANGUAGEBAR = &H1051

    SPI_GETFOREGROUNDLOCKTIMEOUT = &H2000
    SPI_SETFOREGROUNDLOCKTIMEOUT = &H2001
    SPI_GETACTIVEWNDTRKTIMEOUT = &H2002
    SPI_SETACTIVEWNDTRKTIMEOUT = &H2003
    SPI_GETFOREGROUNDFLASHCOUNT = &H2004
    SPI_SETFOREGROUNDFLASHCOUNT = &H2005
    SPI_GETCARETWIDTH = &H2006
    SPI_SETCARETWIDTH = &H2007

    SPI_GETMOUSECLICKLOCKTIME = &H2008
    SPI_SETMOUSECLICKLOCKTIME = &H2009
    SPI_GETFONTSMOOTHINGTYPE = &H200A
    SPI_SETFONTSMOOTHINGTYPE = &H200B

    SPI_GETFONTSMOOTHINGCONTRAST = &H200C
    SPI_SETFONTSMOOTHINGCONTRAST = &H200D

    SPI_GETFOCUSBORDERWIDTH = &H200E
    SPI_SETFOCUSBORDERWIDTH = &H200F
    SPI_GETFOCUSBORDERHEIGHT = &H2010
    SPI_SETFOCUSBORDERHEIGHT = &H2011

    SPI_GETFONTSMOOTHINGORIENTATION = &H2012
    SPI_SETFONTSMOOTHINGORIENTATION = &H2013

    SPI_GETMINIMUMHITRADIUS = &H2014
    SPI_SETMINIMUMHITRADIUS = &H2015
    SPI_GETMESSAGEDURATION = &H2016
    SPI_SETMESSAGEDURATION = &H2017

    SPI_GETCONTACTVISUALIZATION = &H2018
    SPI_SETCONTACTVISUALIZATION = &H2019

    SPI_GETGESTUREVISUALIZATION = &H201A
    SPI_SETGESTUREVISUALIZATION = &H201B

    SPI_GETMOUSEWHEELROUTING = &H201C
    SPI_SETMOUSEWHEELROUTING = &H201D

    SPI_GETPENVISUALIZATION = &H201E
    SPI_SETPENVISUALIZATION = &H201F

'#if (NTDDI_VERSION >= NTDDI_WIN10_RS3)
    SPI_GETCARETTIMEOUT = &H2022
    SPI_SETCARETTIMEOUT = &H2023

'#if (NTDDI_VERSION >= NTDDI_WIN10_RS4)
    SPI_GETHANDEDNESS = &H2024
    SPI_SETHANDEDNESS = &H2025
End Enum
Public Enum SPIF
   SPIF_UPDATEINIFILE = &H1     ' Writes the new system-wide parameter setting to the user profile.
   SPIF_SENDCHANGE = &H2        ' Broadcasts the WM_SETTINGCHANGE message after updating the user profile.
   SPIF_SENDWININICHANGE = &H2  ' Same as SPIF_SENDCHANGE.
End Enum



Public Type NONCLIENTMETRICSA
    cbSize As Long
    iBorderWidth As Long
    iScrollWidth As Long
    iScrollHeight As Long
    iCaptionWidth As Long
    iCaptionHeight As Long
    lfCaptionFont As LOGFONTA
    iSmCaptionWidth As Long
    iSmCaptionHeight As Long
    lfSmCaptionFont As LOGFONTA
    iMenuWidth As Long
    iMenuHeight As Long
    lfMenuFont As LOGFONTA
    lfStatusFont As LOGFONTA
    lfMessageFont As LOGFONTA
    iPaddedBorderWidth As Long
End Type
Public Type NONCLIENTMETRICSW
    cbSize As Long
    iBorderWidth As Long
    iScrollWidth As Long
    iScrollHeight As Long
    iCaptionWidth As Long
    iCaptionHeight As Long
    lfCaptionFont As LOGFONTW
    iSmCaptionWidth As Long
    iSmCaptionHeight As Long
    lfSmCaptionFont As LOGFONTW
    iMenuWidth As Long
    iMenuHeight As Long
    lfMenuFont As LOGFONTW
    lfStatusFont As LOGFONTW
    lfMessageFont As LOGFONTW
    iPaddedBorderWidth As Long
End Type
Public Type NONCLIENTMETRICS
    cbSize As Long
    iBorderWidth As Long
    iScrollWidth As Long
    iScrollHeight As Long
    iCaptionWidth As Long
    iCaptionHeight As Long
    lfCaptionFont As LOGFONT
    iSmCaptionWidth As Long
    iSmCaptionHeight As Long
    lfSmCaptionFont As LOGFONT
    iMenuWidth As Long
    iMenuHeight As Long
    lfMenuFont As LOGFONT
    lfStatusFont As LOGFONT
    lfMessageFont As LOGFONT
    iPaddedBorderWidth As Long
End Type

Public Enum MinMetrics_Arrange_Flags
    ARW_BOTTOMLEFT = &H0000
    ARW_BOTTOMRIGHT = &H0001
    ARW_TOPLEFT = &H0002
    ARW_TOPRIGHT = &H0003
    ARW_STARTMASK = &H0003
    ARW_STARTRIGHT = &H0001
    ARW_STARTTOP = &H0002
    ARW_LEFT = &H0000
    ARW_RIGHT = &H0000
    ARW_UP = &H0004
    ARW_DOWN = &H0004
    ARW_HIDE = &H0008
End Enum
Public Type MINIMIZEDMETRICS
    cbSize As Long
    iWidth As Long
    iHorzGap As Long
    iVertGap As Long
    iArrange As MinMetrics_Arrange_Flags
End Type

Public Type ICONMETRICSA
    cbSize As Long
    iHorzSpacing As Long
    iVertSpacing As Long
    iTitleWrap As Long
    lfFont As LOGFONTA
End Type
Public Type ICONMETRICSW
    cbSize As Long
    iHorzSpacing As Long
    iVertSpacing As Long
    iTitleWrap As Long
    lfFont As LOGFONTW
End Type
Public Type ICONMETRICS
    cbSize As Long
    iHorzSpacing As Long
    iVertSpacing As Long
    iTitleWrap As Long
    lfFont As LOGFONT
End Type

Public Type ANIMATIONINFO
    cbSize As Long
    iMinAnimate As Long
End Type

Public Enum SerialKeysFlags
    SERKF_SERIALKEYSON = &H00000001
    SERKF_AVAILABLE = &H00000002
    SERKF_INDICATOR = &H00000004
End Enum
Public Type SERIALKEYSA
    cbSize As Long
    dwFlags As SerialKeysFlags
    lpszActivePort As String
    lpszPort As LongPtr
    iBaudRate As Long
    iPortState As Long
    iActive As Long
End Type
Public Type SERIALKEYSW
    cbSize As Long
    dwFlags As SerialKeysFlags
    lpszActivePort As LongPtr
    lpszPort As LongPtr
    iBaudRate As Long
    iPortState As Long
    iActive As Long
End Type
Public Type SERIALKEYS
    cbSize As Long
    dwFlags As SerialKeysFlags
    lpszActivePort As LongPtr
    lpszPort As LongPtr
    iBaudRate As Long
    iPortState As Long
    iActive As Long
End Type

Public Enum HighContrast_Flags
    HCF_HIGHCONTRASTON = &H00000001
    HCF_AVAILABLE = &H00000002
    HCF_HOTKEYACTIVE = &H00000004
    HCF_CONFIRMHOTKEY = &H00000008
    HCF_HOTKEYSOUND = &H00000010
    HCF_INDICATOR = &H00000020
    HCF_HOTKEYAVAILABLE = &H00000040
    HCF_LOGONDESKTOP = &H00000100
    HCF_DEFAULTDESKTOP = &H00000200
    HCF_OPTION_NOTHEMECHANGE = &H00001000
End Enum
Public Type HIGHCONTRASTA
    cbSize As Long
    dwFlags As HighContrast_Flags
    lpszDefaultScheme As String
End Type
Public Type HIGHCONTRASTW
    cbSize As Long
    dwFlags As HighContrast_Flags
    lpszDefaultScheme As LongPtr
End Type
Public Type HIGHCONTRAST
    cbSize As Long
    dwFlags As HighContrast_Flags
    lpszDefaultScheme As LongPtr
End Type

Public Enum FilterKeys_Flags
    FKF_FILTERKEYSON = &H00000001
    FKF_AVAILABLE = &H00000002
    FKF_HOTKEYACTIVE = &H00000004
    FKF_CONFIRMHOTKEY = &H00000008
    FKF_HOTKEYSOUND = &H00000010
    FKF_INDICATOR = &H00000020
    FKF_CLICKON = &H00000040
End Enum
Public Type FILTERKEYS
    cbSize As Long
    dwFlags As FilterKeys_Flags
    iWaitMSec As Long ' Acceptance Delay
    iDelayMSec As Long ' Delay Until Repeat
    iRepeatMSec As Long ' Repeat Rate
    iBounceMSec As Long ' Debounce Time
End Type

Public Enum StickyKeys_Flags
    SKF_STICKYKEYSON = &H00000001
    SKF_AVAILABLE = &H00000002
    SKF_HOTKEYACTIVE = &H00000004
    SKF_CONFIRMHOTKEY = &H00000008
    SKF_HOTKEYSOUND = &H00000010
    SKF_INDICATOR = &H00000020
    SKF_AUDIBLEFEEDBACK = &H00000040
    SKF_TRISTATE = &H00000080
    SKF_TWOKEYSOFF = &H00000100
    SKF_LALTLATCHED = &H10000000
    SKF_LCTLLATCHED = &H04000000
    SKF_LSHIFTLATCHED = &H01000000
    SKF_RALTLATCHED = &H20000000
    SKF_RCTLLATCHED = &H08000000
    SKF_RSHIFTLATCHED = &H02000000
    SKF_LWINLATCHED = &H40000000
    SKF_RWINLATCHED = &H80000000
    SKF_LALTLOCKED = &H00100000
    SKF_LCTLLOCKED = &H00040000
    SKF_LSHIFTLOCKED = &H00010000
    SKF_RALTLOCKED = &H00200000
    SKF_RCTLLOCKED = &H00080000
    SKF_RSHIFTLOCKED = &H00020000
    SKF_LWINLOCKED = &H00400000
    SKF_RWINLOCKED = &H00800000
End Enum
Public Type STICKYKEYS
    cbSize As Long
    dwFlags As StickyKeys_Flags
End Type

Public Enum MouseKeys_Flags
    MKF_MOUSEKEYSON = &H00000001
    MKF_AVAILABLE = &H00000002
    MKF_HOTKEYACTIVE = &H00000004
    MKF_CONFIRMHOTKEY = &H00000008
    MKF_HOTKEYSOUND = &H00000010
    MKF_INDICATOR = &H00000020
    MKF_MODIFIERS = &H00000040
    MKF_REPLACENUMBERS = &H00000080
    MKF_LEFTBUTTONSEL = &H10000000
    MKF_RIGHTBUTTONSEL = &H20000000
    MKF_LEFTBUTTONDOWN = &H01000000
    MKF_RIGHTBUTTONDOWN = &H02000000
    MKF_MOUSEMODE = &H80000000
End Enum
Public Type MOUSEKEYS
    cbSize As Long
    dwFlags As MouseKeys_Flags
    iMaxSpeed As Long
    iTimeToMaxSpeed As Long
    iCtrlSpeed As Long
    dwReserved1 As Long
    dwReserved2 As Long
End Type

Public Enum AccessTimeout_Flags
    ATF_TIMEOUTON = &H00000001
    ATF_ONOFFFEEDBACK = &H00000002
End Enum
Public Type ACCESSTIMEOUT
    cbSize As Long
    dwFlags As AccessTimeout_Flags
    iTimeOutMSec As Long
End Type

Public Enum SoundSentry_FSGraf
    SSGF_NONE = 0
    SSGF_DISPLAY = 3
End Enum
Public Enum SoundSentry_FSText
    SSTF_NONE = 0
    SSTF_CHARS = 1
    SSTF_BORDER = 2
    SSTF_DISPLAY = 3
End Enum
Public Enum SoundSentry_Windows
    SSWF_NONE = 0
    SSWF_TITLE = 1
    SSWF_WINDOW = 2
    SSWF_DISPLAY = 3
    SSWF_CUSTOM = 4
End Enum
Public Enum SoundSentry_Flags
    SSF_SOUNDSENTRYON = &H00000001
    SSF_AVAILABLE = &H00000002
    SSF_INDICATOR = &H00000004
End Enum
Public Type SOUNDSENTRYA
    cbSize As Long
    dwFlags As SoundSentry_Flags
    iFSTextEffect As SoundSentry_FSText
    iFSTextEffectMSec As Long
    iFSTextEffectColorBits As Long
    iFSGrafEffect As SoundSentry_FSGraf
    iFSGrafEffectMSec As Long
    iFSGrafEffectColor As Long
    iWindowsEffect As SoundSentry_Windows
    iWindowsEffectMSec As Long
    lpszWindowsEffectDLL As String
    iWindowsEffectOrdinal As Long
End Type
Public Type SOUNDSENTRYW
    cbSize As Long
    dwFlags As SoundSentry_Flags
    iFSTextEffect As SoundSentry_FSText
    iFSTextEffectMSec As Long
    iFSTextEffectColorBits As Long
    iFSGrafEffect As SoundSentry_FSGraf
    iFSGrafEffectMSec As Long
    iFSGrafEffectColor As Long
    iWindowsEffect As SoundSentry_Windows
    iWindowsEffectMSec As Long
    lpszWindowsEffectDLL As LongPtr
    iWindowsEffectOrdinal As Long
End Type
'Alias SOUNDSENTRY As SOUNDSENTRYW
Public Type SOUNDSENTRY
    cbSize As Long
    dwFlags As SoundSentry_Flags
    iFSTextEffect As SoundSentry_FSText
    iFSTextEffectMSec As Long
    iFSTextEffectColorBits As Long
    iFSGrafEffect As SoundSentry_FSGraf
    iFSGrafEffectMSec As Long
    iFSGrafEffectColor As Long
    iWindowsEffect As SoundSentry_Windows
    iWindowsEffectMSec As Long
    lpszWindowsEffectDLL As LongPtr
    iWindowsEffectOrdinal As Long
End Type
Public Enum ToggleKeys_Flags
    TKF_TOGGLEKEYSON = &H00000001
    TKF_AVAILABLE = &H00000002
    TKF_HOTKEYACTIVE = &H00000004
    TKF_CONFIRMHOTKEY = &H00000008
    TKF_HOTKEYSOUND = &H00000010
    TKF_INDICATOR = &H00000020
End Enum
Public Type TOGGLEKEYS
    cbSize As Long
    dwFlags As ToggleKeys_Flags
End Type

Public Type AUDIODESCRIPTION
    cbSize As Long ' sizeof(AudioDescriptionType)
    Enabled As BOOL ' On/Off
    Locale As Long ' locale ID for language
End Type

Public Enum SPI_FontSmoothing_Flags
    FE_FONTSMOOTHINGSTANDARD = &H0001
    FE_FONTSMOOTHINGCLEARTYPE = &H0002
    FE_FONTSMOOTHINGORIENTATIONBGR = &H0000
    FE_FONTSMOOTHINGORIENTATIONRGB = &H0001
End Enum

Public Type TouchPredictionParameters
    cbSize As Long
    dwLatency As Long ' Latency in millisecs
    dwSampleTime As Long ' Sample time in millisecs (used to deduce velocity)
    bUseHWTimeStamp As Long ' Use H/W TimeStamps
End Type
Public Const TOUCHPREDICTIONPARAMETERS_DEFAULT_LATENCY As Single = 8
Public Const TOUCHPREDICTIONPARAMETERS_DEFAULT_SAMPLETIME As Single = 8
Public Const TOUCHPREDICTIONPARAMETERS_DEFAULT_USE_HW_TIMESTAMP As Single = 1
Public Const TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_DELTA As Single = 0.001
Public Const TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_MIN As Single = 0.9
Public Const TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_MAX As Single = 0.999
Public Const TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_LAMBDA_LEARNING_RATE As Single = 0.001
Public Const TOUCHPREDICTIONPARAMETERS_DEFAULT_RLS_EXPO_SMOOTH_ALPHA As Single = 0.99
Public Const MAX_TOUCH_PREDICTION_FILTER_TAPS = 3

Public Const MAX_LOGICALDPIOVERRIDE  = 2
Public Const MIN_LOGICALDPIOVERRIDE  = -2

Public Enum SPI_ContactVisualization_Flags
    CONTACTVISUALIZATION_OFF = &H0000
    CONTACTVISUALIZATION_ON = &H0001
    CONTACTVISUALIZATION_PRESENTATIONMODE = &H0002
End Enum

Public Enum SPI_GestureVisualization_Flags
    GESTUREVISUALIZATION_OFF = &H0000
    GESTUREVISUALIZATION_ON = &H001F
    GESTUREVISUALIZATION_TAP = &H0001
    GESTUREVISUALIZATION_DOUBLETAP = &H0002
    GESTUREVISUALIZATION_PRESSANDTAP = &H0004
    GESTUREVISUALIZATION_PRESSANDHOLD = &H0008
    GESTUREVISUALIZATION_RIGHTTAP = &H0010
End Enum

Public Enum SPI_MouseWheelRouting_Flags
    MOUSEWHEEL_ROUTING_FOCUS = 0
    MOUSEWHEEL_ROUTING_HYBRID = 1
    MOUSEWHEEL_ROUTING_MOUSE_POS = 2
End Enum

Public Enum SPI_PenVisualization_Flags
    PENVISUALIZATION_ON = &H0023
    PENVISUALIZATION_OFF = &H0000
    PENVISUALIZATION_TAP = &H0001
    PENVISUALIZATION_DOUBLETAP = &H0002
    PENVISUALIZATION_CURSOR = &H0020
End Enum
Public Enum SPI_PenArbTypes_Flags
    PENARBITRATIONTYPE_NONE = &H0000
    PENARBITRATIONTYPE_WIN8 = &H0001
    PENARBITRATIONTYPE_FIS = &H0002
    PENARBITRATIONTYPE_SPT = &H0003
    PENARBITRATIONTYPE_MAX = &H0004
End Enum

Public Enum HANDEDNESS
    HANDEDNESS_LEFT = 0
    HANDEDNESS_RIGHT = 1
End Enum





Public Enum MWMO_FLAGS
    MWMO_WAITALL = &H0001
    MWMO_ALERTABLE = &H0002
    MWMO_INPUTAVAILABLE = &H0004
End Enum
Public Enum QueueStatusFlags
    QS_KEY = &H0001
    QS_MOUSEMOVE = &H0002
    QS_MOUSEBUTTON = &H0004
    QS_POSTMESSAGE = &H0008
    QS_TIMER = &H0010
    QS_PAINT = &H0020
    QS_SENDMESSAGE = &H0040
    QS_HOTKEY = &H0080
    QS_ALLPOSTMESSAGE = &H0100
    QS_RAWINPUT = &H0400
' '#if(_WIN32_WINNT >= 0x0602)
    QS_TOUCH = &H0800
    QS_POINTER = &H1000
' #endif /* _WIN32_WINNT >= 0x0602 */
    QS_MOUSE = (QS_MOUSEMOVE Or QS_MOUSEBUTTON)
' #if (_WIN32_WINNT >= 0x602)
    QS_INPUT = (QS_MOUSE Or QS_KEY Or QS_RAWINPUT Or QS_TOUCH Or QS_POINTER)
    QS_ALLEVENTS = (QS_INPUT Or QS_POSTMESSAGE Or QS_TIMER Or QS_PAINT Or QS_HOTKEY)
    QS_ALLINPUT = (QS_INPUT Or QS_POSTMESSAGE Or QS_TIMER Or QS_PAINT Or QS_HOTKEY Or QS_SENDMESSAGE)
End Enum

Public Enum PMOptions
    PM_NOREMOVE = 0                                      ' &H00000000&
    PM_REMOVE = 1                                        ' &H00000001&
    PM_NOYIELD = 2                                       ' &H00000002&
    
    PM_QS_INPUT = (QS_INPUT << 16)
    PM_QS_POSTMESSAGE = ((QS_POSTMESSAGE Or QS_HOTKEY Or QS_TIMER) << 16)
    PM_QS_PAINT = (QS_PAINT << 16)
    PM_QS_SENDMESSAGE = (QS_SENDMESSAGE << 16)
End Enum

Public Enum ClassStyles
     CS_VREDRAW = &H0001
     CS_HREDRAW = &H0002
     CS_DBLCLKS = &H0008
     CS_OWNDC = &H0020
     CS_CLASSDC = &H0040
     CS_PARENTDC = &H0080
     CS_NOCLOSE = &H0200
     CS_SAVEBITS = &H0800
     CS_BYTEALIGNCLIENT = &H1000
     CS_BYTEALIGNWINDOW = &H2000
     CS_GLOBALCLASS = &H4000
     CS_IME = &H00010000
     CS_DROPSHADOW = &H00020000
End Enum

Public Enum DefCursors
    IDC_ARROW = 32512&
    IDC_IBEAM = 32513&
    IDC_WAIT = 32514&
    IDC_CROSS = 32515&
    IDC_UPARROW = 32516&
    IDC_SIZE = 32640&
    IDC_ICON = 32641&
    IDC_SIZENWSE = 32642&
    IDC_SIZENESW = 32643&
    IDC_SIZEWE = 32644&
    IDC_SIZENS = 32645&
    IDC_SIZEALL = 32646&
    IDC_NO = 32648&
    IDC_HAND = 32649&
    IDC_APPSTARTING = 32650&
    IDC_HELP = 32651&
    IDC_PIN = 32671&
    IDC_PERSON = 32672&
End Enum

Public Enum ResourceIconTypes
    RES_ICON = 1
    RES_CURSOR = 2
End Enum

Public Enum OEM_BITMAP_RESOURCES
    OBM_CLOSE = 32754
    OBM_UPARROW = 32753
    OBM_DNARROW = 32752
    OBM_RGARROW = 32751
    OBM_LFARROW = 32750
    OBM_REDUCE = 32749
    OBM_ZOOM = 32748
    OBM_RESTORE = 32747
    OBM_REDUCED = 32746
    OBM_ZOOMD = 32745
    OBM_RESTORED = 32744
    OBM_UPARROWD = 32743
    OBM_DNARROWD = 32742
    OBM_RGARROWD = 32741
    OBM_LFARROWD = 32740
    OBM_MNARROW = 32739
    OBM_COMBO = 32738
    OBM_UPARROWI = 32737
    OBM_DNARROWI = 32736
    OBM_RGARROWI = 32735
    OBM_LFARROWI = 32734
    OBM_OLD_CLOSE = 32767
    OBM_SIZE = 32766
    OBM_OLD_UPARROW = 32765
    OBM_OLD_DNARROW = 32764
    OBM_OLD_RGARROW = 32763
    OBM_OLD_LFARROW = 32762
    OBM_BTSIZE = 32761
    OBM_CHECK = 32760
    OBM_CHECKBOXES = 32759
    OBM_BTNCORNERS = 32758
    OBM_OLD_REDUCE = 32757
    OBM_OLD_ZOOM = 32756
    OBM_OLD_RESTORE = 32755
End Enum
Public Enum SysCursors
    OCR_NORMAL = 32512&
    OCR_IBEAM = 32513&
    OCR_WAIT = 32514&
    OCR_CROSS = 32515&
    OCR_UP = 32516&
    OCR_SIZE = 32640&
    OCR_ICON = 32641&
    OCR_SIZENWSE = 32642&
    OCR_SIZENESW = 32643&
    OCR_SIZEWE = 32644&
    OCR_SIZENS = 32645&
    OCR_SIZEALL = 32646&
    OCR_NO = 32648&
    OCR_HAND = 32649&
    OCR_APPSTARTING = 32650&
    OCR_HELP = 32651&
End Enum
Public Enum OemDefaultIcons
    OIC_SAMPLE = 32512
    OIC_HAND = 32513
    OIC_QUES = 32514
    OIC_BANG = 32515
    OIC_NOTE = 32516
    OIC_WINLOGO = 32517
    OIC_WARNING = OIC_BANG
    OIC_ERROR = OIC_HAND
    OIC_INFORMATION = OIC_NOTE
    OIC_SHIELD = 32518
End Enum

Public Enum DefIcons
	IDI_APPLICATION = 32512
	IDI_HAND = 32513
	IDI_QUESTION = 32514
	IDI_EXCLAMATION = 32515
	IDI_ASTERISK = 32516
	IDI_WINLOGO = 32517
	IDI_WARNING = IDI_EXCLAMATION
	IDI_ERROR = IDI_HAND
	IDI_INFORMATION = IDI_ASTERISK
    IDI_SHIELD = 32518
End Enum

Public Type WNDCLASSEXA
    cbSize As Long
    style As ClassStyles
    lpfnWndProc As LongPtr
    cbClsExtra As Long
    cbWndExtra As Long
    hInstance As LongPtr
    hIcon As LongPtr
    hCursor As LongPtr
    hbrBackground As LongPtr
    lpszMenuName As String
    lpszClassName As String
    hIconSm As LongPtr
End Type
Public Type WNDCLASSEXW
    cbSize As Long
    style As ClassStyles
    lpfnWndProc As LongPtr
    cbClsExtra As Long
    cbWndExtra As Long
    hInstance As LongPtr
    hIcon As LongPtr
    hCursor As LongPtr
    hbrBackground As LongPtr
    lpszMenuName As LongPtr
    lpszClassName As LongPtr
    hIconSm As LongPtr
End Type
Public Type WNDCLASSEX
    cbSize As Long
    style As ClassStyles
    lpfnWndProc As LongPtr
    cbClsExtra As Long
    cbWndExtra As Long
    hInstance As LongPtr
    hIcon As LongPtr
    hCursor As LongPtr
    hbrBackground As LongPtr
    lpszMenuName As LongPtr
    lpszClassName As LongPtr
    hIconSm As LongPtr
End Type
Public Type WNDCLASS
    style As ClassStyles
    lpfnWndProc As LongPtr
    cbClsExtra As Long
    cbWndExtra As Long
    hInstance As LongPtr
    hIcon As LongPtr
    hCursor As LongPtr
    hbrBackground As LongPtr
    lpszMenuName As LongPtr
    lpszClassName As LongPtr
End Type
Public Type WNDCLASSW
    style As ClassStyles
    lpfnWndProc As LongPtr
    cbClsExtra As Long
    cbWndExtra As Long
    hInstance As LongPtr
    hIcon As LongPtr
    hCursor As LongPtr
    hbrBackground As LongPtr
    lpszMenuName As LongPtr
    lpszClassName As LongPtr
End Type
Public Type WNDCLASSA
    style As ClassStyles
    lpfnWndProc As LongPtr
    cbClsExtra As Long
    cbWndExtra As Long
    hInstance As LongPtr
    hIcon As LongPtr
    hCursor As LongPtr
    hbrBackground As LongPtr
    lpszMenuName As String
    lpszClassName As String
End Type

Public Enum WindowsHookCodes
    WH_MIN = (-1)
    WH_MSGFILTER = (-1)
    WH_JOURNALRECORD = 0
    WH_JOURNALPLAYBACK = 1
    WH_KEYBOARD = 2
    WH_GETMESSAGE = 3
    WH_CALLWNDPROC = 4
    WH_CBT = 5
    WH_SYSMSGFILTER = 6
    WH_MOUSE = 7
    WH_HARDWARE = 8
    WH_DEBUG = 9
    WH_SHELL = 10
    WH_FOREGROUNDIDLE = 11
    WH_CALLWNDPROCRET = 12
    WH_KEYBOARD_LL = 13
    WH_MOUSE_LL = 14
    WH_MAX = 14
End Enum

Public Const WH_MINHOOK  = WH_MIN
Public Const WH_MAXHOOK  = WH_MAX


Public Enum HookCodes
    HC_ACTION = 0
    HC_GETNEXT = 1
    HC_SKIP = 2
    HC_NOREMOVE = 3
    HC_NOREM = HC_NOREMOVE
    HC_SYSMODALON = 4
    HC_SYSMODALOFF = 5
End Enum

Public Enum CBTHookCodes
    HCBT_MOVESIZE = 0
    HCBT_MINMAX = 1
    HCBT_QS = 2
    HCBT_CREATEWND = 3
    HCBT_DESTROYWND = 4
    HCBT_ACTIVATE = 5
    HCBT_CLICKSKIPPED = 6
    HCBT_KEYSKIPPED = 7
    HCBT_SYSCOMMAND = 8
    HCBT_SETFOCUS = 9
End Enum

' HCBT_ACTIVATE structure pointed to by lParam
Public Type CBTACTIVATESTRUCT
    fMouse As Long
    hWndActive As LongPtr
End Type

Public Type CBT_CREATEWNDA
    lpcs As CREATESTRUCTA
    hwndInsertAfter As LongPtr
End Type
Public Type CBT_CREATEWNDW
    lpcs As CREATESTRUCTW
    hwndInsertAfter As LongPtr
End Type
Public Type CBT_CREATEWND
    lpcs As CREATESTRUCT
    hwndInsertAfter As LongPtr
End Type

Public Type WTSSESSION_NOTIFICATION
    cbSize As Long
    dwSessionId As Long
End Type

Public Enum WM_WTSESSION_CHANGE_wParam
    WTS_CONSOLE_CONNECT = &H1
    WTS_CONSOLE_DISCONNECT = &H2
    WTS_REMOTE_CONNECT = &H3
    WTS_REMOTE_DISCONNECT = &H4
    WTS_SESSION_LOGON = &H5
    WTS_SESSION_LOGOFF = &H6
    WTS_SESSION_LOCK = &H7
    WTS_SESSION_UNLOCK = &H8
    WTS_SESSION_REMOTE_CONTROL = &H9
    WTS_SESSION_CREATE = &Ha
    WTS_SESSION_TERMINATE = &Hb
End Enum


Public Enum MsgFilterCodes
    MSGF_DIALOGBOX = 0
    MSGF_MESSAGEBOX = 1
    MSGF_MENU = 2
    MSGF_MOVE = 3
    MSGF_SIZE = 4
    MSGF_SCROLLBAR = 5
    MSGF_NEXTWINDOW = 6
    MSGF_MAINLOOP = 8
    MSGF_MAX = 8
    MSGF_USER = 4096
End Enum


Public Const HSHELL_WINDOWCREATED = 1
Public Const HSHELL_WINDOWDESTROYED = 2
Public Const HSHELL_ACTIVATESHELLWINDOW = 3
Public Const HSHELL_WINDOWACTIVATED  = 4
Public Const HSHELL_GETMINRECT  = 5
Public Const HSHELL_REDRAW  = 6
Public Const HSHELL_TASKMAN  = 7
Public Const HSHELL_LANGUAGE  = 8
Public Const HSHELL_SYSMENU  = 9
Public Const HSHELL_ENDTASK  = 10
Public Const HSHELL_ACCESSIBILITYSTATE  = 11
Public Const HSHELL_APPCOMMAND  = 12
Public Const HSHELL_WINDOWREPLACED  = 13
Public Const HSHELL_WINDOWREPLACING  = 14
Public Const HSHELL_MONITORCHANGED  = 16
Public Const HSHELL_HIGHBIT  = &H8000
Public Const HSHELL_FLASH  = (HSHELL_REDRAW Or HSHELL_HIGHBIT)
Public Const HSHELL_RUDEAPPACTIVATED  = (HSHELL_WINDOWACTIVATED Or HSHELL_HIGHBIT)

Public Const APPCOMMAND_BROWSER_BACKWARD  = 1
Public Const APPCOMMAND_BROWSER_FORWARD  = 2
Public Const APPCOMMAND_BROWSER_REFRESH  = 3
Public Const APPCOMMAND_BROWSER_STOP  = 4
Public Const APPCOMMAND_BROWSER_SEARCH  = 5
Public Const APPCOMMAND_BROWSER_FAVORITES  = 6
Public Const APPCOMMAND_BROWSER_HOME  = 7
Public Const APPCOMMAND_VOLUME_MUTE  = 8
Public Const APPCOMMAND_VOLUME_DOWN  = 9
Public Const APPCOMMAND_VOLUME_UP  = 10
Public Const APPCOMMAND_MEDIA_NEXTTRACK  = 11
Public Const APPCOMMAND_MEDIA_PREVIOUSTRACK  = 12
Public Const APPCOMMAND_MEDIA_STOP  = 13
Public Const APPCOMMAND_MEDIA_PLAY_PAUSE  = 14
Public Const APPCOMMAND_LAUNCH_MAIL  = 15
Public Const APPCOMMAND_LAUNCH_MEDIA_SELECT  = 16
Public Const APPCOMMAND_LAUNCH_APP1  = 17
Public Const APPCOMMAND_LAUNCH_APP2  = 18
Public Const APPCOMMAND_BASS_DOWN  = 19
Public Const APPCOMMAND_BASS_BOOST  = 20
Public Const APPCOMMAND_BASS_UP  = 21
Public Const APPCOMMAND_TREBLE_DOWN  = 22
Public Const APPCOMMAND_TREBLE_UP  = 23
Public Const APPCOMMAND_MICROPHONE_VOLUME_MUTE  = 24
Public Const APPCOMMAND_MICROPHONE_VOLUME_DOWN  = 25
Public Const APPCOMMAND_MICROPHONE_VOLUME_UP  = 26
Public Const APPCOMMAND_HELP  = 27
Public Const APPCOMMAND_FIND  = 28
Public Const APPCOMMAND_NEW  = 29
Public Const APPCOMMAND_OPEN  = 30
Public Const APPCOMMAND_CLOSE  = 31
Public Const APPCOMMAND_SAVE  = 32
Public Const APPCOMMAND_PRINT  = 33
Public Const APPCOMMAND_UNDO  = 34
Public Const APPCOMMAND_REDO  = 35
Public Const APPCOMMAND_COPY  = 36
Public Const APPCOMMAND_CUT  = 37
Public Const APPCOMMAND_PASTE  = 38
Public Const APPCOMMAND_REPLY_TO_MAIL  = 39
Public Const APPCOMMAND_FORWARD_MAIL  = 40
Public Const APPCOMMAND_SEND_MAIL  = 41
Public Const APPCOMMAND_SPELL_CHECK  = 42
Public Const APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE  = 43
Public Const APPCOMMAND_MIC_ON_OFF_TOGGLE  = 44
Public Const APPCOMMAND_CORRECTION_LIST  = 45
Public Const APPCOMMAND_MEDIA_PLAY  = 46
Public Const APPCOMMAND_MEDIA_PAUSE  = 47
Public Const APPCOMMAND_MEDIA_RECORD  = 48
Public Const APPCOMMAND_MEDIA_FAST_FORWARD  = 49
Public Const APPCOMMAND_MEDIA_REWIND  = 50
Public Const APPCOMMAND_MEDIA_CHANNEL_UP  = 51
Public Const APPCOMMAND_MEDIA_CHANNEL_DOWN  = 52
Public Const APPCOMMAND_DELETE  = 53
Public Const APPCOMMAND_DWM_FLIP3D  = 54

Public Const FAPPCOMMAND_MOUSE  = &H8000
Public Const FAPPCOMMAND_KEY  = 0
Public Const FAPPCOMMAND_OEM  = &H1000
Public Const FAPPCOMMAND_MASK  = &HF000

Public Type SHELLHOOKINFO
    hwnd As LongPtr
    rc As RECT
End Type

Public Type EVENTMSG
    message As Long
    paramL As Long
    paramH As Long
    time As Long
    hwnd As LongPtr
End Type

Public Type CWPSTRUCT
    lParam As LongPtr
    wParam As LongPtr
    message As Long
    hwnd As LongPtr
End Type

Public Type CWPRETSTRUCT
    lResult As LongPtr
    lParam As LongPtr
    wParam As LongPtr
    message As Long
    hwnd As LongPtr
End Type

Public Enum LowLevelKbHookFlags
    LLKHF_EXTENDED = (KF_EXTENDED >> 8) /* &H00000001 */
    LLKHF_INJECTED = &H00000010
    LLKHF_ALTDOWN = (KF_ALTDOWN >> 8) /* &H00000020 */
    LLKHF_UP = (KF_UP >> 8) /* &H00000080 */
    LLKHF_LOWER_IL_INJECTED = &H00000002
End Enum
Public Type KBDLLHOOKSTRUCT
    vkCode As VirtualKeyCodes
    scanCode As Long
    flags As LowLevelKbHookFlags
    time As Long
    dwExtraInfo As LongPtr
End Type

Public Enum LowLevelMouseHookFlags
    LLMHF_INJECTED = &H00000001
    LLMHF_LOWER_IL_INJECTED = &H00000002
End Enum
Public Type MSLLHOOKSTRUCT
    pt As POINT
    mouseData As Long
    flags As LowLevelMouseHookFlags
    time As Long
    dwExtraInfo As LongPtr
End Type

Public Type DEBUGHOOKINFO
    idThread As Long
    idThreadInstaller As Long
    lParam As LongPtr
    wParam As LongPtr
    code As Long
End Type

Public Type MOUSEHOOKSTRUCT
    pt As POINT
    hwnd As LongPtr
    wHitTestCode As NCHT_Pos
    dwExtraInfo As LongPtr
End Type
Public Type MOUSEHOOKSTRUCTEX
    pt As POINT
    hwnd As LongPtr
    wHitTestCode As NCHT_Pos
    dwExtraInfo As LongPtr
    mouseData As Long
End Type

Public Type HARDWAREHOOKSTRUCT
    hwnd As LongPtr
    message As Long
    wParam As LongPtr
    lParam As LongPtr
End Type


Public Const MDIS_ALLCHILDSTYLES  = &H0001

'Flags for WM_MDITILE and WM_MDICASCADE messages.
Public Const MDITILE_VERTICAL  = &H0000 /*not in win3.1 */
Public Const MDITILE_HORIZONTAL  = &H0001 /*not in win3.1 */
Public Const MDITILE_SKIPDISABLED  = &H0002 /*not in win3.1 */
Public Const MDITILE_ZORDER  = &H0004

Public Type DRAWTEXTPARAMS
	cbSize As Long
	iTabLength As Long
	iLeftMargin As Long
	iRightMargin As Long
	uiLengthDrawn As Long
End Type

Public Enum TouchInputFlags
	TOUCHEVENTF_MOVE = &H0001
	TOUCHEVENTF_DOWN = &H0002
	TOUCHEVENTF_UP = &H0004
	TOUCHEVENTF_INRANGE = &H0008
	TOUCHEVENTF_PRIMARY = &H0010
	TOUCHEVENTF_NOCOALESCE = &H0020
	TOUCHEVENTF_PEN = &H0040
	TOUCHEVENTF_PALM = &H0080
End Enum
Public Enum TouchInputMask
	TOUCHINPUTMASKF_TIMEFROMSYSTEM = &H0001  ' the dwTime field contains a system generated value
	TOUCHINPUTMASKF_EXTRAINFO = &H0002  ' the dwExtraInfo field is valid
	TOUCHINPUTMASKF_CONTACTAREA = &H0004  ' the cxContact and cyContact fields are valid
End Enum
Public Type TOUCHINPUT
	x As Long
	y As Long
	hSource As LongPtr
	dwID As Long
	dwFlags As TouchInputFlags
	dwMask As TouchInputMask
	dwTime As Long
	dwExtraInfo As LongPtr
	cxContact As Long
	cyContact As Long
End Type

Public Enum RegTouchWindowFlags
	TWF_FINETOUCH = (&H00000001)
	TWF_WANTPALM = (&H00000002)
End Enum

Public Enum GCW_Index
    GCW_ATOM = (-32)
End Enum
Public Enum GCL_Index
	GCL_MENUNAME = (-8)
	GCL_HBRBACKGROUND = (-10)
	GCL_HCURSOR = (-12)
	GCL_HICON = (-14)
	GCL_HMODULE = (-16)
	GCL_CBWNDEXTRA = (-18)
	GCL_CBCLSEXTRA = (-20)
	GCL_WNDPROC = (-24)
	GCL_STYLE = (-26)
	GCL_ATOM = (-32)
	GCL_HICONSM = (-34)
End Enum
Public Enum GCLP_Index
    GCLP_MENUNAME = (-8)
    GCLP_HBRBACKGROUND = (-10)
    GCLP_HCURSOR = (-12)
    GCLP_HICON = (-14)
    GCLP_HMODULE = (-16)
    GCLP_CBWNDEXTRA = (-18)
    GCLP_CBCLSEXTRA = (-20)
    GCLP_WNDPROC = (-24)
    GCLP_STYLE = (-26)
    GCWP_ATOM = (-32)
    GCLP_HICONSM = (-34)
End Enum
Public Enum UserObjectInfoTypes
	UOI_FLAGS = 1
	UOI_NAME = 2
	UOI_TYPE = 3
	UOI_USER_SID = 4
	UOI_HEAPSIZE = 5
	UOI_IO = 6
	UOI_TIMERPROC_EXCEPTION_SUPPRESSION = 7
End Enum
Public Type USEROBJECTFLAGS
    fInherit As Long
    fReserved As Long
    /* [ TypeHint(WindowStationAttribFlags, OpenDesktop_Flags ] */ dwFlags As Long
End Type

Public Enum WindowStationAccessFlags
	WINSTA_ENUMDESKTOPS = &H0001
	WINSTA_READATTRIBUTES = &H0002
	WINSTA_ACCESSCLIPBOARD = &H0004
	WINSTA_CREATEDESKTOP = &H0008
	WINSTA_WRITEATTRIBUTES = &H0010
	WINSTA_ACCESSGLOBALATOMS = &H0020
	WINSTA_EXITWINDOWS = &H0040
	WINSTA_ENUMERATE = &H0100
	WINSTA_READSCREEN = &H0200
	WINSTA_ALL_ACCESS = (WINSTA_ENUMDESKTOPS Or WINSTA_READATTRIBUTES Or WINSTA_ACCESSCLIPBOARD Or WINSTA_CREATEDESKTOP Or WINSTA_WRITEATTRIBUTES Or WINSTA_ACCESSGLOBALATOMS Or WINSTA_EXITWINDOWS Or WINSTA_ENUMERATE Or WINSTA_READSCREEN)
End Enum

Public Enum WindowStationCreateFlags
     CWF_CREATE_ONLY = &H00000001
End Enum

Public Enum WindowStationAttribFlags
     WSF_VISIBLE = &H0001
End Enum

Public Enum BorderStyles
	BDR_RAISEDOUTER = &H0001
	BDR_SUNKENOUTER = &H0002
	BDR_RAISEDINNER = &H0004
	BDR_SUNKENINNER = &H0008
	BDR_OUTER = (BDR_RAISEDOUTER Or BDR_SUNKENOUTER)
	BDR_INNER = (BDR_RAISEDINNER Or BDR_SUNKENINNER)
	BDR_RAISED = (BDR_RAISEDOUTER Or BDR_RAISEDINNER)
	BDR_SUNKEN = (BDR_SUNKENOUTER Or BDR_SUNKENINNER)
	EDGE_RAISED = (BDR_RAISEDOUTER Or BDR_RAISEDINNER)
	EDGE_SUNKEN = (BDR_SUNKENOUTER Or BDR_SUNKENINNER)
	EDGE_ETCHED = (BDR_SUNKENOUTER Or BDR_RAISEDINNER)
	EDGE_BUMP = (BDR_RAISEDOUTER Or BDR_SUNKENINNER)
End Enum

Public Enum BorderFlags
	BF_LEFT = &H0001
	BF_TOP = &H0002
	BF_RIGHT = &H0004
	BF_BOTTOM = &H0008
	BF_TOPLEFT = (BF_TOP Or BF_LEFT)
	BF_TOPRIGHT = (BF_TOP Or BF_RIGHT)
	BF_BOTTOMLEFT = (BF_BOTTOM Or BF_LEFT)
	BF_BOTTOMRIGHT = (BF_BOTTOM Or BF_RIGHT)
	BF_RECT = (BF_LEFT Or BF_TOP Or BF_RIGHT Or BF_BOTTOM)
	BF_DIAGONAL = &H0010
'  For diagonal lines, the BF_RECT flags specify the end point of the
'  vector bounded by the rectangle parameter.
	BF_DIAGONAL_ENDTOPRIGHT = (BF_DIAGONAL Or BF_TOP Or BF_RIGHT)
	BF_DIAGONAL_ENDTOPLEFT = (BF_DIAGONAL Or BF_TOP Or BF_LEFT)
	BF_DIAGONAL_ENDBOTTOMLEFT = (BF_DIAGONAL Or BF_BOTTOM Or BF_LEFT)
	BF_DIAGONAL_ENDBOTTOMRIGHT = (BF_DIAGONAL Or BF_BOTTOM Or BF_RIGHT)
	BF_MIDDLE = &H0800 /* Fill in the middle */
	BF_SOFT = &H1000 /* For softer buttons */
	BF_ADJUST = &H2000 /* Calculate the space left over */
	BF_FLAT = &H4000 /* For flat rather than 3D borders */
	BF_MONO = &H8000& /* For monochrome borders */
End Enum


Public Enum PrintWindowFlags
    PW_CLIENTONLY = &H00000001
    PW_RENDERFULLCONTENT = &H00000002
End Enum

Public Enum GetWindowConsts
	GW_HWNDFIRST = 0
	GW_HWNDLAST = 1
	GW_HWNDNEXT = 2
	GW_HWNDPREV = 3
	GW_OWNER = 4
	GW_CHILD = 5
	GW_ENABLEDPOPUP = 6
End Enum

Public Enum GWL_INDEX
    GWL_WNDPROC = (-4)
    GWL_HINSTANCE = (-6)
    GWL_HWNDPARENT = (-8)
    GWL_ID = (-12)
    GWL_STYLE = (-16)
    GWL_EXSTYLE = (-20)
    GWL_USERDATA = (-21)
End Enum
Public Enum GWLP_INDEX
    GWLP_WNDPROC = (-4)
    GWLP_HINSTANCE = (-6)
    GWLP_HWNDPARENT = (-8)
    GWLP_ID = (-12)
    GWLP_STYLE = (-16)
    GWLP_EXSTYLE = (-20)
    GWLP_USERDATA = (-21)
End Enum
Public Enum GWW_INDEX
    GWW_HINSTANCE = (-6)
    GWW_HWNDPARENT = (-8)
    GWW_ID = (-12)
End Enum

Public Enum HotKeyModifiers
	MOD_ALT = &H0001
	MOD_CONTROL = &H0002
	MOD_SHIFT = &H0004
	MOD_WIN = &H0008
	MOD_NOREPEAT = &H4000
    MOD_LEFT = &H8000&
    MOD_RIGHT = &H4000
    MOD_ON_KEYUP = &H0800
    MOD_IGNORE_ALL_MODIFIER = &H0400
End Enum

Public Enum SendMessageTimeoutFlags
	SMTO_NORMAL = &H0000
	SMTO_BLOCK = &H0001
	SMTO_ABORTIFHUNG = &H0002
	SMTO_NOTIMEOUTIFNOTHUNG = &H0008
	SMTO_ERRORONEXIT = &H0020
End Enum

Public Enum ChildWindowFromPointFlags
	CWP_ALL = &H0000
	CWP_SKIPINVISIBLE = &H0001
	CWP_SKIPDISABLED = &H0002
	CWP_SKIPTRANSPARENT = &H0004
End Enum

Public Enum WindowRegionTypes
	NULLREGION = 1
	SIMPLEREGION = 2
	COMPLEXREGION = 3
	RGN_ERROR = 0
End Enum

Public Enum AnimationTypeIDs
	IDANI_OPEN = 1
	IDANI_CAPTION = 3
End Enum

Public Enum DrawStateImageTypes
	DST_COMPLEX = &H0000
	DST_TEXT = &H0001
	DST_PREFIXTEXT = &H0002
	DST_ICON = &H0003
	DST_BITMAP = &H0004
End Enum
Public Enum DrawStateStates
	DSS_NORMAL = &H0000
	DSS_UNION = &H0010 /* Gray string appearance */
	DSS_DISABLED = &H0020
	DSS_MONO = &H0080
	DSS_HIDEPREFIX = &H0200
	DSS_PREFIXONLY = &H0400
	DSS_RIGHT = &H8000&
End Enum

Public Enum DrawCaptionFlags
	DC_ACTIVE = &H0001
	DC_SMALLCAP = &H0002
	DC_ICON = &H0004
	DC_TEXT = &H0008
	DC_INBUTTON = &H0010
	DC_GRADIENT = &H0020
	DC_BUTTONS = &H1000
End Enum

Public Enum DrawFrameControlTypes
	DFC_CAPTION = 1
	DFC_MENU = 2
	DFC_SCROLL = 3
	DFC_BUTTON = 4
	DFC_POPUPMENU = 5
End Enum
Public Enum DrawFrameControlStates
	DFCS_CAPTIONCLOSE = &H0000
	DFCS_CAPTIONMIN = &H0001
	DFCS_CAPTIONMAX = &H0002
	DFCS_CAPTIONRESTORE = &H0003
	DFCS_CAPTIONHELP = &H0004
	DFCS_MENUARROW = &H0000
	DFCS_MENUCHECK = &H0001
	DFCS_MENUBULLET = &H0002
	DFCS_MENUARROWRIGHT = &H0004
	DFCS_SCROLLUP = &H0000
	DFCS_SCROLLDOWN = &H0001
	DFCS_SCROLLLEFT = &H0002
	DFCS_SCROLLRIGHT = &H0003
	DFCS_SCROLLCOMBOBOX = &H0005
	DFCS_SCROLLSIZEGRIP = &H0008
	DFCS_SCROLLSIZEGRIPRIGHT = &H0010
	DFCS_BUTTONCHECK = &H0000
	DFCS_BUTTONRADIOIMAGE = &H0001
	DFCS_BUTTONRADIOMASK = &H0002
	DFCS_BUTTONRADIO = &H0004
	DFCS_BUTTON3STATE = &H0008
	DFCS_BUTTONPUSH = &H0010
	DFCS_INACTIVE = &H0100
	DFCS_PUSHED = &H0200
	DFCS_CHECKED = &H0400
	DFCS_TRANSPARENT = &H0800
	DFCS_HOT = &H1000
	DFCS_ADJUSTRECT = &H2000
	DFCS_FLAT = &H4000
	DFCS_MONO = &H8000&
End Enum

Public Enum GetDcExFlags
	DCX_WINDOW = &H00000001
	DCX_CACHE = &H00000002
	DCX_NORESETATTRS = &H00000004
	DCX_CLIPCHILDREN = &H00000008
	DCX_CLIPSIBLINGS = &H00000010
	DCX_PARENTCLIP = &H00000020
	DCX_EXCLUDERGN = &H00000040
	DCX_INTERSECTRGN = &H00000080
	DCX_EXCLUDEUPDATE = &H00000100
	DCX_INTERSECTUPDATE = &H00000200
	DCX_LOCKWINDOWUPDATE = &H00000400
	DCX_VALIDATE = &H00200000
End Enum

Public Enum BROADCAST_MSG_FLAGS
    BSF_QUERY = &H00000001
    BSF_IGNORECURRENTTASK = &H00000002
    BSF_FLUSHDISK = &H00000004
    BSF_NOHANG = &H00000008
    BSF_POSTMESSAGE = &H00000010
    BSF_FORCEIFHUNG = &H00000020
    BSF_NOTIMEOUTIFNOTHUNG = &H00000040
    BSF_ALLOWSFW = &H00000080
    BSF_SENDNOTIFYMESSAGE = &H00000100
    BSF_RETURNHDESK = &H00000200
    BSF_LUID = &H00000400
End Enum

Public Enum BROADCAST_MSG_RECIP
    BSM_ALLCOMPONENTS = &H00000000
    BSM_VXDS = &H00000001
    BSM_NETDRIVER = &H00000002
    BSM_INSTALLABLEDRIVERS = &H00000004
    BSM_APPLICATIONS = &H00000008
    BSM_ALLDESKTOPS = &H00000010
End Enum

Public Const BROADCAST_QUERY_DENY = &H424D5144

Public Type BSMINFO
    cbSize As Long
    hdesk As LongPtr
    hwnd As LongPtr
    luid As LUID
End Type

Public Const HWND_BROADCAST As LongPtr = &HFFFF&
Public Const HWND_MESSAGE As LongPtr = -3

Public Type CREATESTRUCTA
    lpCreateParams As LongPtr
    hInstance As LongPtr
    hMenu As LongPtr
    hwndParent As LongPtr
    cy As Long
    cx As Long
    y As Long
    x As Long
    style As WindowStyles
    lpszName As String
    lpszClass As String
    dwExStyle As WindowStylesEx
End Type
Public Type CREATESTRUCTW
    lpCreateParams As LongPtr
    hInstance As LongPtr
    hMenu As LongPtr
    hwndParent As LongPtr
    cy As Long
    cx As Long
    y As Long
    x As Long
    style As WindowStyles
    lpszName As LongPtr
    lpszClass As LongPtr
    dwExStyle As WindowStylesEx
End Type
'Alias CREATESTRUCT As CREATESTRUCTW
Public Type CREATESTRUCT
    lpCreateParams As LongPtr
    hInstance As LongPtr
    hMenu As LongPtr
    hwndParent As LongPtr
    cy As Long
    cx As Long
    y As Long
    x As Long
    style As WindowStyles
    lpszName As LongPtr
    lpszClass As LongPtr
    dwExStyle As WindowStylesEx
End Type

Public Type CLIENTCREATESTRUCT
    hWindowMenu As LongPtr
    idFirstChild As Long
End Type
Public Type MDICREATESTRUCTA
    szClass As String
    szTitle As String
    hOwner As LongPtr
    x As Long
    y As Long
    cx As Long
    cy As Long
    style As WindowStyles
    lParam As LongPtr
End Type
Public Type MDICREATESTRUCTW
    szClass As LongPtr
    szTitle As LongPtr
    hOwner As LongPtr
    x As Long
    y As Long
    cx As Long
    cy As Long
    style As WindowStyles
    lParam As LongPtr
End Type
'Alias MDICREATESTRUCT As MDICREATESTRUCTW
Public Type MDICREATESTRUCT
    szClass As LongPtr
    szTitle As LongPtr
    hOwner As LongPtr
    x As Long
    y As Long
    cx As Long
    cy As Long
    style As WindowStyles
    lParam As LongPtr
End Type

Public Enum WINDOWPLACEMENT_FLAGS
    WPF_SETMINPOSITION = &H0001
    WPF_RESTORETOMAXIMIZED = &H0002
    WPF_ASYNCWINDOWPLACEMENT = &H0004
End Enum
Public Type WINDOWPLACEMENT
    length As Long
    flags As WINDOWPLACEMENT_FLAGS
    showCmd As SHOWWINDOW
    ptMinPosition As POINT
    ptMaxPosition As POINT
    rcNormalPosition As RECT
End Type

Public Enum ISMEX_FLAGS
    ISMEX_NOSEND = &H00000000
    ISMEX_SEND = &H00000001
    ISMEX_NOTIFY = &H00000002
    ISMEX_CALLBACK = &H00000004
    ISMEX_REPLIED = &H00000008
End Enum

Public Enum DEVICE_NOTIFY_FLAGS
    DEVICE_NOTIFY_WINDOW_HANDLE = &H00000000
    DEVICE_NOTIFY_SERVICE_HANDLE = &H00000001
    DEVICE_NOTIFY_CALLBACK = &H00000002
    DEVICE_NOTIFY_ALL_INTERFACE_CLASSES = &H00000004
End Enum



Public Enum POWER_BUTTON_ACTION_INDEX
    POWERBUTTON_ACTION_INDEX_NOTHING = 0
    POWERBUTTON_ACTION_INDEX_SLEEP = 1
    POWERBUTTON_ACTION_INDEX_HIBERNATE = 2
    POWERBUTTON_ACTION_INDEX_SHUTDOWN = 3
    POWERBUTTON_ACTION_INDEX_TURN_OFF_THE_DISPLAY = 4
End Enum
Public Enum POWER_BUTTON_ACTION_VALUE
    POWERBUTTON_ACTION_VALUE_NOTHING = 0
    POWERBUTTON_ACTION_VALUE_SLEEP = 2
    POWERBUTTON_ACTION_VALUE_HIBERNATE = 3
    POWERBUTTON_ACTION_VALUE_SHUTDOWN = 6
    POWERBUTTON_ACTION_VALUE_TURN_OFF_THE_DISPLAY = 8
End Enum
Public Enum PERFSTATE_POLICY_CHANGE
    PERFSTATE_POLICY_CHANGE_IDEAL = 0
    PERFSTATE_POLICY_CHANGE_SINGLE = 1
    PERFSTATE_POLICY_CHANGE_ROCKET = 2
    PERFSTATE_POLICY_CHANGE_IDEAL_AGGRESSIVE = 3
    PERFSTATE_POLICY_CHANGE_DECREASE_MAX = PERFSTATE_POLICY_CHANGE_ROCKET
    PERFSTATE_POLICY_CHANGE_INCREASE_MAX = PERFSTATE_POLICY_CHANGE_IDEAL_AGGRESSIVE
End Enum
Public Enum PROCESSOR_THROTTLE_STATE
    PROCESSOR_THROTTLE_DISABLED = 0
    PROCESSOR_THROTTLE_ENABLED = 1
    PROCESSOR_THROTTLE_AUTOMATIC = 2
End Enum
Public Enum SYSTEM_POWER_CONDITION
    PoAc = 0
    PoDc = 1
    PoHot = 2
    PoConditionMaximum = 3
End Enum

Public Enum TOOLTIP_DISMISS_FLAGS
    TDF_REGISTER = &H0001
    TDF_UNREGISTER = &H0002
End Enum

Public Enum SetTimerMinMaxIntervals
    USER_TIMER_MAXIMUM = &H7FFFFFFF
    USER_TIMER_MINIMUM = &H0000000A
End Enum

Public Enum CoalescableTimerToleranceDefaults
    TIMERV_DEFAULT_COALESCING = (0)
    TIMERV_NO_COALESCING = (&HFFFFFFFF)
    TIMERV_COALESCING_MIN = (1)
    TIMERV_COALESCING_MAX = (&H7FFFFFF5)
End Enum

Public Declare PtrSafe Function wvsprintfA Lib "user32" (ByVal out As String, ByVal in As String, arglist As Byte) As Long
Public Declare PtrSafe Function wvsprintfW Lib "user32" (ByVal out As LongPtr, ByVal in As LongPtr, arglist As Byte) As Long
Public DeclareWide PtrSafe Function wvsprintf Lib "user32" Alias "wvsprintfW" (ByVal out As String, ByVal in As String, arglist As Byte) As Long

[Description("This is a macro wrapper for CreateWindowExA, you should call that directly.")]
Public Function CreateWindowA(ByVal lpClassName As String, ByVal lpWindowName As String, ByVal dwStyle As WindowStyles, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hWndParent As LongPtr, ByVal hMenu As LongPtr, ByVal hInstance As LongPtr, ByVal lpParam As LongPtr) As LongPtr
	Return CreateWindowExA(0, lpClassName, lpWindowName, dwStyle, X, Y, nWidth, nHeight, hWndParent, hMenu, hInstance, ByVal lpParam)
End Function
[Description("This is a macro wrapper for CreateWindowExW, you should call that directly.")]
Public Function CreateWindowW(ByVal lpClassName As LongPtr, ByVal lpWindowName As LongPtr, ByVal dwStyle As WindowStyles, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hWndParent As LongPtr, ByVal hMenu As LongPtr, ByVal hInstance As LongPtr, ByVal lpParam As LongPtr) As LongPtr
    Return CreateWindowExW(0, lpClassName, lpWindowName, dwStyle, X, Y, nWidth, nHeight, hWndParent, hMenu, hInstance, ByVal lpParam)
End Function
[Description("This is a macro wrapper for CreateWindowEx, you should call that directly.")]
Public Function CreateWindow(ByVal lpClassName As String, ByVal lpWindowName As String, ByVal dwStyle As WindowStyles, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hWndParent As LongPtr, ByVal hMenu As LongPtr, ByVal hInstance As LongPtr, ByVal lpParam As LongPtr) As LongPtr
    Return CreateWindowEx(0, lpClassName, lpWindowName, dwStyle, X, Y, nWidth, nHeight, hWndParent, hMenu, hInstance, ByVal lpParam)
End Function
Public DeclareWide PtrSafe Function CreateWindowEx Lib "user32" Alias "CreateWindowExW" (ByVal dwExStyle As WindowStylesEx, ByVal lpClassName As String, ByVal lpWindowName As String, ByVal dwStyle As WindowStyles, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hWndParent As LongPtr, ByVal hMenu As LongPtr, ByVal hInstance As LongPtr, lpParam As Any) As LongPtr
Public Declare PtrSafe Function CreateWindowExA Lib "user32" (ByVal dwExStyle As WindowStylesEx, ByVal lpClassName As String, ByVal lpWindowName As String, ByVal dwStyle As WindowStyles, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hWndParent As LongPtr, ByVal hMenu As LongPtr, ByVal hInstance As LongPtr, lpParam As Any) As LongPtr
Public Declare PtrSafe Function CreateWindowExW Lib "user32" (ByVal dwExStyle As WindowStylesEx, ByVal lpClassName As LongPtr, ByVal lpWindowName As LongPtr, ByVal dwStyle As WindowStyles, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hWndParent As LongPtr, ByVal hMenu As LongPtr, ByVal hInstance As LongPtr, lpParam As Any) As LongPtr
Public DeclareWide PtrSafe Function CreateMDIWindow Lib "user32" Alias "CreateMDIWindowW" (ByVal lpClassName As String, ByVal lpWindowName As String, ByVal dwStyle As WindowStyles, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hWndParent As LongPtr, ByVal hInstance As LongPtr, lpParam As Any) As LongPtr
Public Declare PtrSafe Function CreateMDIWindowA Lib "user32" (ByVal lpClassName As String, ByVal lpWindowName As String, ByVal dwStyle As WindowStyles, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hWndParent As LongPtr, ByVal hInstance As LongPtr, lpParam As Any) As LongPtr
Public Declare PtrSafe Function CreateMDIWindowW Lib "user32" (ByVal lpClassName As LongPtr, ByVal lpWindowName As LongPtr, ByVal dwStyle As WindowStyles, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hWndParent As LongPtr, ByVal hInstance As LongPtr, lpParam As Any) As LongPtr
Public Declare PtrSafe Function DestroyWindow Lib "user32" (ByVal hWnd As LongPtr) As Long
Public Declare PtrSafe Function DestroyIcon Lib "user32" (ByVal hIcon As LongPtr) As Long
Public DeclareWide PtrSafe Function CreateIconFromResource Lib "user32" (ByRef presbits As Any, ByVal dwResSize As Long, ByVal fIcon As BOOL, ByVal dwVer As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateIconFromResourceEx Lib "user32" (ByRef presbits As Any, ByVal dwResSize As Long, ByVal fIcon As BOOL, ByVal dwVer As Long, ByVal cxDesired As Long, ByVal cyDesired As Long, ByVal Flags As LoadResourceFlags) As LongPtr
Public Declare PtrSafe Function GetWindowModuleFileNameA Lib "user32" (ByVal hWnd As LongPtr, ByVal pszFileName As String, ByVal cchFileNameMax As Long) As Long
Public Declare PtrSafe Function GetWindowModuleFileNameW Lib "user32" (ByVal hWnd As LongPtr, ByVal pszFileName As LongPtr, ByVal cchFileNameMax As Long) As Long
Public DeclareWide PtrSafe Function GetWindowModuleFileName Lib "user32" Alias "GetWindowModuleFileNameW" (ByVal hWnd As LongPtr, ByVal pszFileName As String, ByVal cchFileNameMax As Long) As Long

Public Delegate Sub SendAsyncProc (ByVal hWnd As LongPtr, ByVal msg As Long, ByVal lParam As LongPtr, ByVal lResult As LongPtr)
[Description("⚠️ **NOTE:** Maps to Unicode version (SendMessageW), but uses DeclareWide, so there's still no need for conversion in most cases.")]
Public DeclareWide PtrSafe Function SendMessage Lib "user32" Alias "SendMessageW" (ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
Public Declare PtrSafe Function SendMessageA Lib "user32" (ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
Public DeclareWide PtrSafe Function SendMessageW Lib "user32" (ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any) As LongPtr
' Public Declare PtrSafe Function SendMessageCallbackA Lib "user32" (ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any, ByVal lpResultCallBack As SendAsyncProc, dwData As Any) As BOOL
' Public DeclareWide PtrSafe Function SendMessageCallbackW Lib "user32" (ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any, ByVal lpResultCallBack As SendAsyncProc, dwData As Any) As BOOL
' Public DeclareWide PtrSafe Function SendMessageCallback Lib "user32" Alias "SendMessageCallbackW" (ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any, ByVal lpResultCallBack As SendAsyncProc, dwData As Any) As BOOL
Public Declare PtrSafe Function SendMessageCallbackA Lib "user32" (ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any, ByVal lpResultCallBack As LongPtr, dwData As Any) As BOOL
Public DeclareWide PtrSafe Function SendMessageCallbackW Lib "user32" (ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any, ByVal lpResultCallBack As LongPtr, dwData As Any) As BOOL
Public DeclareWide PtrSafe Function SendMessageCallback Lib "user32" Alias "SendMessageCallbackW" (ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any, ByVal lpResultCallBack As LongPtr, dwData As Any) As BOOL
Public Declare PtrSafe Function SendMessageTimeoutA Lib "user32" (ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any, ByVal fuFlags As SendMessageTimeoutFlags, ByVal uTimeout As Long, lpdwResult As Any) As LongPtr
Public DeclareWide PtrSafe Function SendMessageTimeoutW Lib "user32" (ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any, ByVal fuFlags As SendMessageTimeoutFlags, ByVal uTimeout As Long, lpdwResult As Any) As LongPtr
Public DeclareWide PtrSafe Function SendMessageTimeout Lib "user32" Alias "SendMessageTimeoutW" (ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any, ByVal fuFlags As SendMessageTimeoutFlags, ByVal uTimeout As Long, lpdwResult As Any) As LongPtr
Public DeclareWide PtrSafe Function SendNotifyMessage Lib "user32" Alias "SendNotifyMessageW" (ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any) As BOOL
Public Declare PtrSafe Function SendNotifyMessageA Lib "user32" (ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any) As BOOL
Public DeclareWide PtrSafe Function SendNotifyMessageW Lib "user32" (ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, lParam As Any) As BOOL
Public Declare PtrSafe Function InSendMessage Lib "user32" () As BOOL
Public Declare PtrSafe Function InSendMessageEx Lib "user32" () As ISMEX_FLAGS
[Description("⚠️ **NOTE:** Maps to Unicode version (PostMessageW), but uses DeclareWide, so there's still no need for conversion in most cases.")]
Public DeclareWide PtrSafe Function PostMessage Lib "user32" Alias "PostMessageW" (ByVal hwnd As LongPtr, ByVal wMsg As Long, ByVal wParam As Long, ByRef lParam As Any) As Long
Public Declare PtrSafe Function PostMessageA Lib "user32" (ByVal hwnd As LongPtr, ByVal wMsg As Long, ByVal wParam As Long, ByRef lParam As Any) As Long
Public DeclareWide PtrSafe Function PostMessageW Lib "user32" (ByVal hwnd As LongPtr, ByVal wMsg As Long, ByVal wParam As Long, ByRef lParam As Any) As Long
Public Declare PtrSafe Function PostThreadMessageA Lib "user32" (ByVal idThread As Long, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any) As BOOL
Public Declare PtrSafe Function PostThreadMessageW Lib "user32" (ByVal idThread As Long, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any) As BOOL
Public DeclareWide PtrSafe Function PostThreadMessage Lib "user32" Alias "PostThreadMessageW" (ByVal idThread As Long, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any) As BOOL
Public Declare PtrSafe Function PostAppMessageA Lib "user32" Alias "PostThreadMessageA" (ByVal idThread As Long, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any) As BOOL
Public Declare PtrSafe Function PostAppMessageW Lib "user32" Alias "PostThreadMessageW" (ByVal idThread As Long, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any) As BOOL
Public DeclareWide PtrSafe Function PostAppMessage Lib "user32" Alias "PostThreadMessageW" (ByVal idThread As Long, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any) As BOOL
Public Declare PtrSafe Function BroadcastSystemMessageA Lib "user32" (ByVal flags As BROADCAST_MSG_FLAGS, lpInfo As BROADCAST_MSG_RECIP, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any) As Long
Public DeclareWide PtrSafe Function BroadcastSystemMessageW Lib "user32" (ByVal flags As BROADCAST_MSG_FLAGS, lpInfo As BROADCAST_MSG_RECIP, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any) As Long
Public DeclareWide PtrSafe Function BroadcastSystemMessage Lib "user32" Alias "BroadcastSystemMessageW" (ByVal flags As BROADCAST_MSG_FLAGS, lpInfo As BROADCAST_MSG_RECIP, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any) As Long
Public Declare PtrSafe Function BroadcastSystemMessageExA Lib "user32" (ByVal flags As BROADCAST_MSG_FLAGS, lpInfo As BROADCAST_MSG_RECIP, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any, pbsmInfo As BSMINFO) As Long
Public DeclareWide PtrSafe Function BroadcastSystemMessageExW Lib "user32" (ByVal flags As BROADCAST_MSG_FLAGS, lpInfo As BROADCAST_MSG_RECIP, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any, pbsmInfo As BSMINFO) As Long
Public DeclareWide PtrSafe Function BroadcastSystemMessageEx Lib "user32" Alias "BroadcastSystemMessageExW" (ByVal flags As BROADCAST_MSG_FLAGS, lpInfo As BROADCAST_MSG_RECIP, ByVal Msg As Long, ByVal wParam As LongPtr, lParam As Any, pbsmInfo As BSMINFO) As Long
Public DeclareWide PtrSafe Function PeekMessage Lib "user32" Alias "PeekMessageW" (ByRef lpmsg As MSG, ByVal hwnd As LongPtr, ByVal wMsgFilterMin As Long, ByVal wMsgFilterMax As Long, ByVal wRemoveMsg As PMOptions) As Long
Public Declare PtrSafe Function PeekMessageA Lib "user32" (ByRef lpmsg As MSG, ByVal hwnd As LongPtr, ByVal wMsgFilterMin As Long, ByVal wMsgFilterMax As Long, ByVal wRemoveMsg As PMOptions) As Long
Public Declare PtrSafe Function PeekMessageW Lib "user32" (ByRef lpmsg As MSG, ByVal hwnd As LongPtr, ByVal wMsgFilterMin As Long, ByVal wMsgFilterMax As Long, ByVal wRemoveMsg As PMOptions) As Long
Public Declare PtrSafe Function GetInputState Lib "user32" () As BOOL
Public Declare PtrSafe Function GetQueueStatus Lib "user32" (ByVal dwFlags As QueueStatusFlags) As Long
Public Declare PtrSafe Function MsgWaitForMultipleObjects Lib "user32" (ByVal nCount As Long, pHandles As LongPtr, ByVal fWaitAll As BOOL, ByVal dwMilliseconds As Long, ByVal dwWakeMask As QueueStatusFlags) As WaitForObjOutcomes
Public Declare PtrSafe Function MsgWaitForMultipleObjectsEx Lib "user32" (ByVal nCount As Long, pHandles As LongPtr, ByVal dwMilliseconds As Long, ByVal dwWakeMask As QueueStatusFlags, ByVal dwFlags As MWMO_FLAGS) As WaitForObjOutcomes
Public Declare PtrSafe Function TranslateMDISysAccel Lib "user32" (ByVal hWndClient As LongPtr, lpMsg As MSG) As BOOL
Public Declare PtrSafe Function TranslateMessage Lib "user32" (ByRef lpmsg As MSG) As BOOL
Public DeclareWide PtrSafe Function DispatchMessage Lib "user32" Alias "DispatchMessageW" (ByRef lpmsg As MSG) As LongPtr
Public Declare PtrSafe Function DispatchMessageA Lib "user32" (ByRef lpmsg As MSG) As LongPtr
Public Declare PtrSafe Function DispatchMessageW Lib "user32" (ByRef lpmsg As MSG) As LongPtr
Public DeclareWide PtrSafe Function DefWindowProc Lib "user32" Alias "DefWindowProcW" (ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public Declare PtrSafe Function DefWindowProcA Lib "user32" (ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public Declare PtrSafe Function DefWindowProcW Lib "user32" (ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function DefMDIChildProc Lib "user32" Alias "DefMDIChildProcW" (ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public Declare PtrSafe Function DefMDIChildProcA Lib "user32" (ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public Declare PtrSafe Function DefMDIChildProcW Lib "user32" (ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function DefFrameProc Lib "user32" Alias "DefFrameProcW" (ByVal hWnd As LongPtr, ByVal hWndMDIClient As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public Declare PtrSafe Function DefFrameProcA Lib "user32" (ByVal hWnd As LongPtr, ByVal hWndMDIClient As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public Declare PtrSafe Function DefFrameProcW Lib "user32" (ByVal hWnd As LongPtr, ByVal hWndMDIClient As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function GetMessage Lib "user32" Alias "GetMessageW" (lpMsg As MSG, ByVal hWnd As LongPtr, ByVal wMsgFilterMin As Long, ByVal wMsgFilterMax As Long) As Long
Public Declare PtrSafe Function GetMessageA Lib "user32" (lpMsg As MSG, ByVal hWnd As LongPtr, ByVal wMsgFilterMin As Long, ByVal wMsgFilterMax As Long) As Long
Public Declare PtrSafe Function GetMessageW Lib "user32" (lpMsg As MSG, ByVal hWnd As LongPtr, ByVal wMsgFilterMin As Long, ByVal wMsgFilterMax As Long) As Long
Public Declare PtrSafe Function GetMessagePos Lib "user32" () As Long
Public Declare PtrSafe Function GetMessageTime Lib "user32" () As Long
Public Declare PtrSafe Function WaitMessage Lib "user32" () As BOOL
Public Declare PtrSafe Function ReplyMessage Lib "user32" (ByVal lResult As LongPtr) As BOOL
Public Declare PtrSafe Sub PostQuitMessage Lib "user32" (ByVal nExitCode As Long)
Public DeclareWide PtrSafe Function CallWindowProc Lib "user32" Alias "CallWindowProcW" (ByVal lpPrevWndFunc As LongPtr, ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public Declare PtrSafe Function CallWindowProcA Lib "user32" (ByVal lpPrevWndFunc As LongPtr, ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr
Public Declare PtrSafe Function CallWindowProcW Lib "user32" (ByVal lpPrevWndFunc As LongPtr, ByVal hWnd As LongPtr, ByVal Msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr

Public Delegate Function EnumWindowsProc (ByVal hwnd As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Delegate Function EnumChildProc (ByVal hwnd As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Delegate Function EnumThreadWndProc (ByVal hwnd As LongPtr, ByVal lParam As LongPtr) As BOOL
' Public Declare PtrSafe Function EnumWindows Lib "user32" (ByVal lpfn As EnumWindowsProc, ByVal lParam As LongPtr) As BOOL
' Public Declare PtrSafe Function EnumChildWindows Lib "user32" (ByVal hWndParent As LongPtr, ByVal lpfn As EnumChildProc, ByVal lParam As LongPtr) As BOOL
' Public Declare PtrSafe Function EnumThreadWindows Lib "user32" (ByVal dwThreadId As Long, ByVal lpfn As EnumThreadWndProc, ByVal lParam As LongPtr) As BOOL
' Public Function EnumTaskWindows(ByVal hTask As LongPtr, ByVal lpfn As EnumThreadWndProc, ByVal lParam As LongPtr) As BOOL: Return EnumThreadWindows(HandleToULong(hTask), lpfn, lParam): End Function
Public Declare PtrSafe Function EnumWindows Lib "user32" (ByVal lpfn As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumChildWindows Lib "user32" (ByVal hWndParent As LongPtr, ByVal lpfn As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumThreadWindows Lib "user32" (ByVal dwThreadId As Long, ByVal lpfn As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Function EnumTaskWindows(ByVal hTask As LongPtr, ByVal lpfn As LongPtr, ByVal lParam As LongPtr) As BOOL: Return EnumThreadWindows(HandleToULong(hTask), lpfn, lParam): End Function
Public Declare PtrSafe Function GetClassNameA Lib "user32" (ByVal hwnd As LongPtr, ByVal lpClassName As String, ByVal nMaxCount As Long) As Long
Public Declare PtrSafe Function GetClassNameW Lib "user32" (ByVal hwnd As LongPtr, ByVal lpClassName As LongPtr, ByVal nMaxCount As Long) As Long
Public DeclareWide PtrSafe Function GetClassName Lib "user32" Alias "GetClassNameW" (ByVal hwnd As LongPtr, ByVal lpClassName As String, ByVal nMaxCount As Long) As Long

Public Delegate Sub TimerProc (ByVal hWnd As LongPtr, ByVal uMsg As Long, ByVal TimerID As LongPtr, ByVal Tick As Long)
' Public Declare PtrSafe Function SetTimer Lib "user32" (ByVal hwnd As LongPtr, ByVal nIDEvent As LongPtr, ByVal uElapse As Long, ByVal lpTimerFunc As TimerProc) As LongPtr
' Public Declare PtrSafe Function SetCoalescableTimer Lib "user32" (ByVal hwnd As LongPtr, ByVal nIDEvent As LongPtr, ByVal uElapse As Long, ByVal lpTimerFunc As TimerProc, [TypeHint(CoalescableTimerToleranceDefaults)] ByVal uToleranceDelay As Long) As LongPtr
Public Declare PtrSafe Function SetTimer Lib "user32" (ByVal hwnd As LongPtr, ByVal nIDEvent As LongPtr, ByVal uElapse As Long, ByVal lpTimerFunc As LongPtr) As LongPtr
Public Declare PtrSafe Function SetCoalescableTimer Lib "user32" (ByVal hwnd As LongPtr, ByVal nIDEvent As LongPtr, ByVal uElapse As Long, ByVal lpTimerFunc As LongPtr, [TypeHint(CoalescableTimerToleranceDefaults)] ByVal uToleranceDelay As Long) As LongPtr
Public Declare PtrSafe Function KillTimer Lib "user32" (ByVal hwnd As LongPtr, ByVal nIDEvent As LongPtr) As BOOL
Public Declare PtrSafe Function RegisterShellHookWindow Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public Declare PtrSafe Function DeregisterShellHookWindow Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public Declare PtrSafe Function SetPropA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As String, Optional ByVal hData As LongPtr) As BOOL
Public Declare PtrSafe Function SetPropW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As LongPtr, Optional ByVal hData As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetProp Lib "user32" Alias "SetPropW" (ByVal hWnd As LongPtr, ByVal lpString As String, Optional ByVal hData As LongPtr) As BOOL
Public Declare PtrSafe Function GetPropA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As String) As LongPtr
Public Declare PtrSafe Function GetPropW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function GetProp Lib "user32" Alias "GetPropW" (ByVal hWnd As LongPtr, ByVal lpString As String) As LongPtr
Public Declare PtrSafe Function RemovePropA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As String) As LongPtr
Public Declare PtrSafe Function RemovePropW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function RemoveProp Lib "user32" Alias "RemovePropW" (ByVal hWnd As LongPtr, ByVal lpString As String) As LongPtr

Public Delegate Function PropEnumProcA (ByVal hWnd As LongPtr, ByVal lpsz As LongPtr, ByVal Handle As LongPtr) As BOOL
Public Delegate Function PropEnumProcW (ByVal hWnd As LongPtr, ByVal lpsz As LongPtr, ByVal Handle As LongPtr) As BOOL
Public Delegate Function PropEnumProcExA (ByVal hWnd As LongPtr, ByVal lpsz As LongPtr, ByVal Handle As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Delegate Function PropEnumProcExW (ByVal hWnd As LongPtr, ByVal lpsz As LongPtr, ByVal Handle As LongPtr, ByVal lParam As LongPtr) As BOOL

' Public Declare PtrSafe Function EnumPropsA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As PropEnumProcA) As Long
' Public Declare PtrSafe Function EnumPropsW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As PropEnumProcW) As Long
' Public DeclareWide PtrSafe Function EnumProps Lib "user32" Alias "EnumPropsW" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As PropEnumProcW) As Long
' Public Declare PtrSafe Function EnumPropsExA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As PropEnumProcExA, ByVal lParam As LongPtr) As Long
' Public Declare PtrSafe Function EnumPropsExW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As PropEnumProcExW, ByVal lParam As LongPtr) As Long
' Public DeclareWide PtrSafe Function EnumPropsEx Lib "user32" Alias "EnumPropsExW" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As PropEnumProcExW, ByVal lParam As LongPtr) As Long
Public Declare PtrSafe Function EnumPropsA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As LongPtr) As Long
Public Declare PtrSafe Function EnumPropsW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As LongPtr) As Long
Public DeclareWide PtrSafe Function EnumProps Lib "user32" Alias "EnumPropsW" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As LongPtr) As Long
Public Declare PtrSafe Function EnumPropsExA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As Long
Public Declare PtrSafe Function EnumPropsExW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As Long
Public DeclareWide PtrSafe Function EnumPropsEx Lib "user32" Alias "EnumPropsExW" (ByVal hWnd As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As Long
Public Declare PtrSafe Function GetShellWindow Lib "user32" () As LongPtr
Public Declare PtrSafe Function GetDesktopWindow Lib "user32" () As LongPtr
Public Declare PtrSafe Function RegisterHotKey Lib "user32" (ByVal hWnd As LongPtr, ByVal id As Long, ByVal fsModifiers As HotKeyModifiers, ByVal vk As VirtualKeyCodes) As BOOL
Public Declare PtrSafe Function UnregisterHotKey Lib "user32" (ByVal hWnd As LongPtr, ByVal id As Long) As BOOL
Public Declare PtrSafe Function AttachThreadInput Lib "user32" (ByVal idAttach As Long, ByVal idAttachTo As Long, ByVal fAttach As BOOL) As BOOL
Public Declare PtrSafe Function RegisterPowerSettingNotification Lib "user32" (ByVal hRecipient As LongPtr, PowerSettingGuid As UUID, ByVal Flags As DEVICE_NOTIFY_FLAGS) As LongPtr
Public Declare PtrSafe Function UnregisterPowerSettingNotification Lib "user32" (ByVal Handle As LongPtr) As BOOL
Public Declare PtrSafe Function RegisterForTooltipDismissNotification Lib "user32" (ByVal hWnd As LongPtr, ByVal tdFlags As TOOLTIP_DISMISS_FLAGS) As BOOL
Public Declare PtrSafe Function RegisterDeviceNotificationA Lib "user32" (ByVal hRecipient As LongPtr, NotificationFilter As Any, ByVal Flags As DEVICE_NOTIFY_FLAGS) As LongPtr
Public Declare PtrSafe Function RegisterDeviceNotificationW Lib "user32" (ByVal hRecipient As LongPtr, NotificationFilter As Any, ByVal Flags As DEVICE_NOTIFY_FLAGS) As LongPtr
Public DeclareWide PtrSafe Function RegisterDeviceNotification Lib "user32" Alias "RegisterDeviceNotificationW" (ByVal hRecipient As LongPtr, NotificationFilter As Any, ByVal Flags As DEVICE_NOTIFY_FLAGS) As LongPtr
Public Declare PtrSafe Function UnregisterDeviceNotification Lib "user32" (ByVal Handle As LongPtr) As BOOL
Public Declare PtrSafe Function RegisterSuspendResumeNotification Lib "user32" (ByVal Recipient As LongPtr, ByVal Flags As DEVICE_NOTIFY_FLAGS) As LongPtr
Public Declare PtrSafe Function UnregisterSuspendResumeNotification Lib "user32" (ByVal Handle As LongPtr) As BOOL


Public Declare PtrSafe Function GetWindowWord Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GWW_INDEX) As Integer
Public Declare PtrSafe Function SetWindowWord Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GWW_INDEX, ByVal wNewWord As Integer) As Integer
Public Declare PtrSafe Function GetClassWord Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GCW_Index) As Integer
Public Declare PtrSafe Function SetClassWord Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GCW_Index, ByVal wNewWord As Integer) As Integer
#If Win64 Then
Public Declare PtrSafe Function GetWindowLong Lib "user32" Alias "GetWindowLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GWL_INDEX) As LongPtr
Public Declare PtrSafe Function GetWindowLong32 Lib "user32" Alias "GetWindowLongW" (ByVal hWnd As LongPtr, ByVal nIndex As GWL_INDEX) As Long
Public Declare PtrSafe Function SetWindowLong Lib "user32" Alias "SetWindowLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GWL_INDEX, ByVal dwNewLong As LongPtr) As LongPtr
Public Declare PtrSafe Function SetWindowLong32 Lib "user32" Alias "SetWindowLongW" (ByVal hWnd As LongPtr, ByVal nIndex As GWL_INDEX, ByVal dwNewLong As Long) As Long

Public Declare PtrSafe Function GetClassLong Lib "user32" Alias "GetClassLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GCL_Index) As LongPtr
Public Declare PtrSafe Function SetClassLong Lib "user32" Alias "SetClassLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GCL_Index, ByVal dwNewLong As LongPtr) As LongPtr
Public Declare PtrSafe Function GetClassLong32 Lib "user32" Alias "GetClassLongW" (ByVal hWnd As LongPtr, ByVal nIndex As GCL_Index) As Long
Public Declare PtrSafe Function SetClassLong32 Lib "user32" Alias "SetClassLongW" (ByVal hWnd As LongPtr, ByVal nIndex As GCL_Index, ByVal dwNewLong As Long) As Long

Public Declare PtrSafe Function GetWindowLongPtrA Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GWLP_INDEX) As LongPtr
Public Declare PtrSafe Function GetWindowLongPtrW Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GWLP_INDEX) As LongPtr
Public Declare PtrSafe Function GetWindowLongPtr Lib "user32" Alias "GetWindowLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GWLP_INDEX) As LongPtr
Public Declare PtrSafe Function SetWindowLongPtrA Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GWLP_INDEX, ByVal dwNewLong As LongPtr) As LongPtr
Public Declare PtrSafe Function SetWindowLongPtrW Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GWLP_INDEX, ByVal dwNewLong As LongPtr) As LongPtr
Public Declare PtrSafe Function SetWindowLongPtr Lib "user32" Alias "SetWindowLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GWLP_INDEX, ByVal dwNewLong As LongPtr) As LongPtr
Public Declare PtrSafe Function GetClassLongPtrA Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GCLP_Index) As LongPtr
Public Declare PtrSafe Function GetClassLongPtrW Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GCLP_Index) As LongPtr
Public Declare PtrSafe Function GetClassLongPtr Lib "user32" Alias "GetClassLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GCLP_Index) As LongPtr
Public Declare PtrSafe Function SetClassLongPtrA Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GCLP_Index, ByVal dwNewLong As LongPtr) As LongPtr
Public Declare PtrSafe Function SetClassLongPtrW Lib "user32" (ByVal hWnd As LongPtr, ByVal nIndex As GCLP_Index, ByVal dwNewLong As LongPtr) As LongPtr
Public Declare PtrSafe Function SetClassLongPtr Lib "user32" Alias "SetClassLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GCLP_Index, ByVal dwNewLong As LongPtr) As LongPtr
Public Declare PtrSafe Function GetWindowLongA Lib "user32" Alias "GetWindowLongPtrA" (ByVal hWnd As LongPtr, ByVal nIndex As GWL_INDEX) As LongPtr
Public Declare PtrSafe Function SetWindowLongA Lib "user32" Alias "SetWindowLongPtrA" (ByVal hWnd As LongPtr, ByVal nIndex As GWL_INDEX, ByVal dwNewLong As LongPtr) As LongPtr
Public Declare PtrSafe Function GetClassLongA Lib "user32" Alias "GetClassLongPtrA" (ByVal hWnd As LongPtr, ByVal nIndex As GCL_Index) As LongPtr
Public Declare PtrSafe Function SetClassLongA Lib "user32" Alias "SetClassLongPtrA" (ByVal hWnd As LongPtr, ByVal nIndex As GCL_Index, ByVal dwNewLong As LongPtr) As LongPtr
Public Declare PtrSafe Function GetWindowLongW Lib "user32" Alias "GetWindowLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GWL_INDEX) As LongPtr
Public Declare PtrSafe Function SetWindowLongW Lib "user32" Alias "SetWindowLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GWL_INDEX, ByVal dwNewLong As LongPtr) As LongPtr
Public Declare PtrSafe Function GetClassLongW Lib "user32" Alias "GetClassLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GCL_Index) As LongPtr
Public Declare PtrSafe Function SetClassLongW Lib "user32" Alias "SetClassLongPtrW" (ByVal hWnd As LongPtr, ByVal nIndex As GCL_Index, ByVal dwNewLong As LongPtr) As LongPtr
#Else
Public Declare Function GetWindowLong Lib "user32" Alias "GetWindowLongW" (ByVal hWnd As Long, ByVal nIndex As GWL_INDEX) As Long
Public Declare Function SetWindowLong Lib "user32" Alias "SetWindowLongW" (ByVal hwnd As Long, ByVal nIndex As GWL_INDEX, ByVal dwNewLong As Long) As Long
Public Declare Function GetClassLong Lib "user32" Alias "GetClassLongW" (ByVal hWnd As Long, ByVal nIndex As GCL_Index) As Long
Public Declare Function SetClassLong Lib "user32" Alias "SetClassLongW" (ByVal hwnd As Long, ByVal nIndex As GCL_Index, ByVal dwNewLong As Long) As Long
Public Declare Function GetWindowLongA Lib "user32" (ByVal hWnd As Long, ByVal nIndex As GWL_INDEX) As Long
Public Declare Function SetWindowLongA Lib "user32" (ByVal hwnd As Long, ByVal nIndex As GWL_INDEX, ByVal dwNewLong As Long) As Long
Public Declare Function GetClassLongA Lib "user32" (ByVal hWnd As Long, ByVal nIndex As GCL_Index) As Long
Public Declare Function SetClassLongA Lib "user32" (ByVal hwnd As Long, ByVal nIndex As GCL_Index, ByVal dwNewLong As Long) As Long
Public Declare Function GetWindowLongW Lib "user32" (ByVal hWnd As Long, ByVal nIndex As GWL_INDEX) As Long
Public Declare Function SetWindowLongW Lib "user32" (ByVal hwnd As Long, ByVal nIndex As GWL_INDEX, ByVal dwNewLong As Long) As Long
Public Declare Function GetClassLongW Lib "user32" (ByVal hWnd As Long, ByVal nIndex As GCL_Index) As Long
Public Declare Function SetClassLongW Lib "user32" (ByVal hwnd As Long, ByVal nIndex As GCL_Index, ByVal dwNewLong As Long) As Long
#End If

Public Declare PtrSafe Function GetSystemMetrics Lib "user32" (ByVal nIndex As SystemMetrics) As Long
Public Declare PtrSafe Function SystemParametersInfoA Lib "user32" (ByVal uiAction As SPI, ByVal uiParam As Long, ByRef pvParam As Any, ByVal fWinIni As SPIF) As BOOL
Public Declare PtrSafe Function SystemParametersInfoW Lib "user32" (ByVal uiAction As SPI, ByVal uiParam As Long, ByRef pvParam As Any, ByVal fWinIni As SPIF) As BOOL
Public DeclareWide PtrSafe Function SystemParametersInfo Lib "user32" Alias "SystemParametersInfoW" (ByVal uiAction As SPI, ByVal uiParam As Long, ByRef pvParam As Any, ByVal fWinIni As SPIF) As BOOL
Public Declare PtrSafe Function SystemParametersInfoForDpi Lib "user32" (ByVal uiAction As SPI, ByVal uiParam As Long, ByRef pvParam As Any, ByVal fWinIni As SPIF, ByVal dpi As Long) As BOOL
Public Declare PtrSafe Function GetTouchInputInfo Lib "user32" (ByVal hTouchInput As LongPtr, ByVal cInputs As Long, pInputs As TOUCHINPUT, ByVal cbSize As Long) As BOOL
Public Declare PtrSafe Function CloseTouchInputHandle Lib "user32" (ByVal hTouchInput As LongPtr) As BOOL
Public Declare PtrSafe Function RegisterTouchWindow Lib "user32" (ByVal hwnd As LongPtr, ByVal ulFlags As RegTouchWindowFlags) As BOOL
Public Declare PtrSafe Function UnregisterTouchWindow Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public Declare PtrSafe Function IsTouchWindow Lib "user32" (ByVal hwnd As LongPtr, pulFlags As RegTouchWindowFlags) As BOOL
Public Declare PtrSafe Function SetAdditionalForegroundBoostProcesses Lib "user32" (ByVal topLevelWindow As LongPtr, ByVal processHandleCount As Long, processHandleArray As LongPtr) As BOOL
Public Declare PtrSafe Function SetProcessRestrictionExemption Lib "user32" (ByVal fEnableExemption As BOOL) As BOOL


Public Declare PtrSafe Function FindWindowW Lib "user32" (ByVal Class As LongPtr, ByVal Title As LongPtr) As LongPtr
Public Declare PtrSafe Function FindWindowA Lib "user32" (ByVal Class As String, ByVal Title As String) As LongPtr
Public DeclareWide PtrSafe Function FindWindow Lib "user32" Alias "FindWindowW" (ByVal Class As String, ByVal Title As String) As LongPtr
Public DeclareWide PtrSafe Function FindWindowEx Lib "user32" Alias "FindWindowExW" (ByVal hwndParent As LongPtr, ByVal hWndChildAfter As LongPtr, ByVal lpszClass As String, ByVal lpszWindow As String) As LongPtr
Public Declare PtrSafe Function FindWindowExW Lib "user32" (ByVal hwndParent As LongPtr, ByVal hWndChildAfter As LongPtr, ByVal lpszClass As LongPtr, ByVal lpszWindow As LongPtr) As LongPtr
Public Declare PtrSafe Function FindWindowExA Lib "user32" (ByVal hwndParent As LongPtr, ByVal hWndChildAfter As LongPtr, ByVal lpszClass As String, ByVal lpszWindow As String) As LongPtr
Public Declare PtrSafe Function RegisterWindowMessageA Lib "user32" (ByVal lpString As String) As Long
Public Declare PtrSafe Function RegisterWindowMessageW Lib "user32" (ByVal lpString As LongPtr) As Long
Public DeclareWide PtrSafe Function RegisterWindowMessage Lib "user32" Alias "RegisterWindowMessageW" (ByVal lpString As String) As Long
Public Declare PtrSafe Function RegisterClassA Lib "user32" (lpWndClass As WNDCLASSA) As Integer
Public Declare PtrSafe Function RegisterClassW Lib "user32" (lpWndClass As WNDCLASSW) As Integer
Public DeclareWide PtrSafe Function RegisterClass Lib "user32" Alias "RegisterClassW" (lpWndClass As WNDCLASS) As Integer
Public Declare PtrSafe Function RegisterClassExA Lib "user32" (pcWndClassEx As WNDCLASSEXA) As Integer
Public Declare PtrSafe Function RegisterClassExW Lib "user32" (pcWndClassEx As WNDCLASSEXW) As Integer
Public DeclareWide PtrSafe Function RegisterClassEx Lib "user32" Alias "RegisterClassExW" (pcWndClassEx As WNDCLASSEXW) As Integer
Public Declare PtrSafe Function UnregisterClassA Lib "user32" (ByVal lpClassName As String, Optional ByVal hInstance As LongPtr) As Long
Public Declare PtrSafe Function UnregisterClassW Lib "user32" (ByVal lpClassName As LongPtr, Optional ByVal hInstance As LongPtr) As Long
Public DeclareWide PtrSafe Function UnregisterClass Lib "user32" Alias "UnregisterClassW" (ByVal lpClassName As String, Optional ByVal hInstance As LongPtr) As Long
Public Declare PtrSafe Function GetClassInfoA Lib "user32" (ByVal hInstance As LongPtr, ByVal lpClassName As String, lpWndClass As WNDCLASSA) As BOOL
Public Declare PtrSafe Function GetClassInfoA Lib "user32" (ByVal hInstance As LongPtr, ByVal lpClassName As LongPtr, lpWndClass As WNDCLASSA) As BOOL
Public Declare PtrSafe Function GetClassInfoW Lib "user32" (ByVal hInstance As LongPtr, ByVal lpClassName As LongPtr, lpWndClass As WNDCLASSW) As BOOL
Public DeclareWide PtrSafe Function GetClassInfo Lib "user32" Alias "GetClassInfoW" (ByVal hInstance As LongPtr, ByVal lpClassName As String, lpWndClass As WNDCLASS) As BOOL
Public DeclareWide PtrSafe Function GetClassInfo Lib "user32" Alias "GetClassInfoW" (ByVal hInstance As LongPtr, ByVal lpClassName As LongPtr, lpWndClass As WNDCLASS) As BOOL
Public Declare PtrSafe Function GetClassInfoExA Lib "user32" (ByVal hInstance As LongPtr, ByVal lpClassName As String, lpWndClass As WNDCLASSEXA) As BOOL
Public Declare PtrSafe Function GetClassInfoExA Lib "user32" (ByVal hInstance As LongPtr, ByVal lpClassName As LongPtr, lpWndClass As WNDCLASSEXA) As BOOL
Public Declare PtrSafe Function GetClassInfoExW Lib "user32" (ByVal hInstance As LongPtr, ByVal lpClassName As LongPtr, lpWndClass As WNDCLASSEXW) As BOOL
Public DeclareWide PtrSafe Function GetClassInfoEx Lib "user32" Alias "GetClassInfoExW" (ByVal hInstance As LongPtr, ByVal lpClassName As String, lpWndClass As WNDCLASSEX) As BOOL
Public DeclareWide PtrSafe Function GetClassInfoEx Lib "user32" Alias "GetClassInfoExW" (ByVal hInstance As LongPtr, ByVal lpClassName As LongPtr, lpWndClass As WNDCLASSEX) As BOOL



Public Enum SETWINEVENT_FLAGS
    WINEVENT_OUTOFCONTEXT = &H0000  ' Events are ASYNC
    WINEVENT_SKIPOWNTHREAD = &H0001  ' Don't call back for events on installer's thread
    WINEVENT_SKIPOWNPROCESS = &H0002  ' Don't call back for events on installer's process
    WINEVENT_INCONTEXT = &H0004  ' Events are SYNC, this causes your dll to be injected into every process
End Enum

Public Enum WINEVENTS
    EVENT_MIN = &H00000001
    EVENT_MAX = &H7FFFFFFF
/*
 *  EVENT_SYSTEM_SOUND
 *  Sent when a sound is played.  Currently nothing is generating this, we
 *  this event when a system sound (for menus, etc) is played.  Apps
 *  generate this, if accessible, when a private sound is played.  For
 *  example, if Mail plays a "New Mail" sound.
 *
 *  System Sounds:
 *  (Generated by PlaySoundEvent in USER itself)
 *      hwnd            is NULL
 *      idObject        is OBJID_SOUND
 *      idChild         is sound child ID if one
 *  App Sounds:
 *  (PlaySoundEvent won't generate notification; up to app)
 *      hwnd + idObject gets interface pointer to Sound object
 *      idChild identifies the sound in question
 *  are going to be cleaning up the SOUNDSENTRY feature in the control panel
 *  and will use this at that time.  Applications implementing WinEvents
 *  are perfectly welcome to use it.  Clients of IAccessible* will simply
 *  turn around and get back a non-visual object that describes the sound.
 */
    EVENT_SYSTEM_SOUND = &H0001

/*
 * EVENT_SYSTEM_ALERT
 * System Alerts:
 * (Generated by MessageBox() calls for example)
 *      hwnd            is hwndMessageBox
 *      idObject        is OBJID_ALERT
 * App Alerts:
 * (Generated whenever)
 *      hwnd+idObject gets interface pointer to Alert
 */
    EVENT_SYSTEM_ALERT = &H0002

/*
 * EVENT_SYSTEM_FOREGROUND
 * Sent when the foreground (active) window changes, even if it is changing
 * to another window in the same thread as the previous one.
 *      hwnd            is hwndNewForeground
 *      idObject        is OBJID_WINDOW
 *      idChild    is INDEXID_OBJECT
 */
    EVENT_SYSTEM_FOREGROUND = &H0003

/*
 * Menu
 *      hwnd            is window (top level window or popup menu window)
 *      idObject        is ID of control (OBJID_MENU, OBJID_SYSMENU, OBJID_SELF for popup)
 *      idChild         is CHILDID_SELF
 *
 * EVENT_SYSTEM_MENUSTART
 * EVENT_SYSTEM_MENUEND
 * For MENUSTART, hwnd+idObject+idChild refers to the control with the menu bar,
 *  or the control bringing up the context menu.
 *
 * Sent when entering into and leaving from menu mode (system, app bar, and
 * track popups).
 */
    EVENT_SYSTEM_MENUSTART = &H0004
    EVENT_SYSTEM_MENUEND = &H0005

/*
 * EVENT_SYSTEM_MENUPOPUPSTART
 * EVENT_SYSTEM_MENUPOPUPEND
 * Sent when a menu popup comes up and just before it is taken down.  Note
 * that for a call to TrackPopupMenu(), a client will see EVENT_SYSTEM_MENUSTART
 * followed almost immediately by EVENT_SYSTEM_MENUPOPUPSTART for the popup
 * being shown.
 *
 * For MENUPOPUP, hwnd+idObject+idChild refers to the NEW popup coming up, not the
 * parent item which is hierarchical.  You can get the parent menu/popup by
 * asking for the accParent object.
 */
    EVENT_SYSTEM_MENUPOPUPSTART = &H0006
    EVENT_SYSTEM_MENUPOPUPEND = &H0007


/*
 * EVENT_SYSTEM_CAPTURESTART
 * EVENT_SYSTEM_CAPTUREEND
 * Sent when a window takes the capture and releases the capture.
 */
    EVENT_SYSTEM_CAPTURESTART = &H0008
    EVENT_SYSTEM_CAPTUREEND = &H0009

/*
 * Move Size
 * EVENT_SYSTEM_MOVESIZESTART
 * EVENT_SYSTEM_MOVESIZEEND
 * Sent when a window enters and leaves move-size dragging mode.
 */
    EVENT_SYSTEM_MOVESIZESTART = &H000A
    EVENT_SYSTEM_MOVESIZEEND = &H000B

/*
 * Context Help
 * EVENT_SYSTEM_CONTEXTHELPSTART
 * EVENT_SYSTEM_CONTEXTHELPEND
 * Sent when a window enters and leaves context sensitive help mode.
 */
    EVENT_SYSTEM_CONTEXTHELPSTART = &H000C
    EVENT_SYSTEM_CONTEXTHELPEND = &H000D

/*
 * Drag & Drop
 * EVENT_SYSTEM_DRAGDROPSTART
 * EVENT_SYSTEM_DRAGDROPEND
 * Send the START notification just before going into drag&drop loop.  Send
 * the END notification just after canceling out.
 * Note that it is up to apps and OLE to generate this, since the system
 * doesn't know.  Like EVENT_SYSTEM_SOUND, it will be a while before this
 * is prevalent.
 */
    EVENT_SYSTEM_DRAGDROPSTART = &H000E
    EVENT_SYSTEM_DRAGDROPEND = &H000F

/*
 * Dialog
 * Send the START notification right after the dialog is completely
 *  initialized and visible.  Send the END right before the dialog
 *  is hidden and goes away.
 * EVENT_SYSTEM_DIALOGSTART
 * EVENT_SYSTEM_DIALOGEND
 */
    EVENT_SYSTEM_DIALOGSTART = &H0010
    EVENT_SYSTEM_DIALOGEND = &H0011

/*
 * EVENT_SYSTEM_SCROLLING
 * EVENT_SYSTEM_SCROLLINGSTART
 * EVENT_SYSTEM_SCROLLINGEND
 * Sent when beginning and ending the tracking of a scrollbar in a window,
 * and also for scrollbar controls.
 */
    EVENT_SYSTEM_SCROLLINGSTART = &H0012
    EVENT_SYSTEM_SCROLLINGEND = &H0013

/*
 * Alt-Tab Window
 * Send the START notification right after the switch window is initialized
 * and visible.  Send the END right before it is hidden and goes away.
 * EVENT_SYSTEM_SWITCHSTART
 * EVENT_SYSTEM_SWITCHEND
 */
    EVENT_SYSTEM_SWITCHSTART = &H0014
    EVENT_SYSTEM_SWITCHEND = &H0015

/*
 * EVENT_SYSTEM_MINIMIZESTART
 * EVENT_SYSTEM_MINIMIZEEND
 * Sent when a window minimizes and just before it restores.
 */
    EVENT_SYSTEM_MINIMIZESTART = &H0016
    EVENT_SYSTEM_MINIMIZEEND = &H0017


'#if(_WIN32_WINNT >= = &H0600)
    EVENT_SYSTEM_DESKTOPSWITCH = &H0020
'#endif /* _WIN32_WINNT >= = &H0600 */


'#if(_WIN32_WINNT >= = &H0602)
'// AppGrabbed: HWND = hwnd of app thumbnail, objectID = 0, childID = 0
    EVENT_SYSTEM_SWITCHER_APPGRABBED = &H0024
/* OverTarget: HWND = hwnd of app thumbnail, objectID =
//            1 for center
//            2 for near snapped
//            3 for far snapped
//            4 for prune
//            childID = 0
*/
    EVENT_SYSTEM_SWITCHER_APPOVERTARGET = &H0025
'// Dropped: HWND = hwnd of app thumbnail, objectID = <same as above>, childID = 0
    EVENT_SYSTEM_SWITCHER_APPDROPPED = &H0026
'// Cancelled: HWND = hwnd of app thumbnail, objectID = 0, childID = 0
    EVENT_SYSTEM_SWITCHER_CANCELLED = &H0027
'#endif /* _WIN32_WINNT >= = &H0602 */


'#if(_WIN32_WINNT >= = &H0602)

/*
 * Sent when an IME's soft key is pressed and should be echoed,
 * but is not passed through the keyboard hook.
 * Must not be sent when a key is sent through the keyboard hook.
 *     HWND             is the hwnd of the UI containing the soft key
 *     idChild          is the Unicode value of the character entered
 *     idObject         is a bitfield
 *         = &H00000001: set if a 32-bit Unicode surrogate pair is used
 */
    EVENT_SYSTEM_IME_KEY_NOTIFICATION = &H0029

'#endif /* _WIN32_WINNT >= = &H0602 */


'#if(_WIN32_WINNT >= = &H0601)
    EVENT_SYSTEM_END = &H00FF

    EVENT_OEM_DEFINED_START = &H0101
    EVENT_OEM_DEFINED_END = &H01FF

    EVENT_UIA_EVENTID_START = &H4E00
    EVENT_UIA_EVENTID_END = &H4EFF

    EVENT_UIA_PROPID_START = &H7500
    EVENT_UIA_PROPID_END = &H75FF
'#endif /* _WIN32_WINNT >= = &H0601 */

'#if(_WIN32_WINNT >= = &H0501)
    EVENT_CONSOLE_CARET = &H4001
    EVENT_CONSOLE_UPDATE_REGION = &H4002
    EVENT_CONSOLE_UPDATE_SIMPLE = &H4003
    EVENT_CONSOLE_UPDATE_SCROLL = &H4004
    EVENT_CONSOLE_LAYOUT = &H4005
    EVENT_CONSOLE_START_APPLICATION = &H4006
    EVENT_CONSOLE_END_APPLICATION = &H4007

/*
 * Flags for EVENT_CONSOLE_START/END_APPLICATION.
 */
#If Win64 Then
    CONSOLE_APPLICATION_16BIT = &H0000
#Else
    CONSOLE_APPLICATION_16BIT = &H0001
#End If

/*
 * Flags for EVENT_CONSOLE_CARET
 */
    CONSOLE_CARET_SELECTION = &H0001
    CONSOLE_CARET_VISIBLE = &H0002
'#endif /* _WIN32_WINNT >= = &H0501 */

'#if(_WIN32_WINNT >= = &H0601)
    EVENT_CONSOLE_END = &H40FF
'#endif /* _WIN32_WINNT >= = &H0601 */

/*
 * Object events
 *
 * The system AND apps generate these.  The system generates these for
 * real windows.  Apps generate these for objects within their window which
 * act like a separate control, e.g. an item in a list view.
 *
 * When the system generate them, dwParam2 is always WMOBJID_SELF.  When
 * apps generate them, apps put the has-meaning-to-the-app-only ID value
 * in dwParam2.
 * For all events, if you want detailed accessibility information, callers
 * should
 *      * Call AccessibleObjectFromWindow() with the hwnd, idObject parameters
 *          of the event, and IID_IAccessible as the REFIID, to get back an
 *          IAccessible* to talk to
 *      * Initialize and fill in a VARIANT as VT_I4 with lVal the idChild
 *          parameter of the event.
 *      * If idChild isn't zero, call get_accChild() in the container to see
 *          if the child is an object in its own right.  If so, you will get
 *          back an IDispatch* object for the child.  You should release the
 *          parent, and call QueryInterface() on the child object to get its
 *          IAccessible*.  Then you talk directly to the child.  Otherwise,
 *          if get_accChild() returns you nothing, you should continue to
 *          use the child VARIANT.  You will ask the container for the properties
 *          of the child identified by the VARIANT.  In other words, the
 *          child in this case is accessible but not a full-blown object.
 *          Like a button on a titlebar which is 'small' and has no children.
 */

/*
 * For all EVENT_OBJECT events,
 *      hwnd is the dude to Send the WM_GETOBJECT message to (unless NULL,
 *          see above for system things)
 *      idObject is the ID of the object that can resolve any queries a
 *          client might have.  It's a way to deal with windowless controls,
 *          controls that are just drawn on the screen in some larger parent
 *          window (like SDM), or standard frame elements of a window.
 *      idChild is the piece inside of the object that is affected.  This
 *          allows clients to access things that are too small to have full
 *          blown objects in their own right.  Like the thumb of a scrollbar.
 *          The hwnd/idObject pair gets you to the container, the dude you
 *          probably want to talk to most of the time anyway.  The idChild
 *          can then be passed into the acc properties to get the name/value
 *          of it as needed.
 *
 * Example #1:
 *      System propagating a listbox selection change
 *      EVENT_OBJECT_SELECTION
 *          hwnd == listbox hwnd
 *          idObject == OBJID_WINDOW
 *          idChild == new selected item, or CHILDID_SELF if
 *              nothing now selected within container.
 *      Word '97 propagating a listbox selection change
 *          hwnd == SDM window
 *          idObject == SDM ID to get at listbox 'control'
 *          idChild == new selected item, or CHILDID_SELF if
 *              nothing
 *
 * Example #2:
 *      System propagating a menu item selection on the menu bar
 *      EVENT_OBJECT_SELECTION
 *          hwnd == top level window
 *          idObject == OBJID_MENU
 *          idChild == ID of child menu bar item selected
 *
 * Example #3:
 *      System propagating a dropdown coming off of said menu bar item
 *      EVENT_OBJECT_CREATE
 *          hwnd == popup item
 *          idObject == OBJID_WINDOW
 *          idChild == CHILDID_SELF
 *
 * Example #4:
 *
 * For EVENT_OBJECT_REORDER, the object referred to by hwnd/idObject is the
 * PARENT container in which the zorder is occurring.  This is because if
 * one child is zordering, all of them are changing their relative zorder.
 */
    EVENT_OBJECT_CREATE = &H8000&  '// hwnd + ID + idChild is created item
    EVENT_OBJECT_DESTROY = &H8001&  '// hwnd + ID + idChild is destroyed item
    EVENT_OBJECT_SHOW = &H8002&  '// hwnd + ID + idChild is shown item
    EVENT_OBJECT_HIDE = &H8003&  '// hwnd + ID + idChild is hidden item
    EVENT_OBJECT_REORDER = &H8004&  '// hwnd + ID + idChild is parent of zordering children
/*
 * NOTE:
 * Minimize the number of notifications!
 *
 * When you are hiding a parent object, obviously all child objects are no
 * longer visible on screen.  They still have the same "visible" status,
 * but are not truly visible.  Hence do not send HIDE notifications for the
 * children also.  One implies all.  The same goes for SHOW.
 */


    EVENT_OBJECT_FOCUS = &H8005&  '// hwnd + ID + idChild is focused item
    EVENT_OBJECT_SELECTION = &H8006&  '// hwnd + ID + idChild is selected item (if only one), or idChild is OBJID_WINDOW if complex
    EVENT_OBJECT_SELECTIONADD = &H8007&  '// hwnd + ID + idChild is item added
    EVENT_OBJECT_SELECTIONREMOVE = &H8008&  '// hwnd + ID + idChild is item removed
    EVENT_OBJECT_SELECTIONWITHIN = &H8009&  '// hwnd + ID + idChild is parent of changed selected items

/*
 * NOTES:
 * There is only one "focused" child item in a parent.  This is the place
 * keystrokes are going at a given moment.  Hence only send a notification
 * about where the NEW focus is going.  A NEW item getting the focus already
 * implies that the OLD item is losing it.
 *
 * SELECTION however can be multiple.  Hence the different SELECTION
 * notifications.  Here's when to use each:
 *
 * (1) Send a SELECTION notification in the simple single selection
 *     case (like the focus) when the item with the selection is
 *     merely moving to a different item within a container.  hwnd + ID
 *     is the container control, idChildItem is the new child with the
 *     selection.
 *
 * (2) Send a SELECTIONADD notification when a new item has simply been added
 *     to the selection within a container.  This is appropriate when the
 *     number of newly selected items is very small.  hwnd + ID is the
 *     container control, idChildItem is the new child added to the selection.
 *
 * (3) Send a SELECTIONREMOVE notification when a new item has simply been
 *     removed from the selection within a container.  This is appropriate
 *     when the number of newly selected items is very small, just like
 *     SELECTIONADD.  hwnd + ID is the container control, idChildItem is the
 *     new child removed from the selection.
 *
 * (4) Send a SELECTIONWITHIN notification when the selected items within a
 *     control have changed substantially.  Rather than propagate a large
 *     number of changes to reflect removal for some items, addition of
 *     others, just tell somebody who cares that a lot happened.  It will
 *     be faster an easier for somebody watching to just turn around and
 *     query the container control what the new bunch of selected items
 *     are.
 */

    EVENT_OBJECT_STATECHANGE = &H800A&  '// hwnd + ID + idChild is item w/ state change
/*
 * Examples of when to send an EVENT_OBJECT_STATECHANGE include
 *      * It is being enabled/disabled (USER does for windows)
 *      * It is being pressed/released (USER does for buttons)
 *      * It is being checked/unchecked (USER does for radio/check buttons)
 */
    EVENT_OBJECT_LOCATIONCHANGE = &H800B&  '// hwnd + ID + idChild is moved/sized item

/*
 * Note:
 * A LOCATIONCHANGE is not sent for every child object when the parent
 * changes shape/moves.  Send one notification for the topmost object
 * that is changing.  For example, if the user resizes a top level window,
 * USER will generate a LOCATIONCHANGE for it, but not for the menu bar,
 * title bar, scrollbars, etc.  that are also changing shape/moving.
 *
 * In other words, it only generates LOCATIONCHANGE notifications for
 * real windows that are moving/sizing.  It will not generate a LOCATIONCHANGE
 * for every non-floating child window when the parent moves (the children are
 * logically moving also on screen, but not relative to the parent).
 *
 * Now, if the app itself resizes child windows as a result of being
 * sized, USER will generate LOCATIONCHANGEs for those dudes also because
 * it doesn't know better.
 *
 * Note also that USER will generate LOCATIONCHANGE notifications for two
 * non-window sys objects:
 *      (1) System caret
 *      (2) Cursor
 */

    EVENT_OBJECT_NAMECHANGE = &H800C&  '// hwnd + ID + idChild is item w/ name change
    EVENT_OBJECT_DESCRIPTIONCHANGE = &H800D&  '// hwnd + ID + idChild is item w/ desc change
    EVENT_OBJECT_VALUECHANGE = &H800E&  '// hwnd + ID + idChild is item w/ value change
    EVENT_OBJECT_PARENTCHANGE = &H800F&  '// hwnd + ID + idChild is item w/ new parent
    EVENT_OBJECT_HELPCHANGE = &H8010&  '// hwnd + ID + idChild is item w/ help change
    EVENT_OBJECT_DEFACTIONCHANGE = &H8011&  '// hwnd + ID + idChild is item w/ def action change
    EVENT_OBJECT_ACCELERATORCHANGE = &H8012&  '// hwnd + ID + idChild is item w/ keybd accel change

'#if(_WIN32_WINNT >= = &H0600)
    EVENT_OBJECT_INVOKED = &H8013&  '// hwnd + ID + idChild is item invoked
    EVENT_OBJECT_TEXTSELECTIONCHANGED = &H8014&  '// hwnd + ID + idChild is item w? test selection change

/*
 * EVENT_OBJECT_CONTENTSCROLLED
 * Sent when ending the scrolling of a window object.
 *
 * Unlike the similar event (EVENT_SYSTEM_SCROLLEND), this event will be
 * associated with the scrolling window itself. There is no difference
 * between horizontal or vertical scrolling.
 *
 * This event should be posted whenever scroll action is completed, including
 * when it is scrolled by scroll bars, mouse wheel, or keyboard navigations.
 *
 *   example:
 *          hwnd == window that is scrolling
 *          idObject == OBJID_CLIENT
 *          idChild == CHILDID_SELF
 */
    EVENT_OBJECT_CONTENTSCROLLED = &H8015&
'#endif /* _WIN32_WINNT >= = &H0600 */

'#if(_WIN32_WINNT >= = &H0601)
    EVENT_SYSTEM_ARRANGMENTPREVIEW = &H8016&
'#endif /* _WIN32_WINNT >= = &H0601 */

'#if(_WIN32_WINNT >= = &H0602)

/*
 * EVENT_OBJECT_CLOAKED / UNCLOAKED
 * Sent when a window is cloaked or uncloaked.
 * A cloaked window still exists, but is invisible to
 * the user.
 */
    EVENT_OBJECT_CLOAKED = &H8017&
    EVENT_OBJECT_UNCLOAKED = &H8018&

/*
 * EVENT_OBJECT_LIVEREGIONCHANGED
 * Sent when an object that is part of a live region
 * changes.  A live region is an area of an application
 * that changes frequently and/or asynchronously, so
 * that an assistive technology tool might want to pay
 * special attention to it.
 */
    EVENT_OBJECT_LIVEREGIONCHANGED = &H8019&

/*
 * EVENT_OBJECT_HOSTEDOBJECTSINVALIDATED
 * Sent when a window that is hosting other Accessible
 * objects changes the hosted objects.  A client may
 * wish to requery to see what the new hosted objects are,
 * especially if it has been monitoring events from this
 * window.  A hosted object is one with a different Accessibility
 * framework (MSAA or UI Automation) from its host.
 *
 * Changes in hosted objects with the *same* framework
 * as the parent should be handed with the usual structural
 * change events, such as EVENT_OBJECT_CREATED for MSAA.
 * see above.
 */
    EVENT_OBJECT_HOSTEDOBJECTSINVALIDATED = &H8020&

/*
 * Drag / Drop Events
 * These events are used in conjunction with the
 * UI Automation Drag/Drop patterns.
 *
 * For DRAGSTART, DRAGCANCEL, and DRAGCOMPLETE,
 * HWND+objectID+childID refers to the object being dragged.
 *
 * For DRAGENTER, DRAGLEAVE, and DRAGDROPPED,
 * HWND+objectID+childID refers to the target of the drop
 * that is being hovered over.
 */

    EVENT_OBJECT_DRAGSTART = &H8021&
    EVENT_OBJECT_DRAGCANCEL = &H8022&
    EVENT_OBJECT_DRAGCOMPLETE = &H8023&

    EVENT_OBJECT_DRAGENTER = &H8024&
    EVENT_OBJECT_DRAGLEAVE = &H8025&
    EVENT_OBJECT_DRAGDROPPED = &H8026&

/*
 * EVENT_OBJECT_IME_SHOW/HIDE
 * Sent by an IME window when it has become visible or invisible.
 */
    EVENT_OBJECT_IME_SHOW = &H8027&
    EVENT_OBJECT_IME_HIDE = &H8028&

/*
 * EVENT_OBJECT_IME_CHANGE
 * Sent by an IME window whenever it changes size or position.
 */
    EVENT_OBJECT_IME_CHANGE = &H8029&

    EVENT_OBJECT_TEXTEDIT_CONVERSIONTARGETCHANGED = &H8030&

'#endif /* _WIN32_WINNT >= = &H0602 */

'#if(_WIN32_WINNT >= = &H0601)
    EVENT_OBJECT_END = &H80FF&

    EVENT_AIA_START = &HA000&
    EVENT_AIA_END = &HAFFF&
'#endif /* _WIN32_WINNT >= = &H0601 */
End Enum

/*
 * Child IDs
 */


/*
 * System Sounds (idChild of system SOUND notification)
 */
 Public Enum SYSTEM_SOUND_IDS
    SOUND_SYSTEM_STARTUP = 1
    SOUND_SYSTEM_SHUTDOWN = 2
    SOUND_SYSTEM_BEEP = 3
    SOUND_SYSTEM_ERROR = 4
    SOUND_SYSTEM_QUESTION = 5
    SOUND_SYSTEM_WARNING = 6
    SOUND_SYSTEM_INFORMATION = 7
    SOUND_SYSTEM_MAXIMIZE = 8
    SOUND_SYSTEM_MINIMIZE = 9
    SOUND_SYSTEM_RESTOREUP = 10
    SOUND_SYSTEM_RESTOREDOWN = 11
    SOUND_SYSTEM_APPSTART = 12
    SOUND_SYSTEM_FAULT = 13
    SOUND_SYSTEM_APPEND = 14
    SOUND_SYSTEM_MENUCOMMAND = 15
    SOUND_SYSTEM_MENUPOPUP = 16
    CSOUND_SYSTEM = 16
End Enum
/*
 * System Alerts (indexChild of system ALERT notification)
 */
Public Enum SYSTEM_ALERT_IDS
    ALERT_SYSTEM_INFORMATIONAL = 1       ' MB_INFORMATION
    ALERT_SYSTEM_WARNING = 2       ' MB_WARNING
    ALERT_SYSTEM_ERROR = 3       ' MB_ERROR
    ALERT_SYSTEM_QUERY = 4       ' MB_QUESTION
    ALERT_SYSTEM_CRITICAL = 5       ' HardSysErrBox
    CALERT_SYSTEM = 6
End Enum


Public Enum GuiThreadFlags
    GUI_CARETBLINKING = &H00000001
    GUI_INMOVESIZE = &H00000002
    GUI_INMENUMODE = &H00000004
    GUI_SYSTEMMENUMODE = &H00000008
    GUI_POPUPMENUMODE = &H00000010
#If Win64 Then
    GUI_16BITTASK = &H00000000
#Else
    GUI_16BITTASK = &H00000020
  #End If
End Enum
Public Type GUITHREADINFO
    cbSize As Long
    flags As GuiThreadFlags
    hwndActive As LongPtr
    hwndFocus As LongPtr
    hwndCapture As LongPtr
    hwndMenuOwner As LongPtr
    hwndMoveSize As LongPtr
    hwndCaret As LongPtr
    rcCaret As RECT
End Type


Public Enum POINTER_INPUT_TYPE
    PT_POINTER = 1 ' Generic pointer
    PT_TOUCH = 2 ' Touch
    PT_PEN = 3 ' Pen
    PT_MOUSE = 4 ' Mouse
    ' #if(WINVER >= 0x0603)
    PT_TOUCHPAD = 5 ' Touchpad
    ' #endif /* WINVER >= 0x0603 */
End Enum
Public Enum POINTER_FLAGS
    POINTER_FLAG_NONE = &H00000000  ' Default
    POINTER_FLAG_NEW = &H00000001  ' New pointer
    POINTER_FLAG_INRANGE = &H00000002  ' Pointer has not departed
    POINTER_FLAG_INCONTACT = &H00000004  ' Pointer is in contact
    POINTER_FLAG_FIRSTBUTTON = &H00000010  ' Primary action
    POINTER_FLAG_SECONDBUTTON = &H00000020  ' Secondary action
    POINTER_FLAG_THIRDBUTTON = &H00000040  ' Third button
    POINTER_FLAG_FOURTHBUTTON = &H00000080  ' Fourth button
    POINTER_FLAG_FIFTHBUTTON = &H00000100  ' Fifth button
    POINTER_FLAG_PRIMARY = &H00002000  ' Pointer is primary for system
    POINTER_FLAG_CONFIDENCE = &H00004000  ' Pointer is considered unlikely to be accidental
    POINTER_FLAG_CANCELED = &H00008000&  ' Pointer is departing in an abnormal manner
    POINTER_FLAG_DOWN = &H00010000  ' Pointer transitioned to down state (made contact)
    POINTER_FLAG_UPDATE = &H00020000  ' Pointer update
    POINTER_FLAG_UP = &H00040000  ' Pointer transitioned from down state (broke contact)
    POINTER_FLAG_WHEEL = &H00080000  ' Vertical wheel
    POINTER_FLAG_HWHEEL = &H00100000  ' Horizontal wheel
    POINTER_FLAG_CAPTURECHANGED = &H00200000  ' Lost capture
    POINTER_FLAG_HASTRANSFORM = &H00400000  ' Input has a transform associated with it
End Enum
Public Enum POINTER_KEY_STATES
    POINTER_MOD_SHIFT = (&H0004)  ' Shift key is held down.
    POINTER_MOD_CTRL = (&H0008)  ' Ctrl key is held down.
End Enum
Public Enum POINTER_BUTTON_CHANGE_TYPE
    POINTER_CHANGE_NONE
    POINTER_CHANGE_FIRSTBUTTON_DOWN
    POINTER_CHANGE_FIRSTBUTTON_UP
    POINTER_CHANGE_SECONDBUTTON_DOWN
    POINTER_CHANGE_SECONDBUTTON_UP
    POINTER_CHANGE_THIRDBUTTON_DOWN
    POINTER_CHANGE_THIRDBUTTON_UP
    POINTER_CHANGE_FOURTHBUTTON_DOWN
    POINTER_CHANGE_FOURTHBUTTON_UP
    POINTER_CHANGE_FIFTHBUTTON_DOWN
    POINTER_CHANGE_FIFTHBUTTON_UP
End Enum
Public Type POINTER_INFO
    pointerType As POINTER_INPUT_TYPE
    pointerId As Long
    frameId As Long
    pointerFlags As POINTER_FLAGS
    sourceDevice As LongPtr
    hwndTarget As LongPtr
    ptPixelLocation As POINT
    ptHimetricLocation As POINT
    ptPixelLocationRaw As POINT
    ptHimetricLocationRaw As POINT
    dwTime As Long
    historyCount As Long
    InputData As Long
    dwKeyStates As POINTER_KEY_STATES
    PerformanceCount As LongLong
    ButtonChangeType As POINTER_BUTTON_CHANGE_TYPE
End Type

Public Enum TOUCH_FLAGS
    TOUCH_FLAG_NONE = &H00000000 ' Default
End Enum
Public Enum TOUCH_MASK
    TOUCH_MASK_NONE = &H00000000  ' Default - none of the optional fields are valid
    TOUCH_MASK_CONTACTAREA = &H00000001  ' The rcContact field is valid
    TOUCH_MASK_ORIENTATION = &H00000002  ' The orientation field is valid
    TOUCH_MASK_PRESSURE = &H00000004  ' The pressure field is valid
End Enum
Public Type POINTER_TOUCH_INFO
    pointerInfo As POINTER_INFO
    touchFlags As TOUCH_FLAGS
    touchMask As TOUCH_MASK
    rcContact As RECT
    rcContactRaw As RECT
    orientation As Long
    pressure As Long
End Type

Public Enum PEN_FLAGS
    PEN_FLAG_NONE = &H00000000  ' Default
    PEN_FLAG_BARREL = &H00000001  ' The barrel button is pressed
    PEN_FLAG_INVERTED = &H00000002  ' The pen is inverted
    PEN_FLAG_ERASER = &H00000004  ' The eraser button is pressed
End Enum
Public Enum PEN_MASK
    PEN_MASK_NONE = &H00000000  ' Default - none of the optional fields are valid
    PEN_MASK_PRESSURE = &H00000001  ' The pressure field is valid
    PEN_MASK_ROTATION = &H00000002  ' The rotation field is valid
    PEN_MASK_TILT_X = &H00000004  ' The tiltX field is valid
    PEN_MASK_TILT_Y = &H00000008  ' The tiltY field is valid
End Enum
Public Type POINTER_PEN_INFO
    pointerInfo As POINTER_INFO
    penFlags As PEN_FLAGS
    penMask As PEN_MASK
    pressure As Long
    rotation As Long
    tiltX As Long
    tiltY As Long
End Type

Public Enum POINTER_MESSAGE_FLAGS
    POINTER_MESSAGE_FLAG_NEW = &H00000001  ' New pointer
    POINTER_MESSAGE_FLAG_INRANGE = &H00000002  ' Pointer has not departed
    POINTER_MESSAGE_FLAG_INCONTACT = &H00000004  ' Pointer is in contact
    POINTER_MESSAGE_FLAG_FIRSTBUTTON = &H00000010  ' Primary action
    POINTER_MESSAGE_FLAG_SECONDBUTTON = &H00000020  ' Secondary action
    POINTER_MESSAGE_FLAG_THIRDBUTTON = &H00000040  ' Third button
    POINTER_MESSAGE_FLAG_FOURTHBUTTON = &H00000080  ' Fourth button
    POINTER_MESSAGE_FLAG_FIFTHBUTTON = &H00000100  ' Fifth button
    POINTER_MESSAGE_FLAG_PRIMARY = &H00002000  ' Pointer is primary
    POINTER_MESSAGE_FLAG_CONFIDENCE = &H00004000  ' Pointer is considered unlikely to be accidental
    POINTER_MESSAGE_FLAG_CANCELED = &H00008000&  ' Pointer is departing in an abnormal manner
End Enum

Public Const PA_ACTIVATE  = MA_ACTIVATE
Public Const PA_NOACTIVATE  = MA_NOACTIVATE
Public Const MAX_TOUCH_COUNT  = 256

Public Enum TOUCH_FEEDBACK_TYPES
    TOUCH_FEEDBACK_DEFAULT = &H1
    TOUCH_FEEDBACK_INDIRECT = &H2
    TOUCH_FEEDBACK_NONE = &H3
End Enum

Public Enum POINTER_FEEDBACK_MODE
    POINTER_FEEDBACK_DEFAULT = 1 ' The injected pointer input feedback may get suppressed by the end-user settings in the Pen and Touch control panel.
    POINTER_FEEDBACK_INDIRECT = 2 ' The injected pointer input feedback overrides the end-user settings in the Pen and Touch control panel.
    POINTER_FEEDBACK_NONE = 3 ' No touch visualizations.
End Enum

Public Type USAGE_PROPERTIES
    level As Integer
    page As Integer
    usage As Integer
    logicalMinimum As Long
    logicalMaximum As Long
    unit As Integer
    exponent As Integer
    count As Byte
    physicalMinimum As Long
    physicalMaximum As Long
End Type

Public Type POINTER_TYPE_INFO
    type As POINTER_INPUT_TYPE
    'union{
    '    POINTER_TOUCH_INFO touchInfo;
    '   POINTER_PEN_INFO   penInfo;
    '} DUMMYUNIONNAME;
    #If Win64 Then
        union(&H8F) As Byte
    #Else
        union(&H87) As Byte
    #End If
End Type

Public Type INPUT_INJECTION_VALUE
    page As Integer
    usage As Integer
    value As Long
    index As Integer
End Type

Public Enum TouchHitTestingValue
    TOUCH_HIT_TESTING_DEFAULT = &H0
    TOUCH_HIT_TESTING_CLIENT = &H1
    TOUCH_HIT_TESTING_NONE = &H2
End Enum

Public Type TOUCH_HIT_TESTING_INPUT
    pointerId As Long
    point As POINT
    boundingBox As RECT
    nonOccludedBoundingBox As RECT
    orientation As Long
End Type
Public Type TOUCH_HIT_TESTING_PROXIMITY_EVALUATION
    score As Integer
    adjustedPoint As POINT
End Type

Public Const TOUCH_HIT_TESTING_PROXIMITY_CLOSEST  = &H0
Public Const TOUCH_HIT_TESTING_PROXIMITY_FARTHEST  = &HFFF

Public Enum FEEDBACK_TYPE
    FEEDBACK_TOUCH_CONTACTVISUALIZATION = 1
    FEEDBACK_PEN_BARRELVISUALIZATION = 2
    FEEDBACK_PEN_TAP = 3
    FEEDBACK_PEN_DOUBLETAP = 4
    FEEDBACK_PEN_PRESSANDHOLD = 5
    FEEDBACK_PEN_RIGHTTAP = 6
    FEEDBACK_TOUCH_TAP = 7
    FEEDBACK_TOUCH_DOUBLETAP = 8
    FEEDBACK_TOUCH_PRESSANDHOLD = 9
    FEEDBACK_TOUCH_RIGHTTAP = 10
    FEEDBACK_GESTURE_PRESSANDTAP = 11
    FEEDBACK_MAX = &HFFFFFFFF
End Enum

Public Enum WINDOW_FEEDBACK_SETTING_FLAGS
    GWFS_INCLUDE_ANCESTORS = 1
End Enum

Public Type INPUT_TRANSFORM
'union	
'     m(0 To 3, 0 To 3) As Single
   m_11 As Single: m_12    As Single:   m_13    As Single:  m_14    As Single
   m_21 As Single: m_22    As Single:   m_23    As Single:  m_24    As Single
   m_31 As Single: m_32    As Single:   m_33    As Single:  m_34    As Single
   m_41 As Single: m_42    As Single:   m_43    As Single:  m_44    As Single
End Type

Public Enum ORIENTATION_PREFERENCE
    ORIENTATION_PREFERENCE_NONE = &H0
    ORIENTATION_PREFERENCE_LANDSCAPE = &H1
    ORIENTATION_PREFERENCE_PORTRAIT = &H2
    ORIENTATION_PREFERENCE_LANDSCAPE_FLIPPED = &H4
    ORIENTATION_PREFERENCE_PORTRAIT_FLIPPED = &H8
End Enum

Public Enum AR_STATE
    AR_ENABLED = &H0
    AR_DISABLED = &H1
    AR_SUPPRESSED = &H2
    AR_REMOTESESSION = &H4
    AR_MULTIMON = &H8
    AR_NOSENSOR = &H10
    AR_NOT_SUPPORTED = &H20
    AR_DOCKED = &H40
    AR_LAPTOP = &H80
End Enum

Public Const MI_WP_SIGNATURE = &HFF515700
Public Const SIGNATURE_MASK = &HFFFFFF00

Public Declare PtrSafe Function GetMessageExtraInfo Lib "user32" () As LongPtr
Public DeclareWide PtrSafe Function SetMessageExtraInfo Lib "user32" (lParam As Any) As LongPtr
Public Declare PtrSafe Function IsWow64Message Lib "user32" () As BOOL
Public Declare PtrSafe Function IsGUIThread Lib "user32" (ByVal bConvert As BOOL) As BOOL
Public Declare PtrSafe Function GetGuiResources Lib "user32" (ByVal hProcess As LongPtr, ByVal ulFlags As GuiResourceTypes) As Long
Public Declare PtrSafe Sub SetLastErrorEx Lib "user32" (ByVal dwErrCode As Long, ByVal dwType As SetLastErrorEx_Flags)
Public Declare PtrSafe Sub SetDebugErrorLevel Lib "user32" (ByVal dwLevel As SetLastErrorEx_Flags)
Public Declare PtrSafe Function SetMessageQueue Lib "user32" (ByVal cMessagesMax As Long) As Long
Public Declare PtrSafe Function SetUserObjectInformationA Lib "user32" (ByVal hObj As LongPtr, ByVal nIndex As UserObjectInfoTypes, pvInfo As Any, ByVal nLength As Long) As BOOL
Public Declare PtrSafe Function SetUserObjectInformationW Lib "user32" (ByVal hObj As LongPtr, ByVal nIndex As UserObjectInfoTypes, pvInfo As Any, ByVal nLength As Long) As BOOL
Public DeclareWide PtrSafe Function SetUserObjectInformation Lib "user32" Alias "SetUserObjectInformationW" (ByVal hObj As LongPtr, ByVal nIndex As UserObjectInfoTypes, pvInfo As Any, ByVal nLength As Long) As BOOL
Public Declare PtrSafe Function GetUserObjectInformationA Lib "user32" (ByVal hObj As LongPtr, ByVal nIndex As UserObjectInfoTypes, pvInfo As Any, ByVal nLength As Long, Optional lpnLengthNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function GetUserObjectInformationW Lib "user32" (ByVal hObj As LongPtr, ByVal nIndex As UserObjectInfoTypes, pvInfo As Any, ByVal nLength As Long, Optional lpnLengthNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function GetUserObjectInformation Lib "user32" Alias "GetUserObjectInformationW" (ByVal hObj As LongPtr, ByVal nIndex As UserObjectInfoTypes, pvInfo As Any, ByVal nLength As Long, Optional lpnLengthNeeded As Long) As BOOL
Public Declare PtrSafe Function GetUserObjectSecurity Lib "user32" (ByVal hObj As LongPtr, pSIRequested As SECURITY_INFORMATION, pSID As SECURITY_DESCRIPTOR, ByVal nLength As Long, lpnLengthNeeded As Long) As BOOL
Public Declare PtrSafe Function SetUserObjectSecurity Lib "user32" (ByVal hObj As LongPtr, pSIRequested As SECURITY_INFORMATION, pSID As SECURITY_DESCRIPTOR) As BOOL
Public Declare PtrSafe Function UserHandleGrantAccess Lib "user32" (ByVal hUserHandle As LongPtr, ByVal hJob As LongPtr, ByVal bGrant As BOOL) As BOOL

Public Delegate Function HookProc (ByVal code As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As LongPtr

' Public Declare PtrSafe Function SetWindowsHook Lib "user32" Alias "SetWindowsHookW" (ByVal nFilterType As WindowsHookCodes, ByVal pfnFilterProc As HookProc) As LongPtr
' Public Declare PtrSafe Function SetWindowsHookEx Lib "user32" Alias "SetWindowsHookExW" (ByVal idHook As WindowsHookCodes, ByVal lpfn As HookProc, ByVal hmod As LongPtr, ByVal dwThreadId As Long) As LongPtr
' Public Declare PtrSafe Function SetWindowsHookA Lib "user32" (ByVal nFilterType As WindowsHookCodes, ByVal pfnFilterProc As HookProc) As LongPtr
' Public Declare PtrSafe Function SetWindowsHookExA Lib "user32" (ByVal idHook As WindowsHookCodes, ByVal lpfn As HookProc, ByVal hmod As LongPtr, ByVal dwThreadId As Long) As LongPtr
' Public Declare PtrSafe Function SetWindowsHookW Lib "user32" (ByVal nFilterType As WindowsHookCodes, ByVal pfnFilterProc As HookProc) As LongPtr
' Public Declare PtrSafe Function SetWindowsHookExW Lib "user32" (ByVal idHook As WindowsHookCodes, ByVal lpfn As HookProc, ByVal hmod As LongPtr, ByVal dwThreadId As Long) As LongPtr
' Public Declare PtrSafe Function UnhookWindowsHook Lib "user32" (ByVal nCode As WindowsHookCodes, ByVal pfnFilterProc As HookProc) As Long
Public Declare PtrSafe Function SetWindowsHook Lib "user32" Alias "SetWindowsHookW" (ByVal nFilterType As WindowsHookCodes, ByVal pfnFilterProc As LongPtr) As LongPtr
Public Declare PtrSafe Function SetWindowsHookEx Lib "user32" Alias "SetWindowsHookExW" (ByVal idHook As WindowsHookCodes, ByVal lpfn As LongPtr, ByVal hmod As LongPtr, ByVal dwThreadId As Long) As LongPtr
Public Declare PtrSafe Function SetWindowsHookA Lib "user32" (ByVal nFilterType As WindowsHookCodes, ByVal pfnFilterProc As LongPtr) As LongPtr
Public Declare PtrSafe Function SetWindowsHookExA Lib "user32" (ByVal idHook As WindowsHookCodes, ByVal lpfn As LongPtr, ByVal hmod As LongPtr, ByVal dwThreadId As Long) As LongPtr
Public Declare PtrSafe Function SetWindowsHookW Lib "user32" (ByVal nFilterType As WindowsHookCodes, ByVal pfnFilterProc As LongPtr) As LongPtr
Public Declare PtrSafe Function SetWindowsHookExW Lib "user32" (ByVal idHook As WindowsHookCodes, ByVal lpfn As LongPtr, ByVal hmod As LongPtr, ByVal dwThreadId As Long) As LongPtr
Public Declare PtrSafe Function UnhookWindowsHook Lib "user32" (ByVal nCode As WindowsHookCodes, ByVal pfnFilterProc As LongPtr) As Long
Public Declare PtrSafe Function UnhookWindowsHookEx Lib "user32" (ByVal hhk As LongPtr) As Long
Public Declare PtrSafe Function CallNextHookEx Lib "user32" (ByVal hHook As LongPtr, ByVal ncode As WindowsHookCodes, ByVal wParam As LongPtr, lParam As Any) As LongPtr
Public Declare PtrSafe Function CallMsgFilterA Lib "user32" (lpMsg As MSG, ByVal nCode As Long) As BOOL
Public Declare PtrSafe Function CallMsgFilterW Lib "user32" (lpMsg As MSG, ByVal nCode As Long) As BOOL
Public DeclareWide PtrSafe Function CallMsgFilter Lib "user32" Alias "CallMsgFilterW" (lpMsg As MSG, ByVal nCode As Long) As BOOL
Public Declare PtrSafe Sub NotifyWinEvent Lib "user32" (ByVal event As Long, ByVal hwnd As LongPtr, ByVal idObject As Long, ByVal idChild As Long)
Public Declare PtrSafe Function SetWinEventHook Lib "user32" (ByVal eventmin As WINEVENTS, ByVal eventmax As WINEVENTS, ByVal hmodWinEventProc As LongPtr, ByVal pfnWinEventProc As LongPtr, ByVal idProcess As Long, ByVal idThread As Long, ByVal dwFlags As SETWINEVENT_FLAGS) As LongPtr
Public Declare PtrSafe Function IsWinEventHookInstalled Lib "user32" (ByVal event As Long) As BOOL
Public Declare PtrSafe Function UnhookWinEvent Lib "user32" (ByVal hWinEventHook As LongPtr) As BOOL



Public Declare PtrSafe Function InvalidateRect Lib "user32" (ByVal hWnd As LongPtr, lpRect As RECT, ByVal bErase As BOOL) As BOOL
Public Declare PtrSafe Function ValidateRect Lib "user32" (ByVal hWnd As LongPtr, lpRect As RECT) As BOOL
Public Declare PtrSafe Function PtInRect Lib "user32" (lpRect As RECT, ByVal Xy As LongLong) As Long
Public Declare PtrSafe Function SetRect Lib "user32" (ByRef lpRect As RECT, ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long) As Long
Public Declare PtrSafe Function SetRectEmpty Lib "user32" (ByRef lpRect As RECT) As BOOL
Public Declare PtrSafe Function IntersectRect Lib "user32" (lpDestRect As RECT, lpSrc1Rect As RECT, lpSrc2Rect As RECT) As Long
Public Declare PtrSafe Function IsRectEmpty Lib "user32" (lpRect As RECT) As BOOL
Public Declare PtrSafe Function OffsetRect Lib "user32" (lprc As RECT, ByVal dx As Long, ByVal dy As Long) As BOOL
Public Declare PtrSafe Function InflateRect Lib "user32" (lpRect As RECT, ByVal dx As Long, ByVal dy As Long) As BOOL
Public Declare PtrSafe Function FillRect Lib "user32" (ByVal hDC As LongPtr, lpRect As RECT, ByVal hBrush As LongPtr) As Long
Public Declare PtrSafe Function CopyRect Lib "user32" (lprcDst As RECT, lprcSrc As RECT) As BOOL
Public Declare PtrSafe Function UnionRect Lib "user32" (lprcDst As RECT, lprcSrc1 As RECT, lprcSrc2 As RECT) As BOOL
Public Declare PtrSafe Function SubtractRect Lib "user32" (lprcDst As RECT, lprcSrc1 As RECT, lprcSrc2 As RECT) As BOOL
Public Declare PtrSafe Function EqualRect Lib "user32" (lprc1 As RECT, lprc2 As RECT) As BOOL
Public Declare PtrSafe Function InvertRect Lib "user32" (ByVal hDC As LongPtr, lprc As RECT) As BOOL
Public Declare PtrSafe Function FrameRect Lib "user32" (ByVal hDC As LongPtr, lprc As RECT, ByVal hBrush As LongPtr) As Long

Public Declare PtrSafe Function InvalidateRgn Lib "user32" (ByVal hWnd As LongPtr, ByVal hRgn As LongPtr, ByVal bErase As BOOL) As BOOL
Public Declare PtrSafe Function ValidateRgn Lib "user32" (ByVal hWnd As LongPtr, ByVal hRgn As LongPtr) As BOOL
Public Declare PtrSafe Function ExcludeUpdateRgn Lib "user32" (ByVal hDC As LongPtr, ByVal hWnd As LongPtr) As Long
Public Declare PtrSafe Function GetUpdateRgn Lib "user32" (ByVal hwnd As LongPtr, ByVal hRgn As LongPtr, ByVal fErase As BOOL) As WindowRegionTypes
Public Declare PtrSafe Function GetWindowRgn Lib "user32" (ByVal hwnd As LongPtr, ByVal hRgn As LongPtr) As WindowRegionTypes
Public Declare PtrSafe Function SetWindowRgn Lib "user32" (ByVal hWnd As LongPtr, ByVal hRgn As LongPtr, ByVal bRedraw As Long) As Long
Public Declare PtrSafe Function GetWindowRgnBox Lib "user32" (ByVal hwnd As LongPtr, lprc As RECT) As WindowRegionTypes

Public Declare PtrSafe Function GetSysColor Lib "user32" (ByVal nIndex As SystemColors) As Long
Public Declare PtrSafe Function SetSysColors Lib "user32" (ByVal nElements As Long, lpaElements As SystemColors, lpaRgbValues As Long) As BOOL
Public Declare PtrSafe Function GetSysColorBrush Lib "user32" (ByVal nIndex As SystemColors) As LongPtr
Public DeclareWide PtrSafe Function LoadCursor Lib "user32" Alias "LoadCursorW" (ByVal hInstance As LongPtr, [TypeHint(DefCursors)] ByVal lpCursorName As Any) As LongPtr
Public Declare PtrSafe Function LoadCursorA Lib "user32" (ByVal hInstance As LongPtr, [TypeHint(DefCursors)] ByVal lpCursorName As Any) As LongPtr
Public Declare PtrSafe Function LoadCursorW Lib "user32" (ByVal hInstance As LongPtr, [TypeHint(DefCursors)] ByVal lpCursorName As Any) As LongPtr
Public DeclareWide PtrSafe Function LoadCursorFromFile Lib "user32" Alias "LoadCursorFromFileW" (ByVal lpFileName As String) As LongPtr
Public Declare PtrSafe Function LoadCursorFromFileA Lib "user32" (ByVal lpFileName As String) As LongPtr
Public Declare PtrSafe Function LoadCursorFromFileW Lib "user32" (ByVal lpFileName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateCursor Lib "user32" (ByVal hInstance As LongPtr, ByVal xHotSpot As Long, ByVal yHotSpot As Long, ByVal nWidth As Long, ByVal nHeight As Long, pvANDPlane As Any, pvXORPlane As Any) As LongPtr
Public Function CopyCursor(ByVal pcur As LongPtr) As LongPtr: Return CopyIcon(pcur): End Function
Public Declare PtrSafe Function DestroyCursor Lib "user32" (ByVal hCursor As LongPtr) As BOOL
Public DeclareWide PtrSafe Function LoadIcon Lib "user32" Alias "LoadIconW" (ByVal hInstance As LongPtr, ByVal lpIconName As Any) As LongPtr
Public Declare PtrSafe Function LoadIconA Lib "user32" (ByVal hInstance As LongPtr, ByVal lpIconName As Any) As LongPtr
Public Declare PtrSafe Function LoadIconW Lib "user32" (ByVal hInstance As LongPtr, ByVal lpIconName As Any) As LongPtr
Public Declare PtrSafe Function LoadImageA Lib "user32" (ByVal hInst As LongPtr, ByVal lpsz As String, ByVal dwImageType As ImageTypes, ByVal dwDesiredWidth As Long, ByVal dwDesiredHeight As Long, ByVal dwFlags As LoadResourceFlags) As LongPtr
Public Declare PtrSafe Function LoadImageW Lib "user32" (ByVal hInst As LongPtr, ByVal lpsz As LongPtr, ByVal dwImageType As ImageTypes, ByVal dwDesiredWidth As Long, ByVal dwDesiredHeight As Long, ByVal dwFlags As LoadResourceFlags) As LongPtr
Public DeclareWide PtrSafe Function LoadImage Lib "user32" Alias "LoadImageW" (ByVal hInst As LongPtr, ByVal lpsz As Any, ByVal dwImageType As ImageTypes, ByVal dwDesiredWidth As Long, ByVal dwDesiredHeight As Long, ByVal dwFlags As LoadResourceFlags) As LongPtr
Public Declare PtrSafe Function CopyImage Lib "user32" (ByVal handle As LongPtr, ByVal type As ImageTypes, ByVal cx As Long, ByVal cy As Long, ByVal flags As LoadResourceFlags) As LongPtr
Public Declare PtrSafe Function LoadBitmapA Lib "user32" (ByVal hInstance As LongPtr, [TypeHint(OEM_BITMAP_RESOURCES)] ByVal lpBitmapName As LongPtr) As LongPtr
Public Declare PtrSafe Function LoadBitmapW Lib "user32" (ByVal hInstance As LongPtr, [TypeHint(OEM_BITMAP_RESOURCES)] ByVal lpBitmapName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function LoadBitmap Lib "user32" Alias "LoadBitmapW" (ByVal hInstance As LongPtr, [TypeHint(OEM_BITMAP_RESOURCES)] ByVal lpBitmapName As String) As LongPtr
Public DeclareWide PtrSafe Function LoadBitmap Lib "user32" Alias "LoadBitmapW" (ByVal hInstance As LongPtr, [TypeHint(OEM_BITMAP_RESOURCES)] ByVal lpBitmapName As LongPtr) As LongPtr
Public Declare PtrSafe Function SetCursor Lib "user32" (ByVal hCursor As LongPtr) As LongPtr
Public Declare PtrSafe Function GetCursor Lib "user32" () As LongPtr
Public Declare PtrSafe Function SetCursorPos Lib "user32" (ByVal x As Long, ByVal y As Long) As BOOL
Public Declare PtrSafe Function GetCursorPos Lib "user32" (lpPoint As POINT) As BOOL
Public Declare PtrSafe Function ClipCursor Lib "user32" (lpRect As RECT) As BOOL
Public Declare PtrSafe Function GetClipCursor Lib "user32" (lpRect As RECT) As BOOL
Public Declare PtrSafe Function ShowCursor Lib "user32" (ByVal fShow As BOOL) As Long
Public Declare PtrSafe Function GetCursorInfo Lib "user32" (pci As CURSORINFO) As BOOL
Public Declare PtrSafe Function SetSystemCursor Lib "user32" (ByVal hCursor As LongPtr, ByVal id As SysCursors) As BOOL
Public Declare PtrSafe Function GetPhysicalCursorPos Lib "user32" (lpPoint As POINT) As BOOL
Public Declare PtrSafe Function SetPhysicalCursorPos Lib "user32" (ByVal x As Long, ByVal y As Long) As BOOL
Public DeclareWide PtrSafe Function LookupIconIdFromDirectory Lib "user32" (presbits As Any, ByVal fIcon As BOOL) As Long
Public DeclareWide PtrSafe Function LookupIconIdFromDirectoryEx Lib "user32" (presbits As Any, ByVal fIcon As BOOL, ByVal cxDesired As Long, ByVal cyDesired As Long, ByVal Flags As LoadResourceFlags) As Long
Public Declare PtrSafe Function DrawIcon Lib "user32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long, ByVal hIcon As LongPtr) As BOOL
Public Declare PtrSafe Function DrawIconEx Lib "user32" (ByVal hDC As LongPtr, ByVal xLeft As Long, ByVal yTop As Long, ByVal hIcon As LongPtr, ByVal cxWidth As Long, ByVal cyWidth As Long, ByVal istepIfAni As Long, ByVal hbrFlickerFreeDraw As LongPtr, ByVal diFlags As DrawImageFlags) As BOOL
Public Declare PtrSafe Function CreateIconIndirect Lib "user32" (piconinfo As ICONINFO) As LongPtr
Public Declare PtrSafe Function CreateIcon Lib "user32" (ByVal hInstance As LongPtr, ByVal nWidth As Long, ByVal nHeight As Long, ByVal cPlanes As Byte, ByVal cBitsPixel As Byte, lpbANDbits As Any, lpXORbits As Any) As LongPtr
Public Declare PtrSafe Function GetIconInfo Lib "user32" (ByVal hIcon As LongPtr, piconinfo As ICONINFO) As BOOL
Public Declare PtrSafe Function CopyIcon Lib "user32" (ByVal hIcon As LongPtr) As LongPtr
Public Declare PtrSafe Function GetIconInfoExA Lib "user32" (ByVal hIcon As LongPtr, piconinfo As ICONINFOEXA) As BOOL
Public Declare PtrSafe Function GetIconInfoExW Lib "user32" (ByVal hIcon As LongPtr, piconinfo As ICONINFOEXW) As BOOL
Public Declare PtrSafe Function GetIconInfoEx Lib "user32" Alias "GetIconInfoExW" (ByVal hIcon As LongPtr, piconinfo As ICONINFOEX) As BOOL
Public Declare PtrSafe Function LoadStringA Lib "user32" (ByVal hInstance As LongPtr, ByVal uID As Long, ByVal lpBuffer As String, ByVal cchBufferMax As Long) As Long
Public Declare PtrSafe Function LoadStringW Lib "user32" (ByVal hInstance As LongPtr, ByVal uID As Long, ByVal lpBuffer As LongPtr, ByVal cchBufferMax As Long) As Long
Public DeclareWide PtrSafe Function LoadString Lib "user32" Alias "LoadStringW" (ByVal hInstance As LongPtr, ByVal uID As Long, ByVal lpBuffer As String, ByVal cchBufferMax As Long) As Long
Public Declare PtrSafe Function PrivateExtractIconsA Lib "user32" (ByVal szFileName As String, ByVal nIconIndex As Long, ByVal cxIcon As Long, ByVal cyIcon As Long, phicon As LongPtr, piconid As Long, ByVal nIcons As Long, ByVal flags As LoadResourceFlags) As Long
Public Declare PtrSafe Function PrivateExtractIconsW Lib "user32" (ByVal szFileName As LongPtr, ByVal nIconIndex As Long, ByVal cxIcon As Long, ByVal cyIcon As Long, phicon As LongPtr, piconid As Long, ByVal nIcons As Long, ByVal flags As LoadResourceFlags) As Long
Public DeclareWide PtrSafe Function PrivateExtractIcons Lib "user32" Alias "PrivateExtractIconsW" (ByVal szFileName As String, ByVal nIconIndex As Long, ByVal cxIcon As Long, ByVal cyIcon As Long, phicon As LongPtr, piconid As Long, ByVal nIcons As Long, ByVal flags As LoadResourceFlags) As Long

Public Declare PtrSafe Function InitializeTouchInjection Lib "user32" (ByVal maxCount As Long, ByVal dwMode As TOUCH_FEEDBACK_TYPES) As BOOL
Public Declare PtrSafe Function InjectTouchInput Lib "user32" (ByVal count As Long, contacts As POINTER_TOUCH_INFO) As BOOL
Public Declare PtrSafe Function GetPointerType Lib "user32" (ByVal pointerId As Long, pointerType As POINTER_INPUT_TYPE) As BOOL
Public Declare PtrSafe Function GetPointerCursorId Lib "user32" (ByVal pointerId As Long, cursorId As Long) As BOOL
Public Declare PtrSafe Function GetPointerInfo Lib "user32" (ByVal pointerId As Long, pointerInfo As POINTER_INFO) As BOOL
Public Declare PtrSafe Function GetPointerInfoHistory Lib "user32" (ByVal pointerId As Long, entriesCount As Long, pointerInfo As POINTER_INFO) As BOOL
Public Declare PtrSafe Function GetPointerFrameInfo Lib "user32" (ByVal pointerId As Long, pointerCount As Long, pointerInfo As POINTER_INFO) As BOOL
Public Declare PtrSafe Function GetPointerFrameInfoHistory Lib "user32" (ByVal pointerId As Long, entriesCount As Long, pointerCount As Long, pointerInfo As POINTER_INFO) As BOOL
Public Declare PtrSafe Function GetPointerTouchInfo Lib "user32" (ByVal pointerId As Long, touchInfo As POINTER_TOUCH_INFO) As BOOL
Public Declare PtrSafe Function GetPointerTouchInfoHistory Lib "user32" (ByVal pointerId As Long, entriesCount As Long, touchInfo As POINTER_TOUCH_INFO) As BOOL
Public Declare PtrSafe Function GetPointerFrameTouchInfo Lib "user32" (ByVal pointerId As Long, pointerCount As Long, touchInfo As POINTER_TOUCH_INFO) As BOOL
Public Declare PtrSafe Function GetPointerFrameTouchInfoHistory Lib "user32" (ByVal pointerId As Long, entriesCount As Long, pointerCount As Long, touchInfo As POINTER_TOUCH_INFO) As BOOL
Public Declare PtrSafe Function GetPointerPenInfo Lib "user32" (ByVal pointerId As Long, penInfo As POINTER_PEN_INFO) As BOOL
Public Declare PtrSafe Function GetPointerPenInfoHistory Lib "user32" (ByVal pointerId As Long, entriesCount As Long, penInfo As POINTER_PEN_INFO) As BOOL
Public Declare PtrSafe Function GetPointerFramePenInfo Lib "user32" (ByVal pointerId As Long, pointerCount As Long, penInfo As POINTER_PEN_INFO) As BOOL
Public Declare PtrSafe Function GetPointerFramePenInfoHistory Lib "user32" (ByVal pointerId As Long, entriesCount As Long, pointerCount As Long, penInfo As POINTER_PEN_INFO) As BOOL
Public Declare PtrSafe Function SkipPointerFrameMessages Lib "user32" (ByVal pointerId As Long) As BOOL
Public Declare PtrSafe Function RegisterPointerInputTarget Lib "user32" (ByVal hWnd As LongPtr, ByVal pointerType As POINTER_INPUT_TYPE) As BOOL
Public Declare PtrSafe Function UnregisterPointerInputTarget Lib "user32" (ByVal hWnd As LongPtr, ByVal pointerType As POINTER_INPUT_TYPE) As BOOL
Public Declare PtrSafe Function RegisterPointerInputTargetEx Lib "user32" (ByVal hWnd As LongPtr, ByVal pointerType As POINTER_INPUT_TYPE, ByVal fObserve As BOOL) As BOOL
Public Declare PtrSafe Function UnregisterPointerInputTargetEx Lib "user32" (ByVal hWnd As LongPtr, ByVal pointerType As POINTER_INPUT_TYPE) As BOOL
Public Declare PtrSafe Function CreateSyntheticPointerDevice Lib "user32" (ByVal pointerType As POINTER_INPUT_TYPE, ByVal maxCount As Long, ByVal mode As POINTER_FEEDBACK_MODE) As LongPtr
Public Declare PtrSafe Function InjectSyntheticPointerInput Lib "user32" (ByVal device As LongPtr, pointerInfo As POINTER_TYPE_INFO, ByVal count As Long) As BOOL
Public Declare PtrSafe Sub DestroySyntheticPointerDevice Lib "user32" (ByVal device As LongPtr)
Public Declare PtrSafe Function EnableMouseInPointer Lib "user32" (ByVal fEnable As BOOL) As BOOL
Public Declare PtrSafe Function IsMouseInPointerEnabled Lib "user32" () As BOOL
Public Declare PtrSafe Function EnableMouseInPointerForThread Lib "user32" () As BOOL
Public Declare PtrSafe Function RegisterTouchHitTestingWindow Lib "user32" (ByVal hWnd As LongPtr, ByVal value As TouchHitTestingValue) As BOOL
Public Declare PtrSafe Function EvaluateProximityToRect Lib "user32" (controlBoundingBox As RECT, pHitTestingInput As TOUCH_HIT_TESTING_INPUT, pProximityEval As TOUCH_HIT_TESTING_PROXIMITY_EVALUATION) As BOOL
Public Declare PtrSafe Function EvaluateProximityToPolygon Lib "user32" (ByVal numVertices As Long, controlPolygon As POINT, pHitTestingInput As TOUCH_HIT_TESTING_INPUT, pProximityEval As TOUCH_HIT_TESTING_PROXIMITY_EVALUATION) As BOOL
Public Declare PtrSafe Function PackTouchHitTestingProximityEvaluation Lib "user32" (pHitTestingInput As TOUCH_HIT_TESTING_INPUT, pProximityEval As TOUCH_HIT_TESTING_PROXIMITY_EVALUATION) As LongPtr
Public DeclareWide PtrSafe Function GetWindowFeedbackSetting Lib "user32" (ByVal hWnd As LongPtr, ByVal feedback As FEEDBACK_TYPE, ByVal dwFlags As WINDOW_FEEDBACK_SETTING_FLAGS, pSize As Long, config As Any) As BOOL
Public DeclareWide PtrSafe Function SetWindowFeedbackSetting Lib "user32" (ByVal hWnd As LongPtr, ByVal feedback As FEEDBACK_TYPE, ByVal dwFlags As WINDOW_FEEDBACK_SETTING_FLAGS, pSize As Long, config As Any) As BOOL
Public Declare PtrSafe Function GetPointerInputTransform Lib "user32" (ByVal pointerId As Long, ByVal historyCount As Long, inputTransform As INPUT_TRANSFORM) As BOOL
Public Declare PtrSafe Function GetUnpredictedMessagePos Lib "user32" () As Long


Public Declare PtrSafe Function TabbedTextOutA Lib "user32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal lpString As String, ByVal chCount As Long, ByVal nTabPositions As Long, lpnTabStopPositions As Long, ByVal nTabOrigin As Long) As Long
Public Declare PtrSafe Function TabbedTextOutW Lib "user32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal lpString As LongPtr, ByVal chCount As Long, ByVal nTabPositions As Long, lpnTabStopPositions As Long, ByVal nTabOrigin As Long) As Long
Public DeclareWide PtrSafe Function TabbedTextOut Lib "user32" Alias "TabbedTextOutW" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal lpString As String, ByVal chCount As Long, ByVal nTabPositions As Long, lpnTabStopPositions As Long, ByVal nTabOrigin As Long) As Long
Public Declare PtrSafe Function DrawTextW Lib "user32" (ByVal hDC As LongPtr, ByVal lpchText As LongPtr, ByVal cchText As Long, ByRef lprc As RECT, ByVal format As DT_Flags) As Long
Public Declare PtrSafe Function DrawTextA Lib "user32" (ByVal hDC As LongPtr, ByVal lpchText As String, ByVal cchText As Long, ByRef lprc As RECT, ByVal format As DT_Flags) As Long
Public DeclareWide PtrSafe Function DrawText Lib "user32" Alias "DrawTextW" (ByVal hDC As LongPtr, ByVal lpchText As String, ByVal cchText As Long, ByRef lprc As RECT, ByVal format As DT_Flags) As Long
Public Declare PtrSafe Function DrawTextExW Lib "user32" (ByVal hDC As LongPtr, ByVal lpchText As LongPtr, ByVal cchText As Long, ByRef lprc As RECT, ByVal format As DT_Flags, lpdtp As DRAWTEXTPARAMS) As Long
Public Declare PtrSafe Function DrawTextExA Lib "user32" (ByVal hDC As LongPtr, ByVal lpchText As String, ByVal cchText As Long, ByRef lprc As RECT, ByVal format As DT_Flags, lpdtp As DRAWTEXTPARAMS) As Long
Public DeclareWide PtrSafe Function DrawTextEx Lib "user32" Alias "DrawTextExW" (ByVal hDC As LongPtr, ByVal lpchText As String, ByVal cchText As Long, ByRef lprc As RECT, ByVal format As DT_Flags, lpdtp As DRAWTEXTPARAMS) As Long
Public Declare PtrSafe Function DrawEdge Lib "user32" (ByVal hDC As LongPtr, qrc As RECT, ByVal edge As BorderStyles, ByVal grfFlags As BorderFlags) As BOOL
Public Declare PtrSafe Function DrawFocusRect Lib "user32" (ByVal hdc As LongPtr, lpRect As RECT) As BOOL
Public Declare PtrSafe Function DrawAnimatedRects Lib "user32" (ByVal hdc As LongPtr, ByVal idAni As AnimationTypeIDs, lprcFrom As RECT, lprcTo As RECT) As BOOL

Public Delegate Function DrawStateProc (ByVal hDC As LongPtr, ByVal lData As LongPtr, ByVal wData As LongPtr, ByVal cx As Long, ByVal cy As Long) As BOOL
' Public Declare PtrSafe Function DrawStateA Lib "user32" (ByVal hdc As LongPtr, ByVal hbrFore As LongPtr, ByVal qfnCallBack As DrawStateProc, ByVal lData As LongPtr, ByVal wData As LongPtr, ByVal x As Long, ByVal y As Long, ByVal cx As Long, ByVal cy As Long, [TypeHint(DrawStateStates, DrawStateImageTypes)] ByVal uFlags As Long) As BOOL
' Public Declare PtrSafe Function DrawStateW Lib "user32" (ByVal hdc As LongPtr, ByVal hbrFore As LongPtr, ByVal qfnCallBack As DrawStateProc, ByVal lData As LongPtr, ByVal wData As LongPtr, ByVal x As Long, ByVal y As Long, ByVal cx As Long, ByVal cy As Long, [TypeHint(DrawStateStates, DrawStateImageTypes)] ByVal uFlags As Long) As BOOL
' Public DeclareWide PtrSafe Function DrawState Lib "user32" Alias "DrawStateW" (ByVal hdc As LongPtr, ByVal hbrFore As LongPtr, ByVal qfnCallBack As DrawStateProc, ByVal lData As LongPtr, ByVal wData As LongPtr, ByVal x As Long, ByVal y As Long, ByVal cx As Long, ByVal cy As Long, [TypeHint(DrawStateStates, DrawStateImageTypes)] ByVal uFlags As Long) As BOOL
Public Declare PtrSafe Function DrawStateA Lib "user32" (ByVal hdc As LongPtr, ByVal hbrFore As LongPtr, ByVal qfnCallBack As LongPtr, ByVal lData As LongPtr, ByVal wData As LongPtr, ByVal x As Long, ByVal y As Long, ByVal cx As Long, ByVal cy As Long, [TypeHint(DrawStateStates, DrawStateImageTypes)] ByVal uFlags As Long) As BOOL
Public Declare PtrSafe Function DrawStateW Lib "user32" (ByVal hdc As LongPtr, ByVal hbrFore As LongPtr, ByVal qfnCallBack As LongPtr, ByVal lData As LongPtr, ByVal wData As LongPtr, ByVal x As Long, ByVal y As Long, ByVal cx As Long, ByVal cy As Long, [TypeHint(DrawStateStates, DrawStateImageTypes)] ByVal uFlags As Long) As BOOL
Public DeclareWide PtrSafe Function DrawState Lib "user32" Alias "DrawStateW" (ByVal hdc As LongPtr, ByVal hbrFore As LongPtr, ByVal qfnCallBack As LongPtr, ByVal lData As LongPtr, ByVal wData As LongPtr, ByVal x As Long, ByVal y As Long, ByVal cx As Long, ByVal cy As Long, [TypeHint(DrawStateStates, DrawStateImageTypes)] ByVal uFlags As Long) As BOOL
Public Declare PtrSafe Function DrawCaption Lib "user32" (ByVal hWnd As LongPtr, ByVal hDC As LongPtr, lprect As RECT, ByVal flags As DrawCaptionFlags) As BOOL
Public Declare PtrSafe Function DrawFrameControl Lib "user32" (ByVal hdc As LongPtr, lprc As RECT, ByVal type As DrawFrameControlTypes, ByVal state As DrawFrameControlStates) As BOOL
Public Declare PtrSafe Function CreateCaret Lib "user32" (ByVal hWnd As LongPtr, ByVal hBitmap As LongPtr, ByVal nWidth As Long, ByVal nHeight As Long) As BOOL
Public Declare PtrSafe Function SetCaretPos Lib "user32" (ByVal x As Long, ByVal y As Long) As BOOL
Public Declare PtrSafe Function GetCaretPos Lib "user32" (lpPoint As POINT) As BOOL
Public Declare PtrSafe Function SetCaretBlinkTime Lib "user32" (ByVal uMSeconds As Long) As BOOL
Public Declare PtrSafe Function GetCaretBlinkTime Lib "user32" () As Long
Public Declare PtrSafe Function HideCaret Lib "user32" (Optional ByVal hWnd As LongPtr) As BOOL
Public Declare PtrSafe Function ShowCaret Lib "user32" (Optional ByVal hWnd As LongPtr) As BOOL
Public Declare PtrSafe Function DestroyCaret Lib "user32" () As BOOL
' Public Declare PtrSafe Function GrayStringA Lib "user32" (ByVal hdc As LongPtr, ByVal hBrush As LongPtr, ByVal lpOutputFunc As GrayStringProc, lpData As Any, ByVal nCount As Long, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As Long) As BOOL
' Public Declare PtrSafe Function GrayStringW Lib "user32" (ByVal hdc As LongPtr, ByVal hBrush As LongPtr, ByVal lpOutputFunc As GrayStringProc, lpData As Any, ByVal nCount As Long, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As Long) As BOOL
' Public DeclareWide PtrSafe Function GrayString Lib "user32" Alias "GrayStringW" (ByVal hdc As LongPtr, ByVal hBrush As LongPtr, ByVal lpOutputFunc As GrayStringProc, lpData As Any, ByVal nCount As Long, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As Long) As BOOL
Public Declare PtrSafe Function GrayStringA Lib "user32" (ByVal hdc As LongPtr, ByVal hBrush As LongPtr, ByVal lpOutputFunc As LongPtr, lpData As Any, ByVal nCount As Long, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As Long) As BOOL
Public Declare PtrSafe Function GrayStringW Lib "user32" (ByVal hdc As LongPtr, ByVal hBrush As LongPtr, ByVal lpOutputFunc As LongPtr, lpData As Any, ByVal nCount As Long, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As Long) As BOOL
Public DeclareWide PtrSafe Function GrayString Lib "user32" Alias "GrayStringW" (ByVal hdc As LongPtr, ByVal hBrush As LongPtr, ByVal lpOutputFunc As LongPtr, lpData As Any, ByVal nCount As Long, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As Long) As BOOL

'typedef BOOL (CALLBACK* GRAYSTRINGPROC)(HDC, LPARAM, int);
Public Delegate Function GrayStringProc (ByVal hDC As LongPtr, ByVal lParam As LongPtr, ByVal cch As Long) As BOOL
 


[Description("For szKeyphrase, 101 is provided as a reasonable maximum, but there's no such limit. For mkSize, specify only 6+actual used chars.")]
Public Type MULTIKEYHELPA
    mkSize As Long
    mkKeylist As Integer
    szKeyphrase(0 To 101) As Byte
End Type
[Description("For szKeyphrase, 100 is provided as a reasonable maximum, but there's no such limit. For mkSize, specify only 6+2*actual used chars.")]
Public Type MULTIKEYHELPW
    mkSize As Long
    mkKeylist As Integer
    szKeyphrase(0 To 100) As Integer
End Type
[Description("For szKeyphrase, 100 is provided as a reasonable maximum, but there's no such limit. For mkSize, specify only 6+2*actual used chars.")]
Public Type MULTIKEYHELP
    mkSize As Long
    mkKeylist As Integer
    szKeyphrase(0 To 100) As Integer
End Type


Public Type HELPWININFOA
    wStructSize As Long
    x As Long
    y As Long
    dx As Long
    dy As Long
    wMax As Long
    rgchMember(0 To 1) As Byte
End Type
Public Type HELPWININFOW
    wStructSize As Long
    x As Long
    y As Long
    dx As Long
    dy As Long
    wMax As Long
    rgchMember(0 To 1) As Integer
End Type
'Alias HELPWININFO As HELPWININFOW
Public Type HELPWININFO
    wStructSize As Long
    x As Long
    y As Long
    dx As Long
    dy As Long
    wMax As Long
    rgchMember(0 To 1) As Integer
End Type

Public Enum WinHelpCommands
    HELP_CONTEXT = &H0001 /* Display topic in ulTopic */
    HELP_QUIT = &H0002 /* Terminate help */
    HELP_INDEX = &H0003 /* Display index */
    HELP_CONTENTS = &H0003
    HELP_HELPONHELP = &H0004 /* Display help on using help */
    HELP_SETINDEX = &H0005 /* Set current Index for multi index help */
    HELP_SETCONTENTS = &H0005
    HELP_CONTEXTPOPUP = &H0008
    HELP_FORCEFILE = &H0009
    HELP_KEY = &H0101 /* Display topic for keyword in offabData */
    HELP_COMMAND = &H0102
    HELP_PARTIALKEY = &H0105
    HELP_MULTIKEY = &H0201
    HELP_SETWINPOS = &H0203
    HELP_CONTEXTMENU = &H000a
    HELP_FINDER = &H000b
    HELP_WM_HELP = &H000c
    HELP_SETPOPUP_POS = &H000d
    HELP_TCARD = &H8000&
    HELP_TCARD_DATA = &H0010
    HELP_TCARD_OTHER_CALLER = &H0011
End Enum

Public Enum WinHelpResourceIDs
    IDH_NO_HELP = 28440
    IDH_MISSING_CONTEXT = 28441  ' Control doesn't have matching help context
    IDH_GENERIC_HELP_BUTTON = 28442  ' Property sheet help button
    IDH_OK = 28443
    IDH_CANCEL = 28444
    IDH_HELP = 28445
End Enum

Public Enum HelpInfo_ContextFlags
    HELPINFO_WINDOW = &H0001
    HELPINFO_MENUITEM = &H0002
End Enum
Public Type HELPINFO
    cbSize As Long
    iContextType As HelpInfo_ContextFlags
    iCtrlId As Long
    hItemHandle As LongPtr
    dwContextId As LongPtr
    MousePos As POINT
End Type

Public Declare PtrSafe Function WinHelpA Lib "user32" (ByVal hWndMain As LongPtr, ByVal lpszHelp As String, ByVal uCommand As WinHelpCommands, ByVal dwData As LongPtr) As BOOL
Public Declare PtrSafe Function WinHelpW Lib "user32" (ByVal hWndMain As LongPtr, ByVal lpszHelp As LongPtr, ByVal uCommand As WinHelpCommands, ByVal dwData As LongPtr) As BOOL
Public DeclareWide PtrSafe Function WinHelp Lib "user32" Alias "WinHelpW" (ByVal hWndMain As LongPtr, ByVal lpszHelp As String, ByVal uCommand As WinHelpCommands, ByVal dwData As LongPtr) As BOOL
Public Declare PtrSafe Function GetWindowContextHelpId Lib "user32" (ByVal hWnd As LongPtr) As Long
Public Declare PtrSafe Function GetMenuContextHelpId Lib "user32" (ByVal hMenu As LongPtr) As Long
Public Declare PtrSafe Function SetMenuContextHelpId Lib "user32" (ByVal hMenu As LongPtr, ByVal dw As Long) As Long
Public Declare PtrSafe Function SetWindowContextHelpId Lib "user32" (ByVal hWnd As LongPtr, ByVal dw As Long) As Long


Public Declare PtrSafe Function PaintDesktop Lib "user32" (ByVal hdc As LongPtr) As BOOL
Public Declare PtrSafe Function IsImmersiveProcess Lib "user32" (ByVal hProcess As LongPtr) As BOOL
Public Declare PtrSafe Function GetGUIThreadInfo Lib "user32" (ByVal idThread As Long, pgui As GUITHREADINFO) As BOOL

Public Enum WINDOWCOMPOSITIONATTRIB
	WCA_UNDEFINED = 0
	WCA_NCRENDERING_ENABLED = 1
	WCA_NCRENDERING_POLICY = 2
	WCA_TRANSITIONS_FORCEDISABLED = 3
	WCA_ALLOW_NCPAINT = 4
	WCA_CAPTION_BUTTON_BOUNDS = 5
	WCA_NONCLIENT_RTL_LAYOUT = 6
	WCA_FORCE_ICONIC_REPRESENTATION = 7
	WCA_EXTENDED_FRAME_BOUNDS = 8
	WCA_HAS_ICONIC_BITMAP = 9
	WCA_THEME_ATTRIBUTES = 10
	WCA_NCRENDERING_EXILED = 11
	WCA_NCADORNMENTINFO = 12
	WCA_EXCLUDED_FROM_LIVEPREVIEW = 13
	WCA_VIDEO_OVERLAY_ACTIVE = 14
	WCA_FORCE_ACTIVEWINDOW_APPEARANCE = 15
	WCA_DISALLOW_PEEK = 16
	WCA_CLOAK = 17
	WCA_CLOAKED = 18
	WCA_ACCENT_POLICY = 19
	WCA_FREEZE_REPRESENTATION = 20
	WCA_EVER_UNCLOAKED = 21
	WCA_VISUAL_OWNER = 22
	WCA_HOLOGRAPHIC = 23
	WCA_EXCLUDED_FROM_DDA = 24
	WCA_PASSIVEUPDATEMODE = 25
	WCA_USEDARKMODECOLORS = 26
	WCA_CORNER_STYLE = 27
	WCA_PART_COLOR = 28
	WCA_DISABLE_MOVESIZE_FEEDBACK = 29
	WCA_LAST = 30
End Enum
Public Type WINDOWCOMPOSITIONATTRIBDATA
	Attrib As WINDOWCOMPOSITIONATTRIB
	pvData As LongPtr
	cbData As LongPtr
End Type
Public Enum ACCENT_STATE
	ACCENT_DISABLED = 0
	ACCENT_ENABLE_GRADIENT = 1
	ACCENT_ENABLE_TRANSPARENTGRADIENT = 2
	ACCENT_ENABLE_BLURBEHIND = 3
	ACCENT_ENABLE_ACRYLICBLURBEHIND = 4 ' RS4 1803
	ACCENT_ENABLE_HOSTBACKDROP = 5 ' RS5 1809
	ACCENT_INVALID_STATE = 6
End Enum
Public Type ACCENT_POLICY
	AccentState As ACCENT_STATE
	AccentFlags As WindowCompositionAccentFlags
	GradientColor As Long
	AnimationId As Long
End Type
' Public Declare PtrSafe Function SetWindowCompositionAttribute Lib "user32" (ByVal hWnd As LongPtr, pAttribData As WINCOMPATTRDATA) As BOOL
' Public Enum WindowCompositionAttribute
    ' WCA_UNDEFINED=0
    ' WCA_NCRENDERING_ENABLED= 1
    ' WCA_NCRENDERING_POLICY=2
    ' WCA_TRANSITIONS_FORCEDISABLED=3
    ' WCA_ALLOW_NCPAINT=4
    ' WCA_CAPTION_BUTTON_BOUNDS=5
    ' WCA_NONCLIENT_RTL_LAYOUT=6
    ' WCA_FORCE_ICONIC_REPRESENTATION=7
    ' WCA_EXTENDED_FRAME_BOUNDS=8
    ' WCA_HAS_ICONIC_BITMAP=9
    ' WCA_THEME_ATTRIBUTES= 10
    ' WCA_NCRENDERING_EXILED=11
    ' WCA_NCADORNMENTINFO=12
    ' WCA_EXCLUDED_FROM_LIVEPREVIEW=13
    ' WCA_VIDEO_OVERLAY_ACTIVE=14
    ' WCA_FORCE_ACTIVEWINDOW_APPEARANCE=15
    ' WCA_DISALLOW_PEEK=16
    ' WCA_CLOAK=17
    ' WCA_CLOAKED=18
    ' WCA_ACCENT_POLICY=19
    ' WCA_FREEZE_REPRESENTATION=20
    ' WCA_EVER_UNCLOAKED=21
    ' WCA_VISUAL_OWNER=22
    ' WCA_HOLOGRAPHIC=23
    ' WCA_EXCLUDED_FROM_DDA=24
    ' WCA_PASSIVEUPDATEMODE=25
    ' WCA_LAST=26
' End Enum
' Public Enum WindowCompositionAccentState
    ' ACCENT_DISABLED=0
    ' ACCENT_ENABLE_GRADIENT=1
    ' ACCENT_ENABLE_TRANSPARENTGRADIENT=2
    ' ACCENT_ENABLE_BLURBEHIND=3
    ' ACCENT_ENABLE_ACRYLICBLURBEHIND= 4 ' RS4 1803.17063
    ' ACCENT_ENABLE_HOSTBACKDROP=5 ' RS5 1809
    ' ACCENT_INVALID_STATE=6
' End Enum
Public Enum WindowCompositionAccentFlags
    '  ...
    DrawLeftBorder = &H20
    DrawTopBorder = &H40
    DrawRightBorder = &H80
    DrawBottomBorder = &H100
    DrawAllBorders = (DrawLeftBorder Or DrawTopBorder Or DrawRightBorder Or DrawBottomBorder)
    '  ...
End Enum
' Public Type WINCOMPATTRDATA
    ' Attrib As WindowCompositionAttribute
    ' pvData As LongPtr
    ' cbSize As Long
' End Type
' Public Type ACCENTPOLICY
    ' AccentState As WindowCompositionAccentState
    ' AccentFlags As WindowCompositionAccentFlags
    ' GradientColor As Long
    ' AnimationId As Long
' End Type

Public Enum FlashWindowFlags
	FLASHW_STOP = 0
	FLASHW_CAPTION = &H00000001
	FLASHW_TRAY = &H00000002
	FLASHW_ALL = (FLASHW_CAPTION Or FLASHW_TRAY)
	FLASHW_TIMER = &H00000004
	FLASHW_TIMERNOFG = &H0000000C
End Enum
Public Type FLASHWINFO
    cbSize As Long
    hWnd As LongPtr
    dwFlags As FlashWindowFlags
    uCount As Long
    dwTimeout As Long
End Type

Public Enum GuiResourceTypes
    GR_GDIOBJECTS = 0 /* Count of GDI objects */
    GR_USEROBJECTS = 1 /* Count of USER objects */
    GR_GDIOBJECTS_PEAK = 2 /* Peak count of GDI objects */
    GR_USEROBJECTS_PEAK = 4 /* Peak count of USER objects */
    GR_GLOBAL = (-2)
End Enum

Public Enum SetLastErrorEx_Flags
    SLE_ERROR = &H00000001
    SLE_MINORERROR = &H00000002
    SLE_WARNING = &H00000003
End Enum


Public Const RIM_INPUT  = 0
Public Const RIM_INPUTSINK  = 1

Public Enum RawInputTypes
    RIM_TYPEMOUSE = 0
    RIM_TYPEKEYBOARD = 1
    RIM_TYPEHID = 2
    RIM_TYPEMAX = 2
End Enum

Public Enum RawMouseIndicatorFlags
    MOUSE_MOVE_RELATIVE = 0
    MOUSE_MOVE_ABSOLUTE = 1
    MOUSE_VIRTUAL_DESKTOP = &H02  ' the coordinates are mapped to the virtual desktop
    MOUSE_ATTRIBUTES_CHANGED = &H04  ' requery for mouse attributes
    MOUSE_MOVE_NOCOALESCE = &H08  ' do not coalesce mouse moves
End Enum

Public Enum RawMouseButtons
    RI_MOUSE_LEFT_BUTTON_DOWN = &H0001  ' Left Button changed to down.
    RI_MOUSE_LEFT_BUTTON_UP = &H0002  ' Left Button changed to up.
    RI_MOUSE_RIGHT_BUTTON_DOWN = &H0004  ' Right Button changed to down.
    RI_MOUSE_RIGHT_BUTTON_UP = &H0008  ' Right Button changed to up.
    RI_MOUSE_MIDDLE_BUTTON_DOWN = &H0010  ' Middle Button changed to down.
    RI_MOUSE_MIDDLE_BUTTON_UP = &H0020  ' Middle Button changed to up.
    RI_MOUSE_BUTTON_1_DOWN = RI_MOUSE_LEFT_BUTTON_DOWN
    RI_MOUSE_BUTTON_1_UP = RI_MOUSE_LEFT_BUTTON_UP
    RI_MOUSE_BUTTON_2_DOWN = RI_MOUSE_RIGHT_BUTTON_DOWN
    RI_MOUSE_BUTTON_2_UP = RI_MOUSE_RIGHT_BUTTON_UP
    RI_MOUSE_BUTTON_3_DOWN = RI_MOUSE_MIDDLE_BUTTON_DOWN
    RI_MOUSE_BUTTON_3_UP = RI_MOUSE_MIDDLE_BUTTON_UP
    RI_MOUSE_BUTTON_4_DOWN = &H0040
    RI_MOUSE_BUTTON_4_UP = &H0080
    RI_MOUSE_BUTTON_5_DOWN = &H0100
    RI_MOUSE_BUTTON_5_UP = &H0200
    /*
    * If usButtonFlags has RI_MOUSE_WHEEL, the wheel delta is stored in usButtonData.
    * Take it as a signed value.
    */
    RI_MOUSE_WHEEL = &H0400
    'if(WINVER >= 0x0600)
    RI_MOUSE_HWHEEL = &H0800
End Enum

[Description("📝**NOTE:** You can obtain usButtonData from the HIWORD of ulButtons")]
Public Type RAWMOUSE
    /* [ TypeHint(RawMouseIndicatorFlags) ] */ usFlags As Integer
    ulButtons As RawMouseButtons
    ulRawButtons As Long
    lLastX As Long
    lLastY As Long
    ulExtraInformation As Long
End Type

Public Const KEYBOARD_OVERRUN_MAKE_CODE = &HFF

Public Enum RawKeyboardDataFlags
    RI_KEY_MAKE = 0
    RI_KEY_BREAK = 1
    RI_KEY_E0 = 2
    RI_KEY_E1 = 4
    RI_KEY_TERMSRV_SET_LED = 8
    RI_KEY_TERMSRV_SHADOW = &H10
End Enum

[Description("⚠️ **WARNING:** You cannot use this struct as-is due to SAFEARRAY considerations. Copy the first 8 bytes, determine the size, then copy the rest into bRawData(0) ")]
Public Type RAWHID
    dwSizeHid As Long ' byte size of each report
    dwCount As Long ' number of input packed
    bRawData() As Byte
End Type

Public Type RAWKEYBOARD
    MakeCode As Integer
    /* [ TypeHint(RawKeyboardDataFlags) ] */ Flags As Integer
    Reserved As Integer
    /* [ TypeHint(VirtualKeyCodes) ] */ VKey As Integer
    Message As Long
    ExtraInformation As Long
End Type

Public Type RAWINPUTHEADER
    dwType As RawInputTypes
    dwSize As Long
    hDevice As LongPtr
    wParam As LongPtr
End Type

Public Type RAWINPUT
	Header As RAWINPUTHEADER
    Union(23) As Byte
End Type

Public Type RID_DEVICE_INFO_HID
    dwVendorId As Long
    dwProductId As Long
    dwVersionNumber As Long
    usUsagePage As Integer
    usUsage As Integer
End Type

Public Enum KeyboardTypes
    KEYBOARD_TYPE_GENERIC_101 = (4)
    KEYBOARD_TYPE_JAPAN = (7)
    KEYBOARD_TYPE_KOREA = (8)
    KEYBOARD_TYPE_UNKNOWN = (&H51)
End Enum
Public Type RID_DEVICE_INFO_KEYBOARD
    dwType As KeyboardTypes
    dwSubType As Long
    dwKeyboardMode As Long
    dwNumberOfFunctionKeys As Long
    dwNumberOfIndicators As Long
    dwNumberOfKeysTotal As Long
End Type

Public Enum MouseHardwareTypes
    MOUSE_INPORT_HARDWARE = &H0001
    MOUSE_I8042_HARDWARE = &H0002
    MOUSE_SERIAL_HARDWARE = &H0004
    BALLPOINT_I8042_HARDWARE = &H0008
    BALLPOINT_SERIAL_HARDWARE = &H0010
    WHEELMOUSE_I8042_HARDWARE = &H0020
    WHEELMOUSE_SERIAL_HARDWARE = &H0040
    MOUSE_HID_HARDWARE = &H0080
    WHEELMOUSE_HID_HARDWARE = &H0100
    HORIZONTAL_WHEEL_PRESENT = &H8000&
End Enum
Public Type RID_DEVICE_INFO_MOUSE
    dwId As MouseHardwareTypes
    dwNumberOfButtons As Long
    dwSampleRate As Long
    fHasHorizontalWheel As Long
End Type

[Description("Populate union with either RID_DEVICE_INFO_MOUSE, ...KEYBOARD, or ...HID")]
Public Type RID_DEVICE_INFO
    cbSize As Long
    dwType As RawInputTypes
    Union(23) As Byte
End Type

Public Enum RawInputGetDevInfoFlags
    RIDI_PREPARSEDDATA = &H20000005
    RIDI_DEVICENAME = &H20000007  ' the return valus is the character length, not the byte size
    RIDI_DEVICEINFO = &H2000000b
End Enum

Public Enum RawInputGetDataFlags
    RID_INPUT = &H10000003
    RID_HEADER = &H10000005
End Enum

Public Enum RawInputDeviceFlags
    RIDEV_REMOVE = &H00000001
    RIDEV_EXCLUDE = &H00000010
    RIDEV_PAGEONLY = &H00000020
    RIDEV_NOLEGACY = &H00000030
    RIDEV_INPUTSINK = &H00000100
    RIDEV_CAPTUREMOUSE = &H00000200  ' effective when mouse nolegacy is specified, otherwise it would be an error
    RIDEV_NOHOTKEYS = &H00000200  ' effective for keyboard.
    RIDEV_APPKEYS = &H00000400  ' effective for keyboard.
    RIDEV_EXINPUTSINK = &H00001000
    RIDEV_DEVNOTIFY = &H00002000
    RIDEV_EXMODEMASK = &H000000F0
End Enum

Public Type RAWINPUTDEVICE
    /* [ TypeHint(HID_USAGE_PAGE) ] */ usUsagePage As Integer ' Toplevel collection UsagePage
    usUsage As Integer ' Toplevel collection Usage. There's about 2900 of these, so they're not defined in WinDevLib.
                       ' See hidusage.h in the SDK (\shared, not \um)
    dwFlags As RawInputDeviceFlags
    hwndTarget As LongPtr ' Target hwnd. NULL = follows keyboard focus
End Type

Public Const GIDC_ARRIVAL  = 1
Public Const GIDC_REMOVAL  = 2

Public Type RAWINPUTDEVICELIST
    hDevice As LongPtr
    dwType As RawInputTypes
End Type

Public Enum WM_POINTERDEVICECHANGE_FLAGS
    PDC_ARRIVAL = &H001
    PDC_REMOVAL = &H002
    PDC_ORIENTATION_0 = &H004
    PDC_ORIENTATION_90 = &H008
    PDC_ORIENTATION_180 = &H010
    PDC_ORIENTATION_270 = &H020
    PDC_MODE_DEFAULT = &H040
    PDC_MODE_CENTERED = &H080
    PDC_MAPPING_CHANGE = &H100
    PDC_RESOLUTION = &H200
    PDC_ORIGIN = &H400
    PDC_MODE_ASPECTRATIOPRESERVED = &H800
End Enum

Public Const DISPLAYCONFIG_MAXPATH = 1024

Public Type DISPLAYCONFIG_RATIONAL
    Numerator As Long
    Denominator As Long
End Type


Public Enum DISPLAYCONFIG_ROTATION
    DISPLAYCONFIG_ROTATION_IDENTITY = 1
    DISPLAYCONFIG_ROTATION_ROTATE90 = 2
    DISPLAYCONFIG_ROTATION_ROTATE180 = 3
    DISPLAYCONFIG_ROTATION_ROTATE270 = 4
    DISPLAYCONFIG_ROTATION_FORCE_UINT32 = &HFFFFFFFF
End Enum

Public Enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_OTHER = -1
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HD15 = 0
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SVIDEO = 1
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPOSITE_VIDEO = 2
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPONENT_VIDEO = 3
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DVI = 4
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HDMI = 5
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_LVDS = 6
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_D_JPN = 8
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDI = 9
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EXTERNAL = 10
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EMBEDDED = 11
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EXTERNAL = 12
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EMBEDDED = 13
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDTVDONGLE = 14
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_MIRACAST = 15
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INDIRECT_WIRED = 16
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INDIRECT_VIRTUAL = 17
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_USB_TUNNEL = 18
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INTERNAL = &H80000000
    DISPLAYCONFIG_OUTPUT_TECHNOLOGY_FORCE_UINT32 = &HFFFFFFFF
End Enum
Public Enum DISPLAYCONFIG_SCANLINE_ORDERING
    DISPLAYCONFIG_SCANLINE_ORDERING_UNSPECIFIED = 0
    DISPLAYCONFIG_SCANLINE_ORDERING_PROGRESSIVE = 1
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED = 2
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_UPPERFIELDFIRST = DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED
    DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_LOWERFIELDFIRST = 3
    DISPLAYCONFIG_SCANLINE_ORDERING_FORCE_UINT32 = &HFFFFFFFF
End Enum

Public Type DISPLAYCONFIG_2DREGION
    cx As Long
    cy As Long
End Type

Public Type DISPLAYCONFIG_VIDEO_SIGNAL_INFO
    pixelRate As LongLong
    hSyncFreq As DISPLAYCONFIG_RATIONAL
    vSyncFreq As DISPLAYCONFIG_RATIONAL
    activeSize As DISPLAYCONFIG_2DREGION
    totalSize As DISPLAYCONFIG_2DREGION
    videoStandardAndOrVSyncFreqDiv As Long
    ' Scan line ordering (e.g. progressive, interlaced).
    scanLineOrdering As DISPLAYCONFIG_SCANLINE_ORDERING
End Type

Public Enum DISPLAYCONFIG_SCALING
    DISPLAYCONFIG_SCALING_IDENTITY = 1
    DISPLAYCONFIG_SCALING_CENTERED = 2
    DISPLAYCONFIG_SCALING_STRETCHED = 3
    DISPLAYCONFIG_SCALING_ASPECTRATIOCENTEREDMAX = 4
    DISPLAYCONFIG_SCALING_CUSTOM = 5
    DISPLAYCONFIG_SCALING_PREFERRED = 128
    DISPLAYCONFIG_SCALING_FORCE_UINT32 = &HFFFFFFFF
End Enum

Public Enum DISPLAYCONFIG_MODE_INFO_TYPE
    DISPLAYCONFIG_MODE_INFO_TYPE_SOURCE = 1
    DISPLAYCONFIG_MODE_INFO_TYPE_TARGET = 2
    DISPLAYCONFIG_MODE_INFO_TYPE_DESKTOP_IMAGE = 3
    DISPLAYCONFIG_MODE_INFO_TYPE_FORCE_UINT32 = &HFFFFFFFF
End Enum

Public Enum DISPLAYCONFIG_PIXELFORMAT
    DISPLAYCONFIG_PIXELFORMAT_8BPP = 1
    DISPLAYCONFIG_PIXELFORMAT_16BPP = 2
    DISPLAYCONFIG_PIXELFORMAT_24BPP = 3
    DISPLAYCONFIG_PIXELFORMAT_32BPP = 4
    DISPLAYCONFIG_PIXELFORMAT_NONGDI = 5
    DISPLAYCONFIG_PIXELFORMAT_FORCE_UINT32 = &Hffffffff
End Enum

Public Type DISPLAYCONFIG_SOURCE_MODE
    width As Long
    height As Long
    pixelFormat As DISPLAYCONFIG_PIXELFORMAT
    position As POINTL
End Type

Public Type DISPLAYCONFIG_TARGET_MODE
    targetVideoSignalInfo As DISPLAYCONFIG_VIDEO_SIGNAL_INFO
End Type

Public Type DISPLAYCONFIG_DESKTOP_IMAGE_INFO
    PathSourceSize As POINTL
    DesktopImageRegion As RECTL
    DesktopImageClip As RECTL
End Type

Public Type DISPLAYCONFIG_MODE_INFO
    infoType As DISPLAYCONFIG_MODE_INFO_TYPE
    id As Long
    ModeOrImageInfo(39) As Byte
    adapterId As LUID
End Type

Public Const DISPLAYCONFIG_PATH_MODE_IDX_INVALID  = &Hffffffff
Public Const DISPLAYCONFIG_PATH_TARGET_MODE_IDX_INVALID  = &Hffff
Public Const DISPLAYCONFIG_PATH_DESKTOP_IMAGE_IDX_INVALID  = &Hffff
Public Const DISPLAYCONFIG_PATH_SOURCE_MODE_IDX_INVALID  = &Hffff
Public Const DISPLAYCONFIG_PATH_CLONE_GROUP_INVALID  = &Hffff

Public Enum PATH_SOURCE_STATUSFLAGS
    DISPLAYCONFIG_SOURCE_IN_USE = &H00000001
End Enum
Public Type DISPLAYCONFIG_PATH_SOURCE_INFO
    adapterId As LUID
    id As Long
    'union
    ' {
    modeInfoIdx As Long
    '  struct
    '  {
    '       UINT32 cloneGroupId       : 16;
    '       UINT32 sourceModeInfoIdx  : 16;
    '   } DUMMYSTRUCTNAME;
    '} DUMMYUNIONNAME;
    statusFlags As PATH_SOURCE_STATUSFLAGS
End Type

Public Enum DISPLAYCONFIG_TARGET_STATUSFLAGS
    DISPLAYCONFIG_TARGET_IN_USE = &H00000001
    DISPLAYCONFIG_TARGET_FORCIBLE = &H00000002
    DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_BOOT = &H00000004
    DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_PATH = &H00000008
    DISPLAYCONFIG_TARGET_FORCED_AVAILABILITY_SYSTEM = &H00000010
    DISPLAYCONFIG_TARGET_IS_HMD = &H00000020
End Enum
Public Type DISPLAYCONFIG_PATH_TARGET_INFO
    adapterId As LUID
    id As Long
    'union
    '{
    modeInfoIdx As Long
    ' struct
    ' {
    '      UINT32 desktopModeInfoIdx : 16;
    '      UINT32 targetModeInfoIdx  : 16;
    '   } DUMMYSTRUCTNAME;
    '} DUMMYUNIONNAME;
    outputTechnology As DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY
    rotation As DISPLAYCONFIG_ROTATION
    scaling As DISPLAYCONFIG_SCALING
    refreshRate As DISPLAYCONFIG_RATIONAL
    scanLineOrdering As DISPLAYCONFIG_SCANLINE_ORDERING
    targetAvailable As Long
    statusFlags As DISPLAYCONFIG_TARGET_STATUSFLAGS
End Type

Public Enum DISPLAYCONFIG_PATHINFO_STATUSFLAGS
    DISPLAYCONFIG_PATH_ACTIVE = &H00000001
    DISPLAYCONFIG_PATH_PREFERRED_UNSCALED = &H00000004  ' Not implemented
    DISPLAYCONFIG_PATH_SUPPORT_VIRTUAL_MODE = &H00000008
    DISPLAYCONFIG_PATH_BOOST_REFRESH_RATE = &H00000010
    DISPLAYCONFIG_PATH_VALID_FLAGS = &H0000001D
End Enum
Public Type DISPLAYCONFIG_PATH_INFO
    sourceInfo As DISPLAYCONFIG_PATH_SOURCE_INFO
    targetInfo As DISPLAYCONFIG_PATH_TARGET_INFO
    flags As DISPLAYCONFIG_PATHINFO_STATUSFLAGS
End Type

Public Enum DISPLAYCONFIG_TOPOLOGY_ID
    DISPLAYCONFIG_TOPOLOGY_INTERNAL = &H00000001
    DISPLAYCONFIG_TOPOLOGY_CLONE = &H00000002
    DISPLAYCONFIG_TOPOLOGY_EXTEND = &H00000004
    DISPLAYCONFIG_TOPOLOGY_EXTERNAL = &H00000008
    DISPLAYCONFIG_TOPOLOGY_FORCE_UINT32 = &HFFFFFFFF
End Enum

Public Enum DISPLAYCONFIG_DEVICE_INFO_TYPE
    DISPLAYCONFIG_DEVICE_INFO_GET_SOURCE_NAME = 1
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_NAME = 2
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_PREFERRED_MODE = 3
    DISPLAYCONFIG_DEVICE_INFO_GET_ADAPTER_NAME = 4
    DISPLAYCONFIG_DEVICE_INFO_SET_TARGET_PERSISTENCE = 5
    DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_BASE_TYPE = 6
    DISPLAYCONFIG_DEVICE_INFO_GET_SUPPORT_VIRTUAL_RESOLUTION = 7
    DISPLAYCONFIG_DEVICE_INFO_SET_SUPPORT_VIRTUAL_RESOLUTION = 8
    DISPLAYCONFIG_DEVICE_INFO_GET_ADVANCED_COLOR_INFO = 9
    DISPLAYCONFIG_DEVICE_INFO_SET_ADVANCED_COLOR_STATE = 10
    DISPLAYCONFIG_DEVICE_INFO_GET_SDR_WHITE_LEVEL = 11
    DISPLAYCONFIG_DEVICE_INFO_GET_MONITOR_SPECIALIZATION = 12
    DISPLAYCONFIG_DEVICE_INFO_SET_MONITOR_SPECIALIZATION = 13
    DISPLAYCONFIG_DEVICE_INFO_SET_MUX_TARGET = 14
    DISPLAYCONFIG_DEVICE_INFO_GET_ADVANCED_COLOR_INFO_2 = 15
    DISPLAYCONFIG_DEVICE_INFO_SET_HDR_STATE = 16
    DISPLAYCONFIG_DEVICE_INFO_SET_WCG_STATE = 17
    DISPLAYCONFIG_DEVICE_INFO_FORCE_UINT32 = &HFFFFFFFF
End Enum

Public Type DISPLAYCONFIG_DEVICE_INFO_HEADER
    type As DISPLAYCONFIG_DEVICE_INFO_TYPE
    size As Long
    adapterId As LUID
    id As Long
End Type

Public Type DISPLAYCONFIG_SOURCE_DEVICE_NAME
    header As DISPLAYCONFIG_DEVICE_INFO_HEADER
    viewGdiDeviceName(0 To (CCHDEVICENAME - 1)) As Integer
End Type

Public Type DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS
    'union 
    '{
    'struct
    '{
    '     UINT32  friendlyNameFromEdid : 1;
    '     UINT32  friendlyNameForced : 1;
    '    UINT32  edidIdsValid : 1;
    '     UINT32  reserved : 29;
    ' } DUMMYSTRUCTNAME;
    value As Long
    '} DUMMYUNIONNAME;
End Type

Public Type DISPLAYCONFIG_TARGET_DEVICE_NAME
    header As DISPLAYCONFIG_DEVICE_INFO_HEADER
    flags As DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS
    outputTechnology As DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY
    edidManufactureId As Integer
    edidProductCodeId As Integer
    connectorInstance As Long
    monitorFriendlyDeviceName(0 To 63) As Integer
    monitorDevicePath(0 To 127) As Integer
End Type

Public Type DISPLAYCONFIG_TARGET_PREFERRED_MODE
    header As DISPLAYCONFIG_DEVICE_INFO_HEADER
    width As Long
    height As Long
    targetMode As DISPLAYCONFIG_TARGET_MODE
End Type
Public Type DISPLAYCONFIG_ADAPTER_NAME
    header As DISPLAYCONFIG_DEVICE_INFO_HEADER
    adapterDevicePath(0 To 127) As Integer
End Type

Public Type DISPLAYCONFIG_TARGET_BASE_TYPE
    header As DISPLAYCONFIG_DEVICE_INFO_HEADER
    baseOutputTechnology As DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY
End Type

Public Type DISPLAYCONFIG_SET_TARGET_PERSISTENCE
    header As DISPLAYCONFIG_DEVICE_INFO_HEADER
    value As Long
End Type
Public Type DISPLAYCONFIG_SUPPORT_VIRTUAL_RESOLUTION
    header As DISPLAYCONFIG_DEVICE_INFO_HEADER
    value As Long
End Type

Public Enum DISPLAYCONFIG_COLOR_ENCODING
    DISPLAYCONFIG_COLOR_ENCODING_RGB = 0
    DISPLAYCONFIG_COLOR_ENCODING_YCBCR444 = 1
    DISPLAYCONFIG_COLOR_ENCODING_YCBCR422 = 2
    DISPLAYCONFIG_COLOR_ENCODING_YCBCR420 = 3
    DISPLAYCONFIG_COLOR_ENCODING_INTENSITY = 4
    DISPLAYCONFIG_COLOR_ENCODING_FORCE_UINT32 = &HFFFFFFFF
End Enum

Public Type DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO
    header As DISPLAYCONFIG_DEVICE_INFO_HEADER
    'union
    '{
    'struct
    '{
    '  UINT32 advancedColorSupported        :1;    // A type of advanced color is supported
    '  UINT32 advancedColorEnabled          :1;    // A type of advanced color is enabled
    '  UINT32 wideColorEnforced             :1;    // Wide color gamut is enabled
    '  UINT32 advancedColorForceDisabled    :1;    // Advanced color is force disabled due to system/OS policy
    '    UINT32 reserved                      :28;
    '   } DUMMYSTRUCTNAME;
    value As Long
    '} DUMMYUNIONNAME;
    colorEncoding As DISPLAYCONFIG_COLOR_ENCODING
    bitsPerColorChannel As Long
End Type

Public Type DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE
    header As DISPLAYCONFIG_DEVICE_INFO_HEADER
    value As Long
End Type

Public Type DISPLAYCONFIG_SDR_WHITE_LEVEL
    header As DISPLAYCONFIG_DEVICE_INFO_HEADER
    ' SDRWhiteLevel represents a multiplier for standard SDR white
    ' peak value i.e. 80 nits represented as fixed point.
    ' To get value in nits use the following conversion
    ' SDRWhiteLevel in nits = (SDRWhiteLevel / 1000 ) * 80
    SDRWhiteLevel As Long
End Type

Public Type DISPLAYCONFIG_GET_MONITOR_SPECIALIZATION
    header As DISPLAYCONFIG_DEVICE_INFO_HEADER
    value As Long
End Type

Public Type DISPLAYCONFIG_SET_MONITOR_SPECIALIZATION
    header As DISPLAYCONFIG_DEVICE_INFO_HEADER
    'union
    '{
    ' struct
    '{
    '    UINT32 isSpecializationEnabled : 1;
    '     UINT32 reserved             : 31;
    '  } DUMMYSTRUCTNAME;
    value As Long
    ' } DUMMYUNIONNAME;
    specializationType As UUID
    specializationSubType As UUID
    specializationApplicationName(0 To 127) As Integer
End Type

Public Type DISPLAYCONFIG_MUX_TARGET
    adapterLuid As LUID
    targetId As Long
End Type

Public Type DISPLAYCONFIG_SWITCH_MUX
    header As DISPLAYCONFIG_DEVICE_INFO_HEADER 'in
    errorStage As Long 'out
End Type

Public Enum DISPLAYCONFIG_QUERY_FLAGS
    QDC_ALL_PATHS = &H00000001
    QDC_ONLY_ACTIVE_PATHS = &H00000002
    QDC_DATABASE_CURRENT = &H00000004
    QDC_VIRTUAL_MODE_AWARE = &H00000010
    QDC_INCLUDE_HMD = &H00000020
    QDC_VIRTUAL_REFRESH_RATE_AWARE = &H00000040
End Enum

Public Enum DISPLAYCONFIG_SET_FLAGS
    SDC_TOPOLOGY_INTERNAL = &H00000001
    SDC_TOPOLOGY_CLONE = &H00000002
    SDC_TOPOLOGY_EXTEND = &H00000004
    SDC_TOPOLOGY_EXTERNAL = &H00000008
    SDC_TOPOLOGY_SUPPLIED = &H00000010
    SDC_USE_DATABASE_CURRENT = (SDC_TOPOLOGY_INTERNAL Or SDC_TOPOLOGY_CLONE Or SDC_TOPOLOGY_EXTEND Or SDC_TOPOLOGY_EXTERNAL)
    SDC_USE_SUPPLIED_DISPLAY_CONFIG = &H00000020
    SDC_VALIDATE = &H00000040
    SDC_APPLY = &H00000080
    SDC_NO_OPTIMIZATION = &H00000100
    SDC_SAVE_TO_DATABASE = &H00000200
    SDC_ALLOW_CHANGES = &H00000400
    SDC_PATH_PERSIST_IF_REQUIRED = &H00000800
    SDC_FORCE_MODE_ENUMERATION = &H00001000
    SDC_ALLOW_PATH_ORDER_CHANGES = &H00002000
    SDC_VIRTUAL_MODE_AWARE = &H00008000&
    SDC_VIRTUAL_REFRESH_RATE_AWARE = &H00020000
End Enum

Public Enum DISPLAYCONFIG_ADVANCED_COLOR_MODE
    DISPLAYCONFIG_ADVANCED_COLOR_MODE_SDR = 0 ' RGB888 composition, display-referred color, display-referred luminance
    DISPLAYCONFIG_ADVANCED_COLOR_MODE_WCG = 1 ' Advanced color (FP16 scRGB composition), scene-referred color, display-referred luminance
    DISPLAYCONFIG_ADVANCED_COLOR_MODE_HDR = 2 ' Advanced color (FP16 scRGB composition), scene-referred color, scene-referred luminance
End Enum
Public Type DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO_2
    header As DISPLAYCONFIG_DEVICE_INFO_HEADER
    'union
    '{
    '    struct
    '    {
    '      UINT32 advancedColorSupported        :1;    // A type of advanced color is supported
    '      UINT32 advancedColorActive           :1;    // A type of advanced color is active (see currentColorMode for the specific advanced color mode)
    '      UINT32 reserved1                     :1;
    '      UINT32 advancedColorLimitedByPolicy  :1;    // System/OS policy is limiting advanced color options (see currentColorMode for the current mode)
    '      UINT32 highDynamicRangeSupported     :1;    // HDR is supported
    '      UINT32 highDynamicRangeUserEnabled   :1;    // HDR is enabled by the user (but may not be active)
    '      UINT32 wideColorSupported            :1;    // Wide color gamut is supported
    '      UINT32 wideColorUserEnabled          :1;    // Wide color gamut is enabled by the user (but may not be active)
    '      UINT32 reserved                      :24;
    '    } DUMMYSTRUCTNAME;
    '    UINT32 value;
    '} DUMMYUNIONNAME;
    value As Long
    colorEncoding As DISPLAYCONFIG_COLOR_ENCODING
    bitsPerColorChannel As Long
    activeColorMode As DISPLAYCONFIG_ADVANCED_COLOR_MODE ' The active color mode for this monitor
End Type

Public Type DISPLAYCONFIG_SET_HDR_STATE
    header As DISPLAYCONFIG_DEVICE_INFO_HEADER
    'union
    '{
    '    struct
    '    {
    '      UINT32 enableHdr  :1;
    '      UINT32 reserved  :31;
    '    } DUMMYSTRUCTNAME;
    value As Long
    '}DUMMYUNIONNAME;
End Type

Public Type DISPLAYCONFIG_SET_WCG_STATE
    header As DISPLAYCONFIG_DEVICE_INFO_HEADER
    'union
    '{
    '    struct
    '    {
    '      UINT32 enableWcg  :1;
    '      UINT32 reserved  :31;
    '    } DUMMYSTRUCTNAME;
    value As Long
    '}DUMMYUNIONNAME;
End Type

Public Type DISPLAYCONFIG_SET_WHITE_LEVEL
    header As DISPLAYCONFIG_DEVICE_INFO_HEADER
    brightness As Long ' allowed values: 80-480 nits, brightness = nits * 1000 / 80
    flag_unk As BOOL ' true to set brightness, false to only update brightness
End Type




Public Const POINTER_DEVICE_PRODUCT_STRING_MAX = 520
Public Enum POINTER_DEVICE_TYPE
    POINTER_DEVICE_TYPE_INTEGRATED_PEN = &H00000001
    POINTER_DEVICE_TYPE_EXTERNAL_PEN = &H00000002
    POINTER_DEVICE_TYPE_TOUCH = &H00000003
    '#if(WINVER> = &H0603)
    POINTER_DEVICE_TYPE_TOUCH_PAD = &H00000004
    '#endif WINVER >= 0x0603 
    POINTER_DEVICE_TYPE_MAX = &HFFFFFFFF
End Enum
Public Type POINTER_DEVICE_INFO
    displayOrientation As DISPLAYCONFIG_ROTATION
    device As LongPtr
    pointerDeviceType As POINTER_DEVICE_TYPE
    monitor As LongPtr
    startingCursorId As Long
    maxActiveContacts As Integer
    productString(0 To (POINTER_DEVICE_PRODUCT_STRING_MAX - 1)) As Integer
End Type

Public Type POINTER_DEVICE_PROPERTY
    logicalMin As Long
    logicalMax As Long
    physicalMin As Long
    physicalMax As Long
    unit As Long
    unitExponent As Long
    /* [ TypeHint(HID_USAGE_PAGE) ] */ usagePageId As Integer
    usageId As Integer
End Type

Public Enum POINTER_DEVICE_CURSOR_TYPE
    POINTER_DEVICE_CURSOR_TYPE_UNKNOWN = &H00000000
    POINTER_DEVICE_CURSOR_TYPE_TIP = &H00000001
    POINTER_DEVICE_CURSOR_TYPE_ERASER = &H00000002
    POINTER_DEVICE_CURSOR_TYPE_MAX = &HFFFFFFFF
End Enum
Public Type POINTER_DEVICE_CURSOR_INFO
    cursorId As Long
    cursor As POINTER_DEVICE_CURSOR_TYPE
End Type


Public Enum WDA_FLAGS
    WDA_NONE = &H00000000
    WDA_MONITOR = &H00000001
    WDA_EXCLUDEFROMCAPTURE = &H00000011
End Enum

Public Enum WindowStatusFlags
    WS_ACTIVECAPTION = &H1
End Enum
Public Type WINDOWINFO
    cbSize As Long
    rcWindow As RECT
    rcClient As RECT
    dwStyle As WindowStyles
    dwExStyle As WindowStylesEx
    dwWindowStatus As WindowStatusFlags
    cxWindowBorders As Long
    cyWindowBorders As Long
    atomWindowType As Integer
    wCreatorVersion As Integer
End Type

Public Const CCHILDREN_TITLEBAR  = 5

Public Type TITLEBARINFO
    cbSize As Long
    rcTitleBar As RECT
    rgstate(CCHILDREN_TITLEBAR) As STATE_SYSTEM_FLAGS
End Type
Public Type TITLEBARINFOEX
    cbSize As Long
    rcTitleBar As RECT
    rgstate(CCHILDREN_TITLEBAR) As STATE_SYSTEM_FLAGS
    rgrect(CCHILDREN_TITLEBAR) As RECT
End Type

Public Type MOUSEMOVEPOINT
    x As Long
    y As Long
    time As Long
    dwExtraInfo As LongPtr
End Type

Public Enum MouseMovePointResolution
    GMMP_USE_DISPLAY_POINTS = 1
    GMMP_USE_HIGH_RESOLUTION_POINTS = 2
End Enum

Public Enum INPUT_MESSAGE_DEVICE_TYPE
    IMDT_UNAVAILABLE = &H00000000 ' not specified
    IMDT_KEYBOARD = &H00000001 ' from keyboard
    IMDT_MOUSE = &H00000002 ' from mouse
    IMDT_TOUCH = &H00000004 ' from touch
    IMDT_PEN = &H00000008 ' from pen
    ' #if(WINVER >= 0x0603)
    IMDT_TOUCHPAD = &H00000010 ' from touchpad
    ' #endif /* WINVER >= 0x0603 */
End Enum
Public Enum INPUT_MESSAGE_ORIGIN_ID
    IMO_UNAVAILABLE = &H00000000 ' not specified
    IMO_HARDWARE = &H00000001 ' from a hardware device or injected by a UIAccess app
    IMO_INJECTED = &H00000002 ' injected via SendInput() by a non-UIAccess app
    IMO_SYSTEM = &H00000004 ' injected by the system
End Enum
Public Type INPUT_MESSAGE_SOURCE
    deviceType As INPUT_MESSAGE_DEVICE_TYPE
    originId As INPUT_MESSAGE_ORIGIN_ID
End Type

Public Enum SysMetricsDigitizerFlags
    NID_INTEGRATED_TOUCH = &H00000001
    NID_EXTERNAL_TOUCH = &H00000002
    NID_INTEGRATED_PEN = &H00000004
    NID_EXTERNAL_PEN = &H00000008
    NID_MULTI_INPUT = &H00000040
    NID_READY = &H00000080
End Enum

Public Enum DragObject_Fmt
    DO_DROPFILE = &H454C4946
    DO_PRINTFILE = &H544E5250
End Enum
Public Enum DropStruct_wFmt
    DOF_EXECUTABLE = &H8001&
    DOF_DOCUMENT = &H8002&
    DOF_DIRECTORY = &H8003&
    DOF_MULTIPLE = &H8004&
    DOF_PROGMAN = &H0001
    DOF_SHELLDATA = &H0002
End Enum
Public Type DROPSTRUCT
    hwndSource As LongPtr
    hwndSink As LongPtr
    wFmt As DropStruct_wFmt
    dwData As LongPtr
    ptDrop As POINT
    dwControlData As Long
End Type

Public Type UPDATELAYEREDWINDOWINFO
    cbSize As Long
    hdcDst As LongPtr
    pptDst As LongPtr 'const POINT*
    psize As LongPtr 'const SIZE*
    hdcSrc As LongPtr
    pptSrc As LongPtr 'const POINT*
    crKey As Long
    pblend As LongPtr 'const BLENDFUNCTION*
    dwFlags As UpdateLayeredWindowFlags
    prcDirty As LongPtr 'const RECT*
End Type

Public Declare PtrSafe Function TrackMouseEvent Lib "user32" (lpEventTrack As TRACKMOUSEEVENT) As BOOL
Public Declare PtrSafe Sub keybd_event Lib "user32" ([TypeHint(VirtualKeyCodes)] ByVal bVk As Byte, ByVal bScan As Byte, ByVal dwFlags As KeybdEventFlags, ByVal dwExtraInfo As LongPtr)
Public Declare PtrSafe Sub mouse_event Lib "user32" (ByVal dwFlags As MouseEventFlags, ByVal dx As Long, ByVal dy As Long, ByVal dwData As Long, ByVal dwExtraInfo As LongPtr)
Public Declare PtrSafe Function SendInput Lib "user32" (ByVal cInputs As Long, pInputs As INPUT, ByVal cbSize As Long) As Long
Public Declare PtrSafe Function SwapMouseButton Lib "user32" (ByVal fSwap As BOOL) As BOOL
Public Declare PtrSafe Function GetDoubleClickTime Lib "user32" () As Long
Public Declare PtrSafe Function SetDoubleClickTime Lib "user32" (ByVal nMilliseconds As Long) As BOOL
Public Declare PtrSafe Function GetRawInputDeviceInfoA Lib "user32" (ByVal hDevice As LongPtr, ByVal uiCommand As RawInputGetDevInfoFlags, pData As Any, pcbSize As Long) As Long
Public Declare PtrSafe Function GetRawInputDeviceInfoW Lib "user32" (ByVal hDevice As LongPtr, ByVal uiCommand As RawInputGetDevInfoFlags, pData As Any, pcbSize As Long) As Long
Public DeclareWide PtrSafe Function GetRawInputDeviceInfo Lib "user32" Alias "GetRawInputDeviceInfoW" (ByVal hDevice As LongPtr, ByVal uiCommand As RawInputGetDevInfoFlags, pData As Any, pcbSize As Long) As Long
Public DeclareWide PtrSafe Function GetRawInputData Lib "user32" (ByVal hRawInput As LongPtr, ByVal uiCommand As RawInputGetDataFlags, pData As Any, pcbsize As Long, ByVal cbSizeHeader As Long) As Long
Public Declare PtrSafe Function GetRawInputBuffer Lib "user32" (pData As RAWINPUT, cbSize As Long, ByVal hwndTarget As LongPtr) As Long
Public Declare PtrSafe Function RegisterRawInputDevices Lib "user32" (pRawInputDevices As RAWINPUTDEVICE, ByVal uiNumDevices As Long, ByVal cbSize As Long) As BOOL
Public Declare PtrSafe Function GetRegisteredRawInputDevices Lib "user32" (pRawInputDevices As RAWINPUTDEVICE, puiNumDevices As Long, ByVal cbSize As Long) As BOOL
Public Declare PtrSafe Function GetRawInputDeviceList Lib "user32" (pRawInputDeviceList As RAWINPUTDEVICELIST, puiNumDevices As Long, ByVal cbSize As Long) As Long
Public Declare PtrSafe Function DefRawInputProc Lib "user32" (pRawInput As RAWINPUT, ByVal nInput As Long, ByVal cbSizeHeader As Long) As LongPtr
Public Declare PtrSafe Function GetPointerDevices Lib "user32" (deviceCount As Long, pointerDevices As POINTER_DEVICE_INFO) As BOOL
Public Declare PtrSafe Function GetPointerDevice Lib "user32" (ByVal device As LongPtr, pointerDevices As POINTER_DEVICE_INFO) As BOOL
Public Declare PtrSafe Function GetPointerDeviceProperties Lib "user32" (ByVal device As LongPtr, propertyCount As Long, pointerProperties As POINTER_DEVICE_PROPERTY) As BOOL
Public Declare PtrSafe Function RegisterPointerDeviceNotifications Lib "user32" (ByVal window As LongPtr, ByVal notifyRange As BOOL) As BOOL
Public Declare PtrSafe Function GetPointerDeviceRects Lib "user32" (ByVal device As LongPtr, pointerDeviceRect As RECT, displayRect As RECT) As BOOL
Public Declare PtrSafe Function GetPointerDeviceCursors Lib "user32" (ByVal device As LongPtr, cursorCount As Long, pointerProperties As POINTER_DEVICE_CURSOR_INFO) As BOOL
Public Declare PtrSafe Function GetRawPointerDeviceData Lib "user32" (ByVal pointerId As Long, ByVal historyCount As Long, ByVal propertiesCount As Long, pProperties As POINTER_DEVICE_PROPERTY, pValues As Long) As BOOL
Public Declare PtrSafe Function WaitForInputIdle Lib "user32" (ByVal hProcess As LongPtr, ByVal dwMilliseconds As Long) As Long
[Description("Only this Ex version exists; GetMouseMovePoints was a Windows CE function, not exported from desktop versions.")]
Public Declare PtrSafe Function GetMouseMovePointsEx Lib "user32" (ByVal cbSize As Long, lppt As MOUSEMOVEPOINT, lpptBuf As MOUSEMOVEPOINT, ByVal nBufPoints As Long, ByVal resolution As MouseMovePointResolution) As Long
Public Declare PtrSafe Function GetCurrentInputMessageSource Lib "user32" (inputMessageSource As INPUT_MESSAGE_SOURCE) As BOOL
Public Declare PtrSafe Function GetCIMSSM Lib "user32" (inputMessageSource As INPUT_MESSAGE_SOURCE) As BOOL




'The following has been moved to slShellCore.twin due to use of SHOWWINDOW
' Public Declare PtrSafe Function ShowWindow Lib "user32" (ByVal hWnd As LongPtr, ByVal nCmdShow As SHOWWINDOW) As Long
Public Declare PtrSafe Function ShowWindowAsync Lib "user32" (ByVal hWnd As LongPtr, ByVal nCmdShow As SHOWWINDOW) As Long
Public Declare PtrSafe Function SetWindowCompositionAttribute Lib "user32" (ByVal hWnd As LongPtr, wca As WINDOWCOMPOSITIONATTRIBDATA) As Long
Public Declare PtrSafe Function TileWindows Lib "user32" (ByVal hwndParent As LongPtr, ByVal wHow As MDITILE_FLAGS, lpRect As RECT, ByVal cKids As Long, lpKids As LongPtr) As Integer
Public Declare PtrSafe Function CascadeWindows Lib "user32" (ByVal hwndParent As LongPtr, ByVal wHow As MDITILE_FLAGS, lpRect As RECT, ByVal cKids As Long, lpKids As LongPtr) As Integer
Public Declare PtrSafe Function UpdateWindow Lib "user32" (ByVal hWnd As LongPtr) As BOOL
[Description("Reminder: Use `vbNullPtr` for optional UDTs where you'd have passed 0 or ByVal 0 in VBx.")]
Public Declare PtrSafe Function RedrawWindow Lib "user32" (ByVal hWnd As LongPtr, lprcUpdate As RECT, ByVal hrgnUpdate As LongPtr, ByVal flags As RDW_Flags) As Long
Public Declare PtrSafe Function LockWindowUpdate Lib "user32" (Optional ByVal hWndLock As LongPtr) As BOOL
Public Declare PtrSafe Function AnimateWindow Lib "user32" (ByVal hWnd As LongPtr, [TypeHint(AnimateWindowTimeDefaults)] ByVal dwTime As Long, ByVal dwFlags As AnimateWindowFlags) As Long
Public Declare PtrSafe Function BeginPaint Lib "user32" (ByVal hWnd As LongPtr, lpPaint As PAINTSTRUCT) As LongPtr
Public Declare PtrSafe Function EndPaint Lib "user32" (ByVal hWnd As LongPtr, lpPaint As PAINTSTRUCT) As BOOL
Public Declare PtrSafe Function GetClientRect Lib "user32" (ByVal hWnd As LongPtr, lpRect As RECT) As BOOL
Public Declare PtrSafe Function GetWindowRect Lib "user32" (ByVal hWnd As LongPtr, lpRect As RECT) As BOOL
Public Declare PtrSafe Function GetWindow Lib "user32" (ByVal hWnd As LongPtr, ByVal uCmd As GetWindowConsts) As LongPtr
Public Function GetNextWindow(ByVal hWnd As LongPtr, ByVal wCmd As GetWindowConsts) As LongPtr: Return GetWindow(hWnd, wCmd): End Function
Public Declare PtrSafe Function AdjustWindowRect Lib "user32" (lpRect As RECT, ByVal dwStyle As WindowStyles, ByVal bMenu As Long) As Long
Public Declare PtrSafe Function AdjustWindowRectEx Lib "user32" (lpRect As RECT, ByVal dwStyle As WindowStyles, ByVal bMenu As BOOL, ByVal dwExStyle As WindowStylesEx) As Long
Public Declare PtrSafe Function SetWindowPos Lib "user32" (ByVal hWnd As LongPtr, ByVal hWndInsertAfter As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal CX As Long, ByVal CY As Long, ByVal wFlags As SWP_Flags) As Long
Public Declare PtrSafe Function GetWindowPlacement Lib "user32" (ByVal hWnd As LongPtr, lpwndpl As WINDOWPLACEMENT) As BOOL
Public Declare PtrSafe Function SetWindowPlacement Lib "user32" (ByVal hWnd As LongPtr, lpwndpl As WINDOWPLACEMENT) As BOOL
Public Declare PtrSafe Function GetDisplayAutoRotationPreferences Lib "user32" (pOrientation As ORIENTATION_PREFERENCE) As BOOL
Public Declare PtrSafe Function SetDisplayAutoRotationPreferences Lib "user32" (ByVal orientation As ORIENTATION_PREFERENCE) As BOOL
Public Declare PtrSafe Function GetDisplayAutoRotationPreferencesByProcessId Lib "user32" (ByVal dwProcessId As Long, pOrientation As ORIENTATION_PREFERENCE, fRotateScreen As BOOL) As BOOL
Public Declare PtrSafe Function GetAutoRotationState Lib "user32" (pState As AR_STATE) As BOOL
Public Declare PtrSafe Function BeginDeferWindowPos Lib "user32" (ByVal nNumWindows As Long) As LongPtr
Public Declare PtrSafe Function DeferWindowPos Lib "user32" (ByVal hWinPosInfo As LongPtr, ByVal hWnd As LongPtr, [TypeHint(WindowZOrderDefaults)] ByVal hWndInsertAfter As LongPtr, ByVal x As Long, ByVal y As Long, ByVal cx As Long, ByVal cy As Long, ByVal uFlags As SWP_Flags) As LongPtr
Public Declare PtrSafe Function EndDeferWindowPos Lib "user32" (ByVal hWinPosInfo As LongPtr) As BOOL
Public Declare PtrSafe Function BringWindowToTop Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public Declare PtrSafe Function ClientToScreen Lib "user32" (ByVal hWnd As LongPtr, lpPoint As Any) As BOOL  ' lpPoint As POINTAPI) As Long
Public Declare PtrSafe Function ScreenToClient Lib "user32" (ByVal hWnd As LongPtr, lpPoint As Any) As BOOL  ' lpPoint As POINT) As Long
Public Declare PtrSafe Function SetCapture Lib "user32" (ByVal hwnd As LongPtr) As LongPtr
Public Declare PtrSafe Function GetCapture Lib "user32" () As LongPtr
Public Declare PtrSafe Function ReleaseCapture Lib "user32" () As BOOL
Public Declare PtrSafe Function GetDC Lib "user32" (ByVal hWnd As LongPtr) As LongPtr
Public Declare PtrSafe Function GetDCEx Lib "user32" (ByVal hWnd As LongPtr, ByVal hrgnClip As LongPtr, ByVal flags As GetDcExFlags) As LongPtr
Public Declare PtrSafe Function ReleaseDC Lib "user32" (ByVal hWnd As LongPtr, ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function GetWindowDC Lib "user32" (ByVal hWnd As LongPtr) As LongPtr
Public Declare PtrSafe Function WindowFromDC Lib "user32" (ByVal hdc As LongPtr) As LongPtr
Public Declare PtrSafe Function PrintWindow Lib "user32" (ByVal hwnd As LongPtr, ByVal hdcBlt As LongPtr, ByVal nFlags As PrintWindowFlags) As BOOL
Public Declare PtrSafe Function SetLayeredWindowAttributes Lib "user32" (ByVal hwnd As LongPtr, ByVal crKey As Long, ByVal bAlpha As Byte, ByVal dwFlags As LayeredWindowAttributes) As BOOL
Public Declare PtrSafe Function GetLayeredWindowAttributes Lib "user32" (ByVal hwnd As LongPtr, Optional pcrKey As Long, Optional pbAlpha As Byte, Optional pdwFlags As LayeredWindowAttributes) As BOOL
Public Declare PtrSafe Function UpdateLayeredWindow Lib "user32" (ByVal hwnd As LongPtr, ByVal hdcDst As LongPtr, ppDst As POINT, psize As SIZE, ByVal hdcSrc As LongPtr, pptSrc As POINT, ByVal crKey As Long, pblend As BLENDFUNCTION, ByVal dwFlags As UpdateLayeredWindowFlags) As BOOL
Public Declare PtrSafe Function UpdateLayeredWindowIndirect Lib "user32" (ByVal hwnd As LongPtr, pULWInfo As UPDATELAYEREDWINDOWINFO) As BOOL
Public Declare PtrSafe Function GetWindowThreadProcessId Lib "user32" (ByVal hwnd As LongPtr, Optional lpdwProcessId As Long) As Long
Public Declare PtrSafe Function MapWindowPoints Lib "user32" (ByVal hWndFrom As LongPtr, ByVal hWndTo As LongPtr, lpPoints As Any, ByVal cPoints As Long) As Long
Public Declare PtrSafe Function MoveWindow Lib "user32" (ByVal hWnd As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal bRepaint As BOOL) As BOOL
Public Declare PtrSafe Function SetForegroundWindow Lib "user32" (ByVal hWnd As LongPtr) As BOOL
Public Declare PtrSafe Function AllowSetForegroundWindow Lib "user32" (ByVal dwProcessId As Long) As BOOL
Public Declare PtrSafe Function LockSetForegroundWindow Lib "user32" (ByVal uLockCode As LSFW_Flags) As BOOL
Public Declare PtrSafe Function GetForegroundWindow Lib "user32" () As LongPtr
Public Declare PtrSafe Function GetTopWindow Lib "user32" (Optional ByVal hwnd As LongPtr) As LongPtr
Public Declare PtrSafe Function IsWindow Lib "user32" (ByVal hWnd As LongPtr) As BOOL
Public Declare PtrSafe Function IsMenu Lib "user32" (ByVal hMenu As LongPtr) As BOOL
Public Declare PtrSafe Function IsHungAppWindow Lib "user32" (ByVal hWnd As LongPtr) As BOOL
Public Declare PtrSafe Function IsWindowArranged Lib "user32" (ByVal hWnd As LongPtr) As BOOL
Public Declare PtrSafe Function IsWindowVisible Lib "user32" (ByVal hWnd As LongPtr) As BOOL
Public Declare PtrSafe Function IsWindowUnicode Lib "user32" (ByVal hWnd As LongPtr) As BOOL
[Description("Determines whether a window is maximized.")]
Public Declare PtrSafe Function IsZoomed Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public Declare PtrSafe Function IsIconic Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public Declare PtrSafe Function SetParent Lib "user32" (ByVal hWndChild As LongPtr, Optional ByVal hWndNewParent As LongPtr) As LongPtr
Public Declare PtrSafe Function GetParent Lib "user32" (ByVal hWnd As LongPtr) As LongPtr
Public Declare PtrSafe Sub SwitchToThisWindow Lib "user32" (ByVal hWnd As LongPtr, ByVal fAltTab As BOOL)
Public Declare PtrSafe Function EnableWindow Lib "user32" (ByVal hWnd As LongPtr, ByVal fEnable As BOOL) As BOOL
Public Declare PtrSafe Function IsWindowEnabled Lib "user32" (ByVal hWnd As LongPtr) As BOOL
Public Declare PtrSafe Function SetActiveWindow Lib "user32" (ByVal hwnd As LongPtr) As LongPtr
Public Declare PtrSafe Function GetActiveWindow Lib "user32" () As LongPtr
Public Declare PtrSafe Function GetFocus Lib "user32" () As LongPtr
Public Declare PtrSafe Function SetFocus Lib "user32" (ByVal hwnd As LongPtr) As LongPtr
Public Declare PtrSafe Function GetFocusAPI Lib "user32" Alias "GetFocus" () As LongPtr
Public Declare PtrSafe Function SetFocusAPI Lib "user32" Alias "SetFocus" (ByVal hwnd As LongPtr) As LongPtr
[Description("pt is a ByVal As POINT; copy a POINT into a LongLong. We use LongLong instead of x,y for 64bit compatibility without seperate definitions.")]
Public Declare PtrSafe Function ChildWindowFromPoint Lib "user32" (ByVal hwnd As LongPtr, ByVal pt As LongLong) As LongPtr
[Description("pt is a ByVal As POINT; copy a POINT into a LongLong. We use LongLong instead of x,y for 64bit compatibility without seperate definitions.")]
Public Declare PtrSafe Function RealChildWindowFromPoint Lib "user32" (ByVal hwnd As LongPtr, ByVal pt As LongLong) As LongPtr
[Description("pt is a ByVal As POINT; copy a POINT into a LongLong. We use LongLong instead of x,y for 64bit compatibility without seperate definitions.")]
Public Declare PtrSafe Function ChildWindowFromPointEx Lib "user32" (ByVal hwnd As LongPtr, ByVal pt As LongLong, ByVal flags As ChildWindowFromPointFlags) As LongPtr
Public Declare PtrSafe Function InternalGetWindowText Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As LongPtr, ByVal nMaxCount As Long) As Long
Public Declare PtrSafe Function GetWindowTextA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As String, ByVal nMaxCount As Long) As Long
Public Declare PtrSafe Function GetWindowTextW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As LongPtr, ByVal nMaxCount As Long) As Long
Public DeclareWide PtrSafe Function GetWindowText Lib "user32" Alias "GetWindowTextW" (ByVal hWnd As LongPtr, ByVal lpString As String, ByVal nMaxCount As Long) As Long
Public Declare PtrSafe Function GetWindowTextLengthA Lib "user32" (ByVal hwnd As LongPtr) As Long
Public Declare PtrSafe Function GetWindowTextLengthW Lib "user32" (ByVal hwnd As LongPtr) As Long
Public DeclareWide PtrSafe Function GetWindowTextLength Lib "user32" Alias "GetWindowTextLengthW" (ByVal hwnd As LongPtr) As Long
Public Declare PtrSafe Function SetWindowTextA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As String) As BOOL
Public Declare PtrSafe Function SetWindowTextW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpString As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetWindowText Lib "user32" Alias "SetWindowTextW" (ByVal hWnd As LongPtr, ByVal lpString As String) As BOOL
[Description("xy is a ByVal As POINT; copy a POINT into a LongLong. We use LongLong instead of x,y for 64bit compatibility without seperate definitions.")]
Public Declare PtrSafe Function WindowFromPoint Lib "user32" (ByVal xy As LongLong) As LongPtr
[Description("xy is a ByVal As POINT; copy a POINT into a LongLong. We use LongLong instead of x,y for 64bit compatibility without seperate definitions.")]
Public Declare PtrSafe Function WindowFromPhysicalPoint Lib "user32" (ByVal xy As LongLong) As LongPtr
Public Declare PtrSafe Function GetWindowDisplayAffinity Lib "user32" (ByVal hwnd As LongPtr, pdwAffinity As WDA_FLAGS) As BOOL
Public Declare PtrSafe Function SetWindowDisplayAffinity Lib "user32" (ByVal hwnd As LongPtr, ByVal dwAffinity As WDA_FLAGS) As BOOL
Public Declare PtrSafe Function FlashWindow Lib "user32" (ByVal hwnd As LongPtr, ByVal bInvert As BOOL) As BOOL
Public Declare PtrSafe Function FlashWindowEx Lib "user32" (ByRef pFWI As FLASHWINFO) As BOOL
Public Declare PtrSafe Function ShowOwnedPopups Lib "user32" (ByVal hwnd As LongPtr, ByVal fShow As BOOL) As BOOL
Public Declare PtrSafe Function GetLastActivePopup Lib "user32" (ByVal hwnd As LongPtr) As LongPtr
Public Declare PtrSafe Function AnyPopup Lib "user32" () As BOOL
Public Declare PtrSafe Function OpenIcon Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public Declare PtrSafe Function CloseWindow Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public Declare PtrSafe Function RealGetWindowClassA Lib "user32" (ByVal hwnd As LongPtr, ByVal ptszClassName As String, ByVal cchClassNameMax As Long) As Long
Public Declare PtrSafe Function RealGetWindowClassW Lib "user32" (ByVal hwnd As LongPtr, ByVal ptszClassName As LongPtr, ByVal cchClassNameMax As Long) As Long
Public DeclareWide PtrSafe Function RealGetWindowClass Lib "user32" Alias "RealGetWindowClassW" (ByVal hwnd As LongPtr, ByVal ptszClassName As String, ByVal cchClassNameMax As Long) As Long
Public Declare PtrSafe Function ArrangeIconicWindows Lib "user32" (ByVal hwnd As LongPtr) As Long
Public Declare PtrSafe Function GetProcessDefaultLayout Lib "user32" (pdwDefaultLayout As LayoutOrientationOptions) As BOOL
Public Declare PtrSafe Function SetProcessDefaultLayout Lib "user32" (ByVal dwDefaultLayout As LayoutOrientationOptions) As BOOL
Public Declare PtrSafe Function DragObject Lib "user32" (ByVal hwndParent As LongPtr, ByVal hwndFrom As LongPtr, ByVal fmt As DragObject_Fmt, ByVal data As LongPtr, Optional ByVal hcur As LongPtr) As Long
Public Declare PtrSafe Function DragDetect Lib "user32" (ByVal hWnd As LongPtr, ByVal pt As LongLong) As Long
Public Declare PtrSafe Function GetTitleBarInfo Lib "user32" (ByVal hWnd As LongPtr, pti As TITLEBARINFO) As BOOL
Public Declare PtrSafe Function GetWindowInfo Lib "user32" (ByVal hWnd As LongPtr, pwi As WINDOWINFO) As BOOL
Public Declare PtrSafe Function GhostWindowFromHungWindow Lib "user32" (ByVal hwnd As LongPtr) As LongPtr
Public Declare PtrSafe Function HungWindowFromGhostWindow Lib "user32" (ByVal hwnd As LongPtr) As LongPtr
Public Declare PtrSafe Sub DisableProcessWindowsGhosting Lib "user32" ()
Public Declare PtrSafe Function FrostCrashedWindow Lib "user32" (ByVal hwndToReplace As LongPtr, ByVal hwndErrorReportOwnerWnd As LongPtr) As LongPtr

Public Declare PtrSafe Function GetAsyncKeyState Lib "user32" (ByVal vKey As VirtualKeyCodes) As Integer
Public Declare PtrSafe Function GetKeyState Lib "user32" (ByVal nVirtKey As VirtualKeyCodes) As Integer
Public Declare PtrSafe Function MapVirtualKeyA Lib "user32" (ByVal uCode As Long, ByVal uMapType As MapVkFlags) As Long
Public Declare PtrSafe Function MapVirtualKeyW Lib "user32" (ByVal uCode As Long, ByVal uMapType As MapVkFlags) As Long
Public DeclareWide PtrSafe Function MapVirtualKey Lib "user32" Alias "MapVirtualKeyW" (ByVal uCode As Long, ByVal uMapType As MapVkFlags) As Long
Public Declare PtrSafe Function MapVirtualKeyExA Lib "user32" (ByVal uCode As Long, ByVal uMapType As MapVkFlags, Optional ByVal dwhkl As LongPtr) As Long
Public Declare PtrSafe Function MapVirtualKeyExW Lib "user32" (ByVal uCode As Long, ByVal uMapType As MapVkFlags, Optional ByVal dwhkl As LongPtr) As Long
Public DeclareWide PtrSafe Function MapVirtualKeyEx Lib "user32" Alias "MapVirtualKeyExW" (ByVal uCode As Long, ByVal uMapType As MapVkFlags, Optional ByVal dwhkl As LongPtr) As Long
Public Declare PtrSafe Function GetLastInputInfo Lib "user32" (plii As LASTINPUTINFO) As BOOL
Public Declare PtrSafe Function SetKeyboardState Lib "user32" (lpKeyState As Byte) As BOOL
Public Declare PtrSafe Function GetKeyboardState Lib "user32" (lpKeyState As Byte) As BOOL
Public Declare PtrSafe Function GetKeyboardLayoutList Lib "user32" (ByVal nBuff As Long, lpList As LongPtr) As Long
Public Declare PtrSafe Function GetKeyboardLayout Lib "user32" (ByVal idThread As Long) As LongPtr
Public Declare PtrSafe Function LoadKeyboardLayoutA Lib "user32" (ByVal pwszKLID As String, ByVal Flags As KeyboardLoadLayoutFlags) As LongPtr
Public Declare PtrSafe Function LoadKeyboardLayoutW Lib "user32" (ByVal pwszKLID As LongPtr, ByVal Flags As KeyboardLoadLayoutFlags) As LongPtr
Public DeclareWide PtrSafe Function LoadKeyboardLayout Lib "user32" Alias "LoadKeyboardLayoutW" (ByVal pwszKLID As String, ByVal Flags As KeyboardLoadLayoutFlags) As LongPtr
Public Declare PtrSafe Function ActivateKeyboardLayout Lib "user32" (ByVal hkl As LongPtr, ByVal Flags As KeyboardLoadLayoutFlags) As LongPtr
[Description("Buffer must be preallocated and a minimum of KL_NAMELENGTH characters.")]
Public Declare PtrSafe Function GetKeyboardLayoutNameA Lib "user32" (ByVal pwszKLID As String) As BOOL
[Description("Buffer must be preallocated and a minimum of KL_NAMELENGTH characters.")]
Public Declare PtrSafe Function GetKeyboardLayoutNameW Lib "user32" (ByVal pwszKLID As LongPtr) As BOOL
[Description("Buffer must be preallocated and a minimum of KL_NAMELENGTH characters.")]
Public DeclareWide PtrSafe Function GetKeyboardLayoutName Lib "user32" Alias "GetKeyboardLayoutNameW" (ByVal pwszKLID As String) As BOOL
Public Declare PtrSafe Function UnloadKeyboardLayout Lib "user32" (ByVal hkl As LongPtr) As BOOL
Public Declare PtrSafe Function OemKeyScan Lib "user32" (ByVal wOemChar As Integer) As Long
Public Declare PtrSafe Function VkKeyScanA Lib "user32" (ByVal ch As Byte) As Integer
Public Declare PtrSafe Function VkKeyScanW Lib "user32" (ByVal ch As Integer) As Integer
Public DeclareWide PtrSafe Function VkKeyScan Lib "user32" Alias "VkKeyScanW" (ByVal ch As Integer) As Integer
Public Declare PtrSafe Function VkKeyScanExA Lib "user32" (ByVal ch As Byte, ByVal dwhkl As LongPtr) As Integer
Public Declare PtrSafe Function VkKeyScanExW Lib "user32" (ByVal ch As Integer, ByVal dwhkl As LongPtr) As Integer
Public DeclareWide PtrSafe Function VkKeyScanEx Lib "user32" Alias "VkKeyScanExW" (ByVal ch As Integer, ByVal dwhkl As LongPtr) As Integer
Public Declare PtrSafe Function GetKBCodePage Lib "user32" () As CodePageDefaults
Public Declare PtrSafe Function GetKeyNameTextA Lib "user32" (ByVal lParam As Long, ByVal lpString As String, ByVal cchSize As Long) As Long
Public Declare PtrSafe Function GetKeyNameTextW Lib "user32" (ByVal lParam As Long, ByVal lpString As LongPtr, ByVal cchSize As Long) As Long
Public DeclareWide PtrSafe Function GetKeyNameText Lib "user32" Alias "GetKeyNameTextW" (ByVal lParam As Long, ByVal lpString As String, ByVal cchSize As Long) As Long
Public Declare PtrSafe Function GetKeyboardType Lib "user32" (ByVal nTypeFlag As Long) As Long
Public Declare PtrSafe Function ToAscii Lib "user32" (ByVal uVirtKey As VirtualKeyCodes, ByVal uScanCode As Long, lpKeyState As Byte, lpChar As Integer, ByVal uFlags As Long) As Long
Public Declare PtrSafe Function ToAsciiEx Lib "user32" (ByVal uVirtKey As VirtualKeyCodes, ByVal uScanCode As Long, lpKeyState As Byte, lpChar As Integer, ByVal uFlags As Long, ByVal dwhkl As LongPtr) As Long
Public DeclareWide PtrSafe Function ToUnicode Lib "user32" (ByVal uVirtKey As VirtualKeyCodes, ByVal uScanCode As Long, lpKeyState As Byte, ByVal pwszBuff As String, ByVal cchBuff As Long, ByVal wFlags As Long) As Long
Public Declare PtrSafe Function ToUnicode Lib "user32" (ByVal uVirtKey As VirtualKeyCodes, ByVal uScanCode As Long, lpKeyState As Byte, ByVal pwszBuff As LongPtr, ByVal cchBuff As Long, ByVal wFlags As Long) As Long
Public DeclareWide PtrSafe Function ToUnicodeEx Lib "user32" (ByVal wVirtKey As VirtualKeyCodes, ByVal wScanCode As Long, lpKeyState As Byte, ByVal pwszBuff As String, ByVal cchBuff As Long, ByVal wFlags As Long, Optional ByVal dwhkl As LongPtr) As Long


Public Declare PtrSafe Function CreateAcceleratorTableW Lib "user32" (paccel As ACCEL, ByVal cAccel As Long) As LongPtr
Public Declare PtrSafe Function CreateAcceleratorTableA Lib "user32" (paccel As ACCEL, ByVal cAccel As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateAcceleratorTable Lib "user32" Alias "CreateAcceleratorTableW" (paccel As ACCEL, ByVal cAccel As Long) As LongPtr
Public Declare PtrSafe Function DestroyAcceleratorTable Lib "user32" (ByVal hAccel As LongPtr) As BOOL
Public Declare PtrSafe Function CopyAcceleratorTableW Lib "user32" (ByVal hAccel As LongPtr, lpAccelDst As ACCEL, ByVal cAccel As Long) As LongPtr
Public Declare PtrSafe Function CopyAcceleratorTableA Lib "user32" (ByVal hAccel As LongPtr, lpAccelDst As ACCEL, ByVal cAccel As Long) As LongPtr
Public DeclareWide PtrSafe Function CopyAcceleratorTable Lib "user32" Alias "CopyAcceleratorTableW" (ByVal hAccel As LongPtr, lpAccelDst As ACCEL, ByVal cAccel As Long) As LongPtr
Public Declare PtrSafe Function TranslateAcceleratorA Lib "user32" (ByVal hWnd As LongPtr, ByVal hAccTable As LongPtr, lpMsg As MSG) As Long
Public Declare PtrSafe Function TranslateAcceleratorW Lib "user32" (ByVal hWnd As LongPtr, ByVal hAccTable As LongPtr, lpMsg As MSG) As Long
Public DeclareWide PtrSafe Function TranslateAccelerator Lib "user32" Alias "TranslateAcceleratorW" (ByVal hWnd As LongPtr, ByVal hAccTable As LongPtr, lpMsg As MSG) As Long
Public Declare PtrSafe Function LoadAcceleratorsA Lib "user32" (ByVal hInstance As LongPtr, ByVal lpTableName As String) As LongPtr
Public Declare PtrSafe Function LoadAcceleratorsW Lib "user32" (ByVal hInstance As LongPtr, ByVal lpTableName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function LoadAccelerators Lib "user32" Alias "LoadAcceleratorsW" (ByVal hInstance As LongPtr, ByVal lpTableName As String) As LongPtr




Public Const HKL_PREV As LongPtr = 0
Public Const HKL_NEXT As LongPtr = 1
Public Enum KeyboardLoadLayoutFlags
	KLF_ACTIVATE = &H00000001
	KLF_SUBSTITUTE_OK = &H00000002
	KLF_REORDER = &H00000008
	KLF_REPLACELANG = &H00000010
	KLF_NOTELLSHELL = &H00000080
	KLF_SETFORPROCESS = &H00000100
	KLF_SHIFTLOCK = &H00010000
	KLF_RESET = &H40000000
End Enum

Public Const KL_NAMELENGTH = 9

Public Type LASTINPUTINFO
    cbSize As Long
    dwTime As Long
End Type
    
Public Enum MapVkFlags
	MAPVK_VK_TO_VSC = (0)
	MAPVK_VSC_TO_VK = (1)
	MAPVK_VK_TO_CHAR = (2)
	MAPVK_VSC_TO_VK_EX = (3)
	MAPVK_VK_TO_VSC_EX = (4)
End Enum

Public Enum LSFW_Flags
    LSFW_LOCK = 1
    LSFW_UNLOCK = 2
End Enum

Public Enum LayeredWindowAttributes
	LWA_COLORKEY = &H00000001
	LWA_ALPHA = &H00000002
End Enum
Public Enum UpdateLayeredWindowFlags
	ULW_COLORKEY = &H00000001
	ULW_ALPHA = &H00000002
	ULW_OPAQUE = &H00000004
	ULW_EX_NORESIZE = &H00000008
End Enum
Public Type BLENDFUNCTION
	BlendOp As Byte
	BlendFlags As Byte
	SourceConstantAlpha As Byte
	AlphaFormat As Byte
End Type
Public Const AC_SRC_OVER  As Byte = 0
Public Const AC_SRC_ALPHA As Byte = 01

Public Enum EndSessionTypes
    ENDSESSION_CLOSEAPP = &H00000001
    ENDSESSION_CRITICAL = &H40000000
    ENDSESSION_LOGOFF = &H80000000
End Enum

Public Enum ExitWindowsExFlags
	EWX_LOGOFF = &H00000000
	EWX_SHUTDOWN = &H00000001
	EWX_REBOOT = &H00000002
	EWX_FORCE = &H00000004
	EWX_POWEROFF = &H00000008
	EWX_FORCEIFHUNG = &H00000010
	EWX_QUICKRESOLVE = &H00000020
	EWX_RESTARTAPPS = &H00000040
	EWX_HYBRID_SHUTDOWN = &H00400000
	EWX_BOOTOPTIONS = &H01000000
	EWX_ARSO = &H04000000
	EWX_CHECK_SAFE_FOR_SERVER = &H08000000
	EWX_SYSTEM_INITIATED = &H10000000
End Enum

Public Enum SystemShutdownReasons
	SHTDN_REASON_FLAG_COMMENT_REQUIRED = &H01000000
	SHTDN_REASON_FLAG_DIRTY_PROBLEM_ID_REQUIRED = &H02000000
	SHTDN_REASON_FLAG_CLEAN_UI = &H04000000
	SHTDN_REASON_FLAG_DIRTY_UI = &H08000000
	SHTDN_REASON_FLAG_MOBILE_UI_RESERVED = &H10000000
'  Flags that end up in the event log code.
	SHTDN_REASON_FLAG_USER_DEFINED = &H40000000
	SHTDN_REASON_FLAG_PLANNED = &H80000000
'  Microsoft major reasons.
	SHTDN_REASON_MAJOR_OTHER = &H00000000
	SHTDN_REASON_MAJOR_NONE = &H00000000
	SHTDN_REASON_MAJOR_HARDWARE = &H00010000
	SHTDN_REASON_MAJOR_OPERATINGSYSTEM = &H00020000
	SHTDN_REASON_MAJOR_SOFTWARE = &H00030000
	SHTDN_REASON_MAJOR_APPLICATION = &H00040000
	SHTDN_REASON_MAJOR_SYSTEM = &H00050000
	SHTDN_REASON_MAJOR_POWER = &H00060000
	SHTDN_REASON_MAJOR_LEGACY_API = &H00070000
'  Microsoft minor reasons.
	SHTDN_REASON_MINOR_OTHER = &H00000000
	SHTDN_REASON_MINOR_NONE = &H000000ff
	SHTDN_REASON_MINOR_MAINTENANCE = &H00000001
	SHTDN_REASON_MINOR_INSTALLATION = &H00000002
	SHTDN_REASON_MINOR_UPGRADE = &H00000003
	SHTDN_REASON_MINOR_RECONFIG = &H00000004
	SHTDN_REASON_MINOR_HUNG = &H00000005
	SHTDN_REASON_MINOR_UNSTABLE = &H00000006
	SHTDN_REASON_MINOR_DISK = &H00000007
	SHTDN_REASON_MINOR_PROCESSOR = &H00000008
	SHTDN_REASON_MINOR_NETWORKCARD = &H00000009
	SHTDN_REASON_MINOR_POWER_SUPPLY = &H0000000a
	SHTDN_REASON_MINOR_CORDUNPLUGGED = &H0000000b
	SHTDN_REASON_MINOR_ENVIRONMENT = &H0000000c
	SHTDN_REASON_MINOR_HARDWARE_DRIVER = &H0000000d
	SHTDN_REASON_MINOR_OTHERDRIVER = &H0000000e
	SHTDN_REASON_MINOR_BLUESCREEN = &H0000000F
	SHTDN_REASON_MINOR_SERVICEPACK = &H00000010
	SHTDN_REASON_MINOR_HOTFIX = &H00000011
	SHTDN_REASON_MINOR_SECURITYFIX = &H00000012
	SHTDN_REASON_MINOR_SECURITY = &H00000013
	SHTDN_REASON_MINOR_NETWORK_CONNECTIVITY = &H00000014
	SHTDN_REASON_MINOR_WMI = &H00000015
	SHTDN_REASON_MINOR_SERVICEPACK_UNINSTALL = &H00000016
	SHTDN_REASON_MINOR_HOTFIX_UNINSTALL = &H00000017
	SHTDN_REASON_MINOR_SECURITYFIX_UNINSTALL = &H00000018
	SHTDN_REASON_MINOR_MMC = &H00000019
	SHTDN_REASON_MINOR_SYSTEMRESTORE = &H0000001a
	SHTDN_REASON_MINOR_TERMSRV = &H00000020
	SHTDN_REASON_MINOR_DC_PROMOTION = &H00000021
	SHTDN_REASON_MINOR_DC_DEMOTION = &H00000022
	SHTDN_REASON_UNKNOWN = SHTDN_REASON_MINOR_NONE
	SHTDN_REASON_LEGACY_API = (SHTDN_REASON_MAJOR_LEGACY_API Or SHTDN_REASON_FLAG_PLANNED)
    'Legacy compatibility:
    REASON_SWINSTALL = (SHTDN_REASON_MAJOR_SOFTWARE Or SHTDN_REASON_MINOR_INSTALLATION)
    REASON_HWINSTALL = (SHTDN_REASON_MAJOR_HARDWARE Or SHTDN_REASON_MINOR_INSTALLATION)
    REASON_SERVICEHANG = (SHTDN_REASON_MAJOR_SOFTWARE Or SHTDN_REASON_MINOR_HUNG)
    REASON_UNSTABLE = (SHTDN_REASON_MAJOR_SYSTEM Or SHTDN_REASON_MINOR_UNSTABLE)
    REASON_SWHWRECONF = (SHTDN_REASON_MAJOR_SOFTWARE Or SHTDN_REASON_MINOR_RECONFIG)
    REASON_OTHER = (SHTDN_REASON_MAJOR_OTHER Or SHTDN_REASON_MINOR_OTHER)
    REASON_UNKNOWN = SHTDN_REASON_UNKNOWN
    REASON_LEGACY_API = SHTDN_REASON_LEGACY_API
    REASON_PLANNED_FLAG = SHTDN_REASON_FLAG_PLANNED
End Enum

Public Enum CursorInfoFlags
	CURSOR_SHOWING = &H00000001
	CURSOR_SUPPRESSED = &H00000002
End Enum
Public Type CURSORINFO
	cbSize As Long
	flags As CursorInfoFlags
	hCursor As LongPtr
	ptScreenPos As POINT
End Type

Public Enum ChangeDisplaySettingsFlags
	CDS_UPDATEREGISTRY = &H00000001
	CDS_TEST = &H00000002
	CDS_FULLSCREEN = &H00000004
	CDS_GLOBAL = &H00000008
	CDS_SET_PRIMARY = &H00000010
	CDS_VIDEOPARAMETERS = &H00000020
	CDS_ENABLE_UNSAFE_MODES = &H00000100
	CDS_DISABLE_UNSAFE_MODES = &H00000200
	CDS_RESET = &H40000000
	CDS_RESET_EX = &H20000000
	CDS_NORESET = &H10000000
End Enum

Public Enum ChangeDisplaySettingsReturnCodes
	DISP_CHANGE_SUCCESSFUL = 0
	DISP_CHANGE_RESTART = 1
	DISP_CHANGE_FAILED = -1
	DISP_CHANGE_BADMODE = -2
	DISP_CHANGE_NOTUPDATED = -3
	DISP_CHANGE_BADFLAGS = -4
	DISP_CHANGE_BADPARAM = -5
	DISP_CHANGE_BADDUALVIEW = -6
End Enum

Public Enum EnumDispMode
	ENUM_CURRENT_SETTINGS = (-1)
	ENUM_REGISTRY_SETTINGS = (-2)
End Enum

Public Enum EnumDispDevFlags
    EDD_GET_DEVICE_INTERFACE_NAME = &H00000001
End Enum

Public Enum DISPLAY_DEVICE_STATEFLAGS
    DISPLAY_DEVICE_ATTACHED_TO_DESKTOP = &H00000001
    DISPLAY_DEVICE_MULTI_DRIVER = &H00000002
    DISPLAY_DEVICE_PRIMARY_DEVICE = &H00000004
    DISPLAY_DEVICE_MIRRORING_DRIVER = &H00000008
    DISPLAY_DEVICE_VGA_COMPATIBLE = &H00000010
    DISPLAY_DEVICE_REMOVABLE = &H00000020
' #if (_WIN32_WINNT >= _WIN32_WINNT_WIN8)
    DISPLAY_DEVICE_ACC_DRIVER = &H00000040
    DISPLAY_DEVICE_MODESPRUNED = &H08000000
' #endif
    DISPLAY_DEVICE_RDPUDD = &H01000000
    DISPLAY_DEVICE_REMOTE = &H04000000
    DISPLAY_DEVICE_DISCONNECT = &H02000000
    DISPLAY_DEVICE_TS_COMPATIBLE = &H00200000
    DISPLAY_DEVICE_UNSAFE_MODES_ON = &H00080000
    DISPLAY_DEVICE_ACTIVE = &H00000001
    DISPLAY_DEVICE_ATTACHED = &H00000002
End Enum
Public Type DISPLAY_DEVICEA
    cb As Long
    DeviceName(0 To 31) As Byte
    DeviceString(0 To 127) As Byte
    StateFlags As DISPLAY_DEVICE_STATEFLAGS
    DeviceID(0 To 127) As Byte
    DeviceKey(0 To 127) As Byte
End Type
Public Type DISPLAY_DEVICEW
	cb As Long
	DeviceName(0 To 31) As Integer
	DeviceString(0 To 127) As Integer
	StateFlags As DISPLAY_DEVICE_STATEFLAGS
	DeviceID(0 To 127) As Integer
	DeviceKey(0 To 127) As Integer
End Type
'Alias DISPLAY_DEVICE As DISPLAY_DEVICEW
Public Type DISPLAY_DEVICE
	cb As Long
	DeviceName(0 To 31) As Integer
	DeviceString(0 To 127) As Integer
	StateFlags As DISPLAY_DEVICE_STATEFLAGS
	DeviceID(0 To 127) As Integer
	DeviceKey(0 To 127) As Integer
End Type

Public Enum EnumDispSettingsExFlags
	EDS_RAWMODE = &H00000002
	EDS_ROTATEDMODE = &H00000004
End Enum

Public Enum DefaultMonitorValues
	MONITOR_DEFAULTTONULL = &H00000000
	MONITOR_DEFAULTTOPRIMARY = &H00000001
	MONITOR_DEFAULTTONEAREST = &H00000002
End Enum

Public Enum MonitorInfoFlags
    MONITORINFOF_PRIMARY = &H1
End Enum

Public Type MONITORINFO
	cbSize As Long
	rcMonitor As RECT
	rcWork As RECT
	dwFlags As MonitorInfoFlags
End Type
Public Type MONITORINFOEXA
	info As MONITORINFO
	szDevice(0 To (CCHDEVICENAME - 1)) As Byte
End Type
Public Type MONITORINFOEXW
    info As MONITORINFO
    szDevice(0 To (CCHDEVICENAME - 1)) As Integer
End Type
'Alias MONITORINFOEX as MONITORINFOEXW
Public Type MONITORINFOEX
    info As MONITORINFO
    szDevice(0 To (CCHDEVICENAME - 1)) As Integer
End Type

Public Type GETCLIPBMETADATA
    Version As Long ' Currently version 1; increment this value to add more fields.
    IsDelayRendered As Long ' Indicates if the data is delay-rendered.
    IsSynthetic As Long ' Indicates if the data is produced on-demand from another format (some bitmap/text/metafile).
End Type

Public Const USER_DEFAULT_SCREEN_DPI = 96


Public Declare PtrSafe Function ChangeDisplaySettingsA Lib "user32" (lpDevMode As DEVMODEA, ByVal dwFlags As ChangeDisplaySettingsFlags) As ChangeDisplaySettingsReturnCodes
Public Declare PtrSafe Function ChangeDisplaySettingsW Lib "user32" (lpDevMode As DEVMODEW, ByVal dwFlags As ChangeDisplaySettingsFlags) As ChangeDisplaySettingsReturnCodes
Public DeclareWide PtrSafe Function ChangeDisplaySettings Lib "user32" Alias "ChangeDisplaySettingsW" (lpDevMode As DEVMODE, ByVal dwFlags As ChangeDisplaySettingsFlags) As ChangeDisplaySettingsReturnCodes
Public Declare PtrSafe Function ChangeDisplaySettingsExA Lib "user32" (ByVal lpszDeviceName As String, lpDevMode As DEVMODEA, ByVal hwnd As LongPtr, ByVal dwFlags As ChangeDisplaySettingsFlags, lParam As Any) As ChangeDisplaySettingsReturnCodes
Public DeclareWide PtrSafe Function ChangeDisplaySettingsExW Lib "user32" (ByVal lpszDeviceName As LongPtr, lpDevMode As DEVMODEW, ByVal hwnd As LongPtr, ByVal dwFlags As ChangeDisplaySettingsFlags, lParam As Any) As ChangeDisplaySettingsReturnCodes
Public DeclareWide PtrSafe Function ChangeDisplaySettingsEx Lib "user32" Alias "ChangeDisplaySettingsExW" (ByVal lpszDeviceName As String, lpDevMode As DEVMODE, ByVal hwnd As LongPtr, ByVal dwFlags As ChangeDisplaySettingsFlags, lParam As Any) As ChangeDisplaySettingsReturnCodes
Public Declare PtrSafe Function EnumDisplaySettingsA Lib "user32" (ByVal lpszDeviceName As String, ByVal iModeNum As EnumDispMode, lpDevMode As DEVMODEA) As BOOL
Public Declare PtrSafe Function EnumDisplaySettingsW Lib "user32" (ByVal lpszDeviceName As LongPtr, ByVal iModeNum As EnumDispMode, lpDevMode As DEVMODEW) As BOOL
Public DeclareWide PtrSafe Function EnumDisplaySettings Lib "user32" Alias "EnumDisplaySettingsW" (ByVal lpszDeviceName As String, ByVal iModeNum As EnumDispMode, lpDevMode As DEVMODE) As BOOL
Public Declare PtrSafe Function EnumDisplaySettingsExA Lib "user32" (ByVal lpszDeviceName As String, ByVal iModeNum As EnumDispMode, lpDevMode As DEVMODEA, ByVal dwFlags As EnumDispSettingsExFlags) As BOOL
Public Declare PtrSafe Function EnumDisplaySettingsExW Lib "user32" (ByVal lpszDeviceName As LongPtr, ByVal iModeNum As EnumDispMode, lpDevMode As DEVMODEW, ByVal dwFlags As EnumDispSettingsExFlags) As BOOL
Public DeclareWide PtrSafe Function EnumDisplaySettingsEx Lib "user32" Alias "EnumDisplaySettingsExW" (ByVal lpszDeviceName As String, ByVal iModeNum As EnumDispMode, lpDevMode As DEVMODE, ByVal dwFlags As EnumDispSettingsExFlags) As BOOL
Public DeclareWide PtrSafe Function EnumDisplayMonitors Lib "user32" (ByVal hDC As LongPtr, lprcClip As RECT, ByVal lpfnEnum As LongPtr, dwData As Any) As BOOL
Public Declare PtrSafe Function EnumDisplayDevicesA Lib "user32" (ByVal lpDevice As LongPtr, ByVal iDevNum As Long, lpDisplayDevice As DISPLAY_DEVICEA, ByVal dwFlags As EnumDispDevFlags) As BOOL
Public Declare PtrSafe Function EnumDisplayDevicesW Lib "user32" (ByVal lpDevice As LongPtr, ByVal iDevNum As Long, lpDisplayDevice As DISPLAY_DEVICEW, ByVal dwFlags As EnumDispDevFlags) As BOOL
Public DeclareWide PtrSafe Function EnumDisplayDevices Lib "user32" Alias "EnumDisplayDevicesW" (ByVal lpDevice As LongPtr, ByVal iDevNum As Long, lpDisplayDevice As DISPLAY_DEVICE, ByVal dwFlags As EnumDispDevFlags) As BOOL
Public Declare PtrSafe Function MonitorFromPoint Lib "user32" (ByVal pt As LongLong, ByVal dwFlags As DefaultMonitorValues) As LongPtr
Public Declare PtrSafe Function MonitorFromWindow Lib "user32" (ByVal hwnd As LongPtr, ByVal dwFlags As DefaultMonitorValues) As LongPtr
Public Declare PtrSafe Function MonitorFromRect Lib "user32" (lprc As RECT, ByVal dwFlags As DefaultMonitorValues) As LongPtr
Public Declare PtrSafe Function GetMonitorInfoA Lib "user32" (ByVal hMonitor As LongPtr, lpmi As Any) As BOOL
Public DeclareWide PtrSafe Function GetMonitorInfoW Lib "user32" (ByVal hMonitor As LongPtr, lpmi As Any) As BOOL
Public DeclareWide PtrSafe Function GetMonitorInfo Lib "user32" Alias "GetMonitorInfoW" (ByVal hMonitor As LongPtr, lpmi As Any) As BOOL
Public Declare PtrSafe Function QueryDisplayConfig Lib "user32" (ByVal flags As DISPLAYCONFIG_QUERY_FLAGS, numPathArrayElements As Long, pathArray As DISPLAYCONFIG_PATH_INFO, numModeInfoArrayElements As Long, modeInfoArray As DISPLAYCONFIG_MODE_INFO, currentTopologyId As DISPLAYCONFIG_TOPOLOGY_ID) As Long
Public Declare PtrSafe Function SetDisplayConfig Lib "user32" (numPathArrayElements As Long, pathArray As DISPLAYCONFIG_PATH_INFO, numModeInfoArrayElements As Long, modeInfoArray As DISPLAYCONFIG_MODE_INFO, ByVal flags As DISPLAYCONFIG_SET_FLAGS) As Long
Public DeclareWide PtrSafe Function DisplayConfigGetDeviceInfo Lib "user32" (requestPacket As Any) As Long
Public DeclareWide PtrSafe Function DisplayConfigSetDeviceInfo Lib "user32" (setPacket As Any) As Long
Public Declare PtrSafe Function GetDisplayConfigBufferSizes Lib "user32" (numPathArrayElements As Long, numModeInfoArrayElements As Long, ByVal flags As DISPLAYCONFIG_QUERY_FLAGS) As Long

Public Declare PtrSafe Function OpenClipboard Lib "user32" (ByVal hWnd As LongPtr) As BOOL
Public Declare PtrSafe Function EmptyClipboard Lib "user32" () As BOOL
Public Declare PtrSafe Function SetClipboardData Lib "user32" (ByVal wFormat As StdClipboardFormats, Optional ByVal hMem As LongPtr) As LongPtr
Public Declare PtrSafe Function GetClipboardData Lib "user32" (ByVal wFormat As StdClipboardFormats) As LongPtr
Public Declare PtrSafe Function IsClipboardFormatAvailable Lib "user32" (ByVal wFormat As StdClipboardFormats) As BOOL
Public Declare PtrSafe Function CloseClipboard Lib "user32" () As BOOL
Public DeclareWide PtrSafe Function RegisterClipboardFormat Lib "user32" Alias "RegisterClipboardFormatW" (ByVal lpszFormat As String) As Long
Public Declare PtrSafe Function RegisterClipboardFormatW Lib "user32" (ByVal lpszFormat As LongPtr) As Long
Public Declare PtrSafe Function RegisterClipboardFormatA Lib "user32" (ByVal lpszFormat As String) As Long
Public Declare PtrSafe Function AddClipboardFormatListener Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public Declare PtrSafe Function RemoveClipboardFormatListener Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public Declare PtrSafe Function ChangeClipboardChain Lib "user32" (ByVal hWndRemove As LongPtr, ByVal hWndNewNext As LongPtr) As BOOL
Public Declare PtrSafe Function CountClipboardFormats Lib "user32" () As Long
Public Declare PtrSafe Function EnumClipboardFormats Lib "user32" (ByVal wFormat As StdClipboardFormats) As StdClipboardFormats
Public Declare PtrSafe Function GetClipboardFormatNameA Lib "user32" (ByVal wFormat As StdClipboardFormats, ByVal lpszFormatName As String, ByVal cchMaxCount As Long) As Long
Public Declare PtrSafe Function GetClipboardFormatNameW Lib "user32" (ByVal wFormat As StdClipboardFormats, ByVal lpszFormatName As LongPtr, ByVal cchMaxCount As Long) As Long
Public DeclareWide PtrSafe Function GetClipboardFormatName Lib "user32" Alias "GetClipboardFormatNameW" (ByVal wFormat As StdClipboardFormats, ByVal lpszFormatName As String, ByVal cchMaxCount As Long) As Long
Public Declare PtrSafe Function GetClipboardOwner Lib "user32" () As LongPtr
Public Declare PtrSafe Function GetClipboardSequenceNumber Lib "user32" () As Long
Public Declare PtrSafe Function SetClipboardViewer Lib "user32" (ByVal hwndNewViewer As LongPtr) As LongPtr
Public Declare PtrSafe Function GetClipboardViewer Lib "user32" () As LongPtr
Public Declare PtrSafe Function GetOpenClipboardWindow Lib "user32" () As LongPtr
Public Declare PtrSafe Function GetPriorityClipboardFormat Lib "user32" (paFormatPriorityList As StdClipboardFormats, ByVal cFormats As Long) As Long
Public Declare PtrSafe Function GetUpdatedClipboardFormats Lib "user32" (lpuiFormats As StdClipboardFormats, ByVal cFormats As Long, pcFormatsOut As Long) As BOOL
Public Declare PtrSafe Function GetClipboardMetadata Lib "user32" (ByVal wFormat As StdClipboardFormats, metadata As GETCLIPBMETADATA) As BOOL

Public Declare PtrSafe Function CharToOemA Lib "user32" (ByVal pSrc As String, ByVal pDst As String) As BOOL
Public Declare PtrSafe Function CharToOemW Lib "user32" (ByVal pSrc As LongPtr, ByVal pDst As LongPtr) As BOOL
Public DeclareWide PtrSafe Function CharToOem Lib "user32" Alias "CharToOemW" (ByVal pSrc As String, ByVal pDst As String) As BOOL
Public Declare PtrSafe Function OemToCharA Lib "user32" (ByVal pSrc As String, ByVal pDst As String) As BOOL
Public Declare PtrSafe Function OemToCharW Lib "user32" (ByVal pSrc As LongPtr, ByVal pDst As LongPtr) As BOOL
Public DeclareWide PtrSafe Function OemToChar Lib "user32" Alias "OemToCharW" (ByVal pSrc As String, ByVal pDst As String) As BOOL
Public Declare PtrSafe Function CharToOemBuffA Lib "user32" (ByVal lpszSrc As String, ByVal lpszDst As String, ByVal cchDstLength As Long) As BOOL
Public Declare PtrSafe Function CharToOemBuffW Lib "user32" (ByVal lpszSrc As LongPtr, ByVal lpszDst As LongPtr, ByVal cchDstLength As Long) As BOOL
Public DeclareWide PtrSafe Function CharToOemBuff Lib "user32" Alias "CharToOemBuffW" (ByVal lpszSrc As String, ByVal lpszDst As String, ByVal cchDstLength As Long) As BOOL
Public Declare PtrSafe Function OemToCharBuffA Lib "user32" (ByVal lpszSrc As String, ByVal lpszDst As String, ByVal cchDstLength As Long) As BOOL
Public Declare PtrSafe Function OemToCharBuffW Lib "user32" (ByVal lpszSrc As LongPtr, ByVal lpszDst As LongPtr, ByVal cchDstLength As Long) As BOOL
Public DeclareWide PtrSafe Function OemToCharBuff Lib "user32" Alias "OemToCharBuffW" (ByVal lpszSrc As String, ByVal lpszDst As String, ByVal cchDstLength As Long) As BOOL
Public Declare PtrSafe Function CharUpperA Lib "user32" (ByVal lpsz As String) As String
Public Declare PtrSafe Function CharUpperW Lib "user32" (ByVal lpsz As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CharUpper Lib "user32" Alias "CharUpperW" (ByVal lpsz As String) As String
Public Declare PtrSafe Function CharUpperBuffA Lib "user32" (ByVal lpsz As String, ByVal cchLength As Long) As Long
Public Declare PtrSafe Function CharUpperBuffW Lib "user32" (ByVal lpsz As LongPtr, ByVal cchLength As Long) As Long
Public DeclareWide PtrSafe Function CharUpperBuff Lib "user32" Alias "CharUpperBuffW" (ByVal lpsz As String, ByVal cchLength As Long) As Long
Public Declare PtrSafe Function CharLowerA Lib "user32" (ByVal lpsz As String) As String
Public Declare PtrSafe Function CharLowerW Lib "user32" (ByVal lpsz As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CharLower Lib "user32" Alias "CharLowerW" (ByVal lpsz As String) As String
Public Declare PtrSafe Function CharLowerBuffA Lib "user32" (ByVal lpsz As String, ByVal cchLength As Long) As Long
Public Declare PtrSafe Function CharLowerBuffW Lib "user32" (ByVal lpsz As LongPtr, ByVal cchLength As Long) As Long
Public DeclareWide PtrSafe Function CharLowerBuff Lib "user32" Alias "CharLowerBuffW" (ByVal lpsz As String, ByVal cchLength As Long) As Long
Public Declare PtrSafe Function CharNextA Lib "user32" (ByVal lpsz As String) As LongPtr
Public Declare PtrSafe Function CharNextW Lib "user32" (ByVal lpsz As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CharNext Lib "user32" Alias "CharNextW" (ByVal lpsz As String) As LongPtr
Public Declare PtrSafe Function CharPrevA Lib "user32" (ByVal lpsz As String) As LongPtr
Public Declare PtrSafe Function CharPrevW Lib "user32" (ByVal lpsz As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CharPrev Lib "user32" Alias "CharPrevW" (ByVal lpsz As String) As LongPtr
Public Declare PtrSafe Function CharNextExA Lib "user32" ([TypeHint(CodePageDefaults)] ByVal CodePage As Integer, ByVal lpCurrentChar As String, ByVal dwFlags As Long) As LongPtr
Public Declare PtrSafe Function CharPrevExA Lib "user32" ([TypeHint(CodePageDefaults)] ByVal CodePage As Integer, ByVal lpStart As String, ByVal lpCurrentChar As String, ByVal dwFlags As Long) As LongPtr
Public Declare PtrSafe Function IsCharAlphaA Lib "user32" (ByVal ch As Byte) As BOOL
Public Declare PtrSafe Function IsCharAlphaW Lib "user32" (ByVal ch As Integer) As BOOL
Public DeclareWide PtrSafe Function IsCharAlpha Lib "user32" Alias "IsCharAlphaW" (ByVal ch As Integer) As BOOL
Public Declare PtrSafe Function IsCharAlphaNumericA Lib "user32" (ByVal ch As Byte) As BOOL
Public Declare PtrSafe Function IsCharAlphaNumericW Lib "user32" (ByVal ch As Integer) As BOOL
Public DeclareWide PtrSafe Function IsCharAlphaNumeric Lib "user32" Alias "IsCharAlphaNumericW" (ByVal ch As Integer) As BOOL
Public Declare PtrSafe Function IsCharUpperA Lib "user32" (ByVal ch As Byte) As BOOL
Public Declare PtrSafe Function IsCharUpperW Lib "user32" (ByVal ch As Integer) As BOOL
Public DeclareWide PtrSafe Function IsCharUpper Lib "user32" Alias "IsCharUpperW" (ByVal ch As Integer) As BOOL
Public Declare PtrSafe Function IsCharLowerA Lib "user32" (ByVal ch As Byte) As BOOL
Public Declare PtrSafe Function IsCharLowerW Lib "user32" (ByVal ch As Integer) As BOOL
Public DeclareWide PtrSafe Function IsCharLower Lib "user32" Alias "IsCharLowerW" (ByVal ch As Integer) As BOOL


Public Type MSGBOXPARAMSA
	cbSize As Long
	hwndOwner As LongPtr
	hInstance As LongPtr
	lpszText As String
	lpszCaption As String
	dwStyle As MessageBoxFlags
	lpszIcon As LongPtr
	dwContextHelpId As LongPtr
	lpfnMsgBoxCallback As LongPtr
	dwLanguageId As Long
End Type
Public Type MSGBOXPARAMSW
    cbSize As Long
    hwndOwner As LongPtr
    hInstance As LongPtr
    lpszText As LongPtr
    lpszCaption As LongPtr
    dwStyle As MessageBoxFlags
    lpszIcon As LongPtr
    dwContextHelpId As LongPtr
    lpfnMsgBoxCallback As LongPtr
    dwLanguageId As Long
End Type
'Alias MSGBOXPARAMS As MSGBOXPARAMSW
Public Type MSGBOXPARAMS
    cbSize As Long
    hwndOwner As LongPtr
    hInstance As LongPtr
    lpszText As LongPtr
    lpszCaption As LongPtr
    dwStyle As MessageBoxFlags
    lpszIcon As LongPtr
    dwContextHelpId As LongPtr
    lpfnMsgBoxCallback As LongPtr
    dwLanguageId As Long
End Type

Public Type MSGBOXDATA
    mbp As MSGBOXPARAMS
    ' cbSize As Long
    ' hwndOwner As LongPtr
    ' hInstance As LongPtr
    ' lpszText As LongPtr
    ' lpszCaption As LongPtr
    ' dwStyle As MessageBoxFlags
    ' lpszIcon As LongPtr
    ' dwContextHelpId As LongPtr
    ' lpfnMsgBoxCallback As LongPtr
    ' dwLanguageId As Long
    '----
    pwndOwner As LongPtr
    dwPadding As Long
    wLanguageId As Integer
    pidButton As LongPtr 'INT*
    ppszButtonText As LongPtr 'LPWSTR *
    cButtons As Long
    DefButton As Long
    CancelId As Long
    dwTimeout As Long
    phwndList As LongPtr 'HWND*
    dwReserved(19) As Long
End Type

Public Enum CursorCreationScalingDefaults
    CURSOR_CREATION_SCALING_NONE = 1
    CURSOR_CREATION_SCALING_DEFAULT = 2
End Enum

Public Enum DISPLAY_DEVICE_TYPE
    DEVICE_PRIMARY = 0
    DEVICE_IMMERSIVE = 1
End Enum

Public Enum SHELL_UI_COMPONENT
    SHELL_UI_COMPONENT_TASKBARS = 0
    SHELL_UI_COMPONENT_NOTIFICATIONAREA = 1
    SHELL_UI_COMPONENT_DESKBAND = 2
End Enum

Public Enum SCALE_CHANGE_FLAGS
    SCF_VALUE_NONE = &H00
    SCF_SCALE = &H01
    SCF_PHYSICAL = &H02
End Enum



Public Declare PtrSafe Function MessageBoxA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpText As String, ByVal lpCaption As String, ByVal uType As MessageBoxFlags) As MessageBoxResults
Public Declare PtrSafe Function MessageBoxW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpText As LongPtr, ByVal lpCaption As LongPtr, ByVal uType As MessageBoxFlags) As MessageBoxResults
Public DeclareWide PtrSafe Function MessageBox Lib "user32" Alias "MessageBoxW" (ByVal hWnd As LongPtr, ByVal lpText As String, ByVal lpCaption As String, ByVal uType As MessageBoxFlags) As MessageBoxResults
Public Declare PtrSafe Function MessageBoxExA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpText As String, ByVal lpCaption As String, ByVal uType As MessageBoxFlags, ByVal wLanguageId As Integer) As MessageBoxResults
Public Declare PtrSafe Function MessageBoxExW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpText As LongPtr, ByVal lpCaption As LongPtr, ByVal uType As MessageBoxFlags, ByVal wLanguageId As Integer) As MessageBoxResults
Public DeclareWide PtrSafe Function MessageBoxEx Lib "user32" Alias "MessageBoxExW" (ByVal hWnd As LongPtr, ByVal lpText As String, ByVal lpCaption As String, ByVal uType As MessageBoxFlags, ByVal wLanguageId As Integer) As MessageBoxResults
Public Declare PtrSafe Function MessageBoxIndirectA Lib "user32" (lpmbp As MSGBOXPARAMSA) As MessageBoxResults
Public Declare PtrSafe Function MessageBoxIndirectW Lib "user32" (lpmbp As MSGBOXPARAMSW) As MessageBoxResults
Public DeclareWide PtrSafe Function MessageBoxIndirect Lib "user32" Alias "MessageBoxIndirectW" (lpmbp As MSGBOXPARAMS) As MessageBoxResults
Public Declare PtrSafe Function MessageBoxTimeoutA Lib "user32" (ByVal hWnd As LongPtr, ByVal lpText As String, ByVal lpCaption As String, ByVal uType As MessageBoxFlags, ByVal wLanguageId As Integer, ByVal dwMilliseconds As Long) As MessageBoxResults
Public Declare PtrSafe Function MessageBoxTimeoutW Lib "user32" (ByVal hWnd As LongPtr, ByVal lpText As LongPtr, ByVal lpCaption As LongPtr, ByVal uType As MessageBoxFlags, ByVal wLanguageId As Integer, ByVal dwMilliseconds As Long) As MessageBoxResults
Public DeclareWide PtrSafe Function MessageBoxTimeout Lib "user32" Alias "MessageBoxTimeoutW" (ByVal hWnd As LongPtr, ByVal lpText As String, ByVal lpCaption As String, ByVal uType As MessageBoxFlags, ByVal wLanguageId As Integer, ByVal dwMilliseconds As Long) As MessageBoxResults
Public Declare PtrSafe Function SoftModalMessageBox Lib "user32" (lpmb As MSGBOXDATA) As MessageBoxResults

Public Declare PtrSafe Function MessageBeep Lib "user32" (ByVal uType As MessageBoxFlags) As BOOL
Public Declare PtrSafe Function Beep Lib "kernel32" (ByVal dwFreq As Long, ByVal dwDuration As Long) As BOOL
Public Declare PtrSafe Function BeepAPI Lib "kernel32" Alias "Beep" (ByVal dwFreq As Long, ByVal dwDuration As Long) As BOOL

Public Declare PtrSafe Function BlockInput Lib "user32" (ByVal fBlockIt As BOOL) As BOOL
Public Declare PtrSafe Function GetAncestor Lib "user32" (ByVal hwnd As LongPtr, ByVal gaFlags As GA_FLAGS) As LongPtr
[Description("⚠️ **WARNING:** This function is in banned.h, insecure APIs banned by Microsoft's Security Development Lifecycle and some open source repositories.")]
Public Declare PtrSafe Function ChangeWindowMessageFilter Lib "user32" (ByVal message As Long, ByVal dwFlag As CWMF_Flag) As BOOL
Public Declare PtrSafe Function ChangeWindowMessageFilterEx Lib "user32" (ByVal hwnd As LongPtr, ByVal message As Long, ByVal action As CWMF_Flag, ByRef pChangeFilterStruct As CHANGEFILTERSTRUCT) As BOOL
Public DeclareWide PtrSafe Function GetAltTabInfo Lib "user32" Alias "GetAltTabInfoW" (ByVal hwnd As LongPtr, ByVal iItem As Long, pati As ALTTABINFO, Optional pszItemText As String, Optional ByVal cchItemText As Long = 0) As BOOL
Public Declare PtrSafe Function GetAltTabInfoA Lib "user32" (ByVal hwnd As LongPtr, ByVal iItem As Long, pati As ALTTABINFO, Optional pszItemText As String, Optional ByVal cchItemText As Long = 0) As BOOL
Public Declare PtrSafe Function GetAltTabInfoW Lib "user32" (ByVal hwnd As LongPtr, ByVal iItem As Long, pati As ALTTABINFO, Optional pszItemText As LongPtr, Optional ByVal cchItemText As Long = 0) As BOOL
Public Declare PtrSafe Function SoundSentry Lib "user32" () As BOOL

Public Declare PtrSafe Function SetProcessDpiAwarenessContext Lib "user32" ([TypeHint(DPI_AWARENESS_CONTEXT)] ByVal lValue As LongPtr) As BOOL
Public Declare PtrSafe Function GetDpiAwarenessContextForProcess Lib "user32" (ByVal hprocess As LongPtr) As LongPtr
Public Declare PtrSafe Function SetThreadDpiAwarenessContext Lib "user32" ([TypeHint(DPI_AWARENESS_CONTEXT)] ByVal lValue As LongPtr) As LongPtr
Public Declare PtrSafe Function GetThreadDpiAwarenessContext Lib "user32" () As LongPtr
Public Declare PtrSafe Function GetWindowDpiAwarenessContext Lib "user32" (ByVal hwnd As LongPtr) As LongPtr
Public Declare PtrSafe Function GetAwarenessFromDpiAwarenessContext Lib "user32" (ByVal lValue As LongPtr) As DPI_AWARENESS
Public Declare PtrSafe Function GetDpiFromDpiAwarenessContext Lib "user32" ([TypeHint(DPI_AWARENESS_CONTEXT)] ByVal lValue As LongPtr) As Long
Public Declare PtrSafe Function SetProcessDpiAwareness Lib "shcore" (ByVal lValue As PROCESS_DPI_AWARENESS) As Long
Public Declare PtrSafe Function GetProcessDpiAwareness Lib "shcore" (ByVal hprocess As LongPtr, value As PROCESS_DPI_AWARENESS) As Long
Public Declare PtrSafe Function GetDpiForMonitor Lib "shcore" (ByVal hMonitor As LongPtr, ByVal dpiType As MONITOR_DPI_TYPE, dpiX As Long, dpiY As Long) As Long
Public Declare PtrSafe Function GetScaleFactorForDevice Lib "shcore" (ByVal deviceType As DISPLAY_DEVICE_TYPE) As DEVICE_SCALE_FACTOR
Public Declare PtrSafe Function GetScaleFactorForMonitor Lib "shcore" (ByVal hMonitor As LongPtr, pScale As DEVICE_SCALE_FACTOR) As Long
Public Declare PtrSafe Function GetDpiForShellUIComponent Lib "shcore" (ByVal nType As SHELL_UI_COMPONENT) As Long
Public Declare PtrSafe Function RegisterScaleChangeEvent Lib "shcore" (ByVal hEvent As LongPtr, pdwCookie As LongPtr) As Long
Public Declare PtrSafe Function UnregisterScaleChangeEvent Lib "shcore" (ByVal dwCookie As LongPtr) As Long
Public Declare PtrSafe Function RegisterScaleChangeNotifications Lib "shcore" (ByVal displayDevice As DISPLAY_DEVICE_TYPE, ByVal hwndNotify As LongPtr, ByVal uMsgNotify As Long, pdwCookie As Long) As Long
Public Declare PtrSafe Function RevokeScaleChangeNotifications Lib "shcore" (ByVal displayDevice As DISPLAY_DEVICE_TYPE, ByVal dwCookie As Long) As Long
Public Declare PtrSafe Function GetDpiForWindow Lib "user32" (ByVal hwnd As LongPtr) As Long
Public Declare PtrSafe Function GetDpiForSystem Lib "user32" () As Long
Public Declare PtrSafe Function GetDpiForProcess Lib "user32" (ByVal hProcess As LongPtr) As Long
Public Declare PtrSafe Function GetSystemDpiForProcess Lib "user32" (ByVal hProcess As LongPtr) As Long
Public Declare PtrSafe Function GetSystemMetricsForDpi Lib "user32" (ByVal nIndex As SystemMetrics, ByVal dpi As Long) As Long
Public Declare PtrSafe Function AdjustWindowRectExForDpi Lib "user32" (lpRect As RECT, ByVal dwStyle As WindowStyles, ByVal bMenu As BOOL, ByVal dwExStyle As WindowStylesEx, ByVal dpi As Long) As Long
Public Declare PtrSafe Function LogicalToPhysicalPoint Lib "user32" (ByVal hwnd As LongPtr, lpPoint As POINT) As BOOL
Public Declare PtrSafe Function PhysicalToLogicalPoint Lib "user32" (ByVal hwnd As LongPtr, lpPoint As POINT) As BOOL
Public Declare PtrSafe Function LogicalToPhysicalPointForPerMonitorDPI Lib "user32" (ByVal hwnd As LongPtr, lpPoint As POINT) As BOOL
Public Declare PtrSafe Function PhysicalToLogicalPointForPerMonitorDPI Lib "user32" (ByVal hwnd As LongPtr, lpPoint As POINT) As BOOL
Public Declare PtrSafe Function SetThreadCursorCreationScaling Lib "user32" (ByVal cursorDpi As CursorCreationScalingDefaults) As CursorCreationScalingDefaults
Public Declare PtrSafe Function SetProcessDPIAware Lib "user32" () As BOOL
Public Declare PtrSafe Function IsProcessDpiAware Lib "user32" () As BOOL
Public Declare PtrSafe Function AreDpiAwarenessContextsEqual Lib "user32" ([TypeHint(DPI_AWARENESS_CONTEXT)] ByVal dpiContextA As LongPtr, [TypeHint(DPI_AWARENESS_CONTEXT)] ByVal dpiContextB As LongPtr) As BOOL
Public Declare PtrSafe Function IsValidDpiAwarenessContext Lib "user32" ([TypeHint(DPI_AWARENESS_CONTEXT)] ByVal value As LongPtr) As BOOL
Public Declare PtrSafe Function EnableNonClientDpiScaling Lib "user32" (ByVal hwnd As LongPtr) As Long
Public Declare PtrSafe Function InheritWindowMonitor Lib "user32" (ByVal hwnd As LongPtr, Optional ByVal hwndInherit As LongPtr) As BOOL
Public Declare PtrSafe Function SetThreadDpiHostingBehavior Lib "user32" (ByVal value As DPI_HOSTING_BEHAVIOR) As DPI_HOSTING_BEHAVIOR
Public Declare PtrSafe Function GetThreadDpiHostingBehavior Lib "user32" () As DPI_HOSTING_BEHAVIOR
Public Declare PtrSafe Function GetWindowDpiHostingBehavior Lib "user32" (ByVal hwnd As LongPtr) As DPI_HOSTING_BEHAVIOR

[Description("Deprecated. Use InitiateSystemShutdownEx instead.")]
Public Declare PtrSafe Function ExitWindowsEx Lib "user32" (ByVal uFlags As ExitWindowsExFlags, ByVal dwReason As SystemShutdownReasons) As BOOL
Public Declare PtrSafe Function LockWorkStation Lib "user32" () As BOOL
Public DeclareWide PtrSafe Function ShutdownBlockReasonCreate Lib "user32" (ByVal hwnd As LongPtr, ByVal pwszReason As String) As BOOL
Public Declare PtrSafe Function ShutdownBlockReasonDestroy Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ShutdownBlockReasonQuery Lib "user32" (ByVal hwnd As LongPtr, ByVal pwszBuff As String, pcchBuff As Long) As BOOL
Public Declare PtrSafe Function CancelShutdown Lib "user32" () As BOOL
Public Declare PtrSafe Function EndTask Lib "user32" (ByVal hWnd As LongPtr, ByVal fShutDown As BOOL, ByVal fForce As BOOL) As BOOL

Public Declare PtrSafe Function CreateDesktopA Lib "user32" (ByVal lpszDesktop As String, ByVal lpszDevice As String, pDevMode As DEVMODEA, ByVal dwFlags As OpenDesktop_Flags, [TypeHint(StandardAccessTypes, DesktopAccessMaskValues, GenericRights)] ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES) As LongPtr
Public Declare PtrSafe Function CreateDesktopW Lib "user32" (ByVal lpszDesktop As LongPtr, ByVal lpszDevice As LongPtr, pDevMode As DEVMODEW, ByVal dwFlags As OpenDesktop_Flags, [TypeHint(StandardAccessTypes, DesktopAccessMaskValues, GenericRights)] ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES) As LongPtr
Public DeclareWide PtrSafe Function CreateDesktop Lib "user32" Alias "CreateDesktopW" (ByVal lpszDesktop As String, ByVal lpszDevice As String, pDevMode As DEVMODE, ByVal dwFlags As OpenDesktop_Flags, [TypeHint(StandardAccessTypes, DesktopAccessMaskValues, GenericRights)] ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES) As LongPtr
Public Declare PtrSafe Function CreateDesktopExA Lib "user32" (ByVal lpszDesktop As String, ByVal lpszDevice As String, pDevMode As DEVMODEA, ByVal dwFlags As OpenDesktop_Flags, [TypeHint(StandardAccessTypes, DesktopAccessMaskValues, GenericRights)] ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES, ByVal ulHeapSize As Long, pvoid As Any) As LongPtr
Public Declare PtrSafe Function CreateDesktopExW Lib "user32" (ByVal lpszDesktop As LongPtr, ByVal lpszDevice As LongPtr, pDevMode As DEVMODEW, ByVal dwFlags As OpenDesktop_Flags, [TypeHint(StandardAccessTypes, DesktopAccessMaskValues, GenericRights)] ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES, ByVal ulHeapSize As Long, pvoid As Any) As LongPtr
Public DeclareWide PtrSafe Function CreateDesktopEx Lib "user32" Alias "CreateDesktopExW" (ByVal lpszDesktop As String, ByVal lpszDevice As String, pDevMode As DEVMODE, ByVal dwFlags As OpenDesktop_Flags, [TypeHint(StandardAccessTypes, DesktopAccessMaskValues, GenericRights)] ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES, ByVal ulHeapSize As Long, pvoid As Any) As LongPtr
Public Declare PtrSafe Function SwitchDesktop Lib "user32" (ByVal hDesktop As LongPtr) As BOOL
Public Declare PtrSafe Function OpenDesktopA Lib "user32" (ByVal lpszDesktop As String, ByVal dwFlags As OpenDesktop_Flags, ByVal fInherit As BOOL, [TypeHint(StandardAccessTypes, DesktopAccessMaskValues, GenericRights)] ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function OpenDesktopW Lib "user32" (ByVal lpszDesktop As LongPtr, ByVal dwFlags As OpenDesktop_Flags, ByVal fInherit As BOOL, [TypeHint(StandardAccessTypes, DesktopAccessMaskValues, GenericRights)] ByVal dwDesiredAccess As Long) As LongPtr
Public DeclareWide PtrSafe Function OpenDesktop Lib "user32" Alias "OpenDesktopW" (ByVal lpszDesktop As String, ByVal dwFlags As OpenDesktop_Flags, ByVal fInherit As BOOL, [TypeHint(StandardAccessTypes, DesktopAccessMaskValues, GenericRights)] ByVal dwDesiredAccess As Long) As LongPtr

Public Delegate Function DesktopEnumProcA (ByVal lpszDesktop As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Delegate Function DesktopEnumProcW (ByVal lpszDesktop As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Delegate Function DesktopEnumProc (ByVal lpszDesktop As LongPtr, ByVal lParam As LongPtr) As BOOL
' Public Declare PtrSafe Function EnumDesktopsA Lib "user32" (ByVal hwinsta As LongPtr, ByVal lpEnumFunc As DesktopEnumProcA, ByVal lParam As LongPtr) As BOOL
' Public Declare PtrSafe Function EnumDesktopsW Lib "user32" (ByVal hwinsta As LongPtr, ByVal lpEnumFunc As DesktopEnumProcW, ByVal lParam As LongPtr) As BOOL
' Public DeclareWide PtrSafe Function EnumDesktops Lib "user32" Alias "EnumDesktopsW" (ByVal hwinsta As LongPtr, ByVal lpEnumFunc As DesktopEnumProc, ByVal lParam As LongPtr) As BOOL
' Public Declare PtrSafe Function EnumDesktopWindows Lib "user32" (ByVal hDesktop As LongPtr, ByVal lpfn As EnumWindowsProc, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumDesktopsA Lib "user32" (ByVal hwinsta As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumDesktopsW Lib "user32" (ByVal hwinsta As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumDesktops Lib "user32" Alias "EnumDesktopsW" (ByVal hwinsta As LongPtr, ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumDesktopWindows Lib "user32" (ByVal hDesktop As LongPtr, ByVal lpfn As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function OpenInputDesktop Lib "user32" (ByVal dwFlags As OpenDesktop_Flags, ByVal fInherit As BOOL, [TypeHint(StandardAccessTypes, DesktopAccessMaskValues, GenericRights)] ByVal dwDesiredAccess As Long) As LongPtr
Public Declare PtrSafe Function CloseDesktop Lib "user32" (ByVal hDesktop As LongPtr) As BOOL
Public Declare PtrSafe Function SetThreadDesktop Lib "user32" (ByVal hDesktop As LongPtr) As BOOL
Public Declare PtrSafe Function GetThreadDesktop Lib "user32" (ByVal dwThreadId As Long) As LongPtr

Public Declare PtrSafe Function GetProcessWindowStation Lib "user32" () As LongPtr
Public Declare PtrSafe Function SetProcessWindowStation Lib "user32" (ByVal hWinSta As LongPtr) As BOOL

Public Delegate Function EnumWindowStationProc (ByVal lpszWindowStation As LongPtr, ByVal lParam As LongPtr) As BOOL
' Public Declare PtrSafe Function EnumWindowStationsW Lib "user32" (ByVal lpEnumFunc As EnumWindowStationProc, ByVal lParam As LongPtr) As BOOL
' Public Declare PtrSafe Function EnumWindowStationsA Lib "user32" (ByVal lpEnumFunc As EnumWindowStationProc, ByVal lParam As LongPtr) As BOOL
' Public DeclareWide PtrSafe Function EnumWindowStations Lib "user32" Alias "EnumWindowStationsW" (ByVal lpEnumFunc As EnumWindowStationProc, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumWindowStationsW Lib "user32" (ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function EnumWindowStationsA Lib "user32" (ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumWindowStations Lib "user32" Alias "EnumWindowStationsW" (ByVal lpEnumFunc As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function CreateWindowStationA Lib "user32" (ByVal lpwinsta As String, ByVal dwFlags As WindowStationCreateFlags, [TypeHint(StandardAccessTypes, WindowStationAccessFlags, GenericRights)] ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function CreateWindowStationW Lib "user32" (ByVal lpwinsta As LongPtr, ByVal dwFlags As WindowStationCreateFlags, [TypeHint(StandardAccessTypes, WindowStationAccessFlags, GenericRights)] ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES) As BOOL
Public DeclareWide PtrSafe Function CreateWindowStation Lib "user32" Alias "CreateWindowStationW" (ByVal lpwinsta As String, ByVal dwFlags As WindowStationCreateFlags, [TypeHint(StandardAccessTypes, WindowStationAccessFlags, GenericRights)] ByVal dwDesiredAccess As Long, lpsa As SECURITY_ATTRIBUTES) As BOOL
Public Declare PtrSafe Function OpenWindowStationA Lib "user32" (ByVal lpwinsta As String, ByVal fInherit As BOOL, [TypeHint(StandardAccessTypes, WindowStationAccessFlags, GenericRights)] ByVal dwDesiredAccess As Long) As BOOL
Public Declare PtrSafe Function OpenWindowStationW Lib "user32" (ByVal lpwinsta As LongPtr, ByVal fInherit As BOOL, [TypeHint(StandardAccessTypes, WindowStationAccessFlags, GenericRights)] ByVal dwDesiredAccess As Long) As BOOL
Public DeclareWide PtrSafe Function OpenWindowStation Lib "user32" Alias "OpenWindowStationW" (ByVal lpwinsta As String, ByVal fInherit As BOOL, [TypeHint(StandardAccessTypes, WindowStationAccessFlags, GenericRights)] ByVal dwDesiredAccess As Long) As BOOL
Public Declare PtrSafe Function CloseWindowStation Lib "user32" (ByVal hWinSta As LongPtr) As BOOL

Public Declare PtrSafe Function GetGestureInfo Lib "user32" (ByVal hGestureInfo As LongPtr, pGestureInfo As GESTUREINFO) As BOOL
Public Declare PtrSafe Function GetGestureExtraArgs Lib "user32" (ByVal hGestureInfo As LongPtr, ByVal cbExtraArgs As Long, pExtraArgs As Any) As BOOL
Public Declare PtrSafe Function SetGestureConfig Lib "user32" (ByVal hwnd As LongPtr, ByVal dwReserved As Long, ByVal cIDs As Long, pGestureConfig As GESTURECONFIG, ByVal cbSize As Long) As BOOL
Public Declare PtrSafe Function GetGestureConfig Lib "user32" (ByVal hwnd As LongPtr, ByVal dwReserved As Long, ByVal dwFlags As GestureInfoFlags, pcIDs As Long, pGestureConfig As GESTURECONFIG, ByVal cbSize As Long) As BOOL
Public Declare PtrSafe Function CloseGestureInfoHandle Lib "user32" (ByVal hGestureInfo As LongPtr) As BOOL

Public Enum GestureInfoFlags
	GF_BEGIN = &H00000001
	GF_INERTIA = &H00000002
	GF_END = &H00000004
End Enum

Public Enum GestureIDs
	GID_BEGIN = 1
	GID_END = 2
	GID_ZOOM = 3
	GID_PAN = 4
	GID_ROTATE = 5
	GID_TWOFINGERTAP = 6
	GID_PRESSANDTAP = 7
	GID_ROLLOVER = GID_PRESSANDTAP
End Enum

Public Type GESTUREINFO
	cbSize As Long ' size, in bytes, of this structure (including variable length Args field)
	dwFlags As GestureInfoFlags ' see GF_* flags
	dwID As GestureIDs ' gesture ID, see GID_* defines
	hwndTarget As LongPtr ' handle to window targeted by this gesture
	ptsLocation As POINTS ' current location of this gesture
	dwInstanceID As Long ' internally used
	dwSequenceID As Long ' internally used
	ullArguments As LongLong ' arguments for gestures whose arguments fit in 8 BYTES
    cbExtraArgs As Long ' size, in bytes, of extra arguments, if any, that accompany this gesture
End Type

Public Type GESTURENOTIFYSTRUCT
	cbSize As Long ' size, in bytes, of this structure
	dwFlags As Long ' unused
	hwndTarget As LongPtr ' handle to window targeted by the gesture
	ptsLocation As POINTS ' starting location
	dwInstanceID As Long ' internally used
End Type

Public Enum GestureConfigValues
	GC_ALLGESTURES = &H00000001
	GC_ZOOM = &H00000001
	GC_PAN = &H00000001
	GC_PAN_WITH_SINGLE_FINGER_VERTICALLY = &H00000002
	GC_PAN_WITH_SINGLE_FINGER_HORIZONTALLY = &H00000004
	GC_PAN_WITH_GUTTER = &H00000008
	GC_PAN_WITH_INERTIA = &H00000010
	GC_ROTATE = &H00000001
	GC_TWOFINGERTAP = &H00000001
	GC_PRESSANDTAP = &H00000001
	GC_ROLLOVER = GC_PRESSANDTAP
End Enum

Public Type GESTURECONFIG
	dwID As GestureIDs ' gesture ID
	dwWant As GestureConfigValues ' settings related to gesture ID that are to be turned on
	dwBlock As GestureConfigValues ' settings related to gesture ID that are to be turned off
End Type



Public Enum OpenDesktop_Flags
    DF_ALLOWOTHERACCOUNTHOOK = 1
End Enum

Public Enum DesktopAccessMaskValues
    DESKTOP_READOBJECTS = &H0001 ' 	Required to read objects on the desktop.
    DESKTOP_CREATEWINDOW = &H0002 ' 	Required to create a window on the desktop.
    DESKTOP_CREATEMENU = &H0004 ' 	Required to create a menu on the desktop.	
    DESKTOP_HOOKCONTROL = &H0008 ' 	Required to establish any of the window hooks.
    DESKTOP_JOURNALRECORD = &H0010 ' 	Required to perform journal recording on a desktop.
    DESKTOP_JOURNALPLAYBACK = &H0020 ' 	Required to perform journal playback on a desktop.
    DESKTOP_ENUMERATE = &H0040 ' 	Required for the desktop to be enumerated.
    DESKTOP_WRITEOBJECTS = &H0080 ' 	Required to write objects on the desktop.
    DESKTOP_SWITCHDESKTOP = &H0100 ' 	Required to activate the desktop using the SwitchDesktop function.
End Enum




Public Enum DPI_AWARENESS
	DPI_AWARENESS_INVALID = -1
	DPI_AWARENESS_UNAWARE = 0
	DPI_AWARENESS_SYSTEM_AWARE = 1
	DPI_AWARENESS_PER_MONITOR_AWARE = 2
End Enum
Public Enum DPI_AWARENESS_CONTEXT
	DPI_AWARENESS_CONTEXT_UNAWARE = (-1)
	DPI_AWARENESS_CONTEXT_SYSTEM_AWARE = (-2)
	DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE = (-3)
	DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2 = (-4)
	DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED = (-5)
End Enum
Public Enum DPI_HOSTING_BEHAVIOR
	DPI_HOSTING_BEHAVIOR_INVALID = -1
	DPI_HOSTING_BEHAVIOR_DEFAULT = 0
	DPI_HOSTING_BEHAVIOR_MIXED = 1
End Enum
Public Enum PROCESS_DPI_AWARENESS
	PROCESS_DPI_UNAWARE = 0
	PROCESS_SYSTEM_DPI_AWARE = 1
	PROCESS_PER_MONITOR_DPI_AWARE = 2
End Enum
Public Enum MONITOR_DPI_TYPE
	MDT_EFFECTIVE_DPI = 0
	MDT_ANGULAR_DPI = 1
	MDT_RAW_DPI = 2
	MDT_DEFAULT = 2
End Enum


Public Type ALTTABINFO
	cbSize As Long
    cItems As Long
    cColumns As Long
    cRows As Long
    iColFocus As Long
    iRowFocus As Long
    cxItem As Long
    cyItem As Long
    ptStart As POINT
End Type
Public Enum CWMF_Flag
    MSGFLT_RESET = 0
    MSGFLT_ADD = 1
    MSGFLT_REMOVE = 2
End Enum
Public Enum MSGFLTINFO
	MSGFLTINFO_NONE
    MSGFLTINFO_ALREADYALLOWED_FORWND
    MSGFLTINFO_ALREADYDISALLOWED_FORWND
    MSGFLTINFO_ALLOWED_HIGHER
End Enum
Public Type CHANGEFILTERSTRUCT
    cbSize As Long
    ExtStatus As MSGFLTINFO
End Type


Public Enum GA_FLAGS
    GA_PARENT = 1
    GA_ROOT
    GA_ROOTOWNER
End Enum

Public Type CURSORSHAPE
    xHotSpot As Long
    yHotSpot As Long
    cx As Long
    cy As Long
    cbWidth As Long
    Planes As Byte
    BitsPixel As Byte
End Type

Public Type ICONINFO
    fIcon As BOOL
    xHotspot As Long
    yHotspot As Long
    hbmMask As LongPtr
    hbmColor As LongPtr
End Type
Public Type ICONINFOEXW
    cbSize As Long
    fIcon As BOOL
    xHotspot As Long
    yHotspot As Long
    hbmMask As LongPtr
    hbmColor As LongPtr
    wResID As Integer
    szModName(0 To (MAX_PATH - 1)) As Integer
    szResName(0 To (MAX_PATH - 1)) As Integer
End Type
Public Type ICONINFOEXA
    cbSize As Long
    fIcon As BOOL
    xHotspot As Long
    yHotspot As Long
    hbmMask As LongPtr
    hbmColor As LongPtr
    wResID As Integer
    szModName(0 To (MAX_PATH - 1)) As Byte
    szResName(0 To (MAX_PATH - 1)) As Byte
End Type
'Alias ICONINFOEX As ICONINFOEXW
Public Type ICONINFOEX
    cbSize As Long
    fIcon As BOOL
    xHotspot As Long
    yHotspot As Long
    hbmMask As LongPtr
    hbmColor As LongPtr
    wResID As Integer
    szModName(0 To (MAX_PATH - 1)) As Integer
    szResName(0 To (MAX_PATH - 1)) As Integer
End Type

Public Enum DrawImageFlags
	DI_MASK = &H0001
	DI_IMAGE = &H0002
	DI_NORMAL = &H0003
	DI_COMPAT = &H0004
	DI_DEFAULTSIZE = &H0008
	DI_NOMIRROR = &H0010
End Enum
Public Enum SendInputType
    INPUT_MOUSE = 0
    INPUT_KEYBOARD = 1
    INPUT_HARDWARE = 2
End Enum

[Description("UDT for SendInput API. Set the type then copy one of MOUSEINPUT, KEYBDINPUT, or HARDWAREINPUT into 'struct'")]
Public Type INPUT
	type As SendInputType
    #If Win64 Then
    struct(27) As Byte
    #Else
    struct(23) As Byte
    #End If
End Type
Public Type MOUSEINPUT
	dx As Long
	dy As Long
	mouseData As Long
	dwFlags As MouseEventFlags
	time As Long
	dwExtraInfo As LongPtr
End Type
Public Type KEYBDINPUT
    type As SendInputType 'MUST BE 1
	wVk As Integer
	wScan As Integer
	dwFlags As KeybdEventFlags
	time As Long
	dwExtraInfo As LongPtr
End Type
Public Type HARDWAREINPUT
    uMsg As Long
    wParamL As Integer
    wParamH As Integer
End Type


Public Enum MouseEventFlags
	MOUSEEVENTF_MOVE = &H0001 /* mouse move */
	MOUSEEVENTF_LEFTDOWN = &H0002 /* left button down */
	MOUSEEVENTF_LEFTUP = &H0004 /* left button up */
	MOUSEEVENTF_RIGHTDOWN = &H0008 /* right button down */
	MOUSEEVENTF_RIGHTUP = &H0010 /* right button up */
	MOUSEEVENTF_MIDDLEDOWN = &H0020 /* middle button down */
	MOUSEEVENTF_MIDDLEUP = &H0040 /* middle button up */
	MOUSEEVENTF_XDOWN = &H0080 /* x button down */
	MOUSEEVENTF_XUP = &H0100 /* x button down */
	MOUSEEVENTF_WHEEL = &H0800 /* wheel button rolled */
	MOUSEEVENTF_HWHEEL = &H01000 /* hwheel button rolled */
	MOUSEEVENTF_MOVE_NOCOALESCE = &H2000 /* do not coalesce mouse moves */
	MOUSEEVENTF_VIRTUALDESK = &H4000 /* map to entire virtual desktop */
	MOUSEEVENTF_ABSOLUTE = &H8000& /* absolute move */
    MOUSEEVENTF_FROMTOUCH = &HFF515700
End Enum
Public Enum KeybdEventFlags
    KEYEVENTF_EXTENDEDKEY = &H0001
    KEYEVENTF_KEYUP = &H0002
    KEYEVENTF_UNICODE = &H0004
    KEYEVENTF_SCANCODE = &H0008
End Enum
Public Enum TrackMouseEventFlags
	TME_HOVER = &H00000001
	TME_LEAVE = &H00000002
	TME_NONCLIENT = &H00000010
	TME_QUERY = &H40000000
	TME_CANCEL = &H80000000
End Enum
Public Type TRACKMOUSEEVENT
	cbSize As Long
	dwFlags As TrackMouseEventFlags
	hwndTrack As LongPtr
	dwHoverTime As Long
End Type
Public Const HOVER_DEFAULT = &HFFFFFFFF

Public Enum AccelFvirt
    FVIRTKEY = True /* Assumed to be == TRUE */
    FNOINVERT = &H02
    FSHIFT = &H04
    FCONTROL = &H08
    FALT = &H10
End Enum
Public Type ACCEL
   fVirt As Byte                  '// Also called the flags field
   key As Integer
   cmd As Integer
End Type


Public Const CW_USEDEFAULT = &H80000000&

Public Enum SystemColors
    CTLCOLOR_MSGBOX = 0
    CTLCOLOR_EDIT = 1
    CTLCOLOR_LISTBOX = 2
    CTLCOLOR_BTN = 3
    CTLCOLOR_DLG = 4
    CTLCOLOR_SCROLLBAR = 5
    CTLCOLOR_STATIC = 6
    CTLCOLOR_MAX = 7

    COLOR_SCROLLBAR = 0
    COLOR_BACKGROUND = 1
    COLOR_ACTIVECAPTION = 2
    COLOR_INACTIVECAPTION = 3
    COLOR_MENU = 4
    COLOR_WINDOW = 5
    COLOR_WINDOWFRAME = 6
    COLOR_MENUTEXT = 7
    COLOR_WINDOWTEXT = 8
    COLOR_CAPTIONTEXT = 9
    COLOR_ACTIVEBORDER = 10
    COLOR_INACTIVEBORDER = 11
    COLOR_APPWORKSPACE = 12
    COLOR_HIGHLIGHT = 13
    COLOR_HIGHLIGHTTEXT = 14
    COLOR_BTNFACE = 15
    COLOR_BTNSHADOW = 16
    COLOR_GRAYTEXT = 17
    COLOR_BTNTEXT = 18
    COLOR_INACTIVECAPTIONTEXT = 19
    COLOR_BTNHIGHLIGHT = 20

    COLOR_3DDKSHADOW = 21
    COLOR_3DLIGHT = 22
    COLOR_INFOTEXT = 23
    COLOR_INFOBK = 24

    COLOR_HOTLIGHT = 26
    COLOR_GRADIENTACTIVECAPTION = 27
    COLOR_GRADIENTINACTIVECAPTION = 28

    COLOR_MENUHILIGHT = 29
    COLOR_MENUBAR = 30

    COLOR_DESKTOP = COLOR_BACKGROUND
    COLOR_3DFACE = COLOR_BTNFACE
    COLOR_3DSHADOW = COLOR_BTNSHADOW
    COLOR_3DHIGHLIGHT = COLOR_BTNHIGHLIGHT
    COLOR_3DHILIGHT = COLOR_BTNHIGHLIGHT
    COLOR_BTNHILIGHT = COLOR_BTNHIGHLIGHT
End Enum



Public Enum SWP_Flags
    SWP_NOSIZE = &H1
    SWP_NOMOVE = &H2
    SWP_NOZORDER = &H4
    SWP_NOREDRAW = &H8
    SWP_NOACTIVATE = &H10
    SWP_FRAMECHANGED = &H20
    SWP_DRAWFRAME = SWP_FRAMECHANGED
    SWP_SHOWWINDOW = &H40
    SWP_HIDEWINDOW = &H80
    SWP_NOCOPYBITS = &H100
    SWP_NOOWNERZORDER = &H200
    SWP_NOREPOSITION = SWP_NOOWNERZORDER
    SWP_NOSENDCHANGING = &H400
    
    SWP_DEFERERASE = &H2000
    SWP_ASYNCWINDOWPOS = &H4000
End Enum
Public Enum WindowZOrderDefaults
    HWND_DESKTOP = 0&
    HWND_TOP = 0&
    HWND_BOTTOM = 1&
    HWND_TOPMOST = -1
    HWND_NOTOPMOST = -2
End Enum

Public Type PAINTSTRUCT
	hdc                  As LongPtr
    fErase               As Long
    rcPaint              As RECT
    fRestore             As Long
    fIncUpdate           As Long
    rgbReserved(0 To 31) As Byte
End Type

Public Enum RDW_Flags
    RDW_INVALIDATE = &H1
    RDW_INTERNALPAINT = &H2
    RDW_ERASE = &H4
    RDW_VALIDATE = &H8
    RDW_NOINTERNALPAINT = &H10
    RDW_NOERASE = &H20
    RDW_NOCHILDREN = &H40
    RDW_ALLCHILDREN = &H80
    RDW_UPDATENOW = &H100
    RDW_ERASENOW = &H200
    RDW_FRAME = &H400
    RDW_NOFRAME = &H800
End Enum
Public Enum TPM_wFlags
    TPM_LEFTBUTTON = &H0
    TPM_RECURSE = &H1
    TPM_RIGHTBUTTON = &H2
    TPM_LEFTALIGN = &H0
    TPM_CENTERALIGN = &H4
    TPM_RIGHTALIGN = &H8
    TPM_TOPALIGN = &H0
    TPM_VCENTERALIGN = &H10
    TPM_BOTTOMALIGN = &H20

    TPM_HORIZONTAL = &H0         ' Horz alignment matters more
    TPM_VERTICAL = &H40            ' Vert alignment matters more
    TPM_NONOTIFY = &H80           ' Don't send any notification msgs
    TPM_RETURNCMD = &H100

    TPM_HORPOSANIMATION = &H400
    TPM_HORNEGANIMATION = &H800
    TPM_VERPOSANIMATION = &H1000
    TPM_VERNEGANIMATION = &H2000
    TPM_NOANIMATION = &H4000
    TPM_LAYOUTRTL = &H8000&
    'Win7+:
    TPM_WORKAREA = &H10000
End Enum
Public Type TPMPARAMS
    cbSize As Long
    rcExclude As RECT
End Type

Public Enum AnimateWindowTimeDefaults
    CMS_QANIMATION = 165
    CMS_FLASHWND = 500
    CMS_MENUFADE = 175
    CMS_SELECTIONFADE = 350
    CMS_TOOLTIP = 135
End Enum
Public Enum AnimateWindowFlags
	AW_HOR_POSITIVE = &H00000001
	AW_HOR_NEGATIVE = &H00000002
	AW_VER_POSITIVE = &H00000004
	AW_VER_NEGATIVE = &H00000008
	AW_CENTER = &H00000010
	AW_HIDE = &H00010000
	AW_ACTIVATE = &H00020000
	AW_SLIDE = &H00040000
	AW_BLEND = &H00080000
End Enum

Public Enum HBMMENU_Defaults
    HBMMENU_CALLBACK = (-1)
    HBMMENU_SYSTEM = (1)
    HBMMENU_MBAR_RESTORE = (2)
    HBMMENU_MBAR_MINIMIZE = (3)
    HBMMENU_MBAR_CLOSE = (5)
    HBMMENU_MBAR_CLOSE_D = (6)
    HBMMENU_MBAR_MINIMIZE_D = (7)
    HBMMENU_POPUP_CLOSE = (8)
    HBMMENU_POPUP_RESTORE = (9)
    HBMMENU_POPUP_MAXIMIZE = (10)
    HBMMENU_POPUP_MINIMIZE = (11)
End Enum
Public Type MENUITEMINFOA
    cbSize As Long
    fMask As MII_Mask
    fType As MF_Type ' used if MIIM_TYPE (4.0) or MIIM_FTYPE (>4.0)
    fState As MF_State ' used if MIIM_STATE
    wID As Long ' used if MIIM_ID
    hSubMenu As LongPtr ' used if MIIM_SUBMENU
    hbmpChecked As LongPtr ' used if MIIM_CHECKMARKS
    hbmpUnchecked As LongPtr ' used if MIIM_CHECKMARKS
    dwItemData As LongPtr ' used if MIIM_DATA
    dwTypeData As String ' used if MIIM_TYPE (4.0) or MIIM_STRING (>4.0)
    cch As Long ' used if MIIM_TYPE (4.0) or MIIM_STRING (>4.0)
    /* [ TypeHint(HBMMENU_Defaults) ] */ hbmpItem As LongPtr ' used if MIIM_BITMAP
End Type
Public Type MENUITEMINFOW
    cbSize As Long
    fMask As MII_Mask
    fType As MF_Type ' used if MIIM_TYPE (4.0) or MIIM_FTYPE (>4.0)
    fState As MF_State ' used if MIIM_STATE
    wID As Long ' used if MIIM_ID
    hSubMenu As LongPtr ' used if MIIM_SUBMENU
    hbmpChecked As LongPtr ' used if MIIM_CHECKMARKS
    hbmpUnchecked As LongPtr ' used if MIIM_CHECKMARKS
    dwItemData As LongPtr ' used if MIIM_DATA
    dwTypeData As LongPtr ' used if MIIM_TYPE (4.0) or MIIM_STRING (>4.0)
    cch As Long ' used if MIIM_TYPE (4.0) or MIIM_STRING (>4.0)
    /* [ TypeHint(HBMMENU_Defaults) ] */ hbmpItem As LongPtr ' used if MIIM_BITMAP
End Type
'Alias MENUITEMINFO As MENUITEMINFOW
Public Type MENUITEMINFO
    cbSize As Long
    fMask As MII_Mask
    fType As MF_Type ' used if MIIM_TYPE (4.0) or MIIM_FTYPE (>4.0)
    fState As MF_State ' used if MIIM_STATE
    wID As Long ' used if MIIM_ID
    hSubMenu As LongPtr ' used if MIIM_SUBMENU
    hbmpChecked As LongPtr ' used if MIIM_CHECKMARKS
    hbmpUnchecked As LongPtr ' used if MIIM_CHECKMARKS
    dwItemData As LongPtr ' used if MIIM_DATA
    dwTypeData As LongPtr ' used if MIIM_TYPE (4.0) or MIIM_STRING (>4.0)
    cch As Long ' used if MIIM_TYPE (4.0) or MIIM_STRING (>4.0)
    /* [ TypeHint(HBMMENU_Defaults) ] */ hbmpItem As LongPtr ' used if MIIM_BITMAP
End Type
Public Enum MII_Mask
  MIIM_STATE = &H1
  MIIM_ID = &H2
  MIIM_SUBMENU = &H4
  MIIM_CHECKMARKS = &H8
  MIIM_TYPE = &H10
  MIIM_DATA = &H20
  MIIM_STRING = &H40
  MIIM_BITMAP = &H80
  MIIM_FTYPE = &H100
End Enum
Public Enum MenuFlags
  MF_INSERT = &H0
  MF_ENABLED = &H0
  MF_UNCHECKED = &H0
  MF_BYCOMMAND = &H0
  MF_STRING = &H0
  MF_UNHILITE = &H0
  MF_GRAYED = &H1
  MF_DISABLED = &H2
  MF_BITMAP = &H4
  MF_CHECKED = &H8
  MF_POPUP = &H10
  MF_MENUBARBREAK = &H20
  MF_MENUBREAK = &H40
  MF_HILITE = &H80
  MF_CHANGE = &H80
  MF_END = &H80                    ' Obsolete -- only used by old RES files
  MF_APPEND = &H100
  MF_OWNERDRAW = &H100
  MF_DELETE = &H200
  MF_USECHECKBITMAPS = &H200
  MF_BYPOSITION = &H400
  MF_SEPARATOR = &H800
  MF_REMOVE = &H1000
  MF_DEFAULT = &H1000
  MF_SYSMENU = &H2000
  MF_HELP = &H4000
  MF_RIGHTJUSTIFY = &H4000
  MF_MOUSESELECT = &H8000&
End Enum
Public Enum MF_Type
  MFT_STRING = MF_STRING
  MFT_BITMAP = MF_BITMAP
  MFT_MENUBARBREAK = MF_MENUBARBREAK
  MFT_MENUBREAK = MF_MENUBREAK
  MFT_OWNERDRAW = MF_OWNERDRAW
  MFT_RADIOCHECK = &H200
  MFT_SEPARATOR = MF_SEPARATOR
  MFT_RIGHTORDER = &H2000
  MFT_RIGHTJUSTIFY = MF_RIGHTJUSTIFY
End Enum
Public Enum MF_State
  MFS_GRAYED = &H3
  MFS_DISABLED = MFS_GRAYED
  MFS_CHECKED = MF_CHECKED
  MFS_HILITE = MF_HILITE
  MFS_ENABLED = MF_ENABLED
  MFS_UNCHECKED = MF_UNCHECKED
  MFS_UNHILITE = MF_UNHILITE
  MFS_DEFAULT = MF_DEFAULT
End Enum
Public Type MENUBARINFO
	cbSize As Long
	rcBar As RECT
	hMenu As LongPtr
	hwndMenu As LongPtr
	FocusBitfield As Long
End Type

Public Const MND_CONTINUE  = 0
Public Const MND_ENDMENU  = 1

Public Const MNGO_NOINTERFACE  = &H00000000
Public Const MNGO_NOERROR  = &H00000001

Public Enum MenuObjectInfoFlags
    MNGOF_TOPGAP = &H00000001
    MNGOF_BOTTOMGAP = &H00000002
End Enum
Public Type MENUGETOBJECTINFO
    dwFlags As MenuObjectInfoFlags
    uPos As Long
    hmenu As LongPtr
    riid As LongPtr
    pvObj As LongPtr
End Type


    
Public Type MENUITEMTEMPLATEHEADER
    versionNumber As Integer
    offset As Integer
End Type
Public Type MENUEX_TEMPLATE_HEADER
    wVersion As Integer
    wOffset As Integer
    dwHelpId As Long
End Type
Public Type MENUEX_TEMPLATE_ITEM
    dwType As Long
    dwState As Long
    uId As Long
    wFlags As Integer
    szText(0 To 0) As Integer
End Type
Public Type MENUITEMTEMPLATE
    mtOption As Integer
    mtID As Integer
    mtString(0 To 0) As Integer
End Type

Public Enum GetMenuDefItemFlags
    GMDI_USEDISABLED = &H0001
    GMDI_GOINTOPOPUPS = &H0002
End Enum

Public Enum MenuInfoMask
    MIM_MAXHEIGHT = &H00000001
    MIM_BACKGROUND = &H00000002
    MIM_HELPID = &H00000004
    MIM_MENUDATA = &H00000008
    MIM_STYLE = &H00000010
    MIM_APPLYTOSUBMENUS = &H80000000
End Enum
Public Enum MenuInfoStyle
    MNS_NOCHECK = &H80000000
    MNS_MODELESS = &H40000000
    MNS_DRAGDROP = &H20000000
    MNS_AUTODISMISS = &H10000000
    MNS_NOTIFYBYPOS = &H08000000
    MNS_CHECKORBMP = &H04000000
End Enum
Public Type MENUINFO
    cbSize As Long
    fMask As MenuInfoMask
    dwStyle As MenuInfoStyle
    cyMax As Long
    hbrBack As LongPtr
    dwContextHelpID As Long
    dwMenuData As LongPtr
End Type

/* return codes for WM_MENUCHAR */
Public Const MNC_IGNORE  = 0
Public Const MNC_CLOSE  = 1
Public Const MNC_EXECUTE  = 2
Public Const MNC_SELECT  = 3

Public Enum MenuAccessRights
    MENU_GET_ITEM_INFO = (&H0001)  ' GetMenuInfo, GetMenuItemInfo
    MENU_GET_ITEM_DATA = (&H0002)  ' Get dwMenuData
    MENU_GET_SUBMENU = (&H0004)  ' Get Sub Menu
    MENU_INSERT_MENU = (&H0008)  ' InsertMenu
    MENU_INSERT_ITEM = (&H0010)  ' InsertMenuItem
    MENU_DELETE_MENU = (&H0020)  ' DeleteMenu, RemoveMenu
    MENU_SET_ITEM_INFO = (&H0040)  ' SetMenuItemInfo, ModifyMenu
    MENU_ENABLE_ITEM = (&H0080)  ' EnableMenuItem
    MENU_CHECK_ITEM = (&H0100)  ' CheckMenuItem
    MENU_SET_DEFAULT_ITEM = (&H0200)  ' SetMenuDefaultItem
    MENU_SET_ITEM_DATA = (&H0400)  ' Set dwMenuData
    MENU_SET_SUBMENU = (&H0800)  ' Set Sub Menu
    MENU_READ_ACCESS = (STANDARD_RIGHTS_READ Or MENU_GET_ITEM_INFO Or MENU_GET_ITEM_DATA Or MENU_GET_SUBMENU)
    MENU_WRITE_ACCESS = (STANDARD_RIGHTS_WRITE Or MENU_INSERT_MENU Or MENU_INSERT_ITEM Or MENU_DELETE_MENU Or MENU_SET_ITEM_INFO Or MENU_ENABLE_ITEM Or MENU_CHECK_ITEM Or MENU_SET_DEFAULT_ITEM Or MENU_SET_ITEM_DATA Or MENU_SET_SUBMENU)
    MENU_EXECUTE_ACCESS = (STANDARD_RIGHTS_EXECUTE)
    MENU_ALL_ACCESS = (STANDARD_RIGHTS_ALL Or MENU_READ_ACCESS Or MENU_WRITE_ACCESS Or MENU_EXECUTE_ACCESS)
End Enum


Public Declare PtrSafe Function CheckMenuRadioItem Lib "user32" (ByVal hMenu As LongPtr, ByVal first As Long, ByVal last As Long, ByVal check As Long, ByVal flags As MenuFlags) As Long
Public Declare PtrSafe Function GetMenuBarInfo Lib "user32" (ByVal hWnd As LongPtr, ByVal idObject As CommonObjectIDs, ByVal idItem As Long, pmbi As MENUBARINFO) As LongPtr
Public Declare PtrSafe Function LoadMenuA Lib "user32" (ByVal hInstance As LongPtr, ByVal lpString As String) As LongPtr
Public Declare PtrSafe Function LoadMenuW Lib "user32" (ByVal hInstance As LongPtr, ByVal lpString As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function LoadMenu Lib "user32" Alias "LoadMenuW" (ByVal hInstance As LongPtr, ByVal lpString As String) As LongPtr
Public Declare PtrSafe Function LoadMenuIndirectA Lib "user32" (ByVal lpMenuTemplate As LongPtr) As LongPtr
Public Declare PtrSafe Function LoadMenuIndirectW Lib "user32" (lpMenuTemplate As Any) As LongPtr
Public DeclareWide PtrSafe Function LoadMenuIndirect Lib "user32" Alias "LoadMenuIndirectW" (ByVal lpMenuTemplate As LongPtr) As LongPtr
Public Declare PtrSafe Function GetMenu Lib "user32" (ByVal hWnd As LongPtr) As LongPtr
Public Declare PtrSafe Function SetMenu Lib "user32" (ByVal hwnd As LongPtr, ByVal hMenu As LongPtr) As Long
Public Declare PtrSafe Function ChangeMenuA Lib "user32" (ByVal hMenu As LongPtr, ByVal cmd As Long, ByVal lpszNewItem As String, ByVal cmdInsert As Long, ByVal flags As Long) As BOOL
Public Declare PtrSafe Function ChangeMenuW Lib "user32" (ByVal hMenu As LongPtr, ByVal cmd As Long, ByVal lpszNewItem As LongPtr, ByVal cmdInsert As Long, ByVal flags As Long) As BOOL
Public DeclareWide PtrSafe Function ChangeMenu Lib "user32" Alias "ChangeMenuW" (ByVal hMenu As LongPtr, ByVal cmd As Long, ByVal lpszNewItem As String, ByVal cmdInsert As Long, ByVal flags As Long) As BOOL
Public Declare PtrSafe Function HiliteMenuItem Lib "user32" (ByVal hwnd As LongPtr, ByVal hMenu As LongPtr, ByVal wIDHiliteItem As Long, ByVal wHilite As Long) As BOOL
Public Declare PtrSafe Function GetMenuStringA Lib "user32" (ByVal hMenu As LongPtr, ByVal uIDItem As Long, ByVal lpString As String, ByVal cchMax As Long, ByVal flags As MenuFlags) As Long
Public Declare PtrSafe Function GetMenuStringW Lib "user32" (ByVal hMenu As LongPtr, ByVal uIDItem As Long, ByVal lpString As LongPtr, ByVal cchMax As Long, ByVal flags As MenuFlags) As Long
Public DeclareWide PtrSafe Function GetMenuString Lib "user32" Alias "GetMenuStringW" (ByVal hMenu As LongPtr, ByVal uIDItem As Long, ByVal lpString As String, ByVal cchMax As Long, ByVal flags As MenuFlags) As Long
Public Declare PtrSafe Function GetMenuState Lib "user32" (ByVal hMenu As LongPtr, ByVal uID As Long, ByVal uFlags As MenuFlags) As Long
Public Declare PtrSafe Function DrawMenuBar Lib "user32" (ByVal hwnd As LongPtr) As BOOL
Public Declare PtrSafe Function GetSystemMenu Lib "user32" (ByVal hwnd As LongPtr, ByVal bRevert As BOOL) As LongPtr
Public Declare PtrSafe Function CreateMenu Lib "user32" () As LongPtr
Public Declare PtrSafe Function CreatePopupMenu Lib "user32" () As LongPtr
Public Declare PtrSafe Function DestroyMenu Lib "user32" (ByVal hMenu As LongPtr) As BOOL
Public Declare PtrSafe Function CheckMenuItem Lib "user32" (ByVal hMenu As LongPtr, ByVal uIDCheckItem As Long, ByVal uCheck As MenuFlags) As Long
Public Declare PtrSafe Function EnableMenuItem Lib "user32" (ByVal hMenu As LongPtr, ByVal uIDEnableItem As Long, ByVal uEnable As Long) As BOOL
Public Declare PtrSafe Function GetSubMenu Lib "user32" (ByVal hMenu As LongPtr, ByVal nPos As Long) As LongPtr
Public Declare PtrSafe Function GetMenuItemID Lib "user32" (ByVal hMenu As LongPtr, ByVal nPos As Long) As Long
Public Declare PtrSafe Function GetMenuItemCount Lib "user32" (ByVal hMenu As LongPtr) As Long
Public Declare PtrSafe Function InsertMenuA Lib "user32" (ByVal hMenu As LongPtr, ByVal uPosition As Long, ByVal uFlags As MenuFlags, ByVal uIDNewItem As LongPtr, ByVal lpNewItem As String) As BOOL
Public Declare PtrSafe Function InsertMenuA Lib "user32" (ByVal hMenu As LongPtr, ByVal uPosition As Long, ByVal uFlags As MenuFlags, ByVal uIDNewItem As LongPtr, ByVal lpNewItem As LongPtr) As BOOL
Public Declare PtrSafe Function InsertMenuW Lib "user32" (ByVal hMenu As LongPtr, ByVal uPosition As Long, ByVal uFlags As MenuFlags, ByVal uIDNewItem As LongPtr, ByVal lpNewItem As LongPtr) As BOOL
Public DeclareWide PtrSafe Function InsertMenu Lib "user32" Alias "InsertMenuW" (ByVal hMenu As LongPtr, ByVal uPosition As Long, ByVal uFlags As MenuFlags, ByVal uIDNewItem As LongPtr, ByVal lpNewItem As String) As BOOL
Public DeclareWide PtrSafe Function InsertMenu Lib "user32" Alias "InsertMenuW" (ByVal hMenu As LongPtr, ByVal uPosition As Long, ByVal uFlags As MenuFlags, ByVal uIDNewItem As LongPtr, ByVal lpNewItem As LongPtr) As BOOL
Public Declare PtrSafe Function AppendMenuA Lib "user32" (ByVal hMenu As LongPtr, ByVal uFlags As MenuFlags, ByVal uIDNewItem As LongPtr, ByVal lpNewItem As String) As BOOL
Public Declare PtrSafe Function AppendMenuW Lib "user32" (ByVal hMenu As LongPtr, ByVal uFlags As MenuFlags, ByVal uIDNewItem As LongPtr, ByVal lpNewItem As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AppendMenu Lib "user32" Alias "AppendMenuW" (ByVal hMenu As LongPtr, ByVal uFlags As MenuFlags, ByVal uIDNewItem As LongPtr, ByVal lpNewItem As String) As BOOL
Public Declare PtrSafe Function ModifyMenuA Lib "user32" (ByVal hMenu As LongPtr, ByVal uPosition As Long, ByVal uFlags As MenuFlags, ByVal uIDNewItem As LongPtr, ByVal lpString As String) As BOOL
Public Declare PtrSafe Function ModifyMenuA Lib "user32" (ByVal hMenu As LongPtr, ByVal uPosition As Long, ByVal uFlags As MenuFlags, ByVal uIDNewItem As LongPtr, ByVal lpString As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ModifyMenuW Lib "user32" (ByVal hMenu As LongPtr, ByVal uPosition As Long, ByVal uFlags As MenuFlags, ByVal uIDNewItem As LongPtr, ByVal lpString As Any) As BOOL
Public DeclareWide PtrSafe Function ModifyMenu Lib "user32" Alias "ModifyMenuW" (ByVal hMenu As LongPtr, ByVal uPosition As Long, ByVal uFlags As MenuFlags, ByVal uIDNewItem As LongPtr, ByVal lpString As String) As BOOL
Public DeclareWide PtrSafe Function ModifyMenu Lib "user32" Alias "ModifyMenuW" (ByVal hMenu As LongPtr, ByVal uPosition As Long, ByVal uFlags As MenuFlags, ByVal uIDNewItem As LongPtr, ByVal lpString As LongPtr) As BOOL
Public Declare PtrSafe Function RemoveMenu Lib "user32" (ByVal hMenu As LongPtr, ByVal uPosition As Long, ByVal wFlags As MenuFlags) As BOOL
Public Declare PtrSafe Function DeleteMenu Lib "user32" (ByVal hMenu As LongPtr, ByVal uPosition As Long, ByVal uFlags As MenuFlags) As BOOL
Public Declare PtrSafe Function SetMenuItemBitmaps Lib "user32" (ByVal hMenu As LongPtr, ByVal uPosition As Long, ByVal uFlags As Long, ByVal hBitmapUnchecked As LongPtr, ByVal hBitmapChecked As LongPtr) As BOOL
Public Declare PtrSafe Function GetMenuCheckMarkDimensions Lib "user32" () As Long
Public Declare PtrSafe Function TrackPopupMenu Lib "user32" (ByVal hMenu As LongPtr, ByVal uFlags As TPM_wFlags, ByVal x As Long, ByVal y As Long, ByVal nReserved As Long, ByVal hwnd As LongPtr, lpRC As Any) As Long
Public Declare PtrSafe Function TrackPopupMenuEx Lib "user32" (ByVal hMenu As LongPtr, ByVal uFlags As TPM_wFlags, ByVal X As Long, ByVal Y As Long, ByVal hWnd As LongPtr, lptpm As TPMPARAMS) As Long
Public Declare PtrSafe Function CalculatePopupWindowPosition Lib "user32" (anchorPoint As POINT, windowSize As RECT, ByVal flags As TPM_wFlags, excludeRect As RECT, popupWindowPosition As RECT) As BOOL
Public Declare PtrSafe Function GetMenuInfo Lib "user32" (ByVal hMenu As LongPtr, lpmi As MENUINFO) As BOOL
Public Declare PtrSafe Function SetMenuInfo Lib "user32" (ByVal hMenu As LongPtr, lpcmi As MENUINFO) As BOOL
Public Declare PtrSafe Function EndMenu Lib "user32" () As BOOL
Public Declare PtrSafe Function InsertMenuItemA Lib "user32" (ByVal hMenu As LongPtr, ByVal uItem As Long, ByVal fByPosition As BOOL, lpmii As MENUITEMINFOA) As BOOL
Public Declare PtrSafe Function InsertMenuItemW Lib "user32" (ByVal hMenu As LongPtr, ByVal uItem As Long, ByVal fByPosition As BOOL, lpmii As MENUITEMINFOW) As BOOL
Public DeclareWide PtrSafe Function InsertMenuItem Lib "user32" Alias "InsertMenuItemW" (ByVal hMenu As LongPtr, ByVal uItem As Long, ByVal fByPosition As BOOL, lpmii As MENUITEMINFO) As BOOL
Public Declare PtrSafe Function GetMenuItemInfoA Lib "user32" (ByVal hMenu As LongPtr, ByVal item As Long, ByVal fByPosition As BOOL, lpmii As MENUITEMINFOA) As BOOL
Public Declare PtrSafe Function GetMenuItemInfoW Lib "user32" (ByVal hMenu As LongPtr, ByVal item As Long, ByVal fByPosition As BOOL, lpmii As MENUITEMINFOW) As BOOL
Public DeclareWide PtrSafe Function GetMenuItemInfo Lib "user32" Alias "GetMenuItemInfoW" (ByVal hMenu As LongPtr, ByVal item As Long, ByVal fByPosition As BOOL, lpmii As MENUITEMINFO) As BOOL
Public Declare PtrSafe Function SetMenuItemInfoA Lib "user32" (ByVal hMenu As LongPtr, ByVal item As Long, ByVal fByPosition As BOOL, lpmii As MENUITEMINFOA) As BOOL
Public Declare PtrSafe Function SetMenuItemInfoW Lib "user32" (ByVal hMenu As LongPtr, ByVal item As Long, ByVal fByPosition As BOOL, lpmii As MENUITEMINFOW) As BOOL
Public DeclareWide PtrSafe Function SetMenuItemInfo Lib "user32" Alias "SetMenuItemInfoW" (ByVal hMenu As LongPtr, ByVal item As Long, ByVal fByPosition As BOOL, lpmii As MENUITEMINFO) As BOOL
Public Declare PtrSafe Function GetMenuDefaultItem Lib "user32" (ByVal hMenu As LongPtr, ByVal fByPos As Long, ByVal gmdiFlags As GetMenuDefItemFlags) As Long
Public Declare PtrSafe Function SetMenuDefaultItem Lib "user32" (ByVal hMenu As LongPtr, ByVal uItem As Long, ByVal fByPos As Long) As BOOL
Public Declare PtrSafe Function GetMenuItemRect Lib "user32" (ByVal hwnd As LongPtr, ByVal hMenu As LongPtr, ByVal uItem As Long, lprcItem As RECT) As BOOL
Public Declare PtrSafe Function MenuItemFromPoint Lib "user32" (ByVal hWnd As LongPtr, ByVal hMenu As LongPtr, ByVal ptScreen As LongLong) As Long



Public Delegate Function EditWordBreakProcA (ByVal lpch As LongPtr, ByVal ichCurrent As Long, ByVal cch As Long, ByVal code As Long) As Long
Public Delegate Function EditWordBreakProcW (ByVal lpch As LongPtr, ByVal ichCurrent As Long, ByVal cch As Long, ByVal code As Long) As Long
Public Delegate Function EditWordBreakProc (ByVal lpch As LongPtr, ByVal ichCurrent As Long, ByVal cch As Long, ByVal code As Long) As Long


'dde.h

Public Type DDEACK
    usFlagsBitfield As Integer
End Type

Public Type DDEADVISE
    usFlagsBitfield As Integer
    cfFormat As Integer
End Type

[Description("IMPORTANT: Header only. Followed by Value, a C-style byte array of variable length.")]
Public Type DDEDATA
    usFlagsBitfield As Integer
    cfFormat As Integer
End Type

[Description("IMPORTANT: Header only. Followed by Value, a C-style byte array of variable length.")]
Public Type DDEPOKE
    usFlagsBitfield As Integer
    cfFormat As Integer
End Type

Public Type DDELN
    usFlagsBitfield As Integer
    cfFormat As Integer
End Type

[Description("IMPORTANT: Header only. Followed by Value, a C-style byte array of variable length.")]
Public Type DDEUP
    usFlagsBitfield As Integer
    cfFormat As Integer
End Type

Public Declare PtrSafe Function DdeSetQualityOfService Lib "user32" (ByVal hWndClient As LongPtr, pqosNew As SECURITY_QUALITY_OF_SERVICE, pqosPrev As SECURITY_QUALITY_OF_SERVICE) As BOOL
Public Declare PtrSafe Function ImpersonateDdeClientWindow Lib "user32" (ByVal hWndClient As LongPtr, ByVal hWndServer As LongPtr) As BOOL
Public Declare PtrSafe Function PackDDElParam Lib "user32" (ByVal msg As Long, ByVal uiLo As LongPtr, ByVal uiHi As LongPtr) As LongPtr
Public Declare PtrSafe Function UnpackDDElParam Lib "user32" (ByVal msg As Long, ByVal lParam As LongPtr, puiLo As LongPtr, puiHi As LongPtr) As BOOL
Public Declare PtrSafe Function FreeDDElParam Lib "user32" (ByVal msg As Long, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function ReuseDDElParam Lib "user32" (ByVal lParam As LongPtr, ByVal msgIn As Long, ByVal msgOut As Long, ByVal uiLo As LongPtr, ByVal uiHi As LongPtr) As LongPtr

'ddeml.h

Public Type CONVCONTEXT
    cb As Long ' /* set to sizeof(CONVCONTEXT) */
    wFlags As Long ' /* none currently defined. */
    wCountryID As Long ' /* country/region code for topic/item strings used. */
    iCodePage As Long '  /* codepage used for topic/item strings. */
    dwLangID As Long '  /* language ID for topic/item strings. */
    dwSecurity As Long '  /* Private security code. */
    qos As SECURITY_QUALITY_OF_SERVICE '  /* client side's quality of service */
End Type

Public Type CONVINFO
    cb As Long '* sizeof(CONVINFO)  */
    hUser As LongPtr '* user specified field  */
    hConvPartner As LongPtr 'HCONV '* hConv on other end or 0 if non-ddemgr partner  */
    hszSvcPartner As LongPtr 'HSZ '* app name of partner if obtainable  */
    hszServiceReq As LongPtr 'HSZ '* AppName requested for connection  */
    hszTopic As LongPtr 'HSZ '* Topic name for conversation  */
    hszItem As LongPtr 'HSZ '* transaction item name or NULL if quiescent  */
    wFmt As Long '* transaction format or NULL if quiescent  */
    wType As DdeTransactionTypes '* XTYP_ for current transaction  */
    wStatus As DdeStatusFlags '* ST_ constant for current conversation  */
    wConvst As DdeConversionStates '* XST_ constant for current transaction  */
    wLastError As Long '* last transaction error.  */
    hConvList As LongPtr 'HCONVLIST '* parent hConvList if this conversation is in a list */
    ConvCtxt As CONVCONTEXT '* conversation context */
    hwnd As LongPtr '* window handle for this conversation */
    hwndPartner As LongPtr '* partner window handle for this conversation */
End Type

Public Enum DdeConversionStates
    XST_NULL = 0 /* quiescent states */
    XST_INCOMPLETE = 1
    XST_CONNECTED = 2
    XST_INIT1 = 3 /* mid-initiation states */
    XST_INIT2 = 4
    XST_REQSENT = 5 /* active conversation states */
    XST_DATARCVD = 6
    XST_POKESENT = 7
    XST_POKEACKRCVD = 8
    XST_EXECSENT = 9
    XST_EXECACKRCVD = 10
    XST_ADVSENT = 11
    XST_UNADVSENT = 12
    XST_ADVACKRCVD = 13
    XST_UNADVACKRCVD = 14
    XST_ADVDATASENT = 15
    XST_ADVDATAACKRCVD = 16
End Enum

Public Const CADV_LATEACK = &HFFFF&

Public Enum DdeConversionStatus
    ST_CONNECTED = &H0001
    ST_ADVISE = &H0002
    ST_ISLOCAL = &H0004
    ST_BLOCKED = &H0008
    ST_CLIENT = &H0010
    ST_TERMINATED = &H0020
    ST_INLIST = &H0040
    ST_BLOCKNEXT = &H0080
    ST_ISSELF = &H0100
End Enum

Public Enum DdeStatusFlags
    DDE_FACK = &H8000&
    DDE_FBUSY = &H4000
    DDE_FDEFERUPD = &H4000
    DDE_FACKREQ = &H8000&
    DDE_FRELEASE = &H2000
    DDE_FREQUESTED = &H1000
    DDE_FAPPSTATUS = &H00ff
    DDE_FNOTPROCESSED = &H0000
    DDE_FACKRESERVED = (Not (DDE_FACK Or DDE_FBUSY Or DDE_FAPPSTATUS))
    DDE_FADVRESERVED = (Not (DDE_FACKREQ Or DDE_FDEFERUPD))
    DDE_FDATRESERVED = (Not (DDE_FACKREQ Or DDE_FRELEASE Or DDE_FREQUESTED))
    DDE_FPOKRESERVED = (Not (DDE_FRELEASE))
End Enum

Public Const MSGF_DDEMGR = &H8001&

Public Enum DdeTransactionFormat
    XTYPF_NOBLOCK = &H0002  '* CBR_BLOCK will not work */
    XTYPF_NODATA = &H0004  '* DDE_FDEFERUPD */
    XTYPF_ACKREQ = &H0008  '* DDE_FACKREQ */
End Enum
Public Enum DdeTransactionClass
    XCLASS_MASK = &HFC00&
    XCLASS_BOOL = &H1000
    XCLASS_DATA = &H2000
    XCLASS_FLAGS = &H4000
    XCLASS_NOTIFICATION = &H8000&
End Enum
Public Enum DdeTransactionTypes
    XTYP_ERROR = (&H0000 Or XCLASS_NOTIFICATION Or XTYPF_NOBLOCK)
    XTYP_ADVDATA = (&H0010 Or XCLASS_FLAGS)
    XTYP_ADVREQ = (&H0020 Or XCLASS_DATA Or XTYPF_NOBLOCK)
    XTYP_ADVSTART = (&H0030 Or XCLASS_BOOL)
    XTYP_ADVSTOP = (&H0040 Or XCLASS_NOTIFICATION)
    XTYP_EXECUTE = (&H0050 Or XCLASS_FLAGS)
    XTYP_CONNECT = (&H0060 Or XCLASS_BOOL Or XTYPF_NOBLOCK)
    XTYP_CONNECT_CONFIRM = (&H0070 Or XCLASS_NOTIFICATION Or XTYPF_NOBLOCK)
    XTYP_XACT_COMPLETE = (&H0080 Or XCLASS_NOTIFICATION)
    XTYP_POKE = (&H0090 Or XCLASS_FLAGS)
    XTYP_REGISTER = (&H00A0 Or XCLASS_NOTIFICATION Or XTYPF_NOBLOCK)
    XTYP_REQUEST = (&H00B0 Or XCLASS_DATA)
    XTYP_DISCONNECT = (&H00C0 Or XCLASS_NOTIFICATION Or XTYPF_NOBLOCK)
    XTYP_UNREGISTER = (&H00D0 Or XCLASS_NOTIFICATION Or XTYPF_NOBLOCK)
    XTYP_WILDCONNECT = (&H00E0 Or XCLASS_DATA Or XTYPF_NOBLOCK)
    XTYP_MASK = &H00F0
    XTYP_SHIFT = 4  '* shift to turn XTYP_ into an index */
    XTYP_MONITOR = (&H00F0 Or XCLASS_NOTIFICATION Or XTYPF_NOBLOCK)
End Enum

Public Const TIMEOUT_ASYNC  = &HFFFFFFFF
 
Public Const QID_SYNC  = &HFFFFFFFF

Public Const SZDDESYS_TOPIC  = "System"
Public Const SZDDESYS_ITEM_TOPICS  = "Topics"
Public Const SZDDESYS_ITEM_SYSITEMS  = "SysItems"
Public Const SZDDESYS_ITEM_RTNMSG  = "ReturnMessage"
Public Const SZDDESYS_ITEM_STATUS  = "Status"
Public Const SZDDESYS_ITEM_FORMATS  = "Formats"
Public Const SZDDESYS_ITEM_HELP  = "Help"
Public Const SZDDE_ITEM_ITEMLIST  = "TopicItemList"

' typedef HDDEDATA CALLBACK FNCALLBACK(UINT wType, UINT wFmt, HCONV hConv,
' HSZ hsz1, HSZ hsz2, HDDEDATA hData, ULONG_PTR dwData1, ULONG_PTR dwData2);
' typedef HDDEDATA (CALLBACK *PFNCALLBACK)(UINT wType, UINT wFmt, HCONV hConv,
' HSZ hsz1, HSZ hsz2, HDDEDATA hData, ULONG_PTR dwData1, ULONG_PTR dwData2);

Public Const CBR_BLOCK = -1

Public Enum DdeAfCmds
    CBF_FAIL_SELFCONNECTIONS = &H00001000
    CBF_FAIL_CONNECTIONS = &H00002000
    CBF_FAIL_ADVISES = &H00004000
    CBF_FAIL_EXECUTES = &H00008000&
    CBF_FAIL_POKES = &H00010000
    CBF_FAIL_REQUESTS = &H00020000
    CBF_FAIL_ALLSVRXACTIONS = &H0003f000
    CBF_SKIP_CONNECT_CONFIRMS = &H00040000
    CBF_SKIP_REGISTRATIONS = &H00080000
    CBF_SKIP_UNREGISTRATIONS = &H00100000
    CBF_SKIP_DISCONNECTS = &H00200000
    CBF_SKIP_ALLNOTIFICATIONS = &H003c0000
    'Application  = command flags
    APPCMD_CLIENTONLY = &H00000010
    APPCMD_FILTERINITS = &H00000020
    APPCMD_MASK = &H00000FF0
    'Application = classification flags
    APPCLASS_STANDARD = &H00000000
    APPCLASS_MASK = &H0000000F
    APPCLASS_MONITOR = &H00000001
End Enum

Public Const MAX_MONITORS = 4
Public Enum DdeMaskFlags
    MF_HSZ_INFO = &H01000000
    MF_SENDMSGS = &H02000000
    MF_POSTMSGS = &H04000000
    MF_CALLBACKS = &H08000000
    MF_ERRORS = &H10000000
    MF_LINKS = &H20000000
    MF_CONV = &H40000000
    MF_MASK = &HFF000000
End Enum

Public Enum DdeECFlags
    EC_ENABLEALL = 0
    EC_ENABLEONE = ST_BLOCKNEXT
    EC_DISABLE = ST_BLOCKED
    EC_QUERYWAITING = 2
End Enum

Public Enum DdeNSFlags
    DNS_REGISTER = &H0001
    DNS_UNREGISTER = &H0002
    DNS_FILTERON = &H0004
    DNS_FILTEROFF = &H0008
End Enum

Public Enum DdeHDATAFlags
    HDATA_APPOWNED = &H0001
End Enum

Public Enum DdeErrors
    DMLERR_NO_ERROR = 0 /* must be 0 */
    DMLERR_FIRST = &H4000
    DMLERR_ADVACKTIMEOUT = &H4000
    DMLERR_BUSY = &H4001
    DMLERR_DATAACKTIMEOUT = &H4002
    DMLERR_DLL_NOT_INITIALIZED = &H4003
    DMLERR_DLL_USAGE = &H4004
    DMLERR_EXECACKTIMEOUT = &H4005
    DMLERR_INVALIDPARAMETER = &H4006
    DMLERR_LOW_MEMORY = &H4007
    DMLERR_MEMORY_ERROR = &H4008
    DMLERR_NOTPROCESSED = &H4009
    DMLERR_NO_CONV_ESTABLISHED = &H400a
    DMLERR_POKEACKTIMEOUT = &H400b
    DMLERR_POSTMSG_FAILED = &H400c
    DMLERR_REENTRANCY = &H400d
    DMLERR_SERVER_DIED = &H400e
    DMLERR_SYS_ERROR = &H400f
    DMLERR_UNADVACKTIMEOUT = &H4010
    DMLERR_UNFOUND_QUEUE_ID = &H4011
    DMLERR_LAST = &H4011
End Enum


Public Declare PtrSafe Function DdeInitializeA Lib "user32" (pidInst As Long, ByVal pfnCallback As LongPtr, [TypeHint(DdeAfCmds, DdeMaskFlags)] ByVal afCmd As Long, ulRes As Long) As Long
Public Declare PtrSafe Function DdeInitializeW Lib "user32" (pidInst As Long, ByVal pfnCallback As LongPtr, [TypeHint(DdeAfCmds, DdeMaskFlags)] ByVal afCmd As Long, ulRes As Long) As Long
Public DeclareWide PtrSafe Function DdeInitialize Lib "user32" Alias "DdeInitializeW" (pidInst As Long, ByVal pfnCallback As LongPtr, [TypeHint(DdeAfCmds, DdeMaskFlags)] ByVal afCmd As Long, ulRes As Long) As Long
Public Declare PtrSafe Function DdeUninitialize Lib "user32" (ByVal idInst As Long) As BOOL
Public Declare PtrSafe Function DdeConnectList Lib "user32" (ByVal idInst As Long, ByVal hszService As LongPtr, ByVal hszTopic As LongPtr, ByVal hConvList As LongPtr, pCC As CONVCONTEXT) As LongPtr
Public Declare PtrSafe Function DdeQueryNextServer Lib "user32" (ByVal hConvList As LongPtr, ByVal hConvPrev As LongPtr) As LongPtr
Public Declare PtrSafe Function DdeDisconnectList Lib "user32" (ByVal hConvList As LongPtr) As BOOL
Public Declare PtrSafe Function DdeConnect Lib "user32" (ByVal idInst As Long, ByVal hszService As LongPtr, ByVal hszTopic As LongPtr, pCC As CONVCONTEXT) As LongPtr
Public Declare PtrSafe Function DdeDisconnect Lib "user32" (ByVal hConv As LongPtr) As BOOL
Public Declare PtrSafe Function DdeReconnect Lib "user32" (ByVal hConv As LongPtr) As LongPtr
Public Declare PtrSafe Function DdeQueryConvInfo Lib "user32" (ByVal hConv As LongPtr, ByVal idTransaction As Long, pConvInfo As CONVINFO) As Long
Public Declare PtrSafe Function DdeSetUserHandle Lib "user32" (ByVal hConv As LongPtr, ByVal id As Long, ByVal hUser As LongPtr) As BOOL
Public Declare PtrSafe Function DdeAbandonTransaction Lib "user32" (ByVal idInst As Long, ByVal hConv As LongPtr, ByVal idTransaction As Long) As BOOL
Public Declare PtrSafe Function DdePostAdvise Lib "user32" (ByVal idInst As Long, ByVal hszTopic As LongPtr, ByVal hszItem As LongPtr) As BOOL
Public Declare PtrSafe Function DdeEnableCallback Lib "user32" (ByVal idInst As Long, ByVal hConv As LongPtr, ByVal wCmd As Long) As BOOL
Public Declare PtrSafe Function DdeImpersonateClient Lib "user32" (ByVal hConv As LongPtr) As BOOL
Public Declare PtrSafe Function DdeNameService Lib "user32" (ByVal idInst As Long, ByVal hsz1 As LongPtr, ByVal hsz2 As LongPtr, ByVal afCmd As DdeNSFlags) As LongPtr
Public Declare PtrSafe Function DdeClientTransaction Lib "user32" (pData As Any, ByVal cbData As Long, ByVal hConv As LongPtr, ByVal hszItem As LongPtr, [TypeHint(StdClipboardFormats)] ByVal wFmt As Long, ByVal wType As DdeTransactionTypes, ByVal dwTimeout As Long, [TypeHint(DdeStatusFlags)] pdwResult As Long) As LongPtr
Public Declare PtrSafe Function DdeCreateDataHandle Lib "user32" (ByVal idInst As Long, pSrc As Any, ByVal cb As Long, ByVal cbOff As Long, ByVal hszItem As LongPtr, [TypeHint(StdClipboardFormats)] ByVal wFmt As Long, [TypeHint(DdeHDATAFlags)] ByVal afCmd As Long) As LongPtr
Public Declare PtrSafe Function DdeAddData Lib "user32" (ByVal hData As LongPtr, pSrc As Any, ByVal cb As Long, ByVal cbOff As Long) As LongPtr
Public Declare PtrSafe Function DdeGetData Lib "user32" (ByVal hData As LongPtr, pDst As Any, ByVal cbMax As Long, ByVal cbOff As Long) As Long
Public Declare PtrSafe Function DdeAccessData Lib "user32" (ByVal hData As LongPtr, pcbDataSize As Long) As LongPtr
Public Declare PtrSafe Function DdeUnaccessData Lib "user32" (ByVal hData As LongPtr) As BOOL
Public Declare PtrSafe Function DdeFreeDataHandle Lib "user32" (ByVal hData As LongPtr) As BOOL
Public Declare PtrSafe Function DdeGetLastError Lib "user32" (ByVal idInst As Long) As DdeErrors
Public Declare PtrSafe Function DdeCreateStringHandleA Lib "user32" (ByVal idInst As Long, ByVal psz As String, ByVal iCodePage As CodePageDefaults) As LongPtr
Public Declare PtrSafe Function DdeCreateStringHandleW Lib "user32" (ByVal idInst As Long, ByVal psz As LongPtr, ByVal iCodePage As CodePageDefaults) As LongPtr
Public DeclareWide PtrSafe Function DdeCreateStringHandle Lib "user32" Alias "DdeCreateStringHandleW" (ByVal idInst As Long, ByVal psz As String, ByVal iCodePage As CodePageDefaults) As LongPtr
Public Declare PtrSafe Function DdeQueryStringA Lib "user32" (ByVal idInst As Long, ByVal hsz As LongPtr, ByVal psz As String, ByVal cchMax As Long, ByVal iCodePage As CodePageDefaults) As Long
Public Declare PtrSafe Function DdeQueryStringW Lib "user32" (ByVal idInst As Long, ByVal hsz As LongPtr, ByVal psz As LongPtr, ByVal cchMax As Long, ByVal iCodePage As CodePageDefaults) As Long
Public DeclareWide PtrSafe Function DdeQueryString Lib "user32" Alias "DdeQueryStringW" (ByVal idInst As Long, ByVal hsz As LongPtr, ByVal psz As String, ByVal cchMax As Long, ByVal iCodePage As CodePageDefaults) As Long
Public Declare PtrSafe Function DdeFreeStringHandle Lib "user32" (ByVal idInst As Long, ByVal hsz As LongPtr) As BOOL
Public Declare PtrSafe Function DdeKeepStringHandle Lib "user32" (ByVal idInst As Long, ByVal hsz As LongPtr) As BOOL
Public Declare PtrSafe Function DdeCmpStringHandles Lib "user32" (ByVal hsz1 As LongPtr, ByVal hsz2 As LongPtr) As Long

Public Type DDEML_MSG_HOOK_DATA ' new for NT
    uiLo As LongPtr ' unpacked lo and hi parts of lParam
    uiHi As LongPtr
    cbData As Long ' amount of data in message, if any. May be > than 32 bytes.
    Data(0 To 7) As Long ' data peeking by DDESPY is limited to 32 bytes.
End Type

Public Type MONMSGSTRUCT
    cb As Long
    hwndTo As LongPtr
    dwTime As Long
    hTask As LongPtr
    wMsg As Long
    wParam As LongPtr
    lParam As LongPtr
    dmhd As DDEML_MSG_HOOK_DATA ' new for NT
End Type

Public Type MONCBSTRUCT
    cb As Long
    dwTime As Long
    hTask As LongPtr
    dwRet As Long
    wType As DdeTransactionTypes
    wFmt As Long
    hConv As LongPtr 'HCONV
    hsz1 As LongPtr 'HSZ
    hsz2 As LongPtr 'HSZ
    hData As LongPtr 'HDDEDATA
    dwData1 As LongPtr
    dwData2 As LongPtr
    cc As CONVCONTEXT ' new for NT for XTYP_CONNECT callbacks
    cbData As Long ' new for NT for data peeking
    Data(0 To 7) As Long ' new for NT for data peeking
End Type

[Description("WARNING: Cannot be used as-is due to SAFEARRAY; copy string separately after calculation size.")]
Public Type MONHSZSTRUCTA
    cb As Long
    fsAction As BOOL ' /* MH_ value */
    dwTime As Long
    hsz As LongPtr 'HSZ
    hTask As LongPtr
    str() As Byte
End Type
[Description("WARNING: Cannot be used as-is due to SAFEARRAY; copy string separately after calculation size.")]
Public Type MONHSZSTRUCTW
    cb As Long
    fsAction As BOOL ' /* MH_ value */
    dwTime As Long
    hsz As LongPtr 'HSZ
    hTask As LongPtr
    str() As Integer
End Type
[Description("WARNING: Cannot be used as-is due to SAFEARRAY; copy string separately after calculation size.")]
Public Type MONHSZSTRUCT
    cb As Long
    fsAction As BOOL ' /* MH_ value */
    dwTime As Long
    hsz As LongPtr 'HSZ
    hTask As LongPtr
    str() As Integer
End Type

Public Enum DdeMHActions
    MH_CREATE = 1
    MH_KEEP = 2
    MH_DELETE = 3
    MH_CLEANUP = 4
End Enum

Public Type MONERRSTRUCT
    cb As Long
    wLastError As Long
    dwTime As Long
    hTask As LongPtr
End Type

Public Type MONLINKSTRUCT
    cb As Long
    dwTime As Long
    hTask As LongPtr
    fEstablished As BOOL
    fNoData As BOOL
    hszSvc As LongPtr 'HSZ
    hszTopic As LongPtr 'HSZ
    hszItem As LongPtr 'HSZ
    wFmt As Long
    fServer As BOOL
    hConvServer As LongPtr 'HCONV
    hConvClient As LongPtr 'HCONV
End Type

Public Type MONCONVSTRUCT
    cb As Long
    fConnect As BOOL
    dwTime As Long
    hTask As LongPtr
    hszSvc As LongPtr 'HSZ
    hszTopic As LongPtr 'HSZ
    hConvClient As LongPtr 'HCONV ' Globally unique value != apps local hConv
    hConvServer As LongPtr 'HCONV ' Globally unique value != apps local hConv
End Type

#End Region

#Region "gdi32"

Public Enum GdiObjectTypes
    OBJ_PEN = 1
    OBJ_BRUSH = 2
    OBJ_DC = 3
    OBJ_METADC = 4
    OBJ_PAL = 5
    OBJ_FONT = 6
    OBJ_BITMAP = 7
    OBJ_REGION = 8
    OBJ_METAFILE = 9
    OBJ_MEMDC = 10
    OBJ_EXTPEN = 11
    OBJ_ENHMETADC = 12
    OBJ_ENHMETAFILE = 13
    OBJ_COLORSPACE = 14
    GDI_OBJ_LAST = OBJ_COLORSPACE
End Enum

Public Enum GdiHatchStyles
	HS_HORIZONTAL = 0 /* ----- */
	HS_VERTICAL = 1 /*  Or  Or  Or  Or  Or  */
	HS_FDIAGONAL = 2 /* \\\\\ */
	HS_BDIAGONAL = 3 /*  '/// */
	HS_CROSS = 4 /* +++++ */
	HS_DIAGCROSS = 5 /* xxxxx */
	HS_API_MAX = 12
End Enum

Public Enum GdiPenStyles
	PS_SOLID = 0
	PS_DASH = 1 /* ------- */
	PS_DOT = 2 /* ....... */
	PS_DASHDOT = 3 /* _._._._ */
	PS_DASHDOTDOT = 4 /* _.._.._ */
	PS_NULL = 5
	PS_INSIDEFRAME = 6
	PS_USERSTYLE = 7
	PS_ALTERNATE = 8
	PS_STYLE_MASK = &H0000000F
	PS_ENDCAP_ROUND = &H00000000
	PS_ENDCAP_SQUARE = &H00000100
	PS_ENDCAP_FLAT = &H00000200
	PS_ENDCAP_MASK = &H00000F00
	PS_JOIN_ROUND = &H00000000
	PS_JOIN_BEVEL = &H00001000
	PS_JOIN_MITER = &H00002000
	PS_JOIN_MASK = &H0000F000&
	PS_COSMETIC = &H00000000
	PS_GEOMETRIC = &H00010000
	PS_TYPE_MASK = &H000F0000
End Enum


Public Enum TextMetricPitchAndFamily
    TMPF_FIXED_PITCH = &H01
    TMPF_VECTOR = &H02
    TMPF_DEVICE = &H08
    TMPF_TRUETYPE = &H04
End Enum

Public Type TEXTMETRICA
    tmHeight As Long
    tmAscent As Long
    tmDescent As Long
    tmInternalLeading As Long
    tmExternalLeading As Long
    tmAveCharWidth As Long
    tmMaxCharWidth As Long
    tmWeight As Long
    tmOverhang As Long
    tmDigitizedAspectX As Long
    tmDigitizedAspectY As Long
    tmFirstChar As Byte
    tmLastChar As Byte
    tmDefaultChar As Byte
    tmBreakChar As Byte
    tmItalic As Byte
    tmUnderlined As Byte
    tmStruckOut As Byte
    /* [ TypeHint(TextMetricPitchAndFamily) ] */ tmPitchAndFamily As Byte
    tmCharSet As Byte
End Type
Public Type TEXTMETRICW
    tmHeight As Long
    tmAscent As Long
    tmDescent As Long
    tmInternalLeading As Long
    tmExternalLeading As Long
    tmAveCharWidth As Long
    tmMaxCharWidth As Long
    tmWeight As Long
    tmOverhang As Long
    tmDigitizedAspectX As Long
    tmDigitizedAspectY As Long
    tmFirstChar As Integer
    tmLastChar As Integer
    tmDefaultChar As Integer
    tmBreakChar As Integer
    tmItalic As Byte
    tmUnderlined As Byte
    tmStruckOut As Byte
    /* [ TypeHint(TextMetricPitchAndFamily) ] */ tmPitchAndFamily As Byte
    tmCharSet As Byte
End Type
Public Type TEXTMETRIC
    tmHeight As Long
    tmAscent As Long
    tmDescent As Long
    tmInternalLeading As Long
    tmExternalLeading As Long
    tmAveCharWidth As Long
    tmMaxCharWidth As Long
    tmWeight As Long
    tmOverhang As Long
    tmDigitizedAspectX As Long
    tmDigitizedAspectY As Long
    tmFirstChar As Integer
    tmLastChar As Integer
    tmDefaultChar As Integer
    tmBreakChar As Integer
    tmItalic As Byte
    tmUnderlined As Byte
    tmStruckOut As Byte
    /* [ TypeHint(TextMetricPitchAndFamily) ] */ tmPitchAndFamily As Byte
    tmCharSet As Byte
End Type
Public Type NEWTEXTMETRICW
    tmHeight As Long
    tmAscent As Long
    tmDescent As Long
    tmInternalLeading As Long
    tmExternalLeading As Long
    tmAveCharWidth As Long
    tmMaxCharWidth As Long
    tmWeight As Long
    tmOverhang As Long
    tmDigitizedAspectX As Long
    tmDigitizedAspectY As Long
    tmFirstChar As Integer
    tmLastChar As Integer
    tmDefaultChar As Integer
    tmBreakChar As Integer
    tmItalic As Byte
    tmUnderlined As Byte
    tmStruckOut As Byte
    /* [ TypeHint(TextMetricPitchAndFamily) ] */ tmPitchAndFamily As Byte
    tmCharSet As Byte
    ntmFlags As NewTextMetricsFlags
    ntmSizeEM As Long
    ntmCellHeight As Long
    ntmAvgWidth As Long
End Type
Public Type NEWTEXTMETRIC
    tmHeight As Long
    tmAscent As Long
    tmDescent As Long
    tmInternalLeading As Long
    tmExternalLeading As Long
    tmAveCharWidth As Long
    tmMaxCharWidth As Long
    tmWeight As Long
    tmOverhang As Long
    tmDigitizedAspectX As Long
    tmDigitizedAspectY As Long
    tmFirstChar As Integer
    tmLastChar As Integer
    tmDefaultChar As Integer
    tmBreakChar As Integer
    tmItalic As Byte
    tmUnderlined As Byte
    tmStruckOut As Byte
    /* [ TypeHint(TextMetricPitchAndFamily) ] */ tmPitchAndFamily As Byte
    tmCharSet As Byte
    ntmFlags As NewTextMetricsFlags
    ntmSizeEM As Long
    ntmCellHeight As Long
    ntmAvgWidth As Long
End Type
Public Enum NewTextMetricsFlags
	NTM_REGULAR = &H00000040
	NTM_BOLD = &H00000020
	NTM_ITALIC = &H00000001
	NTM_NONNEGATIVE_AC = &H00010000
	NTM_PS_OPENTYPE = &H00020000
	NTM_TT_OPENTYPE = &H00040000
	NTM_MULTIPLEMASTER = &H00080000
	NTM_TYPE1 = &H00100000
	NTM_DSIG = &H00200000
End Enum

Public Type PELARRAY
    paXCount As Long
    paYCount As Long
    paXExt As Long
    paYExt As Long
    paRGBs As Byte
End Type



Public Enum GdiTextAlign
	TA_NOUPDATECP = 0
	TA_UPDATECP = 1
	TA_LEFT = 0
	TA_RIGHT = 2
	TA_CENTER = 6
	TA_TOP = 0
	TA_BOTTOM = 8
	TA_BASELINE = 24
	TA_RTLREADING = 256
	TA_MASK = (TA_BASELINE + TA_CENTER + TA_UPDATECP + TA_RTLREADING)
	VTA_BASELINE = TA_BASELINE
	VTA_LEFT = TA_BOTTOM
	VTA_RIGHT = TA_TOP
	VTA_CENTER = TA_CENTER
	VTA_BOTTOM = TA_RIGHT
	VTA_TOP = TA_LEFT
End Enum

Public Enum GdiExtTextOutOpts
	ETO_OPAQUE = &H0002
	ETO_CLIPPED = &H0004
	ETO_GLYPH_INDEX = &H0010
	ETO_RTLREADING = &H0080
	ETO_NUMERICSLOCAL = &H0400
	ETO_NUMERICSLATIN = &H0800
	ETO_IGNORELANGUAGE = &H1000
	ETO_PDY = &H2000
	ETO_REVERSE_INDEX_MAP = &H10000
End Enum

Public Enum GdiExtFloodFillType
	FLOODFILLBORDER = 0
	FLOODFILLSURFACE = 1
End Enum



Public Enum GdiDIBitsColorUse
	DIB_RGB_COLORS = 0 /* color table in RGBs */
	DIB_PAL_COLORS = 1 /* color table in palette indices */
End Enum

Public Enum AddFontFlags
    FR_PRIVATE = &H10
    FR_NOT_ENUM = &H20
End Enum

Public Type ENUMLOGFONTEXDVA
    elfEnumLogfontEx As ENUMLOGFONTEXA
    elfDesignVector As DESIGNVECTOR
End Type
Public Type ENUMLOGFONTEXDVW
    elfEnumLogfontEx As ENUMLOGFONTEXW
    elfDesignVector As DESIGNVECTOR
End Type
'Alias ENUMLOGFONTEXDV As ENUMLOGFONTEXDVW
Public Type ENUMLOGFONTEXDV
    elfEnumLogfontEx As ENUMLOGFONTEX
    elfDesignVector As DESIGNVECTOR
End Type

Public Type ENUMLOGFONTEXA
    elfLogFont As LOGFONTA
    elfFullName(0 To (LF_FULLFACESIZE - 1)) As Byte
    elfStyle(0 To (LF_FACESIZE - 1)) As Byte
    elfScript(0 To (LF_FACESIZE - 1)) As Byte
End Type
Public Type ENUMLOGFONTEXW
    elfLogFont As LOGFONTW
    elfFullName(1 To LF_FULLFACESIZE) As Integer
    elfStyle(1 To LF_FACESIZE) As Integer
    elfScript(1 To LF_FACESIZE) As Integer
End Type
'Alias ENUMLOGFONTEX As ENUMLOGFONTEXW
Public Type ENUMLOGFONTEX
    elfLogFont As LOGFONT
    elfFullName(0 To (LF_FULLFACESIZE - 1)) As Integer
    elfStyle(0 To (LF_FACESIZE - 1)) As Integer
    elfScript(0 To (LF_FACESIZE - 1)) As Integer
End Type

Public Const ELF_VENDOR_SIZE = 4
Public Const ELF_VERSION  = 0
Public Const ELF_CULTURE_LATIN  = 0

Public Type EXTLOGFONTW
    elfLogFont As LOGFONTW
    elfFullName(0 To (LF_FULLFACESIZE - 1)) As Integer
    elfStyle(0 To (LF_FACESIZE - 1)) As Integer
    elfVersion As Long '/* 0 for the first release of NT */
    elfStyleSize As Long
    elfMatch As Long
    elfReserved As Long
    elfVendorId(0 To (ELF_VENDOR_SIZE - 1)) As Byte
    elfCulture As Long '/* 0 for Latin                   */
    elfPanose As PANOSE
End Type
'Alias EXTLOGFONT As EXTLOGFONTW
Public Type EXTLOGFONT
    elfLogFont As LOGFONT
    elfFullName(0 To (LF_FULLFACESIZE - 1)) As Integer
    elfStyle(0 To (LF_FACESIZE - 1)) As Integer
    elfVersion As Long '/* 0 for the first release of NT */
    elfStyleSize As Long
    elfMatch As Long
    elfReserved As Long
    elfVendorId(0 To (ELF_VENDOR_SIZE - 1)) As Byte
    elfCulture As Long '/* 0 for Latin                   */
    elfPanose As PANOSE
End Type
Public Const MM_MAX_NUMAXES As Long = 16

Public Type DESIGNVECTOR
    dvReserved As Long
    dvNumAxes As Long
    dvValues(1 To MM_MAX_NUMAXES) As Long
End Type
Public Enum GetGlyphIndiciesFlags
	GGI_MARK_NONEXISTING_GLYPHS = &H0001
End Enum

Public Enum GlyphSetFlags
    GS_8BIT_INDICES = &H00000001
End Enum
Public Type WCRANGE
    wcLow As Integer
    cGlyphs As Integer
End Type
[Description("⚠️ **WARNING:** This structure is not meant to be used directly, as the API returns a C-style array. This is meant to be filled from a raw byte array by copying the fixed part and then the variable part.")]
Public Type GLYPHSET
    cbThis As Long
    flAccel As GlyphSetFlags
    cGlyphsSupported As Long
    cRanges As Long
    ranges() As WCRANGE
End Type

Public Enum GlyphOutlineFormats
	GGO_METRICS = 0
	GGO_BITMAP = 1
	GGO_NATIVE = 2
	GGO_BEZIER = 3
	GGO_GRAY2_BITMAP = 4
	GGO_GRAY4_BITMAP = 5
	GGO_GRAY8_BITMAP = 6
	GGO_GLYPH_INDEX = &H0080
	GGO_UNHINTED = &H0100
End Enum

Public Type FIXED
    fract As Integer
    value As Integer
End Type

Public Type MAT2
    eM11 As FIXED
    eM12 As FIXED
    eM21 As FIXED
    eM22 As FIXED
End Type

Public Type GLYPHMETRICS
    gmBlackBoxX As Long
    gmBlackBoxY As Long
    gmptGlyphOrigin As POINT
    gmCellIncX As Integer
    gmCellIncY As Integer
End Type

Public Type POINTFX
	x As FIXED
	y As FIXED
End Type

Public Enum TTPOLYCURVETYPES
	TT_PRIM_LINE = 1
	TT_PRIM_QSPLINE = 2
	TT_PRIM_CSPLINE = 3
End Enum
[Description("⚠️ **WARNING:** This structure is not meant to be used directly, as the API returns a C-style array. This is meant to be filled from a raw byte array by copying the fixed part and then the variable part.")]
Public Type TTPOLYCURVE
	/*[TypeHint(TTPOLYCURVETYPES)]*/ wType As Integer
	cpfx As Integer
	apfx() As POINTFX
End Type

Public Enum TTPOLYGONTYPE
    TT_POLYGON_TYPE = 24
End Enum
Public Type TTPOLYGONHEADER
	cb As Long
	dwType As TTPOLYGONTYPE
	pfxStart As POINTFX
End Type

Public Enum PANOSE_Values
	PAN_ANY = 0 /* Any */
	PAN_NO_FIT = 1 /* No Fit */
	PAN_FAMILY_TEXT_DISPLAY = 2 /* Text and Display */
	PAN_FAMILY_SCRIPT = 3 /* Script */
	PAN_FAMILY_DECORATIVE = 4 /* Decorative */
	PAN_FAMILY_PICTORIAL = 5 /* Pictorial */
	PAN_SERIF_COVE = 2 /* Cove */
	PAN_SERIF_OBTUSE_COVE = 3 /* Obtuse Cove */
	PAN_SERIF_SQUARE_COVE = 4 /* Square Cove */
	PAN_SERIF_OBTUSE_SQUARE_COVE = 5 /* Obtuse Square Cove */
	PAN_SERIF_SQUARE = 6 /* Square */
	PAN_SERIF_THIN = 7 /* Thin */
	PAN_SERIF_BONE = 8 /* Bone */
	PAN_SERIF_EXAGGERATED = 9 /* Exaggerated */
	PAN_SERIF_TRIANGLE = 10 /* Triangle */
	PAN_SERIF_NORMAL_SANS = 11 /* Normal Sans */
	PAN_SERIF_OBTUSE_SANS = 12 /* Obtuse Sans */
	PAN_SERIF_PERP_SANS = 13 /* Prep Sans */
	PAN_SERIF_FLARED = 14 /* Flared */
	PAN_SERIF_ROUNDED = 15 /* Rounded */
	PAN_WEIGHT_VERY_LIGHT = 2 /* Very Light */
	PAN_WEIGHT_LIGHT = 3 /* Light */
	PAN_WEIGHT_THIN = 4 /* Thin */
	PAN_WEIGHT_BOOK = 5 /* Book */
	PAN_WEIGHT_MEDIUM = 6 /* Medium */
	PAN_WEIGHT_DEMI = 7 /* Demi */
	PAN_WEIGHT_BOLD = 8 /* Bold */
	PAN_WEIGHT_HEAVY = 9 /* Heavy */
	PAN_WEIGHT_BLACK = 10 /* Black */
	PAN_WEIGHT_NORD = 11 /* Nord */
	PAN_PROP_OLD_STYLE = 2 /* Old Style */
	PAN_PROP_MODERN = 3 /* Modern */
	PAN_PROP_EVEN_WIDTH = 4 /* Even Width */
	PAN_PROP_EXPANDED = 5 /* Expanded */
	PAN_PROP_CONDENSED = 6 /* Condensed */
	PAN_PROP_VERY_EXPANDED = 7 /* Very Expanded */
	PAN_PROP_VERY_CONDENSED = 8 /* Very Condensed */
	PAN_PROP_MONOSPACED = 9 /* Monospaced */
	PAN_CONTRAST_NONE = 2 /* None */
	PAN_CONTRAST_VERY_LOW = 3 /* Very Low */
	PAN_CONTRAST_LOW = 4 /* Low */
	PAN_CONTRAST_MEDIUM_LOW = 5 /* Medium Low */
	PAN_CONTRAST_MEDIUM = 6 /* Medium */
	PAN_CONTRAST_MEDIUM_HIGH = 7 /* Mediim High */
	PAN_CONTRAST_HIGH = 8 /* High */
	PAN_CONTRAST_VERY_HIGH = 9 /* Very High */
	PAN_STROKE_GRADUAL_DIAG = 2 /* Gradual/Diagonal */
	PAN_STROKE_GRADUAL_TRAN = 3 /* Gradual/Transitional */
	PAN_STROKE_GRADUAL_VERT = 4 /* Gradual/Vertical */
	PAN_STROKE_GRADUAL_HORZ = 5 /* Gradual/Horizontal */
	PAN_STROKE_RAPID_VERT = 6 /* Rapid/Vertical */
	PAN_STROKE_RAPID_HORZ = 7 /* Rapid/Horizontal */
	PAN_STROKE_INSTANT_VERT = 8 /* Instant/Vertical */
	PAN_STRAIGHT_ARMS_HORZ = 2 /* Straight Arms/Horizontal */
	PAN_STRAIGHT_ARMS_WEDGE = 3 /* Straight Arms/Wedge */
	PAN_STRAIGHT_ARMS_VERT = 4 /* Straight Arms/Vertical */
	PAN_STRAIGHT_ARMS_SINGLE_SERIF = 5 /* Straight Arms/Single-Serif */
	PAN_STRAIGHT_ARMS_DOUBLE_SERIF = 6 /* Straight Arms/Double-Serif */
	PAN_BENT_ARMS_HORZ = 7 /* Non-Straight Arms/Horizontal */
	PAN_BENT_ARMS_WEDGE = 8 /* Non-Straight Arms/Wedge */
	PAN_BENT_ARMS_VERT = 9 /* Non-Straight Arms/Vertical */
	PAN_BENT_ARMS_SINGLE_SERIF = 10 /* Non-Straight Arms/Single-Serif */
	PAN_BENT_ARMS_DOUBLE_SERIF = 11 /* Non-Straight Arms/Double-Serif */
	PAN_LETT_NORMAL_CONTACT = 2 /* Normal/Contact */
	PAN_LETT_NORMAL_WEIGHTED = 3 /* Normal/Weighted */
	PAN_LETT_NORMAL_BOXED = 4 /* Normal/Boxed */
	PAN_LETT_NORMAL_FLATTENED = 5 /* Normal/Flattened */
	PAN_LETT_NORMAL_ROUNDED = 6 /* Normal/Rounded */
	PAN_LETT_NORMAL_OFF_CENTER = 7 /* Normal/Off Center */
	PAN_LETT_NORMAL_SQUARE = 8 /* Normal/Square */
	PAN_LETT_OBLIQUE_CONTACT = 9 /* Oblique/Contact */
	PAN_LETT_OBLIQUE_WEIGHTED = 10 /* Oblique/Weighted */
	PAN_LETT_OBLIQUE_BOXED = 11 /* Oblique/Boxed */
	PAN_LETT_OBLIQUE_FLATTENED = 12 /* Oblique/Flattened */
	PAN_LETT_OBLIQUE_ROUNDED = 13 /* Oblique/Rounded */
	PAN_LETT_OBLIQUE_OFF_CENTER = 14 /* Oblique/Off Center */
	PAN_LETT_OBLIQUE_SQUARE = 15 /* Oblique/Square */
	PAN_MIDLINE_STANDARD_TRIMMED = 2 /* Standard/Trimmed */
	PAN_MIDLINE_STANDARD_POINTED = 3 /* Standard/Pointed */
	PAN_MIDLINE_STANDARD_SERIFED = 4 /* Standard/Serifed */
	PAN_MIDLINE_HIGH_TRIMMED = 5 /* High/Trimmed */
	PAN_MIDLINE_HIGH_POINTED = 6 /* High/Pointed */
	PAN_MIDLINE_HIGH_SERIFED = 7 /* High/Serifed */
	PAN_MIDLINE_CONSTANT_TRIMMED = 8 /* Constant/Trimmed */
	PAN_MIDLINE_CONSTANT_POINTED = 9 /* Constant/Pointed */
	PAN_MIDLINE_CONSTANT_SERIFED = 10 /* Constant/Serifed */
	PAN_MIDLINE_LOW_TRIMMED = 11 /* Low/Trimmed */
	PAN_MIDLINE_LOW_POINTED = 12 /* Low/Pointed */
	PAN_MIDLINE_LOW_SERIFED = 13 /* Low/Serifed */
	PAN_XHEIGHT_CONSTANT_SMALL = 2 /* Constant/Small */
	PAN_XHEIGHT_CONSTANT_STD = 3 /* Constant/Standard */
	PAN_XHEIGHT_CONSTANT_LARGE = 4 /* Constant/Large */
	PAN_XHEIGHT_DUCKING_SMALL = 5 /* Ducking/Small */
	PAN_XHEIGHT_DUCKING_STD = 6 /* Ducking/Standard */
	PAN_XHEIGHT_DUCKING_LARGE = 7 /* Ducking/Large */
End Enum
Public Enum PanoseIndex
    PANOSE_COUNT = 10
    PAN_FAMILYTYPE_INDEX = 0
    PAN_SERIFSTYLE_INDEX = 1
    PAN_WEIGHT_INDEX = 2
    PAN_PROPORTION_INDEX = 3
    PAN_CONTRAST_INDEX = 4
    PAN_STROKEVARIATION_INDEX = 5
    PAN_ARMSTYLE_INDEX = 6
    PAN_LETTERFORM_INDEX = 7
    PAN_MIDLINE_INDEX = 8
    PAN_XHEIGHT_INDEX = 9
    PAN_CULTURE_LATIN = 0
End Enum
Public Type PANOSE
	bFamilyType As Byte
	bSerifStyle As Byte
	bWeight As Byte
	bProportion As Byte
	bContrast As Byte
	bStrokeVariation As Byte
	bArmStyle As Byte
	bLetterform As Byte
	bMidline As Byte
	bXHeight As Byte
End Type

Public Type OUTLINETEXTMETRICA
    otmSize As Long
    otmTextMetrics As TEXTMETRICA
    otmFiller As Byte
    otmPanoseNumber As PANOSE
    otmfsSelection As Long
    otmfsType As Long
    otmsCharSlopeRise As Long
    otmsCharSlopeRun As Long
    otmItalicAngle As Long
    otmEMSquare As Long
    otmAscent As Long
    otmDescent As Long
    otmLineGap As Long
    otmsCapEmHeight As Long
    otmsXHeight As Long
    otmrcFontBox As RECT
    otmMacAscent As Long
    otmMacDescent As Long
    otmMacLineGap As Long
    otmusMinimumPPEM As Long
    otmptSubscriptSize As POINT
    otmptSubscriptOffset As POINT
    otmptSuperscriptSize As POINT
    otmptSuperscriptOffset As POINT
    otmsStrikeoutSize As Long
    otmsStrikeoutPosition As Long
    otmsUnderscoreSize As Long
    otmsUnderscorePosition As Long
    otmpFamilyName As String
    otmpFaceName As String
    otmpStyleName As String
    otmpFullName As String
End Type
Public Type OUTLINETEXTMETRICW
	otmSize As Long
	otmTextMetrics As TEXTMETRICW
	otmFiller As Byte
	otmPanoseNumber As PANOSE
	otmfsSelection As Long
	otmfsType As Long
	otmsCharSlopeRise As Long
	otmsCharSlopeRun As Long
	otmItalicAngle As Long
	otmEMSquare As Long
	otmAscent As Long
	otmDescent As Long
	otmLineGap As Long
	otmsCapEmHeight As Long
	otmsXHeight As Long
	otmrcFontBox As RECT
	otmMacAscent As Long
	otmMacDescent As Long
	otmMacLineGap As Long
	otmusMinimumPPEM As Long
	otmptSubscriptSize As POINT
	otmptSubscriptOffset As POINT
	otmptSuperscriptSize As POINT
	otmptSuperscriptOffset As POINT
	otmsStrikeoutSize As Long
	otmsStrikeoutPosition As Long
	otmsUnderscoreSize As Long
	otmsUnderscorePosition As Long
    otmpFamilyName As LongPtr
    otmpFaceName As LongPtr
    otmpStyleName As LongPtr
    otmpFullName As LongPtr
End Type
'Alias OUTLINETEXTMETRIC As OUTLINETEXTMETRICW
Public Type OUTLINETEXTMETRIC
    otmSize As Long
    otmTextMetrics As TEXTMETRICW
    otmFiller As Byte
    otmPanoseNumber As PANOSE
    otmfsSelection As Long
    otmfsType As Long
    otmsCharSlopeRise As Long
    otmsCharSlopeRun As Long
    otmItalicAngle As Long
    otmEMSquare As Long
    otmAscent As Long
    otmDescent As Long
    otmLineGap As Long
    otmsCapEmHeight As Long
    otmsXHeight As Long
    otmrcFontBox As RECT
    otmMacAscent As Long
    otmMacDescent As Long
    otmMacLineGap As Long
    otmusMinimumPPEM As Long
    otmptSubscriptSize As POINT
    otmptSubscriptOffset As POINT
    otmptSuperscriptSize As POINT
    otmptSuperscriptOffset As POINT
    otmsStrikeoutSize As Long
    otmsStrikeoutPosition As Long
    otmsUnderscoreSize As Long
    otmsUnderscorePosition As Long
    otmpFamilyName As LongPtr
    otmpFaceName As LongPtr
    otmpStyleName As LongPtr
    otmpFullName As LongPtr
End Type

Public Type ENUMLOGFONTA
    elfLogFont As LOGFONTA
    elfFullName(0 To (LF_FULLFACESIZE - 1)) As Byte
    elfStyle(0 To (LF_FACESIZE - 1)) As Byte
End Type
Public Type ENUMLOGFONTW
    elfLogFont As LOGFONTW
    elfFullName(0 To (LF_FULLFACESIZE - 1)) As Integer
    elfStyle(0 To (LF_FACESIZE - 1)) As Integer
End Type
'Alias ENUMLOGFONT As ENUMLOGFONTW
Public Type ENUMLOGFONT
    elfLogFont As LOGFONT
    elfFullName(0 To (LF_FULLFACESIZE - 1)) As Integer
    elfStyle(0 To (LF_FACESIZE - 1)) As Integer
End Type








Public Type CHARSETINFO
	ciCharset As Long
	ciACP As Long
	fs As FONTSIGNATURE
End Type

Public Type NEWTEXTMETRICEXW
	ntmTm As NEWTEXTMETRICW
	ntmFontSig As FONTSIGNATURE
End Type
Public Type NEWTEXTMETRICEX
	ntmTm As NEWTEXTMETRIC
	ntmFontSig As FONTSIGNATURE
End Type

Public Const MM_MAX_AXES_NAMELEN = 16
Public Type AXISINFOW
	axMinValue As Long
	axMaxValue As Long
	axAxisName(0 To (MM_MAX_AXES_NAMELEN - 1)) As Integer
End Type
'Alias AXISINFO As AXISINFOW
Public Type AXISINFO
	axMinValue As Long
	axMaxValue As Long
	axAxisName(0 To (MM_MAX_AXES_NAMELEN - 1)) As Integer
End Type
Public Type AXESLISTW
	axlReserved As Long
	axlNumAxes As Long
	axlAxisInfo(0 To (MM_MAX_NUMAXES - 1)) As AXISINFOW
End Type
Public Type AXESLIST
	axlReserved As Long
	axlNumAxes As Long
	axlAxisInfo(0 To (MM_MAX_NUMAXES - 1)) As AXISINFO
End Type
Public Type ENUMTEXTMETRICW
	etmNewTextMetricEx As NEWTEXTMETRICEXW
	etmAxesList As AXESLISTW
End Type
Public Type ENUMTEXTMETRIC
	etmNewTextMetricEx As NEWTEXTMETRICEX
	etmAxesList As AXESLIST
End Type

Public Enum PixelFormatDescriptionTypes
	PFD_TYPE_RGBA = 0
	PFD_TYPE_COLORINDEX = 1
End Enum
Public Enum PixelFormatLayerTypes
	PFD_MAIN_PLANE = 0
	PFD_OVERLAY_PLANE = 1
	PFD_UNDERLAY_PLANE = (-1)
End Enum

Public Enum PixelFormatDescriptorsFlags
	PFD_DOUBLEBUFFER = &H00000001
	PFD_STEREO = &H00000002
	PFD_DRAW_TO_WINDOW = &H00000004
	PFD_DRAW_TO_BITMAP = &H00000008
	PFD_SUPPORT_GDI = &H00000010
	PFD_SUPPORT_OPENGL = &H00000020
	PFD_GENERIC_FORMAT = &H00000040
	PFD_NEED_PALETTE = &H00000080
	PFD_NEED_SYSTEM_PALETTE = &H00000100
	PFD_SWAP_EXCHANGE = &H00000200
	PFD_SWAP_COPY = &H00000400
	PFD_SWAP_LAYER_BUFFERS = &H00000800
	PFD_GENERIC_ACCELERATED = &H00001000
	PFD_SUPPORT_DIRECTDRAW = &H00002000
	PFD_DIRECT3D_ACCELERATED = &H00004000
	PFD_SUPPORT_COMPOSITION = &H00008000&
	' flags for use in ChoosePixelFormat only */
	PFD_DEPTH_DONTCARE = &H20000000
	PFD_DOUBLEBUFFER_DONTCARE = &H40000000
	PFD_STEREO_DONTCARE = &H80000000
End Enum
Public Type PIXELFORMATDESCRIPTOR
	nSize As Integer
	nVersion As Integer
	dwFlags As PixelFormatDescriptorsFlags
	iPixelType As Byte
	cColorBits As Byte
	cRedBits As Byte
	cRedShift As Byte
	cGreenBits As Byte
	cGreenShift As Byte
	cBlueBits As Byte
	cBlueShift As Byte
	cAlphaBits As Byte
	cAlphaShift As Byte
	cAccumBits As Byte
	cAccumRedBits As Byte
	cAccumGreenBits As Byte
	cAccumBlueBits As Byte
	cAccumAlphaBits As Byte
	cDepthBits As Byte
	cStencilBits As Byte
	cAuxBuffers As Byte
	iLayerType As Byte
	bReserved As Byte
	dwLayerMask As Long
	dwVisibleMask As Long
	dwDamageMask As Long
End Type

Public Enum BinaryRasterOps
	R2_BLACK = 1 /* 0 */
	R2_NOTMERGEPEN = 2 /* DPon */
	R2_MASKNOTPEN = 3 /* DPna */
	R2_NOTCOPYPEN = 4 /* PN */
	R2_MASKPENNOT = 5 /* PDna */
	R2_NOT = 6 /* Dn */
	R2_XORPEN = 7 /* DPx */
	R2_NOTMASKPEN = 8 /* DPan */
	R2_MASKPEN = 9 /* DPa */
	R2_NOTXORPEN = 10 /* DPxn */
	R2_NOP = 11 /* D */
	R2_MERGENOTPEN = 12 /* DPno */
	R2_COPYPEN = 13 /* P */
	R2_MERGEPENNOT = 14 /* PDno */
	R2_MERGEPEN = 15 /* DPo */
	R2_WHITE = 16 /* 1 */
	R2_LAST = 16
End Enum


Public Type POLYTEXTA
	x As Long
	y As Long
	n As Long
	lpstr As String
	uiFlags As GdiExtTextOutOpts
	rcl As RECT
	pdx As LongPtr
End Type
Public Type POLYTEXTW
    x As Long
    y As Long
    n As Long
    lpstr As LongPtr
    uiFlags As GdiExtTextOutOpts
    rcl As RECT
    pdx As LongPtr
End Type
Public Type POLYTEXT
    x As Long
    y As Long
    n As Long
    lpstr As LongPtr
    uiFlags As GdiExtTextOutOpts
    rcl As RECT
    pdx As LongPtr
End Type

Public Enum StretchBltModes
	BLACKONWHITE = 1
	WHITEONBLACK = 2
	COLORONCOLOR = 3
	HALFTONE = 4
	MAXSTRETCHBLTMODE = 4
	STRETCH_ANDSCANS = BLACKONWHITE
	STRETCH_ORSCANS = WHITEONBLACK
	STRETCH_DELETESCANS = COLORONCOLOR
	STRETCH_HALFTONE = HALFTONE
End Enum

Public Enum BoundsAccumFlags
	DCB_RESET = &H0001
	DCB_ACCUMULATE = &H0002
	DCB_DIRTY = DCB_ACCUMULATE
	DCB_SET = (DCB_RESET Or DCB_ACCUMULATE)
	DCB_ENABLE = &H0004
	DCB_DISABLE = &H0008
End Enum

Public Enum PolyFillModes
	ALTERNATE = 1
	WINDING = 2
End Enum

Public Enum CombineRegionStyles
	RGN_AND = 1
	RGN_OR = 2
	RGN_XOR = 3
	RGN_DIFF = 4
	RGN_COPY = 5
End Enum

Public Enum GdiArcDirections
    AD_COUNTERCLOCKWISE = 1
    AD_CLOCKWISE = 2
End Enum

Public Enum RgnHeaderTypeValues
    RDH_RECTANGLES = 1
End Enum
Public Type RGNDATAHEADER
	dwSize As Long
	iType As RgnHeaderTypeValues
	nCount As Long
	nRgnSize As Long
	rcBound As RECT
End Type

[Description("⚠️ **WARNING:** This structure is not meant to be used directly, as the APIs that use it require C-style arrays. You must copy the header and data separate, and this can only be used to receive, not send, this data.")]
Public Type RGNDATA
    rdh As RGNDATAHEADER
    Buffer() As Byte
End Type

Public Type XFORM
	eM11 As Single
	eM12 As Single
	eM21 As Single
	eM22 As Single
	eDx As Single
	eDy As Single
End Type

Public Type LOGPEN
    lopnStyle As GdiPenStyles
    lopnWidth As POINT
    lopnColor As Long
End Type
Public Type EXTLOGPEN
    elpPenStyle As Long
    elpWidth As Long
    elpBrushStyle As Long
    elpColor As Long
    elpHatch As LongPtr
    elpNumEntries As Long
    elpStyleEntry(0 To 0) As Long
End Type
Public Type EXTLOGPEN32
    elpPenStyle As Long
    elpWidth As Long
    elpBrushStyle As Long
    elpColor As Long
    elpHatch As Long
    elpNumEntries As Long
    elpStyleEntry(0 To 0) As Long
End Type



Public Type BITMAP
    BMType As Long
    BMWidth As Long
    BMHeight As Long
    BMWidthBytes As Long
    BMPlanes As Integer
    BMBitsPixel As Integer
    BMBits As LongPtr
End Type

Public Type DIBSECTION
    dsBm As BITMAP
    dsBmih As BITMAPINFOHEADER
    dsBitfields(0 To 2) As Long
    dshSection As LongPtr
    dsOffset As Long
End Type

Public Enum LayoutOrientationOptions
	LAYOUT_RTL = &H00000001  ' Right to left
	LAYOUT_BTT = &H00000002  ' Bottom to top
	LAYOUT_VBH = &H00000004  ' Vertical before horizontal
	LAYOUT_ORIENTATIONMASK = (LAYOUT_RTL Or LAYOUT_BTT Or LAYOUT_VBH)
	LAYOUT_BITMAPORIENTATIONPRESERVED = &H00000008
End Enum

Public Enum MappingModes
	MM_TEXT = 1
	MM_LOMETRIC = 2
	MM_HIMETRIC = 3
	MM_LOENGLISH = 4
	MM_HIENGLISH = 5
	MM_TWIPS = 6
	MM_ISOTROPIC = 7
	MM_ANISOTROPIC = 8
    MM_MIN = MM_TEXT
    MM_MAX = MM_ANISOTROPIC
    MM_MAX_FIXEDSCALE = MM_TWIPS
End Enum

Public Enum GdiCoordModes
    ABSOLUTE = 1
    RELATIVE = 2
End Enum

Public Enum GDI_CA_FLAGS
    CA_NEGATIVE = &H0001
    CA_LOG_FILTER = &H0002
End Enum
Public Enum GDI_CA_ILLUM
    ILLUMINANT_DEVICE_DEFAULT = 0
    ILLUMINANT_A = 1
    ILLUMINANT_B = 2
    ILLUMINANT_C = 3
    ILLUMINANT_D50 = 4
    ILLUMINANT_D55 = 5
    ILLUMINANT_D65 = 6
    ILLUMINANT_D75 = 7
    ILLUMINANT_F2 = 8
    ILLUMINANT_MAX_INDEX = ILLUMINANT_F2
    ILLUMINANT_TUNGSTEN = ILLUMINANT_A
    ILLUMINANT_DAYLIGHT = ILLUMINANT_C
    ILLUMINANT_FLUORESCENT = ILLUMINANT_F2
    ILLUMINANT_NTSC = ILLUMINANT_C
End Enum
Public Enum GDI_CA_GAMMA
    RGB_GAMMA_MIN = 02500
    RGB_GAMMA_MAX = 65000
End Enum
Public Enum GDI_CA_REFERENCE
    REFERENCE_WHITE_MIN = 6000
    REFERENCE_WHITE_MAX = 10000
    REFERENCE_BLACK_MIN = 0
    REFERENCE_BLACK_MAX = 4000
End Enum
Public Enum GDI_CA_RANGE
    COLOR_ADJ_MIN = -100
    COLOR_ADJ_MAX = 100
End Enum
Public Type COLORADJUSTMENT
    caSize As Integer
    /* [ TypeHint(GDI_CA_FLAGS) */ caFlags As Integer
    /* [ TypeHint(GDI_CA_ILLUM) */ caIlluminantIndex As Integer
    /* [ TypeHint(GDI_CA_GAMMA) */ caRedGamma As Integer
    /* [ TypeHint(GDI_CA_GAMMA) */ caGreenGamma As Integer
    /* [ TypeHint(GDI_CA_GAMMA) */ caBlueGamma As Integer
    /* [ TypeHint(GDI_CA_REFERENCE) */ caReferenceBlack As Integer
    /* [ TypeHint(GDI_CA_REFERENCE) */ caReferenceWhite As Integer
    /* [ TypeHint(GDI_CA_RANGE) */ caContrast As Integer
    /* [ TypeHint(GDI_CA_RANGE) */ caBrightness As Integer
    /* [ TypeHint(GDI_CA_RANGE) */ caColorfulness As Integer
    /* [ TypeHint(GDI_CA_RANGE) */ caRedGreenTint As Integer
End Type

Public Type CIEXYZ
    ciexyzX As Long
    ciexyzY As Long
    ciexyzZ As Long
End Type
Public Type CIEXYZTRIPLE
    ciexyzRed As CIEXYZ
    ciexyzGreen As CIEXYZ
    ciexyzBlue As CIEXYZ
End Type

Public Enum GDI_BITMAP5_CSTYPES
    PROFILE_EMBEDDED = &H4D424544 ' "MBED"
    PROFILE_LINKED = &H4C494E4B   ' "LINK"	
End Enum
Public Type BITMAPV4HEADER
    bV4Size As Long
    bV4Width As Long
    bV4Height As Long
    bV4Planes As Integer
    bV4BitCount As Integer
    bV4Compression As GDI_BITMAP_COMPRESSION
    bV4SizeImage As Long
    bV4XPelsPerMeter As Long
    bV4YPelsPerMeter As Long
    bV4ClrUsed As Long
    bV4ClrImportant As Long
    bV4RedMask As Long
    bV4GreenMask As Long
    bV4BlueMask As Long
    bV4AlphaMask As Long
    bV4CSType As LCSCSTYPE
    bV4Endpoints As CIEXYZTRIPLE
    bV4GammaRed As Long
    bV4GammaGreen As Long
    bV4GammaBlue As Long
End Type
Public Type BITMAPV5HEADER
    bV5Size As Long
    bV5Width As Long
    bV5Height As Long
    bV5Planes As Integer
    bV5BitCount As Integer
    bV5Compression As GDI_BITMAP_COMPRESSION
    bV5SizeImage As Long
    bV5XPelsPerMeter As Long
    bV5YPelsPerMeter As Long
    bV5ClrUsed As Long
    bV5ClrImportant As Long
    bV5RedMask As Long
    bV5GreenMask As Long
    bV5BlueMask As Long
    bV5AlphaMask As Long
    /* [ TypeHint(GDI_BITMAP5_CSTYPES, LCSCSTYPE) ] */ bV5CSType As LCSCSTYPE
    bV5Endpoints As CIEXYZTRIPLE
    bV5GammaRed As Long
    bV5GammaGreen As Long
    bV5GammaBlue As Long
    bV5Intent As LCSGAMUTMATCH
    bV5ProfileData As Long
    bV5ProfileSize As Long
    bV5Reserved As Long
End Type

Public Type ABC
    abcA As Long
    abcB As Long
    abcC As Long
End Type
Public Type ABCFLOAT
    abcfA As Single
    abcfB As Single
    abcfC As Single
End Type

Public Enum GDI_GCP_FLAGS
    GCP_DBCS = &H0001
    GCP_REORDER = &H0002
    GCP_USEKERNING = &H0008
    GCP_GLYPHSHAPE = &H0010
    GCP_LIGATE = &H0020
    GCP_GLYPHINDEXING = &H0080
    GCP_DIACRITIC = &H0100
    GCP_KASHIDA = &H0400
    GCP_ERROR = &H8000&
    FLI_MASK = &H103B
    GCP_JUSTIFY = &H00010000
    GCP_NODIACRITICS = &H00020000
    FLI_GLYPHS = &H00040000
    GCP_CLASSIN = &H00080000
    GCP_MAXEXTENT = &H0010000
    GCP_JUSTIFYIN = &H00200000
    GCP_DISPLAYZWG = &H00400000
    GCP_SYMSWAPOFF = &H00800000
    GCP_NUMERICOVERRIDE = &H01000000
    GCP_NEUTRALOVERRIDE = &H02000000
    GCP_NUMERICSLATIN = &H04000000
    GCP_NUMERICSLOCAL = &H08000000
End Enum
Public Enum GDI_GCP_CLASS
    GCPCLASS_LATIN = 1
    GCPCLASS_HEBREW = 2
    GCPCLASS_ARABIC = 2
    GCPCLASS_NEUTRAL = 3
    GCPCLASS_LOCALNUMBER = 4
    GCPCLASS_LATINNUMBER = 5
    GCPCLASS_LATINNUMERICTERMINATOR = 6
    GCPCLASS_LATINNUMERICSEPARATOR = 7
    GCPCLASS_NUMERICSEPARATOR = 8
    GCPCLASS_PREBOUNDLTR = &H80
    GCPCLASS_PREBOUNDRTL = &H40
    GCPCLASS_POSTBOUNDLTR = &H20
    GCPCLASS_POSTBOUNDRTL = &H10
End Enum
Public Enum GDI_GCP_GLYPHY_BA
    GCPGLYPH_LINKBEFORE = &H8000&
    GCPGLYPH_LINKAFTER = &H4000
End Enum

Public Enum GDI_POINT_TYPES
    PT_CLOSEFIGURE = &H01
    PT_LINETO = &H02
    PT_BEZIERTO = &H04
    PT_MOVETO = &H06
End Enum

Public Enum GDI_GRAPHICS_MODE
    GM_COMPATIBLE = 1
    GM_ADVANCED = 2
    GM_LAST = 2
End Enum

Public Enum GDI_BRUSH_STYLES
    BS_SOLID = 0
    BS_NULL = 1
    BS_HOLLOW = BS_NULL
    BS_HATCHED = 2
    BS_PATTERN = 3
    BS_INDEXED = 4
    BS_DIBPATTERN = 5
    BS_DIBPATTERNPT = 6
    BS_PATTERN8X8 = 7
    BS_DIBPATTERN8X8 = 8
    BS_MONOPATTERN = 9
End Enum

Public Type LOGBRUSH
    lbStyle As GDI_BRUSH_STYLES
    lbColor As GdiDIBitsColorUse
    /* [ TypeHint(GdiHatchStyles) ] */ lbHatch As LongPtr
End Type
Public Type LOGBRUSH32
    lbStyle As GDI_BRUSH_STYLES
    lbColor As GdiDIBitsColorUse
    lbHatch As GdiHatchStyles
End Type

Public Enum GSR_FLAG
    SYSRGN = 4
End Enum

Public Enum GDI_MWT_MODE
    MWT_IDENTITY = 1
    MWT_LEFTMULTIPLY = 2
    MWT_RIGHTMULTIPLY = 3
    MWT_MIN = MWT_IDENTITY
    MWT_MAX = MWT_RIGHTMULTIPLY
End Enum

Public Type GCP_RESULTSA
    lStructSize As Long
    lpOutString As String
    lpOrder As LongPtr
    lpDX As LongPtr
    lpCaretPos As LongPtr
    lpClass As String
    lpGlyphs As String
    nGlyphs As Long
    nMaxFit As Long
End Type
Public Type GCP_RESULTSW
    lStructSize As Long
    lpOutString As LongPtr
    lpOrder As LongPtr
    lpDX As LongPtr
    lpCaretPos As LongPtr
    lpClass As String
    lpGlyphs As LongPtr
    nGlyphs As Long
    nMaxFit As Long
End Type
'Alias GCP_RESULTS As GCP_RESULTSW
Public Type GCP_RESULTS
    lStructSize As Long
    lpOutString As LongPtr
    lpOrder As LongPtr
    lpDX As LongPtr
    lpCaretPos As LongPtr
    lpClass As String
    lpGlyphs As LongPtr
    nGlyphs As Long
    nMaxFit As Long
End Type

[Description("lpProc is Function EnumObjectsProc(ByVal lpLogObject As LongPtr, ByVal lpData As LongPtr) As Long. Return 0 to stop, non-zero to continue.")]
Public Declare PtrSafe Function EnumObjects Lib "gdi32" (ByVal hDC As LongPtr, ByVal nType As GdiObjectTypes, ByVal lpProc As LongPtr, lParam As Any) As Long

Public Declare PtrSafe Function GetLayout Lib "gdi32" (ByVal hDC As LongPtr) As LayoutOrientationOptions
Public Declare PtrSafe Function SetLayout Lib "gdi32" (ByVal hDC As LongPtr, ByVal l As LayoutOrientationOptions) As LayoutOrientationOptions
Public Declare PtrSafe Function SetMapMode Lib "gdi32" (ByVal hDC As LongPtr, ByVal iMode As MappingModes) As MappingModes
Public Declare PtrSafe Function GetMapMode Lib "gdi32" (ByVal hDC As LongPtr) As MappingModes
Public Declare PtrSafe Function SetMapperFlags Lib "gdi32" (ByVal hDC As LongPtr, ByVal flags As Long) As Long

Public Declare PtrSafe Function GetStockObject Lib "gdi32" (ByVal nIndex As StockObjects) As LongPtr
Public Declare PtrSafe Function SelectObject Lib "gdi32" (ByVal hDC As LongPtr, ByVal hObject As LongPtr) As LongPtr
Public Declare PtrSafe Function GetCurrentObject Lib "gdi32" (ByVal hDC As LongPtr, ByVal type As GdiObjectTypes) As LongPtr
Public Declare PtrSafe Function SetBkColor Lib "gdi32" (ByVal hDC As LongPtr, ByVal crColor As Long) As Long
Public Declare PtrSafe Function GetBkColor Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function SetBkMode Lib "gdi32" (ByVal hDC As LongPtr, ByVal nBkMode As GdiBackgroundModes) As Long
Public Declare PtrSafe Function GetBkMode Lib "gdi32" (ByVal hDC As LongPtr) As GdiBackgroundModes
Public Declare PtrSafe Function SetDCPenColor Lib "gdi32" (ByVal hDC As LongPtr, ByVal color As Long) As Long
Public Declare PtrSafe Function SetDCBrushColor Lib "gdi32" (ByVal hDC As LongPtr, ByVal color As Long) As Long
Public Declare PtrSafe Function GetDCPenColor Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function GetDCBrushColor Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function GetPixelFormat Lib "gdi32" (ByVal hDC As LongPtr, ppfd As PIXELFORMATDESCRIPTOR) As Long
Public Declare PtrSafe Function SetPixelFormat Lib "gdi32" (ByVal hDC As LongPtr, ByVal format As Long, ppfd As PIXELFORMATDESCRIPTOR) As Long
Public Declare PtrSafe Function ChoosePixelFormat Lib "gdi32" (ByVal hDC As LongPtr, ppfd As PIXELFORMATDESCRIPTOR) As Long
Public Declare PtrSafe Function DescribePixelFormat Lib "gdi32" (ByVal hDC As LongPtr, ByVal iPixelFormat As Long, ByVal nBytes As Long, ppfd As PIXELFORMATDESCRIPTOR) As Long
Public Declare PtrSafe Function SetPolyFillMode Lib "gdi32" (ByVal hdc As LongPtr, ByVal mode As PolyFillModes) As Long
Public Declare PtrSafe Function GetPolyFillMode Lib "gdi32" (ByVal hdc As LongPtr) As PolyFillModes
Public Declare PtrSafe Function SetGraphicsMode Lib "gdi32" (ByVal hdc As LongPtr, ByVal iMode As GDI_GRAPHICS_MODE) As GDI_GRAPHICS_MODE
Public Declare PtrSafe Function GetGraphicsMode Lib "gdi32" (ByVal hdc As LongPtr) As GDI_GRAPHICS_MODE

Public Declare PtrSafe Function BitBlt Lib "gdi32" (ByVal hdcDest As LongPtr, ByVal X As Long, ByVal Y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hSrcDC As LongPtr, ByVal XSrc As Long, ByVal YSrc As Long, ByVal dwRop As RASTEROPFLAGS) As Long
Public Declare PtrSafe Function PatBlt Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal dwRop As RASTEROPFLAGS) As BOOL
Public Declare PtrSafe Function MaskBlt Lib "gdi32" (ByVal hdc As LongPtr, ByVal xDest As Long, ByVal yDest As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hdcSrc As LongPtr, ByVal xSrc As Long, ByVal ySrc As Long, ByVal wSrc As Long, ByVal hSrc As Long, ByVal dwRop As RASTEROPFLAGS) As BOOL
Public Declare PtrSafe Function PlgBlt Lib "gdi32" (ByVal hdc As LongPtr, lpPoint As POINT, ByVal hdcSrc As LongPtr, ByVal xSrc As Long, ByVal ySrc As Long, ByVal nWidth As Long, ByVal nHeight As Long, ByVal hbmMask As LongPtr, ByVal xMask As Long, ByVal yMask As Long) As BOOL
Public Declare PtrSafe Function StretchBlt Lib "gdi32" (ByVal hdcDest As LongPtr, ByVal xDest As Long, ByVal yDest As Long, ByVal wDest As Long, ByVal hDest As Long, ByVal hdcSrc As LongPtr, ByVal xSrc As Long, ByVal ySrc As Long, ByVal wSrc As Long, ByVal hSrc As Long, ByVal rop As RASTEROPFLAGS) As BOOL

Public Declare PtrSafe Function PtInRegion Lib "gdi32" (ByVal hRgn As LongPtr, ByVal x As Long, ByVal y As Long) As BOOL
Public Declare PtrSafe Function RectInRegion Lib "gdi32" (ByVal hRgn As LongPtr, lpRect As RECT) As BOOL
Public Declare PtrSafe Function CreateRectRgn Lib "gdi32" (ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long) As LongPtr
Public Declare PtrSafe Function CreateRectRgnIndirect Lib "gdi32" (lprect As RECT) As LongPtr
Public Declare PtrSafe Function CreateRoundRectRgn Lib "gdi32" (ByVal X1 As Long, ByVal Y1 As Long, ByVal X2 As Long, ByVal Y2 As Long, ByVal width As Long, ByVal height As Long) As LongPtr
Public Declare PtrSafe Function CreatePolygonRgn Lib "gdi32" (pptl As POINT, ByVal cPoint As Long, ByVal iMode As PolyFillModes) As LongPtr
Public Declare PtrSafe Function CreatePolyPolygonRgn Lib "gdi32" (pptl As POINT, pc As Long, ByVal cPoly As Long, ByVal iMode As PolyFillModes) As LongPtr
Public Declare PtrSafe Function CombineRgn Lib "gdi32" (ByVal hRgnDsr As LongPtr, ByVal hrgnSrc1 As LongPtr, ByVal hrgnSc2 As LongPtr, ByVal iMode As CombineRegionStyles) As WindowRegionTypes
Public Declare PtrSafe Function SelectClipRgn Lib "gdi32" (ByVal hdc As LongPtr, ByVal hRgn As LongPtr) As WindowRegionTypes
Public Declare PtrSafe Function CreateEllipticRgn Lib "gdi32" (ByVal x1 As Long, ByVal y1 As Long, ByVal x2 As Long, ByVal y2 As Long) As LongPtr
Public Declare PtrSafe Function CreateEllipticRgnIndirect Lib "gdi32" (lprect As RECT) As LongPtr
Public Declare PtrSafe Function ExtCreateRegion Lib "gdi32" (lpx As XFORM, ByVal nCount As Long, lpData As Any) As LongPtr
Public Declare PtrSafe Function GetCurrentPositionEx Lib "gdi32" (ByVal hdc As LongPtr, ByRef lppt As POINT) As Long
Public Declare PtrSafe Function ExtSelectClipRgn Lib "gdi32" (ByVal hDC As LongPtr, ByVal hRgn As LongPtr, ByVal fnMode As CombineRegionStyles) As WindowRegionTypes
Public Declare PtrSafe Function FrameRgn Lib "gdi32" (ByVal hdc As LongPtr, ByVal hRgn As LongPtr, ByVal hBrush As LongPtr, ByVal nWidth As Long, ByVal nHeight As Long) As BOOL
Public Declare PtrSafe Function PaintRgn Lib "gdi32" (ByVal hdc As LongPtr, ByVal hRgn As LongPtr) As BOOL
Public Declare PtrSafe Function FillRgn Lib "gdi32" (ByVal hdc As LongPtr, ByVal hRgn As LongPtr, ByVal hbr As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetRegionData Lib "gdi32" (ByVal hRgn As LongPtr, ByVal nCount As Long, lpRgnData As Any) As BOOL
Public Declare PtrSafe Function SetRectRgn Lib "gdi32" (ByVal hRgn As LongPtr, ByVal left As Long, ByVal top As Long, ByVal right As Long, ByVal bottom As Long) As BOOL
Public Declare PtrSafe Function SetMetaRgn Lib "gdi32" (ByVal hDC As LongPtr) As WindowRegionTypes
Public Declare PtrSafe Function GetMetaRgn Lib "gdi32" (ByVal hDC As LongPtr, ByVal hRgn As LongPtr) As Long
Public Declare PtrSafe Function OffsetRgn Lib "gdi32" (ByVal hRgn As LongPtr, ByVal x As Long, ByVal y As Long) As WindowRegionTypes
Public Declare PtrSafe Function OffsetClipRgn Lib "gdi32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long) As WindowRegionTypes
Public Declare PtrSafe Function InvertRgn Lib "gdi32" (ByVal hdc As LongPtr, ByVal hRgn As LongPtr) As BOOL
Public Declare PtrSafe Function GetRgnBox Lib "gdi32" (ByVal hRgn As LongPtr, lprc As RECT) As WindowRegionTypes
Public Declare PtrSafe Function EqualRgn Lib "gdi32" (ByVal hRgn1 As LongPtr, ByVal hRgn2 As LongPtr) As BOOL
Public Declare PtrSafe Function GetClipRgn Lib "gdi32" (ByVal hDC As LongPtr, ByVal hRgn As LongPtr) As Long
Public Declare PtrSafe Function GetRandomRgn Lib "gdi32" (ByVal hDC As LongPtr, ByVal hRgn As LongPtr, ByVal i As Long) As Long
Public Declare PtrSafe Function BeginPath Lib "gdi32" (ByVal hDC As LongPtr) As BOOL
Public Declare PtrSafe Function AbortPath Lib "gdi32" (ByVal hDC As LongPtr) As BOOL
Public Declare PtrSafe Function StrokePath Lib "gdi32" (ByVal hDC As LongPtr) As BOOL
Public Declare PtrSafe Function StrokeAndFillPath Lib "gdi32" (ByVal hDC As LongPtr) As BOOL
Public Declare PtrSafe Function WidenPath Lib "gdi32" (ByVal hDC As LongPtr) As BOOL
Public Declare PtrSafe Function EndPath Lib "gdi32" (ByVal hDC As LongPtr) As BOOL
Public Declare PtrSafe Function FillPath Lib "gdi32" (ByVal hDC As LongPtr) As BOOL
Public Declare PtrSafe Function FlattenPath Lib "gdi32" (ByVal hDC As LongPtr) As BOOL
Public Declare PtrSafe Function GetPath Lib "gdi32" (ByVal hDC As LongPtr, apt As POINT, [TypeHint(GDI_POINT_TYPES)] aj As Byte, ByVal cpt As Long) As Long
Public Declare PtrSafe Function CloseFigure Lib "gdi32" (ByVal hDC As LongPtr) As BOOL
Public Declare PtrSafe Function PathToRegion Lib "gdi32" (ByVal hDC As LongPtr) As LongPtr
Public Declare PtrSafe Function GetMiterLimit Lib "gdi32" (ByVal hDC As LongPtr, plimit As Single) As BOOL
Public Declare PtrSafe Function SetMiterLimit Lib "gdi32" (ByVal hDC As LongPtr, ByVal limit As Single, old As Single) As BOOL
Public Declare PtrSafe Function GetClipBox Lib "gdi32" (ByVal hwnd As LongPtr, lprc As RECT) As WindowRegionTypes

Public Declare PtrSafe Function GetROP2 Lib "gdi32" (ByVal hdc As LongPtr) As BinaryRasterOps
Public Declare PtrSafe Function SetROP2 Lib "gdi32" (ByVal hdc As LongPtr, ByVal nDrawMode As BinaryRasterOps) As BinaryRasterOps
Public Declare PtrSafe Function Rectangle Lib "gdi32" (ByVal hdc As LongPtr, ByVal left As Long, ByVal top As Long, ByVal right As Long, ByVal bottom As Long) As BOOL
Public Declare PtrSafe Function Ellipse Lib "gdi32" (ByVal hdc As LongPtr, ByVal left As Long, ByVal top As Long, ByVal right As Long, ByVal bottom As Long) As BOOL
Public Declare PtrSafe Function MoveToEx Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, lpPoint As Any) As Long
Public Declare PtrSafe Function LineTo Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long) As Long
Public Declare PtrSafe Function LineDDA Lib "gdi32" (ByVal xStart As Long, ByVal yStart As Long, ByVal xEnd As Long, ByVal yEnd As Long, ByVal lpProc As LongPtr, data As Any) As BOOL
Public Declare PtrSafe Function StretchDIBits Lib "gdi32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long, ByVal dx As Long, ByVal dy As Long, ByVal srcX As Long, ByVal srcY As Long, ByVal wSrcWidth As Long, ByVal wSrcHeight As Long, lpBits As Any, lpBitsInfo As BITMAPINFO, ByVal wUsage As GdiDIBitsColorUse, ByVal dwRop As RASTEROPFLAGS) As Long
Public Declare PtrSafe Function SetStretchBltMode Lib "gdi32" (ByVal hDC As LongPtr, ByVal nStretchMode As StretchBltModes) As Long
Public Declare PtrSafe Function GetPixel Lib "gdi32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long) As Long
Public Declare PtrSafe Function SetPixel Lib "gdi32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long, ByVal crColor As Long) As Long
Public Declare PtrSafe Function SetPixelV Lib "gdi32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long, ByVal crColor As Long) As BOOL
Public Declare PtrSafe Function RoundRect Lib "gdi32" (ByVal hDC As LongPtr, ByVal left As Long, ByVal top As Long, ByVal right As Long, ByVal bottom As Long, ByVal width As Long, ByVal height As Long) As BOOL
Public Declare PtrSafe Function PtVisible Lib "gdi32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long) As BOOL
Public Declare PtrSafe Function RectVisible Lib "gdi32" (ByVal hDC As LongPtr, lpRect As RECT) As BOOL
Public Declare PtrSafe Function SetBoundsRect Lib "gdi32" (ByVal hDC As LongPtr, lpRect As RECT, ByVal flags As BoundsAccumFlags) As BoundsAccumFlags
Public Declare PtrSafe Function Pie Lib "gdi32" (ByVal hDC As LongPtr, ByVal left As Long, ByVal top As Long, ByVal right As Long, ByVal bottom As Long, ByVal xr1 As Long, ByVal yr1 As Long, ByVal xr2 As Long, ByVal yr2 As Long) As BOOL
Public Declare PtrSafe Function Arc Lib "gdi32" (ByVal hDC As LongPtr, ByVal x1 As Long, ByVal y1 As Long, ByVal x2 As Long, ByVal y2 As Long, ByVal x3 As Long, ByVal y3 As Long, ByVal x4 As Long, ByVal y4 As Long) As BOOL
Public Declare PtrSafe Function ArcTo Lib "gdi32" (ByVal hDC As LongPtr, ByVal left As Long, ByVal top As Long, ByVal right As Long, ByVal bottom As Long, ByVal xr1 As Long, ByVal yr1 As Long, ByVal xr2 As Long, ByVal yr2 As Long) As BOOL
Public Declare PtrSafe Function AngleArc Lib "gdi32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long, ByVal r As Long, ByVal StartAngle As Single, ByVal SweepAngle As Single) As BOOL
Public Declare PtrSafe Function SetArcDirection Lib "gdi32" (ByVal hDC As LongPtr, ByVal direction As GdiArcDirections) As GdiArcDirections
Public Declare PtrSafe Function GetArcDirection Lib "gdi32" (ByVal hDC As LongPtr) As GdiArcDirections
Public Declare PtrSafe Function Chord Lib "gdi32" (ByVal hDC As LongPtr, ByVal x1 As Long, ByVal y1 As Long, ByVal x2 As Long, ByVal y2 As Long, ByVal x3 As Long, ByVal y3 As Long, ByVal x4 As Long, ByVal y4 As Long) As BOOL
Public Declare PtrSafe Function PolyBezier Lib "gdi32" (ByVal hDC As LongPtr, apt As POINT, ByVal cpt As Long) As BOOL
Public Declare PtrSafe Function PolyBezierTo Lib "gdi32" (ByVal hDC As LongPtr, apt As POINT, ByVal cpt As Long) As BOOL
Public Declare PtrSafe Function Polyline Lib "gdi32" (ByVal hDC As LongPtr, ByRef lpPoint As POINT, ByVal nCount As Long) As BOOL
Public Declare PtrSafe Function Polygon Lib "gdi32" (ByVal hDC As LongPtr, ByRef lpPoint As POINT, ByVal nCount As Long) As BOOL
Public Declare PtrSafe Function PolyPolyline Lib "gdi32" (ByVal hDC As LongPtr, ByRef lpPoint As POINT, asz As Long, ByVal csz As Long) As BOOL
Public Declare PtrSafe Function PolyPolygon Lib "gdi32" (ByVal hDC As LongPtr, ByRef lpPoint As POINT, asz As Long, ByVal csz As Long) As BOOL
Public Declare PtrSafe Function PolyDraw Lib "gdi32" (ByVal hDC As LongPtr, apt As POINT, [TypeHint(GDI_POINT_TYPES)] aj As Byte, ByVal cpt As Long) As Long


Public Declare PtrSafe Function CreatePalette Lib "gdi32" (plpal As Any) As LongPtr
Public Declare PtrSafe Function CreateHalftonePalette Lib "gdi32" (ByVal hDC As LongPtr) As LongPtr
Public Declare PtrSafe Function SelectPalette Lib "gdi32" (ByVal hDC As LongPtr, ByVal hPal As LongPtr, ByVal bForceBkgd As BOOL) As LongPtr
Public Declare PtrSafe Function RealizePalette Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function ResizePalette Lib "gdi32" (ByVal hpal As LongPtr, ByVal n As Long) As BOOL
Public Declare PtrSafe Function SetSystemPaletteUse Lib "gdi32" (ByVal hDC As LongPtr, ByVal use As SystemPaletteUses) As Long
Public Declare PtrSafe Function GetSystemPaletteUse Lib "gdi32" (ByVal hDC As LongPtr) As SystemPaletteUses
Public Declare PtrSafe Function GetSystemPaletteEntries Lib "gdi32" (ByVal hpal As LongPtr, ByVal iStart As Long, ByVal cEntries As Long, pPalEntries As PALETTEENTRY) As Long
Public Declare PtrSafe Function SetPaletteEntries Lib "gdi32" (ByVal hpal As LongPtr, ByVal iStart As Long, ByVal cEntries As Long, pPalEntries As PALETTEENTRY) As Long
Public Declare PtrSafe Function GetPaletteEntries Lib "gdi32" (ByVal hpal As LongPtr, ByVal iStart As Long, ByVal cEntries As Long, pPalEntries As PALETTEENTRY) As Long
Public Declare PtrSafe Function AnimatePalette Lib "gdi32" (ByVal hPal As LongPtr, ByVal iStartIndex As Long, ByVal cEntries As Long, ppe As PALETTEENTRY) As BOOL
Public Declare PtrSafe Function GetColorAdjustment Lib "gdi32" (ByVal hDC As LongPtr, lpca As COLORADJUSTMENT) As BOOL
Public Declare PtrSafe Function SetColorAdjustment Lib "gdi32" (ByVal hDC As LongPtr, lpca As COLORADJUSTMENT) As BOOL
Public Declare PtrSafe Function GetNearestColor Lib "gdi32" (ByVal hDC As LongPtr, ByVal color As Long) As Long
Public Declare PtrSafe Function GetNearestPaletteIndex Lib "gdi32" (ByVal h As LongPtr, ByVal color As Long) As Long
Public Declare PtrSafe Function UpdateColors Lib "gdi32" (ByVal hDC As LongPtr) As BOOL

Public Declare PtrSafe Function PlayMetaFile Lib "gdi32" (ByVal hDC As LongPtr, ByVal hmf As LongPtr) As BOOL


Public Enum LCSCSTYPE
    LCS_CALIBRATED_RGB = 0
    LCS_sRGB = &h73524742
    LCS_WINDOWS_COLOR_SPACE = &h57696E20
End Enum
Public Enum LCS_SIGNATURE_VALUE
    LCS_SIGNATURE = &H50534F43
End Enum
Public Enum LCSGAMUTMATCH
    LCS_GM_BUSINESS = &H00000001
    LCS_GM_GRAPHICS = &H00000002
    LCS_GM_IMAGES = &H00000004
    LCS_GM_ABS_COLORIMETRIC = &H00000008
End Enum
Public Type LOGCOLORSPACEA
    lcsSignature As LCS_SIGNATURE_VALUE
    lcsVersion As Long
    lcsSize As Long
    lcsCSType As LCSCSTYPE
    lcsIntent As LCSGAMUTMATCH
    lcsEndpoints As CIEXYZTRIPLE
    lcsGammaRed As Long
    lcsGammaGreen As Long
    lcsGammaBlue As Long
    lcsFilename(0 To (MAX_PATH - 1)) As Byte
End Type
Public Type LOGCOLORSPACEW
    lcsSignature As LCS_SIGNATURE_VALUE
    lcsVersion As Long
    lcsSize As Long
    lcsCSType As LCSCSTYPE
    lcsIntent As LCSGAMUTMATCH
    lcsEndpoints As CIEXYZTRIPLE
    lcsGammaRed As Long
    lcsGammaGreen As Long
    lcsGammaBlue As Long
    lcsFilename(0 To (MAX_PATH - 1)) As Integer
End Type
'Alias LOGCOLORSPACE As LOGCOLORSPACEW
Public Type LOGCOLORSPACE
    lcsSignature As LCS_SIGNATURE_VALUE
    lcsVersion As Long
    lcsSize As Long
    lcsCSType As LCSCSTYPE
    lcsIntent As LCSGAMUTMATCH
    lcsEndpoints As CIEXYZTRIPLE
    lcsGammaRed As Long
    lcsGammaGreen As Long
    lcsGammaBlue As Long
    lcsFilename(0 To (MAX_PATH - 1)) As Integer
End Type

Public Enum ICM_MODE_VALUES
    ICM_OFF = 1
    ICM_ON = 2
    ICM_QUERY = 3
    ICM_DONE_OUTSIDEDC = 4
End Enum

[PackingAlignment(1)]
Public Type RGBTRIPLE
    rgbtBlue As Byte
    rgbtGreen As Byte
    rgbtRed As Byte
End Type

Public Enum COLOR_MATCHTT_ACTIONS
    CS_ENABLE = &H00000001
    CS_DISABLE = &H00000002
    CS_DELETE_TRANSFORM = &H00000003
End Enum

Public Enum GDI_ESCAPES
    NEWFRAME = 1
    ABORTDOC = 2
    NEXTBAND = 3
    SETCOLORTABLE = 4
    GETCOLORTABLE = 5
    FLUSHOUTPUT = 6
    DRAFTMODE = 7
    QUERYESCSUPPORT = 8
    SETABORTPROC = 9
    STARTDOC = 10
    ENDDOC = 11
    GETPHYSPAGESIZE = 12
    GETPRINTINGOFFSET = 13
    GETSCALINGFACTOR = 14
    MFCOMMENT = 15
    GETPENWIDTH = 16
    SETCOPYCOUNT = 17
    SELECTPAPERSOURCE = 18
    DEVICEDATA = 19
    PASSTHROUGH = 19
    GETTECHNOLGY = 20
    GETTECHNOLOGY = 20
    SETLINECAP = 21
    SETLINEJOIN = 22
    SETMITERLIMIT = 23
    BANDINFO = 24
    DRAWPATTERNRECT = 25
    GETVECTORPENSIZE = 26
    GETVECTORBRUSHSIZE = 27
    ENABLEDUPLEX = 28
    GETSETPAPERBINS = 29
    GETSETPRINTORIENT = 30
    ENUMPAPERBINS = 31
    SETDIBSCALING = 32
    EPSPRINTING = 33
    ENUMPAPERMETRICS = 34
    GETSETPAPERMETRICS = 35
    POSTSCRIPT_DATA = 37
    POSTSCRIPT_IGNORE = 38
    MOUSETRAILS = 39
    GETDEVICEUNITS = 42
    GETEXTENDEDTEXTMETRICS = 256
    GETEXTENTTABLE = 257
    GETPAIRKERNTABLE = 258
    GETTRACKKERNTABLE = 259
    EXTTEXTOUT = 512
    GETFACENAME = 513
    DOWNLOADFACE = 514
    ENABLERELATIVEWIDTHS = 768
    ENABLEPAIRKERNING = 769
    SETKERNTRACK = 770
    SETALLJUSTVALUES = 771
    SETCHARSET = 772
    STRETCHBLT = 2048
    METAFILE_DRIVER = 2049
    GETSETSCREENPARAMS = 3072
    QUERYDIBSUPPORT = 3073
    BEGIN_PATH = 4096
    CLIP_TO_PATH = 4097
    END_PATH = 4098
    EXT_DEVICE_CAPS = 4099
    RESTORE_CTM = 4100
    SAVE_CTM = 4101
    SET_ARC_DIRECTION = 4102
    SET_BACKGROUND_COLOR = 4103
    SET_POLY_MODE = 4104
    SET_SCREEN_ANGLE = 4105
    SET_SPREAD = 4106
    TRANSFORM_CTM = 4107
    SET_CLIP_BOX = 4108
    SET_BOUNDS = 4109
    SET_MIRROR_MODE = 4110
    OPENCHANNEL = 4110
    DOWNLOADHEADER = 4111
    CLOSECHANNEL = 4112
    POSTSCRIPT_PASSTHROUGH = 4115
    ENCAPSULATED_POSTSCRIPT = 4116
    POSTSCRIPT_IDENTIFY = 4117 /* new escape for NT5 pscript driver */
    POSTSCRIPT_INJECTION = 4118  ' /* new escape for NT5 pscript driver */
    CHECKJPEGFORMAT = 4119
    CHECKPNGFORMAT = 4120
    GET_PS_FEATURESETTING = 4121  ' /* new escape for NT5 pscript driver */
    GDIPLUS_TS_QUERYVER = 4122  '/* private escape */
    GDIPLUS_TS_RECORD = 4123  '/* private escape */
End Enum
Public Const MILCORE_TS_QUERYVER_RESULT_FALSE  = &H0
Public Const MILCORE_TS_QUERYVER_RESULT_TRUE  = &H7FFFFFFF
Public Const SPCLPASSTHROUGH2  = 4568 /* new escape for NT5 pscript driver */
Public Const PSIDENT_GDICENTRIC  = 0
Public Const PSIDENT_PSCENTRIC  = 1
Public Enum PSINJECT_POINT
    PSINJECT_BEGINSTREAM = 1
    PSINJECT_PSADOBE = 2
    PSINJECT_PAGESATEND = 3
    PSINJECT_PAGES = 4
    PSINJECT_DOCNEEDEDRES = 5
    PSINJECT_DOCSUPPLIEDRES = 6
    PSINJECT_PAGEORDER = 7
    PSINJECT_ORIENTATION = 8
    PSINJECT_BOUNDINGBOX = 9
    PSINJECT_DOCUMENTPROCESSCOLORS = 10
    PSINJECT_COMMENTS = 11
    PSINJECT_BEGINDEFAULTS = 12
    PSINJECT_ENDDEFAULTS = 13
    PSINJECT_BEGINPROLOG = 14
    PSINJECT_ENDPROLOG = 15
    PSINJECT_BEGINSETUP = 16
    PSINJECT_ENDSETUP = 17
    PSINJECT_TRAILER = 18
    PSINJECT_EOF = 19
    PSINJECT_ENDSTREAM = 20
    PSINJECT_DOCUMENTPROCESSCOLORSATEND = 21
    PSINJECT_PAGENUMBER = 100
    PSINJECT_BEGINPAGESETUP = 101
    PSINJECT_ENDPAGESETUP = 102
    PSINJECT_PAGETRAILER = 103
    PSINJECT_PLATECOLOR = 104
    PSINJECT_SHOWPAGE = 105
    PSINJECT_PAGEBBOX = 106
    PSINJECT_ENDPAGECOMMENTS = 107
    PSINJECT_VMSAVE = 200
    PSINJECT_VMRESTORE = 201
    PSINJECT_DLFONT = &Hdddddddd
End Enum
Public Type PSINJECTDATA
    DataBytes As Long ' /* number of raw data bytes (NOT including this header) */
    /* [ TypeHint(PSINJECT_POINT) ] */ InjectionPoint As Integer ' /* injection point */
    PageNumber As Integer ' /* page number to apply the injection */
    '  /* Followed by raw data to be injected */
End Type
Public Enum GDI_PS_FEATURESETTING
    FEATURESETTING_NUP = 0
    FEATURESETTING_OUTPUT = 1
    FEATURESETTING_PSLEVEL = 2
    FEATURESETTING_CUSTPAPER = 3
    FEATURESETTING_MIRROR = 4
    FEATURESETTING_NEGATIVE = 5
    FEATURESETTING_PROTOCOL = 6
    '(_WIN32_WINNT  = >= _WIN32_WINNT_WINXP)
'  The range of selectors between FEATURESETTING_PRIVATE_BEGIN and
'  FEATURESETTING_PRIVATE_END is reserved by Microsoft for private use
    FEATURESETTING_PRIVATE_BEGIN = &H1000
    FEATURESETTING_PRIVATE_END = &H1FFF
End Enum
Public Type PSFEATURE_OUTPUT
    bPageIndependent As BOOL
    bSetPageDevice As BOOL
End Type

Public Type PSFEATURE_CUSTPAPER
    lOrientation As Long
    lWidth As Long
    lHeight As Long
    lWidthOffset As Long
    lHeightOffset As Long
End Type

Public Const PSPROTOCOL_ASCII  = 0
Public Const PSPROTOCOL_BCP  = 1
Public Const PSPROTOCOL_TBCP  = 2
Public Const PSPROTOCOL_BINARY  = 3
' /* Flag returned from QUERYDIBSUPPORT */
Public Const QDI_SETDIBITS  = 1
Public Const QDI_GETDIBITS  = 2
Public Const QDI_DIBTOSCREEN  = 4
Public Const QDI_STRETCHDIB  = 8
' /* Spooler Error Codes */
Public Const SP_NOTREPORTED  = &H4000
Public Const SP_ERROR  = (-1)
Public Const SP_APPABORT  = (-2)
Public Const SP_USERABORT  = (-3)
Public Const SP_OUTOFDISK  = (-4)
Public Const SP_OUTOFMEMORY  = (-5)
Public Const PR_JOBSTATUS  = &H0000

Public Declare PtrSafe Function SetICMMode Lib "gdi32" (ByVal hDC As LongPtr, ByVal mode As ICM_MODE_VALUES) As Long
Public Declare PtrSafe Function CheckColorsInGamut Lib "gdi32" (ByVal hDC As LongPtr, lpRGBTriple As RGBTRIPLE, dlpBuffer As Any, ByVal nCount As Long) As BOOL
Public Declare PtrSafe Function GetColorSpace Lib "gdi32" (ByVal hDC As LongPtr) As LongPtr
Public Declare PtrSafe Function GetLogColorSpaceA Lib "gdi32" (ByVal hColorSpace As LongPtr, lpBuffer As LOGCOLORSPACEA, ByVal nSize As Long) As BOOL
Public Declare PtrSafe Function GetLogColorSpaceW Lib "gdi32" (ByVal hColorSpace As LongPtr, lpBuffer As LOGCOLORSPACEW, ByVal nSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetLogColorSpace Lib "gdi32" Alias "GetLogColorSpaceW" (ByVal hColorSpace As LongPtr, lpBuffer As LOGCOLORSPACE, ByVal nSize As Long) As BOOL
Public Declare PtrSafe Function CreateColorSpaceA Lib "gdi32" (lplcs As LOGCOLORSPACEA) As LongPtr
Public Declare PtrSafe Function CreateColorSpaceW Lib "gdi32" (lplcs As LOGCOLORSPACEW) As LongPtr
Public DeclareWide PtrSafe Function CreateColorSpace Lib "gdi32" Alias "CreateColorSpaceW" (lplcs As LOGCOLORSPACE) As LongPtr
Public Declare PtrSafe Function SetColorSpace Lib "gdi32" (ByVal hDC As LongPtr, ByVal hcs As LongPtr) As LongPtr
Public Declare PtrSafe Function DeleteColorSpace Lib "gdi32" (ByVal hcs As LongPtr) As BOOL
Public Declare PtrSafe Function GetICMProfileA Lib "gdi32" (ByVal hdc As LongPtr, pBufSize As Long, ByVal pszFilename As String) As BOOL
Public Declare PtrSafe Function GetICMProfileW Lib "gdi32" (ByVal hdc As LongPtr, pBufSize As Long, ByVal pszFilename As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetICMProfile Lib "gdi32" Alias "GetICMProfileW" (ByVal hdc As LongPtr, pBufSize As Long, ByVal pszFilename As String) As BOOL
Public Declare PtrSafe Function SetICMProfileA Lib "gdi32" (ByVal hdc As LongPtr, ByVal pszFilename As String) As BOOL
Public Declare PtrSafe Function SetICMProfileW Lib "gdi32" (ByVal hdc As LongPtr, ByVal pszFilename As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetICMProfile Lib "gdi32" Alias "SetICMProfileW" (ByVal hdc As LongPtr, ByVal pszFilename As String) As BOOL
Public Declare PtrSafe Function GetDeviceGammaRamp Lib "gdi32" (ByVal hdc As LongPtr, lpRamp As Any) As BOOL
Public Declare PtrSafe Function SetDeviceGammaRamp Lib "gdi32" (ByVal hdc As LongPtr, lpRamp As Any) As BOOL
Public Declare PtrSafe Function ColorMatchToTarget Lib "gdi32" (ByVal hdc As LongPtr, ByVal hdcTarget As LongPtr, ByVal action As COLOR_MATCHTT_ACTIONS) As BOOL
Public Declare PtrSafe Function EnumICMProfilesA Lib "gdi32" (ByVal hdc As LongPtr, ByVal proc As LongPtr, Optional ByVal param As LongPtr) As Long
Public Declare PtrSafe Function EnumICMProfilesW Lib "gdi32" (ByVal hdc As LongPtr, ByVal proc As LongPtr, Optional ByVal param As LongPtr) As Long
Public Declare PtrSafe Function EnumICMProfiles Lib "gdi32" Alias "EnumICMProfilesW" (ByVal hdc As LongPtr, ByVal proc As LongPtr, Optional ByVal param As LongPtr) As Long
Public Declare PtrSafe Function ColorCorrectPalette Lib "gdi32" (ByVal hDC As LongPtr, ByVal hPal As LongPtr, ByVal deFirst As Long, ByVal num As Long) As BOOL
 

Public Declare PtrSafe Function GetDeviceCaps Lib "gdi32" (ByVal hDC As LongPtr, ByVal nIndex As GetDevCaps_Index) As Long
Public Declare PtrSafe Function GetDIBits Lib "gdi32" (ByVal hdc As LongPtr, ByVal hbm As LongPtr, ByVal start As Long, ByVal cLines As Long, ByRef lpvBits As Any, ByRef lpbmi As BITMAPINFO, ByVal usage As GdiDIBitsColorUse) As Long
Public Declare PtrSafe Function SetDIBits Lib "gdi32" (ByVal hdc As LongPtr, ByVal hbm As LongPtr, ByVal start As Long, ByVal cLines As Long, ByRef lpBits As Any, ByRef lpbmi As BITMAPINFO, ByVal ColorUse As GdiDIBitsColorUse) As Long
Public Declare PtrSafe Function SetDIBitsToDevice Lib "gdi32" (ByVal hdc As LongPtr, ByVal xDest As Long, ByVal yDest As Long, ByVal w As Long, ByVal h As Long, ByVal xSrc As Long, ByVal xSrc As Long, ByVal StartScan As Long, ByVal cLines As Long, ByRef lpvBits As Any, ByRef lpbmi As BITMAPINFO, ByVal ColorUse As GdiDIBitsColorUse) As Long
Public DeclareWide PtrSafe Function GetObject Lib "gdi32" Alias "GetObjectW" (ByVal hObject As LongPtr, ByVal nCount As Long, lpObject As Any) As Long
Public DeclareWide PtrSafe Function GetObjectAPI Lib "gdi32" Alias "GetObjectW" (ByVal hObject As LongPtr, ByVal nCount As Long, lpObject As Any) As Long
Public DeclareWide PtrSafe Function GetObjectW Lib "gdi32" (ByVal hObject As LongPtr, ByVal nCount As Long, lpObject As Any) As Long
Public Declare PtrSafe Function GetObjectA Lib "gdi32" (ByVal hObject As LongPtr, ByVal nCount As Long, lpObject As Any) As Long
Public Declare PtrSafe Function GetObjectType Lib "gdi32" (ByVal h As LongPtr) As GdiObjectTypes
Public Declare PtrSafe Function UnrealizeObject Lib "gdi32" (ByVal h As LongPtr) As BOOL
Public Declare PtrSafe Function CreateCompatibleBitmap Lib "gdi32" (ByVal hDC As LongPtr, ByVal cx As Long, ByVal cy As Long) As LongPtr
Public Declare PtrSafe Function CreateDiscardableBitmap Lib "gdi32" (ByVal hDC As LongPtr, ByVal cx As Long, ByVal cy As Long) As LongPtr
Public Declare PtrSafe Function CreateBitmap Lib "gdi32" (ByVal nWidth As Long, ByVal nHeight As Long, ByVal nPlanes As Long, ByVal nBitCount As Long, lpBits As Any) As LongPtr
Public Declare PtrSafe Function CreateBitmapIndirect Lib "gdi32" (ByRef lpBitmap As BITMAP) As LongPtr
Public Declare PtrSafe Function CreateCompatibleDC Lib "gdi32" (ByVal hDC As LongPtr) As LongPtr
Public Declare PtrSafe Function CreateDCA Lib "gdi32" (ByVal pwszDriver As String, ByVal pwszDevice As String, ByVal pszPort As String, pdm As DEVMODEA) As LongPtr
Public Declare PtrSafe Function CreateDCW Lib "gdi32" (ByVal pwszDriver As LongPtr, ByVal pwszDevice As LongPtr, ByVal pszPort As LongPtr, pdm As DEVMODEW) As LongPtr
Public DeclareWide PtrSafe Function CreateDC Lib "gdi32" Alias "CreateDCW" (ByVal pwszDriver As String, ByVal pwszDevice As String, ByVal pszPort As String, pdm As DEVMODE) As LongPtr
Public Declare PtrSafe Function ResetDCA Lib "gdi32" (ByVal hDC As LongPtr, pdm As DEVMODEA) As LongPtr
Public Declare PtrSafe Function ResetDCW Lib "gdi32" (ByVal hDC As LongPtr, pdm As DEVMODEW) As LongPtr
Public DeclareWide PtrSafe Function ResetDC Lib "gdi32" Alias "ResetDCW" (ByVal hDC As LongPtr, pdm As DEVMODE) As LongPtr
Public Declare PtrSafe Function RestoreDC Lib "gdi32" (ByVal hDC As LongPtr, ByVal nSavedDC As Long) As BOOL
Public Declare PtrSafe Function SaveDC Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function CancelDC Lib "gdi32" (ByVal hDC As LongPtr) As BOOL
Public Declare PtrSafe Function CreateICA Lib "gdi32" (ByVal pwszDriver As String, ByVal pwszDevice As String, ByVal pszPort As String, pdm As DEVMODEA) As LongPtr
Public Declare PtrSafe Function CreateICW Lib "gdi32" (ByVal pwszDriver As LongPtr, ByVal pwszDevice As LongPtr, ByVal pszPort As LongPtr, pdm As DEVMODEA) As LongPtr
Public DeclareWide PtrSafe Function CreateIC Lib "gdi32" Alias "CreateICW" (ByVal pwszDriver As String, ByVal pwszDevice As String, ByVal pszPort As String, pdm As DEVMODEA) As LongPtr
Public Declare PtrSafe Function SwapBuffers Lib "gdi32" (ByVal hDC As LongPtr) As BOOL
[Description("Flushes the calling thread's current batch")]
Public Declare PtrSafe Function GdiFlush Lib "gdi32" () As Long
[Description("Sets the maximum number of functions that can be accumulated in the calling thread's current batch")]
Public Declare PtrSafe Function GdiSetBatchLimit Lib "gdi32" (ByVal dw As Long) As Long
[Description("Returns the maximum number of function calls that can be accumulated in the calling thread's current batch")]
Public Declare PtrSafe Function GdiGetBatchLimit Lib "gdi32" () As Long
[Description("Allows applications to access capabilities of a particular device not directly available through GDI")]
Public Declare PtrSafe Function Escape Lib "gdi32" (ByVal hdc As LongPtr, ByVal iEscape As GDI_ESCAPES, ByVal cjIn As Long, ByVal lpvInData As String /* ANSI */, ByRef lpvOutData As Any) As Long
[Description("Allows applications to access capabilities of a particular device not directly available through GDI")]
Public Declare PtrSafe Function ExtEscape Lib "gdi32" (ByVal hdc As LongPtr, ByVal iEscape As GDI_ESCAPES, ByVal cjInput As Long, ByVal lpszInData As String /* ANSI */, ByVal cjOutput As Long, ByVal lpszOutData As String /* ANSI */) As Long


Public Declare PtrSafe Function CreateDIBSection Lib "gdi32" (ByVal hDC As LongPtr, pbmi As BITMAPINFO, ByVal usage As Long, ByRef ppvBits As Any, ByVal hSection As LongPtr, ByVal offset As Long) As LongPtr
Public DeclareWide PtrSafe Function CreateDIBitmap Lib "gdi32" (ByVal hDC As LongPtr, pbmih As BITMAPV5HEADER, ByVal flInit As CreateDIBitmapFlags, pjBits As Any, pbmi As BITMAPINFO, ByVal iUsage As GdiDIBitsColorUse) As LongPtr
Public Declare PtrSafe Function CreateDIBPatternBrush Lib "gdi32" (ByVal h As LongPtr, ByVal iUsage As GdiDIBitsColorUse) As LongPtr
Public DeclareWide PtrSafe Function CreateDIBPatternBrushPt Lib "gdi32" (lpPackedDIB As Any, ByVal iUsage As GdiDIBitsColorUse) As LongPtr
Public Declare PtrSafe Function SetDIBColorTable Lib "gdi32" (ByVal hDC As LongPtr, ByVal iStart As Long, ByVal cEntries As Long, lpRGBQuad As Any) As Long
Public Declare PtrSafe Function GetDIBColorTable Lib "gdi32" (ByVal hDC As LongPtr, ByVal iStart As Long, ByVal cEntries As Long, lpRGBQuad As Any) As Long
Public Declare PtrSafe Function GetBitmapBits Lib "gdi32" (ByVal hbit As LongPtr, ByVal cb As Long, lpvBits As Any) As Long
Public Declare PtrSafe Function SetBitmapBits Lib "gdi32" (ByVal hbit As LongPtr, ByVal cb As Long, lpvBits As Any) As Long


Public Declare PtrSafe Function DeleteObject Lib "gdi32" (ByVal hObject As LongPtr) As BOOL
Public Declare PtrSafe Function DeleteDC Lib "gdi32" (ByVal hDC As LongPtr) As BOOL
Public Declare PtrSafe Function DeleteMetaFile Lib "gdi32" (ByVal hmf As LongPtr) As BOOL

Public Declare PtrSafe Function D3DKMTSetProcessSchedulingPriorityClass Lib "gdi32" (ByVal hProcess As LongPtr, ByVal lPriority As D3DKMT_SCHEDULINGPRIORITYCLASS) As Long
Public Declare PtrSafe Function CreateBrushIndirect Lib "gdi32" (plbrush As LOGBRUSH) As LongPtr
Public Declare PtrSafe Function CreateSolidBrush Lib "gdi32" (ByVal crColor As Long) As LongPtr
Public Declare PtrSafe Function CreatePatternBrush Lib "gdi32" (ByVal hBitmap As LongPtr) As LongPtr
Public Declare PtrSafe Function CreateHatchBrush Lib "gdi32" (ByVal iHatch As GdiHatchStyles, ByVal crColor As Long) As LongPtr
Public Declare PtrSafe Function CreatePen Lib "gdi32" (ByVal iStyle As GdiPenStyles, ByVal cWidth As Long, ByVal crColor As Long) As LongPtr
Public Declare PtrSafe Function CreatePenIndirect Lib "gdi32" (lopn As LOGPEN) As LongPtr
Public Declare PtrSafe Function ExtCreatePen Lib "gdi32" (ByVal iStyle As GdiPenStyles, ByVal cWidth As Long, plbrush As LOGBRUSH, ByVal cstyle As Long, pstyle As Long) As LongPtr

Public Declare PtrSafe Function SetWindowExtEx Lib "gdi32" (ByVal hDC As LongPtr, ByVal x As Long, ByVal y As Long, lpsz As SIZE) As BOOL
Public Declare PtrSafe Function GetWindowExtEx Lib "gdi32" (ByVal hDC As LongPtr, lpsz As SIZE) As BOOL
Public Declare PtrSafe Function SetWindowOrgEx Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, lppt As POINT) As BOOL
Public Declare PtrSafe Function GetWindowOrgEx Lib "gdi32" (ByVal hdc As LongPtr, lppoint As POINT) As BOOL
Public Declare PtrSafe Function SetViewportOrgEx Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, lppt As POINT) As BOOL
Public Declare PtrSafe Function GetViewportOrgEx Lib "gdi32" (ByVal hdc As LongPtr, lppoint As POINT) As BOOL
Public Declare PtrSafe Function SetViewportExtEx Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, lpsz As SIZE) As BOOL
Public Declare PtrSafe Function GetViewportExtEx Lib "gdi32" (ByVal hdc As LongPtr, lpsz As SIZE) As BOOL
Public Declare PtrSafe Function SetBrushOrgEx Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, lppt As POINT) As BOOL
Public Declare PtrSafe Function GetBrushOrgEx Lib "gdi32" (ByVal hdc As LongPtr, lppoint As POINT) As BOOL
Public Declare PtrSafe Function GetBitmapDimensionEx Lib "gdi32" (ByVal hbit As LongPtr, lpsize As SIZE) As BOOL
Public Declare PtrSafe Function SetBitmapDimensionEx Lib "gdi32" (ByVal hbit As LongPtr, ByVal w As Long, ByVal h As Long, lpsz As SIZE) As BOOL
Public Declare PtrSafe Function IntersectClipRect Lib "gdi32" (ByVal hdc As LongPtr, ByVal left As Long, ByVal top As Long, ByVal right As Long, ByVal bottom As Long) As WindowRegionTypes
[Description("Creates a new clipping region that consists of the existing clipping region minus the specified rectangle")]
Public Declare PtrSafe Function ExcludeClipRect Lib "gdi32" (ByVal hdc As LongPtr, ByVal left As Long, ByVal top As Long, ByVal right As Long, ByVal bottom As Long) As WindowRegionTypes
Public Declare PtrSafe Function SetWorldTransform Lib "gdi32" (ByVal hdc As LongPtr, lpxf As XFORM) As BOOL
Public Declare PtrSafe Function GetWorldTransform Lib "gdi32" (ByVal hdc As LongPtr, lpxf As XFORM) As BOOL
Public Declare PtrSafe Function ModifyWorldTransform Lib "gdi32" (ByVal hdc As LongPtr, lpxf As XFORM, ByVal mode As GDI_MWT_MODE) As BOOL
Public Declare PtrSafe Function CombineTransform Lib "gdi32" (lpxfOut As XFORM, lpxf1 As XFORM, lpxf2 As XFORM) As BOOL
Public Declare PtrSafe Function ScaleWindowExtEx Lib "gdi32" (ByVal hdc As LongPtr, ByVal nXnum As Long, ByVal nXdenom As Long, ByVal nYnum As Long, ByVal nYdenom As Long, lpSize As SIZE) As BOOL
Public Declare PtrSafe Function ScaleViewportExtEx Lib "gdi32" (ByVal hdc As LongPtr, ByVal nXnum As Long, ByVal nXdenom As Long, ByVal nYnum As Long, ByVal nYdenom As Long, lpSize As SIZE) As BOOL
Public Declare PtrSafe Function FixBrushOrgEx Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, lppt As POINT) As BOOL


Public Declare PtrSafe Function CreateFontA Lib "gdi32" (ByVal cHeight As Long, ByVal cWidth As Long, ByVal cEscapement As Long, ByVal cOrientation As Long, ByVal cWeight As FontWeight, ByVal bItalic As Long, ByVal bUnderline As Long, ByVal bStrikeOut As Long, ByVal iCharset As FontCharset, ByVal iOutPrecision As FontOutPrecis, ByVal iClipPrecision As FontClipPrecis, ByVal iQuality As Long, ByVal iPitchAndFamily As Long, ByVal pszFaceName As String) As LongPtr
Public Declare PtrSafe Function CreateFontW Lib "gdi32" (ByVal cHeight As Long, ByVal cWidth As Long, ByVal cEscapement As Long, ByVal cOrientation As Long, ByVal cWeight As FontWeight, ByVal bItalic As Long, ByVal bUnderline As Long, ByVal bStrikeOut As Long, ByVal iCharset As FontCharset, ByVal iOutPrecision As FontOutPrecis, ByVal iClipPrecision As FontClipPrecis, ByVal iQuality As Long, ByVal iPitchAndFamily As Long, ByVal pszFaceName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateFont Lib "gdi32" Alias "CreateFontW" (ByVal cHeight As Long, ByVal cWidth As Long, ByVal cEscapement As Long, ByVal cOrientation As Long, ByVal cWeight As FontWeight, ByVal bItalic As Long, ByVal bUnderline As Long, ByVal bStrikeOut As Long, ByVal iCharset As FontCharset, ByVal iOutPrecision As FontOutPrecis, ByVal iClipPrecision As FontClipPrecis, ByVal iQuality As Long, ByVal iPitchAndFamily As Long, ByVal pszFaceName As String) As LongPtr
Public Declare PtrSafe Function CreateFontIndirectA Lib "gdi32" (ByRef lpLogFont As LOGFONTA) As LongPtr
Public Declare PtrSafe Function CreateFontIndirectW Lib "gdi32" (ByRef lpLogFont As LOGFONTW) As LongPtr
Public DeclareWide PtrSafe Function CreateFontIndirect Lib "gdi32" Alias "CreateFontIndirectW" (ByRef lpLogFont As LOGFONT) As LongPtr
Public Declare PtrSafe Function CreateFontIndirectExA Lib "gdi32" (ByRef lpLogFont As ENUMLOGFONTEXDVA) As LongPtr
Public Declare PtrSafe Function CreateFontIndirectExW Lib "gdi32" (ByRef lpLogFont As ENUMLOGFONTEXDVW) As LongPtr
Public DeclareWide PtrSafe Function CreateFontIndirectEx Lib "gdi32" Alias "CreateFontIndirectExW" (ByRef lpLogFont As ENUMLOGFONTEXDV) As LongPtr
Public Declare PtrSafe Function AddFontResourceA Lib "gdi32" (ByVal lpszFileName As String) As Long
Public Declare PtrSafe Function AddFontResourceW Lib "gdi32" (ByVal lpszFileName As LongPtr) As Long
Public DeclareWide PtrSafe Function AddFontResource Lib "gdi32" Alias "AddFontResourceW" (ByVal lpszFileName As String) As Long
Public Declare PtrSafe Function AddFontResourceExA Lib "gdi32" (ByVal lpszFileName As String, ByVal fl As AddFontFlags, Optional ByVal res As LongPtr = 0) As Long
Public Declare PtrSafe Function AddFontResourceExW Lib "gdi32" (ByVal lpszFileName As LongPtr, ByVal fl As AddFontFlags, Optional ByVal res As LongPtr = 0) As Long
Public DeclareWide PtrSafe Function AddFontResourceEx Lib "gdi32" Alias "AddFontResourceExW" (ByVal lpszFileName As String, ByVal fl As AddFontFlags, Optional ByVal res As LongPtr = 0) As Long
Public Declare PtrSafe Function RemoveFontResourceA Lib "gdi32" (ByVal lpszFileName As String) As BOOL
Public Declare PtrSafe Function RemoveFontResourceW Lib "gdi32" (ByVal lpszFileName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function RemoveFontResource Lib "gdi32" Alias "RemoveFontResourceW" (ByVal lpszFileName As String) As BOOL
Public Declare PtrSafe Function RemoveFontResourceExA Lib "gdi32" (ByVal lpszFileName As String, ByVal fl As AddFontFlags, Optional ByVal pdv As LongPtr = 0) As Long
Public Declare PtrSafe Function RemoveFontResourceExW Lib "gdi32" (ByVal lpszFileName As LongPtr, ByVal fl As AddFontFlags, Optional ByVal pdv As LongPtr = 0) As Long
Public DeclareWide PtrSafe Function RemoveFontResourceEx Lib "gdi32" Alias "RemoveFontResourceExW" (ByVal lpszFileName As String, ByVal fl As AddFontFlags, Optional ByVal pdv As LongPtr = 0) As Long
Public Declare PtrSafe Function AddFontMemResourceEx Lib "gdi32" (ByVal pFileView As LongPtr, ByVal cjSize As Long, ByVal pvReserved As LongPtr, pNumFonts As Long) As LongPtr
Public Declare PtrSafe Function RemoveFontMemResourceEx Lib "gdi32" (ByVal h As LongPtr) As BOOL
Public Declare PtrSafe Function EnumFontsA Lib "gdi32" (ByVal hdc As LongPtr, ByVal lpLogfont As String, ByVal lpProc As LongPtr, lParam As Any) As Long
Public DeclareWide PtrSafe Function EnumFontsW Lib "gdi32" (ByVal hdc As LongPtr, ByVal lpLogfont As LongPtr, ByVal lpProc As LongPtr, lParam As Any) As Long
Public DeclareWide PtrSafe Function EnumFonts Lib "gdi32" Alias "EnumFontsW" (ByVal hdc As LongPtr, ByVal lpLogfont As String, ByVal lpProc As LongPtr, lParam As Any) As Long
Public Declare PtrSafe Function EnumFontFamiliesA Lib "gdi32" (ByVal hdc As LongPtr, ByVal lpLogfont As String, ByVal lpProc As LongPtr, lParam As Any) As Long
Public DeclareWide PtrSafe Function EnumFontFamiliesW Lib "gdi32" (ByVal hdc As LongPtr, ByVal lpLogfont As LongPtr, ByVal lpProc As LongPtr, lParam As Any) As Long
Public DeclareWide PtrSafe Function EnumFontFamilies Lib "gdi32" Alias "EnumFontFamiliesW" (ByVal hdc As LongPtr, ByVal lpLogfont As String, ByVal lpProc As LongPtr, lParam As Any) As Long
Public Declare PtrSafe Function EnumFontFamiliesExA Lib "gdi32" (ByVal hdc As LongPtr, lpLogfont As LOGFONTA, ByVal lpProc As LongPtr, lParam As Any, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function EnumFontFamiliesExW Lib "gdi32" (ByVal hdc As LongPtr, lpLogfont As LOGFONTW, ByVal lpProc As LongPtr, lParam As Any, ByVal dwFlags As Long) As Long
Public DeclareWide PtrSafe Function EnumFontFamiliesEx Lib "gdi32" Alias "EnumFontFamiliesExW" (ByVal hdc As LongPtr, lpLogfont As LOGFONT, ByVal lpProc As LongPtr, lParam As Any, ByVal dwFlags As Long) As Long
Public Declare PtrSafe Function GetGlyphIndicesA Lib "gdi32" (ByVal hdc As LongPtr, ByVal lpstr As LongPtr, ByVal c As LongPtr, pgi As Long, ByVal fl As GetGlyphIndiciesFlags) As Long
Public Declare PtrSafe Function GetGlyphIndicesW Lib "gdi32" (ByVal hdc As LongPtr, ByVal lpstr As LongPtr, ByVal c As LongPtr, pgi As Long, ByVal fl As GetGlyphIndiciesFlags) As Long
Public DeclareWide PtrSafe Function GetGlyphIndices Lib "gdi32" Alias "GetGlyphIndicesW" (ByVal hdc As LongPtr, ByVal lpstr As LongPtr, ByVal c As LongPtr, pgi As Long, ByVal fl As GetGlyphIndiciesFlags) As Long
[Description("📝**NOTE:** First pass ByVal 0 to get the required size; then use a byte array, then fill a GLYPHSET in two steps, copy fixed, redim and copy WCRANGE bytes.")]
Public DeclareWide PtrSafe Function GetFontUnicodeRanges Lib "gdi32" (ByVal hdc As LongPtr, lpgs As Any) As Long
Public Declare PtrSafe Function GetGlyphOutlineA Lib "gdi32" (ByVal hdc As LongPtr, ByVal uChar As Long, ByVal fuFormat As GlyphOutlineFormats, lpgm As GLYPHMETRICS, ByVal cjBuffer As Long, pvBuffer As Any, lpmat2 As MAT2) As Long
Public DeclareWide PtrSafe Function GetGlyphOutlineW Lib "gdi32" (ByVal hdc As LongPtr, ByVal uChar As Long, ByVal fuFormat As GlyphOutlineFormats, lpgm As GLYPHMETRICS, ByVal cjBuffer As Long, pvBuffer As Any, lpmat2 As MAT2) As Long
Public DeclareWide PtrSafe Function GetGlyphOutline Lib "gdi32" Alias "GetGlyphOutlineW" (ByVal hdc As LongPtr, ByVal uChar As Long, ByVal fuFormat As GlyphOutlineFormats, lpgm As GLYPHMETRICS, ByVal cjBuffer As Long, pvBuffer As Any, lpmat2 As MAT2) As Long
Public Declare PtrSafe Function CreateScalableFontResourceA Lib "gdi32" (ByVal fdwHidden As Long, ByVal lpszFont As String, ByVal lpszFile As String, ByVal lpszPath As String) As BOOL
Public Declare PtrSafe Function CreateScalableFontResourceW Lib "gdi32" (ByVal fdwHidden As Long, ByVal lpszFont As LongPtr, ByVal lpszFile As LongPtr, ByVal lpszPath As LongPtr) As BOOL
Public DeclareWide PtrSafe Function CreateScalableFontResource Lib "gdi32" Alias "CreateScalableFontResourceW" (ByVal fdwHidden As Long, ByVal lpszFont As String, ByVal lpszFile As String, ByVal lpszPath As String) As BOOL
Public Declare PtrSafe Function GetFontLanguageInfo Lib "gdi32" (ByVal hDC As LongPtr) As GDI_GCP_FLAGS
Public Declare PtrSafe Function GetCharacterPlacementA Lib "gdi32" (ByVal hdc As LongPtr, ByVal lpString As String, ByVal nCount As Long, ByVal nMexExtent As Long, lpResults As GCP_RESULTSA, ByVal dwFlags As GDI_GCP_FLAGS) As Long
Public Declare PtrSafe Function GetCharacterPlacementW Lib "gdi32" (ByVal hdc As LongPtr, ByVal lpString As LongPtr, ByVal nCount As Long, ByVal nMexExtent As Long, lpResults As GCP_RESULTSW, ByVal dwFlags As GDI_GCP_FLAGS) As Long
Public DeclareWide PtrSafe Function GetCharacterPlacement Lib "gdi32" Alias "GetCharacterPlacementW" (ByVal hdc As LongPtr, ByVal lpString As String, ByVal nCount As Long, ByVal nMexExtent As Long, lpResults As GCP_RESULTS, ByVal dwFlags As GDI_GCP_FLAGS) As Long
Public Declare PtrSafe Function GetAspectRatioFilterEx Lib "gdi32" (ByVal hDC As LongPtr, lpsize As SIZE) As BOOL

Public Declare PtrSafe Function SetTextColor Lib "gdi32" (ByVal hDC As LongPtr, ByVal crColor As Long) As Long
Public Declare PtrSafe Function GetTextColor Lib "gdi32" (ByVal hDC As LongPtr) As Long
[Description("**Note**  This function is a Windows 9x compatbility function. Call the GetTextExtentPoint32 function instead, which provides more accurate results.")]
Public Declare PtrSafe Function GetTextExtentPointA Lib "gdi32" (ByVal hdc As LongPtr, ByVal lpString As String, ByVal c As Long, ByRef lpsz As SIZE) As BOOL
[Description("**Note**  This function is a Windows 9x compatbility function. Call the GetTextExtentPoint32 function instead, which provides more accurate results.")]
Public Declare PtrSafe Function GetTextExtentPointW Lib "gdi32" (ByVal hdc As LongPtr, ByVal lpString As LongPtr, ByVal c As Long, ByRef lpsz As SIZE) As BOOL
[Description("**Note**  This function is a Windows 9x compatbility function. Call the GetTextExtentPoint32 function instead, which provides more accurate results.")]
Public DeclareWide PtrSafe Function GetTextExtentPoint Lib "gdi32" Alias "GetTextExtentPointW" (ByVal hdc As LongPtr, ByVal lpString As String, ByVal c As Long, ByRef lpsz As SIZE) As BOOL
Public Declare PtrSafe Function GetTextExtentExPointA Lib "gdi32" (ByVal hDC As LongPtr, ByVal lpszString As String, ByVal cchString As Long, ByVal nMaxExtent As Long, lpnFit As Long, lpnDx As Long, lpSize As SIZE) As BOOL
Public Declare PtrSafe Function GetTextExtentExPointW Lib "gdi32" (ByVal hDC As LongPtr, ByVal lpszString As LongPtr, ByVal cchString As Long, ByVal nMaxExtent As Long, lpnFit As Long, lpnDx As Long, lpSize As SIZE) As BOOL
Public DeclareWide PtrSafe Function GetTextExtentExPoint Lib "gdi32" Alias "GetTextExtentExPointW" (ByVal hDC As LongPtr, ByVal lpszString As String, ByVal cchString As Long, ByVal nMaxExtent As Long, lpnFit As Long, lpnDx As Long, lpSize As SIZE) As BOOL
Public Declare PtrSafe Function GetTextExtentExPointI Lib "gdi32" (ByVal hDC As LongPtr, lpszString As Integer, ByVal cwchString As Long, ByVal nMaxExtent As Long, lpnFit As Long, lpnDx As Long, lpSize As SIZE) As BOOL
Public Declare PtrSafe Function GetTextExtentPoint32A Lib "gdi32" (ByVal hDC As LongPtr, ByVal lpsz As String, ByVal cbString As Long, lpSize As SIZE) As BOOL
Public Declare PtrSafe Function GetTextExtentPoint32W Lib "gdi32" (ByVal hDC As LongPtr, ByVal lpsz As LongPtr, ByVal cbString As Long, lpSize As SIZE) As BOOL
Public DeclareWide PtrSafe Function GetTextExtentPoint32 Lib "gdi32" Alias "GetTextExtentPoint32W" (ByVal hDC As LongPtr, ByVal lpsz As String, ByVal cbString As Long, lpSize As SIZE) As BOOL
Public Declare PtrSafe Function GetTextExtentPointI Lib "gdi32" (ByVal hDC As LongPtr, pgiIn As Integer, ByVal cgi As Long, psize As SIZE) As BOOL
Public Declare PtrSafe Function GetTabbedTextExtentA Lib "user32" (ByVal HDC As LongPtr, ByVal lpString As String, ByVal StringLen As Long, ByVal nTabPositions As Long, ByRef arrayOfPositions As Long) As Long  ' we only pass 1 value to arrayOfPositions, so this definition is OK for our needs    
Public Declare PtrSafe Function GetTabbedTextExtentW Lib "user32" (ByVal HDC As LongPtr, ByVal lpString As LongPtr, ByVal StringLen As Long, ByVal nTabPositions As Long, ByRef arrayOfPositions As Long) As Long  ' we only pass 1 value to arrayOfPositions, so this definition is OK for our needs    
Public DeclareWide PtrSafe Function GetTabbedTextExtent Lib "user32" Alias "GetTabbedTextExtentW" (ByVal HDC As LongPtr, ByVal lpString As String, ByVal StringLen As Long, ByVal nTabPositions As Long, ByRef arrayOfPositions As Long) As Long  ' we only pass 1 value to arrayOfPositions, so this definition is OK for our needs    
Public Declare PtrSafe Function GetTextMetricsW Lib "gdi32" (ByVal hdc As LongPtr, lptm As TEXTMETRICW) As BOOL
Public Declare PtrSafe Function GetTextMetricsA Lib "gdi32" (ByVal hdc As LongPtr, lptm As TEXTMETRICA) As BOOL
Public DeclareWide PtrSafe Function GetTextMetrics Lib "gdi32" Alias "GetTextMetricsW" (ByVal hdc As LongPtr, lptm As TEXTMETRIC) As BOOL
Public Declare PtrSafe Function GetOutlineTextMetricsA Lib "gdi32" (ByVal hdc As LongPtr, ByVal cjCopy As Long, potm As OUTLINETEXTMETRICA) As Long
Public Declare PtrSafe Function GetOutlineTextMetricsW Lib "gdi32" (ByVal hdc As LongPtr, ByVal cjCopy As Long, potm As OUTLINETEXTMETRICW) As Long
Public DeclareWide PtrSafe Function GetOutlineTextMetrics Lib "gdi32" Alias "GetOutlineTextMetricsW" (ByVal hdc As LongPtr, ByVal cjCopy As Long, potm As OUTLINETEXTMETRIC) As Long
Public Declare PtrSafe Function TextOutA Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal lpString As String, ByVal c As Long) As BOOL
Public Declare PtrSafe Function TextOutW Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal lpString As LongPtr, ByVal c As Long) As BOOL
Public DeclareWide PtrSafe Function TextOut Lib "gdi32" Alias "TextOutW" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal lpString As String, ByVal c As Long) As BOOL
Public Declare PtrSafe Function SetTextAlign Lib "gdi32" (ByVal hDC As LongPtr, ByVal align As GdiTextAlign) As GdiTextAlign
Public Declare PtrSafe Function GetTextAlign Lib "gdi32" (ByVal hDC As LongPtr) As GdiTextAlign
Public Declare PtrSafe Function ExtTextOutA Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal options As GdiExtTextOutOpts, lprect As RECT, ByVal lpString As String, ByVal c As Long, Optional lpDx As Long) As BOOL
Public Declare PtrSafe Function ExtTextOutW Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal options As GdiExtTextOutOpts, lprect As RECT, ByVal lpString As LongPtr, ByVal c As Long, Optional lpDx As Long) As BOOL
Public DeclareWide PtrSafe Function ExtTextOut Lib "gdi32" Alias "ExtTextOutW" (ByVal hdc As LongPtr, ByVal x As Long, ByVal options As GdiExtTextOutOpts, lprect As RECT, ByVal y As Long, ByVal lpString As String, ByVal c As Long, Optional lpDx As Long) As BOOL
Public Declare PtrSafe Function FloodFill Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal color As Long) As BOOL
Public Declare PtrSafe Function ExtFloodFill Lib "gdi32" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal color As Long, ByVal type As GdiExtFloodFillType) As BOOL
Public Declare PtrSafe Function PolyTextOutA Lib "gdi32" (ByVal hdc As LongPtr, ppt As POLYTEXTA, ByVal nStrings As Long) As BOOL
Public Declare PtrSafe Function PolyTextOutW Lib "gdi32" (ByVal hdc As LongPtr, ppt As POLYTEXTW, ByVal nStrings As Long) As BOOL
Public DeclareWide PtrSafe Function PolyTextOut Lib "gdi32" Alias "PolyTextOutW" (ByVal hdc As LongPtr, ppt As POLYTEXT, ByVal nStrings As Long) As BOOL
Public Declare PtrSafe Function SetTextJustification Lib "gdi32" (ByVal hdc As LongPtr, ByVal extra As Long, ByVal count As Long) As BOOL
Public Declare PtrSafe Function GetTextCharacterExtra Lib "gdi32" (ByVal hdc As LongPtr) As Long
Public Declare PtrSafe Function SetTextCharacterExtra Lib "gdi32" (ByVal hdc As LongPtr, ByVal extra As Long) As Long
Public Declare PtrSafe Function GetTextFaceA Lib "gdi32" (ByVal hdc As LongPtr, ByVal c As Long, ByVal lpName As String) As Long
Public Declare PtrSafe Function GetTextFaceW Lib "gdi32" (ByVal hdc As LongPtr, ByVal c As Long, ByVal lpName As LongPtr) As Long
Public DeclareWide PtrSafe Function GetTextFace Lib "gdi32" Alias "GetTextFaceW" (ByVal hdc As LongPtr, ByVal c As Long, ByVal lpName As String) As Long
Public Declare PtrSafe Function GetCharABCWidthsA Lib "gdi32" (ByVal hdc As LongPtr, ByVal wFirst As Long, ByVal wLast As Long, lpABC As ABC) As BOOL
Public Declare PtrSafe Function GetCharABCWidthsW Lib "gdi32" (ByVal hdc As LongPtr, ByVal wFirst As Long, ByVal wLast As Long, lpABC As ABC) As BOOL
Public DeclareWide PtrSafe Function GetCharABCWidths Lib "gdi32" Alias "GetCharABCWidthsW" (ByVal hdc As LongPtr, ByVal wFirst As Long, ByVal wLast As Long, lpABC As ABC) As BOOL
Public Declare PtrSafe Function GetCharABCWidthsFloatA Lib "gdi32" (ByVal hdc As LongPtr, ByVal wFirst As Long, ByVal wLast As Long, lpABC As ABCFLOAT) As BOOL
Public Declare PtrSafe Function GetCharABCWidthsFloatW Lib "gdi32" (ByVal hdc As LongPtr, ByVal wFirst As Long, ByVal wLast As Long, lpABC As ABCFLOAT) As BOOL
Public DeclareWide PtrSafe Function GetCharABCWidthsFloat Lib "gdi32" Alias "GetCharABCWidthsFloatW" (ByVal hdc As LongPtr, ByVal wFirst As Long, ByVal wLast As Long, lpABC As ABCFLOAT) As BOOL
Public Declare PtrSafe Function GetCharABCWidthsI Lib "gdi32" (ByVal hdc As LongPtr, ByVal giFirst As Long, ByVal cgi As Long, pgi As Integer, lpABC As ABC) As BOOL
[Description("This function is provided only for compatibility with 16-bit versions of Windows. Applications should call the GetCharWidth32 function, which provides more accurate results.")]
Public Declare PtrSafe Function GetCharWidthA Lib "gdi32" (ByVal hdc As LongPtr, ByVal iFirst As Long, ByVal iLast As Long, lpBuffer As Long) As BOOL
[Description("This function is provided only for compatibility with 16-bit versions of Windows. Applications should call the GetCharWidth32 function, which provides more accurate results.")]
Public Declare PtrSafe Function GetCharWidthW Lib "gdi32" (ByVal hdc As LongPtr, ByVal iFirst As Long, ByVal iLast As Long, lpBuffer As Long) As BOOL
[Description("This function is provided only for compatibility with 16-bit versions of Windows. Applications should call the GetCharWidth32 function, which provides more accurate results.")]
Public DeclareWide PtrSafe Function GetCharWidth Lib "gdi32" Alias "GetCharWidthW" (ByVal hdc As LongPtr, ByVal iFirst As Long, ByVal iLast As Long, lpBuffer As Long) As BOOL
Public Declare PtrSafe Function GetCharWidthI Lib "gdi32" (ByVal hdc As LongPtr, ByVal giFirst As Long, ByVal cgi As Long, pgi As Integer, piWidths As Long) As BOOL
Public Declare PtrSafe Function GetCharWidthFloatA Lib "gdi32" (ByVal hdc As LongPtr, ByVal iFirst As Long, ByVal iLast As Long, lpBuffer As Single) As BOOL
Public Declare PtrSafe Function GetCharWidthFloatW Lib "gdi32" (ByVal hdc As LongPtr, ByVal iFirst As Long, ByVal iLast As Long, lpBuffer As Single) As BOOL
Public DeclareWide PtrSafe Function GetCharWidthFloat Lib "gdi32" Alias "GetCharWidthFloatW" (ByVal hdc As LongPtr, ByVal iFirst As Long, ByVal iLast As Long, lpBuffer As Single) As BOOL
Public Declare PtrSafe Function GetCharWidth32A Lib "gdi32" (ByVal hdc As LongPtr, ByVal iFirst As Long, ByVal iLast As Long, lpBuffer As Long) As BOOL
Public Declare PtrSafe Function GetCharWidth32W Lib "gdi32" (ByVal hdc As LongPtr, ByVal iFirst As Long, ByVal iLast As Long, lpBuffer As Long) As BOOL
Public DeclareWide PtrSafe Function GetCharWidth32 Lib "gdi32" Alias "GetCharWidth32W" (ByVal hdc As LongPtr, ByVal iFirst As Long, ByVal iLast As Long, lpBuffer As Long) As BOOL


Public Declare PtrSafe Function LPtoDP Lib "gdi32" (ByVal hdc As LongPtr, lppt As POINT, ByVal c As Long) As BOOL
Public Declare PtrSafe Function DPtoLP Lib "gdi32" (ByVal hdc As LongPtr, lppt As POINT, ByVal c As Long) As BOOL

Public Declare PtrSafe Function CloseEnhMetaFile Lib "gdi32" (ByVal hdc As LongPtr) As LongPtr
Public Declare PtrSafe Function CopyEnhMetaFileA Lib "gdi32" (ByVal hEnh As LongPtr, ByVal lpFileName As String) As LongPtr
Public Declare PtrSafe Function CopyEnhMetaFileW Lib "gdi32" (ByVal hEnh As LongPtr, ByVal lpFileName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CopyEnhMetaFile Lib "gdi32" Alias "CopyEnhMetaFileW" (ByVal hEnh As LongPtr, ByVal lpFileName As String) As LongPtr
Public Declare PtrSafe Function CreateEnhMetaFileA Lib "gdi32" (ByVal hdc As LongPtr, ByVal lpFilename As String, lprc As RECT, ByVal lpDesc As String) As LongPtr
Public Declare PtrSafe Function CreateEnhMetaFileW Lib "gdi32" (ByVal hdc As LongPtr, ByVal lpFilename As LongPtr, lprc As RECT, ByVal lpDesc As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function CreateEnhMetaFile Lib "gdi32" Alias "CreateEnhMetaFileW" (ByVal hdc As LongPtr, ByVal lpFilename As String, lprc As RECT, ByVal lpDesc As String) As LongPtr
Public Declare PtrSafe Function DeleteEnhMetaFile Lib "gdi32" (ByVal hmf As LongPtr) As Boolean
Public Declare PtrSafe Function EnumEnhMetaFile Lib "gdi32" (ByVal hdc As LongPtr, ByVal hmf As LongPtr, ByVal proc As LongPtr, param As Any, lprc As RECT) As Boolean
Public Declare PtrSafe Function GetEnhMetaFileA Lib "gdi32" (ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function GetEnhMetaFileW Lib "gdi32" (ByVal lpName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function GetEnhMetaFile Lib "gdi32" Alias "GetEnhMetaFileW" (ByVal lpName As String) As LongPtr
Public Declare PtrSafe Function GetEnhMetaFileBits Lib "gdi32" (ByVal hEMF As LongPtr, ByVal nSize As Long, ByVal lpData As LongPtr) As Long
Public Declare PtrSafe Function GetEnhMetaFileDescriptionA Lib "gdi32" (ByVal hemf As LongPtr, ByVal cchBuffer As Long, ByVal lpDescription As String) As Long
Public Declare PtrSafe Function GetEnhMetaFileDescriptionW Lib "gdi32" (ByVal hemf As LongPtr, ByVal cchBuffer As Long, ByVal lpDescription As LongPtr) As Long
Public Declare PtrSafe Function GetEnhMetaFileHeader Lib "gdi32" (ByVal hemf As LongPtr, ByVal nSize As Long, ByVal lpEnhMetaHeader As LongPtr) As Long
Public Declare PtrSafe Function GetEnhMetaFilePaletteEntries Lib "gdi32" (ByVal hemf As LongPtr, ByVal nNumEntries As Long, ByVal lpPaletteEntries As LongPtr) As Long
Public Declare PtrSafe Function GetEnhMetaFilePixelFormat Lib "gdi32" (ByVal hemf As LongPtr, ByVal cbBuffer As Long, ByRef ppfd As PIXELFORMATDESCRIPTOR) As Long
Public Declare PtrSafe Function GetWinMetaFileBits Lib "gdi32" (ByVal hemf As LongPtr, ByVal cbData16 As Long, ByVal pData16 As LongPtr, ByVal iMapMode As Long, ByVal hdcRef As LongPtr) As Long
Public Declare PtrSafe Function PlayEnhMetaFile Lib "gdi32" (ByVal hdc As LongPtr, ByVal hmf As LongPtr, ByRef lprect As RECT) As Long
Public Declare PtrSafe Function PlayEnhMetaFileRecord Lib "gdi32" (ByVal hdc As LongPtr, ByVal pht As LongPtr, ByVal pmr As LongPtr, ByVal cht As Long) As Long
Public Declare PtrSafe Function SetEnhMetaFileBits Lib "gdi32" (ByVal nSize As Long, ByVal pb As LongPtr) As LongPtr
Public Declare PtrSafe Function SetWinMetaFileBits Lib "gdi32" (ByVal nSize As Long, ByVal lpMeta16Data As LongPtr, ByVal hdcRef As LongPtr, ByRef lpMFP As METAFILEPICT) As LongPtr
Public Declare PtrSafe Function GdiComment Lib "gdi32" (ByVal hdc As LongPtr, ByVal nSize As Long, ByVal lpData As LongPtr) As Long

Public Const ENHMETA_SIGNATURE       = &H20454D46
Public Type ENHMETAHEADER
    iType As Long ' Record typeEMR_HEADER
    nSize As Long ' Record size in bytes.  This may be greater
    ' than the sizeof(ENHMETAHEADER).
    rclBounds As RECT ' Inclusive-inclusive bounds in device units
    rclFrame As RECT ' Inclusive-inclusive Picture Frame of metafile in .01 mm units
    dSignature As Long ' Signature.  Must be ENHMETA_SIGNATURE.
    nVersion As Long ' Version number
    nBytes As Long ' Size of the metafile in bytes
    nRecords As Long ' Number of records in the metafile
    nHandles As Integer ' Number of handles in the handle table
    ' Handle index zero is reserved.
    sReserved As Integer ' Reserved.  Must be zero.
    nDescription As Long ' Number of chars in the unicode description string
    ' This is 0 if there is no description string
    offDescription As Long ' Offset to the metafile description record.
    ' This is 0 if there is no description string
    nPalEntries As Long ' Number of entries in the metafile palette.
    szlDevice As SIZE ' Size of the reference device in pels
    szlMillimeters As SIZE ' Size of the reference device in millimeters
    '#if(WINVER >= 0x0400)
    cbPixelFormat As Long ' Size of PIXELFORMATDESCRIPTOR information
    ' This is 0 if no pixel format is set
    offPixelFormat As Long ' Offset to PIXELFORMATDESCRIPTOR
    ' This is 0 if no pixel format is set
    bOpenGL As Long ' TRUE if OpenGL commands are present in
    ' the metafile, otherwise FALSE
    '#endif /* WINVER >= 0x0400 */
    '#if(WINVER >= 0x0500)
    szlMicrometers As SIZE ' Size of the reference device in micrometers
    '#endif /* WINVER >= 0x0500 */
End Type
Public Type METAFILEPICT
    mm As MappingModes
    xExt As Long
    yExt As Long
    hMF As LongPtr
End Type


Public Type GRADIENT_TRIANGLE
	Vertex1 As Long
	Vertex2 As Long
	Vertex3 As Long
End Type
Public Type GRADIENT_RECT
	UpperLeft As Long
	LowerRight As Long
End Type

[Description("NOTE: The last param of this API is ByVal BLENDFUNCTION; copy that 4-byte UDT to a Long, then pass that long. Do not pass a pointer.")]
Public Declare PtrSafe Function GdiAlphaBlend Lib "gdi32" (ByVal hdcDest As LongPtr, ByVal xoriginDest As Long, ByVal yoriginDest As Long, ByVal wDest As Long, ByVal hDest As Long, ByVal hdcSrc As LongPtr, ByVal xoriginSrc As Long, ByVal yoriginSrc As Long, ByVal wSrc As Long, ByVal hSrc As Long, ByVal ftn As Long) As BOOL
Public Declare PtrSafe Function GdiTransparentBlt Lib "gdi32" (ByVal hdcDest As LongPtr, ByVal xoriginDest As Long, ByVal yoriginDest As Long, ByVal wDest As Long, ByVal hDest As Long, ByVal hdcSrc As LongPtr, ByVal xoriginSrc As Long, ByVal yoriginSrc As Long, ByVal wSrc As Long, ByVal hSrc As Long, ByVal crTransparent As Long) As BOOL
Public Declare PtrSafe Function GdiGradientFill Lib "gdi32" (ByVal hdc As LongPtr, pVertex As TRIVERTEX, ByVal nVertex As Long, pMesh As Any, ByVal nMesh As Long, ByVal ulMode As GradientDrawingMode) As BOOL


Public Declare PtrSafe Function StartDocA Lib "gdi32" (ByVal hDC As LongPtr, lpdi As DOCINFOA) As Long
Public Declare PtrSafe Function StartDocW Lib "gdi32" (ByVal hDC As LongPtr, lpdi As DOCINFOW) As Long
Public DeclareWide PtrSafe Function StartDoc Lib "gdi32" Alias "StartDocW" (ByVal hDC As LongPtr, lpdi As DOCINFO) As Long
Public Declare PtrSafe Function EndDoc Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function StartPage Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function EndPage Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function AbortDoc Lib "gdi32" (ByVal hDC As LongPtr) As Long
Public Declare PtrSafe Function SetAbortProc Lib "gdi32" (ByVal hDC As LongPtr, ByVal proc As LongPtr) As Long


Public Enum DocInfoTypes
	DI_APPBANDING = &H00000001
	DI_ROPS_READ_DESTINATION = &H00000002
End Enum
Public Type DOCINFOA
	cbSize As Long
	lpszDocName As String
	lpszOutput As String
	lpszDatatype As String
	fwType As DocInfoTypes
End Type
Public Type DOCINFOW
    cbSize As Long
    lpszDocName As LongPtr
    lpszOutput As LongPtr
    lpszDatatype As LongPtr
    fwType As DocInfoTypes
End Type
Public Type DOCINFO
    cbSize As Long
    lpszDocName As LongPtr
    lpszOutput As LongPtr
    lpszDatatype As LongPtr
    fwType As DocInfoTypes
End Type
Public Enum D3DKMT_SCHEDULINGPRIORITYCLASS
	D3DKMT_SCHEDULINGPRIORITYCLASS_IDLE = 0
	D3DKMT_SCHEDULINGPRIORITYCLASS_BELOW_NORMAL = 1
	D3DKMT_SCHEDULINGPRIORITYCLASS_NORMAL = 2
	D3DKMT_SCHEDULINGPRIORITYCLASS_ABOVE_NORMAL = 3
	D3DKMT_SCHEDULINGPRIORITYCLASS_HIGH = 4
	D3DKMT_SCHEDULINGPRIORITYCLASS_REALTIME = 5
End Enum


Public Enum GetDevCaps_Index
	DRIVERVERSION = 0  ' Device driver version                    */
	TECHNOLOGY = 2  ' Device classification                    */
	HORZSIZE = 4  ' Horizontal size in millimeters           */
	VERTSIZE = 6  ' Vertical size in millimeters             */
	HORZRES = 8  ' Horizontal width in pixels               */
	VERTRES = 10  ' Vertical height in pixels                */
	BITSPIXEL = 12  ' Number of bits per pixel                 */
	PLANES = 14  ' Number of planes                         */
	NUMBRUSHES = 16  ' Number of brushes the device has         */
	NUMPENS = 18  ' Number of pens the device has            */
	NUMMARKERS = 20  ' Number of markers the device has         */
	NUMFONTS = 22  ' Number of fonts the device has           */
	NUMCOLORS = 24  ' Number of colors the device supports     */
	PDEVICESIZE = 26  ' Size required for device descriptor      */
	CURVECAPS = 28  ' Curve capabilities                       */
	LINECAPS = 30  ' Line capabilities                        */
	POLYGONALCAPS = 32  ' Polygonal capabilities                   */
	TEXTCAPS = 34  ' Text capabilities                        */
	CLIPCAPS = 36  ' Clipping capabilities                    */
	RASTERCAPS = 38  ' Bitblt capabilities                      */
	ASPECTX = 40  ' Length of the X leg                      */
	ASPECTY = 42  ' Length of the Y leg                      */
	ASPECTXY = 44  ' Length of the hypotenuse                 */
	LOGPIXELSX = 88  ' Logical pixels/inch in X                 */
	LOGPIXELSY = 90  ' Logical pixels/inch in Y                 */
	SIZEPALETTE = 104  ' Number of entries in physical palette    */
	NUMRESERVED = 106  ' Number of reserved entries in palette    */
	COLORRES = 108  ' Actual color resolution                  */
'  Printing related DeviceCaps. These replace the appropriate Escapes
	PHYSICALWIDTH = 110  ' Physical Width in device units           */
	PHYSICALHEIGHT = 111  ' Physical Height in device units          */
	PHYSICALOFFSETX = 112  ' Physical Printable Area x margin         */
	PHYSICALOFFSETY = 113  ' Physical Printable Area y margin         */
	SCALINGFACTORX = 114  ' Scaling factor x                         */
	SCALINGFACTORY = 115  ' Scaling factor y                         */
'  Display driver specific
	VREFRESH = 116  ' Current vertical refresh rate of the    */
'  display device (for displays only) in Hz*/
	DESKTOPVERTRES = 117  ' Horizontal width of entire desktop in   */
'  pixels                                  */
	DESKTOPHORZRES = 118  ' Vertical height of entire desktop in    */
'  pixels                                  */
	BLTALIGNMENT = 119  ' Preferred blt alignment                 */
	SHADEBLENDCAPS = 120  ' Shading and blending caps               */
	COLORMGMTCAPS = 121  ' Color Management caps                   */
End Enum
'  Device Capability Masks: */
'  Device Technologies */
Public Enum DeviceTechnologies
	DT_PLOTTER = 0  ' Vector plotter                   */
	DT_RASDISPLAY = 1  ' Raster display                   */
	DT_RASPRINTER = 2  ' Raster printer                   */
	DT_RASCAMERA = 3  ' Raster camera                    */
	DT_CHARSTREAM = 4  ' Character-stream, PLP            */
	DT_METAFILE = 5  ' Metafile, VDM                    */
	DT_DISPFILE = 6  ' Display-file                     */
End Enum

'  Curve Capabilities */
Public Enum CurveCapabilities
	CC_NONE = 0  ' Curves not supported             */
	CC_CIRCLES = 1  ' Can do circles                   */
	CC_PIE = 2  ' Can do pie wedges                */
	CC_CHORD = 4  ' Can do chord arcs                */
	CC_ELLIPSES = 8  ' Can do ellipese                  */
	CC_WIDE = 16  ' Can do wide lines                */
	CC_STYLED = 32  ' Can do styled lines              */
	CC_WIDESTYLED = 64  ' Can do wide styled lines         */
	CC_INTERIORS = 128  ' Can do interiors                 */
	CC_ROUNDRECT = 256  '                                  */
End Enum
'  Line Capabilities */
Public Enum LineCapabilities
	LC_NONE = 0  ' Lines not supported              */
	LC_POLYLINE = 2  ' Can do polylines                 */
	LC_MARKER = 4  ' Can do markers                   */
	LC_POLYMARKER = 8  ' Can do polymarkers               */
	LC_WIDE = 16  ' Can do wide lines                */
	LC_STYLED = 32  ' Can do styled lines              */
	LC_WIDESTYLED = 64  ' Can do wide styled lines         */
	LC_INTERIORS = 128  ' Can do interiors                 */
End Enum
'  Polygonal Capabilities */
Public Enum PolygonCapabilities
	PC_NONE = 0  ' Polygonals not supported         */
	PC_POLYGON = 1  ' Can do polygons                  */
	PC_RECTANGLE = 2  ' Can do rectangles                */
	PC_WINDPOLYGON = 4  ' Can do winding polygons          */
	PC_TRAPEZOID = 4  ' Can do trapezoids                */
	PC_SCANLINE = 8  ' Can do scanlines                 */
	PC_WIDE = 16  ' Can do wide borders              */
	PC_STYLED = 32  ' Can do styled borders            */
	PC_WIDESTYLED = 64  ' Can do wide styled borders       */
	PC_INTERIORS = 128  ' Can do interiors                 */
	PC_POLYPOLYGON = 256  ' Can do polypolygons              */
	PC_PATHS = 512  ' Can do paths                     */
End Enum
'  Clipping Capabilities */
Public Enum ClippingCapabilities
	CP_NONE = 0  ' No clipping of output            */
	CP_RECTANGLE = 1  ' Output clipped to rects          */
	CP_REGION = 2  ' obsolete                         */
End Enum
'  Text Capabilities */
Public Enum TextCapabilities
	TC_OP_CHARACTER = &H00000001  ' Can do OutputPrecision   CHARACTER      */
	TC_OP_STROKE = &H00000002  ' Can do OutputPrecision   STROKE         */
	TC_CP_STROKE = &H00000004  ' Can do ClipPrecision     STROKE         */
	TC_CR_90 = &H00000008  ' Can do CharRotAbility    90             */
	TC_CR_ANY = &H00000010  ' Can do CharRotAbility    ANY            */
	TC_SF_X_YINDEP = &H00000020  ' Can do ScaleFreedom      X_YINDEPENDENT */
	TC_SA_DOUBLE = &H00000040  ' Can do ScaleAbility      DOUBLE         */
	TC_SA_INTEGER = &H00000080  ' Can do ScaleAbility      INTEGER        */
	TC_SA_CONTIN = &H00000100  ' Can do ScaleAbility      CONTINUOUS     */
	TC_EA_DOUBLE = &H00000200  ' Can do EmboldenAbility   DOUBLE         */
	TC_IA_ABLE = &H00000400  ' Can do ItalisizeAbility  ABLE           */
	TC_UA_ABLE = &H00000800  ' Can do UnderlineAbility  ABLE           */
	TC_SO_ABLE = &H00001000  ' Can do StrikeOutAbility  ABLE           */
	TC_RA_ABLE = &H00002000  ' Can do RasterFontAble    ABLE           */
	TC_VA_ABLE = &H00004000  ' Can do VectorFontAble    ABLE           */
	TC_RESERVED = &H00008000&
	TC_SCROLLBLT = &H00010000  ' Don't do text scroll with blt           */
End Enum

'  Raster Capabilities */
Public Enum RasterCapabilities
	RC_NONE = 0
	RC_BITBLT = 1  ' Can do standard BLT.             */
	RC_BANDING = 2  ' Device requires banding support  */
	RC_SCALING = 4  ' Device requires scaling support  */
	RC_BITMAP64 = 8  ' Device can support >64K bitmap   */
	RC_GDI20_OUTPUT = &H0010  ' has 2.0 output calls         */
	RC_GDI20_STATE = &H0020
	RC_SAVEBITMAP = &H0040
	RC_DI_BITMAP = &H0080  ' supports DIB to memory       */
	RC_PALETTE = &H0100  ' supports a palette           */
	RC_DIBTODEV = &H0200  ' supports DIBitsToDevice      */
	RC_BIGFONT = &H0400  ' supports >64K fonts          */
	RC_STRETCHBLT = &H0800  ' supports StretchBlt          */
	RC_FLOODFILL = &H1000  ' supports FloodFill           */
	RC_STRETCHDIB = &H2000  ' supports StretchDIBits       */
	RC_OP_DX_OUTPUT = &H4000
	RC_DEVBITS = &H8000&
End Enum

'  Shading and blending caps */
Public Enum ShadeBlendCapabilities
	SB_NONE = &H00000000
	SB_CONST_ALPHA = &H00000001
	SB_PIXEL_ALPHA = &H00000002
	SB_PREMULT_ALPHA = &H00000004
	SB_GRAD_RECT = &H00000010
	SB_GRAD_TRI = &H00000020
End Enum
'  Color Management caps */
Public Enum ColorManagementCapabilities
	CM_NONE = &H00000000
	CM_DEVICE_ICM = &H00000001
	CM_GAMMA_RAMP = &H00000002
	CM_CMYK_COLOR = &H00000004
End Enum
Public Enum SystemPaletteUses
'  constants for Get/SetSystemPaletteUse() */
	SYSPAL_ERROR = 0
	SYSPAL_STATIC = 1
	SYSPAL_NOSTATIC = 2
	SYSPAL_NOSTATIC256 = 3
End Enum
'  constants for CreateDIBitmap */
Public Enum CreateDIBitmapFlags
	CBM_INIT = &H04  ' initialize bitmap */
End Enum

Public Enum GdiBackgroundModes
    TRANSPARENT = 1&
    OPAQUE = 2&
End Enum

Public Enum StockObjects
    WHITE_BRUSH = 0
    LTGRAY_BRUSH = 1
    GRAY_BRUSH = 2
    DKGRAY_BRUSH = 3
    BLACK_BRUSH = 4
    NULL_BRUSH = 5
    HOLLOW_BRUSH = NULL_BRUSH
    WHITE_PEN = 6
    BLACK_PEN = 7
    NULL_PEN = 8
    OEM_FIXED_FONT = 10
    ANSI_FIXED_FONT = 11
    ANSI_VAR_FONT = 12
    SYSTEM_FONT = 13
    DEVICE_DEFAULT_FONT = 14
    DEFAULT_PALETTE = 15
    SYSTEM_FIXED_FONT = 16
    DEFAULT_GUI_FONT = 17
    DC_BRUSH = 18
    DC_PEN = 19
End Enum



Public Enum FontCharset
     ANSI_CHARSET = 0
     DEFAULT_CHARSET = 1
     SYMBOL_CHARSET = 2
     SHIFTJIS_CHARSET = 128
     HANGEUL_CHARSET = 129
     HANGUL_CHARSET = 129
     GB2312_CHARSET = 134
     CHINESEBIG5_CHARSET = 136
     OEM_CHARSET = 255
     JOHAB_CHARSET = 130
     HEBREW_CHARSET = 177
     ARABIC_CHARSET = 178
     GREEK_CHARSET = 161
     TURKISH_CHARSET = 162
     VIETNAMESE_CHARSET = 163
     THAI_CHARSET = 222
     EASTEUROPE_CHARSET = 238
     RUSSIAN_CHARSET = 204

     MAC_CHARSET = 77
     BALTIC_CHARSET = 186
End Enum
Public Enum FONT_FS_FLAGS
    FS_LATIN1 = &H00000001
    FS_LATIN2 = &H00000002
    FS_CYRILLIC = &H00000004
    FS_GREEK = &H00000008
    FS_TURKISH = &H00000010
    FS_HEBREW = &H00000020
    FS_ARABIC = &H00000040
    FS_BALTIC = &H00000080
    FS_VIETNAMESE = &H00000100
    FS_THAI = &H00010000
    FS_JISJAPAN = &H00020000
    FS_CHINESESIMP = &H00040000
    FS_WANSUNG = &H00080000
    FS_CHINESETRAD = &H00100000
    FS_JOHAB = &H00200000
    FS_SYMBOL = &H80000000
End Enum


Public Const DEFAULT_PITCH = 0
Public Const FIXED_PITCH = 1
Public Const VARIABLE_PITCH  = 2
Public Const MONO_FONT  = 8

Public Enum FontFamily
    FF_DONTCARE = 0
    FF_ROMAN = 16
    FF_SWISS = 32
    FF_MODERN = 48
    FF_SCRIPT = 64
    FF_DECORATIVE = 80
End Enum

Public Enum FontOutPrecis
    OUT_DEFAULT_PRECIS = 0
    OUT_STRING_PRECIS = 1
    OUT_CHARACTER_PRECIS = 2
    OUT_STROKE_PRECIS = 3
    OUT_TT_PRECIS = 4
    OUT_DEVICE_PRECIS = 5
    OUT_RASTER_PRECIS = 6
    OUT_TT_ONLY_PRECIS = 7
    OUT_OUTLINE_PRECIS = 8
    OUT_SCREEN_OUTLINE_PRECIS = 9
    OUT_PS_ONLY_PRECIS = 10
End Enum

Public Enum FontClipPrecis
    CLIP_DEFAULT_PRECIS = 0
    CLIP_CHARACTER_PRECIS = 1
    CLIP_STROKE_PRECIS = 2
    CLIP_MASK = &Hf
    CLIP_LH_ANGLES = (1 << 4)
    CLIP_TT_ALWAYS = (2 << 4)
    CLIP_DFA_DISABLE = (4 << 4)
    CLIP_EMBEDDED = (8 << 4)
End Enum
    

Public Const DEFAULT_QUALITY As Byte = (0)
Public Const DRAFT_QUALITY As Byte = (1)
Public Const PROOF_QUALITY As Byte = (2)
Public Const NONANTIALIASED_QUALITY As Byte = (3)
Public Const ANTIALIASED_QUALITY As Byte = (4)
Public Const CLEARTYPE_QUALITY As Byte = (5)
Public Const CLEARTYPE_NATURAL_QUALITY As Byte = (6)

Public Enum TRANSCHARSETINFO_FLAGS
    TCI_SRCCHARSET = 1
    TCI_SRCCODEPAGE = 2
    TCI_SRCFONTSIG = 3
    TCI_SRCLOCALE = &H1000
End Enum

Public Type LOCALESIGNATURE
    lsUsb(0 To 3) As Long
    lsCsbDefault(0 To 1) As Long
    lsCsbSupported(0 To 1) As Long
End Type



Public Declare PtrSafe Function GetTextCharset Lib "gdi32" (ByVal hdc As LongPtr) As FontCharset
Public Declare PtrSafe Function GetTextCharsetInfo Lib "gdi32" (ByVal hdc As LongPtr, lpSig As FONTSIGNATURE, ByVal dwFlags As Long) As FontCharset
Public Declare PtrSafe Function TranslateCharsetInfo Lib "gdi32" (lpSrc As Long, lpCs As CHARSETINFO, ByVal dwFlags As TRANSCHARSETINFO_FLAGS) As BOOL


Public Delegate Function GdiMarshAlloc (ByVal dwSize As Long, ByVal pGdiRef As LongPtr) As LongPtr
Public Delegate Function DDrawMarshCallbackMarshal (ByVal hGdiObj As LongPtr, ByVal pGdiRef As LongPtr, ppDDrawRef As LongPtr) As Long
Public Delegate Function DDrawMarshCallbackUnmarshal (ByVal pData As LongPtr, phdc As LongPtr, ppDDrawRef As LongPtr) As Long
Public Delegate Function DDrawMarshCallbackRelease (ByVal pDDrawRef As LongPtr) As Long

Public Const GDIREGISTERDDRAWPACKETVERSION = 1

' Public Type GDIREGISTERDDRAWPACKET
'     dwSize As Long
'     dwVersion As Long
'     pfnDdMarshal As DDrawMarshCallbackMarshal
'     pfnDdUnmarshal As DDrawMarshCallbackUnmarshal
'     pfnDdRelease As DDrawMarshCallbackRelease
' End Type
Public Type GDIREGISTERDDRAWPACKET
    dwSize As Long
    dwVersion As Long
    pfnDdMarshal As LongPtr
    pfnDdUnmarshal As LongPtr
    pfnDdRelease As LongPtr
End Type


' Public Declare PtrSafe Function GdiRegisterDdraw Lib "gdi32" (pPacket As GDIREGISTERDDRAWPACKET, ppfnGdiAlloc As GdiMarshAlloc) As BOOL
Public Declare PtrSafe Function GdiRegisterDdraw Lib "gdi32" (pPacket As GDIREGISTERDDRAWPACKET, ppfnGdiAlloc As LongPtr) As BOOL
Public Declare PtrSafe Function GdiMarshalSize Lib "gdi32" () As Long
Public Declare PtrSafe Sub GdiMarshal Lib "gdi32" (ByVal dwProcessIdTo As Long, ByVal hGdiObj As LongPtr, pData As Any, ByVal ulFlags As Long)
Public Declare PtrSafe Function GdiUnmarshal Lib "gdi32" (pData As Any, ByVal ulFlags As Long) As LongPtr

#End Region

#Region "opengl"

/*
*************************************************************
OPENGL IS ON HOLD PENDING ALIAS SUPPORT.
All the extant VBx OpenGL I've seen uses NeHe's TLB which makes heavy use of aliases,
and I don't want to break all of that. I considered a TLB dependency, but it's too 
'clumsy. So I'll be waiting for full Alias support in tB for this section.
*************************************************************
*/


Public Type POINTFLOAT
    x As Single
    y As Single
End Type
Public Type GLYPHMETRICSFLOAT
    gmfBlackBoxX As Single
    gmfBlackBoxY As Single
    gmfptGlyphOrigin As POINTFLOAT
    gmfCellIncX As Single
    gmfCellIncY As Single
End Type

Public Enum OGL_LPD_FLAGS
    LPD_DOUBLEBUFFER = &H00000001
    LPD_STEREO = &H00000002
    LPD_SUPPORT_GDI = &H00000010
    LPD_SUPPORT_OPENGL = &H00000020
    LPD_SHARE_DEPTH = &H00000040
    LPD_SHARE_STENCIL = &H00000080
    LPD_SHARE_ACCUM = &H00000100
    LPD_SWAP_EXCHANGE = &H00000200
    LPD_SWAP_COPY = &H00000400
    LPD_TRANSPARENT = &H00001000
End Enum
Public Enum OGL_LPD_TYPES
    LPD_TYPE_RGBA = 0
    LPD_TYPE_COLORINDEX = 1
End Enum
Public Type LAYERPLANEDESCRIPTOR ' lpd
    nSize As Integer
    nVersion As Integer
    dwFlags As OGL_LPD_FLAGS
    /* [ TypeHint(OGL_LPD_TYPES) ] */ iPixelType As Byte
    cColorBits As Byte
    cRedBits As Byte
    cRedShift As Byte
    cGreenBits As Byte
    cGreenShift As Byte
    cBlueBits As Byte
    cBlueShift As Byte
    cAlphaBits As Byte
    cAlphaShift As Byte
    cAccumBits As Byte
    cAccumRedBits As Byte
    cAccumGreenBits As Byte
    cAccumBlueBits As Byte
    cAccumAlphaBits As Byte
    cDepthBits As Byte
    cStencilBits As Byte
    cAuxBuffers As Byte
    iLayerPlane As Byte
    bReserved As Byte
    crTransparent As Long
End Type

Public Enum OGL_SWAP_LB_FLAGS
    WGL_SWAP_MAIN_PLANE = &H00000001
    WGL_SWAP_OVERLAY1 = &H00000002
    WGL_SWAP_OVERLAY2 = &H00000004
    WGL_SWAP_OVERLAY3 = &H00000008
    WGL_SWAP_OVERLAY4 = &H00000010
    WGL_SWAP_OVERLAY5 = &H00000020
    WGL_SWAP_OVERLAY6 = &H00000040
    WGL_SWAP_OVERLAY7 = &H00000080
    WGL_SWAP_OVERLAY8 = &H00000100
    WGL_SWAP_OVERLAY9 = &H00000200
    WGL_SWAP_OVERLAY10 = &H00000400
    WGL_SWAP_OVERLAY11 = &H00000800
    WGL_SWAP_OVERLAY12 = &H00001000
    WGL_SWAP_OVERLAY13 = &H00002000
    WGL_SWAP_OVERLAY14 = &H00004000
    WGL_SWAP_OVERLAY15 = &H00008000&
    WGL_SWAP_UNDERLAY1 = &H00010000
    WGL_SWAP_UNDERLAY2 = &H00020000
    WGL_SWAP_UNDERLAY3 = &H00040000
    WGL_SWAP_UNDERLAY4 = &H00080000
    WGL_SWAP_UNDERLAY5 = &H00100000
    WGL_SWAP_UNDERLAY6 = &H00200000
    WGL_SWAP_UNDERLAY7 = &H00400000
    WGL_SWAP_UNDERLAY8 = &H00800000
    WGL_SWAP_UNDERLAY9 = &H01000000
    WGL_SWAP_UNDERLAY10 = &H02000000
    WGL_SWAP_UNDERLAY11 = &H04000000
    WGL_SWAP_UNDERLAY12 = &H08000000
    WGL_SWAP_UNDERLAY13 = &H10000000
    WGL_SWAP_UNDERLAY14 = &H20000000
    WGL_SWAP_UNDERLAY15 = &H40000000
End Enum
Public Type WGLSWAP
    hdc As LongPtr
    uiFlags As OGL_SWAP_LB_FLAGS
End Type

Public Enum OGL_UFO_FMT
    WGL_FONT_LINES = 0
    WGL_FONT_POLYGONS = 1
End Enum

Public Enum OGL_ATTR_MASK
    GL_CURRENT_BIT = &H00000001
    GL_POINT_BIT = &H00000002
    GL_LINE_BIT = &H00000004
    GL_POLYGON_BIT = &H00000008
    GL_POLYGON_STIPPLE_BIT = &H00000010
    GL_PIXEL_MODE_BIT = &H00000020
    GL_LIGHTING_BIT = &H00000040
    GL_FOG_BIT = &H00000080
    GL_DEPTH_BUFFER_BIT = &H00000100
    GL_ACCUM_BUFFER_BIT = &H00000200
    GL_STENCIL_BUFFER_BIT = &H00000400
    GL_VIEWPORT_BIT = &H00000800
    GL_TRANSFORM_BIT = &H00001000
    GL_ENABLE_BIT = &H00002000
    GL_COLOR_BUFFER_BIT = &H00004000
    GL_HINT_BIT = &H00008000&
    GL_EVAL_BIT = &H00010000
    GL_LIST_BIT = &H00020000
    GL_TEXTURE_BIT = &H00040000
    GL_SCISSOR_BIT = &H00080000
    GL_ALL_ATTRIB_BITS = &H000fffff
End Enum

Public Enum OGL_ERROR_CODE
    GL_NO_ERROR = 0
    GL_INVALID_ENUM = &H0500
    GL_INVALID_VALUE = &H0501
    GL_INVALID_OPERATION = &H0502
    GL_STACK_OVERFLOW = &H0503
    GL_STACK_UNDERFLOW = &H0504
    GL_OUT_OF_MEMORY = &H0505
End Enum

Public Enum glAccumConstants
    GL_ACCUM = &H0100
    GL_LOAD = &H0101
    GL_RETURN = &H0102
    GL_MULT = &H0103
    GL_ADD = &H0104
End Enum

'Declare PtrSafe Sub glTexImage2D Lib "OPENGL32" (ByVal target As glenum, ByVal level As GLint, ByVal internalFormat As GLint, ByVal width As GLsizei, ByVal height As GLsizei, ByVal border As GLint, ByVal format As GLenum, ByVal Type As GLenum, pixels As GLvoid)

[Description("Copies selected groups of rendering states from one OpenGL rendering context to another")]
Public Declare PtrSafe Function wglCopyContext Lib "opengl32" (ByVal hrcSrvSrc As LongPtr, ByVal hrcSrvDst As Long, ByVal fuFlags As OGL_ATTR_MASK) As BOOL
[Description("creates a new OpenGL rendering context, which is suitable for drawing on the device referenced by hdc")]
Public Declare PtrSafe Function wglCreateContext Lib "opengl32" (ByVal hdc As LongPtr) As LongPtr
[Description("creates a new OpenGL rendering context for drawing to a specified layer plane on a device context")]
Public Declare PtrSafe Function wglCreateLayerContext Lib "opengl32" (ByVal hdc As LongPtr, ByVal iLayerPlane As Long) As LongPtr
[Description("deletes a specified OpenGL rendering context")]
Public Declare PtrSafe Function wglDeleteContext Lib "opengl32" (ByVal hrcSrv As LongPtr) As BOOL
[Description("obtains information about the layer planes of a given pixel format")]
Public Declare PtrSafe Function wglDescribeLayerPlane Lib "opengl32" (ByVal hdc As LongPtr, ByVal iPixelFormat As Long, ByVal iLayerPlane As Long, ByVal nBytes As Long, ByRef plpd As LAYERPLANEDESCRIPTOR) As Long
[Description("obtains a handle to the current OpenGL rendering context of the calling thread")]
Public Declare PtrSafe Function wglGetCurrentContext Lib "opengl32" () As LongPtr
[Description("obtains a handle to the device context that is associated with the current OpenGL rendering context of the calling thread")]
Public Declare PtrSafe Function wglGetCurrentDC Lib "opengl32" () As LongPtr
[Description("retrieves the palette entries from a given color-index layer plane for a specified device context")]
Public Declare PtrSafe Function wglGetLayerPaletteEntries Lib "opengl32" (ByVal hdc As LongPtr, ByVal iLayerPlane As Long, ByVal iStart As Long, ByVal cEntries As Long, ByRef pcr As Long) As Long
[Description("returns the address of an OpenGL extension function for use with the current OpenGL rendering context")]
Public Declare PtrSafe Function wglGetProcAddress Lib "opengl32" (ByVal lpszProc As String /* ANSI */) As LongPtr
[Description("makes a specified OpenGL rendering context the calling thread's current rendering context")]
Public Declare PtrSafe Function wglMakeCurrent Lib "opengl32" (ByVal hdc As LongPtr, ByVal hglrc As LongPtr) As Long
[Description("maps palette entries from a given color-index layer plane into the physical palette or initializes the palette of an RGBA layer plane")]
Public Declare PtrSafe Function wglRealizeLayerPalette Lib "opengl32" (ByVal hdc As LongPtr, ByVal iLayerPlane As Long, ByVal bRealize As BOOL) As BOOL
[Description("sets the palette entries in a given color-index layer plane for a specified device context")]
Public Declare PtrSafe Function wglSetLayerPaletteEntries Lib "opengl32" (ByVal hdc As LongPtr, ByVal iLayerPlane As Long, ByVal iStart As Long, ByVal cEntries As Long, ByRef pcr As Long) As Long
[Description("enables multiple OpenGL rendering contexts to share a single display-list space")]
Public Declare PtrSafe Function wglShareLists Lib "opengl32" (ByVal hrcSource As LongPtr, ByVal hrcShare As LongPtr) As BOOL
[Description("swaps the front and back buffers in the overlay, underlay, and main planes of the window referenced by a specified device context")]
Public Declare PtrSafe Function wglSwapLayerBuffers Lib "opengl32" (ByVal hdc As LongPtr, ByVal fuPlanes As Long) As Long
Public Declare PtrSafe Function wglSwapMultipleBuffers Lib "opengl32" (ByVal cBuffers As Long, ByRef pwswapAll As WGLSWAP) As Long
Public Declare PtrSafe Function wglUseFontBitmaps Lib "opengl32" Alias "wglUseFontBitmapsW" (ByVal hdc As LongPtr, ByVal first As Long, ByVal count As Long, ByVal listBase As Long) As Long
Public Declare PtrSafe Function wglUseFontBitmapsA Lib "opengl32" (ByVal hdc As LongPtr, ByVal first As Long, ByVal count As Long, ByVal listBase As Long) As Long
Public Declare PtrSafe Function wglUseFontBitmapsW Lib "opengl32" (ByVal hdc As LongPtr, ByVal first As Long, ByVal count As Long, ByVal listBase As Long) As Long
Public Declare PtrSafe Function wglUseFontOutlines Lib "opengl32" Alias "wglUseFontOutlinesW" (ByVal hdc As LongPtr, ByVal first As Long, ByVal count As Long, ByVal listBase As Long, ByVal chordalDeviation As Single, ByVal extrusion As Single, ByVal format As OGL_UFO_FMT, ByRef lpgmf As GLYPHMETRICSFLOAT) As Long
Public Declare PtrSafe Function wglUseFontOutlinesA Lib "opengl32" (ByVal hdc As LongPtr, ByVal first As Long, ByVal count As Long, ByVal listBase As Long, ByVal chordalDeviation As Single, ByVal extrusion As Single, ByVal format As OGL_UFO_FMT, ByRef lpgmf As GLYPHMETRICSFLOAT) As Long
Public Declare PtrSafe Function wglUseFontOutlinesW Lib "opengl32" (ByVal hdc As LongPtr, ByVal first As Long, ByVal count As Long, ByVal listBase As Long, ByVal chordalDeviation As Single, ByVal extrusion As Single, ByVal format As OGL_UFO_FMT, ByRef lpgmf As GLYPHMETRICSFLOAT) As Long



#End Region

#Region "propsys"

Public Enum PKA_FLAGS
	PKA_SET = 0
	PKA_APPEND = 1
	PKA_DELETE = 2
End Enum

Public Enum PROPVAR_COMPARE_UNIT
	PVCU_DEFAULT = 0
	PVCU_SECOND = 1
	PVCU_MINUTE = 2
	PVCU_HOUR = 3
	PVCU_DAY = 4
	PVCU_MONTH = 5
	PVCU_YEAR = 6
End Enum

Public Enum PROPVAR_COMPARE_FLAGS
	PVCF_DEFAULT = &H00000000 ' When comparing strings, use StrCmpLogical
	PVCF_TREATEMPTYASGREATERTHAN = &H00000001 ' Empty/null valueMonitorInfoAs are greater-than non-empty values
	PVCF_USESTRCMP = &H00000002 ' When comparing strings, use StrCmp
	PVCF_USESTRCMPC = &H00000004 ' When comparing strings, use StrCmpC
	PVCF_USESTRCMPI = &H00000008 ' When comparing strings, use StrCmpI
	PVCF_USESTRCMPIC = &H00000010 ' When comparing strings, use StrCmpIC
	PVCF_DIGITSASNUMBERS_CASESENSITIVE = &H00000020 ' When comparing strings, use CompareStringEx with LOCALE_NAME_USER_DEFAULT and SORT_DIGITSASNUMBERS.  This corresponds to the linguistically correct order for UI lists.
End Enum

Public Enum PROPVAR_CHANGE_FLAGS
	PVCHF_DEFAULT = &H00000000
	PVCHF_NOVALUEPROP = &H00000001 ' Maps to VARIANT_NOVALUEPROP for VariantChangeType
	PVCHF_ALPHABOOL = &H00000002 ' Maps to VARIANT_ALPHABOOL for VariantChangeType
	PVCHF_NOUSEROVERRIDE = &H00000004 ' Maps to VARIANT_NOUSEROVERRIDE for VariantChangeType
	PVCHF_LOCALBOOL = &H00000008 ' Maps to VARIANT_LOCALBOOL for VariantChangeType
	PVCHF_NOHEXSTRING = &H00000010 ' Don't convert a string that looks like hexadecimal (0xABCD) to the numerical equivalent
End Enum

Public Enum PSTIME_FLAGS
    PSTF_UTC = &H00000000
    PSTF_LOCAL = &H00000001
End Enum

Public Const PKEY_PIDSTR_MAX  = 10  ' will take care of any long integer value
Public Const GUIDSTRING_MAX  = (1 + 8 + 1 + 4 + 1 + 4 + 1 + 4 + 1 + 12 + 1 + 1)  ' "{12345678-1234-1234-1234-123456789012}"
Public Const PKEYSTR_MAX  = (GUIDSTRING_MAX + 1 + PKEY_PIDSTR_MAX)


  
Public Declare PtrSafe Function InitPropVariantFromResource Lib "propsys" (ByVal hinst As LongPtr, ByVal id As Long, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromBuffer Lib "propsys" (pv As Any, ByVal cb As Long, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromCLSID Lib "propsys" (clsid As UUID, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromGUIDAsString Lib "propsys" (guid As UUID, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromFileTime Lib "propsys" (ft As FILETIME, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromPropVariantVectorElem Lib "propsys" (propvarIn As Variant, ByVal iElem As Long, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantVectorFromPropVariant Lib "propsys" (propvarSingle As Variant, ppropvarVector As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromStrRet Lib "propsys" (pstrret As STRRET, ByVal pidl As LongPtr, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromBooleanVector Lib "propsys" (prgf As BOOL, ByVal cElems As Long, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromInt16Vector Lib "propsys" (prgn As Integer, ByVal cElems As Long, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromUInt16Vector Lib "propsys" (prgn As Integer, ByVal cElems As Long, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromInt32Vector Lib "propsys" (prgn As Long, ByVal cElems As Long, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromUInt32Vector Lib "propsys" (prgn As Long, ByVal cElems As Long, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromInt64Vector Lib "propsys" (prgn As LongLong, ByVal cElems As Long, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromUInt64Vector Lib "propsys" (prgn As LongLong, ByVal cElems As Long, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromDoubleVector Lib "propsys" (prgn As Double, ByVal cElems As Long, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromFileTimeVector Lib "propsys" (prgft As FILETIME, ByVal cElems As Long, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromStringVector Lib "propsys" (prgsz As LongPtr, ByVal cElems As Long, ppropvar As Variant) As Long
Public Declare PtrSafe Function InitPropVariantFromStringAsVector Lib "propsys" (ByVal psz As LongPtr, ppropvar As Variant) As Long

Public Function InitPropVariantFromBoolean(ByVal fVal As BOOL, ppropvar As Variant) As Long
    ppropvar = CVar(IIf(fVal, True, False))
End Function
Public Function InitPropVariantFromInt16(ByVal nVal As Integer, ppropvar As Variant) As Long
    ppropvar = nVal
End Function
[Description("Creates a PROPVARIANT with a VT_UI2 type.")]
Public Function InitPropVariantFromUInt16(ByVal uiVal As Integer, ppropvar As Variant) As Long
If VarPtr(ppropvar) = 0 Then Return E_POINTER
ppropvar = uiVal
Dim vt As Integer = CInt(VT_UI2)
CopyMemory ppropvar, vt, 2    'Overwrite VT_I2 with VT_UI2
End Function
Public Function InitPropVariantFromInt32(ByVal lVal As Long, ppropvar As Variant) As Long
    ppropvar = lVal
End Function
[Description("Creates a PROPVARIANT with a VT_UI4 type.")]
Public Function InitPropVariantFromUInt32(ByVal ulVal As Long, ppropvar As Variant) As Long
If VarPtr(ppropvar) = 0 Then Return E_POINTER
ppropvar = ulVal
Dim vt As Integer = CInt(VT_UI4)
CopyMemory ppropvar, vt, 2    'Overwrite VT_I4 with VT_UI4
End Function
Public Function InitPropVariantFromInt64(ByVal llVal As LongLong, ppropvar As Variant) As Long
    ppropvar = llVal
End Function
[Description("Creates a PROPVARIANT with a VT_UI8 type.")]
Public Function InitPropVariantFromUInt64(ByVal ullVal As LongLong, ppropvar As Variant) As Long
If VarPtr(ppropvar) = 0 Then Return E_POINTER
ppropvar = ullVal
Dim vt As Integer = CInt(VT_UI8)
CopyMemory ppropvar, vt, 2    'Overwrite VT_I8 with VT_UI8
End Function
Public Function InitPropVariantFromDouble(ByVal dblVal As Double, ppropvar As Variant) As Long
    ppropvar = dblVal
End Function
[Description("Creates a PROPVARIANT of type VT_LPWSTR from a tB String")]
Public Function InitPropVariantFromString(psz As String, ppropvar As Variant) As Long
    'This unfortunately isn't as easy as making a VT_BSTR Variant then calling VariantChangeType; that fails.
    If VarPtr(ppropvar) = 0 Then Return E_POINTER
    Dim lpAlloc As LongPtr = CoTaskMemAlloc((lstrlenW(ByVal StrPtr(psz)) + 1) * 2)
    ZeroMemory ByVal lpAlloc, (lstrlenW(ByVal StrPtr(psz)) + 1) * 2
    CopyMemory ByVal lpAlloc, ByVal StrPtr(psz), lstrlenW(ByVal StrPtr(psz)) * 2
    VariantSetType ppropvar, CInt(VT_LPWSTR)
    CopyMemory ByVal PointerAdd(VarPtr(ppropvar), 8), lpAlloc, LenB(Of LongPtr)
    Return S_OK
End Function
Public Function InitPropVariantFromGUIDAsBuffer(g As UUID, ppropvar As Variant) As Long
    Return InitPropVariantFromBuffer(g, LenB(g), ppropvar)
End Function
Public Function IsPropVariantVector(propvar As Variant) As BOOL
    Return CType(Of BOOL)(VarType(propvar) And (VT_ARRAY Or VT_VECTOR))
End Function
Public Function IsPropVariantString(propvar As Variant) As BOOL
    Return CType(Of BOOL)(IIf(PropVariantToStringWithDefault(propvar, vbNullString) <> 0, CFALSE, CTRUE))
End Function
Public Declare PtrSafe Function PropVariantToBooleanWithDefault Lib "propsys" (ByRef propvar As Variant, ByVal lDefault As BOOL) As BOOL
Public Declare PtrSafe Function PropVariantToInt16WithDefault Lib "propsys" (ByRef propvar As Variant, ByVal iDefault As Integer) As Integer
Public Declare PtrSafe Function PropVariantToInt32WithDefault Lib "propsys" (ByRef propvar As Variant, ByVal lDefault As Long) As Long
Public Declare PtrSafe Function PropVariantToInt64WithDefault Lib "propsys" (ByRef propvar As Variant, ByVal llDefault As LongLong) As LongLong
Public Declare PtrSafe Function PropVariantToDoubleWithDefault Lib "propsys" (ByRef propvar As Variant, ByVal dbDefault As Double) As Double
Public DeclareWide PtrSafe Function PropVariantToStringWithDefault Lib "propsys" (ByRef propvar As Variant, ByVal psz As String) As LongPtr
Public Declare PtrSafe Function PropVariantToBoolean Lib "propsys" (ByRef propvar As Variant, plRet As BOOL) As Long
Public Declare PtrSafe Function PropVariantToInt16 Lib "propsys" (ByRef propvar As Variant, piRet As Integer) As Long
Public Declare PtrSafe Function PropVariantToUInt16 Lib "propsys" (ByRef propvar As Variant, puiRet As Integer) As Long
Public Declare PtrSafe Function PropVariantToInt32 Lib "propsys" (ByRef propvar As Variant, plRet As Long) As Long
Public Declare PtrSafe Function PropVariantToUInt32 Lib "propsys" (ByRef propvar As Variant, pulRet As Long) As Long
Public Declare PtrSafe Function PropVariantToInt64 Lib "propsys" (ByRef propvar As Variant, pllRet As LongLong) As Long
Public Declare PtrSafe Function PropVariantToUInt64 Lib "propsys" (ByRef propvar As Variant, pullRet As LongLong) As Long
Public Declare PtrSafe Function PropVariantToDouble Lib "propsys" (ByRef propvar As Variant, pdbRet As Double) As Long
Public DeclareWide PtrSafe Function PropVariantToBuffer Lib "propsys" (ByRef propvar As Variant, pvRet As Any, ByVal cb As Long) As Long
Public DeclareWide PtrSafe Function PropVariantToString Lib "propsys" (ByRef propvar As Variant, ByVal psz As String, ByVal cch As Long) As Long
Public Declare PtrSafe Function PropVariantToGUID Lib "propsys" (ByRef propvar As Variant, pguid As UUID) As Long
[Description("String must be freed with CoTaskMemFree")]
Public DeclareWide PtrSafe Function PropVariantToStringAlloc Lib "propsys" (ByRef propvar1 As Any, ppszOut As LongPtr) As Long
[Description("String must be freed with CoTaskMemFree")]
Public DeclareWide PtrSafe Function PropVariantToBSTR Lib "propsys" (ByRef propvar1 As Any, pbstrOut As String) As Long
Public Declare PtrSafe Function PropVariantToStrRet Lib "propsys" (ByRef propvar As Variant, pstrret As STRRET) As Long
Public Declare PtrSafe Function PropVariantToFileTime Lib "propsys" (ByRef propvar As Variant, ByVal psftOut As PSTIME_FLAGS, pftOut As FILETIME) As Long
Public DeclareWide PtrSafe Function PropVariantToSystemTime Lib "propsys" Alias "#404" (ByRef propvar As Variant, ByVal psftOut As PSTIME_FLAGS, pstOut As SYSTEMTIME) As Long
Public Function PropVariantToCLSID(ByRef propvarIn As Variant, pclsid As UUID) As Long
    Return PropVariantToGUID(propvarIn, pclsid)
End Function
Public Declare PtrSafe Function PropVariantGetElementCount Lib "propsys" (ByRef propvar As Variant) As Long
Public Declare PtrSafe Function PropVariantToBooleanVector Lib "propsys" (ByRef propvar As Variant, prgf As BOOL, ByVal crgf As Long, pcElem As Long) As Long
Public Declare PtrSafe Function PropVariantToInt16Vector Lib "propsys" (ByRef propvar As Variant, prgn As Integer, ByVal crgn As Long, pcElem As Long) As Long
Public Declare PtrSafe Function PropVariantToUInt16Vector Lib "propsys" (ByRef propvar As Variant, prgn As Integer, ByVal crgn As Long, pcElem As Long) As Long
Public Declare PtrSafe Function PropVariantToInt32Vector Lib "propsys" (ByRef propvar As Variant, prgn As Long, ByVal crgn As Long, pcElem As Long) As Long
Public Declare PtrSafe Function PropVariantToUInt32Vector Lib "propsys" (ByRef propvar As Variant, prgn As Long, ByVal crgn As Long, pcElem As Long) As Long
Public Declare PtrSafe Function PropVariantToInt64Vector Lib "propsys" (ByRef propvar As Variant, prgn As LongLong, ByVal crgn As Long, pcElem As Long) As Long
Public Declare PtrSafe Function PropVariantToUInt64Vector Lib "propsys" (ByRef propvar As Variant, prgn As LongLong, ByVal crgn As Long, pcElem As Long) As Long
Public Declare PtrSafe Function PropVariantToDoubleVector Lib "propsys" (ByRef propvar As Variant, prgn As Double, ByVal crgn As Long, pcElem As Long) As Long
Public Declare PtrSafe Function PropVariantToFileTimeVector Lib "propsys" (ByRef propvar As Variant, prgft As FILETIME, ByVal crgft As Long, pcElem As Long) As Long
Public Declare PtrSafe Function PropVariantToStringVector Lib "propsys" (ByRef propvar As Variant, prgsz As LongPtr, ByVal crgsz As Long, pcElem As Long) As Long
[Description("pprgf must be freed with CoTaskMemFree")]
Public Declare PtrSafe Function PropVariantToBooleanVectorAlloc Lib "propsys" (ByRef propvar As Variant, pprgf As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree")]
Public Declare PtrSafe Function PropVariantToInt16VectorAlloc Lib "propsys" (ByRef propvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree")]
Public Declare PtrSafe Function PropVariantToUInt16VectorAlloc Lib "propsys" (ByRef propvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree")]
Public Declare PtrSafe Function PropVariantToInt32VectorAlloc Lib "propsys" (ByRef propvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree")]
Public Declare PtrSafe Function PropVariantToUInt32VectorAlloc Lib "propsys" (ByRef propvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree")]
Public Declare PtrSafe Function PropVariantToInt64VectorAlloc Lib "propsys" (ByRef propvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree")]
Public Declare PtrSafe Function PropVariantToUInt64VectorAlloc Lib "propsys" (ByRef propvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree")]
Public Declare PtrSafe Function PropVariantToDoubleVectorAlloc Lib "propsys" (ByRef propvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgft must be freed with CoTaskMemFree")]
Public Declare PtrSafe Function PropVariantToFileTimeVectorAlloc Lib "propsys" (ByRef propvar As Variant, pprgft As LongPtr, pcElem As Long) As Long
[Description("pprgsz must be freed with CoTaskMemFree")]
Public Declare PtrSafe Function PropVariantToStringVectorAlloc Lib "propsys" (ByRef propvar As Variant, pprgsz As LongPtr, pcElem As Long) As Long

Public Declare PtrSafe Function PropVariantGetBooleanElem Lib "propsys" (propvar As Variant, ByVal iElem As Long, pfVal As BOOL) As Long
Public Declare PtrSafe Function PropVariantGetInt16Elem Lib "propsys" (propvar As Variant, ByVal iElem As Long, pnVal As Integer) As Long
Public Declare PtrSafe Function PropVariantGetUInt16Elem Lib "propsys" (propvar As Variant, ByVal iElem As Long, pnVal As Integer) As Long
Public Declare PtrSafe Function PropVariantGetInt32Elem Lib "propsys" (propvar As Variant, ByVal iElem As Long, pnVal As Long) As Long
Public Declare PtrSafe Function PropVariantGetUInt32Elem Lib "propsys" (propvar As Variant, ByVal iElem As Long, pnVal As Long) As Long
Public Declare PtrSafe Function PropVariantGetInt64Elem Lib "propsys" (propvar As Variant, ByVal iElem As Long, pnVal As LongLong) As Long
Public Declare PtrSafe Function PropVariantGetUInt64Elem Lib "propsys" (propvar As Variant, ByVal iElem As Long, pnVal As LongLong) As Long
Public Declare PtrSafe Function PropVariantGetDoubleElem Lib "propsys" (propvar As Variant, ByVal iElem As Long, pnVal As Double) As Long
Public Declare PtrSafe Function PropVariantGetFileTimeElem Lib "propsys" (propvar As Variant, ByVal iElem As Long, pftVal As FILETIME) As Long
Public Declare PtrSafe Function PropVariantGetStringElem Lib "propsys" (propvar As Variant, ByVal iElem As Long, ppszVal As LongPtr) As Long

Public Function PropVariantGetElem(propvarIn As Variant, ByVal iElem As Long, ppropvar As Variant) As Long
    Return InitPropVariantFromPropVariantVectorElem(propvarIn, iElem, ppropvar)
End Function

Public Declare PtrSafe Sub ClearPropVariantArray Lib "propsys" (rgPropVar As Variant, ByVal cVars As Long)

Public Declare PtrSafe Function PropVariantCompareEx Lib "propsys" (ByRef propvar1 As Any, ByRef propvar2 As Any, ByVal unit As PROPVAR_COMPARE_UNIT, ByVal Flags As PROPVAR_COMPARE_FLAGS) As Long
Public Function PropVariantCompare(ByRef propvar1 As Variant, ByRef propvar2 As Variant) As Long
    Return PropVariantCompareEx(propvar1, propvar2, PVCU_DEFAULT, PVCF_DEFAULT)
End Function

Public Declare PtrSafe Function PropVariantChangeType Lib "propsys" (ByRef ppropvarDest As Any, ByRef propvarSrc As Any, ByVal Flags As PROPVAR_CHANGE_FLAGS, [TypeHint(VARENUM)] ByVal vt As Integer) As Long
Public Declare PtrSafe Function PropVariantToVariant Lib "propsys" (ByRef propvar As Any, ByRef var As Variant) As Long
Public Declare PtrSafe Function VariantToPropVariant Lib "propsys" (ByRef pvar As Variant, ByRef ppropvar As Variant) As Long
Public Declare PtrSafe Function StgSerializePropVariant Lib "propsys" (ByRef ppropvar As Variant, pprop As LongPtr, pcb As Long) As Long
Public DeclareWide PtrSafe Function StgDeserializePropVariant Lib "propsys" (ByRef pprop As Any, ByVal cbMax As Long, ppropvar As Variant) As Long

Public Function IsVarTypeFloat(ByVal vt As VARENUM) As Boolean: Return (vt = VT_R4 Or vt = VT_R8): End Function
Public Function IsVariantArray(var As Variant) As Boolean: Return CBool(VarType(var) And VT_ARRAY): End Function
Public Function IsVariantString(propvar As Variant) As BOOL
    Return CType(Of BOOL)(IIf(VariantToStringWithDefault(propvar, vbNullString) <> 0, CFALSE, CTRUE))
End Function
Public Function IsVarTypeSignedInteger(ByVal vt As VARENUM) As Boolean
    Select Case vt
        Case VT_I1, VT_I2, VT_I4, VT_I8: Return True
        Case Else: Return False
    End Select
End Function
Public Function IsVarTypeUnsignedInteger(ByVal vt As VARENUM) As Boolean
    Select Case vt
        Case VT_UI1, VT_UI2, VT_UI4, VT_UI8: Return True
        Case Else: Return False
    End Select
End Function
Public Function IsVarTypeInteger(ByVal vt As VARENUM) As Boolean
    Return IsVarTypeSignedInteger(vt) Or IsVarTypeUnsignedInteger(vt)
End Function

Public Declare PtrSafe Function InitVariantFromResource Lib "propsys" (ByVal hinst As LongPtr, ByVal id As Long, pvar As Variant) As Long
Public Declare PtrSafe Function InitVariantFromBuffer Lib "propsys" (pv As Any, ByVal cb As Long, pvar As Variant) As Long
Public Declare PtrSafe Function InitVariantFromGUIDAsString Lib "propsys" (guid As UUID, pvar As Variant) As Long
Public Declare PtrSafe Function InitVariantFromFileTime Lib "propsys" (ft As FILETIME, pvar As Variant) As Long
Public Declare PtrSafe Function InitVariantFromFileTimeArray Lib "propsys" (prgft As FILETIME, ByVal cElems As Long, pvar As Variant) As Long
Public Declare PtrSafe Function InitVariantFromStrRet Lib "propsys" (pstrret As STRRET, ByVal pidl As LongPtr, pvar As Variant) As Long
Public Declare PtrSafe Function InitVariantFromVariantArrayElem Lib "propsys" (varIn As Variant, ByVal iElem As Long, pvar As Variant) As Long
Public Declare PtrSafe Function InitVariantFromBooleanArray Lib "propsys" (prgf As BOOL, ByVal cElems As Long, pvar As Variant) As Long
Public Declare PtrSafe Function InitVariantFromInt16Array Lib "propsys" (prgn As Integer, ByVal cElems As Long, pvar As Variant) As Long
Public Declare PtrSafe Function InitVariantFromUInt16Array Lib "propsys" (prgn As Integer, ByVal cElems As Long, pvar As Variant) As Long
Public Declare PtrSafe Function InitVariantFromInt32Array Lib "propsys" (prgn As Long, ByVal cElems As Long, pvar As Variant) As Long
Public Declare PtrSafe Function InitVariantFromUInt32Array Lib "propsys" (prgn As Long, ByVal cElems As Long, pvar As Variant) As Long
Public Declare PtrSafe Function InitVariantFromInt64Array Lib "propsys" (prgn As LongLong, ByVal cElems As Long, pvar As Variant) As Long
Public Declare PtrSafe Function InitVariantFromUInt64Array Lib "propsys" (prgn As LongLong, ByVal cElems As Long, pvar As Variant) As Long
Public Declare PtrSafe Function InitVariantFromDoubleArray Lib "propsys" (prgn As Double, ByVal cElems As Long, pvar As Variant) As Long
Public Declare PtrSafe Function InitVariantFromStringArray Lib "propsys" (prgsz As LongPtr, ByVal cElems As Long, pvar As Variant) As Long
Public Function InitVariantFromBoolean(ByVal fVal As BOOL, pvar As Variant) As Long
    If VarPtr(pvar) = 0 Then Return E_POINTER
    pvar = CVar(IIf(fVal, True, False))
End Function
Public Function InitVariantFromInt16(ByVal nVal As Integer, pvar As Variant) As Long
    If VarPtr(pvar) = 0 Then Return E_POINTER
    pvar = nVal
End Function
[Description("Creates a VARIANT with a VT_UI2 type.")]
Public Function InitVariantFromUInt16(ByVal uiVal As Integer, pvar As Variant) As Long
If VarPtr(pvar) = 0 Then Return E_POINTER
pvar = uiVal
Dim vt As Integer = CInt(VT_UI2)
CopyMemory pvar, vt, 2    'Overwrite VT_I2 with VT_UI2
End Function
Public Function InitVariantFromInt32(ByVal lVal As Long, pvar As Variant) As Long
    If VarPtr(pvar) = 0 Then Return E_POINTER
    pvar = lVal
End Function
[Description("Creates a VARIANT with a VT_UI4 type.")]
Public Function InitVariantFromUInt32(ByVal ulVal As Long, pvar As Variant) As Long
If VarPtr(pvar) = 0 Then Return E_POINTER
pvar = ulVal
Dim vt As Integer = CInt(VT_UI4)
CopyMemory pvar, vt, 2    'Overwrite VT_I4 with VT_UI4
End Function
Public Function InitVariantFromInt64(ByVal llVal As LongLong, pvar As Variant) As Long
    If VarPtr(pvar) = 0 Then Return E_POINTER
    pvar = llVal
End Function
[Description("Creates a VARIANT with a VT_UI8 type.")]
Public Function InitVariantFromUInt64(ByVal ullVal As LongLong, pvar As Variant) As Long
If VarPtr(pvar) = 0 Then Return E_POINTER
pvar = ullVal
Dim vt As Integer = CInt(VT_UI8)
CopyMemory pvar, vt, 2    'Overwrite VT_I8 with VT_UI8
End Function
Public Function InitVariantFromDouble(ByVal dblVal As Double, pvar As Variant) As Long
    If VarPtr(pvar) = 0 Then Return E_POINTER
    pvar = dblVal
End Function
[Description("Creates a VARIANT of type VT_LPWSTR from a tB String")]
Public Function InitVariantFromString(psz As String, pvar As Variant) As Long
    'This unfortunately isn't as easy as making a VT_BSTR Variant then calling VariantChangeType; that fails.
    If VarPtr(pvar) = 0 Then Return E_POINTER
    Dim lpAlloc As LongPtr = CoTaskMemAlloc((lstrlenW(ByVal StrPtr(psz)) + 1) * 2)
    ZeroMemory ByVal lpAlloc, (lstrlenW(ByVal StrPtr(psz)) + 1) * 2
    CopyMemory ByVal lpAlloc, ByVal StrPtr(psz), lstrlenW(ByVal StrPtr(psz)) * 2
    VariantSetType pvar, CInt(VT_LPWSTR)
    CopyMemory ByVal PointerAdd(VarPtr(pvar), 8), lpAlloc, LenB(Of LongPtr)
    Return S_OK
End Function
Public Function InitVariantFromDispatch(ByVal pdisp As IDispatch, pvar As Variant) As Long
    If VarPtr(pvar) = 0 Then Return E_POINTER
    pvar = pdisp
End Function
Public Function InitVariantFromDosDateTime(ByVal wDate As Integer, ByVal wTime As Integer, pvar As Variant) As Long
    If VarPtr(pvar) = 0 Then Return E_POINTER
    Dim dbl As Double
    If DosDateTimeToVariantTime(wDate, wTime, dbl) Then
        pvar = dbl
        VariantSetType pvar, CInt(VT_DATE)
        Return S_OK
    Else
        Return S_FALSE
    End If
End Function
Public Function InitVariantFromGUIDAsBuffer(g As UUID, pvar As Variant) As Long
    If VarPtr(pvar) = 0 Then Return E_POINTER
    Return InitVariantFromBuffer(g, LenB(g), pvar)
End Function
Public Function InitVariantFromDispatch(ByVal punk As IUnknown, pvar As Variant) As Long
    If VarPtr(pvar) = 0 Then Return E_POINTER
    pvar = punk
    VariantSetType pvar, CInt(VT_UNKNOWN)
End Function
[Description("Converts a pidl into a VT_ARRAY|VT_UI1 SAFEARRAY variant recognized by the shell.")]
Public Function InitVariantFromIDList(pvar As Variant, ByVal pidl As LongPtr) As BOOL
    ' // PARAMETER:
    ' //    pvar - Allocated by caller and filled in by this function.
    ' //    pidl - Allocated by caller and caller needs to free.
    ' //
    ' // This function will take the PIDL parameter and COPY it
    ' // into the Variant data structure.  This allows the pidl
    ' // to be freed and the pvar to be used later, however, it
    ' // is necessary to call VariantClear(pvar) to free memory
    ' // that this function allocates.
    Dim cb As Long = ILGetSize(pidl)
    Dim psa As LongPtr = SafeArrayCreateVector(CInt(VT_UI1), 0, cb)
    If psa Then
        Dim pvData As LongPtr
        CopyMemory pvData, ByVal PointerAdd(psa, 12), LenB(Of LongPtr)
        CopyMemory ByVal pvData, ByVal pidl, cb
        VariantSetType pvar, CInt(VT_ARRAY Or VT_UI1)
        CopyMemory ByVal PointerAdd(VarPtr(pvar), 8), psa, LenB(Of LongPtr)
        Return CTRUE
    Else
        Return CFALSE
    End If
End Function

Public Declare PtrSafe Function VariantToBooleanWithDefault Lib "propsys" (ByRef pvar As Variant, ByVal lDefault As BOOL) As BOOL
Public Declare PtrSafe Function VariantToInt16WithDefault Lib "propsys" (ByRef pvar As Variant, ByVal iDefault As Integer) As Integer
Public Declare PtrSafe Function VariantToInt32WithDefault Lib "propsys" (ByRef pvar As Variant, ByVal lDefault As Long) As Long
Public Declare PtrSafe Function VariantToInt64WithDefault Lib "propsys" (ByRef pvar As Variant, ByVal llDefault As LongLong) As LongLong
Public Declare PtrSafe Function VariantToDoubleWithDefault Lib "propsys" (ByRef pvar As Variant, ByVal dbDefault As Double) As Double
Public DeclareWide PtrSafe Function VariantToStringWithDefault Lib "propsys" (ByRef pvar As Variant, ByVal psz As String) As LongPtr
Public Declare PtrSafe Function VariantToBoolean Lib "propsys" (ByRef pvar As Variant, plRet As BOOL) As Long
Public Declare PtrSafe Function VariantToInt16 Lib "propsys" (ByRef pvar As Variant, piRet As Integer) As Long
Public Declare PtrSafe Function VariantToInt32 Lib "propsys" (ByRef pvar As Variant, plRet As Long) As Long
Public Declare PtrSafe Function VariantToInt64 Lib "propsys" (ByRef pvar As Variant, pllRet As LongLong) As Long
Public Declare PtrSafe Function VariantToDouble Lib "propsys" (ByRef pvar As Variant, pdbRet As Double) As Long
Public DeclareWide PtrSafe Function VariantToString Lib "propsys" (ByRef pvar As Variant, ByVal psz As String, ByVal cch As Long) As Long
Public DeclareWide PtrSafe Function VariantToBuffer Lib "propsys" (ByRef pvar As Variant, pvRet As Any, ByVal cb As Long) As Long
Public Declare PtrSafe Function VariantToGUID Lib "propsys" (ByRef pvar As Variant, pguid As UUID) As Long
[Description("String must be freed with CoTaskMemFree")]
Public Declare PtrSafe Function VariantToStringAlloc Lib "propsys" (ByRef varIn As Variant, ppszBuf As LongPtr) As Long
Public Declare PtrSafe Function VariantToDosDateTime Lib "propsys" (ByRef varIn As Variant, pwDate As Integer, pwTime As Integer) As Long
Public Declare PtrSafe Function VariantToStrRet Lib "propsys" (ByRef varIn As Variant, pstrret As STRRET) As Long
Public Declare PtrSafe Function VariantToFileTime Lib "propsys" (varIn As Variant, ByVal stfOut As Long, pftOut As FILETIME) As Long

Public Declare PtrSafe Function VariantGetElementCount Lib "propsys" (ByRef varIn As Variant) As Long

Public Declare PtrSafe Function VariantToBooleanArray Lib "propsys" (ByRef pvar As Variant, prgn As BOOL, ByVal crgn As Long, pcElem As Long) As Long
Public Declare PtrSafe Function VariantToInt16Array Lib "propsys" (ByRef pvar As Variant, prgn As Integer, ByVal crgn As Long, pcElem As Long) As Long
Public Declare PtrSafe Function VariantToUInt16Array Lib "propsys" (ByRef pvar As Variant, prgn As Integer, ByVal crgn As Long, pcElem As Long) As Long
Public Declare PtrSafe Function VariantToInt32Array Lib "propsys" (ByRef pvar As Variant, prgn As Long, ByVal crgn As Long, pcElem As Long) As Long
Public Declare PtrSafe Function VariantToUInt32Array Lib "propsys" (ByRef pvar As Variant, prgn As Long, ByVal crgn As Long, pcElem As Long) As Long
Public Declare PtrSafe Function VariantToInt64Array Lib "propsys" (ByRef pvar As Variant, prgn As LongLong, ByVal crgn As Long, pcElem As Long) As Long
Public Declare PtrSafe Function VariantToUInt64Array Lib "propsys" (ByRef pvar As Variant, prgn As LongLong, ByVal crgn As Long, pcElem As Long) As Long
Public Declare PtrSafe Function VariantToDoubleArray Lib "propsys" (ByRef pvar As Variant, prgn As Double, ByVal crgn As Long, pcElem As Long) As Long
Public Declare PtrSafe Function VariantToStringArray Lib "propsys" (ByRef pvar As Variant, prgsz As LongPtr, ByVal crgsz As Long, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree")]
Public Declare PtrSafe Function VariantToBooleanArrayAlloc Lib "propsys" (ByRef pvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree")]
Public Declare PtrSafe Function VariantToInt16ArrayAlloc Lib "propsys" (ByRef pvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree")]
Public Declare PtrSafe Function VariantToInt32ArrayAlloc Lib "propsys" (ByRef pvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree")]
Public Declare PtrSafe Function VariantToInt64ArrayAlloc Lib "propsys" (ByRef pvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgn must be freed with CoTaskMemFree")]
Public Declare PtrSafe Function VariantToDoubleArrayAlloc Lib "propsys" (ByRef pvar As Variant, pprgn As LongPtr, pcElem As Long) As Long
[Description("pprgsz must be freed with CoTaskMemFree")]
Public Declare PtrSafe Function VariantToStringArrayAlloc Lib "propsys" (ByRef pvar As Variant, pprgsz As LongPtr, pcElem As Long) As Long

Public Declare PtrSafe Function VariantGetBooleanElem Lib "propsys" (var As Variant, ByVal iElem As Long, pfVal As BOOL) As Long
Public Declare PtrSafe Function VariantGetInt16Elem Lib "propsys" (var As Variant, ByVal iElem As Long, pnVal As Integer) As Long
Public Declare PtrSafe Function VariantGetUInt16Elem Lib "propsys" (var As Variant, ByVal iElem As Long, pnVal As Integer) As Long
Public Declare PtrSafe Function VariantGetInt32Elem Lib "propsys" (var As Variant, ByVal iElem As Long, pnVal As Long) As Long
Public Declare PtrSafe Function VariantGetUInt32Elem Lib "propsys" (var As Variant, ByVal iElem As Long, pnVal As Long) As Long
Public Declare PtrSafe Function VariantGetInt64Elem Lib "propsys" (var As Variant, ByVal iElem As Long, pnVal As LongLong) As Long
Public Declare PtrSafe Function VariantGetUInt64Elem Lib "propsys" (var As Variant, ByVal iElem As Long, pnVal As LongLong) As Long
Public Declare PtrSafe Function VariantGetDoubleElem Lib "propsys" (var As Variant, ByVal iElem As Long, pnVal As Double) As Long
Public Declare PtrSafe Function VariantGetStringElem Lib "propsys" (var As Variant, ByVal iElem As Long, ppszVal As LongPtr) As Long

Public Function VariantGetElem(varIn As Variant, ByVal iElem As Long, pvar As Variant) As Long
    Return InitVariantFromVariantArrayElem(varIn, iElem, pvar)
End Function

Public Declare PtrSafe Sub ClearVariantArray Lib "propsys" (pvars As Variant, ByVal cVars As Long)
Public Declare PtrSafe Function VariantCompare Lib "propsys" (var1 As Variant, var2 As Variant) As Long

Public Enum DRAWPROGRESSFLAGS
    DPF_NONE = &H0 ' No progress flags.
    DPF_MARQUEE = &H1 ' The progress bar should draw in marquee mode.
    DPF_MARQUEE_COMPLETE = &H2 ' The marquee format progress bar has completed.
    DPF_ERROR = &H4 ' The progress bar should be drawn in the error state.
    DPF_WARNING = &H8 ' The progress bar should be drawn in the warning state.
    DPF_STOPPED = &H10 ' The progress bar is stopped.
End Enum

Public Declare PtrSafe Function PSFormatPropertyValue Lib "propsys" (ByVal pps As LongPtr, ByVal ppd As LongPtr, ByVal pdff As PROPDESC_FORMAT_FLAGS, ppszDisplay As LongPtr) As Long
Public Declare PtrSafe Function PSGetNameFromPropertyKey Lib "propsys" (PropKey As PROPERTYKEY, ppszCanonicalName As LongPtr) As Long
Public Declare PtrSafe Function PSGetPropertyDescription Lib "propsys" (PropKey As PROPERTYKEY, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function PSGetPropertyDescriptionByName Lib "propsys" (pszCanonicalName As String, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function PSGetPropertyDescriptionListFromString Lib "propsys" (ByVal pszPropList As LongPtr, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function PSGetPropertyKeyFromName Lib "propsys" (ByVal pszName As LongPtr, ppropkey As PROPERTYKEY) As Long
Public Declare PtrSafe Function PSGetPropertySystem Lib "propsys" (riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function PSFormatForDisplay Lib "propsys" (propkey As PROPERTYKEY, propvar As Variant, ByVal pdfFlags As PROPDESC_FORMAT_FLAGS, ByVal pwszText As LongPtr, ByVal cchText As Long) As Long
Public Declare PtrSafe Function PSFormatForDisplayAlloc Lib "propsys" (propkey As PROPERTYKEY, propvar As Variant, ByVal pdfFlags As PROPDESC_FORMAT_FLAGS, pwszText As LongPtr) As Long
Public DeclareWide PtrSafe Function PSLookupPropertyHandlerCLSID Lib "propsys" (ByVal pszFilePath As String, pclsid As UUID) As Long
Public DeclareWide PtrSafe Function PSCreateMemoryPropertyStore Lib "propsys" (riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function PSCoerceToCanonicalValue Lib "propsys" (key As PROPERTYKEY, ppropvar As Variant) As Long
Public DeclareWide PtrSafe Function PSCreateAdapterFromPropertyStore Lib "propsys" (ByVal pps As IPropertyStore, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function PSCreateDelayedMultiplexPropertyStore Lib "propsys" (ByVal flags As GETPROPERTYSTOREFLAGS, ByVal pdpsf As IDelayedPropertyStoreFactory, rgStoreIds As DPSF_StoreIDs, ByVal cStores As Long, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function PSCreateMultiplexPropertyStore Lib "propsys" (prgpunkStores As IUnknown, ByVal cStores As Long, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function PSCreatePropertyChangeArray Lib "propsys" (rgpropkey As PROPERTYKEY, rgflags As PKA_FLAGS, rgpropvar As Variant, ByVal cChanges As Long, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function PSCreateSimplePropertyChange Lib "propsys" (ByVal flags As PKA_FLAGS, key As PROPERTYKEY, propvar As Variant, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function PSCreatePropertyStoreFromObject Lib "propsys" (ByVal punk As IUnknown, ByVal grfMode As STGM, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function PSGetPropertyValue Lib "propsys" (ByVal pps As IPropertyStore, ByVal ppd As IPropertyDescription, ppropvar As Variant) As Long
Public Declare PtrSafe Function PSSetPropertyValue Lib "propsys" (ByVal pps As IPropertyStore, ByVal ppd As IPropertyDescription, ppropvar As Variant) As Long
Public DeclareWide PtrSafe Function PSEnumeratePropertyDescriptions Lib "propsys" (ByVal filterOn As PROPDESC_ENUMFILTER, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function PSRefreshPropertySchema Lib "propsys" () As Long
Public DeclareWide PtrSafe Function PSRegisterPropertySchema Lib "propsys" (ByVal pszPath As String) As Long
Public DeclareWide PtrSafe Function PSUnregisterPropertySchema Lib "propsys" (ByVal pszPath As String) As Long
Public DeclareWide PtrSafe Function PSGetItemPropertyHandler Lib "propsys" (ByVal punkItem As IUnknown, ByVal fReadWrite As BOOL, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function PSGetItemPropertyHandlerWithCreateObject Lib "propsys" (ByVal punkItem As IUnknown, ByVal fReadWrite As BOOL, ByVal punkCreateObject As IUnknown, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function PSGetImageReferenceForValue Lib "propsys" (propkey As PROPERTYKEY, propvar As Variant, ppszImageRes As LongPtr) As Long
Public DeclareWide PtrSafe Function PSStringFromPropertyKey Lib "propsys" (pkey As PROPERTYKEY, ByVal psz As String, ByVal cch As Long) As Long
Public DeclareWide PtrSafe Function PSPropertyKeyFromString Lib "propsys" (ByVal pszString As String, pkey As PROPERTYKEY) As Long
Public DeclareWide PtrSafe Function PSCreatePropertyStoreFromPropertySetStorage Lib "propsys" (ByVal ppss As IPropertySetStorage, ByVal grfMode As STGM, riid As UUID, ppv As Any) As Long
Public Declare PtrSafe Function PSGetPropertyFromPropertyStorage Lib "propsys" (ByVal psps As LongPtr, ByVal cb As Long, rpkey As PROPERTYKEY, ppropvar As Variant) As Long
Public DeclareWide PtrSafe Function PSGetNamedPropertyFromPropertyStorage Lib "propsys" (ByVal psps As LongPtr, ByVal cb As Long, ByVal pszName As String, ppropvar As Variant) As Long

Public DeclareWide PtrSafe Function PSPropertyBag_ReadType Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, var As Variant, [TypeHint(VARENUM)] ByVal type As Integer) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_ReadStr Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, ByVal value As String, ByVal characterCount As Long) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_ReadStrAlloc Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As LongPtr) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_ReadBSTR Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As String) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_WriteStr Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, ByVal value As String) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_WriteBSTR Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, ByVal value As String) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_ReadInt Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As Long) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_WriteInt Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, ByVal value As Long) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_ReadSHORT Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As Integer) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_WriteSHORT Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, ByVal value As Integer) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_ReadLONG Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As Long) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_WriteLONG Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, ByVal value As Long) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_ReadDWORD Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As Long) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_WriteDWORD Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, ByVal value As Long) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_ReadBOOL Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As BOOL) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_WriteBOOL Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, ByVal value As BOOL) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_ReadPOINTL Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As POINT) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_WritePOINTL Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As POINT) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_ReadPOINTS Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As POINTS) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_WritePOINTS Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As POINTS) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_ReadRECTL Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As RECT) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_WriteRECTL Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As RECT) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_ReadStream Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As IStream) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_WriteStream Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, ByVal value As IStream) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_Delete Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_ReadULONGLONG Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As LongLong) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_WriteULONGLONG Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, ByVal value As LongLong) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_ReadUnknown Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, riid As UUID, ppv As Any) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_WriteUnknown Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, ByVal punk As IUnknown) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_ReadGUID Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As UUID) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_WriteGUID Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As UUID) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_ReadPropertyKey Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As PROPERTYKEY) As Long
Public DeclareWide PtrSafe Function PSPropertyBag_WritePropertyKey Lib "propsys" (ByVal propBag As IPropertyBag, ByVal propName As String, value As PROPERTYKEY) As Long


#End Region

#Region "advapi32"
'advapi32.dll crypto APIs located in wdAPICrypto.twin

Public Type STARTUPINFOA
   cbSize As Long
   lpReserved As LongPtr
   lpDesktop As String
   lpTitle As String
   dwX As Long
   dwY As Long
   dwXSize As Long
   dwYSize As Long
   dwXCountChars As Long
   dwYCountChars As Long
   dwFillAttribute As CONSOLE_CHAR_ATTRIB
   dwFlags As STARTUP_FLAGS
   /* [ TypeHint(SHOWWINDOW) ] */ wShowWindow As Integer
   cbReserved2 As Integer
   lpReserved2 As LongPtr
   hStdInput As LongPtr
   hStdOutput As LongPtr
   hStdError As LongPtr
End Type
Public Type STARTUPINFOW
   cbSize As Long
   lpReserved As LongPtr
   lpDesktop As LongPtr
   lpTitle As LongPtr
   dwX As Long
   dwY As Long
   dwXSize As Long
   dwYSize As Long
   dwXCountChars As Long
   dwYCountChars As Long
   dwFillAttribute As CONSOLE_CHAR_ATTRIB
   dwFlags As STARTUP_FLAGS
   /* [ TypeHint(SHOWWINDOW) ] */ wShowWindow As Integer
   cbReserved2 As Integer
   lpReserved2 As LongPtr
   hStdInput As LongPtr
   hStdOutput As LongPtr
   hStdError As LongPtr
End Type
'Alias STARTUPINFO As STARTUPINFOW
Public Type STARTUPINFO
   cbSize As Long
   lpReserved As LongPtr
   lpDesktop As LongPtr
   lpTitle As LongPtr
   dwX As Long
   dwY As Long
   dwXSize As Long
   dwYSize As Long
   dwXCountChars As Long
   dwYCountChars As Long
   dwFillAttribute As CONSOLE_CHAR_ATTRIB
   dwFlags As STARTUP_FLAGS
   /* [ TypeHint(SHOWWINDOW) ] */ wShowWindow As Integer
   cbReserved2 As Integer
   lpReserved2 As LongPtr
   hStdInput As LongPtr
   hStdOutput As LongPtr
   hStdError As LongPtr
End Type






Public Enum SE_PRIVILEGE_ATTR
	SE_PRIVILEGE_ENABLED_BY_DEFAULT = (&H00000001)
	SE_PRIVILEGE_ENABLED = (&H00000002)
	SE_PRIVILEGE_REMOVED = (&H00000004)
	SE_PRIVILEGE_USED_FOR_ACCESS = (&H80000000)
End Enum

Public Type LUID_AND_ATTRIBUTES
    pLuid       As LUID
    Attributes  As SE_PRIVILEGE_ATTR
End Type

[Description("This is buffered to the maximum number of privileges that exist of of 2023; the Privileges member is meant to be a variable C-style array so be mindful that most will be invalid and ensure you only look within the count.")]
Public Type TOKEN_PRIVILEGES
    PrivilegeCount      As Long
    Privileges(0 To 44)  As LUID_AND_ATTRIBUTES
End Type

Public Enum TOKEN_TYPE
    TokenPrimary = 1
    TokenImpersonation
End Enum

Public Type PROCESS_INFORMATION
   hProcess As LongPtr
   hThread As LongPtr
   dwProcessId As Long
   dwThreadId As Long
End Type


Public Enum RegKeyspace
    HKEY_CLASSES_ROOT = &H80000000
    HKEY_CURRENT_USER = &H80000001
    HKEY_LOCAL_MACHINE = &H80000002
    HKEY_USERS = &H80000003
    HKEY_PERFORMANCE_DATA = &H80000004
    HKEY_PERFORMANCE_TEXT = &H80000050
    HKEY_PERFORMANCE_NLSTEXT = &H80000060
    HKEY_CURRENT_CONFIG = &H80000005
    HKEY_DYN_DATA = &H80000006
    HKEY_CURRENT_USER_LOCAL_SETTINGS = &H80000007
End Enum

Public Enum PROCESS_LOGON_FLAGS
    LOGON_WITH_PROFILE = 1
	LOGON_NETCREDENTIALS_ONLY = 2
End Enum



Public Type SID_IDENTIFIER_AUTHORITY
	Value(0 To 5) As Byte
End Type
[Description("📝**NOTE:** You may need to use this as a header for a custom structure with fewer subauthorities appended.")]
Public Type SID
	Revision As Byte
	SubAuthorityCount As Byte
	IdentifierAuthority As SID_IDENTIFIER_AUTHORITY
	SubAuthority(SID_MAX_SUB_AUTHORITIES) As Long
End Type
Public Const SID_REVISION  = (1)  ' Current revision level
Public Const SID_MAX_SUB_AUTHORITIES  = (15)
Public Const SID_RECOMMENDED_SUB_AUTHORITIES  = (1)
Public Const SECURITY_MAX_SID_SIZE = (68) '(sizeof(SID) - sizeof(DWORD) + (SID_MAX_SUB_AUTHORITIES * sizeof(DWORD)))
Public Enum SID_NAME_USE
	SidTypeUser = 1
	SidTypeGroup
	SidTypeDomain
	SidTypeAlias
	SidTypeWellKnownGroup
	SidTypeDeletedAccount
	SidTypeInvalid
	SidTypeUnknown
	SidTypeComputer
	SidTypeLabel
	SidTypeLogonSession
End Enum
Public Type SID_AND_ATTRIBUTES
    Sid As LongPtr
    Attributes As GROUP_SID_ATTRIBUTES
End Type
Public Const SID_HASH_SIZE = 32

Public Type SID_AND_ATTRIBUTES_HASH
    SidCount As Long
    SidAttr As LongPtr
    Hash(0 To (SID_HASH_SIZE - 1)) As LongPtr
End Type

Public Enum SystemShutdownFlags
	SHUTDOWN_FORCE_OTHERS = &H00000001
	SHUTDOWN_FORCE_SELF = &H00000002
	SHUTDOWN_RESTART = &H00000004
	SHUTDOWN_POWEROFF = &H00000008
	SHUTDOWN_NOREBOOT = &H00000010
	SHUTDOWN_GRACE_OVERRIDE = &H00000020
	SHUTDOWN_INSTALL_UPDATES = &H00000040
	SHUTDOWN_RESTARTAPPS = &H00000080
	SHUTDOWN_SKIP_SVC_PRESHUTDOWN = &H00000100
	SHUTDOWN_HYBRID = &H00000200
	SHUTDOWN_RESTART_BOOTOPTIONS = &H00000400
	SHUTDOWN_SOFT_REBOOT = &H00000800
	SHUTDOWN_MOBILE_UI = &H00001000
	SHUTDOWN_ARSO = &H00002000
	SHUTDOWN_CHECK_SAFE_FOR_SERVER = &H00004000
	SHUTDOWN_VAIL_CONTAINER = &H00008000&
	SHUTDOWN_SYSTEM_INITIATED = &H00010000
End Enum

Public Declare PtrSafe Function GetUserNameA Lib "advapi32" (ByVal lpBuffer As String, nSize As Long) As BOOL
Public Declare PtrSafe Function GetUserNameW Lib "advapi32" (ByVal lpBuffer As LongPtr, nSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetUserName Lib "advapi32" Alias "GetUserNameW" (ByVal lpBuffer As String, nSize As Long) As BOOL
'CreateProcessWithTokenA does not exist in the Windows API.
Public DeclareWide PtrSafe Function CreateProcessWithTokenW Lib "advapi32" (ByVal hToken As LongPtr, ByVal dwLogonFlags As PROCESS_LOGON_FLAGS, _
    ByVal lpApplicationName As LongPtr, ByVal lpCommandLine As LongPtr, ByVal dwCreationFlags As CreateProcessFlags, ByVal lpEnvironment As LongPtr, _
    ByVal lpCurrentDirectory As LongPtr, lpStartupInfo As STARTUPINFOW, lpProcessInformation As PROCESS_INFORMATION) As BOOL
Public DeclareWide PtrSafe Function CreateProcessWithToken Lib "advapi32" Alias "CreateProcessWithTokenW" (ByVal hToken As LongPtr, ByVal dwLogonFlags As PROCESS_LOGON_FLAGS, _
    ByVal lpApplicationName As String, ByVal lpCommandLine As String, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, _
    ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFOW, lpProcessInformation As PROCESS_INFORMATION) As BOOL
'CreateProcessWithLogonA does not exist in the Windows API.
Public DeclareWide PtrSafe Function CreateProcessWithLogonW Lib "advapi32" (ByVal lpUsername As LongPtr, ByVal lpDomain As LongPtr, ByVal lpPassword As LongPtr, ByVal dwLogonFlags As PROCESS_LOGON_FLAGS, _
    ByVal lpApplicationName As LongPtr, ByVal lpCommandLine As LongPtr, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, _
    ByVal lpCurrentDirectory As LongPtr, lpStartupInfo As STARTUPINFOW, lpProcessInformation As PROCESS_INFORMATION) As BOOL
Public DeclareWide PtrSafe Function CreateProcessWithLogon Lib "advapi32" Alias "CreateProcessWithLogonW" (ByVal lpUsername As String, ByVal lpDomain As String, ByVal lpPassword As String, ByVal dwLogonFlags As PROCESS_LOGON_FLAGS, _
    ByVal lpApplicationName As String, ByVal lpCommandLine As String, ByVal dwCreationFlags As CreateProcessFlags, lpEnvironment As Any, _
    ByVal lpCurrentDirectory As String, lpStartupInfo As STARTUPINFO, lpProcessInformation As PROCESS_INFORMATION) As BOOL

Public Declare PtrSafe Function InitiateShutdownA Lib "advapi32" (ByVal lpMachineName As String, ByVal lpMessage As String, ByVal dwGracePeriod As Long, ByVal dwShutdownFlags As SystemShutdownFlags, ByVal dwReason As SystemShutdownReasons) As Long
Public Declare PtrSafe Function InitiateShutdownW Lib "advapi32" (ByVal lpMachineName As LongPtr, ByVal lpMessage As LongPtr, ByVal dwGracePeriod As Long, ByVal dwShutdownFlags As SystemShutdownFlags, ByVal dwReason As SystemShutdownReasons) As Long
Public DeclareWide PtrSafe Function InitiateShutdown Lib "advapi32" Alias "InitiateShutdownW" (ByVal lpMachineName As String, ByVal lpMessage As String, ByVal dwGracePeriod As Long, ByVal dwShutdownFlags As SystemShutdownFlags, ByVal dwReason As SystemShutdownReasons) As Long
[Description("**DEPRECATED** - Use InitiateSystemShutdownExA instead.")]
Public Declare PtrSafe Function InitiateSystemShutdownA Lib "advapi32" (ByVal lpMachineName As String, ByVal lpMessage As String, ByVal dwTimeout As Long, ByVal bForceAppsClosed As BOOL, ByVal bRebootAfterShutdown As BOOL) As BOOL
[Description("**DEPRECATED** - Use InitiateSystemShutdownExW instead.")]
Public Declare PtrSafe Function InitiateSystemShutdownW Lib "advapi32" (ByVal lpMachineName As LongPtr, ByVal lpMessage As LongPtr, ByVal dwTimeout As Long, ByVal bForceAppsClosed As BOOL, ByVal bRebootAfterShutdown As BOOL) As BOOL
[Description("**DEPRECATED** - Use InitiateSystemShutdownEx instead.")]
Public DeclareWide PtrSafe Function InitiateSystemShutdown Lib "advapi32" Alias "InitiateShutdownW" (ByVal lpMachineName As String, ByVal lpMessage As String, ByVal dwTimeout As Long, ByVal bForceAppsClosed As BOOL, ByVal bRebootAfterShutdown As BOOL) As BOOL
Public Declare PtrSafe Function InitiateSystemShutdownExA Lib "advapi32" (ByVal lpMachineName As String, ByVal lpMessage As String, ByVal dwTimeout As Long, ByVal bForceAppsClosed As BOOL, ByVal bRebootAfterShutdown As BOOL, ByVal dwReason As SystemShutdownReasons) As BOOL
Public Declare PtrSafe Function InitiateSystemShutdownExW Lib "advapi32" (ByVal lpMachineName As LongPtr, ByVal lpMessage As LongPtr, ByVal dwTimeout As Long, ByVal bForceAppsClosed As BOOL, ByVal bRebootAfterShutdown As BOOL, ByVal dwReason As SystemShutdownReasons) As BOOL
Public DeclareWide PtrSafe Function InitiateSystemShutdownEx Lib "advapi32" Alias "InitiateShutdownExW" (ByVal lpMachineName As String, ByVal lpMessage As String, ByVal dwTimeout As Long, ByVal bForceAppsClosed As BOOL, ByVal bRebootAfterShutdown As BOOL, ByVal dwReason As SystemShutdownReasons) As BOOL
Public Declare PtrSafe Function AbortSystemShutdownA Lib "advapi32" (ByVal lpMachineName As String) As BOOL
Public Declare PtrSafe Function AbortSystemShutdownW Lib "advapi32" (ByVal lpMachineName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AbortSystemShutdown Lib "advapi32" Alias "AbortSystemShutdownW" (ByVal lpMachineName As String) As BOOL

Public Declare PtrSafe Function EnumDynamicTimeZoneInformation Lib "advapi32" (ByVal dwIndex As Long, lpTimeZoneInformation As DYNAMIC_TIME_ZONE_INFORMATION) As Long
Public Declare PtrSafe Function GetDynamicTimeZoneInformationEffectiveYears Lib "advapi32" (lpTimeZoneInformation As DYNAMIC_TIME_ZONE_INFORMATION, FirstYear As Long, LastYear As Long) As Long



Public Const SERVICES_ACTIVE_DATABASEW  = "ServicesActive"
Public Const SERVICES_FAILED_DATABASEW  = "ServicesFailed"
Public Const SERVICES_ACTIVE_DATABASEA  = "ServicesActive"
Public Const SERVICES_FAILED_DATABASEA  = "ServicesFailed"
Public Const SERVICES_ACTIVE_DATABASE  = SERVICES_ACTIVE_DATABASEW
Public Const SERVICES_FAILED_DATABASE  = SERVICES_FAILED_DATABASEW
Public Const SC_GROUP_IDENTIFIERA = "+"
Public Const SC_GROUP_IDENTIFIERW = "+"
Public Const SC_GROUP_IDENTIFIER = "+"

Public Const SERVICE_NO_CHANGE = &Hffffffff

Public Enum ServiceStateBitmask
	SERVICE_ACTIVE = &H00000001
	SERVICE_INACTIVE = &H00000002
	SERVICE_STATE_ALL = (SERVICE_ACTIVE Or SERVICE_INACTIVE)
End Enum

Public Enum SERVICE_CONTROL
	SERVICE_CONTROL_STOP = &H00000001
	SERVICE_CONTROL_PAUSE = &H00000002
	SERVICE_CONTROL_CONTINUE = &H00000003
	SERVICE_CONTROL_INTERROGATE = &H00000004
	SERVICE_CONTROL_SHUTDOWN = &H00000005
	SERVICE_CONTROL_PARAMCHANGE = &H00000006
	SERVICE_CONTROL_NETBINDADD = &H00000007
	SERVICE_CONTROL_NETBINDREMOVE = &H00000008
	SERVICE_CONTROL_NETBINDENABLE = &H00000009
	SERVICE_CONTROL_NETBINDDISABLE = &H0000000A
	SERVICE_CONTROL_DEVICEEVENT = &H0000000B
	SERVICE_CONTROL_HARDWAREPROFILECHANGE = &H0000000C
	SERVICE_CONTROL_POWEREVENT = &H0000000D
	SERVICE_CONTROL_SESSIONCHANGE = &H0000000E
	SERVICE_CONTROL_PRESHUTDOWN = &H0000000F
	SERVICE_CONTROL_TIMECHANGE = &H00000010
	SERVICE_CONTROL_USER_LOGOFF = &H00000011
	SERVICE_CONTROL_TRIGGEREVENT = &H00000020
' reserved for internal use                    0x00000021
' reserved for internal use                    0x00000050
	SERVICE_CONTROL_LOWRESOURCES = &H00000060
	SERVICE_CONTROL_SYSTEMLOWRESOURCES = &H00000061
End Enum

Public Enum ServiceState
    SERVICE_STOPPED = &H1
    SERVICE_START_PENDING = &H2
    SERVICE_STOP_PENDING = &H3
    SERVICE_RUNNING = &H4
    SERVICE_CONTINUE_PENDING = &H5
    SERVICE_PAUSE_PENDING = &H6
    SERVICE_PAUSED = &H7
End Enum

Public Enum SERVICE_CONTROL_ACCEPT
	SERVICE_ACCEPT_STOP = &H00000001
	SERVICE_ACCEPT_PAUSE_CONTINUE = &H00000002
	SERVICE_ACCEPT_SHUTDOWN = &H00000004
	SERVICE_ACCEPT_PARAMCHANGE = &H00000008
	SERVICE_ACCEPT_NETBINDCHANGE = &H00000010
	SERVICE_ACCEPT_HARDWAREPROFILECHANGE = &H00000020
	SERVICE_ACCEPT_POWEREVENT = &H00000040
	SERVICE_ACCEPT_SESSIONCHANGE = &H00000080
	SERVICE_ACCEPT_PRESHUTDOWN = &H00000100
	SERVICE_ACCEPT_TIMECHANGE = &H00000200
	SERVICE_ACCEPT_TRIGGEREVENT = &H00000400
	SERVICE_ACCEPT_USER_LOGOFF = &H00000800
'  reserved for internal use                   0x00001000
	SERVICE_ACCEPT_LOWRESOURCES = &H00002000
	SERVICE_ACCEPT_SYSTEMLOWRESOURCES = &H00004000
End Enum

Public Enum ServiceControlManagerAccess
    SC_MANAGER_CONNECT = &H1
    SC_MANAGER_CREATE_SERVICE = &H2
    SC_MANAGER_ENUMERATE_SERVICE = &H4
    SC_MANAGER_LOCK = &H8
    SC_MANAGER_QUERY_LOCK_STATUS = &H10
    SC_MANAGER_MODIFY_BOOT_CONFIG = &H20
    SC_MANAGER_ALL_ACCESS = &HF003F
End Enum

Public Enum ServiceAccessRights
    SERVICE_QUERY_CONFIG = &H1
    SERVICE_CHANGE_CONFIG = &H2
    SERVICE_QUERY_STATUS = &H4
    SERVICE_ENUMERATE_DEPENDENTS = &H8
    SERVICE_START = &H10
    SERVICE_STOP = &H20
    SERVICE_PAUSE_CONTINUE = &H40
    SERVICE_INTERROGATE = &H80
    SERVICE_USER_DEFINED_CONTROL = &H100
    SERVICE_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED + SERVICE_QUERY_CONFIG + SERVICE_CHANGE_CONFIG + SERVICE_QUERY_STATUS + SERVICE_ENUMERATE_DEPENDENTS + SERVICE_START + SERVICE_STOP + SERVICE_PAUSE_CONTINUE + SERVICE_INTERROGATE + SERVICE_USER_DEFINED_CONTROL)
End Enum

Public Enum ServiceProcessFlags
    SERVICE_RUNS_IN_SYSTEM_PROCESS = &H1
End Enum

Public Enum ServiceConfigInfoLevels
	SERVICE_CONFIG_DESCRIPTION = 1
	SERVICE_CONFIG_FAILURE_ACTIONS = 2
	SERVICE_CONFIG_DELAYED_AUTO_START_INFO = 3
	SERVICE_CONFIG_FAILURE_ACTIONS_FLAG = 4
	SERVICE_CONFIG_SERVICE_SID_INFO = 5
	SERVICE_CONFIG_REQUIRED_PRIVILEGES_INFO = 6
	SERVICE_CONFIG_PRESHUTDOWN_INFO = 7
	SERVICE_CONFIG_TRIGGER_INFO = 8
	SERVICE_CONFIG_PREFERRED_NODE = 9
'  reserved                                     10
'  reserved                                     11
	SERVICE_CONFIG_LAUNCH_PROTECTED = 12
End Enum
Public Enum ServiceNotifyInfoLevels
	SERVICE_NOTIFY_STATUS_CHANGE_1 = 1
	SERVICE_NOTIFY_STATUS_CHANGE_2 = 2
	SERVICE_NOTIFY_STATUS_CHANGE = SERVICE_NOTIFY_STATUS_CHANGE_2
End Enum

Public Enum ServiceNotifyMask
	SERVICE_NOTIFY_STOPPED = &H00000001
	SERVICE_NOTIFY_START_PENDING = &H00000002
	SERVICE_NOTIFY_STOP_PENDING = &H00000004
	SERVICE_NOTIFY_RUNNING = &H00000008
	SERVICE_NOTIFY_CONTINUE_PENDING = &H00000010
	SERVICE_NOTIFY_PAUSE_PENDING = &H00000020
	SERVICE_NOTIFY_PAUSED = &H00000040
	SERVICE_NOTIFY_CREATED = &H00000080
	SERVICE_NOTIFY_DELETED = &H00000100
	SERVICE_NOTIFY_DELETE_PENDING = &H00000200
End Enum



Public Enum ServiceStopReasons
	SERVICE_STOP_REASON_FLAG_MIN = &H00000000
	SERVICE_STOP_REASON_FLAG_UNPLANNED = &H10000000
	SERVICE_STOP_REASON_FLAG_CUSTOM = &H20000000
	SERVICE_STOP_REASON_FLAG_PLANNED = &H40000000
	SERVICE_STOP_REASON_FLAG_MAX = &H80000000
'  Microsoft major reasons. Update SERVICE_STOP_REASON_MAJOR_MAX when
'  new codes are added.
	SERVICE_STOP_REASON_MAJOR_MIN = &H00000000
	SERVICE_STOP_REASON_MAJOR_OTHER = &H00010000
	SERVICE_STOP_REASON_MAJOR_HARDWARE = &H00020000
	SERVICE_STOP_REASON_MAJOR_OPERATINGSYSTEM = &H00030000
	SERVICE_STOP_REASON_MAJOR_SOFTWARE = &H00040000
	SERVICE_STOP_REASON_MAJOR_APPLICATION = &H00050000
	SERVICE_STOP_REASON_MAJOR_NONE = &H00060000
	SERVICE_STOP_REASON_MAJOR_MAX = &H00070000
	SERVICE_STOP_REASON_MAJOR_MIN_CUSTOM = &H00400000
	SERVICE_STOP_REASON_MAJOR_MAX_CUSTOM = &H00ff0000
'  Microsoft minor reasons. Update SERVICE_STOP_REASON_MINOR_MAX when
'  new codes are added.
	SERVICE_STOP_REASON_MINOR_MIN = &H00000000
	SERVICE_STOP_REASON_MINOR_OTHER = &H00000001
	SERVICE_STOP_REASON_MINOR_MAINTENANCE = &H00000002
	SERVICE_STOP_REASON_MINOR_INSTALLATION = &H00000003
	SERVICE_STOP_REASON_MINOR_UPGRADE = &H00000004
	SERVICE_STOP_REASON_MINOR_RECONFIG = &H00000005
	SERVICE_STOP_REASON_MINOR_HUNG = &H00000006
	SERVICE_STOP_REASON_MINOR_UNSTABLE = &H00000007
	SERVICE_STOP_REASON_MINOR_DISK = &H00000008
	SERVICE_STOP_REASON_MINOR_NETWORKCARD = &H00000009
	SERVICE_STOP_REASON_MINOR_ENVIRONMENT = &H0000000a
	SERVICE_STOP_REASON_MINOR_HARDWARE_DRIVER = &H0000000b
	SERVICE_STOP_REASON_MINOR_OTHERDRIVER = &H0000000c
	SERVICE_STOP_REASON_MINOR_SERVICEPACK = &H0000000d
	SERVICE_STOP_REASON_MINOR_SOFTWARE_UPDATE = &H0000000e
	SERVICE_STOP_REASON_MINOR_SECURITYFIX = &H0000000f
	SERVICE_STOP_REASON_MINOR_SECURITY = &H00000010
	SERVICE_STOP_REASON_MINOR_NETWORK_CONNECTIVITY = &H00000011
	SERVICE_STOP_REASON_MINOR_WMI = &H00000012
	SERVICE_STOP_REASON_MINOR_SERVICEPACK_UNINSTALL = &H00000013
	SERVICE_STOP_REASON_MINOR_SOFTWARE_UPDATE_UNINSTALL = &H00000014
	SERVICE_STOP_REASON_MINOR_SECURITYFIX_UNINSTALL = &H00000015
	SERVICE_STOP_REASON_MINOR_MMC = &H00000016
	SERVICE_STOP_REASON_MINOR_NONE = &H00000017
	SERVICE_STOP_REASON_MINOR_MEMOTYLIMIT = &H00000018
	SERVICE_STOP_REASON_MINOR_MAX = &H00000019
	SERVICE_STOP_REASON_MINOR_MIN_CUSTOM = &H00000100
	SERVICE_STOP_REASON_MINOR_MAX_CUSTOM = &H0000FFFF&
End Enum

Public Enum ServiceControlInfoLevels
    SERVICE_CONTROL_STATUS_REASON_INFO = 1
End Enum

Public Enum ServiceSidTypes
	SERVICE_SID_TYPE_NONE = &H00000000
	SERVICE_SID_TYPE_UNRESTRICTED = &H00000001
	SERVICE_SID_TYPE_RESTRICTED = (&H00000002 Or SERVICE_SID_TYPE_UNRESTRICTED)
End Enum

Public Enum ServiceTriggerTypes
	SERVICE_TRIGGER_TYPE_DEVICE_INTERFACE_ARRIVAL = 1
	SERVICE_TRIGGER_TYPE_IP_ADDRESS_AVAILABILITY = 2
	SERVICE_TRIGGER_TYPE_DOMAIN_JOIN = 3
	SERVICE_TRIGGER_TYPE_FIREWALL_PORT_EVENT = 4
	SERVICE_TRIGGER_TYPE_GROUP_POLICY = 5
	SERVICE_TRIGGER_TYPE_NETWORK_ENDPOINT = 6
	SERVICE_TRIGGER_TYPE_CUSTOM_SYSTEM_STATE_CHANGE = 7
	SERVICE_TRIGGER_TYPE_CUSTOM = 20
	SERVICE_TRIGGER_TYPE_AGGREGATE = 30
End Enum
Public Enum ServiceTriggerDataTypes
	SERVICE_TRIGGER_DATA_TYPE_BINARY = 1
	SERVICE_TRIGGER_DATA_TYPE_STRING = 2
	SERVICE_TRIGGER_DATA_TYPE_LEVEL = 3
	SERVICE_TRIGGER_DATA_TYPE_KEYWORD_ANY = 4
	SERVICE_TRIGGER_DATA_TYPE_KEYWORD_ALL = 5
End Enum

Public Enum ServiceStartReasons
	SERVICE_START_REASON_DEMAND = &H00000001
	SERVICE_START_REASON_AUTO = &H00000002
	SERVICE_START_REASON_TRIGGER = &H00000004
	SERVICE_START_REASON_RESTART_ON_FAILURE = &H00000008
	SERVICE_START_REASON_DELAYEDAUTO = &H00000010
End Enum

Public Enum ServiceDynamicInfoLevels
    SERVICE_DYNAMIC_INFORMATION_LEVEL_START_REASON = 1
End Enum

Public Enum ServiceLaunchProtectionTypes
	SERVICE_LAUNCH_PROTECTED_NONE = 0
	SERVICE_LAUNCH_PROTECTED_WINDOWS = 1
	SERVICE_LAUNCH_PROTECTED_WINDOWS_LIGHT = 2
	SERVICE_LAUNCH_PROTECTED_ANTIMALWARE_LIGHT = 3
End Enum

Public Type SERVICE_TRIGGER_CUSTOM_STATE_ID
	Data(0 To 1) As Long
End Type

[Description("This type is a union of either DataOffset/Data or SERVICE_TRIGGER_CUSTOM_STATE_ID.")]
Public Type SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM
    u(7) As Byte
End Type

Public Enum ServiceTriggerActions
    SERVICE_TRIGGER_ACTION_SERVICE_START = 1
    SERVICE_TRIGGER_ACTION_SERVICE_STOP = 2
End Enum
'  argv[1] passed into ServiceMain of trigger started services
Public Const SERVICE_TRIGGER_STARTED_ARGUMENT  = "TriggerStarted"

Public Type SERVICE_DESCRIPTIONA
    lpDescription As String
End Type
Public Type SERVICE_DESCRIPTIONW
    lpDescription As LongPtr
End Type
'Alias SERVICE_DESCRIPTION As SERVICE_DESCRIPTIONW
Public Type SERVICE_DESCRIPTION
    lpDescription As LongPtr
End Type


Public Enum SC_ACTION_TYPE
	SC_ACTION_NONE = 0
	SC_ACTION_RESTART = 1
	SC_ACTION_REBOOT = 2
	SC_ACTION_RUN_COMMAND = 3
	SC_ACTION_OWN_RESTART = 4
End Enum

Public Type SC_ACTION
	Type As SC_ACTION_TYPE
	Delay As Long
End Type

Public Type SERVICE_FAILURE_ACTIONSA
    dwResetPeriod As Long
    lpRebootMsg As String
    lpCommand As String
    cActions As Long
    lpsaActions As LongPtr
End Type
Public Type SERVICE_FAILURE_ACTIONSW
	dwResetPeriod As Long
	lpRebootMsg As LongPtr
	lpCommand As LongPtr
	cActions As Long
	lpsaActions As LongPtr
End Type
'Alias SERVICE_FAILURE_ACTIONS As SERVICE_FAILURE_ACTIONSW
Public Type SERVICE_FAILURE_ACTIONS
    dwResetPeriod As Long
    lpRebootMsg As LongPtr
    lpCommand As LongPtr
    cActions As Long
    lpsaActions As LongPtr
End Type


Public Type SERVICE_DELAYED_AUTO_START_INFO
	fDelayedAutostart As BOOL
End Type
Public Type SERVICE_FAILURE_ACTIONS_FLAG
	fFailureActionsOnNonCrashFailures As BOOL
End Type
Public Type SERVICE_SID_INFO
	dwServiceSidType As ServiceSidTypes
End Type
Public Type SERVICE_REQUIRED_PRIVILEGES_INFOA
    pmszRequiredPrivileges As String ' Required privileges multi-sz
End Type
Public Type SERVICE_REQUIRED_PRIVILEGES_INFOW
	pmszRequiredPrivileges As LongPtr ' Required privileges multi-sz
End Type
Public Type SERVICE_REQUIRED_PRIVILEGES_INFO
	pmszRequiredPrivileges As LongPtr ' Required privileges multi-sz
End Type
Public Type SERVICE_PRESHUTDOWN_INFO
	dwPreshutdownTimeout As Long ' Timeout in msecs
End Type
Public Type SERVICE_TRIGGER_SPECIFIC_DATA_ITEM
    dwDataType As ServiceTriggerDataTypes
    cbData As Long
    pData As LongPtr
End Type
Public Type SERVICE_TRIGGER
    dwTriggerType As ServiceTriggerTypes
    dwAction As ServiceTriggerActions
    pTriggerSubtype As UUID
    cDataItems As Long
    pDataItems As LongPtr
End Type
Public Type SERVICE_TRIGGER_INFO
    cTriggers As Long
    pTriggers As LongPtr
    pReserved As LongPtr
End Type

Public Const SC_AGGREGATE_STORAGE_KEY  = "System\CurrentControlSet\Control\ServiceAggregatedEvents"


Public Type SERVICE_PREFERRED_NODE_INFO
	usPreferredNode As Integer ' Preferred node
	fDelete As Byte ' Delete the preferred node setting
End Type

Public Type SERVICE_TIMECHANGE_INFO
    liNewTime As LARGE_INTEGER ' New time
    liOldTime As LARGE_INTEGER ' Old time
End Type

Public Type SERVICE_LAUNCH_PROTECTED_INFO
	dwLaunchProtected As ServiceLaunchProtectionTypes ' Service launch protected
End Type

Public Enum SC_STATUS_LEVEL
	SC_STATUS_PROCESS_INFO = 0
End Enum

Public Enum SC_ENUM_TYPE
	SC_ENUM_PROCESS_INFO = 0
End Enum

Public Type SERVICE_STATUS
	dwServiceType As SystemServiceType
	dwCurrentState As ServiceState
	dwControlsAccepted As SERVICE_CONTROL_ACCEPT
	dwWin32ExitCode As Long
	dwServiceSpecificExitCode As Long
	dwCheckPoint As Long
	dwWaitHint As Long
End Type
Public Type SERVICE_STATUS_PROCESS
    dwServiceType As SystemServiceType
    dwCurrentState As ServiceState
    dwControlsAccepted As SERVICE_CONTROL_ACCEPT
    dwWin32ExitCode As Long
    dwServiceSpecificExitCode As Long
    dwCheckPoint As Long
    dwWaitHint As Long
    dwProcessId As Long
    dwServiceFlags As ServiceProcessFlags
End Type

Public Type ENUM_SERVICE_STATUSA
    lpServiceName As String
    lpDisplayName As String
    ServiceStatus As SERVICE_STATUS
End Type
Public Type ENUM_SERVICE_STATUSW
    lpServiceName As LongPtr
    lpDisplayName As LongPtr
    ServiceStatus As SERVICE_STATUS
End Type
Public Type ENUM_SERVICE_STATUS
	lpServiceName As LongPtr
	lpDisplayName As LongPtr
	ServiceStatus As SERVICE_STATUS
End Type

Public Type ENUM_SERVICE_STATUS_PROCESSA
    lpServiceName As String
    lpDisplayName As String
    ServiceStatus As SERVICE_STATUS_PROCESS
End Type
Public Type ENUM_SERVICE_STATUS_PROCESSW
    lpServiceName As LongPtr
    lpDisplayName As LongPtr
    ServiceStatus As SERVICE_STATUS_PROCESS
End Type
Public Type ENUM_SERVICE_STATUS_PROCESS
    lpServiceName As LongPtr
    lpDisplayName As LongPtr
    ServiceStatus As SERVICE_STATUS_PROCESS
End Type

Public Type QUERY_SERVICE_LOCK_STATUSA
    fIsLocked As Long
    lpLockOwner As String
    dwLockDuration As Long
End Type
Public Type QUERY_SERVICE_LOCK_STATUSW
	fIsLocked As Long
	lpLockOwner As LongPtr
	dwLockDuration As Long
End Type
Public Type QUERY_SERVICE_LOCK_STATUS
    fIsLocked As Long
    lpLockOwner As LongPtr
    dwLockDuration As Long
End Type

Public Type QUERY_SERVICE_CONFIGA
    dwServiceType As SystemServiceType
    dwStartType As ServiceStartType
    dwErrorControl As ServiceErrorControlType
    lpBinaryPathName As String
    lpLoadOrderGroup As String
    dwTagId As Long
    lpDependencies As String
    lpServiceStartName As String
    lpDisplayName As String
End Type
Public Type QUERY_SERVICE_CONFIGW
	dwServiceType As SystemServiceType
	dwStartType As ServiceStartType
	dwErrorControl As ServiceErrorControlType
	lpBinaryPathName As LongPtr
	lpLoadOrderGroup As LongPtr
	dwTagId As Long
	lpDependencies As LongPtr
	lpServiceStartName As LongPtr
	lpDisplayName As LongPtr
End Type
Public Type QUERY_SERVICE_CONFIG
    dwServiceType As SystemServiceType
    dwStartType As ServiceStartType
    dwErrorControl As ServiceErrorControlType
    lpBinaryPathName As LongPtr
    lpLoadOrderGroup As LongPtr
    dwTagId As Long
    lpDependencies As LongPtr
    lpServiceStartName As LongPtr
    lpDisplayName As LongPtr
End Type


Public Type SERVICE_MAIN_FUNCTIONA
    dwNumServicesArgs As Long
    lpServiceArgVectors As LongPtr
End Type
Public Type SERVICE_MAIN_FUNCTIONW
	dwNumServicesArgs As Long
    lpServiceArgVectors As LongPtr
End Type
Public Type SERVICE_MAIN_FUNCTION
    dwNumServicesArgs As Long
    lpServiceArgVectors As LongPtr
End Type

' typedef VOID (WINAPI *LPSERVICE_MAIN_FUNCTIONW)(
' DWORD   dwNumServicesArgs,
' LPWSTR  *lpServiceArgVectors
' );

Public Type SERVICE_TABLE_ENTRYA
    lpServiceName As String
    lpServiceProc As LongPtr
End Type
Public Type SERVICE_TABLE_ENTRYW
    lpServiceName As LongPtr
    lpServiceProc As LongPtr
End Type
Public Type SERVICE_TABLE_ENTRY
    lpServiceName As LongPtr
    lpServiceProc As LongPtr
End Type

' typedef VOID WINAPI HANDLER_FUNCTION (
' DWORD    dwControl
' );

' typedef DWORD WINAPI HANDLER_FUNCTION_EX (
' DWORD    dwControl,
' DWORD    dwEventType,
' LPVOID   lpEventData,
' LPVOID   lpContext
' );

' typedef VOID (WINAPI *LPHANDLER_FUNCTION)(
' DWORD    dwControl
' );

' typedef DWORD (WINAPI *LPHANDLER_FUNCTION_EX)(
' DWORD    dwControl,
' DWORD    dwEventType,
' LPVOID   lpEventData,
' LPVOID   lpContext
' );
' //
' // Service notification parameters
' //
' typedef
' VOID
' ( CALLBACK * PFN_SC_NOTIFY_CALLBACK ) (
    ' _In_ PVOID pParameter
    ' );
    

Public Type SERVICE_NOTIFY_1
	dwVersion As Long
	pfnNotifyCallback As LongPtr
	pContext As LongPtr
	dwNotificationStatus As Long
	ServiceStatus As SERVICE_STATUS_PROCESS
End Type
Public Type SERVICE_NOTIFY_2A
    dwVersion As Long
    pfnNotifyCallback As LongPtr
    pContext As LongPtr
    dwNotificationStatus As Long
    ServiceStatus As SERVICE_STATUS_PROCESS
    dwNotificationTriggered As Long
    pszServiceNames As String
End Type
Public Type SERVICE_NOTIFY_2W
	dwVersion As Long
	pfnNotifyCallback As LongPtr
	pContext As LongPtr
	dwNotificationStatus As Long
	ServiceStatus As SERVICE_STATUS_PROCESS
	dwNotificationTriggered As Long
	pszServiceNames As LongPtr
End Type
'Alias SERVICE_NOTIFYA As SERVICE_NOTIFY_2A
'Alias SERVICE_NOTIFYW As SERVICE_NOTIFY_2W
Public Type SERVICE_NOTIFYA
    dwVersion As Long
    pfnNotifyCallback As LongPtr
    pContext As LongPtr
    dwNotificationStatus As Long
    ServiceStatus As SERVICE_STATUS_PROCESS
    dwNotificationTriggered As Long
    pszServiceNames As String
End Type
Public Type SERVICE_NOTIFYW
    dwVersion As Long
    pfnNotifyCallback As LongPtr
    pContext As LongPtr
    dwNotificationStatus As Long
    ServiceStatus As SERVICE_STATUS_PROCESS
    dwNotificationTriggered As Long
    pszServiceNames As LongPtr
End Type
Public Type SERVICE_NOTIFY_2
    dwVersion As Long
    pfnNotifyCallback As LongPtr
    pContext As LongPtr
    dwNotificationStatus As Long
    ServiceStatus As SERVICE_STATUS_PROCESS
    dwNotificationTriggered As Long
    pszServiceNames As LongPtr
End Type
Public Type SERVICE_NOTIFY
    dwVersion As Long
    pfnNotifyCallback As LongPtr
    pContext As LongPtr
    dwNotificationStatus As Long
    ServiceStatus As SERVICE_STATUS_PROCESS
    dwNotificationTriggered As Long
    pszServiceNames As LongPtr
End Type

Public Type SERVICE_CONTROL_STATUS_REASON_PARAMSW
	dwReason As ServiceStopReasons
	pszComment As LongPtr
	ServiceStatus As SERVICE_STATUS_PROCESS
End Type
Public Type SERVICE_CONTROL_STATUS_REASON_PARAMS
    dwReason As ServiceStopReasons
    pszComment As LongPtr
    ServiceStatus As SERVICE_STATUS_PROCESS
End Type

Public Type SERVICE_START_REASON
	dwReason As ServiceStartReasons
End Type


    
Public Enum SERVICE_SHARED_DIRECTORY_TYPE
	ServiceSharedDirectoryPersistentState = 0
End Enum

Public Enum SERVICE_SHARED_REGISTRY_STATE_TYPE
	ServiceSharedRegistryPersistentState = 0
End Enum

Public Enum SERVICE_DIRECTORY_TYPE
	ServiceDirectoryPersistentState = 0
	ServiceDirectoryTypeMax = 1
End Enum

Public Enum SERVICE_REGISTRY_STATE_TYPE
	ServiceRegistryStateParameters = 0
	ServiceRegistryStatePersistent = 1
	MaxServiceRegistryStateType = 2
End Enum

Public Enum SC_EVENT_TYPE
	SC_EVENT_DATABASE_CHANGE = 0
	SC_EVENT_PROPERTY_CHANGE = 1
	SC_EVENT_STATUS_CHANGE = 2
End Enum




Public Enum SystemServiceType
	SERVICE_KERNEL_DRIVER = &H00000001
	SERVICE_FILE_SYSTEM_DRIVER = &H00000002
	SERVICE_ADAPTER = &H00000004
	SERVICE_RECOGNIZER_DRIVER = &H00000008
	SERVICE_DRIVER = (SERVICE_KERNEL_DRIVER Or SERVICE_FILE_SYSTEM_DRIVER Or SERVICE_RECOGNIZER_DRIVER)
	SERVICE_WIN32_OWN_PROCESS = &H00000010
	SERVICE_WIN32_SHARE_PROCESS = &H00000020
	SERVICE_WIN32 = (SERVICE_WIN32_OWN_PROCESS Or SERVICE_WIN32_SHARE_PROCESS)
	SERVICE_USER_SERVICE = &H00000040
	SERVICE_USERSERVICE_INSTANCE = &H00000080
	SERVICE_USER_SHARE_PROCESS = (SERVICE_USER_SERVICE Or SERVICE_WIN32_SHARE_PROCESS)
	SERVICE_USER_OWN_PROCESS = (SERVICE_USER_SERVICE Or SERVICE_WIN32_OWN_PROCESS)
	SERVICE_INTERACTIVE_PROCESS = &H00000100
	SERVICE_PKG_SERVICE = &H00000200
	SERVICE_TYPE_ALL = (SERVICE_WIN32 Or SERVICE_ADAPTER Or SERVICE_DRIVER Or SERVICE_INTERACTIVE_PROCESS Or SERVICE_USER_SERVICE Or SERVICE_USERSERVICE_INSTANCE Or SERVICE_PKG_SERVICE)
    SERVICETYPE_NO_CHANGE = SERVICE_NO_CHANGE
End Enum




Public Enum ServiceStartType
	SERVICE_BOOT_START = &H00000000
	SERVICE_SYSTEM_START = &H00000001
	SERVICE_AUTO_START = &H00000002
	SERVICE_DEMAND_START = &H00000003
	SERVICE_DISABLED = &H00000004
End Enum

Public Enum ServiceErrorControlType
	SERVICE_ERROR_IGNORE = &H00000000
	SERVICE_ERROR_NORMAL = &H00000001
	SERVICE_ERROR_SEVERE = &H00000002
	SERVICE_ERROR_CRITICAL = &H00000003
End Enum

Public Enum ServiceNodeFlags
	CM_SERVICE_NETWORK_BOOT_LOAD = &H00000001
	CM_SERVICE_VIRTUAL_DISK_BOOT_LOAD = &H00000002
	CM_SERVICE_USB_DISK_BOOT_LOAD = &H00000004
	CM_SERVICE_SD_DISK_BOOT_LOAD = &H00000008
	CM_SERVICE_USB3_DISK_BOOT_LOAD = &H00000010
	CM_SERVICE_MEASURED_BOOT_LOAD = &H00000020
	CM_SERVICE_VERIFIER_BOOT_LOAD = &H00000040
	CM_SERVICE_WINPE_BOOT_LOAD = &H00000080
	CM_SERVICE_RAM_DISK_BOOT_LOAD = &H00000100
End Enum



Public Declare PtrSafe Function ChangeServiceConfigA Lib "advapi32" (ByVal hService As LongPtr, ByVal dwServiceType As SystemServiceType, ByVal dwStartType As ServiceStartType, ByVal dwErrorControl As ServiceErrorControlType, Optional ByVal lpBinaryPathName As String, Optional ByVal lpLoadOrderGroup As String, Optional ByRef lpdwTagId As Long, Optional ByVal lpDependencies As String, Optional ByVal lpServiceStartName As String, Optional ByVal lpPassword As String, Optional ByVal lpDisplayName As String) As BOOL
Public Declare PtrSafe Function ChangeServiceConfigW Lib "advapi32" (ByVal hService As LongPtr, ByVal dwServiceType As SystemServiceType, ByVal dwStartType As ServiceStartType, ByVal dwErrorControl As ServiceErrorControlType, Optional ByVal lpBinaryPathName As LongPtr, Optional ByVal lpLoadOrderGroup As LongPtr, Optional ByRef lpdwTagId As Long, Optional ByVal lpDependencies As LongPtr, Optional ByVal lpServiceStartName As LongPtr, Optional ByVal lpPassword As LongPtr, Optional ByVal lpDisplayName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ChangeServiceConfig Lib "advapi32" Alias "ChangeServiceConfigW" (ByVal hService As LongPtr, ByVal dwServiceType As SystemServiceType, ByVal dwStartType As ServiceStartType, ByVal dwErrorControl As ServiceErrorControlType, Optional ByVal lpBinaryPathName As String, Optional ByVal lpLoadOrderGroup As String, Optional ByRef lpdwTagId As Long, Optional ByVal lpDependencies As String, Optional ByVal lpServiceStartName As String, Optional ByVal lpPassword As String, Optional ByVal lpDisplayName As String) As BOOL
Public Declare PtrSafe Function ChangeServiceConfig2A Lib "advapi32" (ByVal hService As LongPtr, ByVal dwInfoLevel As ServiceConfigInfoLevels, Optional lpInfo As Any) As BOOL
Public DeclareWide PtrSafe Function ChangeServiceConfig2W Lib "advapi32" (ByVal hService As LongPtr, ByVal dwInfoLevel As ServiceConfigInfoLevels, Optional lpInfo As Any) As BOOL
Public DeclareWide PtrSafe Function ChangeServiceConfig2 Lib "advapi32" Alias "ChangeServiceConfig2W" (ByVal hService As LongPtr, ByVal dwInfoLevel As ServiceConfigInfoLevels, Optional lpInfo As Any) As BOOL
Public Declare PtrSafe Function CloseServiceHandle Lib "advapi32" (ByVal hSCObject As LongPtr) As BOOL
Public Declare PtrSafe Function ControlService Lib "advapi32" (ByVal hService As LongPtr, ByVal dwControl As SERVICE_CONTROL, lpServiceStatus As SERVICE_STATUS) As BOOL
Public Declare PtrSafe Function CreateServiceA Lib "advapi32" (ByVal hService As LongPtr, ByVal lpServiceName As String, ByVal lpDisplayName As String, [TypeHint(ServiceAccessRights, StandardAccessTypes)] ByVal dwDesiredAccess As Long, ByVal dwServiceType As SystemServiceType, ByVal dwStartType As ServiceStartType, ByVal dwErrorControl As ServiceErrorControlType, Optional ByVal lpBinaryPathName As String, Optional ByVal lpLoadOrderGroup As String, Optional ByRef lpdwTagId As Long, Optional ByVal lpDependencies As String, Optional ByVal lpServiceStartName As String, Optional ByVal lpPassword As String) As BOOL
Public Declare PtrSafe Function CreateServiceW Lib "advapi32" (ByVal hService As LongPtr, ByVal lpServiceName As LongPtr, ByVal lpDisplayName As LongPtr, [TypeHint(ServiceAccessRights, StandardAccessTypes)] ByVal dwDesiredAccess As Long, ByVal dwServiceType As SystemServiceType, ByVal dwStartType As ServiceStartType, ByVal dwErrorControl As ServiceErrorControlType, Optional ByVal lpBinaryPathName As LongPtr, Optional ByVal lpLoadOrderGroup As LongPtr, Optional ByRef lpdwTagId As Long, Optional ByVal lpDependencies As LongPtr, Optional ByVal lpServiceStartName As LongPtr, Optional ByVal lpPassword As LongPtr) As BOOL
Public DeclareWide PtrSafe Function CreateService Lib "advapi32" Alias "CreateServiceW" (ByVal hService As LongPtr, ByVal lpServiceName As String, ByVal lpDisplayName As String, [TypeHint(ServiceAccessRights, StandardAccessTypes)] ByVal dwDesiredAccess As Long, ByVal dwServiceType As SystemServiceType, ByVal dwStartType As ServiceStartType, ByVal dwErrorControl As ServiceErrorControlType, Optional ByVal lpBinaryPathName As String, Optional ByVal lpLoadOrderGroup As LongPtr, Optional ByRef lpdwTagId As Long, Optional ByVal lpDependencies As String, Optional ByVal lpServiceStartName As String, Optional ByVal lpPassword As String) As BOOL
Public Declare PtrSafe Function DeleteService Lib "advapi32" (ByVal hService As LongPtr) As BOOL
Public Declare PtrSafe Function EnumDependentServicesA Lib "advapi32" (ByVal hService As LongPtr, ByVal dwServiceState As ServiceState, lpServices As ENUM_SERVICE_STATUSA, ByVal cbBufSize As Long, pcbBytesNeeded As Long, lpServicesReturned As Long) As BOOL
Public Declare PtrSafe Function EnumDependentServicesW Lib "advapi32" (ByVal hService As LongPtr, ByVal dwServiceState As ServiceState, lpServices As ENUM_SERVICE_STATUSW, ByVal cbBufSize As Long, pcbBytesNeeded As Long, lpServicesReturned As Long) As BOOL
Public DeclareWide PtrSafe Function EnumDependentServices Lib "advapi32" Alias "EnumDependentServicesW" (ByVal hService As LongPtr, ByVal dwServiceState As ServiceState, lpServices As ENUM_SERVICE_STATUS, ByVal cbBufSize As Long, pcbBytesNeeded As Long, lpServicesReturned As Long) As BOOL
Public Declare PtrSafe Function EnumServicesStatusA Lib "advapi32" (ByVal hSCManager As LongPtr, ByVal dwServiceType As SystemServiceType, ByVal dwServiceState As ServiceState, lpServices As ENUM_SERVICE_STATUSA, ByVal cbBufSize As Long, pcbBytesNeeded As Long, lpServicesReturned As Long, Optional lpResumeHandle As Long) As BOOL
Public Declare PtrSafe Function EnumServicesStatusW Lib "advapi32" (ByVal hSCManager As LongPtr, ByVal dwServiceType As SystemServiceType, ByVal dwServiceState As ServiceState, lpServices As ENUM_SERVICE_STATUSW, ByVal cbBufSize As Long, pcbBytesNeeded As Long, lpServicesReturned As Long, Optional lpResumeHandle As Long) As BOOL
Public DeclareWide PtrSafe Function EnumServicesStatus Lib "advapi32" Alias "EnumServicesStatusW" (ByVal hSCManager As LongPtr, ByVal dwServiceType As SystemServiceType, ByVal dwServiceState As ServiceState, lpServices As ENUM_SERVICE_STATUS, ByVal cbBufSize As Long, pcbBytesNeeded As Long, lpServicesReturned As Long, Optional lpResumeHandle As Long) As BOOL
Public Declare PtrSafe Function EnumServicesStatusExA Lib "advapi32" (ByVal hSCManager As LongPtr, ByVal InfoLevel As SC_ENUM_TYPE, ByVal dwServiceType As SystemServiceType, ByVal dwServiceState As ServiceState, lpServices As Any, ByVal cbBufSize As Long, pcbBytesNeeded As Long, lpServicesReturned As Long, Optional lpResumeHandle As Long, Optional ByVal pszGroupName As String) As BOOL
Public Declare PtrSafe Function EnumServicesStatusExW Lib "advapi32" (ByVal hSCManager As LongPtr, ByVal InfoLevel As SC_ENUM_TYPE, ByVal dwServiceType As SystemServiceType, ByVal dwServiceState As ServiceState, lpServices As Any, ByVal cbBufSize As Long, pcbBytesNeeded As Long, lpServicesReturned As Long, Optional lpResumeHandle As Long, Optional ByVal pszGroupName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function EnumServicesStatusEx Lib "advapi32" Alias "EnumServicesStatusExW" (ByVal hSCManager As LongPtr, ByVal InfoLevel As SC_ENUM_TYPE, ByVal dwServiceType As SystemServiceType, ByVal dwServiceState As ServiceState, lpServices As Any, ByVal cbBufSize As Long, pcbBytesNeeded As Long, lpServicesReturned As Long, Optional lpResumeHandle As Long, Optional ByVal pszGroupName As String) As BOOL
Public Declare PtrSafe Function GetServiceKeyNameA Lib "advapi32" (ByVal hSCManager As LongPtr, ByVal lpDisplayName As String, ByVal lpServiceName As String, lpcchBuffer As Long) As BOOL
Public Declare PtrSafe Function GetServiceKeyNameW Lib "advapi32" (ByVal hSCManager As LongPtr, ByVal lpDisplayName As LongPtr, ByVal lpServiceName As LongPtr, lpcchBuffer As Long) As BOOL
Public DeclareWide PtrSafe Function GetServiceKeyName Lib "advapi32" Alias "GetServiceKeyNameW" (ByVal hSCManager As LongPtr, ByVal lpDisplayName As String, ByVal lpServiceName As String, lpcchBuffer As Long) As BOOL
Public Declare PtrSafe Function GetServiceDisplayNameA Lib "advapi32" (ByVal hSCManager As LongPtr, ByVal lpServiceName As String, ByVal lpDisplayeName As String, lpcchBuffer As Long) As BOOL
Public Declare PtrSafe Function GetServiceDisplayNameW Lib "advapi32" (ByVal hSCManager As LongPtr, ByVal lpServiceName As LongPtr, ByVal lpDisplayName As LongPtr, lpcchBuffer As Long) As BOOL
Public DeclareWide PtrSafe Function GetServiceDisplayName Lib "advapi32" Alias "GetServiceDisplayNameW" (ByVal hSCManager As LongPtr, ByVal lpServiceName As String, ByVal lpDisplayeName As String, lpcchBuffer As Long) As BOOL
Public Declare PtrSafe Function LockServiceDatabase Lib "advapi32" (ByVal hSCManager As LongPtr) As LongPtr
Public Declare PtrSafe Function NotifyBootConfigStatus Lib "advapi32" (ByVal BootAcceptable As BOOL) As BOOL
Public Declare PtrSafe Function OpenSCManagerA Lib "advapi32" (ByVal lpMachineName As String, ByVal lpDatabaseName As String, ByVal dwDesiredAccess As ServiceControlManagerAccess) As LongPtr
Public Declare PtrSafe Function OpenSCManagerW Lib "advapi32" (ByVal lpMachineName As LongPtr, ByVal lpDatabaseName As LongPtr, ByVal dwDesiredAccess As ServiceControlManagerAccess) As LongPtr
Public DeclareWide PtrSafe Function OpenSCManager Lib "advapi32" Alias "OpenSCManagerW" (ByVal lpMachineName As String, ByVal lpDatabaseName As String, ByVal dwDesiredAccess As ServiceControlManagerAccess) As LongPtr
Public Declare PtrSafe Function OpenServiceA Lib "advapi32" (ByVal hSCManager As LongPtr, ByVal lpServiceName As String, ByVal dwDesiredAccess As ServiceControlManagerAccess) As LongPtr
Public Declare PtrSafe Function OpenServiceW Lib "advapi32" (ByVal hSCManager As LongPtr, ByVal lpServiceName As LongPtr, ByVal dwDesiredAccess As ServiceControlManagerAccess) As LongPtr
Public DeclareWide PtrSafe Function OpenService Lib "advapi32" Alias "OpenServiceW" (ByVal hSCManager As LongPtr, ByVal lpServiceName As String, ByVal dwDesiredAccess As ServiceControlManagerAccess) As LongPtr
Public Declare PtrSafe Function QueryServiceConfigA Lib "advapi32" (ByVal hService As LongPtr, lpServiceConfig As QUERY_SERVICE_CONFIGA, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public Declare PtrSafe Function QueryServiceConfigW Lib "advapi32" (ByVal hService As LongPtr, lpServiceConfig As QUERY_SERVICE_CONFIGW, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function QueryServiceConfig Lib "advapi32" Alias "QueryServiceConfigW" (ByVal hService As LongPtr, lpServiceConfig As QUERY_SERVICE_CONFIG, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public Declare PtrSafe Function QueryServiceConfig2A Lib "advapi32" (ByVal hService As LongPtr, ByVal InfoLevel As ServiceConfigInfoLevels, lpBuffer As Any, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public Declare PtrSafe Function QueryServiceConfig2W Lib "advapi32" (ByVal hService As LongPtr, ByVal InfoLevel As ServiceConfigInfoLevels, lpBuffer As Any, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function QueryServiceConfig2 Lib "advapi32" Alias "QueryServiceConfig2W" (ByVal hService As LongPtr, ByVal InfoLevel As ServiceConfigInfoLevels, lpBuffer As Any, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public Declare PtrSafe Function QueryServiceLockStatusA Lib "advapi32" (ByVal hSCManager As LongPtr, lpLockStatus As QUERY_SERVICE_LOCK_STATUSA, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public Declare PtrSafe Function QueryServiceLockStatusW Lib "advapi32" (ByVal hSCManager As LongPtr, lpLockStatus As QUERY_SERVICE_LOCK_STATUSW, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function QueryServiceLockStatus Lib "advapi32" Alias "QueryServiceLockStatusW" (ByVal hSCManager As LongPtr, lpLockStatus As QUERY_SERVICE_LOCK_STATUS, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public Declare PtrSafe Function QueryServiceObjectSecurity Lib "advapi32" (ByVal hService As LongPtr, ByVal dwSecurityInformation As SECURITY_INFORMATION, lpSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public Declare PtrSafe Function QueryServiceStatus Lib "advapi32" (ByVal hService As LongPtr, lpServiceStatus As SERVICE_STATUS) As BOOL
Public Declare PtrSafe Function QueryServiceStatusEx Lib "advapi32" (ByVal hService As LongPtr, ByVal InfoLevel As SC_STATUS_LEVEL, lpBuffer As SERVICE_STATUS_PROCESS, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public Declare PtrSafe Function RegisterServiceCtrlHandlerA Lib "advapi32" (ByVal lpServiceName As String, ByVal lpHandlerProc As LongPtr) As LongPtr
Public Declare PtrSafe Function RegisterServiceCtrlHandlerW Lib "advapi32" (ByVal lpServiceName As LongPtr, ByVal lpHandlerProc As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function RegisterServiceCtrlHandler Lib "advapi32" Alias "RegisterServiceCtrlHandlerW" (ByVal lpServiceName As String, ByVal lpHandlerProc As LongPtr) As LongPtr
Public Declare PtrSafe Function RegisterServiceCtrlHandlerExA Lib "advapi32" (ByVal lpServiceName As String, ByVal lpHandlerProc As LongPtr, Optional lpContext As Any) As LongPtr
Public Declare PtrSafe Function RegisterServiceCtrlHandlerExW Lib "advapi32" (ByVal lpServiceName As LongPtr, ByVal lpHandlerProc As LongPtr, Optional lpContext As Any) As LongPtr
Public DeclareWide PtrSafe Function RegisterServiceCtrlHandlerEx Lib "advapi32" Alias "RegisterServiceCtrlHandlerExW" (ByVal lpServiceName As String, ByVal lpHandlerProc As LongPtr, Optional lpContext As Any) As LongPtr
Public Declare PtrSafe Function SetServiceObjectSecurity Lib "advapi32" (ByVal hService As LongPtr, ByVal dwSecurityInformation As SECURITY_INFORMATION, lpSecurityDescriptor As SECURITY_DESCRIPTOR) As BOOL
Public Declare PtrSafe Function SetServiceStatus Lib "advapi32" (ByVal hServiceStatus As LongPtr, lpServiceStatus As SERVICE_STATUS) As BOOL
Public Declare PtrSafe Function StartServiceCtrlDispatcherA Lib "advapi32" (lpServiceStartTable As SERVICE_TABLE_ENTRYA) As BOOL
Public Declare PtrSafe Function StartServiceCtrlDispatcherW Lib "advapi32" (lpServiceStartTable As SERVICE_TABLE_ENTRYW) As BOOL
Public DeclareWide PtrSafe Function StartServiceCtrlDispatcher Lib "advapi32" Alias "StartServiceCtrlDispatcherW" (lpServiceStartTable As SERVICE_TABLE_ENTRY) As BOOL
Public Declare PtrSafe Function StartServiceA Lib "advapi32" (ByVal hService As LongPtr, ByVal dwNumServiceArgs As Long, Optional lpServiceArgVectors As String) As Long
Public Declare PtrSafe Function StartServiceW Lib "advapi32" (ByVal hService As LongPtr, ByVal dwNumServiceArgs As Long, Optional lpServiceArgVectors As LongPtr) As Long
Public DeclareWide PtrSafe Function StartService Lib "advapi32" Alias "StartServiceW" (ByVal hService As LongPtr, ByVal dwNumServiceArgs As Long, Optional lpServiceArgVectors As String) As Long
Public Declare PtrSafe Function UnlockServiceDatabase Lib "advapi32" (ByVal ScLock As LongPtr) As BOOL
Public Declare PtrSafe Function NotifyServiceStatusChangeA Lib "advapi32" (ByVal hService As LongPtr, dwNotifyMask As ServiceNotifyMask, pNotifyBuffer As SERVICE_NOTIFYW) As Long
Public Declare PtrSafe Function NotifyServiceStatusChangeW Lib "advapi32" (ByVal hService As LongPtr, dwNotifyMask As ServiceNotifyMask, pNotifyBuffer As SERVICE_NOTIFYW) As Long
Public DeclareWide PtrSafe Function NotifyServiceStatusChange Lib "advapi32" Alias "NotifyServiceStatusChangeW" (ByVal hService As LongPtr, dwNotifyMask As ServiceNotifyMask, pNotifyBuffer As SERVICE_NOTIFYW) As Long
Public Declare PtrSafe Function ControlServiceExA Lib "advapi32" (ByVal hService As LongPtr, ByVal dwControl As SERVICE_CONTROL, ByVal dwInfoLevel As ServiceControlInfoLevels, pControlParams As Any) As BOOL
Public Declare PtrSafe Function ControlServiceExW Lib "advapi32" (ByVal hService As LongPtr, ByVal dwControl As SERVICE_CONTROL, ByVal dwInfoLevel As ServiceControlInfoLevels, pControlParams As Any) As BOOL
Public DeclareWide PtrSafe Function ControlServiceEx Lib "advapi32" Alias "ControlServiceExW" (ByVal hService As LongPtr, ByVal dwControl As SERVICE_CONTROL, ByVal dwInfoLevel As ServiceControlInfoLevels, pControlParams As Any) As BOOL
Public Declare PtrSafe Function QueryServiceDynamicInformation Lib "advapi32" (ByVal hServiceStatus As LongPtr, ByVal dwInfoLevel As ServiceDynamicInfoLevels, ppDynamicInfo As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SubscribeServiceChangeNotifications Lib "sechost" (ByVal hService As LongPtr, ByVal eEventType As SC_EVENT_TYPE, ByVal pCallback As LongPtr, pCallbackContext As Any, pSubscription As LongPtr) As Long
Public Declare PtrSafe Sub UnsubscribeServiceChangeNotifications Lib "sechost" (ByVal pSubscription As LongPtr)
Public Declare PtrSafe Function WaitServiceState Lib "advapi32" (ByVal hService As LongPtr, ByVal dwNotify As ServiceNotifyMask, Optional ByVal dwTimeout As Long, Optional ByVal hCancelEvent As LongPtr) As Long
[Description("Windows 10 Redstone 4 and newer only.")]
Public Declare PtrSafe Function GetServiceRegistryStateKey Lib "sechost" (ByVal ServiceStatusHandle As LongPtr, ByVal StateType As SERVICE_REGISTRY_STATE_TYPE, ByVal dwAccessMask As Long, ServiceStateKey As LongPtr) As Long
[Description("Windows 10 Redstone 5 and newer only.")]
Public Declare PtrSafe Function GetServiceDirectory Lib "sechost" (ByVal hServiceStatus As LongPtr, ByVal eDirectoryType As SERVICE_DIRECTORY_TYPE, ByVal lpPathBuffer As LongPtr, ByVal cchPathBufferLength As Long, lpcchRequiredBufferLength As Long) As Long
[Description("Windows 10 20H2 and newer only.")]
Public Declare PtrSafe Function GetSharedServiceRegistryStateKey Lib "sechost" (ByVal ServiceHandle As LongPtr, ByVal StateType As SERVICE_SHARED_REGISTRY_STATE_TYPE, ByVal dwAccessMask As Long, ServiceStateKey As LongPtr) As Long
Public Declare PtrSafe Function GetSharedServiceDirectory Lib "sechost" (ByVal ServiceHandle As LongPtr, ByVal DirectoryType As SERVICE_SHARED_DIRECTORY_TYPE, ByVal lpPathBuffer As LongPtr, ByVal PathBufferLength As Long, RequiredBufferLength As Long) As Long









Public Enum RegNotifyChangeValues
	REG_NOTIFY_CHANGE_NAME = (&H00000001)  ' Create or delete (child)
	REG_NOTIFY_CHANGE_ATTRIBUTES = (&H00000002)
	REG_NOTIFY_CHANGE_LAST_SET = (&H00000004)  ' time stamp
	REG_NOTIFY_CHANGE_SECURITY = (&H00000008)
	REG_NOTIFY_THREAD_AGNOSTIC = (&H10000000)  ' Not associated with a calling thread, can only be used
                                                '  for async user event based notification
    REG_LEGAL_CHANGE_FILTER = (REG_NOTIFY_CHANGE_NAME Or REG_NOTIFY_CHANGE_ATTRIBUTES Or REG_NOTIFY_CHANGE_LAST_SET Or REG_NOTIFY_CHANGE_SECURITY Or REG_NOTIFY_THREAD_AGNOSTIC)
End Enum

Public Enum RegSaveKeyFlags
	REG_STANDARD_FORMAT = 1
	REG_LATEST_FORMAT = 2
	REG_NO_COMPRESSION = 4
End Enum

Public Enum RegKeyRestoreAndLoadHiveFlags
	REG_WHOLE_HIVE_VOLATILE = (&H00000001) ' Restore whole hive volatile
	REG_REFRESH_HIVE = (&H00000002) ' Unwind changes to last flush
	REG_NO_LAZY_FLUSH = (&H00000004) ' Never lazy flush this hive
	REG_FORCE_RESTORE = (&H00000008) ' Force the restore process even when we have open handles on subkeys
	REG_APP_HIVE = (&H00000010) ' Loads the hive visible to the calling process
	REG_PROCESS_PRIVATE = (&H00000020) ' Hive cannot be mounted by any other process while in use
	REG_START_JOURNAL = (&H00000040) ' Starts Hive Journal
	REG_HIVE_EXACT_FILE_GROWTH = (&H00000080) ' Grow hive file in exact 4k increments
	REG_HIVE_NO_RM = (&H00000100) ' No RM is started for this hive (no transactions)
	REG_HIVE_SINGLE_LOG = (&H00000200) ' Legacy single logging is used for this hive
	REG_BOOT_HIVE = (&H00000400) ' This hive might be used by the OS loader
	REG_LOAD_HIVE_OPEN_HANDLE = (&H00000800) ' Load the hive and return a handle to its root kcb
	REG_FLUSH_HIVE_FILE_GROWTH = (&H00001000) ' Flush changes to primary hive file size as part of all flushes
	REG_OPEN_READ_ONLY = (&H00002000) ' Open a hive's files in read-only mode
	REG_IMMUTABLE = (&H00004000) ' Load the hive, but don't allow any modification of it
	REG_NO_IMPERSONATION_FALLBACK = (&H00008000&) ' Do not fall back to impersonating the caller if hive file access fails
	REG_APP_HIVE_OPEN_READ_ONLY = (REG_OPEN_READ_ONLY)  ' Open an app hive's files in read-only mode (if the hive was not previously loaded)
End Enum


Public Enum LogonOperations
    LOGON32_LOGON_INTERACTIVE = 2
    LOGON32_LOGON_NETWORK = 3
    LOGON32_LOGON_BATCH = 4
    LOGON32_LOGON_SERVICE = 5
    LOGON32_LOGON_UNLOCK = 7
    LOGON32_LOGON_NETWORK_CLEARTEXT = 8
    LOGON32_LOGON_NEW_CREDENTIALS = 9
End Enum
Public Enum LogonProviders
    LOGON32_PROVIDER_DEFAULT = 0
    LOGON32_PROVIDER_WINNT35 = 1
    LOGON32_PROVIDER_WINNT40 = 2
    LOGON32_PROVIDER_WINNT50 = 3
    ''#if(_WIN32_WINNT >= 0x0600)
    LOGON32_PROVIDER_VIRTUAL = 4
End Enum

Public Enum FileEncryptionStatus
    FILE_ENCRYPTABLE = 0
    FILE_IS_ENCRYPTED = 1
    FILE_SYSTEM_ATTR = 2
    FILE_ROOT_DIR = 3
    FILE_SYSTEM_DIR = 4
    FILE_UNKNOWN = 5
    FILE_SYSTEM_NOT_SUPPORT = 6
    FILE_USER_DISALLOWED = 7
    FILE_READ_ONLY = 8
    FILE_DIR_DISALLOWED = 9
End Enum

Public Type VALENTA
    ve_valuename As String
    ve_valuelen As Long
    ve_valueptr As LongPtr
    ve_type As REGTYPES
End Type
Public Type VALENTW
    ve_valuename As LongPtr
    ve_valuelen As Long
    ve_valueptr As LongPtr
    ve_type As REGTYPES
End Type
Public Type VALENT
    ve_valuename As LongPtr
    ve_valuelen As Long
    ve_valueptr As LongPtr
    ve_type As REGTYPES
End Type
Public Type val_context
    valuelen As Long ' the total length of this value
    value_context As LongPtr ' provider's context
    val_buff_ptr As LongPtr ' where in the ouput buffer the value is.
End Type
Public Type PVALUEA ' Provider supplied value/context.
    pv_valuename As String ' The value name pointer
    pv_valuelen As Long
    pv_value_context As LongPtr
    pv_type As Long
End Type
Public Type PVALUEW ' Provider supplied value/context.
    pv_valuename As LongPtr ' The value name pointer
    pv_valuelen As Long
    pv_value_context As LongPtr
    pv_type As Long
End Type
'Alias PVALUE As PVALUEW
Public Type PVALUE ' Provider supplied value/context.
    pv_valuename As LongPtr ' The value name pointer
    pv_valuelen As Long
    pv_value_context As LongPtr
    pv_type As Long
End Type

Public Enum REG_APPKEY_FLAGS
    REG_PROCESS_APPKEY = &H00000001
    REG_USE_CURRENT_SECURITY_CONTEXT = &H00000002
End Enum

Public Enum REG_MUI_FLAGS
    REG_MUI_STRING_TRUNCATE = &H00000001
End Enum

Public Enum REG_CONNECT_FLAGS
    REG_SECURE_CONNECTION = 1
End Enum

Public Enum RegGetValueFlags
    RRF_RT_REG_NONE = &H00000001  ' restrict type to REG_NONE      (other data types will not return ERROR_SUCCESS)
    RRF_RT_REG_SZ = &H00000002  ' restrict type to REG_SZ        (other data types will not return ERROR_SUCCESS) (automatically converts REG_EXPAND_SZ to REG_SZ unless RRF_NOEXPAND is specified)
    RRF_RT_REG_EXPAND_SZ = &H00000004  ' restrict type to REG_EXPAND_SZ (other data types will not return ERROR_SUCCESS) (must specify RRF_NOEXPAND or RegGetValue will fail with ERROR_INVALID_PARAMETER)
    RRF_RT_REG_BINARY = &H00000008  ' restrict type to REG_BINARY    (other data types will not return ERROR_SUCCESS)
    RRF_RT_REG_DWORD = &H00000010  ' restrict type to REG_DWORD     (other data types will not return ERROR_SUCCESS)
    RRF_RT_REG_MULTI_SZ = &H00000020  ' restrict type to REG_MULTI_SZ  (other data types will not return ERROR_SUCCESS)
    RRF_RT_REG_QWORD = &H00000040  ' restrict type to REG_QWORD     (other data types will not return ERROR_SUCCESS)
    RRF_RT_DWORD = (RRF_RT_REG_BINARY Or RRF_RT_REG_DWORD)  ' restrict type to *32-bit* RRF_RT_REG_BINARY or RRF_RT_REG_DWORD (other data types will not return ERROR_SUCCESS)
    RRF_RT_QWORD = (RRF_RT_REG_BINARY Or RRF_RT_REG_QWORD)  ' restrict type to *64-bit* RRF_RT_REG_BINARY or RRF_RT_REG_DWORD (other data types will not return ERROR_SUCCESS)
    RRF_RT_ANY = &H0000ffff&  ' no type restriction
' #if (_WIN32_WINNT >= _WIN32_WINNT_WINTHRESHOLD)
    RRF_SUBKEY_WOW6464KEY = &H00010000  ' when opening the subkey (if provided) force open from the 64bit location (only one SUBKEY_WOW64* flag can be set or RegGetValue will fail with ERROR_INVALID_PARAMETER)
    RRF_SUBKEY_WOW6432KEY = &H00020000  ' when opening the subkey (if provided) force open from the 32bit location (only one SUBKEY_WOW64* flag can be set or RegGetValue will fail with ERROR_INVALID_PARAMETER)
    RRF_WOW64_MASK = &H00030000
' #endif
    RRF_NOEXPAND = &H10000000  ' do not automatically expand environment strings if value is of type REG_EXPAND_SZ
    RRF_ZEROONFAILURE = &H20000000  ' if pvData is not NULL, set content to all zeros on failure
End Enum

Public Type REG_PROVIDER
    pi_R0_1val As LongPtr 'PQUERYLongPtrR
    pi_R0_allvals As LongPtr 'PQUERYLongPtrR
    pi_R3_1val As LongPtr 'PQUERYLongPtrR
    pi_R3_allvals As LongPtr 'PQUERYLongPtrR
    pi_flags As Long ' capability flags (none defined yet).
    pi_key_context As LongPtr
End Type

Public Enum RegistryCreateDispositions
    REG_CREATED_NEW_KEY = (&H00000001)  ' New Registry Key created
    REG_OPENED_EXISTING_KEY = (&H00000002)  ' Existing Key opened
End Enum
Public Enum RegOptions
    REG_OPTION_RESERVED = (&H00000000)  ' Parameter is reserved
    REG_OPTION_NON_VOLATILE = (&H00000000)  ' Key is preserved when system is rebooted
    REG_OPTION_VOLATILE = (&H00000001)  ' Key is not preserved when system is rebooted
    REG_OPTION_CREATE_LINK = (&H00000002)  ' Created key is a symbolic link
    REG_OPTION_BACKUP_RESTORE = (&H00000004)  ' open for backup or restore special access rules privilege required
    REG_OPTION_OPEN_LINK = (&H00000008)  ' Open symbolic link
    REG_OPTION_DONT_VIRTUALIZE = (&H00000010)  ' Disable Open/Read/Write virtualization for this open and the resulting handle.
    REG_LEGAL_OPTION = (REG_OPTION_RESERVED Or REG_OPTION_NON_VOLATILE Or REG_OPTION_VOLATILE Or REG_OPTION_CREATE_LINK Or REG_OPTION_BACKUP_RESTORE Or REG_OPTION_OPEN_LINK Or REG_OPTION_DONT_VIRTUALIZE)
    REG_OPEN_LEGAL_OPTION = (REG_OPTION_RESERVED Or REG_OPTION_BACKUP_RESTORE Or REG_OPTION_OPEN_LINK Or REG_OPTION_DONT_VIRTUALIZE)
End Enum

Public Enum RegUnloadFlags
    REG_FORCE_UNLOAD = 1
    REG_UNLOAD_LEGAL_FLAGS = (REG_FORCE_UNLOAD)
End Enum


'winreg.h 100% covered
[Description("**DEPRECATED** - For Win9x compatibility only. Use RegOpenKeyExA instead.)")]
Public Declare PtrSafe Function RegOpenKeyA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, phkResult As LongPtr) As Long
[Description("**DEPRECATED** - For Win9x compatibility only. Use RegOpenKeyExW instead.)")]
Public Declare PtrSafe Function RegOpenKeyW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As LongPtr, phkResult As LongPtr) As Long
[Description("**DEPRECATED** - For Win9x compatibility only. Use RegOpenKeyEx instead.)")]
Public DeclareWide PtrSafe Function RegOpenKey Lib "advapi32" Alias "RegOpenKeyW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, phkResult As LongPtr) As Long
Public Declare PtrSafe Function RegOpenKeyExA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal ulOptions As RegOptions, ByVal samDesired As REGSAM, phkResult As LongPtr) As Long
Public Declare PtrSafe Function RegOpenKeyExW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As LongPtr, ByVal ulOptions As RegOptions, ByVal samDesired As REGSAM, phkResult As LongPtr) As Long
Public DeclareWide PtrSafe Function RegOpenKeyEx Lib "advapi32" Alias "RegOpenKeyExW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal ulOptions As RegOptions, ByVal samDesired As REGSAM, phkResult As LongPtr) As Long
Public Declare PtrSafe Function RegOpenKeyTransactedA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal ulOptions As RegOptions, ByVal samDesired As REGSAM, phkResult As LongPtr, ByVal hTransaction As LongPtr, pExtendedParameter As Any) As Long
Public DeclareWide PtrSafe Function RegOpenKeyTransactedW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As LongPtr, ByVal ulOptions As RegOptions, ByVal samDesired As REGSAM, phkResult As LongPtr, ByVal hTransaction As LongPtr, pExtendedParameter As Any) As Long
Public DeclareWide PtrSafe Function RegOpenKeyTransacted Lib "advapi32" Alias "RegOpenKeyTransactedW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal ulOptions As RegOptions, ByVal samDesired As REGSAM, phkResult As LongPtr, ByVal hTransaction As LongPtr, pExtendedParameter As Any) As Long
[Description("**DEPRECATED** - For Win9x compatibility only. Use RegCreateKeyExA instead.)")]
Public Declare PtrSafe Function RegCreateKeyA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, phkResult As LongPtr) As Long
[Description("**DEPRECATED** - For Win9x compatibility only. Use RegCreateKeyExW instead.)")]
Public Declare PtrSafe Function RegCreateKeyW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As LongPtr, phkResult As LongPtr) As Long
[Description("**DEPRECATED** - For Win9x compatibility only. Use RegCreateKeyEx instead.)")]
Public DeclareWide PtrSafe Function RegCreateKey Lib "advapi32" Alias "RegCreateKeyW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, phkResult As LongPtr) As Long
Public Declare PtrSafe Function RegCreateKeyExA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal Reserved As LongPtr, ByVal lpClass As String, ByVal dwOptions As RegOptions, ByVal samDesired As REGSAM, lpSecurityAttributes As SECURITY_ATTRIBUTES, phkResult As LongPtr, lpdwDisposition As RegistryCreateDispositions) As Long
Public Declare PtrSafe Function RegCreateKeyExW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As LongPtr, ByVal Reserved As LongPtr, ByVal lpClass As LongPtr, ByVal dwOptions As RegOptions, ByVal samDesired As REGSAM, lpSecurityAttributes As SECURITY_ATTRIBUTES, phkResult As LongPtr, lpdwDisposition As RegistryCreateDispositions) As Long
Public DeclareWide PtrSafe Function RegCreateKeyEx Lib "advapi32" Alias "RegCreateKeyExW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal Reserved As LongPtr, ByVal lpClass As String, ByVal dwOptions As RegOptions, ByVal samDesired As REGSAM, lpSecurityAttributes As SECURITY_ATTRIBUTES, phkResult As LongPtr, lpdwDisposition As RegistryCreateDispositions) As Long
Public Declare PtrSafe Function RegCreateKeyTransactedA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal Reserved As LongPtr, ByVal lpClass As String, ByVal dwOptions As RegOptions, ByVal samDesired As REGSAM, lpSecurityAttributes As SECURITY_ATTRIBUTES, phkResult As LongPtr, lpdwDisposition As RegistryCreateDispositions, ByVal hTransaction As LongPtr, pExtendedParameter As Any) As Long
Public DeclareWide PtrSafe Function RegCreateKeyTransactedW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As LongPtr, ByVal Reserved As LongPtr, ByVal lpClass As LongPtr, ByVal dwOptions As RegOptions, ByVal samDesired As REGSAM, lpSecurityAttributes As SECURITY_ATTRIBUTES, phkResult As LongPtr, lpdwDisposition As RegistryCreateDispositions, ByVal hTransaction As LongPtr, pExtendedParameter As Any) As Long
Public DeclareWide PtrSafe Function RegCreateKeyTransacted Lib "advapi32" Alias "RegCreateKeyTransactedW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal Reserved As LongPtr, ByVal lpClass As String, ByVal dwOptions As RegOptions, ByVal samDesired As REGSAM, lpSecurityAttributes As SECURITY_ATTRIBUTES, phkResult As LongPtr, lpdwDisposition As RegistryCreateDispositions, ByVal hTransaction As LongPtr, pExtendedParameter As Any) As Long
Public Declare PtrSafe Function RegGetValueA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal lpValue As String, ByVal dwFlags As RegGetValueFlags, pdwType As REGTYPES, pvData As Any, pcbData As Long) As Long
Public Declare PtrSafe Function RegGetValueW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As LongPtr, ByVal lpValue As LongPtr, ByVal dwFlags As RegGetValueFlags, pdwType As REGTYPES, pvData As Any, pcbData As Long) As Long
Public DeclareWide PtrSafe Function RegGetValue Lib "advapi32" Alias "RegGetValueW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal lpValue As String, ByVal dwFlags As RegGetValueFlags, pdwType As REGTYPES, pvData As Any, pcbData As Long) As Long
[Description("**DEPRECATED** - For Win9x compatibility only. Use RegSetValueExA instead.)")]
Public Declare PtrSafe Function RegSetValueA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal dwType As REGTYPES, lpData As Any, ByVal cbData As Long) As Long
[Description("**DEPRECATED** - For Win9x compatibility only. Use RegSetValueExW instead.)")]
Public Declare PtrSafe Function RegSetValueW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As LongPtr, ByVal dwType As REGTYPES, lpData As Any, ByVal cbData As Long) As Long
[Description("**DEPRECATED** - For Win9x compatibility only. Use RegSetValueEx instead.)")]
Public DeclareWide PtrSafe Function RegSetValue Lib "advapi32" Alias "RegSetValueW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal dwType As REGTYPES, lpData As Any, ByVal cbData As Long) As Long
Public Declare PtrSafe Function RegSetValueExA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpValueName As String, ByVal Reserved As Long, ByVal dwType As REGTYPES, lpData As Any, ByVal cbData As Long) As Long
Public DeclareWide PtrSafe Function RegSetValueExW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpValueName As LongPtr, ByVal Reserved As Long, ByVal dwType As REGTYPES, lpData As Any, ByVal cbData As Long) As Long
Public DeclareWide PtrSafe Function RegSetValueEx Lib "advapi32" Alias "RegSetValueExW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpValueName As String, ByVal Reserved As Long, ByVal dwType As REGTYPES, lpData As Any, ByVal cbData As Long) As Long
[Description("**DEPRECATED** - For Win9x compatibility only. Use RegQueryValueExA instead.)")]
Public Declare PtrSafe Function RegQueryValueA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, lpData As Any, lpcbData As Long) As Long
[Description("**DEPRECATED** - For Win9x compatibility only. Use RegQueryValueExW instead.)")]
Public Declare PtrSafe Function RegQueryValueW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As LongPtr, lpData As Any, lpcbData As Long) As Long
[Description("**DEPRECATED** - For Win9x compatibility only. Use RegQueryValueEx instead.)")]
Public DeclareWide PtrSafe Function RegQueryValue Lib "advapi32" Alias "RegQueryValueW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, lpData As Any, lpcbData As Long) As Long
Public Declare PtrSafe Function RegQueryValueExA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpValueName As String, ByVal lpReserved As LongPtr, lpType As REGTYPES, lpData As Any, lpcbData As Long) As Long
Public DeclareWide PtrSafe Function RegQueryValueExW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpValueName As LongPtr, ByVal lpReserved As LongPtr, lpType As REGTYPES, lpData As Any, lpcbData As Long) As Long
Public DeclareWide PtrSafe Function RegQueryValueEx Lib "advapi32" Alias "RegQueryValueExW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpValueName As String, ByVal lpReserved As LongPtr, lpType As REGTYPES, lpData As Any, lpcbData As Long) As Long
Public DeclareWide PtrSafe Function RegEnumKey Lib "advapi32" Alias "RegEnumKeyW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal dwIndex As Long, ByVal lpName As String, ByVal cchName As Long) As Long
Public Declare PtrSafe Function RegEnumKeyA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal dwIndex As Long, ByVal lpName As String, ByVal cchName As Long) As Long
Public Declare PtrSafe Function RegEnumKeyW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal dwIndex As Long, ByVal lpName As LongPtr, ByVal cchName As Long) As Long
Public Declare PtrSafe Function RegEnumKeyExA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal dwIndex As Long, ByVal lpName As String, lpcchName As Long, ByVal lpReserved As LongPtr, ByVal lpClass As String, lpcchClass As Long, lpftLastWriteTime As FILETIME) As Long
Public Declare PtrSafe Function RegEnumKeyExW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal dwIndex As Long, ByVal lpName As LongPtr, lpcchName As Long, ByVal lpReserved As LongPtr, ByVal lpClass As LongPtr, lpcchClass As Long, lpftLastWriteTime As FILETIME) As Long
Public DeclareWide PtrSafe Function RegEnumKeyEx Lib "advapi32" Alias "RegEnumKeyExW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal dwIndex As Long, ByVal lpName As String, lpcchName As Long, ByVal lpReserved As LongPtr, ByVal lpClass As String, lpcchClass As Long, lpftLastWriteTime As FILETIME) As Long
Public DeclareWide PtrSafe Function RegEnumValue Lib "advapi32" Alias "RegEnumValueW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal dwIndex As Long, ByVal lpValueName As String, lpcbValueName As Long, ByVal lpReserved As LongPtr, lpType As REGTYPES, lpData As Byte, lpcbData As Long) As Long
Public Declare PtrSafe Function RegEnumValueA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal dwIndex As Long, ByVal lpValueName As String, lpcbValueName As Long, ByVal lpReserved As LongPtr, lpType As REGTYPES, lpData As Byte, lpcbData As Long) As Long
Public Declare PtrSafe Function RegEnumValueW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal dwIndex As Long, ByVal lpValueName As LongPtr, lpcbValueName As Long, ByVal lpReserved As LongPtr, lpType As REGTYPES, lpData As Byte, lpcbData As Long) As Long
Public Declare PtrSafe Function RegFlushKey Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr) As Long
Public Declare PtrSafe Function RegQueryInfoKeyA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, Optional ByVal lpClass As String, Optional lpcchClass As Long, Optional ByVal lpReserved As LongPtr = 0, Optional lpcSubKeys As Long, Optional lpcbMaxSubKeyLen As Long, Optional lpcbMaxClassLen As Long, Optional lpcValues As Long, Optional lpcbMaxValueNameLen As Long, Optional lpcbMaxValueLen As Long, Optional lpcbSecurityDescriptor As Long, Optional ByVal lpftLastWriteTime As LongPtr) As Long
Public Declare PtrSafe Function RegQueryInfoKeyW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, Optional ByVal lpClass As LongPtr, Optional lpcchClass As Long, Optional ByVal lpReserved As LongPtr = 0, Optional lpcSubKeys As Long, Optional lpcbMaxSubKeyLen As Long, Optional lpcbMaxClassLen As Long, Optional lpcValues As Long, Optional lpcbMaxValueNameLen As Long, Optional lpcbMaxValueLen As Long, Optional lpcbSecurityDescriptor As Long, Optional ByVal lpftLastWriteTime As LongPtr) As Long
Public DeclareWide PtrSafe Function RegQueryInfoKey Lib "advapi32" Alias "RegQueryInfoKeyW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, Optional ByVal lpClass As String, Optional lpcchClass As Long, Optional ByVal lpReserved As LongPtr = 0, Optional lpcSubKeys As Long, Optional lpcbMaxSubKeyLen As Long, Optional lpcbMaxClassLen As Long, Optional lpcValues As Long, Optional lpcbMaxValueNameLen As Long, Optional lpcbMaxValueLen As Long, Optional lpcbSecurityDescriptor As Long, Optional ByVal lpftLastWriteTime As LongPtr) As Long
Public Declare PtrSafe Function RegDeleteValueA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpValueName As String) As Long
Public Declare PtrSafe Function RegDeleteValueW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpValueName As LongPtr) As Long
Public DeclareWide PtrSafe Function RegDeleteValue Lib "advapi32" Alias "RegDeleteValueW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpValueName As String) As Long
Public Declare PtrSafe Function RegNotifyChangeKeyValue Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal bWatchSubtree As BOOL, ByVal dwNotifyFilter As RegNotifyChangeValues, ByVal hEvent As LongPtr, ByVal fAsynchronous As BOOL) As Long
Public Declare PtrSafe Function RegSetKeyValueA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubkey As String, ByVal lpValueName As String, ByVal dwType As REGTYPES, lpData As Any, ByVal cbData As Long) As Long
Public DeclareWide PtrSafe Function RegSetKeyValueW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubkey As LongPtr, ByVal lpValueName As LongPtr, ByVal dwType As REGTYPES, lpData As Any, ByVal cbData As Long) As Long
Public DeclareWide PtrSafe Function RegSetKeyValue Lib "advapi32" Alias "RegSetKeyValueW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubkey As String, ByVal lpValueName As String, ByVal dwType As REGTYPES, lpData As Any, ByVal cbData As Long) As Long
Public Declare PtrSafe Function RegSaveKeyA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpFile As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As Long
Public Declare PtrSafe Function RegSaveKeyW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpFile As LongPtr, lpSecurityAttributes As SECURITY_ATTRIBUTES) As Long
Public DeclareWide PtrSafe Function RegSaveKey Lib "advapi32" Alias "RegSaveKeyW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpFile As String, lpSecurityAttributes As SECURITY_ATTRIBUTES) As Long
Public Declare PtrSafe Function RegSaveKeyExA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpFile As String, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal Flags As RegSaveKeyFlags) As Long
Public Declare PtrSafe Function RegSaveKeyExW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpFile As LongPtr, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal Flags As RegSaveKeyFlags) As Long
Public DeclareWide PtrSafe Function RegSaveKeyEx Lib "advapi32" Alias "RegSaveKeyExW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpFile As String, lpSecurityAttributes As SECURITY_ATTRIBUTES, ByVal Flags As RegSaveKeyFlags) As Long
Public Declare PtrSafe Function RegDeleteKeyValueA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubkey As String, ByVal lpValueName As String) As Long
Public Declare PtrSafe Function RegDeleteKeyValueW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubkey As LongPtr, ByVal lpValueName As LongPtr) As Long
Public DeclareWide PtrSafe Function RegDeleteKeyValue Lib "advapi32" Alias "RegDeleteKeyValueW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubkey As String, ByVal lpValueName As String) As Long
Public Declare PtrSafe Function RegRestoreKeyA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpFile As String, ByVal Flags As RegKeyRestoreAndLoadHiveFlags) As Long
Public Declare PtrSafe Function RegRestoreKeyW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpFile As LongPtr, ByVal Flags As RegKeyRestoreAndLoadHiveFlags) As Long
Public DeclareWide PtrSafe Function RegRestoreKey Lib "advapi32" Alias "RegRestoreKeyW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpFile As String, ByVal Flags As RegKeyRestoreAndLoadHiveFlags) As Long
Public Declare PtrSafe Function RegCloseKey Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr) As Long
Public Declare PtrSafe Function RegGetKeySecurity Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal SecurityInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR) As Long
Public Declare PtrSafe Function RegSetKeySecurity Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal SecurityInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR, lpcbSecurityDescriptor As Long) As Long
Public Declare PtrSafe Function RegOpenCurrentUser Lib "advapi32" (ByVal samDesired As REGSAM, phkeyResult As LongPtr) As Long
Public Declare PtrSafe Function RegDeleteKeyA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String) As Long
Public Declare PtrSafe Function RegDeleteKeyW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As LongPtr) As Long
Public DeclareWide PtrSafe Function RegDeleteKey Lib "advapi32" Alias "RegDeleteKeyW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String) As Long
Public Declare PtrSafe Function RegDeleteKeyExA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal samDesired As REGSAM, ByVal Reserved As Long) As Long
Public Declare PtrSafe Function RegDeleteKeyExW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As LongPtr, ByVal samDesired As REGSAM, ByVal Reserved As Long) As Long
Public DeclareWide PtrSafe Function RegDeleteKeyEx Lib "advapi32" Alias "RegDeleteKeyExW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal samDesired As REGSAM, ByVal Reserved As Long) As Long
Public Declare PtrSafe Function RegDeleteKeyTransactedA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal samDesired As REGSAM, ByVal Reserved As Long, ByVal hTransaction As LongPtr, pExtendedParameter As Any) As Long
Public DeclareWide PtrSafe Function RegDeleteKeyTransactedW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As LongPtr, ByVal samDesired As REGSAM, ByVal Reserved As Long, ByVal hTransaction As LongPtr, pExtendedParameter As Any) As Long
Public DeclareWide PtrSafe Function RegDeleteKeyTransacted Lib "advapi32" Alias "RegDeleteKeyTransactedW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal samDesired As REGSAM, ByVal Reserved As Long, ByVal hTransaction As LongPtr, pExtendedParameter As Any) As Long
Public Declare PtrSafe Function RegCopyTreeA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKeySrc As LongPtr, ByVal lpSubKey As String, ByVal hKeyDest As LongPtr) As Long
Public Declare PtrSafe Function RegCopyTreeW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKeySrc As LongPtr, ByVal lpSubKey As LongPtr, ByVal hKeyDest As LongPtr) As Long
Public DeclareWide PtrSafe Function RegCopyTree Lib "advapi32" Alias "RegCopyTreeW" ([TypeHint(RegKeyspace)] ByVal hKeySrc As LongPtr, ByVal lpSubKey As String, ByVal hKeyDest As LongPtr) As Long
Public Declare PtrSafe Function RegDeleteTreeA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String) As Long
Public Declare PtrSafe Function RegDeleteTreeW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As LongPtr) As Long
Public DeclareWide PtrSafe Function RegDeleteTree Lib "advapi32" Alias "RegDeleteTreeW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String) As Long
Public Declare PtrSafe Function RegLoadKeyA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal lpFile As String) As Long
Public Declare PtrSafe Function RegLoadKeyW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As LongPtr, ByVal lpFile As LongPtr) As Long
Public DeclareWide PtrSafe Function RegLoadKey Lib "advapi32" Alias "RegLoadKeyW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As String, ByVal lpFile As String) As Long
Public Declare PtrSafe Function RegUnLoadKeyA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, Optional ByVal lpSubKey As String) As Long
Public Declare PtrSafe Function RegUnLoadKeyW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, Optional ByVal lpSubKey As LongPtr) As Long
Public DeclareWide PtrSafe Function RegUnLoadKey Lib "advapi32" Alias "RegUnLoadKeyW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, Optional ByVal lpSubKey As String) As Long
Public Declare PtrSafe Function RegReplaceKeyA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKeySrc As LongPtr, ByVal lpSubKey As String, ByVal lpNewFile As String, ByVal lpOldFile As String) As Long
Public Declare PtrSafe Function RegReplaceKeyW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKey As LongPtr, ByVal lpNewFile As LongPtr, ByVal lpOldFile As LongPtr) As Long
Public DeclareWide PtrSafe Function RegReplaceKey Lib "advapi32" Alias "RegReplaceKeyW" ([TypeHint(RegKeyspace)] ByVal hKeySrc As LongPtr, ByVal lpSubKey As String, ByVal lpNewFile As String, ByVal lpOldFile As String) As Long
Public Declare PtrSafe Function RegRenameKey Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKeyName As LongPtr, ByVal lpNewKeyName As LongPtr) As Long
Public DeclareWide PtrSafe Function RegRenameKey Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal lpSubKeyName As String, ByVal lpNewKeyName As String) As Long
Public Declare PtrSafe Function RegOpenUserClassesRoot Lib "advapi32" (ByVal hToken As LongPtr, ByVal dwOptions As Long, ByVal samDesired As REGSAM, phkResult As LongPtr) As Long
Public Declare PtrSafe Function RegOverridePredefKey Lib "advapi32" (ByVal hKey As LongPtr, Optional ByVal hNewHKey As LongPtr) As Long
Public Declare PtrSafe Function RegQueryReflectionKey Lib "advapi32" (ByVal hKey As LongPtr, bIsReflectionDisabled As BOOL) As Long
Public Declare PtrSafe Function RegEnableReflectionKey Lib "advapi32" (ByVal hKey As LongPtr) As Long
Public Declare PtrSafe Function RegDisableReflectionKey Lib "advapi32" (ByVal hKey As LongPtr) As Long
Public Declare PtrSafe Function RegDisablePredefinedCache Lib "advapi32" () As Long
Public Declare PtrSafe Function RegDisablePredefinedCacheEx Lib "advapi32" () As Long
Public Declare PtrSafe Function RegLoadAppKeyA Lib "advapi32" (ByVal lpFile As String, phkResult As LongPtr, ByVal samDesired As REGSAM, ByVal dwOptions As REG_APPKEY_FLAGS, ByVal Reserved As Long) As Long
Public Declare PtrSafe Function RegLoadAppKeyW Lib "advapi32" (ByVal lpFile As LongPtr, phkResult As LongPtr, ByVal samDesired As REGSAM, ByVal dwOptions As REG_APPKEY_FLAGS, ByVal Reserved As Long) As Long
Public DeclareWide PtrSafe Function RegLoadAppKey Lib "advapi32" Alias "RegLoadAppKeyW" (ByVal lpFile As String, phkResult As LongPtr, ByVal samDesired As REGSAM, ByVal dwOptions As REG_APPKEY_FLAGS, ByVal Reserved As Long) As Long
Public Declare PtrSafe Function RegQueryMultipleValuesA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, val_list As VALENTA, ByVal num_vals As Long, ByVal lpValueBuf As String, ldwTotsize As Long) As Long
Public Declare PtrSafe Function RegQueryMultipleValuesW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, val_list As VALENTW, ByVal num_vals As Long, ByVal lpValueBuf As LongPtr, ldwTotsize As Long) As Long
Public DeclareWide PtrSafe Function RegQueryMultipleValues Lib "advapi32" Alias "RegQueryMultipleValuesW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, val_list As VALENT, ByVal num_vals As Long, ByVal lpValueBuf As String, ldwTotsize As Long) As Long
Public Declare PtrSafe Function RegLoadMUIStringA Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal pszValue As String, ByVal pszOutBuf As String, ByVal cbOutBuf As Long, pcbData As Long, ByVal Flags As REG_APPKEY_FLAGS, ByVal pszDirectory As String) As Long
Public Declare PtrSafe Function RegLoadMUIStringW Lib "advapi32" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal pszValue As LongPtr, ByVal pszOutBuf As LongPtr, ByVal cbOutBuf As Long, pcbData As Long, ByVal Flags As REG_APPKEY_FLAGS, ByVal pszDirectory As LongPtr) As Long
Public DeclareWide PtrSafe Function RegLoadMUIString Lib "advapi32" Alias "RegLoadMUIStringW" ([TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal pszValue As String, ByVal pszOutBuf As String, ByVal cbOutBuf As Long, pcbData As Long, ByVal Flags As REG_APPKEY_FLAGS, ByVal pszDirectory As String) As Long
Public Declare PtrSafe Function RegConnectRegistryA Lib "advapi32" (ByVal lpMachineName As String, [TypeHint(RegKeyspace)] ByVal hKey As LongPtr, phkResult As LongPtr) As Long
Public Declare PtrSafe Function RegConnectRegistryW Lib "advapi32" (ByVal lpMachineName As LongPtr, [TypeHint(RegKeyspace)] ByVal hKey As LongPtr, phkResult As LongPtr) As Long
Public DeclareWide PtrSafe Function RegConnectRegistry Lib "advapi32" Alias "RegConnectRegistryW" (ByVal lpMachineName As String, [TypeHint(RegKeyspace)] ByVal hKey As LongPtr, phkResult As LongPtr) As Long
Public Declare PtrSafe Function RegConnectRegistryExA Lib "advapi32" (ByVal lpMachineName As String, [TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal Flags As REG_CONNECT_FLAGS, phkResult As LongPtr) As Long
Public Declare PtrSafe Function RegConnectRegistryExW Lib "advapi32" (ByVal lpMachineName As LongPtr, [TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal Flags As REG_CONNECT_FLAGS, phkResult As LongPtr) As Long
Public DeclareWide PtrSafe Function RegConnectRegistryEx Lib "advapi32" Alias "RegConnectRegistryExW" (ByVal lpMachineName As String, [TypeHint(RegKeyspace)] ByVal hKey As LongPtr, ByVal Flags As REG_CONNECT_FLAGS, phkResult As LongPtr) As Long

Public Declare PtrSafe Function CheckForHiberboot Lib "advapi32" (pHiberboot As Byte, ByVal bClearFlag As Byte) As Long

Public Declare PtrSafe Function OpenThreadToken Lib "advapi32" (ByVal hThread As LongPtr, [TypeHint(StandardAccessTypes, TokenAccessRights)] ByVal dwDesiredAccess As Long, ByVal OpenAsSelf As BOOL, phToken As LongPtr) As BOOL
Public Declare PtrSafe Function OpenProcessToken Lib "advapi32" (ByVal ProcessHandle As LongPtr, [TypeHint(StandardAccessTypes, TokenAccessRights)] ByVal DesiredAccess As Long, TokenHandle As LongPtr) As Long
Public Declare PtrSafe Function DuplicateToken Lib "advapi32" (ByVal ExistingTokenHandle As LongPtr, ByVal ImpersonationLevel As SECURITY_IMPERSONATION_LEVEL, DuplicateTokenHandle As LongPtr) As BOOL
Public Declare PtrSafe Function DuplicateTokenEx Lib "advapi32" (ByVal hExistingToken As LongPtr, [TypeHint(StandardAccessTypes, TokenAccessRights)] ByVal dwDesiredAccess As Long, lpTokenAttributes As SECURITY_ATTRIBUTES, ByVal ImpersonationLevel As SECURITY_IMPERSONATION_LEVEL, ByVal TokenType As TOKEN_TYPE, phNewToken As LongPtr) As BOOL
Public Declare PtrSafe Function ImpersonateLoggedOnUser Lib "advapi32" (ByVal hToken As LongPtr) As Long
Public Declare PtrSafe Function ImpersonateSelf Lib "advapi32" (ByVal ImpersonationLevel As SECURITY_IMPERSONATION_LEVEL) As BOOL
Public Declare PtrSafe Function RevertToSelf Lib "advapi32" () As BOOL
Public Declare PtrSafe Function AdjustTokenGroups Lib "advapi32" (ByVal TokenHandle As LongPtr, ByVal ResetToDefault As BOOL, NewState As Any, ByVal BufferLength As Long, PreviousState As Any, ReturnLength As Long) As BOOL
Public Declare PtrSafe Function AdjustTokenPrivileges Lib "advapi32" (ByVal TokenHandle As LongPtr, ByVal DisableAllPrivileges As Long, ByRef NewState As TOKEN_PRIVILEGES, ByVal BufferLength As Long, ByRef PreviousState As TOKEN_PRIVILEGES, ByRef ReturnLength As Long) As Long
Public Declare PtrSafe Function CheckTokenCapability Lib "kernel32" (ByVal TokenHandle As LongPtr, ByVal CapabilitySidToCheck As LongPtr, HasCapability As BOOL) As BOOL
Public Declare PtrSafe Function GetTokenInformation Lib "advapi32" (ByVal TokenHandle As LongPtr, ByVal TokenInformationClass As TOKEN_INFORMATION_CLASS, TokenInformation As Any, ByVal TokenInformationLength As Long, ReturnLength As Long) As BOOL
Public Declare PtrSafe Function SetTokenInformation Lib "advapi32" (ByVal TokenHandle As LongPtr, ByVal TokenInformationClass As TOKEN_INFORMATION_CLASS, TokenInformation As Any, ByVal TokenInformationLength As Long) As BOOL
Public Declare PtrSafe Function CheckTokenMembership Lib "advapi32" (ByVal TokenHandle As LongPtr, ByVal SidToCheck As LongPtr, IsMember As BOOL) As BOOL
Public Declare PtrSafe Function CheckTokenMembershipEx Lib "kernel32" (ByVal TokenHandle As LongPtr, ByVal SidToCheck As LongPtr, ByVal Flags As CheckTokenMembershipExFlags, IsMember As BOOL) As BOOL
Public Declare PtrSafe Function CreateRestrictedToken Lib "advapi32" (ByVal ExistingTokenHandle As LongPtr, ByVal Flags As RestrictedTokenFlags, ByVal DisableSidCount As Long, SidsToDisable As SID_AND_ATTRIBUTES, ByVal DeletePrivilegeCount As Long, PrivilegesToDelete As LUID_AND_ATTRIBUTES, ByVal RestrictedSidCount As Long, SidsToRestrict As SID_AND_ATTRIBUTES, NewTokenHandle As LongPtr) As BOOL
Public Declare PtrSafe Function SetThreadToken Lib "kernel32" (Optional ByVal Thread As LongPtr, Optional ByVal Token As LongPtr) As BOOL
Public Declare PtrSafe Function IsTokenUntrusted Lib "advapi32" (ByVal TokenHandle As LongPtr) As BOOL

Public Enum RestrictedTokenFlags
    DISABLE_MAX_PRIVILEGE = &H1
    SANDBOX_INERT = &H2
    LUA_TOKEN = &H4
    WRITE_RESTRICTED = &H8
End Enum

Public Type QUOTA_LIMITS
    PagedPoolLimit As LongPtr
    NonPagedPoolLimit As LongPtr
    MinimumWorkingSetSize As LongPtr
    MaximumWorkingSetSize As LongPtr
    PagefileLimit As LongPtr
    TimeLimit As LARGE_INTEGER
End Type

Public Type RATE_QUOTA_LIMIT 'Union
    RateData As Long
    '    struct {
    '        DWORD RatePercent : 7;
    '        DWORD Reserved0   : 25;
    '    } DUMMYSTRUCTNAME;
End Type
Public Type QUOTA_LIMITS_EX
    PagedPoolLimit As LongPtr
    NonPagedPoolLimit As LongPtr
    MinimumWorkingSetSize As LongPtr
    MaximumWorkingSetSize As LongPtr
    PagefileLimit As LongPtr ' Limit expressed in pages
    TimeLimit As LARGE_INTEGER
    WorkingSetLimit As LongPtr ' Limit expressed in pages
    Reserved2 As LongPtr
    Reserved3 As LongPtr
    Reserved4 As LongPtr
    Flags As QUOTA_LIMITS_FLAGS
    CpuRateLimit As RATE_QUOTA_LIMIT
End Type

Public Enum SE_OBJECT_TYPE
    SE_UNKNOWN_OBJECT_TYPE
    SE_FILE_OBJECT
    SE_SERVICE
    SE_PRINTER
    SE_REGISTRY_KEY
    SE_LMSHARE
    SE_KERNEL_OBJECT
    SE_WINDOW_OBJECT
    SE_DS_OBJECT
    SE_DS_OBJECT_ALL
    SE_PROVIDER_DEFINED_OBJECT
    SE_WMIGUID_OBJECT
    SE_REGISTRY_WOW64_32KEY
    SE_REGISTRY_WOW64_64KEY
End Enum

Public Enum ACCESS_MODE
    NOT_USED_ACCESS
    GRANT_ACCESS
    SET_ACCESS
    DENY_ACCESS
    REVOKE_ACCESS
    SET_AUDIT_SUCCESS
    SET_AUDIT_FAILURE
End Enum



Public Enum TRUSTEE_TYPE
    TRUSTEE_IS_UNKNOWN
    TRUSTEE_IS_USER
    TRUSTEE_IS_GROUP
    TRUSTEE_IS_DOMAIN
    TRUSTEE_IS_ALIAS
    TRUSTEE_IS_WELL_KNOWN_GROUP
    TRUSTEE_IS_DELETED
    TRUSTEE_IS_INVALID
    TRUSTEE_IS_COMPUTER
End Enum
Public Enum TRUSTEE_FORM
    TRUSTEE_IS_SID = 0
    TRUSTEE_IS_NAME = 1
    TRUSTEE_BAD_FORM = 2
    TRUSTEE_IS_OBJECTS_AND_SID = 3
    TRUSTEE_IS_OBJECTS_AND_NAME = 4
End Enum
Public Enum MULTIPLE_TRUSTEE_OPERATION
    NO_MULTIPLE_TRUSTEE
    TRUSTEE_IS_IMPERSONATE
End Enum
Public Type OBJECTS_AND_SID
    ObjectsPresent As Long
    ObjectTypeGuid As UUID
    InheritedObjectTypeGuid As UUID
    pSid As LongPtr '*SID     
End Type
Public Type OBJECTS_AND_NAME_A
    ObjectsPresent As Long
    ObjectType As SE_OBJECT_TYPE
    ObjectTypeName As String
    InheritedObjectTypeName As String
    ptstrName As String
End Type
Public Type OBJECTS_AND_NAME_W
    ObjectsPresent As Long
    ObjectType As SE_OBJECT_TYPE
    ObjectTypeName As LongPtr
    InheritedObjectTypeName As LongPtr
    ptstrName As LongPtr
End Type
'Alias OBJECTS_AND_NAME As OBJECTS_AND_NAME_W
Public Type OBJECTS_AND_NAME
    ObjectsPresent As Long
    ObjectType As SE_OBJECT_TYPE
    ObjectTypeName As LongPtr
    InheritedObjectTypeName As LongPtr
    ptstrName As LongPtr
End Type

Public Type TRUSTEE_A
    pMultipleTrustee As LongPtr 'TRUSTEE_A*
    MultipleTrusteeOperation As MULTIPLE_TRUSTEE_OPERATION
    TrusteeForm As TRUSTEE_FORM
    TrusteeType As TRUSTEE_TYPE
    NameSidOrObject As LongPtr
End Type
    ' #ifdef __midl
    ' [switch_is(TrusteeForm)]
    ' union
    ' {
    ' [case(TRUSTEE_IS_NAME)]
        ' LPSTR                   ptstrName;
    ' [case(TRUSTEE_IS_SID)]
        ' SID                    *pSid;
    ' [case(TRUSTEE_IS_OBJECTS_AND_SID)]
        ' OBJECTS_AND_SID        *pObjectsAndSid;
    ' [case(TRUSTEE_IS_OBJECTS_AND_NAME)]
        ' OBJECTS_AND_NAME_A     *pObjectsAndName;
    ' };
' #else
    ' // This member is not null-terminated as it may be used to hold strings, which are null-terminated or 
    ' // SIDs, which are not null-terminated.
    ' LPCH                        ptstrName;
' #endif
Public Type TRUSTEE_W
    pMultipleTrustee As LongPtr 'TRUSTEE_W*
    MultipleTrusteeOperation As MULTIPLE_TRUSTEE_OPERATION
    TrusteeForm As TRUSTEE_FORM
    TrusteeType As TRUSTEE_TYPE
    NameSidOrObject As LongPtr
End Type
'Alias TRUSTEEW As TRUSTEE_W
'Alias TRUSTEEA As TRUSTEE_A
Public Type TRUSTEEA
    pMultipleTrustee As LongPtr 'TRUSTEE_A*
    MultipleTrusteeOperation As MULTIPLE_TRUSTEE_OPERATION
    TrusteeForm As TRUSTEE_FORM
    TrusteeType As TRUSTEE_TYPE
    NameSidOrObject As LongPtr
End Type
Public Type TRUSTEEW
    pMultipleTrustee As LongPtr 'TRUSTEE_W*
    MultipleTrusteeOperation As MULTIPLE_TRUSTEE_OPERATION
    TrusteeForm As TRUSTEE_FORM
    TrusteeType As TRUSTEE_TYPE
    NameSidOrObject As LongPtr
End Type
Public Type TRUSTEE
    pMultipleTrustee As LongPtr 'TRUSTEE_W*
    MultipleTrusteeOperation As MULTIPLE_TRUSTEE_OPERATION
    TrusteeForm As TRUSTEE_FORM
    TrusteeType As TRUSTEE_TYPE
    NameSidOrObject As LongPtr
End Type

Public Enum INHERIT_FLAGS
    NO_INHERITANCE = &H0
    SUB_OBJECTS_ONLY_INHERIT = &H1
    SUB_CONTAINERS_ONLY_INHERIT = &H2
    SUB_CONTAINERS_AND_OBJECTS_INHERIT = &H3
    INHERIT_NO_PROPAGATE = &H4
    'INHERIT_ONLY  = &H8
'  Informational bit that is returned
    INHERITED_ACCESS_ENTRY = &H10
'  Informational bit that tells where a node was inherited from.  Valid only
'  for NT 5 APIs
    INHERITED_PARENT = &H10000000
    INHERITED_GRANDPARENT = &H20000000
End Enum

Public Type EXPLICIT_ACCESS_A
    grfAccessPermissions As Long
    grfAccessMode As ACCESS_MODE
    /* [ TypeHint(INHERIT_FLAGS, ACE_FLAGS) ] */ grfInheritance As ACE_FLAGS
    Trustee As TRUSTEE_A
End Type
Public Type EXPLICIT_ACCESS_W
    grfAccessPermissions As Long
    grfAccessMode As ACCESS_MODE
    /* [ TypeHint(INHERIT_FLAGS, ACE_FLAGS) ] */ grfInheritance As ACE_FLAGS
    Trustee As TRUSTEE_W
End Type
'Alias EXPLICIT_ACCESS As EXPLICIT_ACCESS_W
Public Type EXPLICIT_ACCESS
    grfAccessPermissions As Long
    grfAccessMode As ACCESS_MODE
    /* [ TypeHint(INHERIT_FLAGS, ACE_FLAGS) ] */ grfInheritance As ACE_FLAGS
    Trustee As TRUSTEE_W
End Type

Public Const ACCCTRL_DEFAULT_PROVIDERA  = "Windows NT Access Provider"
Public Const ACCCTRL_DEFAULT_PROVIDERW  = "Windows NT Access Provider"
Public Const ACCCTRL_DEFAULT_PROVIDER  = "Windows NT Access Provider"

Public Enum ACTRL_ACCESS_PERMS
    ACTRL_ACCESS_ALLOWED = &H00000001
    ACTRL_ACCESS_DENIED = &H00000002
    ACTRL_AUDIT_SUCCESS = &H00000004
    ACTRL_AUDIT_FAILURE = &H00000008
End Enum

Public Type ACTRL_ACCESS_ENTRYA
    Trustee As TRUSTEE_A
    fAccessFlags As ACTRL_ACCESS_PERMS
    Access As ACCESS_RIGHTS
    ProvSpecificAccess As ACCESS_RIGHTS
    /* [ TypeHint(INHERIT_FLAGS, ACE_FLAGS) ] */ Inheritance As INHERIT_FLAGS
    lpInheritProperty As String
End Type
Public Type ACTRL_ACCESS_ENTRYW
    Trustee As TRUSTEE_A
    fAccessFlags As ACTRL_ACCESS_PERMS
    Access As ACCESS_RIGHTS
    ProvSpecificAccess As ACCESS_RIGHTS
    /* [ TypeHint(INHERIT_FLAGS, ACE_FLAGS) ] */ Inheritance As INHERIT_FLAGS
    lpInheritProperty As LongPtr
End Type
Public Type ACTRL_ACCESS_ENTRY
    Trustee As TRUSTEE_A
    fAccessFlags As ACTRL_ACCESS_PERMS
    Access As ACCESS_RIGHTS
    ProvSpecificAccess As ACCESS_RIGHTS
    /* [ TypeHint(INHERIT_FLAGS, ACE_FLAGS) ] */ Inheritance As INHERIT_FLAGS
    lpInheritProperty As LongPtr
End Type

Public Type ACTRL_ACCESS_ENTRY_LISTA
    cEntries As Long
    pAccessList As LongPtr '*ACTRL_ACCESS_ENTRYA
End Type
Public Type ACTRL_ACCESS_ENTRY_LISTW
    cEntries As Long
    pAccessList As LongPtr '*ACTRL_ACCESS_ENTRYW
End Type
'Alias ACTRL_ACCESS_ENTRY_LIST As ACTRL_ACCESS_ENTRY_LISTW
Public Type ACTRL_ACCESS_ENTRY_LIST
    cEntries As Long
    pAccessList As LongPtr '*ACTRL_ACCESS_ENTRY
End Type

Public Type ACTRL_PROPERTY_ENTRYA
    lpProperty As String
    pAccessEntryList As LongPtr 'PACTRL_ACCESS_ENTRY_LISTA
    fListFlags As ACTRL_PROPLIST_FLAGS
End Type
Public Type ACTRL_PROPERTY_ENTRYW
    lpProperty As LongPtr
    pAccessEntryList As LongPtr 'PACTRL_ACCESS_ENTRY_LISTW
    fListFlags As ACTRL_PROPLIST_FLAGS
End Type
'Alias ACTRL_PROPERTY_ENTRY As ACTRL_PROPERTY_ENTRYW
Public Type ACTRL_PROPERTY_ENTRY
    lpProperty As LongPtr
    pAccessEntryList As LongPtr 'PACTRL_ACCESS_ENTRY_LIST 
    fListFlags As ACTRL_PROPLIST_FLAGS
End Type
Public Type ACTRL_ALISTA
    cEntries As Long
    pPropertyAccessList As LongPtr 'PACTRL_PROPERTY_ENTRYA
End Type
Public Type ACTRL_ALISTW
    cEntries As Long
    pPropertyAccessList As LongPtr 'PACTRL_PROPERTY_ENTRYW
End Type
'Alias ACTRL_ALIST As ACTRL_ALISTW
Public Type ACTRL_ALIST
    cEntries As Long
    pPropertyAccessList As LongPtr 'PACTRL_PROPERTY_ENTRY 
End Type
Public Type ACTRL_ACCESSA
    cEntries As Long
    pPropertyAccessList As LongPtr 'PACTRL_PROPERTY_ENTRYA
End Type
Public Type ACTRL_ACCESSW
    cEntries As Long
    pPropertyAccessList As LongPtr 'PACTRL_PROPERTY_ENTRYW
End Type
'Alias ACTRL_ACCESS As ACTRL_ACCESSW
Public Type ACTRL_ACCESS
    cEntries As Long
    pPropertyAccessList As LongPtr 'PACTRL_PROPERTY_ENTRY 
End Type

'Alias ACTRL_AUDITW As ACTRL_ACCESSW
'Alias ACTRL_AUDITA As ACTRL_ACCESSA
'Alias ACTRL_AUDIT As ACTRL_ACCESS 
Public Type ACTRL_AUDITA
    cEntries As Long
    pPropertyAccessList As LongPtr 'PACTRL_PROPERTY_ENTRYA
End Type
Public Type ACTRL_AUDITW
    cEntries As Long
    pPropertyAccessList As LongPtr 'PACTRL_PROPERTY_ENTRYW
End Type
Public Type ACTRL_AUDIT
    cEntries As Long
    pPropertyAccessList As LongPtr 'PACTRL_PROPERTY_ENTRY 
End Type


Public Enum TrusteeAccessFlags
    TRUSTEE_ACCESS_ALLOWED = &H00000001
    TRUSTEE_ACCESS_READ = &H00000002
    TRUSTEE_ACCESS_WRITE = &H00000004
    TRUSTEE_ACCESS_EXPLICIT = &H00000001
    TRUSTEE_ACCESS_READ_WRITE = (TRUSTEE_ACCESS_READ Or TRUSTEE_ACCESS_WRITE)
    TRUSTEE_ACCESS_ALL = &HFFFFFFFF
End Enum

Public Type TRUSTEE_ACCESSA
    lpProperty As String
    Access As ACCESS_RIGHTS
    fAccessFlags As TrusteeAccessFlags
    fReturnedAccess As Long
End Type
Public Type TRUSTEE_ACCESSW
    lpProperty As LongPtr
    Access As ACCESS_RIGHTS
    fAccessFlags As TrusteeAccessFlags
    fReturnedAccess As Long
End Type
'Alias TRUSTEE_ACCESS As TRUSTEE_ACCESSW
Public Type TRUSTEE_ACCESS
    lpProperty As LongPtr
    Access As ACCESS_RIGHTS
    fAccessFlags As TrusteeAccessFlags
    fReturnedAccess As Long
End Type

Public Enum ACTRL_GENERIC_PERMS
    ACTRL_RESERVED = &H00000000
    ACTRL_PERM_1 = &H00000001
    ACTRL_PERM_2 = &H00000002
    ACTRL_PERM_3 = &H00000004
    ACTRL_PERM_4 = &H00000008
    ACTRL_PERM_5 = &H00000010
    ACTRL_PERM_6 = &H00000020
    ACTRL_PERM_7 = &H00000040
    ACTRL_PERM_8 = &H00000080
    ACTRL_PERM_9 = &H00000100
    ACTRL_PERM_10 = &H00000200
    ACTRL_PERM_11 = &H00000400
    ACTRL_PERM_12 = &H00000800
    ACTRL_PERM_13 = &H00001000
    ACTRL_PERM_14 = &H00002000
    ACTRL_PERM_15 = &H00004000
    ACTRL_PERM_16 = &H00008000&
    ACTRL_PERM_17 = &H00010000
    ACTRL_PERM_18 = &H00020000
    ACTRL_PERM_19 = &H00040000
    ACTRL_PERM_20 = &H00080000
End Enum

Public Enum ACTRL_PROPLIST_FLAGS
    ACTRL_ACCESS_PROTECTED = &H1
End Enum

Public Enum ACCESS_RIGHTS
    ACTRL_SYSTEM_ACCESS = &H04000000
    ACTRL_DELETE = &H08000000
    ACTRL_READ_CONTROL = &H10000000
    ACTRL_CHANGE_ACCESS = &H20000000
    ACTRL_CHANGE_OWNER = &H40000000
    ACTRL_SYNCHRONIZE = &H80000000
    ACTRL_STD_RIGHTS_ALL = &Hf8000000
    ACTRL_STD_RIGHT_REQUIRED = (ACTRL_STD_RIGHTS_ALL And Not ACTRL_SYNCHRONIZE)
    COM_RIGHTS_EXECUTE = 1
    COM_RIGHTS_EXECUTE_LOCAL = 2
    COM_RIGHTS_EXECUTE_REMOTE = 4
    COM_RIGHTS_ACTIVATE_LOCAL = 8
    COM_RIGHTS_ACTIVATE_REMOTE = 16
    COM_RIGHTS_RESERVED1 = 32
    COM_RIGHTS_RESERVED2 = 64
End Enum


Public Enum ActrlDsRights
    ACTRL_DS_OPEN = ACTRL_RESERVED
    ACTRL_DS_CREATE_CHILD = ACTRL_PERM_1
    ACTRL_DS_DELETE_CHILD = ACTRL_PERM_2
    ACTRL_DS_LIST = ACTRL_PERM_3
    ACTRL_DS_SELF = ACTRL_PERM_4
    ACTRL_DS_READ_PROP = ACTRL_PERM_5
    ACTRL_DS_WRITE_PROP = ACTRL_PERM_6
    ACTRL_DS_DELETE_TREE = ACTRL_PERM_7
    ACTRL_DS_LIST_OBJECT = ACTRL_PERM_8
    ACTRL_DS_CONTROL_ACCESS = ACTRL_PERM_9
End Enum

Public Enum ActrlObjRights
    ACTRL_FILE_READ = ACTRL_PERM_1
    ACTRL_FILE_WRITE = ACTRL_PERM_2
    ACTRL_FILE_APPEND = ACTRL_PERM_3
    ACTRL_FILE_READ_PROP = ACTRL_PERM_4
    ACTRL_FILE_WRITE_PROP = ACTRL_PERM_5
    ACTRL_FILE_EXECUTE = ACTRL_PERM_6
    ACTRL_FILE_READ_ATTRIB = ACTRL_PERM_8
    ACTRL_FILE_WRITE_ATTRIB = ACTRL_PERM_9
    ACTRL_FILE_CREATE_PIPE = ACTRL_PERM_10
    ACTRL_DIR_LIST = ACTRL_PERM_1
    ACTRL_DIR_CREATE_OBJECT = ACTRL_PERM_2
    ACTRL_DIR_CREATE_CHILD = ACTRL_PERM_3
    ACTRL_DIR_DELETE_CHILD = ACTRL_PERM_7
    ACTRL_DIR_TRAVERSE = ACTRL_PERM_6
    ACTRL_KERNEL_TERMINATE = ACTRL_PERM_1
    ACTRL_KERNEL_THREAD = ACTRL_PERM_2
    ACTRL_KERNEL_VM = ACTRL_PERM_3
    ACTRL_KERNEL_VM_READ = ACTRL_PERM_4
    ACTRL_KERNEL_VM_WRITE = ACTRL_PERM_5
    ACTRL_KERNEL_DUP_HANDLE = ACTRL_PERM_6
    ACTRL_KERNEL_PROCESS = ACTRL_PERM_7
    ACTRL_KERNEL_SET_INFO = ACTRL_PERM_8
    ACTRL_KERNEL_GET_INFO = ACTRL_PERM_9
    ACTRL_KERNEL_CONTROL = ACTRL_PERM_10
    ACTRL_KERNEL_ALERT = ACTRL_PERM_11
    ACTRL_KERNEL_GET_CONTEXT = ACTRL_PERM_12
    ACTRL_KERNEL_SET_CONTEXT = ACTRL_PERM_13
    ACTRL_KERNEL_TOKEN = ACTRL_PERM_14
    ACTRL_KERNEL_IMPERSONATE = ACTRL_PERM_15
    ACTRL_KERNEL_DIMPERSONATE = ACTRL_PERM_16
    ACTRL_PRINT_SADMIN = ACTRL_PERM_1
    ACTRL_PRINT_SLIST = ACTRL_PERM_2
    ACTRL_PRINT_PADMIN = ACTRL_PERM_3
    ACTRL_PRINT_PUSE = ACTRL_PERM_4
    ACTRL_PRINT_JADMIN = ACTRL_PERM_5
    ACTRL_SVC_GET_INFO = ACTRL_PERM_1
    ACTRL_SVC_SET_INFO = ACTRL_PERM_2
    ACTRL_SVC_STATUS = ACTRL_PERM_3
    ACTRL_SVC_LIST = ACTRL_PERM_4
    ACTRL_SVC_START = ACTRL_PERM_5
    ACTRL_SVC_STOP = ACTRL_PERM_6
    ACTRL_SVC_PAUSE = ACTRL_PERM_7
    ACTRL_SVC_INTERROGATE = ACTRL_PERM_8
    ACTRL_SVC_UCONTROL = ACTRL_PERM_9
    ACTRL_REG_QUERY = ACTRL_PERM_1
    ACTRL_REG_SET = ACTRL_PERM_2
    ACTRL_REG_CREATE_CHILD = ACTRL_PERM_3
    ACTRL_REG_LIST = ACTRL_PERM_4
    ACTRL_REG_NOTIFY = ACTRL_PERM_5
    ACTRL_REG_LINK = ACTRL_PERM_6
    ACTRL_WIN_CLIPBRD = ACTRL_PERM_1
    ACTRL_WIN_GLOBAL_ATOMS = ACTRL_PERM_2
    ACTRL_WIN_CREATE = ACTRL_PERM_3
    ACTRL_WIN_LIST_DESK = ACTRL_PERM_4
    ACTRL_WIN_LIST = ACTRL_PERM_5
    ACTRL_WIN_READ_ATTRIBS = ACTRL_PERM_6
    ACTRL_WIN_WRITE_ATTRIBS = ACTRL_PERM_7
    ACTRL_WIN_SCREEN = ACTRL_PERM_8
    ACTRL_WIN_EXIT = ACTRL_PERM_9
End Enum

Public Type ACTRL_OVERLAPPED
    'union {
    Provider As LongPtr
    '    ULONG Reserved1;
    '} DUMMYUNIONNAME;
    Reserved2 As Long
    hEvent As LongPtr
End Type

Public Type ACTRL_ACCESS_INFOA
    fAccessPermission As Long
    lpAccessPermissionName As String
End Type
Public Type ACTRL_ACCESS_INFOW
    fAccessPermission As Long
    lpAccessPermissionName As LongPtr
End Type
'Alias ACTRL_ACCESS_INFO As ACTRL_ACCESS_INFOW
Public Type ACTRL_ACCESS_INFO
    fAccessPermission As Long
    lpAccessPermissionName As LongPtr
End Type

Public Type ACTRL_CONTROL_INFOA
    lpControlId As String
    lpControlName As String
End Type
Public Type ACTRL_CONTROL_INFOW
    lpControlId As LongPtr
    lpControlName As LongPtr
End Type
'Alias ACTRL_CONTROL_INFO As ACTRL_CONTROL_INFOW
Public Type ACTRL_CONTROL_INFO
    lpControlId As LongPtr
    lpControlName As LongPtr
End Type

Public Enum ActrlAccessOpts
    ACTRL_ACCESS_NO_OPTIONS = &H00000000
    ACTRL_ACCESS_SUPPORTS_OBJECT_ENTRIES = &H00000001
End Enum

Public Enum ActrlTreeSecFlags
    TREE_SEC_INFO_SET = &H00000001
    TREE_SEC_INFO_RESET = &H00000002
    TREE_SEC_INFO_RESET_KEEP_EXPLICIT = &H00000003
End Enum

Public Enum PROG_INVOKE_SETTING
    ProgressInvokeNever = 1 ' Never invoke the progress function
    ProgressInvokeEveryObject ' Invoke for each object
    ProgressInvokeOnError ' Invoke only for each error case
    ProgressCancelOperation ' Stop propagation and return
    ProgressRetryOperation ' Retry operation on subtree
    ' #if (NTDDI_VERSION >= NTDDI_VISTA)
    ProgressInvokePrePostError ' Invoke Pre, Post, Error
    ' #endif // (NTDDI_VERSION >= NTDDI_VISTA)
End Enum

Public Type FN_OBJECT_MGR_FUNCTIONS
    Placeholder As Long
End Type

Public Type INHERITED_FROMA
    GenerationGap As Long
    AncestorName As String
End Type
Public Type INHERITED_FROMW
    GenerationGap As Long
    AncestorName As LongPtr
End Type
'Alias INHERITED_FROM As INHERITED_FROMW
Public Type INHERITED_FROM
    GenerationGap As Long
    AncestorName As LongPtr
End Type

Public Enum CachedSigningLevelFlags
    SIGNING_LEVEL_FILE_CACHE_FLAG_NOT_VALIDATED = &H1
    SIGNING_LEVEL_FILE_CACHE_FLAG_VALIDATE_ONLY = &H4
End Enum

Public Const SDDL_REVISION_1  = 1
Public Const SDDL_REVISION  = SDDL_REVISION_1
'  SDDL Component tags
Public Const SDDL_OWNER  = "O"  ' Owner tag
Public Const SDDL_GROUP  = "G"  ' Group tag
Public Const SDDL_DACL  = "D"  ' DACL tag
Public Const SDDL_SACL  = "S"  ' SACL tag
'  SDDL Security descriptor controls
Public Const SDDL_PROTECTED  = "P"  ' DACL or SACL Protected
Public Const SDDL_AUTO_INHERIT_REQ  = "AR"  ' Auto inherit request
Public Const SDDL_AUTO_INHERITED  = "AI"  ' DACL/SACL are auto inherited
Public Const SDDL_NULL_ACL  = "NO_ACCESS_CONTROL"  ' Null ACL
'  SDDL Ace types
Public Const SDDL_ACCESS_ALLOWED  = "A"  ' Access allowed
Public Const SDDL_ACCESS_DENIED  = "D"  ' Access denied
Public Const SDDL_OBJECT_ACCESS_ALLOWED  = "OA"  ' Object access allowed
Public Const SDDL_OBJECT_ACCESS_DENIED  = "OD"  ' Object access denied
Public Const SDDL_AUDIT  = "AU"  ' Audit
Public Const SDDL_ALARM  = "AL"  ' Alarm
Public Const SDDL_OBJECT_AUDIT  = "OU"  ' Object audit
Public Const SDDL_OBJECT_ALARM  = "OL"  ' Object alarm
Public Const SDDL_MANDATORY_LABEL  = "ML"  ' Integrity label
Public Const SDDL_PROCESS_TRUST_LABEL  = "TL"  ' Process trust label
Public Const SDDL_CALLBACK_ACCESS_ALLOWED  = "XA"  ' Callback access allowed
Public Const SDDL_CALLBACK_ACCESS_DENIED  = "XD"  ' Callback access denied
Public Const SDDL_RESOURCE_ATTRIBUTE  = "RA"  ' Resource attribute
Public Const SDDL_SCOPED_POLICY_ID  = "SP"  ' Scoped policy
Public Const SDDL_CALLBACK_AUDIT  = "XU"  ' Callback audit
Public Const SDDL_CALLBACK_OBJECT_ACCESS_ALLOWED  = "ZA"  ' Callback object access allowed
Public Const SDDL_ACCESS_FILTER  = "FL"  ' Access Filter
'  SDDL Resource attribute ace data types
Public Const SDDL_INT  = "TI"  ' Signed integer
Public Const SDDL_UINT  = "TU"  ' Unsigned integer
Public Const SDDL_WSTRING  = "TS"  ' Wide string
Public Const SDDL_SID  = "TD"  ' SID
Public Const SDDL_BLOB  = "TX"  ' Octet String
Public Const SDDL_BOOLEAN  = "TB"  ' Boolean
'  SDDL Ace flags
Public Const SDDL_CONTAINER_INHERIT  = "CI"  ' Container inherit
Public Const SDDL_OBJECT_INHERIT  = "OI"  ' Object inherit
Public Const SDDL_NO_PROPAGATE  = "NP"  ' Inherit no propagate
Public Const SDDL_INHERIT_ONLY  = "IO"  ' Inherit only
Public Const SDDL_INHERITED  = "ID"  ' Inherited
Public Const SDDL_CRITICAL  = "CR"  ' Critical
Public Const SDDL_TRUST_PROTECTED_FILTER  = "TP"  ' Trust Protected Filter
Public Const SDDL_AUDIT_SUCCESS  = "SA"  ' Audit success
Public Const SDDL_AUDIT_FAILURE  = "FA"  ' Audit failure
'  SDDL Rights
Public Const SDDL_READ_PROPERTY  = "RP"
Public Const SDDL_WRITE_PROPERTY  = "WP"
Public Const SDDL_CREATE_CHILD  = "CC"
Public Const SDDL_DELETE_CHILD  = "DC"
Public Const SDDL_LIST_CHILDREN  = "LC"
Public Const SDDL_SELF_WRITE  = "SW"
Public Const SDDL_LIST_OBJECT  = "LO"
Public Const SDDL_DELETE_TREE  = "DT"
Public Const SDDL_CONTROL_ACCESS  = "CR"
Public Const SDDL_READ_CONTROL  = "RC"
Public Const SDDL_WRITE_DAC  = "WD"
Public Const SDDL_WRITE_OWNER  = "WO"
Public Const SDDL_STANDARD_DELETE  = "SD"
Public Const SDDL_GENERIC_ALL  = "GA"
Public Const SDDL_GENERIC_READ  = "GR"
Public Const SDDL_GENERIC_WRITE  = "GW"
Public Const SDDL_GENERIC_EXECUTE  = "GX"
Public Const SDDL_FILE_ALL  = "FA"
Public Const SDDL_FILE_READ  = "FR"
Public Const SDDL_FILE_WRITE  = "FW"
Public Const SDDL_FILE_EXECUTE  = "FX"
Public Const SDDL_KEY_ALL  = "KA"
Public Const SDDL_KEY_READ  = "KR"
Public Const SDDL_KEY_WRITE  = "KW"
Public Const SDDL_KEY_EXECUTE  = "KX"
Public Const SDDL_NO_WRITE_UP  = "NW"
Public Const SDDL_NO_READ_UP  = "NR"
Public Const SDDL_NO_EXECUTE_UP  = "NX"
'  SDDL User alias max size
'       - currently, upto two supported eg. "DA"
'       - modify this if more WCHARs need to be there in future e.g. "DAX"
Public Const SDDL_ALIAS_SIZE  = 2
'  SDDL User aliases
Public Const SDDL_DOMAIN_ADMINISTRATORS  = "DA"  ' Domain admins
Public Const SDDL_DOMAIN_GUESTS  = "DG"  ' Domain guests
Public Const SDDL_DOMAIN_USERS  = "DU"  ' Domain users
Public Const SDDL_ENTERPRISE_DOMAIN_CONTROLLERS  = "ED"  ' Enterprise domain controllers
Public Const SDDL_DOMAIN_DOMAIN_CONTROLLERS  = "DD"  ' Domain domain controllers
Public Const SDDL_DOMAIN_COMPUTERS  = "DC"  ' Domain computers
Public Const SDDL_BUILTIN_ADMINISTRATORS  = "BA"  ' Builtin (local ) administrators
Public Const SDDL_BUILTIN_GUESTS  = "BG"  ' Builtin (local ) guests
Public Const SDDL_BUILTIN_USERS  = "BU"  ' Builtin (local ) users
Public Const SDDL_LOCAL_ADMIN  = "LA"  ' Local administrator account
Public Const SDDL_LOCAL_GUEST  = "LG"  ' Local group account
Public Const SDDL_ACCOUNT_OPERATORS  = "AO"  ' Account operators
Public Const SDDL_BACKUP_OPERATORS  = "BO"  ' Backup operators
Public Const SDDL_PRINTER_OPERATORS  = "PO"  ' Printer operators
Public Const SDDL_SERVER_OPERATORS  = "SO"  ' Server operators
Public Const SDDL_AUTHENTICATED_USERS  = "AU"  ' Authenticated users
Public Const SDDL_PERSONAL_SELF  = "PS"  ' Personal self
Public Const SDDL_CREATOR_OWNER  = "CO"  ' Creator owner
Public Const SDDL_CREATOR_GROUP  = "CG"  ' Creator group
Public Const SDDL_LOCAL_SYSTEM  = "SY"  ' Local system
Public Const SDDL_POWER_USERS  = "PU"  ' Power users
Public Const SDDL_EVERYONE  = "WD"  ' Everyone ( World )
Public Const SDDL_REPLICATOR  = "RE"  ' Replicator
Public Const SDDL_INTERACTIVE  = "IU"  ' Interactive logon user
Public Const SDDL_NETWORK  = "NU"  ' Nework logon user
Public Const SDDL_SERVICE  = "SU"  ' Service logon user
Public Const SDDL_RESTRICTED_CODE  = "RC"  ' Restricted code
Public Const SDDL_WRITE_RESTRICTED_CODE  = "WR"  ' Write Restricted code
Public Const SDDL_ANONYMOUS  = "AN"  ' Anonymous Logon
Public Const SDDL_SCHEMA_ADMINISTRATORS  = "SA"  ' Schema Administrators
Public Const SDDL_CERT_SERV_ADMINISTRATORS  = "CA"  ' Certificate Server Administrators
Public Const SDDL_RAS_SERVERS  = "RS"  ' RAS servers group
Public Const SDDL_ENTERPRISE_ADMINS  = "EA"  ' Enterprise administrators
Public Const SDDL_GROUP_POLICY_ADMINS  = "PA"  ' Group Policy administrators
Public Const SDDL_ALIAS_PREW2KCOMPACC  = "RU"  ' alias to allow previous windows 2000
Public Const SDDL_LOCAL_SERVICE  = "LS"  ' Local service account (for services)
Public Const SDDL_NETWORK_SERVICE  = "NS"  ' Network service account (for services)
Public Const SDDL_REMOTE_DESKTOP  = "RD"  ' Remote desktop users (for terminal server)
Public Const SDDL_NETWORK_CONFIGURATION_OPS  = "NO"  ' Network configuration operators ( to manage configuration of networking features)
Public Const SDDL_PERFMON_USERS  = "MU"  ' Performance Monitor Users
Public Const SDDL_PERFLOG_USERS  = "LU"  ' Performance Log Users
Public Const SDDL_IIS_USERS  = "IS"  ' Anonymous Internet Users
Public Const SDDL_CRYPTO_OPERATORS  = "CY"  ' Crypto Operators
Public Const SDDL_OWNER_RIGHTS  = "OW"  ' Owner Rights SID
Public Const SDDL_EVENT_LOG_READERS  = "ER"  ' Event log readers
Public Const SDDL_ENTERPRISE_RO_DCs  = "RO"  ' Enterprise Read-only domain controllers
Public Const SDDL_CERTSVC_DCOM_ACCESS  = "CD"  ' Users who can connect to certification authorities using DCOM
Public Const SDDL_ALL_APP_PACKAGES  = "AC"  ' All applications running in an app package context
Public Const SDDL_RDS_REMOTE_ACCESS_SERVERS  = "RA"  ' Servers in this group enable users of RemoteApp programs and personal virtual desktops access to these resources.
Public Const SDDL_RDS_ENDPOINT_SERVERS  = "ES"  ' Servers in this group run virtual machines and host sessions where users RemoteApp programs and personal virtual desktops run.
Public Const SDDL_RDS_MANAGEMENT_SERVERS  = "MS"  ' Servers in this group can perform routine administrative actions on servers running Remote Desktop Services.
Public Const SDDL_USER_MODE_DRIVERS  = "UD"  ' UserMode driver
Public Const SDDL_HYPER_V_ADMINS  = "HA"  ' Members of this group have complete and unrestricted access to all features of Hyper-V.
Public Const SDDL_CLONEABLE_CONTROLLERS  = "CN"  ' Members of this group that are domain controllers may be cloned.
Public Const SDDL_ACCESS_CONTROL_ASSISTANCE_OPS  = "AA"  ' Members of this group can remotely query authorization attributes and permissions for resources on this computer.
Public Const SDDL_REMOTE_MANAGEMENT_USERS  = "RM"  ' Members of this group can access WMI resources over management protocols (such as WS-Management via the Windows Remote Management service). This applies only to WMI namespaces that grant access to the user.
Public Const SDDL_AUTHORITY_ASSERTED  = "AS"  ' Authentication Authority Asserted
Public Const SDDL_SERVICE_ASSERTED  = "SS"  ' Authentication Service Asserted
Public Const SDDL_PROTECTED_USERS  = "AP"  ' Members of this group are afforded additional protections against authentication security threats.
Public Const SDDL_KEY_ADMINS  = "KA"  ' Members of this group have full control over all key credential objects in the domain
Public Const SDDL_ENTERPRISE_KEY_ADMINS  = "EK"  ' Members of this group have full control over all key credential objects in the forest
'  Note !! While making the above changes check if ScepReplaceNewAcronymsInSDDL
'  needs to be updated to allow the new SIDs to be translated on downlevel OS.
'  Integrity Labels
Public Const SDDL_ML_LOW  = "LW"  ' Low mandatory level
Public Const SDDL_ML_MEDIUM  = "ME"  ' Medium mandatory level
Public Const SDDL_ML_MEDIUM_PLUS  = "MP"  ' Medium Plus mandatory level
Public Const SDDL_ML_HIGH  = "HI"  ' High mandatory level
Public Const SDDL_ML_SYSTEM  = "SI"  ' System mandatory level
'  SDDL Seperators - character version
Public Const SDDL_SEPERATORC  = ";"
Public Const SDDL_DELIMINATORC  = ":"
Public Const SDDL_ACE_BEGINC  = "("
Public Const SDDL_ACE_ENDC  = ")"
Public Const SDDL_SPACEC  = " "
Public Const SDDL_ACE_COND_BEGINC  = "("
Public Const SDDL_ACE_COND_ENDC  = ")"
Public Const SDDL_ACE_COND_STRING_BEGINC As String = """"
Public Const SDDL_ACE_COND_STRING_ENDC  = """"
Public Const SDDL_ACE_COND_COMPOSITEVALUE_BEGINC  = "{"
Public Const SDDL_ACE_COND_COMPOSITEVALUE_ENDC  = "}"
Public Const SDDL_ACE_COND_COMPOSITEVALUE_SEPERATORC  = ","
Public Const SDDL_ACE_COND_BLOB_PREFIXC  = "#"
Public Const SDDL_ACE_COND_SID_BEGINC  = "("
Public Const SDDL_ACE_COND_SID_ENDC  = ")"
'  SDDL Seperators - string version
Public Const SDDL_SEPERATOR  = ";"
Public Const SDDL_DELIMINATOR  = ":"
Public Const SDDL_ACE_BEGIN  = "("
Public Const SDDL_ACE_END  = ""
Public Const SDDL_ACE_COND_BEGIN  = "("
Public Const SDDL_ACE_COND_END  = ""
Public Const SDDL_SPACE  = " "
Public Const SDDL_ACE_COND_BLOB_PREFIX  = "#"
Public Const SDDL_ACE_COND_SID_PREFIX  = "SID"
Public Const SDDL_ACE_COND_ATTRIBUTE_PREFIX  = "@"
Public Const SDDL_ACE_COND_USER_ATTRIBUTE_PREFIX  = "@USER."
Public Const SDDL_ACE_COND_RESOURCE_ATTRIBUTE_PREFIX  = "@RESOURCE."
Public Const SDDL_ACE_COND_DEVICE_ATTRIBUTE_PREFIX  = "@DEVICE."
Public Const SDDL_ACE_COND_TOKEN_ATTRIBUTE_PREFIX  = "@TOKEN."


'accctrl.h/aclapi.h 100% coverage
Public Declare PtrSafe Function SetEntriesInAclA Lib "advapi32" (ByVal cCountOfExplicitEntries As Long, pListOfExplicitEntries As EXPLICIT_ACCESS_A, ByVal OldAcl As LongPtr, NewAcl As LongPtr) As Long
Public Declare PtrSafe Function SetEntriesInAclW Lib "advapi32" (ByVal cCountOfExplicitEntries As Long, pListOfExplicitEntries As EXPLICIT_ACCESS_W, ByVal OldAcl As LongPtr, NewAcl As LongPtr) As Long
Public DeclareWide PtrSafe Function SetEntriesInAcl Lib "advapi32" Alias "SetEntriesInAclW" (ByVal cCountOfExplicitEntries As Long, pListOfExplicitEntries As EXPLICIT_ACCESS, ByVal OldAcl As LongPtr, NewAcl As LongPtr) As Long
Public Declare PtrSafe Function GetExplicitEntriesFromAclA Lib "advapi32" (ByVal pacl As LongPtr, pcCountOfExplicitEntries As Long, pListOfExplicitEntries As EXPLICIT_ACCESS_A) As Long
Public Declare PtrSafe Function GetExplicitEntriesFromAclW Lib "advapi32" (ByVal pacl As LongPtr, pcCountOfExplicitEntries As Long, pListOfExplicitEntries As EXPLICIT_ACCESS_W) As Long
Public DeclareWide PtrSafe Function GetExplicitEntriesFromAcl Lib "advapi32" Alias "GetExplicitEntriesFromAclW" (ByVal pacl As LongPtr, pcCountOfExplicitEntries As Long, pListOfExplicitEntries As EXPLICIT_ACCESS) As Long
Public Declare PtrSafe Function GetEffectiveRightsFromAclA Lib "advapi32" (ByVal pacl As LongPtr, pTrustee As TRUSTEE_A, [TypeHint(GenericRights, FileAccessRights)] pAccessRights As Long) As Long
Public Declare PtrSafe Function GetEffectiveRightsFromAclW Lib "advapi32" (ByVal pacl As LongPtr, pTrustee As TRUSTEE_W, [TypeHint(GenericRights, FileAccessRights)] pAccessRights As Long) As Long
Public DeclareWide PtrSafe Function GetEffectiveRightsFromAcl Lib "advapi32" Alias "GetEffectiveRightsFromAclW" (ByVal pacl As LongPtr, pTrustee As TRUSTEE, [TypeHint(GenericRights, FileAccessRights)] pAccessRights As Long) As Long
Public Declare PtrSafe Function GetAuditedPermissionsFromAclA Lib "advapi32" (ByVal pacl As LongPtr, pTrustee As TRUSTEE_A, [TypeHint(GenericRights, FileAccessRights)] pSuccessfulAuditedRights As Long, [TypeHint(GenericRights, FileAccessRights)] pFailedAuditRights As Long) As Long
Public Declare PtrSafe Function GetAuditedPermissionsFromAclW Lib "advapi32" (ByVal pacl As LongPtr, pTrustee As TRUSTEE_W, [TypeHint(GenericRights, FileAccessRights)] pSuccessfulAuditedRights As Long, [TypeHint(GenericRights, FileAccessRights)] pFailedAuditRights As Long) As Long
Public DeclareWide PtrSafe Function GetAuditedPermissionsFromAcl Lib "advapi32" Alias "GetAuditedPermissionsFromAclW" (ByVal pacl As LongPtr, pTrustee As TRUSTEE, [TypeHint(GenericRights, FileAccessRights)] pSuccessfulAuditedRights As Long, [TypeHint(GenericRights, FileAccessRights)] pFailedAuditRights As Long) As Long
Public Declare PtrSafe Function GetNamedSecurityInfoA Lib "advapi32" (ByVal pObjectName As String, ByVal ObjectType As SE_OBJECT_TYPE, ByVal SecurityInfo As SECURITY_INFORMATION, ppsidOwner As LongPtr, ppsidGroup As LongPtr, ppDacl As LongPtr, ppSacl As LongPtr, ppSecurityDescriptor As SECURITY_DESCRIPTOR) As Long
Public Declare PtrSafe Function GetNamedSecurityInfoW Lib "advapi32" (ByVal pObjectName As LongPtr, ByVal ObjectType As SE_OBJECT_TYPE, ByVal SecurityInfo As SECURITY_INFORMATION, ppsidOwner As LongPtr, ppsidGroup As LongPtr, ppDacl As LongPtr, ppSacl As LongPtr, ppSecurityDescriptor As SECURITY_DESCRIPTOR) As Long
Public DeclareWide PtrSafe Function GetNamedSecurityInfo Lib "advapi32" Alias "GetNamedSecurityInfoW" (ByVal pObjectName As String, ByVal ObjectType As SE_OBJECT_TYPE, ByVal SecurityInfo As SECURITY_INFORMATION, ppsidOwner As LongPtr, ppsidGroup As LongPtr, ppDacl As LongPtr, ppSacl As LongPtr, ppSecurityDescriptor As SECURITY_DESCRIPTOR) As Long
Public Declare PtrSafe Function GetSecurityInfo Lib "advapi32" (ByVal handle As LongPtr, ByVal ObjectType As SE_OBJECT_TYPE, ByVal SecurityInfo As SECURITY_INFORMATION, ppsidOwner As LongPtr, ppsidGroup As LongPtr, ppDacl As LongPtr, ppSacl As LongPtr, ppSecurityDescriptor As SECURITY_DESCRIPTOR) As Long
Public Declare PtrSafe Function SetNamedSecurityInfoA Lib "advapi32" (ByVal pObjectName As String, ByVal ObjectType As SE_OBJECT_TYPE, ByVal SecurityInfo As SECURITY_INFORMATION, Optional ByVal psidOwner As LongPtr, Optional ByVal psidGroup As LongPtr, Optional ByVal pDacl As LongPtr, Optional ByVal pSacl As LongPtr) As Long
Public Declare PtrSafe Function SetNamedSecurityInfoW Lib "advapi32" (ByVal pObjectName As LongPtr, ByVal ObjectType As SE_OBJECT_TYPE, ByVal SecurityInfo As SECURITY_INFORMATION, Optional ByVal psidOwner As LongPtr, Optional ByVal psidGroup As LongPtr, Optional ByVal pDacl As LongPtr, Optional ByVal pSacl As LongPtr) As Long
Public DeclareWide PtrSafe Function SetNamedSecurityInfo Lib "advapi32" Alias "SetNamedSecurityInfoW" (ByVal pObjectName As String, ByVal ObjectType As SE_OBJECT_TYPE, ByVal SecurityInfo As SECURITY_INFORMATION, Optional ByVal psidOwner As LongPtr, Optional ByVal psidGroup As LongPtr, Optional ByVal pDacl As LongPtr, Optional ByVal pSacl As LongPtr) As Long
Public Declare PtrSafe Function SetSecurityInfo Lib "advapi32" (ByVal handle As LongPtr, ByVal ObjectType As SE_OBJECT_TYPE, ByVal SecurityInfo As SECURITY_INFORMATION, Optional ByVal psidOwner As LongPtr, Optional ByVal psidGroup As LongPtr, Optional ByVal pDacl As LongPtr, Optional ByVal pSacl As LongPtr) As Long
Public Declare PtrSafe Function GetInheritanceSourceA Lib "advapi32" (ByVal pObjectName As String, ByVal ObjectType As SE_OBJECT_TYPE, ByVal SecurityInfo As SECURITY_INFORMATION, ByVal Container As BOOL, pObjectClassGuids As LongPtr, ByVal GuidCount As LongPtr, ByVal pAcl As LongPtr, ByVal pfnArray As LongPtr, pGenericMapping As GENERIC_MAPPING, pInheritArray As INHERITED_FROMA) As Long
Public Declare PtrSafe Function GetInheritanceSourceW Lib "advapi32" (ByVal pObjectName As LongPtr, ByVal ObjectType As SE_OBJECT_TYPE, ByVal SecurityInfo As SECURITY_INFORMATION, ByVal Container As BOOL, pObjectClassGuids As LongPtr, ByVal GuidCount As LongPtr, ByVal pAcl As LongPtr, ByVal pfnArray As LongPtr, pGenericMapping As GENERIC_MAPPING, pInheritArray As INHERITED_FROMW) As Long
Public DeclareWide PtrSafe Function GetInheritanceSource Lib "advapi32" Alias "GetInheritanceSourceW" (ByVal pObjectName As String, ByVal ObjectType As SE_OBJECT_TYPE, ByVal SecurityInfo As SECURITY_INFORMATION, ByVal Container As BOOL, pObjectClassGuids As LongPtr, ByVal GuidCount As LongPtr, ByVal pAcl As LongPtr, ByVal pfnArray As LongPtr, pGenericMapping As GENERIC_MAPPING, pInheritArray As INHERITED_FROM) As Long
Public Declare PtrSafe Function FreeInheritedFromArray Lib "advapi32" (pInheritArray As Any, ByVal AceCnt As Integer, Optional ByVal pfnArray As LongPtr) As Long
Public Declare PtrSafe Function TreeResetNamedSecurityInfoA Lib "advapi32" (ByVal pObjectName As String, ByVal ObjectType As SE_OBJECT_TYPE, ByVal SecurityInfo As SECURITY_INFORMATION, ByVal psidOwner As LongPtr, ByVal psidGroup As LongPtr, ByVal pDacl As LongPtr, ByVal pSacl As LongPtr, ByVal KeepExplicit As BOOL, ByVal fnProgress As LongPtr, ByVal ProgressInvokeSetting As PROG_INVOKE_SETTING, Args As Any) As Long
Public Declare PtrSafe Function TreeResetNamedSecurityInfoW Lib "advapi32" (ByVal pObjectName As LongPtr, ByVal ObjectType As SE_OBJECT_TYPE, ByVal SecurityInfo As SECURITY_INFORMATION, ByVal psidOwner As LongPtr, ByVal psidGroup As LongPtr, ByVal pDacl As LongPtr, ByVal pSacl As LongPtr, ByVal KeepExplicit As BOOL, ByVal fnProgress As LongPtr, ByVal ProgressInvokeSetting As PROG_INVOKE_SETTING, Args As Any) As Long
Public DeclareWide PtrSafe Function TreeResetNamedSecurityInfo Lib "advapi32" Alias "TreeResetNamedSecurityInfoW" (ByVal pObjectName As String, ByVal ObjectType As SE_OBJECT_TYPE, ByVal SecurityInfo As SECURITY_INFORMATION, ByVal psidOwner As LongPtr, ByVal psidGroup As LongPtr, ByVal pDacl As LongPtr, ByVal pSacl As LongPtr, ByVal KeepExplicit As BOOL, ByVal fnProgress As LongPtr, ByVal ProgressInvokeSetting As PROG_INVOKE_SETTING, Args As Any) As Long
Public Declare PtrSafe Function TreeSetNamedSecurityInfoA Lib "advapi32" (ByVal pObjectName As String, ByVal ObjectType As SE_OBJECT_TYPE, ByVal SecurityInfo As SECURITY_INFORMATION, ByVal psidOwner As LongPtr, ByVal psidGroup As LongPtr, ByVal pDacl As LongPtr, ByVal pSacl As LongPtr, ByVal dwAction As ActrlTreeSecFlags, ByVal fnProgress As LongPtr, ByVal ProgressInvokeSetting As PROG_INVOKE_SETTING, Args As Any) As Long
Public Declare PtrSafe Function TreeSetNamedSecurityInfoW Lib "advapi32" (ByVal pObjectName As LongPtr, ByVal ObjectType As SE_OBJECT_TYPE, ByVal SecurityInfo As SECURITY_INFORMATION, ByVal psidOwner As LongPtr, ByVal psidGroup As LongPtr, ByVal pDacl As LongPtr, ByVal pSacl As LongPtr, ByVal dwAction As ActrlTreeSecFlags, ByVal fnProgress As LongPtr, ByVal ProgressInvokeSetting As PROG_INVOKE_SETTING, Args As Any) As Long
Public DeclareWide PtrSafe Function TreeSetNamedSecurityInfo Lib "advapi32" Alias "TreeSetNamedSecurityInfoW" (ByVal pObjectName As String, ByVal ObjectType As SE_OBJECT_TYPE, ByVal SecurityInfo As SECURITY_INFORMATION, ByVal psidOwner As LongPtr, ByVal psidGroup As LongPtr, ByVal pDacl As LongPtr, ByVal pSacl As LongPtr, ByVal dwAction As ActrlTreeSecFlags, ByVal fnProgress As LongPtr, ByVal ProgressInvokeSetting As PROG_INVOKE_SETTING, Args As Any) As Long
Public Declare PtrSafe Function BuildSecurityDescriptorA Lib "advapi32" (pOwner As TRUSTEE_A, pGroup As TRUSTEE_A, ByVal cCountOfAccessEntries As Long, pListOfAccessEntries As EXPLICIT_ACCESS_A, ByVal cCountOfAuditEntries As Long, pListOfAccessEntries As EXPLICIT_ACCESS_A, pOldSD As SECURITY_DESCRIPTOR, pSizeNewSD As Long, pNewSD As LongPtr) As Long
Public Declare PtrSafe Function BuildSecurityDescriptorW Lib "advapi32" (pOwner As TRUSTEE_W, pGroup As TRUSTEE_W, ByVal cCountOfAccessEntries As Long, pListOfAccessEntries As EXPLICIT_ACCESS_W, ByVal cCountOfAuditEntries As Long, pListOfAccessEntries As EXPLICIT_ACCESS_W, pOldSD As SECURITY_DESCRIPTOR, pSizeNewSD As Long, pNewSD As LongPtr) As Long
Public DeclareWide PtrSafe Function BuildSecurityDescriptor Lib "advapi32" Alias "BuildSecurityDescriptorW" (pOwner As TRUSTEE_A, pGroup As TRUSTEE, ByVal cCountOfAccessEntries As Long, pListOfAccessEntries As EXPLICIT_ACCESS, ByVal cCountOfAuditEntries As Long, pListOfAccessEntries As EXPLICIT_ACCESS, pOldSD As SECURITY_DESCRIPTOR, pSizeNewSD As Long, pNewSD As LongPtr) As Long
Public Declare PtrSafe Function LookupSecurityDescriptorPartsA Lib "advapi32" (ppOwner As LongPtr, ppGroup As LongPtr, pcCountOfAccessEntries As Long, ppListOfAccessEntries As LongPtr, pcCountOfAuditEntries As Long, ppListOfAuditEntries As LongPtr, pSD As SECURITY_DESCRIPTOR) As Long
Public Declare PtrSafe Function LookupSecurityDescriptorPartsW Lib "advapi32" (ppOwner As LongPtr, ppGroup As LongPtr, pcCountOfAccessEntries As Long, ppListOfAccessEntries As LongPtr, pcCountOfAuditEntries As Long, ppListOfAuditEntries As LongPtr, pSD As SECURITY_DESCRIPTOR) As Long
Public DeclareWide PtrSafe Function LookupSecurityDescriptorParts Lib "advapi32" Alias "LookupSecurityDescriptorPartsW" (ppOwner As LongPtr, ppGroup As LongPtr, pcCountOfAccessEntries As Long, ppListOfAccessEntries As LongPtr, pcCountOfAuditEntries As Long, ppListOfAuditEntries As LongPtr, pSD As SECURITY_DESCRIPTOR) As Long
Public Declare PtrSafe Sub BuildExplicitAccessWithNameA Lib "advapi32" (pExplicitAccess As EXPLICIT_ACCESS_A, ByVal pTrusteeName As String, ByVal AccessPermissions As Long, ByVal AccessMode As ACCESS_MODE, [TypeHint(INHERIT_FLAGS, ACE_FLAGS)] Inheritance As Long)
Public Declare PtrSafe Sub BuildExplicitAccessWithNameW Lib "advapi32" (pExplicitAccess As EXPLICIT_ACCESS_W, ByVal pTrusteeName As LongPtr, ByVal AccessPermissions As Long, ByVal AccessMode As ACCESS_MODE, [TypeHint(INHERIT_FLAGS, ACE_FLAGS)] Inheritance As Long)
Public DeclareWide PtrSafe Sub BuildExplicitAccessWithName Lib "advapi32" Alias "BuildExplicitAccessWithNameW" (pExplicitAccess As EXPLICIT_ACCESS, ByVal pTrusteeName As String, ByVal AccessPermissions As Long, ByVal AccessMode As ACCESS_MODE, [TypeHint(INHERIT_FLAGS, ACE_FLAGS)] Inheritance As Long)
Public Declare PtrSafe Sub BuildImpersonateExplicitAccessWithNameA Lib "advapi32" (pExplicitAccess As EXPLICIT_ACCESS_A, ByVal pTrusteeName As String, pTrustee As TRUSTEE_A, ByVal AccessPermissions As Long, ByVal AccessMode As ACCESS_MODE, [TypeHint(INHERIT_FLAGS, ACE_FLAGS)] Inheritance As Long)
Public Declare PtrSafe Sub BuildImpersonateExplicitAccessWithNameW Lib "advapi32" (pExplicitAccess As EXPLICIT_ACCESS_W, ByVal pTrusteeName As LongPtr, pTrustee As TRUSTEE_W, ByVal AccessPermissions As Long, ByVal AccessMode As ACCESS_MODE, [TypeHint(INHERIT_FLAGS, ACE_FLAGS)] Inheritance As Long)
Public DeclareWide PtrSafe Sub BuildImpersonateExplicitAccessWithName Lib "advapi32" Alias "BuildImpersonateExplicitAccessWithNameW" (pExplicitAccess As EXPLICIT_ACCESS, ByVal pTrusteeName As String, pTrustee As TRUSTEE, ByVal AccessPermissions As Long, ByVal AccessMode As ACCESS_MODE, [TypeHint(INHERIT_FLAGS, ACE_FLAGS)] Inheritance As Long)
Public Declare PtrSafe Sub BuildTrusteeWithNameA Lib "advapi32" (pTrustee As TRUSTEE_A, ByVal pName As String)
Public Declare PtrSafe Sub BuildTrusteeWithNameW Lib "advapi32" (pTrustee As TRUSTEE_W, ByVal pName As LongPtr)
Public DeclareWide PtrSafe Sub BuildTrusteeWithName Lib "advapi32" Alias "BuildTrusteeWithNameW" (pTrustee As TRUSTEE, ByVal pName As String)
Public Declare PtrSafe Sub BuildImpersonateTrusteeA Lib "advapi32" (pTrustee As TRUSTEE_A, pImpersonateTrustee As TRUSTEE_A)
Public Declare PtrSafe Sub BuildImpersonateTrusteeW Lib "advapi32" (pTrustee As TRUSTEE_W, pImpersonateTrustee As TRUSTEE_W)
Public DeclareWide PtrSafe Sub BuildImpersonateTrustee Lib "advapi32" Alias "BuildImpersonateTrusteeW" (pTrustee As TRUSTEE, pImpersonateTrustee As TRUSTEE)
Public Declare PtrSafe Sub BuildTrusteeWithSidA Lib "advapi32" (pTrustee As TRUSTEE_A, ByVal pSid As LongPtr)
Public Declare PtrSafe Sub BuildTrusteeWithSidW Lib "advapi32" (pTrustee As TRUSTEE_W, ByVal pSid As LongPtr)
Public DeclareWide PtrSafe Sub BuildTrusteeWithSid Lib "advapi32" Alias "BuildTrusteeWithSidW" (pTrustee As TRUSTEE, ByVal pSid As LongPtr)
Public Declare PtrSafe Sub BuildTrusteeWithObjectsAndSidA Lib "advapi32" (pTrustee As TRUSTEE_A, pObjSid As OBJECTS_AND_SID, pObjectGuid As UUID, pInheritedObjectGuid As UUID, Optional ByVal pSid As LongPtr)
Public Declare PtrSafe Sub BuildTrusteeWithObjectsAndSidW Lib "advapi32" (pTrustee As TRUSTEE_W, pObjSid As OBJECTS_AND_SID, pObjectGuid As UUID, pInheritedObjectGuid As UUID, Optional ByVal pSid As LongPtr)
Public DeclareWide PtrSafe Sub BuildTrusteeWithObjectsAndSid Lib "advapi32" Alias "BuildTrusteeWithObjectsAndSidW" (pTrustee As TRUSTEE, pObjSid As OBJECTS_AND_SID, pObjectGuid As UUID, pInheritedObjectGuid As UUID, Optional ByVal pSid As LongPtr)
Public Declare PtrSafe Sub BuildTrusteeWithObjectsAndNameA Lib "advapi32" (pTrustee As TRUSTEE_A, pObjName As OBJECTS_AND_NAME_A, Optional ByVal ObjectType As SE_OBJECT_TYPE, Optional ByVal ObjectTypeName As String, Optional ByVal InheritedObjectTypeName As String, Optional ByVal pName As String)
Public Declare PtrSafe Sub BuildTrusteeWithObjectsAndNameW Lib "advapi32" (pTrustee As TRUSTEE_W, pObjName As OBJECTS_AND_NAME_W, Optional ByVal ObjectType As SE_OBJECT_TYPE, Optional ByVal ObjectTypeName As LongPtr, Optional ByVal InheritedObjectTypeName As LongPtr, Optional ByVal pName As LongPtr)
Public DeclareWide PtrSafe Sub BuildTrusteeWithObjectsAndName Lib "advapi32" Alias "BuildTrusteeWithObjectsAndNameW" (pTrustee As TRUSTEE, pObjName As OBJECTS_AND_NAME, Optional ByVal ObjectType As SE_OBJECT_TYPE, Optional ByVal ObjectTypeName As String, Optional ByVal InheritedObjectTypeName As String, Optional ByVal pName As String)
Public Declare PtrSafe Function GetTrusteeNameA Lib "advapi32" (pTrustee As TRUSTEE_A) As LongPtr
Public Declare PtrSafe Function GetTrusteeNameW Lib "advapi32" (pTrustee As TRUSTEE_W) As LongPtr
Public DeclareWide PtrSafe Function GetTrusteeName Lib "advapi32" Alias "GetTrusteeNameW" (pTrustee As TRUSTEE) As LongPtr
Public Declare PtrSafe Function GetTrusteeTypeA Lib "advapi32" (pTrustee As TRUSTEE_A) As TRUSTEE_TYPE
Public Declare PtrSafe Function GetTrusteeTypeW Lib "advapi32" (pTrustee As TRUSTEE_W) As TRUSTEE_TYPE
Public DeclareWide PtrSafe Function GetTrusteeType Lib "advapi32" Alias "GetTrusteeTypeW" (pTrustee As TRUSTEE) As TRUSTEE_TYPE
Public Declare PtrSafe Function GetTrusteeFormA Lib "advapi32" (pTrustee As TRUSTEE_A) As TRUSTEE_FORM
Public Declare PtrSafe Function GetTrusteeFormW Lib "advapi32" (pTrustee As TRUSTEE_W) As TRUSTEE_FORM
Public DeclareWide PtrSafe Function GetTrusteeForm Lib "advapi32" Alias "GetTrusteeFormW" (pTrustee As TRUSTEE) As TRUSTEE_FORM
Public Declare PtrSafe Function GetMultipleTrusteeOperationA Lib "advapi32" (pTrustee As TRUSTEE_A) As MULTIPLE_TRUSTEE_OPERATION
Public Declare PtrSafe Function GetMultipleTrusteeOperationW Lib "advapi32" (pTrustee As TRUSTEE_W) As MULTIPLE_TRUSTEE_OPERATION
Public DeclareWide PtrSafe Function GetMultipleTrusteeOperation Lib "advapi32" Alias "GetMultipleTrusteeOperationW" (pTrustee As TRUSTEE) As MULTIPLE_TRUSTEE_OPERATION
Public Declare PtrSafe Function GetMultipleTrusteeA Lib "advapi32" (pTrustee As TRUSTEE_A) As TRUSTEE_A
Public Declare PtrSafe Function GetMultipleTrusteeW Lib "advapi32" (pTrustee As TRUSTEE_W) As TRUSTEE_W
Public DeclareWide PtrSafe Function GetMultipleTrustee Lib "advapi32" Alias "GetMultipleTrusteeW" (pTrustee As TRUSTEE) As TRUSTEE

Public Const HW_PROFILE_GUIDLEN = 39
Public Enum HwProfileDockInfo
    DOCKINFO_UNDOCKED = (&H1)
    DOCKINFO_DOCKED = (&H2)
    DOCKINFO_USER_SUPPLIED = (&H4)
    DOCKINFO_USER_UNDOCKED = (DOCKINFO_USER_SUPPLIED Or DOCKINFO_UNDOCKED)
    DOCKINFO_USER_DOCKED = (DOCKINFO_USER_SUPPLIED Or DOCKINFO_DOCKED)
End Enum
Public Type HW_PROFILE_INFOA
    dwDockInfo As HwProfileDockInfo
    szHwProfileGuid(0 To (HW_PROFILE_GUIDLEN - 1)) As Byte
    szHwProfileName(0 To (MAX_PROFILE_LEN - 1)) As Byte
End Type
Public Type HW_PROFILE_INFOW
    dwDockInfo As HwProfileDockInfo
    szHwProfileGuid(0 To (HW_PROFILE_GUIDLEN - 1)) As Integer
    szHwProfileName(0 To (MAX_PROFILE_LEN - 1)) As Integer
End Type
'Alias HW_PROFILE_INFO As HW_PROFILE_INFOW
Public Type HW_PROFILE_INFO
    dwDockInfo As HwProfileDockInfo
    szHwProfileGuid(0 To (HW_PROFILE_GUIDLEN - 1)) As Integer
    szHwProfileName(0 To (MAX_PROFILE_LEN - 1)) As Integer
End Type
Public Declare PtrSafe Function GetCurrentHwProfileA Lib "advapi32" (lpHwProfileInfo As HW_PROFILE_INFOA) As BOOL
Public Declare PtrSafe Function GetCurrentHwProfileW Lib "advapi32" (lpHwProfileInfo As HW_PROFILE_INFOW) As BOOL
Public DeclareWide PtrSafe Function GetCurrentHwProfile Lib "advapi32" Alias "GetCurrentHwProfileW" (lpHwProfileInfo As HW_PROFILE_INFO) As BOOL



Public Declare PtrSafe Function LogonUserA Lib "advapi32" (ByVal lpszUsername As String, ByVal lpszDomain As String, ByVal lpszPassword As String, ByVal dwLogonType As LogonOperations, ByVal dwLogonProvider As LogonProviders, phToken As LongPtr) As BOOL
Public Declare PtrSafe Function LogonUserW Lib "advapi32" (ByVal lpszUsername As LongPtr, ByVal lpszDomain As LongPtr, ByVal lpszPassword As LongPtr, ByVal dwLogonType As LogonOperations, ByVal dwLogonProvider As LogonProviders, phToken As LongPtr) As BOOL
Public DeclareWide PtrSafe Function LogonUser Lib "advapi32" Alias "LogonUserW" (ByVal lpszUsername As String, ByVal lpszDomain As String, ByVal lpszPassword As String, ByVal dwLogonType As LogonOperations, ByVal dwLogonProvider As LogonProviders, phToken As LongPtr) As BOOL
[Description("In order to keep the last 4 arguments optional, the final argument is a ByVal LongPtr rather than ByRef QUOTA_LIMITS. If you wish to use this argument, you can pass `VarPtr(Your QUOTA_LIMITS variable)`.")]
Public Declare PtrSafe Function LogonUserExA Lib "advapi32" (ByVal lpszUsername As String, ByVal lpszDomain As String, ByVal lpszPassword As String, ByVal dwLogonType As LogonOperations, ByVal dwLogonProvider As LogonProviders, phToken As LongPtr, Optional ppLogonSid As LongPtr, Optional ppProfileBuffer As LongPtr, Optional pdwProfileLength As Long, Optional ByVal pQuotaLimits As LongPtr) As BOOL
[Description("In order to keep the last 4 arguments optional, the final argument is a ByVal LongPtr rather than ByRef QUOTA_LIMITS. If you wish to use this argument, you can pass `VarPtr(Your QUOTA_LIMITS variable)`.")]
Public Declare PtrSafe Function LogonUserExW Lib "advapi32" (ByVal lpszUsername As LongPtr, ByVal lpszDomain As LongPtr, ByVal lpszPassword As LongPtr, ByVal dwLogonType As LogonOperations, ByVal dwLogonProvider As LogonProviders, phToken As LongPtr, Optional ppLogonSid As LongPtr, Optional ppProfileBuffer As LongPtr, Optional pdwProfileLength As Long, Optional ByVal pQuotaLimits As LongPtr) As BOOL
[Description("In order to keep the last 4 arguments optional, the final argument is a ByVal LongPtr rather than ByRef QUOTA_LIMITS. If you wish to use this argument, you can pass `VarPtr(Your QUOTA_LIMITS variable)`.")]
Public DeclareWide PtrSafe Function LogonUserEx Lib "advapi32" Alias "LogonUserExW" (ByVal lpszUsername As String, ByVal lpszDomain As String, ByVal lpszPassword As String, ByVal dwLogonType As LogonOperations, ByVal dwLogonProvider As LogonProviders, Optional phToken As LongPtr, Optional ppLogonSid As LongPtr, Optional ppProfileBuffer As LongPtr, Optional pdwProfileLength As Long, Optional ByVal pQuotaLimits As LongPtr) As BOOL
' Public Declare PtrSafe Function LogonUserExExA Lib "advapi32" (ByVal lpszUsername As String, ByVal lpszDomain As String, ByVal lpszPassword As String, ByVal dwLogonType As LogonOperations, ByVal dwLogonProvider As LogonProviders, pTokenGroups As TOKEN_GROUPS, phToken As LongPtr, ppLogonSid As LongPtr, ppProfileBuffer As LongPtr, pdwProfileLenth As Long, pQuotaLimits As QUOTA_LIMITS) As BOOL
Public Declare PtrSafe Function LogonUserExExW Lib "advapi32" (ByVal lpszUsername As LongPtr, ByVal lpszDomain As LongPtr, ByVal lpszPassword As LongPtr, ByVal dwLogonType As LogonOperations, ByVal dwLogonProvider As LogonProviders, pTokenGroups As TOKEN_GROUPS, phToken As LongPtr, ppLogonSid As LongPtr, ppProfileBuffer As LongPtr, pdwProfileLenth As Long, pQuotaLimits As QUOTA_LIMITS) As BOOL
Public DeclareWide PtrSafe Function LogonUserExEx Lib "advapi32" Alias "LogonUserExExW" (ByVal lpszUsername As String, ByVal lpszDomain As String, ByVal lpszPassword As String, ByVal dwLogonType As LogonOperations, ByVal dwLogonProvider As LogonProviders, pTokenGroups As TOKEN_GROUPS, phToken As LongPtr, ppLogonSid As LongPtr, ppProfileBuffer As LongPtr, pdwProfileLenth As Long, pQuotaLimits As QUOTA_LIMITS) As BOOL
Public Declare PtrSafe Function LookupAccountNameA Lib "advapi32" (ByVal lpSystemName As String, ByVal lpAccountName As String, ByVal Sid As LongPtr, cbSid As Long, ByVal ReferencedDomainName As String, cchReferencedDomainName As Long, peUse As SID_NAME_USE) As BOOL
Public Declare PtrSafe Function LookupAccountNameW Lib "advapi32" (ByVal lpSystemName As LongPtr, ByVal lpAccountName As LongPtr, ByVal Sid As LongPtr, cbSid As Long, ByVal ReferencedDomainName As LongPtr, cchReferencedDomainName As Long, peUse As SID_NAME_USE) As BOOL
Public DeclareWide PtrSafe Function LookupAccountName Lib "advapi32" Alias "LookupAccountNameW" (ByVal lpSystemName As String, ByVal lpAccountName As String, ByVal Sid As LongPtr, cbSid As Long, ByVal ReferencedDomainName As String, cchReferencedDomainName As Long, peUse As SID_NAME_USE) As BOOL
Public Declare PtrSafe Function LookupAccountSidA Lib "advapi32" (ByVal lpSystemName As String, ByVal sid As LongPtr, ByVal Name As String, cchName As Long, ByVal ReferencedDomainName As String, cchReferencedDomainName As Long, peUse As SID_NAME_USE) As BOOL
Public Declare PtrSafe Function LookupAccountSidW Lib "advapi32" (ByVal lpSystemName As LongPtr, ByVal sid As LongPtr, ByVal Name As LongPtr, cchName As Long, ByVal ReferencedDomainName As LongPtr, cchReferencedDomainName As Long, peUse As SID_NAME_USE) As BOOL
Public DeclareWide PtrSafe Function LookupAccountSid Lib "advapi32" Alias "LookupAccountSidW" (ByVal lpSystemName As String, ByVal sid As LongPtr, ByVal Name As String, cchName As Long, ByVal ReferencedDomainName As String, cchReferencedDomainName As Long, peUse As SID_NAME_USE) As BOOL
Public Function LookupAccountSidLocalA(ByVal sid As LongPtr, ByVal Name As String, cchName As Long, ByVal ReferencedDomainName As String, cchReferencedDomainName As Long, peUse As SID_NAME_USE) As BOOL
    Return LookupAccountSidA(vbNullString, sid, Name, cchName, ReferencedDomainName, cchReferencedDomainName, peUse)
End Function
Public Function LookupAccountSidLocalW(ByVal sid As LongPtr, ByVal Name As String, cchName As Long, ByVal ReferencedDomainName As String, cchReferencedDomainName As Long, peUse As SID_NAME_USE) As BOOL
    Return LookupAccountSidW(0, sid, StrPtr(Name), cchName, StrPtr(ReferencedDomainName), cchReferencedDomainName, peUse)
End Function
Public Function LookupAccountSidLocal(ByVal sid As LongPtr, ByVal Name As String, cchName As Long, ByVal ReferencedDomainName As String, cchReferencedDomainName As Long, peUse As SID_NAME_USE) As BOOL
    Return LookupAccountSid(vbNullString, sid, Name, cchName, ReferencedDomainName, cchReferencedDomainName, peUse)
End Function


Public Declare PtrSafe Function InitializeSecurityDescriptor Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal dwRevision As Long) As Long
Public Declare PtrSafe Function SetSecurityDescriptorDacl Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal bDaclPresent As Long, pDacl As Any, ByVal bDaclDefaulted As Long) As Long
Public Declare PtrSafe Function GetSecurityDescriptorDacl Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, lpbDaclPresent As Long, pDacl As Any, pbDaclDefaulted As Long) As Long
Public Declare PtrSafe Function SetSecurityDescriptorGroup Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal pGroup As LongPtr, ByVal bGroupDefauled As BOOL) As BOOL
Public Declare PtrSafe Function GetSecurityDescriptorGroup Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, pGroup As LongPtr, lpbGroupDefauled As BOOL) As BOOL
Public Declare PtrSafe Function SetSecurityDescriptorOwner Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal pOwner As LongPtr, ByVal bOwnerDefauled As BOOL) As BOOL
Public Declare PtrSafe Function GetSecurityDescriptorOwner Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, pOwner As LongPtr, lpbOwnerDefauled As BOOL) As BOOL
Public Declare PtrSafe Function SetSecurityDescriptorRMControl Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, Optional RMControl As Byte) As Long
Public Declare PtrSafe Function GetSecurityDescriptorRMControl Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, Optional RMControl As Byte) As Long
Public Declare PtrSafe Function SetSecurityDescriptorSacl Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal bSaclPresent As Long, pSacl As Any, ByVal bSaclDefaulted As Long) As BOOL
Public Declare PtrSafe Function GetSecurityDescriptorSacl Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, lpbSaclPresent As Long, pSacl As Any, pbSaclDefaulted As Long) As BOOL
Public Declare PtrSafe Function SetSecurityDescriptorControl Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, [TypeHint(SECURITY_DESCRIPTOR_CONTROL)] ByVal ControlBitsOfInterest As Integer, [TypeHint(SECURITY_DESCRIPTOR_CONTROL)] ByVal ControlBitsToSet As Integer) As BOOL
Public Declare PtrSafe Function GetSecurityDescriptorControl Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, [TypeHint(SECURITY_DESCRIPTOR_CONTROL)] pControl As Integer, lpdwRevision As Long) As BOOL
Public Declare PtrSafe Function MakeAbsoluteSD Lib "advapi32" (pSelfRelativeSecurityDescriptor As SECURITY_DESCRIPTOR, pAbsoluteSecurityDescriptor As SECURITY_DESCRIPTOR, lpdwAbsoluteSecurityDescriptorSize As Long, ByVal pDacl As LongPtr, lpdwDaclSize As Long, ByVal pSacl As LongPtr, lpdwSaclSize As Long, ByVal pOwner As LongPtr, lpdwOwnerSize As Long, ByVal pPrimaryGroup As LongPtr, lpdwPrimaryGroupSize As Long) As BOOL
Public Declare PtrSafe Function MakeSelfRelativeSD Lib "advapi32" (pSelfRelativeSecurityDescriptor As SECURITY_DESCRIPTOR, pAbsoluteSecurityDescriptor As SECURITY_DESCRIPTOR, lpdwBufferLength As Long) As BOOL
Public Declare PtrSafe Function IsValidSecurityDescriptor Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR) As BOOL
Public Declare PtrSafe Function GetSecurityDescriptorLength Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR) As Long

Public Declare PtrSafe Function EncryptFileA Lib "advapi32" (ByVal lpFileName As String) As Long
Public Declare PtrSafe Function EncryptFileW Lib "advapi32" (ByVal lpFileName As LongPtr) As Long
Public DeclareWide PtrSafe Function EncryptFile Lib "advapi32" Alias "EncryptFileW" (ByVal lpFileName As String) As Long
Public Declare PtrSafe Function DecryptFileA Lib "advapi32" (ByVal lpFileName As String, ByVal dwReserved As Long) As Long
Public Declare PtrSafe Function DecryptFileW Lib "advapi32" (ByVal lpFileName As LongPtr, ByVal dwReserved As Long) As Long
Public DeclareWide PtrSafe Function DecryptFile Lib "advapi32" Alias "DecryptFileW" (ByVal lpFileName As String, ByVal dwReserved As Long) As Long
Public Declare PtrSafe Function FileEncryptionStatusA Lib "advapi32" (ByVal lpFileName As String, lpStatus As FileEncryptionStatus) As BOOL
Public Declare PtrSafe Function FileEncryptionStatusW Lib "advapi32" (ByVal lpFileName As LongPtr, lpStatus As FileEncryptionStatus) As BOOL
Public DeclareWide PtrSafe Function FileEncryptionStatus Lib "advapi32" Alias "FileEncryptionStatusW" (ByVal lpFileName As String, lpStatus As FileEncryptionStatus) As BOOL
Public Declare PtrSafe Function OpenEncryptedFileRawA Lib "advapi32" (ByVal lpFileName As String, ByVal ulFlags As OpenFileRawFlags, pvContext As LongPtr) As Long
Public Declare PtrSafe Function OpenEncryptedFileRawW Lib "advapi32" (ByVal lpFileName As LongPtr, ByVal ulFlags As OpenFileRawFlags, pvContext As LongPtr) As Long
Public DeclareWide PtrSafe Function OpenEncryptedFileRaw Lib "advapi32" Alias "OpenEncryptedFileRawW" (ByVal lpFileName As String, ByVal ulFlags As OpenFileRawFlags, pvContext As LongPtr) As Long
Public Declare PtrSafe Function ReadEncryptedFileRaw Lib "advapi32" (ByVal pfExportCallback As LongPtr, ByVal pvCallbackContext As LongPtr, ByVal pvContext As LongPtr) As Long
Public Declare PtrSafe Function WriteEncryptedFileRaw Lib "advapi32" (ByVal pfImportCallback As LongPtr, ByVal pvCallbackContext As LongPtr, ByVal pvContext As LongPtr) As Long
Public Declare PtrSafe Sub CloseEncryptedFileRaw Lib "advapi32" (ByVal pvContext As LongPtr)



Public Declare PtrSafe Function IsValidSid Lib "advapi32" (ByVal psid As LongPtr) As BOOL
Public Declare PtrSafe Function IsWellKnownSid Lib "advapi32" (ByVal psid As LongPtr, WellKnownSidType As WELL_KNOWN_SID_TYPE) As BOOL
Public Declare PtrSafe Function InitializeSid Lib "advapi32" (psid As LongPtr, pIdentifierAuthority As SID_IDENTIFIER_AUTHORITY, ByVal nSubAuthorityCount As Byte) As BOOL
Public Declare PtrSafe Function AllocateAndInitializeSid Lib "advapi32" (pIdentifierAuthority As SID_IDENTIFIER_AUTHORITY, ByVal nSubAuthorityCount As Byte, ByVal nSubAuthority0 As Long, ByVal nSubAuthority1 As Long, ByVal nSubAuthority2 As Long, ByVal nSubAuthority3 As Long, ByVal nSubAuthority4 As Long, ByVal nSubAuthority5 As Long, ByVal nSubAuthority6 As Long, ByVal nSubAuthority7 As Long, psid As LongPtr) As BOOL
Public Declare PtrSafe Function GetLengthSid Lib "advapi32" (ByVal psid As LongPtr) As Long
Public Declare PtrSafe Function EqualSid Lib "advapi32" (ByVal pSid1 As LongPtr, ByVal pSid2 As LongPtr) As BOOL
Public Declare PtrSafe Function EqualDomainSid Lib "advapi32" (ByVal pSid1 As LongPtr, ByVal pSid2 As LongPtr, pfEqual As BOOL) As BOOL
Public Declare PtrSafe Function EqualPrefixSid Lib "advapi32" (ByVal pSid1 As LongPtr, ByVal pSid2 As LongPtr) As BOOL
Public Declare PtrSafe Function FreeSid Lib "advapi32" (ByVal psid As LongPtr) As LongPtr
Public Declare PtrSafe Function CopySid Lib "advapi32" (ByVal nDestinationSidLength As Long, ByVal pDestinationSid As LongPtr, ByVal pSourceSid As LongPtr) As BOOL
Public Declare PtrSafe Function ConvertSidToStringSidA Lib "advapi32" (ByVal psid As LongPtr, StringSid As LongPtr) As BOOL
Public Declare PtrSafe Function ConvertSidToStringSidW Lib "advapi32" (ByVal psid As LongPtr, StringSid As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ConvertSidToStringSid Lib "advapi32" Alias "ConvertSidToStringSidW" (ByVal psid As LongPtr, StringSid As LongPtr) As BOOL
Public Declare PtrSafe Function ConvertStringSidToSidA Lib "advapi32" (ByVal StringSid As String, psid As LongPtr) As BOOL
Public Declare PtrSafe Function ConvertStringSidToSidW Lib "advapi32" (ByVal StringSid As LongPtr, psid As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ConvertStringSidToSid Lib "advapi32" Alias "ConvertStringSidToSidW" (ByVal StringSid As String, psid As LongPtr) As BOOL
Public Declare PtrSafe Function ConvertStringSecurityDescriptorToSecurityDescriptorA Lib "advapi32" (ByVal StringSecurityDescriptor As String, ByVal StringSDRevision As Long, SecurityDescriptor As SECURITY_DESCRIPTOR, SecurityDescriptorSize As Long) As BOOL
Public Declare PtrSafe Function ConvertStringSecurityDescriptorToSecurityDescriptorW Lib "advapi32" (ByVal StringSecurityDescriptor As LongPtr, ByVal StringSDRevision As Long, SecurityDescriptor As SECURITY_DESCRIPTOR, SecurityDescriptorSize As Long) As BOOL
Public DeclareWide PtrSafe Function ConvertStringSecurityDescriptorToSecurityDescriptor Lib "advapi32" Alias "ConvertStringSecurityDescriptorToSecurityDescriptorW" (ByVal StringSecurityDescriptor As String, ByVal StringSDRevision As Long, SecurityDescriptor As SECURITY_DESCRIPTOR, SecurityDescriptorSize As Long) As BOOL
Public Declare PtrSafe Function ConvertSecurityDescriptorToStringSecurityDescriptorA Lib "advapi32" (SecurityDescriptor As SECURITY_DESCRIPTOR, ByVal RequestedStringSDRevision As Long, ByVal SecurityInformation As SECURITY_INFORMATION, StringSecurityDescriptor As LongPtr, StringSecurityDescriptorLen As Long) As BOOL
Public Declare PtrSafe Function ConvertSecurityDescriptorToStringSecurityDescriptorW Lib "advapi32" (SecurityDescriptor As SECURITY_DESCRIPTOR, ByVal RequestedStringSDRevision As Long, ByVal SecurityInformation As SECURITY_INFORMATION, StringSecurityDescriptor As LongPtr, StringSecurityDescriptorLen As Long) As BOOL
Public DeclareWide PtrSafe Function ConvertSecurityDescriptorToStringSecurityDescriptor Lib "advapi32" Alias "ConvertSecurityDescriptorToStringSecurityDescriptorW" (SecurityDescriptor As SECURITY_DESCRIPTOR, ByVal RequestedStringSDRevision As Long, ByVal SecurityInformation As SECURITY_INFORMATION, StringSecurityDescriptor As LongPtr, StringSecurityDescriptorLen As Long) As BOOL
Public Declare PtrSafe Function CreateWellKnownSid Lib "advapi32" (ByVal WellKnownSidType As WELL_KNOWN_SID_TYPE, ByVal DomainSid As LongPtr, ByVal pSid As LongPtr, cbSid As Long) As BOOL
Public Declare PtrSafe Function GetSidLengthRequired Lib "advapi32" (ByVal nSubAuthorityCount As Byte) As Long
Public Declare PtrSafe Function GetSidIdentifierAuthority Lib "advapi32" (ByVal psid As LongPtr) As LongPtr 'SID_IDENTIFIER_AUTHORITY
Public Declare PtrSafe Function GetSidSubAuthority Lib "advapi32" (ByVal psid As LongPtr, ByVal nSubAuthority As Long) As LongPtr
Public Declare PtrSafe Function GetSidSubAuthorityCount Lib "advapi32" (ByVal psid As LongPtr) As LongPtr
Public Declare PtrSafe Function GetWindowsAccountDomainSid Lib "advapi32" (ByVal pSid As LongPtr, ByVal pDomainSid As LongPtr, cbDomainSid As Long) As BOOL
Public Declare PtrSafe Function ImpersonateAnonymousToken Lib "advapi32" (ByVal ThreadHandle As LongPtr) As BOOL
Public Declare PtrSafe Function IsTokenRestricted Lib "advapi32" (ByVal TokenHandle As LongPtr) As BOOL
Public Declare PtrSafe Function DeriveCapabilitySidsFromName Lib "kernelbase" (ByVal CapName As String, CapabilityGroupSids As LongPtr, CapabilityGroupSidCount As Long, CapabilitySids As LongPtr, CapabilitySidCount As Long) As BOOL

Public Declare PtrSafe Function PrivilegeCheck Lib "advapi32" (ByVal ClientToken As LongPtr, RequiredPrivileges As PRIVILEGE_SET, pfResult As BOOL) As BOOL
Public Declare PtrSafe Function LookupPrivilegeValueA Lib "advapi32" (ByVal lpSystemName As String, ByVal lpName As String, lpLuid As LUID) As Long
Public Declare PtrSafe Function LookupPrivilegeNameA Lib "advapi32" (ByVal lpSystemName As String, lpLuid As LUID, ByVal lpName As LongPtr, cbName As Long) As Long
Public Declare PtrSafe Function LookupPrivilegeValueW Lib "advapi32" (ByVal lpSystemName As LongPtr, ByVal lpName As LongPtr, lpLuid As LUID) As Long
Public Declare PtrSafe Function LookupPrivilegeNameW Lib "advapi32" (ByVal lpSystemName As LongPtr, lpLuid As LUID, ByVal lpName As LongPtr, cbName As Long) As Long
Public DeclareWide PtrSafe Function LookupPrivilegeValue Lib "advapi32" Alias "LookupPrivilegeValueW" (ByVal lpSystemName As String, ByVal lpName As String, lpLuid As LUID) As Long
Public DeclareWide PtrSafe Function LookupPrivilegeName Lib "advapi32" Alias "LookupPrivilegeNameW" (ByVal lpSystemName As String, lpLuid As LUID, ByVal lpName As LongPtr, cbName As Long) As Long
Public Declare PtrSafe Function LookupPrivilegeDisplayNameA Lib "advapi32" (ByVal lpSystemName As String, ByVal lpName As String, ByVal lpDisplayName As String, cchDisplayName As Long, lpLanguageId As Long) As BOOL
Public Declare PtrSafe Function LookupPrivilegeDisplayNameW Lib "advapi32" (ByVal lpSystemName As LongPtr, ByVal lpName As LongPtr, ByVal lpDisplayName As LongPtr, cchDisplayName As Long, lpLanguageId As Long) As BOOL
Public DeclareWide PtrSafe Function LookupPrivilegeDisplayName Lib "advapi32" Alias "LookupPrivilegeDisplayNameW" (ByVal lpSystemName As String, ByVal lpName As String, ByVal lpDisplayName As String, cchDisplayName As Long, lpLanguageId As Long) As BOOL
Public DeclareWide PtrSafe Function AddAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, pAceList As Any, ByVal nAceListLength As Long) As BOOL
Public Declare PtrSafe Function GetAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceIndex As Long, pAce As LongPtr) As BOOL
Public Declare PtrSafe Function DeleteAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceIndex As Long) As BOOL
Public Declare PtrSafe Function FindFirstFreeAce Lib "advapi32" (ByVal pAcl As LongPtr, pAce As LongPtr) As BOOL
Public Declare PtrSafe Function MapGenericMask Lib "advapi32" (AccessMask As LM_ACCESS_FLAGS, GenericMapping As GENERIC_MAPPING) As BOOL
Public Declare PtrSafe Function AccessCheck Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal ClientToken As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, GenericMapping As GENERIC_MAPPING, PrivilegeSet As PRIVILEGE_SET, PrivilegeSetLength As Long, GrantedAccess As LM_ACCESS_FLAGS, AccessStatus As BOOL) As BOOL
Public Declare PtrSafe Function AccessCheckAndAuditAlarmA Lib "advapi32" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ObjectTypeName As String, ByVal ObjectName As String, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal DesiredAccess As LM_ACCESS_FLAGS, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccess As LM_ACCESS_FLAGS, AccessStatus As BOOL, pfGenerateOnClose As BOOL) As BOOL
Public Declare PtrSafe Function AccessCheckAndAuditAlarmW Lib "advapi32" (ByVal SubsystemName As LongPtr, ByVal HandleId As LongPtr, ByVal ObjectTypeName As LongPtr, ByVal ObjectName As LongPtr, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal DesiredAccess As LM_ACCESS_FLAGS, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccess As LM_ACCESS_FLAGS, AccessStatus As BOOL, pfGenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function AccessCheckAndAuditAlarm Lib "advapi32" Alias "AccessCheckAndAuditAlarmW" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ObjectTypeName As String, ByVal ObjectName As String, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal DesiredAccess As LM_ACCESS_FLAGS, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccess As LM_ACCESS_FLAGS, AccessStatus As BOOL, pfGenerateOnClose As BOOL) As BOOL
Public Declare PtrSafe Function AccessCheckByType Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal ClientToken As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, PrivilegeSet As PRIVILEGE_SET, PrivilegeSetLength As Long, GrantedAccess As LM_ACCESS_FLAGS, AccessStatus As BOOL) As BOOL
Public Declare PtrSafe Function AccessCheckByTypeAndAuditAlarmA Lib "advapi32" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ObjectTypeName As String, ByVal ObjectName As String, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccess As LM_ACCESS_FLAGS, AccessStatus As BOOL, pfGenerateOnClose As BOOL) As BOOL
Public Declare PtrSafe Function AccessCheckByTypeAndAuditAlarmW Lib "advapi32" (ByVal SubsystemName As LongPtr, ByVal HandleId As LongPtr, ByVal ObjectTypeName As LongPtr, ByVal ObjectName As LongPtr, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccess As LM_ACCESS_FLAGS, AccessStatus As BOOL, pfGenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function AccessCheckByTypeAndAuditAlarm Lib "advapi32" Alias "AccessCheckByTypeAndAuditAlarmW" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ObjectTypeName As String, ByVal ObjectName As String, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccess As LM_ACCESS_FLAGS, AccessStatus As BOOL, pfGenerateOnClose As BOOL) As BOOL
Public Declare PtrSafe Function AccessCheckByTypeResultList Lib "advapi32" (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal ClientToken As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, PrivilegeSet As PRIVILEGE_SET, PrivilegeSetLength As Long, GrantedAccess As LM_ACCESS_FLAGS, AccessStatusList As Long) As BOOL
Public Declare PtrSafe Function AccessCheckByTypeResultListAndAuditAlarmByHandleA Lib "advapi32" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ClientToken As LongPtr, ByVal ObjectTypeName As String, ByVal ObjectName As String, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccessList As LM_ACCESS_FLAGS, AccessStatusList As Long, pfGenerateOnClose As BOOL) As BOOL
Public Declare PtrSafe Function AccessCheckByTypeResultListAndAuditAlarmA Lib "advapi32" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ObjectTypeName As String, ByVal ObjectName As String, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccessList As LM_ACCESS_FLAGS, AccessStatusList As Long, pfGenerateOnClose As BOOL) As BOOL
Public Declare PtrSafe Function AccessCheckByTypeResultListAndAuditAlarmByHandleW Lib "advapi32" (ByVal SubsystemName As LongPtr, ByVal HandleId As LongPtr, ByVal ClientToken As LongPtr, ByVal ObjectTypeName As LongPtr, ByVal ObjectName As LongPtr, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccessList As LM_ACCESS_FLAGS, AccessStatusList As Long, pfGenerateOnClose As BOOL) As BOOL
Public Declare PtrSafe Function AccessCheckByTypeResultListAndAuditAlarmW Lib "advapi32" (ByVal SubsystemName As LongPtr, ByVal HandleId As LongPtr, ByVal ObjectTypeName As LongPtr, ByVal ObjectName As LongPtr, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccessList As LM_ACCESS_FLAGS, AccessStatusList As Long, pfGenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function AccessCheckByTypeResultListAndAuditAlarmByHandle Lib "advapi32" Alias "AccessCheckByTypeResultListAndAuditAlarmByHandleW" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ClientToken As LongPtr, ByVal ObjectTypeName As String, ByVal ObjectName As String, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccessList As LM_ACCESS_FLAGS, AccessStatusList As Long, pfGenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function AccessCheckByTypeResultListAndAuditAlarm Lib "advapi32" Alias "AccessCheckByTypeResultListAndAuditAlarmW" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ObjectTypeName As String, ByVal ObjectName As String, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal PrincipalSelfSid As LongPtr, ByVal DesiredAccess As LM_ACCESS_FLAGS, ByVal AuditType As AUDIT_EVENT_TYPE, ByVal Flags As AuditAllowFlag, ObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, GenericMapping As GENERIC_MAPPING, ByVal ObjectCreation As BOOL, GrantedAccessList As LM_ACCESS_FLAGS, AccessStatusList As Long, pfGenerateOnClose As BOOL) As BOOL
Public Declare PtrSafe Function AddAccessAllowedAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AccessMask As Long, ByVal psid As LongPtr) As BOOL
Public Declare PtrSafe Function AddAccessDeniedAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AccessMask As Long, ByVal psid As LongPtr) As BOOL
Public Declare PtrSafe Function AddAccessAllowedAceEx Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal AccessMask As Long, ByVal psid As LongPtr) As BOOL
Public Declare PtrSafe Function AddAccessDeniedAceEx Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal AccessMask As Long, ByVal psid As LongPtr) As BOOL
Public Declare PtrSafe Function AddAccessAllowedObjectAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal AccessMask As Long, ObjectTypeGuid As UUID, InheritedObjectTypeGuid As UUID, ByVal psid As LongPtr) As BOOL
Public Declare PtrSafe Function AddAccessDeniedObjectAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal AccessMask As Long, ObjectTypeGuid As UUID, InheritedObjectTypeGuid As UUID, ByVal psid As LongPtr) As BOOL
' Public Declare PtrSafe Function AddAuditAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AccessMask As Long, ByVal psid As LongPtr, ByVal bAuditSuccess As BOOL, ByVal bAuditFailure As BOOL) As BOOL
' Public Declare PtrSafe Function AddAuditAceEx Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal AccessMask As Long, ByVal psid As LongPtr, ByVal bAuditSuccess As BOOL, ByVal bAuditFailure As BOOL) As BOOL
Public Declare PtrSafe Function AddAuditAccessObjectAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal AccessMask As Long, ObjectTypeGuid As UUID, InheritedObjectTypeGuid As UUID, ByVal psid As LongPtr, ByVal bAuditSuccess As BOOL, ByVal bAuditFailure As BOOL) As BOOL
Public Declare PtrSafe Function AddMandatoryAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal MandatoryPolicy As AceMandatoryPolicy, ByVal pLabelSid As LongPtr) As BOOL
Public Declare PtrSafe Function AddResourceAttributeAce Lib "kernel32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal AccessMask As Long, pAttributeInfo As CLAIM_SECURITY_ATTRIBUTES_INFORMATION, pReturnLength As Long) As BOOL
Public Declare PtrSafe Function AddScopedPolicyIDAce Lib "kernel32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal AccessMask As Long, ByVal psid As LongPtr) As BOOL
Public Declare PtrSafe Function AddConditionalAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, [TypeHint(AceTypes)] ByVal AceType As Byte, ByVal AccessMask As Long, ByVal pSid As LongPtr, ReturnLength As Long) As BOOL
Public Declare PtrSafe Function AddAuditAccessAce Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal dwAccessMask As Long, ByVal pSid As LongPtr, ByVal bAuditSuccess As BOOL, ByVal bAuditFailure As BOOL) As BOOL
Public Declare PtrSafe Function AddAuditAccessAceEx Lib "advapi32" (ByVal pAcl As LongPtr, ByVal dwAceRevision As AclRevision, ByVal AceFlags As ACE_FLAGS, ByVal dwAccessMask As Long, ByVal pSid As LongPtr, ByVal bAuditSuccess As BOOL, ByVal bAuditFailure As BOOL) As BOOL
Public Declare PtrSafe Function GetAppContainerAce Lib "kernel32" (ByVal pAcl As LongPtr, ByVal StartingAceIndex As Long, AppContainerAce As LongPtr, AppContainerAceIndex As Long) As BOOL
'ObjectCloseAuditAlarmA does not exist
Public Declare PtrSafe Function ObjectCloseAuditAlarmW Lib "advapi32" (ByVal SubsystemName As LongPtr, ByVal HandleId As LongPtr, ByVal GenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function ObjectCloseAuditAlarm Lib "advapi32" Alias "ObjectCloseAuditAlarmW" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal GenerateOnClose As BOOL) As BOOL
'ObjectDeleteAuditAlarmA does not exist
Public Declare PtrSafe Function ObjectDeleteAuditAlarmW Lib "advapi32" (ByVal SubsystemName As LongPtr, ByVal HandleId As LongPtr, ByVal GenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function ObjectDeleteAuditAlarm Lib "advapi32" Alias "ObjectDeleteAuditAlarmW" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal GenerateOnClose As BOOL) As BOOL
'ObjectOpenAuditAlarmA does not exist
Public DeclareWide PtrSafe Function ObjectOpenAuditAlarmW Lib "advapi32" (ByVal SubsystemName As LongPtr, ByVal HandleId As LongPtr, ByVal ObjectTypeName As LongPtr, ByVal ObjectName As LongPtr, pSecurityDescriptor As Any, ByVal ClientToken As LongPtr, ByVal DesiredAccess As Long, ByVal GrantedAccess As Long, Privileges As PRIVILEGE_SET, ByVal ObjectCreation As BOOL, ByVal AccessGranted As BOOL, GenerateOnClose As BOOL) As BOOL
Public DeclareWide PtrSafe Function ObjectOpenAuditAlarm Lib "advapi32" Alias "ObjectOpenAuditAlarmW" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ObjectTypeName As String, ByVal ObjectName As String, pSecurityDescriptor As Any, ByVal ClientToken As LongPtr, ByVal DesiredAccess As Long, ByVal GrantedAccess As Long, Privileges As PRIVILEGE_SET, ByVal ObjectCreation As BOOL, ByVal AccessGranted As BOOL, GenerateOnClose As BOOL) As BOOL
'ObjectPrivilegeAuditAlarmA does not exist
Public Declare PtrSafe Function ObjectPrivilegeAuditAlarmW Lib "advapi32" (ByVal SubsystemName As LongPtr, ByVal HandleId As LongPtr, ByVal ClientToken As LongPtr, ByVal DesiredAccess As Long, Privileges As PRIVILEGE_SET, ByVal ObjectCreation As BOOL, ByVal AccessGranted As BOOL) As BOOL
Public DeclareWide PtrSafe Function ObjectPrivilegeAuditAlarm Lib "advapi32" Alias "ObjectPrivilegeAuditAlarmW" (ByVal SubsystemName As String, ByVal HandleId As LongPtr, ByVal ClientToken As LongPtr, ByVal DesiredAccess As Long, Privileges As PRIVILEGE_SET, ByVal ObjectCreation As BOOL, ByVal AccessGranted As BOOL) As BOOL
'PrivilegedServiceAuditAlarmA does not exist
Public Declare PtrSafe Function PrivilegedServiceAuditAlarmW Lib "advapi32" (ByVal SubsystemName As LongPtr, ByVal ServiceName As LongPtr, ByVal ClientToken As LongPtr, Privileges As PRIVILEGE_SET, ByVal AccessGranted As BOOL) As BOOL
Public DeclareWide PtrSafe Function PrivilegedServiceAuditAlarm Lib "advapi32" Alias "PrivilegedServiceAuditAlarmW" (ByVal SubsystemName As String, ByVal ServiceName As String, ByVal ClientToken As LongPtr, Privileges As PRIVILEGE_SET, ByVal AccessGranted As BOOL) As BOOL





Public Declare PtrSafe Function AreAllAccessesGranted Lib "advapi32" (ByVal GrantedAccess As Long, ByVal DesiredAccess As Long) As BOOL
Public Declare PtrSafe Function AreAnyAccessesGranted Lib "advapi32" (ByVal GrantedAccess As Long, ByVal DesiredAccess As Long) As BOOL
Public Declare PtrSafe Sub QuerySecurityAccessMask Lib "advapi32" (ByVal SecurityInformation As SECURITY_INFORMATION, DesiredAccess As Long)
Public Declare PtrSafe Sub SetSecurityAccessMask Lib "advapi32" (ByVal SecurityInformation As SECURITY_INFORMATION, DesiredAccess As Long)

Public Declare PtrSafe Function CreatePrivateObjectSecurity Lib "advapi32" (ParentDescriptor As SECURITY_DESCRIPTOR, CreatorDescriptor As SECURITY_DESCRIPTOR, NewDescriptor As LongPtr, ByVal IsDirectoryObject As BOOL, ByVal Token As LongPtr, GenericMapping As GENERIC_MAPPING) As BOOL
Public Declare PtrSafe Function CreatePrivateObjectSecurityEx Lib "advapi32" (ParentDescriptor As SECURITY_DESCRIPTOR, CreatorDescriptor As SECURITY_DESCRIPTOR, NewDescriptor As LongPtr, ObjectType As UUID, ByVal IsContainerObject As BOOL, ByVal AutoInheritFlags As SEF_FLAGS, ByVal Token As LongPtr, GenericMapping As GENERIC_MAPPING) As BOOL
Public Declare PtrSafe Function CreatePrivateObjectSecurityWithMultipleInheritance Lib "advapi32" (ParentDescriptor As SECURITY_DESCRIPTOR, CreatorDescriptor As SECURITY_DESCRIPTOR, NewDescriptor As LongPtr, ObjectType As LongPtr, ByVal GuidCount As Long, ByVal IsContainerObject As BOOL, ByVal AutoInheritFlags As SEF_FLAGS, ByVal Token As LongPtr, GenericMapping As GENERIC_MAPPING) As BOOL
Public Declare PtrSafe Function DestroyPrivateObjectSecurity Lib "advapi32" (ObjectDescriptor As LongPtr) As BOOL
Public Declare PtrSafe Function GetPrivateObjectSecurity Lib "advapi32" (ObjectDescriptor As SECURITY_DESCRIPTOR, ByVal SecurityInformation As SECURITY_INFORMATION, ResultantDescriptor As SECURITY_DESCRIPTOR, ByVal DescriptorLength As Long, ReturnLength As Long) As BOOL
Public Declare PtrSafe Function SetPrivateObjectSecurity Lib "advapi32" (ByVal SecurityInformation As SECURITY_INFORMATION, ModificationDescriptor As SECURITY_DESCRIPTOR, ObjectSecurityDescriptor As LongPtr, GenericMapping As GENERIC_MAPPING, Optional ByVal Token As LongPtr) As BOOL
Public Declare PtrSafe Function SetPrivateObjectSecurityEx Lib "advapi32" (ByVal SecurityInformation As SECURITY_INFORMATION, ModificationDescriptor As SECURITY_DESCRIPTOR, ObjectSecurityDescriptor As LongPtr, ByVal AutoInheritFlags As SEF_FLAGS, GenericMapping As GENERIC_MAPPING, Optional ByVal Token As LongPtr) As BOOL
Public Declare PtrSafe Function ConvertToAutoInheritPrivateObjectSecurity Lib "advapi32" (ParentDescriptor As SECURITY_DESCRIPTOR, CurrentSecurityDescriptor As SECURITY_DESCRIPTOR, NewSecurityDescriptor As LongPtr, ObjectType As UUID, ByVal IsDirectoryObject As Byte, GenericMapping As GENERIC_MAPPING) As BOOL
'SetFileSecurityA does not exist
Public Declare PtrSafe Function SetFileSecurityW Lib "advapi32" (ByVal lpFileName As LongPtr, ByVal SecurityInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR) As BOOL
Public DeclareWide PtrSafe Function SetFileSecurity Lib "advapi32" Alias "SetFileSecurityW" (ByVal lpFileName As String, ByVal SecurityInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR) As BOOL
'GetFileSecurityA does not exist
Public Declare PtrSafe Function GetFileSecurityW Lib "advapi32" (ByVal lpFileName As LongPtr, ByVal SecurityInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal nLength As Long, lpnLengthNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function GetFileSecurity Lib "advapi32" Alias "GetFileSecurityW" (ByVal lpFileName As String, ByVal SecurityInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal nLength As Long, lpnLengthNeeded As Long) As BOOL
Public Declare PtrSafe Function SetCachedSigningLevel Lib "kernel32" (SourceFiles As LongPtr, ByVal SourceFileCount As Long, ByVal Flags As CachedSigningLevelFlags, Optional ByVal TargetFile As LongPtr) As BOOL
Public Declare PtrSafe Function GetCachedSigningLevel Lib "kernel32" (ByVal File As LongPtr, Flags As CachedSigningLevelFlags, SigningLevel As Long, Thumbprint As Any, Optional ThumbprintSize As Long, Optional ThumbprintAlgorithm As Long) As BOOL
Public Declare PtrSafe Function InitializeAcl Lib "advapi32" (ByVal pAcl As LongPtr, ByVal nAclLength As Long, ByVal dwAceRevision As AclRevision) As BOOL
Public Declare PtrSafe Function GetKernelObjectSecurity Lib "advapi32" (ByVal Handle As LongPtr, ByVal RequestedInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal nLength As Long, lpnLengthNeeded As Long) As BOOL
Public Declare PtrSafe Function SetKernelObjectSecurity Lib "advapi32" (ByVal Handle As LongPtr, ByVal SecurityInformation As SECURITY_INFORMATION, pSecurityDescriptor As SECURITY_DESCRIPTOR) As BOOL
Public Declare PtrSafe Function AllocateLocallyUniqueId Lib "advapi32" (pLUID As LUID) As BOOL
Public Declare PtrSafe Function GetAclInformation Lib "advapi32" (ByVal pAcl As LongPtr, pAclInformation As Any, ByVal nAclInformationLength As Long, ByVal dwAclInformationClass As ACL_INFORMATION_CLASS) As BOOL
Public Declare PtrSafe Function SetAclInformation Lib "advapi32" (ByVal pAcl As LongPtr, pAclInformation As Any, ByVal nAclInformationLength As Long, ByVal dwAclInformationClass As ACL_INFORMATION_CLASS) As BOOL
Public Declare PtrSafe Function IsValidAcl Lib "advapi32" (ByVal pAcl As LongPtr) As BOOL

Public Declare PtrSafe Function CveEventWrite Lib "advapi32" (ByVal CveId As String, Optional ByVal AdditionalDetails As String) As Long


Public Type LSA_UNICODE_STRING
    Length As Integer
    MaximumLength As Integer
    Buffer As LongPtr
End Type
Public Type LSA_STRING
    Length As Integer
    MaximumLength As Integer
    Buffer As String
End Type

Public Type LSA_OBJECT_ATTRIBUTES
    Length As Long
    RootDirectory As LongPtr
    ObjectName As LongPtr 'PLSA_UNICODE_STRING
    Attributes As Long
    SecurityDescriptor As LongPtr ' Points to type SECURITY_DESCRIPTOR
    SecurityQualityOfService As LongPtr ' Points to type SECURITY_QUALITY_OF_SERVICE
End Type

Public Type LSA_TRUST_INFORMATION
    Name As LSA_UNICODE_STRING
    Sid As LongPtr 'PSID
End Type

Public Type LSA_REFERENCED_DOMAIN_LIST
    Entries As Long
    Domains As LongPtr ' PLSA_TRUST_INFORMATION
End Type

Public Type LSA_TRANSLATED_SID2
    Use As SID_NAME_USE
    Sid As LongPtr 'PSID
    DomainIndex As Long
    Flags As Long
End Type

Public Type LSA_TRANSLATED_NAME
    Use As SID_NAME_USE
    Name As LSA_UNICODE_STRING
    DomainIndex As Long
End Type

Public Type POLICY_ACCOUNT_DOMAIN_INFO
    DomainName As LSA_UNICODE_STRING
    DomainSid As LongPtr 'PSID
End Type

Public Type POLICY_DNS_DOMAIN_INFO
    Name As LSA_UNICODE_STRING
    DnsDomainName As LSA_UNICODE_STRING
    DnsForestName As LSA_UNICODE_STRING
    DomainGuid As UUID
    Sid As LongPtr 'PSID
End Type

Public Enum LsaLookupPolicyObjAccessTypes
    LOOKUP_VIEW_LOCAL_INFORMATION = &H00000001
    LOOKUP_TRANSLATE_NAMES = &H00000800
End Enum

Public Enum LSA_LOOKUP_DOMAIN_INFO_CLASS
    AccountDomainInformation = 5
    DnsDomainInformation = 12
End Enum

Public Enum LSA_OPERATIONAL_MODE
    LSA_MODE_PASSWORD_PROTECTED = (&H00000001)
    LSA_MODE_INDIVIDUAL_ACCOUNTS = (&H00000002)
    LSA_MODE_MANDATORY_ACCESS = (&H00000004)
    LSA_MODE_LOG_FULL = (&H00000008)
End Enum

Public Enum SECURITY_LOGON_TYPE
    SLT_UndefinedLogonType = 0 ' This is used to specify an undefied logon type
    SLT_Interactive = 2 ' Interactively logged on (locally or remotely)
    SLT_Network  ' Accessing system via network
    SLT_Batch  ' Started via a batch queue
    SLT_Service   ' Service started by service controller
    SLT_Proxy  ' Proxy logon
    SLT_Unlock  ' Unlock workstation
    SLT_NetworkCleartext   ' Network logon with cleartext credentials
    SLT_NewCredentials   ' Clone caller, new default credentials
    ' The types below only exist in Windows XP and greater
    ' #if (_WIN32_WINNT >= 0x0501)
    SLT_RemoteInteractive  ' Remote, yet interactive. Terminal server
    SLT_CachedInteractive   ' Try cached credentials without hitting the net.
    '  The types below only exist in Windows Server 2003 and greater
    ' #endif
    ' #if (_WIN32_WINNT >= 0x0502)
    SLT_CachedRemoteInteractive  ' Same as RemoteInteractive, this is used internally for auditing purpose
    SLT_CachedUnlock   ' Cached Unlock workstation
    ' #endif
End Enum

Public Enum SE_ADT_PARAMETER_TYPE
    SeAdtParmTypeNone = 0 'Produces 1 parameter
    ' Received value:
    ' 
    '   None.
    ' 
    ' Results in:
    ' 
    '   a unicode string containing "-".
    ' 
    ' Note:  This is typically used to
    '        indicate that a parameter value
    '        was not available.
    ' 
    SeAdtParmTypeString = 1 'Produces 1 parameter.
    ' Received Value:
    ' 
    '   Unicode String (variable length)
    ' 
    ' Results in:
    ' 
    '   No transformation.  The string
    '   entered into the event record as
    '   received.
    ' 
    '  The Address value of the audit info
    '  should be a pointer to a UNICODE_STRING
    '  structure.
    SeAdtParmTypeFileSpec = 2 'Produces 1 parameter.
    ' Received value:
    ' 
    '   Unicode string containing a file or
    '   directory name.
    ' 
    ' Results in:
    ' 
    '   Unicode string with the prefix of the
    '   file's path replaced by a drive letter
    '   if possible.
    ' 
    SeAdtParmTypeUlong = 3 'Produces 1 parameter
    ' Received value:
    ' 
    '   Ulong
    ' 
    ' Results in:
    ' 
    '   Unicode string representation of
    '   unsigned integer value.
    SeAdtParmTypeSid = 4 'Produces 1 parameter.
    ' Received value:
    ' 
    '   SID (variable length)
    ' 
    ' Results in:
    ' 
    '   String representation of SID
    ' 
    SeAdtParmTypeLogonId = 5 'Produces 4 parameters.
    ' Received Value:
    ' 
    '   LUID (fixed length)
    ' 
    ' Results in:
    ' 
    '   param 1: Sid string
    '   param 2: Username string
    '   param 3: domain name string
    '   param 4: Logon ID (Luid) string
    SeAdtParmTypeNoLogonId = 6 'Produces 3 parameters.
    ' Received value:
    ' 
    '   None.
    ' 
    ' Results in:
    ' 
    '   param 1: "-"
    '   param 2: "-"
    '   param 3: "-"
    '   param 4: "-"
    ' 
    ' Note:
    ' 
    '   This type is used when a logon ID
    '   is needed, but one is not available
    '   to pass.  For example, if an
    '   impersonation logon ID is expected
    '   but the subject is not impersonating
    '   anyone.
    ' 
    SeAdtParmTypeAccessMask = 7 'Produces 1 parameter with formatting.
    ' Received value:
    ' 
    '   ACCESS_MASK followed by
    '   a Unicode string.  The unicode
    '   string contains the name of the
    '   type of object the access mask
    '   applies to.  The event's source
    '   further qualifies the object type.
    ' 
    ' Results in:
    ' 
    '   formatted unicode string built to
    '   take advantage of the specified
    '   source's parameter message file.
    ' 
    ' Note:
    ' 
    '   An access mask containing three
    '   access types for a Widget object
    '   type (defined by the Foozle source)
    '   might end up looking like:
    ' 
    '       %%1062\n\t\t%1066\n\t\t%%601
    ' 
    '   The %%numbers are signals to the
    '   event viewer to perform parameter
    '   substitution before display.
    ' 
    SeAdtParmTypePrivs = 8 'Produces 1 parameter with formatting.
    ' Received value:
    ' 
    ' Results in:
    ' 
    '   formatted unicode string similar to
    '   that for access types.  Each priv
    '   will be formatted to be displayed
    '   on its own line.  E.g.,
    ' 
    '       %%642\n\t\t%%651\n\t\t%%655
    ' 
    SeAdtParmTypeObjectTypes = 9 'Produces 10 parameters with formatting.
    ' Received value:
    ' 
    '  Produces a list a stringized GUIDS along
    '  with information similar to that for
    '  an access mask.
    SeAdtParmTypeHexUlong = 10 'Produces 1 parameter
    ' Received value:
    ' 
    '   Ulong
    ' 
    ' Results in:
    ' 
    '   Unicode string representation of
    '   unsigned integer value in hexadecimal.
    '  In W2k this value did not exist, it was ParmTypeLUID
    SeAdtParmTypePtr = 11 'Produces 1 parameter
    ' Received value:
    ' 
    '   pointer
    ' 
    ' Results in:
    ' 
    '   Unicode string representation of
    '   unsigned integer value in hexadecimal.
    ' 
    '  Everything below exists only in Windows XP and greater
    ' 
    SeAdtParmTypeTime = 12 'Produces 2 parameters
    ' Received value:
    ' 
    '   LARGE_INTEGER
    ' 
    ' Results in:
    ' 
    '  Unicode string representation of
    '  date and time.
    ' 
    SeAdtParmTypeGuid = 13 'Produces 1 parameter
    ' Received value:
    ' 
    '   GUID pointer
    ' 
    ' Results in:
    ' 
    '  Unicode string representation of GUID
    '  {xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx}
    ' 
    ' 
    '  Everything below exists only in Windows Server 2003 and Greater
    ' 
    SeAdtParmTypeLuid = 14 '
    ' Produces 1 parameter
    ' Received value:
    ' 
    '  LUID
    ' 
    ' Results in:
    ' 
    '  Hex LUID
    ' 
    SeAdtParmTypeHexInt64 = 15 'Produces 1 parameter
    ' Received value:
    ' 
    '   64 bit integer
    ' 
    ' Results in:
    ' 
    '   Unicode string representation of
    '   unsigned integer value in hexadecimal.
    SeAdtParmTypeStringList = 16 'Produces 1 parameter
    ' Received value:
    ' 
    '  ptr to LSAP_ADT_STRING_LIST
    ' 
    ' Results in:
    ' 
    '  Unicode string representation of
    '  concatenation of the strings in the list
    SeAdtParmTypeSidList = 17 'Produces 1 parameter
    ' Received value:
    ' 
    '  ptr to LSAP_ADT_SID_LIST
    ' 
    ' Results in:
    ' 
    '  Unicode string representation of
    '  concatenation of the SIDs in the list
    SeAdtParmTypeDuration = 18 'Produces 1 parameters
    ' Received value:
    ' 
    '   LARGE_INTEGER
    ' 
    ' Results in:
    ' 
    '  Unicode string representation of
    '  a duration.
    SeAdtParmTypeUserAccountControl = 19 'Produces 3 parameters
    ' Received value:
    ' 
    '  old and new UserAccountControl values
    ' 
    ' Results in:
    ' 
    '  Unicode string representations of
    '  the flags in UserAccountControl.
    '  1 - old value in hex
    '  2 - new value in hex
    '  3 - difference as strings
    SeAdtParmTypeNoUac = 20 'Produces 3 parameters
    ' Received value:
    ' 
    '  none
    ' 
    ' Results in:
    ' 
    '  Three dashes ('-') as unicode strings.
    SeAdtParmTypeMessage = 21 'Produces 1 Parameter
    ' Received value:
    ' 
    '   ULONG (MessageNo from msobjs.mc)
    ' 
    ' Results in:
    ' 
    '  Unicode string representation of
    '  %%MessageNo which the event viewer
    '  will replace with the message string
    '  from msobjs.mc
    SeAdtParmTypeDateTime = 22 'Produces 1 Parameter
    ' Received value:
    ' 
    '   LARGE_INTEGER
    ' 
    ' Results in:
    ' 
    '  Unicode string representation of
    '  date and time (in _one_ string).
    SeAdtParmTypeSockAddr = 23 ' Produces 2 parameters
    ' 
    '  Received value:
    ' 
    '  pointer to SOCKADDR_IN/SOCKADDR_IN6
    '  structure
    ' 
    '  Results in:
    ' 
    '  param 1: IP address string
    '  param 2: Port number string
    ' 
    ' 
    '  Everything below this exists only in Windows Server 2008 and greater
    ' 
    SeAdtParmTypeSD = 24 ' Produces 1 parameters
    ' 
    '  Received value:
    ' 
    '  pointer to SECURITY_DESCRIPTOR
    '  structure. This HAS to appear in pairs.
    '  The first parameter will represent the
    '  old SD and the second parameter will
    '  represent the New SD
    ' 
    '  Results in:
    ' 
    '  SDDL string representation of SD
    ' 
    SeAdtParmTypeLogonHours = 25 ' Produces 1 parameters
    ' 
    '  Received value:
    ' 
    '  pointer to LOGON_HOURS
    '  structure
    ' 
    '  Results in:
    ' 
    '  String representation of allowed logon hours
    ' 
    SeAdtParmTypeLogonIdNoSid = 26 'Produces 3 parameters.
    ' Received Value:
    ' 
    '   LUID (fixed length)
    ' 
    ' Results in:
    ' 
    '   param 1: Username string
    '   param 2: domain name string
    '   param 3: Logon ID (Luid) string
    SeAdtParmTypeUlongNoConv = 27 ' Produces 1 parameter.
    '  Received Value:
    '  Ulong
    ' 
    ' Results in:
    '  Not converted to string
    ' 
    SeAdtParmTypeSockAddrNoPort = 28 ' Produces 1 parameter
    ' 
    '  Received value:
    ' 
    '  pointer to SOCKADDR_IN/SOCKADDR_IN6
    '  structure
    ' 
    '  Results in:
    ' 
    '  param 1: IPv4/IPv6 address string
    ' 
    ' 
    '  Everything below this exists only in Windows Server 2008 and greater
    ' 
    SeAdtParmTypeAccessReason = 29 ' Produces 1 parameters
    ' 
    '  Received value:
    ' 
    '  pointer to SE_ADT_ACCESS_REASON structure
    ' 
    '  Results in:
    ' 
    '  String representation of the access reason.
    ' 
    ' 
    '  Everything below this exists only in Windows Server 2012 and greater
    ' 
    SeAdtParmTypeStagingReason = 30 ' Produces 1 parameters
    ' 
    '  Received value:
    ' 
    '  pointer to SE_ADT_ACCESS_REASON structure
    ' 
    '  Results in:
    ' 
    '  String representation of Staging policy's
    '  access reason.
    ' 
    SeAdtParmTypeResourceAttribute = 31 ' Produces 1 parameters
    ' 
    '  Received value:
    ' 
    '  pointer to SECURITY_DESCRIPTOR
    '  structure
    ' 
    '  Results in:
    ' 
    '  SDDL string representation of the
    '  Resource Attribute ACEs in the SD
    ' 
    SeAdtParmTypeClaims = 32 ' Produces 1 parameters
    ' 
    '  Received value:
    ' 
    '  pointer to the structure -
    '  CLAIM_SECURITY_ATTRIBUTES_INFORMATION
    '  structure
    ' 
    '  Results in:
    ' 
    '  Claims information as attributes, value
    '  pairs
    ' 
    SeAdtParmTypeLogonIdAsSid = 33 ' Produces 4 parameters.
    '  Received Value:
    ' 
    '   SID  (variable length)
    ' 
    ' Results in:
    ' 
    '   param 1: Sid string (based on SID and not derived from the LUID)
    '   param 2: -
    '   param 3: -
    '   param 4: -
    SeAdtParmTypeMultiSzString = 34 'Produces 1 parameter
    ' Received value:
    ' 
    '  PZZWSTR string
    ' 
    ' Results in:
    ' 
    '  Unicode string with each null replaced with /r/n
    SeAdtParmTypeLogonIdEx = 35 'Produces 4 parameters.
    ' Received Value:
    ' 
    '   LUID (fixed length)
    ' 
    ' Results in:
    ' 
    '   param 1: Sid string
    '   param 2: Username string
    '   param 3: domain name string
    '   param 4: Logon ID (Luid) string
End Enum

Public Enum LsaAdtObjectTypeFlags
    SE_ADT_OBJECT_ONLY = &h1
End Enum

Public Type SE_ADT_OBJECT_TYPE
    ObjectType As UUID
    /* [ TypeHint(LsaAdtObjectTypeFlags) ] */ Flags As Integer
    '#define SE_ADT_OBJECT_ONLY 0x1
    Level As Integer
    AccessMask As Long 'ACCESS_MASK
End Type

Public Type SE_ADT_PARAMETER_ARRAY_ENTRY
    Type As SE_ADT_PARAMETER_TYPE
    Length As Long
    Data(0 To 1) As LongPtr
    Address As LongPtr
End Type

Public Type SE_ADT_ACCESS_REASON
    AccessMask As Long 'ACCESS_MASK
    AccessReasons(0 To 31) As Long
    ObjectTypeIndex As Long
    AccessGranted As Long
    SecurityDescriptor As LongPtr
End Type

Public Type SE_ADT_CLAIMS
    Length As Long
    Claims As LongPtr ' PCLAIMS_BLOB one claim blob will be stored here in self-relative way
End Type

Public Const SE_MAX_AUDIT_PARAMETERS  = 32
Public Const SE_MAX_GENERIC_AUDIT_PARAMETERS  = 28

Public Type SE_ADT_PARAMETER_ARRAY
    CategoryId As Long
    AuditId As Long
    ParameterCount As Long
    Length As Long
    FlatSubCategoryId As Integer
    Type As Integer
    Flags As SeAdtParamFlags
    Parameters(0 To (SE_MAX_AUDIT_PARAMETERS - 1)) As SE_ADT_PARAMETER_ARRAY_ENTRY
End Type
Public Type SE_ADT_PARAMETER_ARRAY_EX
    CategoryId As Long
    AuditId As Long
    Version As Long
    ParameterCount As Long
    Length As Long
    FlatSubCategoryId As Integer
    Type As Integer
    Flags As SeAdtParamFlags
    Parameters(0 To (SE_MAX_AUDIT_PARAMETERS - 1)) As SE_ADT_PARAMETER_ARRAY_ENTRY
End Type

Public Enum SeAdtParamFlags
    SE_ADT_PARAMETERS_SELF_RELATIVE = &H00000001
    SE_ADT_PARAMETERS_SEND_TO_LSA = &H00000002
    SE_ADT_PARAMETER_EXTENSIBLE_AUDIT = &H00000004
    SE_ADT_PARAMETER_GENERIC_AUDIT = &H00000008
    SE_ADT_PARAMETER_WRITE_SYNCHRONOUS = &H00000010
End Enum

Public Type LSA_ADT_STRING_LIST_ENTRY
    Flags As Long
    String As UNICODE_STRING
End Type
Public Type LSA_ADT_STRING_LIST
    cStrings As Long
    Strings As LongPtr 'PLSA_ADT_STRING_LIST_ENTRY
End Type

Public Type LSA_ADT_SID_LIST_ENTRY
    Flags As Long
    Sid As LongPtr 'PSID
End Type
Public Type LSA_ADT_SID_LIST
    cSids As Long
    Sids As LongPtr 'PLSA_ADT_SID_LIST_ENTRY
End Type

Public Const LSA_ADT_SECURITY_SOURCE_NAME  = "Microsoft-Windows-Security-Auditing"
'  The legacy source name
Public Const LSA_ADT_LEGACY_SECURITY_SOURCE_NAME  = "Security"
'  The count will begin at SE_ADT_POLICY_AUDIT_EVENT_TYPE_EX_BEGIN. This
'  allows distinguishing the former categories (represented by
'  POLICY_AUDIT_EVENT_TYPE) with the new categories/sub-categories
'  audit events information
Public Const SE_ADT_POLICY_AUDIT_EVENT_TYPE_EX_BEGIN  = 100

Public Enum SecurityCapabilityConstants
    SECURITY_CAPABILITY_INTERNET_CLIENT = (&H00000001)
    SECURITY_CAPABILITY_INTERNET_CLIENT_SERVER = (&H00000002)
    SECURITY_CAPABILITY_PRIVATE_NETWORK_CLIENT_SERVER = (&H00000003)
    SECURITY_CAPABILITY_PICTURES_LIBRARY = (&H00000004)
    SECURITY_CAPABILITY_VIDEOS_LIBRARY = (&H00000005)
    SECURITY_CAPABILITY_MUSIC_LIBRARY = (&H00000006)
    SECURITY_CAPABILITY_DOCUMENTS_LIBRARY = (&H00000007)
    SECURITY_CAPABILITY_ENTERPRISE_AUTHENTICATION = (&H00000008)
    SECURITY_CAPABILITY_SHARED_USER_CERTIFICATES = (&H00000009)
    SECURITY_CAPABILITY_REMOVABLE_STORAGE = (&H0000000A)
    SECURITY_CAPABILITY_APPOINTMENTS = (&H0000000B)
    SECURITY_CAPABILITY_CONTACTS = (&H0000000C)
    SECURITY_CAPABILITY_INTERNET_EXPLORER = (&H00001000)
End Enum

Public Enum SecurityMandatoryLabelAuthority
    SECURITY_MANDATORY_UNTRUSTED_RID = (&H00000000)
    SECURITY_MANDATORY_LOW_RID = (&H00001000)
    SECURITY_MANDATORY_MEDIUM_RID = (&H00002000)
    SECURITY_MANDATORY_MEDIUM_PLUS_RID = (SECURITY_MANDATORY_MEDIUM_RID + &H100)
    SECURITY_MANDATORY_HIGH_RID = (&H00003000)
    SECURITY_MANDATORY_SYSTEM_RID = (&H00004000)
    SECURITY_MANDATORY_PROTECTED_PROCESS_RID = (&H00005000)
    SECURITY_MANDATORY_MAXIMUM_USER_RID = SECURITY_MANDATORY_SYSTEM_RID
End Enum

Public Enum SecurityAuthenticationAuthority
    SECURITY_AUTHENTICATION_AUTHORITY_RID_COUNT = (1)
    SECURITY_AUTHENTICATION_AUTHORITY_ASSERTED_RID = (&H00000001)
    SECURITY_AUTHENTICATION_SERVICE_ASSERTED_RID = (&H00000002)
    SECURITY_AUTHENTICATION_FRESH_KEY_AUTH_RID = (&H00000003)
    SECURITY_AUTHENTICATION_KEY_TRUST_RID = (&H00000004)
    SECURITY_AUTHENTICATION_KEY_PROPERTY_MFA_RID = (&H00000005)
    SECURITY_AUTHENTICATION_KEY_PROPERTY_ATTESTATION_RID = (&H00000006)
End Enum


Public Type LSA_TRANSLATED_SID
    Use As SID_NAME_USE
    RelativeId As Long
    DomainIndex As Long
End Type

Public Enum SCESTATUS
    SCESTATUS_SUCCESS = 0
    SCESTATUS_INVALID_PARAMETER = 1
    SCESTATUS_RECORD_NOT_FOUND = 2
    SCESTATUS_INVALID_DATA = 3
    SCESTATUS_OBJECT_EXIST = 4
    SCESTATUS_BUFFER_TOO_SMALL = 5
    SCESTATUS_PROFILE_NOT_FOUND = 6
    SCESTATUS_BAD_FORMAT = 7
    SCESTATUS_NOT_ENOUGH_RESOURCE = 8
    SCESTATUS_ACCESS_DENIED = 9
    SCESTATUS_CANT_DELETE = 10
    SCESTATUS_PREFIX_OVERFLOW = 11
    SCESTATUS_OTHER_ERROR = 12
    SCESTATUS_ALREADY_RUNNING = 13
    SCESTATUS_SERVICE_NOT_SUPPORT = 14
    SCESTATUS_MOD_NOT_FOUND = 15
    SCESTATUS_EXCEPTION_IN_SERVER = 16
    SCESTATUS_NO_TEMPLATE_GIVEN = 17
    SCESTATUS_NO_MAPPING = 18
    SCESTATUS_TRUST_FAIL = 19
End Enum

Public Enum KERB_LOGON_SUBMIT_TYPE
    KerbInteractiveLogon = 2
    KerbSmartCardLogon = 6
    KerbWorkstationUnlockLogon = 7
    KerbSmartCardUnlockLogon = 8
    KerbProxyLogon = 9
    KerbTicketLogon = 10
    KerbTicketUnlockLogon = 11
    KerbS4ULogon = 12
    KerbCertificateLogon = 13
    KerbCertificateS4ULogon = 14
    KerbCertificateUnlockLogon = 15
    KerbNoElevationLogon = 83
    KerbLuidLogon = 84
End Enum
Public Type KERB_INTERACTIVE_LOGON
    MessageType As KERB_LOGON_SUBMIT_TYPE
    LogonDomainName As UNICODE_STRING
    UserName As UNICODE_STRING
    Password As UNICODE_STRING
End Type
Public Type KERB_INTERACTIVE_UNLOCK_LOGON
    Logon As KERB_INTERACTIVE_LOGON
    LogonId As LUID
End Type
Public Type KERB_SMART_CARD_LOGON
    MessageType As KERB_LOGON_SUBMIT_TYPE
    Pin As UNICODE_STRING
    CspDataLength As Long
    CspData As LongPtr 'PUCHAR
End Type
Public Type KERB_SMART_CARD_UNLOCK_LOGON
    Logon As KERB_SMART_CARD_LOGON
    LogonId As LUID
End Type

Public Enum KerbCertLogonFlags
    KERB_CERTIFICATE_LOGON_FLAG_CHECK_DUPLICATES = &H1
    KERB_CERTIFICATE_LOGON_FLAG_USE_CERTIFICATE_INFO = &H2
End Enum
Public Type KERB_CERTIFICATE_LOGON
    MessageType As KERB_LOGON_SUBMIT_TYPE ' KerbCertificateLogon
    DomainName As UNICODE_STRING ' OPTIONAL, if supplied, used to locate the account forest
    UserName As UNICODE_STRING ' OPTIONAL, if supplied, used to locate the account
    Pin As UNICODE_STRING
    Flags As KerbCertLogonFlags ' additional flags
    CspDataLength As Long
    CspData As LongPtr 'PUCHAR; contains the smartcard CSP data
End Type
Public Type KERB_CERTIFICATE_UNLOCK_LOGON
    Logon As KERB_CERTIFICATE_LOGON
    LogonId As LUID
End Type

Public Enum KerbCertS4ULogonFlags
    KERB_CERTIFICATE_S4U_LOGON_FLAG_CHECK_DUPLICATES = &H1
    KERB_CERTIFICATE_S4U_LOGON_FLAG_CHECK_LOGONHOURS = &H2
    KERB_CERTIFICATE_S4U_LOGON_FLAG_FAIL_IF_NT_AUTH_POLICY_REQUIRED = &H4
    KERB_CERTIFICATE_S4U_LOGON_FLAG_IDENTIFY = &H8  ' request for identify token, must have the same value as KERB_S4U_LOGON_FLAG_IDENTIFY
End Enum
Public Type KERB_CERTIFICATE_S4U_LOGON
    MessageType As KERB_LOGON_SUBMIT_TYPE
    Flags As KerbCertS4ULogonFlags
    UserPrincipalName As UNICODE_STRING
    ' OPTIONAL, certificate mapping hints: username or username@domain
    DomainName As UNICODE_STRING ' used to locate the forest
    ' OPTIONAL, certificate mapping hints: if missing, using the local machine's domain
    CertificateLength As Long ' for the client certificate 
    Certificate As LongPtr 'PUCHAR; for the client certificate, BER encoded
End Type

Public Enum KerbTicketLogonFlags
    KERB_LOGON_FLAG_ALLOW_EXPIRED_TICKET = &H1
    KERB_LOGON_FLAG_REDIRECTED = &H2
End Enum
Public Type KERB_TICKET_LOGON
    MessageType As KERB_LOGON_SUBMIT_TYPE
    Flags As KerbTicketLogonFlags
    ServiceTicketLength As Long
    TicketGrantingTicketLength As Long
    ServiceTicket As LongPtr ' REQUIRED: Service ticket "host"
    TicketGrantingTicket As LongPtr ' OPTIONAL: User's encdoded in a KERB_CRED message, encrypted with session key from service ticket
End Type
Public Type KERB_TICKET_UNLOCK_LOGON
    Logon As KERB_TICKET_LOGON
    LogonId As LUID
End Type


Public Enum KERB_S4U_LOGON_FLAGS
    KERB_S4U_LOGON_FLAG_CHECK_LOGONHOURS = &H2
    KERB_S4U_LOGON_FLAG_IDENTIFY = &H8  ' request for identify token
End Enum
Public Type KERB_S4U_LOGON
    MessageType As KERB_LOGON_SUBMIT_TYPE
    Flags As KERB_S4U_LOGON_FLAGS
    ClientUpn As UNICODE_STRING
    ClientRealm As UNICODE_STRING
End Type

Public Const KERBEROS_VERSION  = 5
Public Const KERBEROS_REVISION  = 6

Public Enum KerbETypeValues
    KERB_ETYPE_NULL = 0
    KERB_ETYPE_DES_CBC_CRC = 1
    KERB_ETYPE_DES_CBC_MD4 = 2
    KERB_ETYPE_DES_CBC_MD5 = 3
    KERB_ETYPE_AES128_CTS_HMAC_SHA1_96 = 17
    KERB_ETYPE_AES256_CTS_HMAC_SHA1_96 = 18
    KERB_ETYPE_RC4_MD4 = -128  ' FFFFFF80
    KERB_ETYPE_RC4_PLAIN2 = -129
    KERB_ETYPE_RC4_LM = -130
    KERB_ETYPE_RC4_SHA = -131
    KERB_ETYPE_DES_PLAIN = -132
    KERB_ETYPE_RC4_HMAC_OLD = -133  ' FFFFFF7B
    KERB_ETYPE_RC4_PLAIN_OLD = -134
    KERB_ETYPE_RC4_HMAC_OLD_EXP = -135
    KERB_ETYPE_RC4_PLAIN_OLD_EXP = -136
    KERB_ETYPE_RC4_PLAIN = -140
    KERB_ETYPE_RC4_PLAIN_EXP = -141
'  used internally by userapi.cxx
    KERB_ETYPE_AES128_CTS_HMAC_SHA1_96_PLAIN = -148
    KERB_ETYPE_AES256_CTS_HMAC_SHA1_96_PLAIN = -149
'  Pkinit encryption types
    KERB_ETYPE_DSA_SHA1_CMS = 9
    KERB_ETYPE_RSA_MD5_CMS = 10
    KERB_ETYPE_RSA_SHA1_CMS = 11
    KERB_ETYPE_RC2_CBC_ENV = 12
    KERB_ETYPE_RSA_ENV = 13
    KERB_ETYPE_RSA_ES_OEAP_ENV = 14
    KERB_ETYPE_DES_EDE3_CBC_ENV = 15
'  Deprecated
    KERB_ETYPE_DSA_SIGN = 8
    KERB_ETYPE_RSA_PRIV = 9
    KERB_ETYPE_RSA_PUB = 10
    KERB_ETYPE_RSA_PUB_MD5 = 11
    KERB_ETYPE_RSA_PUB_SHA1 = 12
    KERB_ETYPE_PKCS7_PUB = 13
' #if(_WIN32_WINNT >= 0x0502)
'  Unsupported but defined types
    KERB_ETYPE_DES3_CBC_MD5 = 5
    KERB_ETYPE_DES3_CBC_SHA1 = 7
    KERB_ETYPE_DES3_CBC_SHA1_KD = 16
' #endif
'  In use types
    KERB_ETYPE_DES_CBC_MD5_NT = 20
    KERB_ETYPE_RC4_HMAC_NT = 23
    KERB_ETYPE_RC4_HMAC_NT_EXP = 24
End Enum
Public Enum KerbAlgChecksums
    KERB_CHECKSUM_MD5 = 7
    KERB_CHECKSUM_MD5_DES = 8
    KERB_CHECKSUM_SHA1_NEW = 14  ' defined in RFC3961
    KERB_CHECKSUM_HMAC_SHA1_96_AES128 = 15
    KERB_CHECKSUM_HMAC_SHA1_96_AES256 = 16
    KERB_CHECKSUM_LM = -130
    KERB_CHECKSUM_SHA1 = -131
    KERB_CHECKSUM_REAL_CRC32 = -132
    KERB_CHECKSUM_DES_MAC = -133
    KERB_CHECKSUM_DES_MAC_MD5 = -134
    KERB_CHECKSUM_MD25 = -135
    KERB_CHECKSUM_RC4_MD5 = -136
    KERB_CHECKSUM_MD5_HMAC = -137  ' used by netlogon
    KERB_CHECKSUM_HMAC_MD5 = -138  ' used by Kerberos
    KERB_CHECKSUM_SHA256 = -139
    KERB_CHECKSUM_SHA384 = -140
    KERB_CHECKSUM_SHA512 = -141
'  used internally by userapi.cxx
    KERB_CHECKSUM_HMAC_SHA1_96_AES128_Ki = -150
    KERB_CHECKSUM_HMAC_SHA1_96_AES256_Ki = -151
End Enum
Public Enum KerbAuthReqFlags
    AUTH_REQ_ALLOW_FORWARDABLE = &H00000001
    AUTH_REQ_ALLOW_PROXIABLE = &H00000002
    AUTH_REQ_ALLOW_POSTDATE = &H00000004
    AUTH_REQ_ALLOW_RENEWABLE = &H00000008
    AUTH_REQ_ALLOW_NOADDRESS = &H00000010
    AUTH_REQ_ALLOW_ENC_TKT_IN_SKEY = &H00000020
    AUTH_REQ_ALLOW_VALIDATE = &H00000040
    AUTH_REQ_VALIDATE_CLIENT = &H00000080
    AUTH_REQ_OK_AS_DELEGATE = &H00000100
    AUTH_REQ_PREAUTH_REQUIRED = &H00000200
    AUTH_REQ_TRANSITIVE_TRUST = &H00000400
    AUTH_REQ_ALLOW_S4U_DELEGATE = &H00000800
    AUTH_REQ_PER_USER_FLAGS = (AUTH_REQ_ALLOW_FORWARDABLE Or AUTH_REQ_ALLOW_PROXIABLE Or AUTH_REQ_ALLOW_POSTDATE Or AUTH_REQ_ALLOW_RENEWABLE Or AUTH_REQ_ALLOW_VALIDATE)
End Enum
Public Enum KerbTicketFlags
    KERB_TICKET_FLAGS_reserved = &H80000000
    KERB_TICKET_FLAGS_forwardable = &H40000000
    KERB_TICKET_FLAGS_forwarded = &H20000000
    KERB_TICKET_FLAGS_proxiable = &H10000000
    KERB_TICKET_FLAGS_proxy = &H08000000
    KERB_TICKET_FLAGS_may_postdate = &H04000000
    KERB_TICKET_FLAGS_postdated = &H02000000
    KERB_TICKET_FLAGS_invalid = &H01000000
    KERB_TICKET_FLAGS_renewable = &H00800000
    KERB_TICKET_FLAGS_initial = &H00400000
    KERB_TICKET_FLAGS_pre_authent = &H00200000
    KERB_TICKET_FLAGS_hw_authent = &H00100000
    KERB_TICKET_FLAGS_ok_as_delegate = &H00040000
    KERB_TICKET_FLAGS_name_canonicalize = &H00010000
    KERB_TICKET_FLAGS_cname_in_pa_data = &H00040000
    KERB_TICKET_FLAGS_enc_pa_rep = &H00010000
    KERB_TICKET_FLAGS_reserved1 = &H00000001
End Enum
Public Enum KerbNameTypes
    KRB_NT_UNKNOWN = 0  ' Name type not known
    KRB_NT_PRINCIPAL = 1  ' Just the name of the principal as in DCE, or for users
    KRB_NT_PRINCIPAL_AND_ID = -131  ' Name of the principal and its SID.
    KRB_NT_SRV_INST = 2  ' Service and other unique instance (krbtgt)
    KRB_NT_SRV_INST_AND_ID = -132  ' SPN and SID
    KRB_NT_SRV_HST = 3  ' Service with host name as instance (telnet, rcommands)
    KRB_NT_SRV_XHST = 4  ' Service with host as remaining components
    KRB_NT_UID = 5  ' Unique ID
    KRB_NT_ENTERPRISE_PRINCIPAL = 10  ' UPN **ONLY**
    KRB_NT_WELLKNOWN = 11  ' Well-known principal names
    KRB_NT_ENT_PRINCIPAL_AND_ID = -130  ' UPN and SID
'  MS extensions, negative according to the RFC
    KRB_NT_MS_PRINCIPAL = -128  ' NT4 style name
    KRB_NT_MS_PRINCIPAL_AND_ID = -129  ' nt4 style name with sid
    KRB_NT_MS_BRANCH_ID = -133  ' Branch ID
' #if (_WIN32_WINNT >= 0x0600)
    KRB_NT_X500_PRINCIPAL = 6  ' Encoded X.500 Distingished name [RFC 2253]
End Enum


Public Const KRB_WELLKNOWN_STRING  = "WELLKNOWN"
Public Const KRB_ANONYMOUS_STRING  = "ANONYMOUS"
Public Const MICROSOFT_KERBEROS_NAME_A  = "Kerberos"
Public Const MICROSOFT_KERBEROS_NAME_W  = "Kerberos"
Public Const MICROSOFT_KERBEROS_NAME  = "Kerberos"

Public Enum KerbEncryptMsgFlags
    KERB_WRAP_NO_ENCRYPT = &H1
End Enum

Public Enum MSV1_0_LOGON_SUBMIT_TYPE
    MsV1_0InteractiveLogon = 2
    MsV1_0Lm20Logon
    MsV1_0NetworkLogon
    MsV1_0SubAuthLogon
    MsV1_0WorkstationUnlockLogon = 7
    '  defined in Windows Server 2008 and up
    MsV1_0S4ULogon = 12
    MsV1_0VirtualLogon = 82
    '  defined in Windows 8 and up
    MsV1_0NoElevationLogon = 83
    '  defined in Windows 8.1 and up
    MsV1_0LuidLogon = 84
End Enum
Public Enum MSV1_0_PROFILE_BUFFER_TYPE
    MsV1_0InteractiveProfile = 2
    MsV1_0Lm20LogonProfile
    MsV1_0SmartCardProfile
End Enum
Public Type MSV1_0_INTERACTIVE_LOGON
    MessageType As MSV1_0_LOGON_SUBMIT_TYPE
    LogonDomainName As UNICODE_STRING
    UserName As UNICODE_STRING
    Password As UNICODE_STRING
End Type
Public Type MSV1_0_INTERACTIVE_PROFILE
    MessageType As MSV1_0_PROFILE_BUFFER_TYPE
    LogonCount As Integer
    BadPasswordCount As Integer
    LogonTime As LARGE_INTEGER
    LogoffTime As LARGE_INTEGER
    KickOffTime As LARGE_INTEGER
    PasswordLastSet As LARGE_INTEGER
    PasswordCanChange As LARGE_INTEGER
    PasswordMustChange As LARGE_INTEGER
    LogonScript As UNICODE_STRING
    HomeDirectory As UNICODE_STRING
    FullName As UNICODE_STRING
    ProfilePath As UNICODE_STRING
    HomeDirectoryDrive As UNICODE_STRING
    LogonServer As UNICODE_STRING
    UserFlags As Long
End Type

Public Const MSV1_0_CHALLENGE_LENGTH  = 8
Public Const MSV1_0_USER_SESSION_KEY_LENGTH  = 16
Public Const MSV1_0_LANMAN_SESSION_KEY_LENGTH  = 8

Public Enum MSV1ParameterControlFlags
    MSV1_0_CLEARTEXT_PASSWORD_ALLOWED = &H02
    MSV1_0_UPDATE_LOGON_STATISTICS = &H04
    MSV1_0_RETURN_USER_PARAMETERS = &H08
    MSV1_0_DONT_TRY_GUEST_ACCOUNT = &H10
    MSV1_0_ALLOW_SERVER_TRUST_ACCOUNT = &H20
    MSV1_0_RETURN_PASSWORD_EXPIRY = &H40
'  this next flag says that CaseInsensitiveChallengeResponse
'   (aka LmResponse) contains a client challenge in the first 8 bytes
    MSV1_0_USE_CLIENT_CHALLENGE = &H80
    MSV1_0_TRY_GUEST_ACCOUNT_ONLY = &H100
    MSV1_0_RETURN_PROFILE_PATH = &H200
    MSV1_0_TRY_SPECIFIED_DOMAIN_ONLY = &H400
    MSV1_0_ALLOW_WORKSTATION_TRUST_ACCOUNT = &H800
' #if (_WIN32_WINNT >= 0x0501) -- Disabled until IIS fixes their target version.
    MSV1_0_DISABLE_PERSONAL_FALLBACK = &H00001000
    MSV1_0_ALLOW_FORCE_GUEST = &H00002000
' #endif
' #if (_WIN32_WINNT >= 0x0502)
    MSV1_0_CLEARTEXT_PASSWORD_SUPPLIED = &H00004000
'  Start
'  Doesnt exist in Windows XP but does exist in Windows 2000 Security Rollup and up
    MSV1_0_USE_DOMAIN_FOR_ROUTING_ONLY = &H00008000&
' #endif
    MSV1_0_SUBAUTHENTICATION_DLL_EX = &H00100000
'  Defined in Windows Server 2003 SP1 and above
    MSV1_0_ALLOW_MSVCHAPV2 = &H00010000
' #if (_WIN32_WINNT >= 0x0600)
' Defined in Windows Server 2008 and up
    MSV1_0_S4U2SELF = &H00020000  ' no password is needed
    MSV1_0_CHECK_LOGONHOURS_FOR_S4U = &H00040000  ' check logon hours for S4U logon
' #endif
' #if (_WIN32_WINNT >= 0x0602)
'  Logon for internet users. To be used by calls from auth package
'  directly, not from netlogon.
    MSV1_0_INTERNET_DOMAIN = &H00080000
' #endif
'  The high order byte is a value indicating the SubAuthentication DLL.
'   Zero indicates no SubAuthentication DLL.
    MSV1_0_SUBAUTHENTICATION_DLL = &HFF000000
    MSV1_0_SUBAUTHENTICATION_DLL_SHIFT = 24
    MSV1_0_MNS_LOGON = &H01000000
End Enum

Public Const MSV1_0_SUBAUTHENTICATION_DLL_RAS  = 2
Public Const MSV1_0_SUBAUTHENTICATION_DLL_IIS  = 132

Public Type MSV1_0_LM20_LOGON
    MessageType As MSV1_0_LOGON_SUBMIT_TYPE
    LogonDomainName As UNICODE_STRING
    UserName As UNICODE_STRING
    Workstation As UNICODE_STRING
    ChallengeToClient(0 To (MSV1_0_CHALLENGE_LENGTH - 1)) As Byte
    CaseSensitiveChallengeResponse As LSA_STRING
    CaseInsensitiveChallengeResponse As LSA_STRING
    ParameterControl As MSV1ParameterControlFlags
End Type
Public Type MSV1_0_SUBAUTH_LOGON
    MessageType As MSV1_0_LOGON_SUBMIT_TYPE
    LogonDomainName As UNICODE_STRING
    UserName As UNICODE_STRING
    Workstation As UNICODE_STRING
    ChallengeToClient(0 To (MSV1_0_CHALLENGE_LENGTH - 1)) As Byte
    AuthenticationInfo1 As LSA_STRING
    AuthenticationInfo2 As LSA_STRING
    ParameterControl As MSV1ParameterControlFlags
    SubAuthPackageId As Long
End Type

Public Enum MSV1S4ULogonFlags
    MSV1_0_S4U_LOGON_FLAG_CHECK_LOGONHOURS = &H2
End Enum
Public Type MSV1_0_S4U_LOGON
    MessageType As MSV1_0_LOGON_SUBMIT_TYPE
    Flags As MSV1S4ULogonFlags
    UserPrincipalName As UNICODE_STRING ' username or username@domain
    DomainName As UNICODE_STRING ' Optional: if missing, using the local machine
End Type

Public Enum LsaProfileUserFlags
    LOGON_GUEST = &H01
    LOGON_NOENCRYPTION = &H02
    LOGON_CACHED_ACCOUNT = &H04
    LOGON_USED_LM_PASSWORD = &H08
    LOGON_EXTRA_SIDS = &H20
    LOGON_SUBAUTH_SESSION_KEY = &H40
    LOGON_SERVER_TRUST_ACCOUNT = &H80
    LOGON_NTLMV2_ENABLED = &H100  ' says DC understands NTLMv2
    LOGON_RESOURCE_GROUPS = &H200
    LOGON_PROFILE_PATH_RETURNED = &H400
'  Defined in Windows Server 2008 and above
    LOGON_NT_V2 = &H800  ' NT response was used for validation
    LOGON_LM_V2 = &H1000  ' LM response was used for validation
    LOGON_NTLM_V2 = &H2000  ' LM response was used to authenticate but NT response was used to derive the session key
    LOGON_OPTIMIZED = &H4000  ' this is an optimized logon
    LOGON_WINLOGON = &H8000&  ' the logon session was created for winlogon
    LOGON_PKINIT = &H10000  ' Kerberos PKINIT extension was used to authenticate the user
    LOGON_NO_OPTIMIZED = &H20000  ' optimized logon has been disabled for this account
' #if (_WIN32_WINNT >= 0x0602)
    LOGON_NO_ELEVATION = &H40000  ' Do not allow elevation for this logon
    LOGON_MANAGED_SERVICE = &H80000  ' Managed service account
'  The high order byte is reserved for return by SubAuthentication DLLs.
    MSV1_0_SUBAUTHENTICATION_FLAGS = &HFF000000
'  Values returned by the MSV1_0_MNS_LOGON SubAutheentication DLL
    LOGON_GRACE_LOGON = &H01000000
End Enum
Public Type MSV1_0_LM20_LOGON_PROFILE
    MessageType As MSV1_0_PROFILE_BUFFER_TYPE
    KickOffTime As LARGE_INTEGER
    LogoffTime As LARGE_INTEGER
    UserFlags As LsaProfileUserFlags
    UserSessionKey(0 To (MSV1_0_USER_SESSION_KEY_LENGTH - 1)) As Byte
    LogonDomainName As UNICODE_STRING
    LanmanSessionKey(0 To (MSV1_0_LANMAN_SESSION_KEY_LENGTH - 1)) As Byte
    LogonServer As UNICODE_STRING
    UserParameters As UNICODE_STRING
End Type

Public Const MSV1_0_PACKAGE_NAME  = "MICROSOFT_AUTHENTICATION_PACKAGE_V1_0"
Public Const MSV1_0_PACKAGE_NAMEW  = "MICROSOFT_AUTHENTICATION_PACKAGE_V1_0"
Public Const MSV1_0_PACKAGE_NAMEW_LENGTH  = LenB(MSV1_0_PACKAGE_NAMEW) - 2 ' sizeof(WCHAR)
'  Location of MSV authentication package data
Public Const MSV1_0_SUBAUTHENTICATION_KEY  = "SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0"
Public Const MSV1_0_SUBAUTHENTICATION_VALUE  = "Auth"


Public Enum POLICY_AUDIT_EVENT_TYPE
    AuditCategorySystem = 0
    AuditCategoryLogon
    AuditCategoryObjectAccess
    AuditCategoryPrivilegeUse
    AuditCategoryDetailedTracking
    AuditCategoryPolicyChange
    AuditCategoryAccountManagement
    AuditCategoryDirectoryServiceAccess
    AuditCategoryAccountLogon
End Enum
Public Enum POLICY_AUDIT_EVENT_OPTIONS
    POLICY_AUDIT_EVENT_UNCHANGED = (&H00000000)
'  Audit successful occurrences of events of this type
    POLICY_AUDIT_EVENT_SUCCESS = (&H00000001)
'  Audit failed attempts to cause an event of this type to occur
    POLICY_AUDIT_EVENT_FAILURE = (&H00000002)
    POLICY_AUDIT_EVENT_NONE = (&H00000004)
'  Mask of valid event auditing options
    POLICY_AUDIT_EVENT_MASK = (POLICY_AUDIT_EVENT_SUCCESS Or POLICY_AUDIT_EVENT_FAILURE Or POLICY_AUDIT_EVENT_UNCHANGED Or POLICY_AUDIT_EVENT_NONE)
End Enum


Public Enum POLICY_INFORMATION_CLASS
   PolicyAuditLogInformation = 1
   PolicyAuditEventsInformation
   PolicyPrimaryDomainInformation
   PolicyPdAccountInformation
   PolicyAccountDomainInformation
   PolicyLsaServerRoleInformation
   PolicyReplicaSourceInformation
   PolicyDefaultQuotaInformation
   PolicyModificationInformation
   PolicyAuditFullSetInformation
   PolicyAuditFullQueryInformation
   PolicyDnsDomainInformation
   PolicyDnsDomainInformationInt
   PolicyLocalAccountDomainInformation
   PolicyMachineAccountInformation
   PolicyMachineAccountInformation2
   PolicyLastEntry
End Enum

Public Type POLICY_AUDIT_LOG_INFO
    AuditLogPercentFull As Long
    MaximumLogSize As Long
    AuditRetentionPeriod As LARGE_INTEGER
    AuditLogFullShutdownInProgress As Byte
    TimeToShutdown As LARGE_INTEGER
    NextAuditRecordId As Long
End Type
Public Type POLICY_AUDIT_EVENTS_INFO
    AuditingMode As Byte
    EventAuditingOptions As LongPtr 'PPOLICY_AUDIT_EVENT_OPTIONS
    MaximumAuditEventCount As Long
End Type
Public Type POLICY_AUDIT_SUBCATEGORIES_INFO
    MaximumSubCategoryCount As Long
    EventAuditingOptions As LongPtr 'PPOLICY_AUDIT_EVENT_OPTIONS
End Type
Public Type POLICY_AUDIT_CATEGORIES_INFO
    MaximumCategoryCount As Long
    SubCategoriesInfo As LongPtr 'PPOLICY_AUDIT_SUBCATEGORIES_INFO
End Type

Public Type POLICY_PD_ACCOUNT_INFO
    Name As LSA_UNICODE_STRING
End Type

Public Enum PolicyAccessRights
    POLICY_VIEW_LOCAL_INFORMATION = &H00000001
    POLICY_VIEW_AUDIT_INFORMATION = &H00000002
    POLICY_GET_PRIVATE_INFORMATION = &H00000004
    POLICY_TRUST_ADMIN = &H00000008
    POLICY_CREATE_ACCOUNT = &H00000010
    POLICY_CREATE_SECRET = &H00000020
    POLICY_CREATE_PRIVILEGE = &H00000040
    POLICY_SET_DEFAULT_QUOTA_LIMITS = &H00000080
    POLICY_SET_AUDIT_REQUIREMENTS = &H00000100
    POLICY_AUDIT_LOG_ADMIN = &H00000200
    POLICY_SERVER_ADMIN = &H00000400
    POLICY_LOOKUP_NAMES = &H00000800
    POLICY_NOTIFICATION = &H00001000
    POLICY_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or POLICY_VIEW_LOCAL_INFORMATION Or POLICY_VIEW_AUDIT_INFORMATION Or POLICY_GET_PRIVATE_INFORMATION Or POLICY_TRUST_ADMIN Or POLICY_CREATE_ACCOUNT Or POLICY_CREATE_SECRET Or POLICY_CREATE_PRIVILEGE Or POLICY_SET_DEFAULT_QUOTA_LIMITS Or POLICY_SET_AUDIT_REQUIREMENTS Or POLICY_AUDIT_LOG_ADMIN Or POLICY_SERVER_ADMIN Or POLICY_LOOKUP_NAMES)
    POLICY_READ = (STANDARD_RIGHTS_READ Or POLICY_VIEW_AUDIT_INFORMATION Or POLICY_GET_PRIVATE_INFORMATION)
    POLICY_WRITE = (STANDARD_RIGHTS_WRITE Or POLICY_TRUST_ADMIN Or POLICY_CREATE_ACCOUNT Or POLICY_CREATE_SECRET Or POLICY_CREATE_PRIVILEGE Or POLICY_SET_DEFAULT_QUOTA_LIMITS Or POLICY_SET_AUDIT_REQUIREMENTS Or POLICY_AUDIT_LOG_ADMIN Or POLICY_SERVER_ADMIN)
    POLICY_EXECUTE = (STANDARD_RIGHTS_EXECUTE Or POLICY_VIEW_LOCAL_INFORMATION Or POLICY_LOOKUP_NAMES)
End Enum

Public Enum POLICY_LSA_SERVER_ROLE
    PolicyServerRoleBackup = 2
    PolicyServerRolePrimary
End Enum
Public Type POLICY_LSA_SERVER_ROLE_INFO
    LsaServerRole As POLICY_LSA_SERVER_ROLE
End Type

Public Type POLICY_REPLICA_SOURCE_INFO
    ReplicaSource As LSA_UNICODE_STRING
    ReplicaAccountName As LSA_UNICODE_STRING
End Type

Public Type POLICY_DEFAULT_QUOTA_INFO
    QuotaLimits As QUOTA_LIMITS
End Type

Public Type POLICY_MODIFICATION_INFO
    ModifiedId As LARGE_INTEGER
    DatabaseCreationTime As LARGE_INTEGER
End Type

Public Type POLICY_AUDIT_FULL_SET_INFO
    ShutDownOnFull As Byte
End Type

Public Type POLICY_AUDIT_FULL_QUERY_INFO
    ShutDownOnFull As Byte
    LogIsFull As Byte
End Type

Public Enum POLICY_DOMAIN_INFORMATION_CLASS
    ' #if (_WIN32_WINNT <= 0x0500)
    PolicyDomainQualityOfServiceInformation = 1
    ' #endif
    PolicyDomainEfsInformation = 2
    PolicyDomainKerberosTicketInformation
End Enum
Public Enum PolicyQosFlags
    POLICY_QOS_SCHANNEL_REQUIRED = &H00000001
    POLICY_QOS_OUTBOUND_INTEGRITY = &H00000002
    POLICY_QOS_OUTBOUND_CONFIDENTIALITY = &H00000004
    POLICY_QOS_INBOUND_INTEGRITY = &H00000008
    POLICY_QOS_INBOUND_CONFIDENTIALITY = &H00000010
    POLICY_QOS_ALLOW_LOCAL_ROOT_CERT_STORE = &H00000020
    POLICY_QOS_RAS_SERVER_ALLOWED = &H00000040
    POLICY_QOS_DHCP_SERVER_ALLOWED = &H00000080
End Enum
Public Type POLICY_DOMAIN_QUALITY_OF_SERVICE_INFO
    QualityOfService As PolicyQosFlags
End Type

Public Type POLICY_DOMAIN_EFS_INFO
    InfoLength As Long
    EfsBlob As LongPtr 'PUCHAR
End Type

Public Enum PolicyKerbValidateOpts
    POLICY_KERBEROS_VALIDATE_CLIENT = &H00000080
End Enum

Public Type POLICY_DOMAIN_KERBEROS_TICKET_INFO
    AuthenticationOptions As PolicyKerbValidateOpts
    MaxServiceTicketAge As LARGE_INTEGER
    MaxTicketAge As LARGE_INTEGER
    MaxRenewAge As LARGE_INTEGER
    MaxClockSkew As LARGE_INTEGER
    Reserved As LARGE_INTEGER
End Type

Public Type POLICY_MACHINE_ACCT_INFO
    Rid As Long
    Sid As LongPtr 'PSID
End Type
Public Type POLICY_MACHINE_ACCT_INFO2
    Rid As Long
    Sid As LongPtr 'PSID
    ObjectGuid As UUID
End Type

Public Type LSA_LAST_INTER_LOGON_INFO
    LastSuccessfulLogon As LARGE_INTEGER
    LastFailedLogon As LARGE_INTEGER
    FailedAttemptCountSinceLastSuccessfulLogon As Long
End Type

Public Type SECURITY_LOGON_SESSION_DATA
    Size As Long
    LogonId As LUID
    UserName As LSA_UNICODE_STRING
    LogonDomain As LSA_UNICODE_STRING
    AuthenticationPackage As LSA_UNICODE_STRING
    LogonType As SECURITY_LOGON_TYPE
    Session As Long
    Sid As LongPtr 'PSID
    LogonTime As LARGE_INTEGER
    LogonServer As LSA_UNICODE_STRING
    DnsDomainName As LSA_UNICODE_STRING
    Upn As LSA_UNICODE_STRING
    UserFlags As LsaProfileUserFlags
    LastLogonInfo As LSA_LAST_INTER_LOGON_INFO
    LogonScript As LSA_UNICODE_STRING
    ProfilePath As LSA_UNICODE_STRING
    HomeDirectory As LSA_UNICODE_STRING
    HomeDirectoryDrive As LSA_UNICODE_STRING
    LogoffTime As LARGE_INTEGER
    KickOffTime As LARGE_INTEGER
    PasswordLastSet As LARGE_INTEGER
    PasswordCanChange As LARGE_INTEGER
    PasswordMustChange As LARGE_INTEGER
End Type

Public Enum LsaLookupOptions
LSA_LOOKUP_RETURN_LOCAL_NAMES = 0
LSA_LOOKUP_PREFER_INTERNET_NAMES = &H40000000
LSA_LOOKUP_DISALLOW_CONNECTED_ACCOUNT_INTERNET_SID = &H80000000
End Enum

Public Enum TRUSTED_INFORMATION_CLASS
    TrustedDomainNameInformation = 1
    TrustedControllersInformation
    TrustedPosixOffsetInformation
    TrustedPasswordInformation
    TrustedDomainInformationBasic
    TrustedDomainInformationEx
    TrustedDomainAuthInformation
    TrustedDomainFullInformation
    TrustedDomainAuthInformationInternal
    TrustedDomainFullInformationInternal
    TrustedDomainInformationEx2Internal
    TrustedDomainFullInformation2Internal
    TrustedDomainSupportedEncryptionTypes
    TrustedDomainAuthInformationInternalAes
    TrustedDomainFullInformationInternalAes
End Enum

Public Type TRUSTED_DOMAIN_NAME_INFO
    Name As LSA_UNICODE_STRING
End Type
Public Type TRUSTED_CONTROLLERS_INFO
    Entries As Long
    Names As LongPtr 'PLSA_UNICODE_STRING
End Type

Public Type TRUSTED_POSIX_OFFSET_INFO
    Offset As Long
End Type

Public Type TRUSTED_PASSWORD_INFO
    Password As LSA_UNICODE_STRING
    OldPassword As LSA_UNICODE_STRING
End Type

'Alias TRUSTED_DOMAIN_INFORMATION_BASIC As LSA_TRUST_INFORMATION
Public Type TRUSTED_DOMAIN_INFORMATION_BASIC
    Name As LSA_UNICODE_STRING
    Sid As LongPtr 'PSID
End Type

Public Enum LsaTrustDirection
    TRUST_DIRECTION_DISABLED = &H00000000
    TRUST_DIRECTION_INBOUND = &H00000001
    TRUST_DIRECTION_OUTBOUND = &H00000002
    TRUST_DIRECTION_BIDIRECTIONAL = (TRUST_DIRECTION_INBOUND Or TRUST_DIRECTION_OUTBOUND)
End Enum
Public Enum LsaTrustType
    TRUST_TYPE_DOWNLEVEL = &H00000001  ' NT4 and before
    TRUST_TYPE_UPLEVEL = &H00000002  ' NT5
    TRUST_TYPE_MIT = &H00000003  ' Trust with a MIT Kerberos realm
    TRUST_TYPE_DCE = &H00000004  ' Trust with a DCE realm
End Enum
Public Enum LsaTrustAttributes
    TRUST_ATTRIBUTE_NON_TRANSITIVE = &H00000001  ' Disallow transitivity
    TRUST_ATTRIBUTE_UPLEVEL_ONLY = &H00000002  ' Trust link only valid for uplevel client
    TRUST_ATTRIBUTE_QUARANTINED_DOMAIN = &H00000004 ' Used to quarantine domains
    TRUST_ATTRIBUTE_FOREST_TRANSITIVE = &H00000008  ' This link may contain forest trust information
    TRUST_ATTRIBUTE_CROSS_ORGANIZATION = &H00000010  ' This trust is to a domain/forest which is not part of this enterprise
    TRUST_ATTRIBUTE_WITHIN_FOREST = &H00000020  ' Trust is internal to this forest
    TRUST_ATTRIBUTE_TREAT_AS_EXTERNAL = &H00000040  ' Trust is to be treated as external for trust boundary purposes
' #if (_WIN32_WINNT >= 0x0600)
    TRUST_ATTRIBUTE_TRUST_USES_RC4_ENCRYPTION = &H00000080  ' MIT trust with RC4
    TRUST_ATTRIBUTE_TRUST_USES_AES_KEYS = &H00000100  ' Use AES keys to encrypte KRB TGTs
' #endif
' #if (_WIN32_WINNT >= 0x0602)
    TRUST_ATTRIBUTE_CROSS_ORGANIZATION_NO_TGT_DELEGATION = &H00000200  ' do not forward TGT to the other side of the trust which is not part of this enterprise
    TRUST_ATTRIBUTE_PIM_TRUST = &H00000400  ' Outgoing trust to a PIM forest.
' #endif
' #if (_WIN32_WINNT >= 0x0603)
'  Forward the TGT to the other side of the trust which is not part of this enterprise
'  This flag has the opposite meaning of TRUST_ATTRIBUTE_CROSS_ORGANIZATION_NO_TGT_DELEGATION which is now deprecated.
'  Note: setting TRUST_ATTRIBUTE_CROSS_ORGANIZATION_ENABLE_TGT_DELEGATION is not recommended from a security standpoint.
    TRUST_ATTRIBUTE_CROSS_ORGANIZATION_ENABLE_TGT_DELEGATION = &H00000800
' #endif
'  Disables authentication target validation for all NTLM pass-through authentication
'  requests using this trust.
    TRUST_ATTRIBUTE_DISABLE_AUTH_TARGET_VALIDATION = &H00001000
    TRUST_ATTRIBUTE_TREE_PARENT = &H00400000  ' Denotes that we are setting the trust to our parent in the org tree...
    TRUST_ATTRIBUTE_TREE_ROOT = &H00800000  ' Denotes that we are setting the trust to another tree root in a forest...
    TRUST_ATTRIBUTES_VALID = &HFF03FFFF
    TRUST_ATTRIBUTES_USER = &HFF000000
End Enum
Public Type TRUSTED_DOMAIN_INFORMATION_EX
    Name As LSA_UNICODE_STRING
    FlatName As LSA_UNICODE_STRING
    Sid As LongPtr 'PSID
    TrustDirection As LsaTrustDirection
    TrustType As LsaTrustType
    TrustAttributes As LsaTrustAttributes
End Type
Public Type TRUSTED_DOMAIN_INFORMATION_EX2
    Name As LSA_UNICODE_STRING
    FlatName As LSA_UNICODE_STRING
    Sid As LongPtr 'PSID
    TrustDirection As LsaTrustDirection
    TrustType As LsaTrustType
    TrustAttributes As LsaTrustAttributes
    ForestTrustInfo As LongPtr
End Type

Public Enum LsaTrustAuthInfo
    TRUST_AUTH_TYPE_NONE = 0  ' Ignore this entry
    TRUST_AUTH_TYPE_NT4OWF = 1  ' NT4 OWF password
    TRUST_AUTH_TYPE_CLEAR = 2  ' Cleartext password
    TRUST_AUTH_TYPE_VERSION = 3  ' Cleartext password version number
End Enum
Public Type LSA_AUTH_INFORMATION
    LastUpdateTime As LARGE_INTEGER
    AuthType As LsaTrustAuthInfo
    AuthInfoLength As Long
    AuthInfo As LongPtr 'PUCHAR
End Type

Public Type TRUSTED_DOMAIN_AUTH_INFORMATION
    IncomingAuthInfos As Long
    IncomingAuthenticationInformation As LongPtr 'PLSA_AUTH_INFORMATION
    IncomingPreviousAuthenticationInformation As LongPtr 'PLSA_AUTH_INFORMATION
    OutgoingAuthInfos As Long
    OutgoingAuthenticationInformation As LongPtr 'PLSA_AUTH_INFORMATION
    OutgoingPreviousAuthenticationInformation As LongPtr 'PLSA_AUTH_INFORMATION
End Type

Public Type TRUSTED_DOMAIN_FULL_INFORMATION
    Information As TRUSTED_DOMAIN_INFORMATION_EX
    PosixOffset As TRUSTED_POSIX_OFFSET_INFO
    AuthInformation As TRUSTED_DOMAIN_AUTH_INFORMATION
End Type
Public Type TRUSTED_DOMAIN_FULL_INFORMATION2
    Information As TRUSTED_DOMAIN_INFORMATION_EX2
    PosixOffset As TRUSTED_POSIX_OFFSET_INFO
    AuthInformation As TRUSTED_DOMAIN_AUTH_INFORMATION
End Type

Public Type TRUSTED_DOMAIN_SUPPORTED_ENCRYPTION_TYPES
    SupportedEncryptionTypes As Long
End Type

Public Enum POLICY_NOTIFICATION_INFORMATION_CLASS
    PolicyNotifyAuditEventsInformation = 1
    PolicyNotifyAccountDomainInformation
    PolicyNotifyServerRoleInformation
    PolicyNotifyDnsDomainInformation
    PolicyNotifyDomainEfsInformation
    PolicyNotifyDomainKerberosTicketInformation
    PolicyNotifyMachineAccountPasswordInformation
    PolicyNotifyGlobalSaclInformation
    PolicyNotifyMax ' must always be the last entry
End Enum

Public Enum LsaLookupNames2Flags
    LSA_LOOKUP_ISOLATED_AS_LOCAL = &H80000000
End Enum

Public Enum TrustedDomainRights
    TRUSTED_QUERY_DOMAIN_NAME = &H00000001
    TRUSTED_QUERY_CONTROLLERS = &H00000002
    TRUSTED_SET_CONTROLLERS = &H00000004
    TRUSTED_QUERY_POSIX = &H00000008
    TRUSTED_SET_POSIX = &H00000010
    TRUSTED_SET_AUTH = &H00000020
    TRUSTED_QUERY_AUTH = &H00000040
    TRUSTED_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or TRUSTED_QUERY_DOMAIN_NAME Or TRUSTED_QUERY_CONTROLLERS Or TRUSTED_SET_CONTROLLERS Or TRUSTED_QUERY_POSIX Or TRUSTED_SET_POSIX Or TRUSTED_SET_AUTH Or TRUSTED_QUERY_AUTH)
    TRUSTED_READ = (STANDARD_RIGHTS_READ Or TRUSTED_QUERY_DOMAIN_NAME)
    TRUSTED_WRITE = (STANDARD_RIGHTS_WRITE Or TRUSTED_SET_CONTROLLERS Or TRUSTED_SET_POSIX Or TRUSTED_SET_AUTH)
    TRUSTED_EXECUTE = (STANDARD_RIGHTS_EXECUTE Or TRUSTED_QUERY_CONTROLLERS Or TRUSTED_QUERY_POSIX)
End Enum


'LsaLookup.h 100% coverage
Public Declare PtrSafe Function LsaLookupOpenLocalPolicy Lib "sechost" (ObjectAttributes As LSA_OBJECT_ATTRIBUTES, ByVal AccessMask As Long, PolicyHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaLookupClose Lib "sechost" (ByVal ObjectHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaLookupTranslateSids Lib "sechost" (ByVal PolicyHandle As LongPtr, ByVal Count As Long, Sids As LongPtr, ReferencedDomains As LongPtr, Names As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaLookupTranslateNames Lib "sechost" (ByVal PolicyHandle As LongPtr, ByVal Count As Long, Names As LSA_UNICODE_STRING, ReferencedDomains As LongPtr, Sids As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaLookupGetDomainInfo Lib "sechost" (ByVal PolicyHandle As LongPtr, ByVal DomainInfoClass As LSA_LOOKUP_DOMAIN_INFO_CLASS, DomainInfo As LongPtr) As NTSTATUS

Public Declare PtrSafe Function LsaAddAccountRights Lib "advapi32" (ByVal PolicyHandle As LongPtr, ByVal AccountSid As LongPtr, UserRights As LSA_UNICODE_STRING, ByVal CountOfRights As Long) As NTSTATUS
Public Declare PtrSafe Function LsaRemoveAccountRights Lib "advapi32" (ByVal PolicyHandle As LongPtr, ByVal AccountSid As LongPtr, ByVal AllRights As Byte, UserRights As LSA_UNICODE_STRING, ByVal CountOfRights As Long) As NTSTATUS
Public Declare PtrSafe Function LsaEnumerateAccountRights Lib "advapi32" (ByVal PolicyHandle As LongPtr, ByVal AccountSid As LongPtr, UserRights As LongPtr, CountOfRights As Long) As NTSTATUS
Public Declare PtrSafe Function LsaEnumerateAccountsWithUserRight Lib "advapi32" (ByVal PolicyHandle As LongPtr, UserRight As LSA_UNICODE_STRING, Buffer As LongPtr, CountReturned As Long) As NTSTATUS
Public Declare PtrSafe Function LsaLookupNames Lib "advapi32" (ByVal PolicyHandle As LongPtr, ByVal Count As Long, Names As LSA_UNICODE_STRING, ReferencedDomains As LongPtr, Sids As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaLookupNames2 Lib "advapi32" (ByVal PolicyHandle As LongPtr, [TypeHint(LsaLookupNames2Flags)] ByVal Flags As Long, ByVal Count As Long, Names As LSA_UNICODE_STRING, ReferencedDomains As LongPtr, Sids As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaLookupSids Lib "advapi32" (ByVal PolicyHandle As LongPtr, ByVal Count As Long, Sids As LongPtr, ReferencedDomains As LongPtr, Names As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaLookupSids2 Lib "advapi32" (ByVal PolicyHandle As LongPtr, ByVal LookupOptions As LsaLookupOptions, ByVal Count As Long, Sids As LongPtr, ReferencedDomains As LongPtr, Names As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaOpenPolicy Lib "advapi32" (SystemName As LSA_UNICODE_STRING, ObjectAttributes As LSA_OBJECT_ATTRIBUTES, [TypeHint(PolicyAccessRights)] ByVal DesiredAccess As Long, PolicyHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaClose Lib "advapi32" (ByVal ObjectHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaOpenTrustedDomain Lib "advapi32" (ByVal PolicyHandle As LongPtr, ByVal TrustedDomainSid As LongPtr, [TypeHint(GenericRights, TrustedDomainRights)] ByVal DesiredAccess As Long, TrustedDomainHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaOpenTrustedDomainByName Lib "advapi32" (ByVal PolicyHandle As LongPtr, TrustedDomainName As LSA_UNICODE_STRING, [TypeHint(GenericRights, TrustedDomainRights)] ByVal DesiredAccess As Long, TrustedDomainHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaNtStatusToWinError Lib "advapi32" (ByVal status As NTSTATUS) As Long
Public Declare PtrSafe Function LsaRegisterLogonProcess Lib "secur32" (LogonProcessName As LSA_STRING, LsaHandle As LongPtr, SecurityMode As LSA_OPERATIONAL_MODE) As NTSTATUS
Public Declare PtrSafe Function LsaDeregisterLogonProcess Lib "secur32" (ByVal LsaHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaLogonUser Lib "secur32" (ByVal LsaHandle As LongPtr, OriginName As LSA_STRING, ByVal LogonType As SECURITY_LOGON_TYPE, ByVal AuthenticationPackage As Long, AuthenticationInformation As Any, ByVal AuthenticationInformationLength As Long, LocalGroups As TOKEN_GROUPS, SourceContext As TOKEN_SOURCE, ProfileBuffer As LongPtr, ProfileBufferLength As Long, LogonId As LUID, Token As LongPtr, Quotas As QUOTA_LIMITS, SubStatus As NTSTATUS) As NTSTATUS
Public Declare PtrSafe Function LsaLookupAuthenticationPackage Lib "secur32" (ByVal LsaHandle As LongPtr, PackageName As LSA_STRING, AuthenticationPackage As Long) As NTSTATUS
Public Declare PtrSafe Function LsaCallAuthenticationPackage Lib "secur32" (ByVal LsaHandle As LongPtr, ByVal AuthenticationPackage As Long, ProtocolSubmitBuffer As Any, ByVal SubmitBufferLength As Long, ProtocolReturnBuffer As LongPtr, ReturnBufferLength As Long, ProtocolStatus As NTSTATUS) As NTSTATUS
Public Declare PtrSafe Function LsaQueryInformationPolicy Lib "advapi32" (ByVal PolicyHandle As LongPtr, ByVal InformationClass As POLICY_INFORMATION_CLASS, Buffer As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaSetInformationPolicy Lib "advapi32" (ByVal PolicyHandle As LongPtr, ByVal InformationClass As POLICY_INFORMATION_CLASS, Buffer As Any) As NTSTATUS
Public Declare PtrSafe Function LsaRetrievePrivateData Lib "advapi32" (ByVal PolicyHandle As LongPtr, KeyName As LSA_UNICODE_STRING, PrivateData As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaStorePrivateData Lib "advapi32" (ByVal PolicyHandle As LongPtr, KeyName As LSA_UNICODE_STRING, PrivateData As LSA_UNICODE_STRING) As NTSTATUS
Public Declare PtrSafe Function LsaFreeMemory Lib "advapi32" (ByVal Buffer As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaFreeReturnBuffer Lib "secur32" (ByVal Buffer As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaEnumerateLogonSessions Lib "secur32" (LogonSessionCount As Long, LogonSessionList As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaGetLogonSessionData Lib "secur32" (LogonId As LUID, ppLogonSessionData As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaQueryTrustedDomainInfo Lib "advapi32" (ByVal PolicyHandle As LongPtr, ByVal TrustedDomainSid As LongPtr, ByVal InformationClass As TRUSTED_INFORMATION_CLASS, Buffer As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaSetTrustedDomainInformation Lib "advapi32" (ByVal PolicyHandle As LongPtr, ByVal TrustedDomainSid As LongPtr, ByVal InformationClass As TRUSTED_INFORMATION_CLASS, Buffer As Any) As NTSTATUS
Public Declare PtrSafe Function LsaEnumerateTrustedDomains Lib "advapi32" (ByVal PolicyHandle As LongPtr, EnumerationContext As Long, Buffer As LongPtr, ByVal PreferredMaximumLength As Long, CountReturned As Long) As NTSTATUS
Public Declare PtrSafe Function LsaEnumerateTrustedDomainsEx Lib "advapi32" (ByVal PolicyHandle As LongPtr, EnumerationContext As Long, Buffer As LongPtr, ByVal PreferredMaximumLength As Long, CountReturned As Long) As NTSTATUS
Public Declare PtrSafe Function LsaQueryTrustedDomainInfoByName Lib "advapi32" (ByVal PolicyHandle As LongPtr, TrustedDomainName As LSA_UNICODE_STRING, ByVal InformationClass As TRUSTED_INFORMATION_CLASS, Buffer As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaSetTrustedDomainInfoByName Lib "advapi32" (ByVal PolicyHandle As LongPtr, TrustedDomainName As LSA_UNICODE_STRING, ByVal InformationClass As TRUSTED_INFORMATION_CLASS, Buffer As Any) As NTSTATUS
Public Declare PtrSafe Function LsaCreateTrustedDomain Lib "advapi32" (ByVal PolicyHandle As LongPtr, TrustedDomainInformation As LSA_TRUST_INFORMATION, [TypeHint(GenericRights, TrustedDomainRights)] ByVal DesiredAccess As Long, TrustedDomainHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaCreateTrustedDomainEx Lib "advapi32" (ByVal PolicyHandle As LongPtr, TrustedDomainInformation As TRUSTED_DOMAIN_INFORMATION_EX, AuthenticationInformation As TRUSTED_DOMAIN_AUTH_INFORMATION, [TypeHint(GenericRights, TrustedDomainRights)] ByVal DesiredAccess As Long, TrustedDomainHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaDeleteTrustedDomain Lib "advapi32" (ByVal PolicyHandle As LongPtr, ByVal TrustedDomainSid As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaRegisterPolicyChangeNotification Lib "secur32" (ByVal InformationClass As POLICY_NOTIFICATION_INFORMATION_CLASS, ByVal NotificationEventHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaUnregisterPolicyChangeNotification Lib "secur32" (ByVal InformationClass As POLICY_NOTIFICATION_INFORMATION_CLASS, ByVal NotificationEventHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaQueryDomainInformationPolicy Lib "advapi32" (ByVal PolicyHandle As LongPtr, ByVal InformationClass As POLICY_DOMAIN_INFORMATION_CLASS, Buffer As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaSetDomainInformationPolicy Lib "advapi32" (ByVal PolicyHandle As LongPtr, ByVal InformationClass As POLICY_DOMAIN_INFORMATION_CLASS, Buffer As Any) As NTSTATUS
Public Declare PtrSafe Function LsaQueryInfoTrustedDomain Lib "advapi32" (ByVal TrustedDomainSid As LongPtr, ByVal InformationClass As TRUSTED_INFORMATION_CLASS, Buffer As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaSetInformationTrustedDomain Lib "advapi32" (ByVal TrustedDomainSid As LongPtr, ByVal InformationClass As TRUSTED_INFORMATION_CLASS, Buffer As Any) As NTSTATUS
Public Declare PtrSafe Function LsaConnectUntrusted Lib "secur32" (LsaHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaInsertProtectedProcessAddress Lib "secur32" (ByVal BufferAddress As LongPtr, ByVal BufferSize As Long) As NTSTATUS
Public Declare PtrSafe Function LsaRemoveProtectedProcessAddress Lib "secur32" (ByVal BufferAddress As LongPtr, ByVal BufferSize As Long) As NTSTATUS


Public Type LSA_ENUMERATION_INFORMATION
    Sid As LongPtr 'PSID
End Type

Public Enum LsaAccountAccessRights
    ACCOUNT_VIEW = &H00000001
    ACCOUNT_ADJUST_PRIVILEGES = &H00000002
    ACCOUNT_ADJUST_QUOTAS = &H00000004
    ACCOUNT_ADJUST_SYSTEM_ACCESS = &H00000008
    ACCOUNT_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or ACCOUNT_VIEW Or ACCOUNT_ADJUST_PRIVILEGES Or ACCOUNT_ADJUST_QUOTAS Or ACCOUNT_ADJUST_SYSTEM_ACCESS)
    ACCOUNT_READ = (STANDARD_RIGHTS_READ Or ACCOUNT_VIEW)
    ACCOUNT_WRITE = (STANDARD_RIGHTS_WRITE Or ACCOUNT_ADJUST_PRIVILEGES Or ACCOUNT_ADJUST_QUOTAS Or ACCOUNT_ADJUST_SYSTEM_ACCESS)
    ACCOUNT_EXECUTE = (STANDARD_RIGHTS_EXECUTE)
End Enum

Public Enum LsaSystemAccessFlags
    SECURITY_ACCESS_INTERACTIVE_LOGON = (&H00000001)
    SECURITY_ACCESS_NETWORK_LOGON = (&H00000002)
    SECURITY_ACCESS_BATCH_LOGON = (&H00000004)
    SECURITY_ACCESS_SERVICE_LOGON = (&H00000010)
    SECURITY_ACCESS_PROXY_LOGON = (&H00000020)
    SECURITY_ACCESS_DENY_INTERACTIVE_LOGON = (&H00000040)
    SECURITY_ACCESS_DENY_NETWORK_LOGON = (&H00000080)
    SECURITY_ACCESS_DENY_BATCH_LOGON = (&H00000100)
    SECURITY_ACCESS_DENY_SERVICE_LOGON = (&H00000200)
    SECURITY_ACCESS_REMOTE_INTERACTIVE_LOGON = (&H00000400)
    SECURITY_ACCESS_DENY_REMOTE_INTERACTIVE_LOGON = (&H00000800)
End Enum

Public Enum POLICY_SYSTEM_ACCESS_MODE
    POLICY_MODE_INTERACTIVE = SECURITY_ACCESS_INTERACTIVE_LOGON
    POLICY_MODE_NETWORK = SECURITY_ACCESS_NETWORK_LOGON
    POLICY_MODE_BATCH = SECURITY_ACCESS_BATCH_LOGON
    POLICY_MODE_SERVICE = SECURITY_ACCESS_SERVICE_LOGON
    POLICY_MODE_PROXY = SECURITY_ACCESS_PROXY_LOGON
    POLICY_MODE_DENY_INTERACTIVE = SECURITY_ACCESS_DENY_INTERACTIVE_LOGON
    POLICY_MODE_DENY_NETWORK = SECURITY_ACCESS_DENY_NETWORK_LOGON
    POLICY_MODE_DENY_BATCH = SECURITY_ACCESS_DENY_BATCH_LOGON
    POLICY_MODE_DENY_SERVICE = SECURITY_ACCESS_DENY_SERVICE_LOGON
    POLICY_MODE_REMOTE_INTERACTIVE = SECURITY_ACCESS_REMOTE_INTERACTIVE_LOGON
    POLICY_MODE_DENY_REMOTE_INTERACTIVE = SECURITY_ACCESS_DENY_REMOTE_INTERACTIVE_LOGON
    POLICY_MODE_ALL = (POLICY_MODE_INTERACTIVE Or POLICY_MODE_NETWORK Or POLICY_MODE_BATCH Or POLICY_MODE_SERVICE Or POLICY_MODE_PROXY Or POLICY_MODE_DENY_INTERACTIVE Or POLICY_MODE_DENY_NETWORK Or SECURITY_ACCESS_DENY_BATCH_LOGON Or SECURITY_ACCESS_DENY_SERVICE_LOGON Or POLICY_MODE_REMOTE_INTERACTIVE Or POLICY_MODE_DENY_REMOTE_INTERACTIVE)
'  The following is the bits allowed in NT4.0
    POLICY_MODE_ALL_NT4 = (POLICY_MODE_INTERACTIVE Or POLICY_MODE_NETWORK Or POLICY_MODE_BATCH Or POLICY_MODE_SERVICE Or POLICY_MODE_PROXY)
End Enum

Public Enum LsaSecretAccessRights
    SECRET_SET_VALUE = &H00000001
    SECRET_QUERY_VALUE = &H00000002
    SECRET_ALL_ACCESS = (STANDARD_RIGHTS_REQUIRED Or SECRET_SET_VALUE Or SECRET_QUERY_VALUE)
    SECRET_READ = (STANDARD_RIGHTS_READ Or SECRET_QUERY_VALUE)
    SECRET_WRITE = (STANDARD_RIGHTS_WRITE Or SECRET_SET_VALUE)
    SECRET_EXECUTE = (STANDARD_RIGHTS_EXECUTE)
End Enum

Public Const LSA_GLOBAL_SECRET_PREFIX  = "G$"
Public Const LSA_GLOBAL_SECRET_PREFIX_LENGTH  = 2
Public Const LSA_LOCAL_SECRET_PREFIX  = "L$"
Public Const LSA_LOCAL_SECRET_PREFIX_LENGTH  = 2
Public Const LSA_MACHINE_SECRET_PREFIX  = "M$"
Public Const LSA_MACHINE_SECRET_PREFIX_LENGTH = 2

Public Const MAX_USER_RECORDS = 1000
Public Type LSA_USER_REGISTRATION_INFO
    Sid As LSA_UNICODE_STRING
    DeviceId As LSA_UNICODE_STRING
    Username As LSA_UNICODE_STRING
    Thumbprint As LSA_UNICODE_STRING
    RegistrationTime As LARGE_INTEGER
End Type
Public Type LSA_REGISTRATION_INFO
    RegisteredCount As Long
    UserRegistrationInfo As LongPtr 'PLSA_USER_REGISTRATION_INFO
End Type

Public Declare PtrSafe Function LsaEnumerateAccounts Lib "advapi32" (ByVal PolicyHandle As LongPtr, EnumerationContext As Long, Buffer As LongPtr, ByVal PreferredMaximumLength As Long, CountReturned As Long) As NTSTATUS
Public Declare PtrSafe Function LsaDelete Lib "advapi32" (ByVal ObjectHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaQuerySecurityObject Lib "advapi32" (ByVal ObjectHandle As LongPtr, ByVal SecurityInformation As SECURITY_INFORMATION, SecurityDescriptor As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaSetSecurityObject Lib "advapi32" (ByVal ObjectHandle As LongPtr, ByVal SecurityInformation As SECURITY_INFORMATION, SecurityDescriptor As SECURITY_DESCRIPTOR) As NTSTATUS
' Public Declare PtrSafe Function LsaChangePassword Lib "advapi32" (ServerName As LSA_UNICODE_STRING, DomainName As LSA_UNICODE_STRING, AccountName As LSA_UNICODE_STRING, OldPassword As LSA_UNICODE_STRING, NewPassword As LSA_UNICODE_STRING) As NTSTATUS
Public Declare PtrSafe Function LsaOpenPolicySce Lib "advapi32" (SystemName As LSA_UNICODE_STRING, ObjectAttributes As LSA_OBJECT_ATTRIBUTES, ByVal DesiredAccess As Long, PolicyHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaEnumeratePrivileges Lib "advapi32" (ByVal PolicyHandle As LongPtr, EnumerationContext As Long, Buffer As LongPtr, ByVal PreferredMaximumLength As Long, CountReturned As Long) As NTSTATUS
Public Declare PtrSafe Function LsaCreateAccount Lib "advapi32" (ByVal PolicyHandle As LongPtr, ByVal AccountSid As LongPtr, [TypeHint(LsaAccountAccessRights)] ByVal DesiredAccess As Long, AccountHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaOpenAccount Lib "advapi32" (ByVal PolicyHandle As LongPtr, ByVal AccountSid As LongPtr, [TypeHint(LsaAccountAccessRights)] ByVal DesiredAccess As Long, AccountHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaAddPrivilegesToAccount Lib "advapi32" (ByVal AccountHandle As LongPtr, Privileges As PRIVILEGE_SET) As NTSTATUS
Public Declare PtrSafe Function LsaRemovePrivilegesFromAccount Lib "advapi32" (ByVal AccountHandle As LongPtr, ByVal AllPrivileges As Byte, Privileges As PRIVILEGE_SET) As NTSTATUS
Public Declare PtrSafe Function LsaGetQuotasForAccount Lib "advapi32" (ByVal AccountHandle As LongPtr, QuotaLimits As QUOTA_LIMITS) As NTSTATUS
Public Declare PtrSafe Function LsaSetQuotasForAccount Lib "advapi32" (ByVal AccountHandle As LongPtr, QuotaLimits As QUOTA_LIMITS) As NTSTATUS
Public Declare PtrSafe Function LsaGetSystemAccessAccount Lib "advapi32" (ByVal AccountHandle As LongPtr, [TypeHint(POLICY_SYSTEM_ACCESS_MODE)] SystemAccess As Long) As NTSTATUS
Public Declare PtrSafe Function LsaSetSystemAccessAccount Lib "advapi32" (ByVal AccountHandle As LongPtr, [TypeHint(POLICY_SYSTEM_ACCESS_MODE)] ByVal SystemAccess As Long) As NTSTATUS
Public Declare PtrSafe Function LsaLookupPrivilegeDisplayName Lib "advapi32" (ByVal PolicyHandle As LongPtr, pName As LSA_UNICODE_STRING, DisplayName As LongPtr, LanguageReturned As Integer) As NTSTATUS
Public Declare PtrSafe Function LsaLookupPrivilegeName Lib "advapi32" (ByVal PolicyHandle As LongPtr, Value As LUID, pName As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaLookupPrivilegeValue Lib "advapi32" (ByVal PolicyHandle As LongPtr, pName As LSA_UNICODE_STRING, Value As LUID) As NTSTATUS
Public Declare PtrSafe Function LsaOpenSecret Lib "advapi32" (ByVal PolicyHandle As LongPtr, SecretName As LSA_UNICODE_STRING, [TypeHint(LsaSecretAccessRights)] ByVal DesiredAccess As Long, SecretHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaSetSecret Lib "advapi32" (ByVal SecretHandle As LongPtr, CurrentValue As LSA_UNICODE_STRING, OldValue As LSA_UNICODE_STRING) As NTSTATUS
Public Declare PtrSafe Function LsaQuerySecret Lib "advapi32" (ByVal SecretHandle As LongPtr, CurrentValue As LongPtr, CurrentValueSetTime As LARGE_INTEGER, OldValue As LongPtr, OldValueSetTime As LARGE_INTEGER) As NTSTATUS
Public Declare PtrSafe Function LsaCreateSecret Lib "advapi32" (ByVal PolicyHandle As LongPtr, SecretName As LSA_UNICODE_STRING, [TypeHint(LsaSecretAccessRights)] ByVal DesiredAccess As Long, SecretHandle As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaGetUserName Lib "advapi32" (UserName As LongPtr, DomainName As LongPtr) As NTSTATUS
Public Declare PtrSafe Function LsaGetRemoteUserName Lib "advapi32" (SystemName As LSA_UNICODE_STRING, UserName As LongPtr, DomainName As LongPtr) As NTSTATUS
Public DeclareWide PtrSafe Function LsaInvokeTrustScanner Lib "advapi32" (ByVal PolicyHandle As LongPtr, ByVal DomainName As String, ByVal Flags As Long, Optional ByVal CompletionEvent As String) As NTSTATUS
Public Declare PtrSafe Function LsaGetDeviceRegistrationInfo Lib "advapi32" (UserRegistrationInfo As LSA_REGISTRATION_INFO) As NTSTATUS
Public Declare PtrSafe Function LsaIsCredentialGuardRunning Lib "advapi32" (IsCredentialGuardRunning As Byte) As NTSTATUS



Public DeclareWide PtrSafe Function IsTextUnicode Lib "advapi32" (lpv As Any, ByVal iSize As Long, lpiResult As ISTXTUTF_RESULT) As BOOL
Public Enum ISTXTUTF_RESULT
    IS_TEXT_UNICODE_ASCII16 = &H0001
    IS_TEXT_UNICODE_REVERSE_ASCII16 = &H0010
    IS_TEXT_UNICODE_STATISTICS = &H0002
    IS_TEXT_UNICODE_REVERSE_STATISTICS = &H0020
    IS_TEXT_UNICODE_CONTROLS = &H0004
    IS_TEXT_UNICODE_REVERSE_CONTROLS = &H0040
    IS_TEXT_UNICODE_SIGNATURE = &H0008
    IS_TEXT_UNICODE_REVERSE_SIGNATURE = &H0080
    IS_TEXT_UNICODE_ILLEGAL_CHARS = &H0100
    IS_TEXT_UNICODE_ODD_LENGTH = &H0200
    IS_TEXT_UNICODE_DBCS_LEADBYTE = &H0400
    IS_TEXT_UNICODE_UTF8 = &H0800
    IS_TEXT_UNICODE_NULL_BYTES = &H1000
    IS_TEXT_UNICODE_UNICODE_MASK = &H000F
    IS_TEXT_UNICODE_REVERSE_MASK = &H00F0
    IS_TEXT_UNICODE_NOT_UNICODE_MASK = &H0F00
    IS_TEXT_UNICODE_NOT_ASCII_MASK = &HF000&
End Enum



Public Enum SEF_FLAGS
    SEF_DACL_AUTO_INHERIT = &H01
    SEF_SACL_AUTO_INHERIT = &H02
    SEF_DEFAULT_DESCRIPTOR_FOR_OBJECT = &H04
    SEF_AVOID_PRIVILEGE_CHECK = &H08
    SEF_AVOID_OWNER_CHECK = &H10
    SEF_DEFAULT_OWNER_FROM_PARENT = &H20
    SEF_DEFAULT_GROUP_FROM_PARENT = &H40
    SEF_MACL_NO_WRITE_UP = &H100
    SEF_MACL_NO_READ_UP = &H200
    SEF_MACL_NO_EXECUTE_UP = &H400
    SEF_AI_USE_EXTRA_PARAMS = &H800
    SEF_AVOID_OWNER_RESTRICTION = &H1000
    SEF_FORCE_USER_MODE = &H2000
    SEF_NORMALIZE_OUTPUT_DESCRIPTOR = &H4000
    SEF_MACL_VALID_FLAGS = (SEF_MACL_NO_WRITE_UP Or SEF_MACL_NO_READ_UP Or SEF_MACL_NO_EXECUTE_UP)
End Enum

Public Enum CLAIM_SECURITY_ATTRIBUTE_TYPES
    CLAIM_SECURITY_ATTRIBUTE_TYPE_INVALID = &H00
    CLAIM_SECURITY_ATTRIBUTE_TYPE_INT64 = &H01
    CLAIM_SECURITY_ATTRIBUTE_TYPE_UINT64 = &H02
'   Case insensitive attribute value string by default.
'   Unless the flag CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE
'   is set indicating otherwise.
    CLAIM_SECURITY_ATTRIBUTE_TYPE_STRING = &H03
    CLAIM_SECURITY_ATTRIBUTE_TYPE_FQBN = &H04
    CLAIM_SECURITY_ATTRIBUTE_TYPE_SID = &H05
    CLAIM_SECURITY_ATTRIBUTE_TYPE_BOOLEAN = &H06
    CLAIM_SECURITY_ATTRIBUTE_TYPE_OCTET_STRING = &H10
End Enum
Public Type CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE
    Version As LongLong
    Name As LongPtr
End Type
Public Type CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE
    pValue As LongPtr '  Pointer is BYTE aligned.
    ValueLength As Long '  In bytes
End Type
Public Enum CLAIM_SECURITY_ATTRIBUTES
    CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE = &H0001
'   Attribute value is compared in a case sensitive way. It is valid with string value
'   or composite type containing string value. For other types of value, this flag
'   will be ignored. Currently, it is valid with the two types:
'   CLAIM_SECURITY_ATTRIBUTE_TYPE_STRING and CLAIM_SECURITY_ATTRIBUTE_TYPE_FQBN.
    CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE = &H0002
'  Attribute is considered only for Deny Aces.
    CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY = &H0004
'  Attribute is disabled by default.
    CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT = &H0008
'  Attribute is disabled.
    CLAIM_SECURITY_ATTRIBUTE_DISABLED = &H0010
'  Attribute is mandatory.
    CLAIM_SECURITY_ATTRIBUTE_MANDATORY = &H0020
    CLAIM_SECURITY_ATTRIBUTE_VALID_FLAGS = (CLAIM_SECURITY_ATTRIBUTE_NON_INHERITABLE Or CLAIM_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE Or CLAIM_SECURITY_ATTRIBUTE_USE_FOR_DENY_ONLY Or CLAIM_SECURITY_ATTRIBUTE_DISABLED_BY_DEFAULT Or CLAIM_SECURITY_ATTRIBUTE_DISABLED Or CLAIM_SECURITY_ATTRIBUTE_MANDATORY)
'  Reserve upper 16 bits for custom flags. These should be preserved but not
'  validated as they do not affect security in any way.
    CLAIM_SECURITY_ATTRIBUTE_CUSTOM_FLAGS = &HFFFF0000
End Enum
Public Type CLAIM_SECURITY_ATTRIBUTE_V1
    '  Name of the attribute. Case insensitive Unicode string.
    Name As LongPtr
    '  Data type of attribute.
    /*[ TypeHint(CLAIM_SECURITY_ATTRIBUTE_TYPES) ]*/ ValueType As Integer
    '  Pass 0 in a set operation and check for 0 in a get operation.
    Reserved As Integer
    ' Attribute Flags
    Flags As CLAIM_SECURITY_ATTRIBUTES
    '  Number of values.
    ValueCount As Long
    Values As LongPtr
    '  The actual value itself.
    'union {
    ' pInt64 As LongLong
    ' pUint64 As LongLong
    ' ppString As PWSTR
    ' pFqbn As PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE
    ' pOctetString As PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE
    ' } Values;
End Type
Public Type CLAIM_SECURITY_ATTRIBUTES_INFORMATION
    '  MUST BE first.
    Version As Integer
    '  Pass 0 in set operations and ignore on get operations.
    Reserved As Integer
    AttributeCount As Long
    'union {
    pAttributeV1 As LongPtr 'PCLAIM_SECURITY_ATTRIBUTE_V1
    '} Attribute;
End Type

Public Enum AceMandatoryPolicy
    SYSTEM_MANDATORY_LABEL_NO_WRITE_UP = &H1
    SYSTEM_MANDATORY_LABEL_NO_READ_UP = &H2
    SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP = &H4
    SYSTEM_MANDATORY_LABEL_VALID_MASK = (SYSTEM_MANDATORY_LABEL_NO_WRITE_UP Or SYSTEM_MANDATORY_LABEL_NO_READ_UP Or SYSTEM_MANDATORY_LABEL_NO_EXECUTE_UP)
End Enum

Public Type ACCESS_ALLOWED_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type ACCESS_DENIED_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type ACCESS_ALLOWED_CALLBACK_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type ACCESS_DENIED_CALLBACK_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Enum OBJECT_ACE_FLAGS
    ACE_OBJECT_TYPE_PRESENT = &H1
    ACE_INHERITED_OBJECT_TYPE_PRESENT = &H2
End Enum
Public Type ACCESS_ALLOWED_OBJECT_ACE
    Header As ACE_HEADER
    Mask As ADS_RIGHTS_ENUM
    Flags As OBJECT_ACE_FLAGS
    ObjectType As UUID
    InheritedObjectType As UUID
    SidStart As Long
End Type
Public Type ACCESS_DENIED_OBJECT_ACE
    Header As ACE_HEADER
    Mask As ADS_RIGHTS_ENUM
    Flags As OBJECT_ACE_FLAGS
    ObjectType As UUID
    InheritedObjectType As UUID
    SidStart As Long
End Type
Public Type ACCESS_ALLOWED_CALLBACK_OBJECT_ACE
    Header As ACE_HEADER
    Mask As ADS_RIGHTS_ENUM
    Flags As OBJECT_ACE_FLAGS
    ObjectType As UUID
    InheritedObjectType As UUID
    SidStart As Long
End Type
Public Type ACCESS_DENIED_CALLBACK_OBJECT_ACE
    Header As ACE_HEADER
    Mask As ADS_RIGHTS_ENUM
    Flags As OBJECT_ACE_FLAGS
    ObjectType As UUID
    InheritedObjectType As UUID
    SidStart As Long
End Type
Public Enum ADS_RIGHTS_ENUM
    ADS_RIGHT_DELETE = &H10000
    ADS_RIGHT_READ_CONTROL = &H20000
    ADS_RIGHT_WRITE_DAC = &H40000
    ADS_RIGHT_WRITE_OWNER = &H80000
    ADS_RIGHT_SYNCHRONIZE = &H100000
    ADS_RIGHT_ACCESS_SYSTEM_SECURITY = &H1000000
    ADS_RIGHT_GENERIC_READ = &H80000000
    ADS_RIGHT_GENERIC_WRITE = &H40000000
    ADS_RIGHT_GENERIC_EXECUTE = &H20000000
    ADS_RIGHT_GENERIC_ALL = &H10000000
    ADS_RIGHT_DS_CREATE_CHILD = &H1
    ADS_RIGHT_DS_DELETE_CHILD = &H2
    ADS_RIGHT_ACTRL_DS_LIST = &H4
    ADS_RIGHT_DS_SELF = &H8
    ADS_RIGHT_DS_READ_PROP = &H10
    ADS_RIGHT_DS_WRITE_PROP = &H20
    ADS_RIGHT_DS_DELETE_TREE = &H40
    ADS_RIGHT_DS_LIST_OBJECT = &H80
    ADS_RIGHT_DS_CONTROL_ACCESS = &H100
End Enum

Public Type SYSTEM_ALARM_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type SYSTEM_ALARM_CALLBACK_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type SYSTEM_ALARM_CALLBACK_OBJECT_ACE
    Header As ACE_HEADER
    Mask As ADS_RIGHTS_ENUM
    Flags As OBJECT_ACE_FLAGS
    ObjectType As UUID
    InheritedObjectType As UUID
    SidStart As Long
End Type
Public Type SYSTEM_ALARM_OBJECT_ACE
    Header As ACE_HEADER
    Mask As ADS_RIGHTS_ENUM
    Flags As OBJECT_ACE_FLAGS
    ObjectType As UUID
    InheritedObjectType As UUID
    SidStart As Long
End Type
Public Type SYSTEM_AUDIT_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type SYSTEM_AUDIT_CALLBACK_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type SYSTEM_AUDIT_CALLBACK_OBJECT_ACE
    Header As ACE_HEADER
    Mask As ADS_RIGHTS_ENUM
    Flags As OBJECT_ACE_FLAGS
    ObjectType As UUID
    InheritedObjectType As UUID
    SidStart As Long
End Type
Public Type SYSTEM_AUDIT_OBJECT_ACE
    Header As ACE_HEADER
    Mask As ADS_RIGHTS_ENUM
    Flags As OBJECT_ACE_FLAGS
    ObjectType As UUID
    InheritedObjectType As UUID
    SidStart As Long
End Type
Public Type SYSTEM_RESOURCE_ATTRIBUTE_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type SYSTEM_SCOPED_POLICY_ID_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type SYSTEM_MANDATORY_LABEL_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type SYSTEM_PROCESS_TRUST_LABEL_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type
Public Type SYSTEM_ACCESS_FILTER_ACE
    Header As ACE_HEADER
    Mask As LM_ACCESS_FLAGS
    SidStart As Long
End Type

[Description("Note: This should be assigned to SID_IDENTIFIER_AUTHORITY.Value(5) -- **5, not 0**")]
Public Const SECURITY_NULL_SID_AUTHORITY = 0
[Description("Note: This should be assigned to SID_IDENTIFIER_AUTHORITY.Value(5) -- **5, not 0**")]
Public Const SECURITY_WORLD_SID_AUTHORITY = 1
[Description("Note: This should be assigned to SID_IDENTIFIER_AUTHORITY.Value(5) -- **5, not 0**")]
Public Const SECURITY_LOCAL_SID_AUTHORITY = 2
[Description("Note: This should be assigned to SID_IDENTIFIER_AUTHORITY.Value(5) -- **5, not 0**")]
Public Const SECURITY_CREATOR_SID_AUTHORITY = 3
[Description("Note: This should be assigned to SID_IDENTIFIER_AUTHORITY.Value(5) -- **5, not 0**")]
Public Const SECURITY_NON_UNIQUE_AUTHORITY = 4
[Description("Note: This should be assigned to SID_IDENTIFIER_AUTHORITY.Value(5) -- **5, not 0**")]
Public Const SECURITY_NT_AUTHORITY = 5
[Description("Note: This should be assigned to SID_IDENTIFIER_AUTHORITY.Value(5) -- **5, not 0**")]
Public Const SECURITY_RESOURCE_MANAGER_AUTHORITY = 9

Public Enum SECURITY_RIDS
    
    SECURITY_NULL_RID = (&H00000000)
    SECURITY_WORLD_RID = (&H00000000)
    SECURITY_LOCAL_RID = (&H00000000)
    SECURITY_LOCAL_LOGON_RID = (&H00000001)
    SECURITY_CREATOR_OWNER_RID = (&H00000000)
    SECURITY_CREATOR_GROUP_RID = (&H00000001)
    SECURITY_CREATOR_OWNER_SERVER_RID = (&H00000002)
    SECURITY_CREATOR_GROUP_SERVER_RID = (&H00000003)
    SECURITY_CREATOR_OWNER_RIGHTS_RID = (&H00000004)
    SECURITY_DIALUP_RID = (&H00000001)
    SECURITY_NETWORK_RID = (&H00000002)
    SECURITY_BATCH_RID = (&H00000003)
    SECURITY_INTERACTIVE_RID = (&H00000004)
    SECURITY_LOGON_IDS_RID = (&H00000005)
    SECURITY_LOGON_IDS_RID_COUNT = (3)
    SECURITY_SERVICE_RID = (&H00000006)
    SECURITY_ANONYMOUS_LOGON_RID = (&H00000007)
    SECURITY_PROXY_RID = (&H00000008)
    SECURITY_ENTERPRISE_CONTROLLERS_RID = (&H00000009)
    SECURITY_SERVER_LOGON_RID = SECURITY_ENTERPRISE_CONTROLLERS_RID
    SECURITY_PRINCIPAL_SELF_RID = (&H0000000A)
    SECURITY_AUTHENTICATED_USER_RID = (&H0000000B)
    SECURITY_RESTRICTED_CODE_RID = (&H0000000C)
    SECURITY_TERMINAL_SERVER_RID = (&H0000000D)
    SECURITY_REMOTE_LOGON_RID = (&H0000000E)
    SECURITY_THIS_ORGANIZATION_RID = (&H0000000F)
    SECURITY_IUSER_RID = (&H00000011)
    SECURITY_LOCAL_SYSTEM_RID = (&H00000012)
    SECURITY_LOCAL_SERVICE_RID = (&H00000013)
    SECURITY_NETWORK_SERVICE_RID = (&H00000014)
    SECURITY_NT_NON_UNIQUE = (&H00000015)
    SECURITY_NT_NON_UNIQUE_SUB_AUTH_COUNT = (3)
    SECURITY_ENTERPRISE_READONLY_CONTROLLERS_RID = (&H00000016)
    SECURITY_BUILTIN_DOMAIN_RID = (&H00000020)
    SECURITY_WRITE_RESTRICTED_CODE_RID = (&H00000021)
    SECURITY_PACKAGE_BASE_RID = (&H00000040)
    SECURITY_PACKAGE_RID_COUNT = (2)
    SECURITY_PACKAGE_NTLM_RID = (&H0000000A)
    SECURITY_PACKAGE_SCHANNEL_RID = (&H0000000E)
    SECURITY_PACKAGE_DIGEST_RID = (&H00000015)
    SECURITY_CRED_TYPE_BASE_RID = (&H00000041)
    SECURITY_CRED_TYPE_RID_COUNT = (2)
    SECURITY_CRED_TYPE_THIS_ORG_CERT_RID = (&H00000001)
    SECURITY_MIN_BASE_RID = (&H00000050)
    SECURITY_SERVICE_ID_BASE_RID = (&H00000050)
    SECURITY_SERVICE_ID_RID_COUNT = (6)
    SECURITY_RESERVED_ID_BASE_RID = (&H00000051)
    SECURITY_APPPOOL_ID_BASE_RID = (&H00000052)
    SECURITY_APPPOOL_ID_RID_COUNT = (6)
    SECURITY_VIRTUALSERVER_ID_BASE_RID = (&H00000053)
    SECURITY_VIRTUALSERVER_ID_RID_COUNT = (6)
    SECURITY_USERMODEDRIVERHOST_ID_BASE_RID = (&H00000054)
    SECURITY_USERMODEDRIVERHOST_ID_RID_COUNT = (6)
    SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_BASE_RID = (&H00000055)
    SECURITY_CLOUD_INFRASTRUCTURE_SERVICES_ID_RID_COUNT = (6)
    SECURITY_WMIHOST_ID_BASE_RID = (&H00000056)
    SECURITY_WMIHOST_ID_RID_COUNT = (6)
    SECURITY_TASK_ID_BASE_RID = (&H00000057)
    SECURITY_NFS_ID_BASE_RID = (&H00000058)
    SECURITY_COM_ID_BASE_RID = (&H00000059)
    SECURITY_WINDOW_MANAGER_BASE_RID = (&H0000005A)
    SECURITY_RDV_GFX_BASE_RID = (&H0000005B)
    SECURITY_DASHOST_ID_BASE_RID = (&H0000005C)
    SECURITY_DASHOST_ID_RID_COUNT = (6)
    SECURITY_USERMANAGER_ID_BASE_RID = (&H0000005D)
    SECURITY_USERMANAGER_ID_RID_COUNT = (6)
    SECURITY_WINRM_ID_BASE_RID = (&H0000005E)
    SECURITY_WINRM_ID_RID_COUNT = (6)
    SECURITY_CCG_ID_BASE_RID = (&H0000005F)
    SECURITY_UMFD_BASE_RID = (&H00000060)
    SECURITY_VIRTUALACCOUNT_ID_RID_COUNT = (6)
'  Virtual account logon is not limited to inbox callers.  Reserve base RID 0x6F for application usage.
    SECURITY_MAX_BASE_RID = (&H0000006F)
    SECURITY_MAX_ALWAYS_FILTERED = (&H000003E7)
    SECURITY_MIN_NEVER_FILTERED = (&H000003E8)
    SECURITY_OTHER_ORGANIZATION_RID = (&H000003E8)
End Enum
Public Enum SECURITY_DOMAIN_RIDS
    DOMAIN_GROUP_RID_AUTHORIZATION_DATA_IS_COMPOUNDED = (&H000001F0)
    DOMAIN_GROUP_RID_AUTHORIZATION_DATA_CONTAINS_CLAIMS = (&H000001F1)
    DOMAIN_GROUP_RID_ENTERPRISE_READONLY_DOMAIN_CONTROLLERS = (&H000001F2)
    FOREST_USER_RID_MAX = (&H000001F3)
'  Well-known users ...
    DOMAIN_USER_RID_ADMIN = (&H000001F4)
    DOMAIN_USER_RID_GUEST = (&H000001F5)
    DOMAIN_USER_RID_KRBTGT = (&H000001F6)
    DOMAIN_USER_RID_DEFAULT_ACCOUNT = (&H000001F7)
    DOMAIN_USER_RID_WDAG_ACCOUNT = (&H000001F8)
    DOMAIN_USER_RID_MAX = (&H000003E7)
'  well-known groups ...
    DOMAIN_GROUP_RID_ADMINS = (&H00000200)
    DOMAIN_GROUP_RID_USERS = (&H00000201)
    DOMAIN_GROUP_RID_GUESTS = (&H00000202)
    DOMAIN_GROUP_RID_COMPUTERS = (&H00000203)
    DOMAIN_GROUP_RID_CONTROLLERS = (&H00000204)
    DOMAIN_GROUP_RID_CERT_ADMINS = (&H00000205)
    DOMAIN_GROUP_RID_SCHEMA_ADMINS = (&H00000206)
    DOMAIN_GROUP_RID_ENTERPRISE_ADMINS = (&H00000207)
    DOMAIN_GROUP_RID_POLICY_ADMINS = (&H00000208)
    DOMAIN_GROUP_RID_READONLY_CONTROLLERS = (&H00000209)
    DOMAIN_GROUP_RID_CLONEABLE_CONTROLLERS = (&H0000020A)
    DOMAIN_GROUP_RID_CDC_RESERVED = (&H0000020C)
    DOMAIN_GROUP_RID_PROTECTED_USERS = (&H0000020D)
    DOMAIN_GROUP_RID_KEY_ADMINS = (&H0000020E)
    DOMAIN_GROUP_RID_ENTERPRISE_KEY_ADMINS = (&H0000020F)
'  well-known aliases ...
    DOMAIN_ALIAS_RID_ADMINS = (&H00000220)
    DOMAIN_ALIAS_RID_USERS = (&H00000221)
    DOMAIN_ALIAS_RID_GUESTS = (&H00000222)
    DOMAIN_ALIAS_RID_POWER_USERS = (&H00000223)
    DOMAIN_ALIAS_RID_ACCOUNT_OPS = (&H00000224)
    DOMAIN_ALIAS_RID_SYSTEM_OPS = (&H00000225)
    DOMAIN_ALIAS_RID_PRINT_OPS = (&H00000226)
    DOMAIN_ALIAS_RID_BACKUP_OPS = (&H00000227)
    DOMAIN_ALIAS_RID_REPLICATOR = (&H00000228)
    DOMAIN_ALIAS_RID_RAS_SERVERS = (&H00000229)
    DOMAIN_ALIAS_RID_PREW2KCOMPACCESS = (&H0000022A)
    DOMAIN_ALIAS_RID_REMOTE_DESKTOP_USERS = (&H0000022B)
    DOMAIN_ALIAS_RID_NETWORK_CONFIGURATION_OPS = (&H0000022C)
    DOMAIN_ALIAS_RID_INCOMING_FOREST_TRUST_BUILDERS = (&H0000022D)
    DOMAIN_ALIAS_RID_MONITORING_USERS = (&H0000022E)
    DOMAIN_ALIAS_RID_LOGGING_USERS = (&H0000022F)
    DOMAIN_ALIAS_RID_AUTHORIZATIONACCESS = (&H00000230)
    DOMAIN_ALIAS_RID_TS_LICENSE_SERVERS = (&H00000231)
    DOMAIN_ALIAS_RID_DCOM_USERS = (&H00000232)
    DOMAIN_ALIAS_RID_IUSERS = (&H00000238)
    DOMAIN_ALIAS_RID_CRYPTO_OPERATORS = (&H00000239)
    DOMAIN_ALIAS_RID_CACHEABLE_PRINCIPALS_GROUP = (&H0000023B)
    DOMAIN_ALIAS_RID_NON_CACHEABLE_PRINCIPALS_GROUP = (&H0000023C)
    DOMAIN_ALIAS_RID_EVENT_LOG_READERS_GROUP = (&H0000023D)
    DOMAIN_ALIAS_RID_CERTSVC_DCOM_ACCESS_GROUP = (&H0000023E)
    DOMAIN_ALIAS_RID_RDS_REMOTE_ACCESS_SERVERS = (&H0000023F)
    DOMAIN_ALIAS_RID_RDS_ENDPOINT_SERVERS = (&H00000240)
    DOMAIN_ALIAS_RID_RDS_MANAGEMENT_SERVERS = (&H00000241)
    DOMAIN_ALIAS_RID_HYPER_V_ADMINS = (&H00000242)
    DOMAIN_ALIAS_RID_ACCESS_CONTROL_ASSISTANCE_OPS = (&H00000243)
    DOMAIN_ALIAS_RID_REMOTE_MANAGEMENT_USERS = (&H00000244)
    DOMAIN_ALIAS_RID_DEFAULT_ACCOUNT = (&H00000245)
    DOMAIN_ALIAS_RID_STORAGE_REPLICA_ADMINS = (&H00000246)
    DOMAIN_ALIAS_RID_DEVICE_OWNERS = (&H00000247)
End Enum
Public Enum SECURITY_PROCESS_TRUST_RIDS
    SECURITY_PROCESS_TRUST_AUTHORITY_RID_COUNT = (2)
    SECURITY_PROCESS_PROTECTION_TYPE_FULL_RID = (&H00000400)
    SECURITY_PROCESS_PROTECTION_TYPE_LITE_RID = (&H00000200)
    SECURITY_PROCESS_PROTECTION_TYPE_NONE_RID = (&H00000000)
    SECURITY_PROCESS_PROTECTION_LEVEL_WINTCB_RID = (&H00002000)
    SECURITY_PROCESS_PROTECTION_LEVEL_WINDOWS_RID = (&H00001000)
    SECURITY_PROCESS_PROTECTION_LEVEL_APP_RID = (&H00000800)
    SECURITY_PROCESS_PROTECTION_LEVEL_ANTIMALWARE_RID = (&H00000600)
    SECURITY_PROCESS_PROTECTION_LEVEL_AUTHENTICODE_RID = (&H00000400)
    SECURITY_PROCESS_PROTECTION_LEVEL_NONE_RID = (&H00000000)
End Enum
Public Const SECURITY_TRUSTED_INSTALLER_RID1  = 956008885
Public Const SECURITY_TRUSTED_INSTALLER_RID2  = 3418522649
Public Const SECURITY_TRUSTED_INSTALLER_RID3  = 1831038044
Public Const SECURITY_TRUSTED_INSTALLER_RID4  = 1853292631
Public Const SECURITY_TRUSTED_INSTALLER_RID5  = 2271478464
Public Enum GROUP_SID_ATTRIBUTES
    SE_GROUP_MANDATORY = (&H00000001)
    SE_GROUP_ENABLED_BY_DEFAULT = (&H00000002)
    SE_GROUP_ENABLED = (&H00000004)
    SE_GROUP_OWNER = (&H00000008)
    SE_GROUP_USE_FOR_DENY_ONLY = (&H00000010)
    SE_GROUP_INTEGRITY = (&H00000020)
    SE_GROUP_INTEGRITY_ENABLED = (&H00000040)
    SE_GROUP_LOGON_ID = (&HC0000000)
    SE_GROUP_RESOURCE = (&H20000000)
    SE_GROUP_VALID_ATTRIBUTES = (SE_GROUP_MANDATORY Or SE_GROUP_ENABLED_BY_DEFAULT Or SE_GROUP_ENABLED Or SE_GROUP_OWNER Or SE_GROUP_USE_FOR_DENY_ONLY Or SE_GROUP_LOGON_ID Or SE_GROUP_RESOURCE Or SE_GROUP_INTEGRITY Or SE_GROUP_INTEGRITY_ENABLED)
End Enum

Public Const ACCESS_REASON_TYPE_MASK  = &H00ff0000
Public Const ACCESS_REASON_DATA_MASK  = &H0000ffff
Public Const ACCESS_REASON_STAGING_MASK  = &H80000000
Public Const ACCESS_REASON_EXDATA_MASK  = &H7f000000
Public Enum ACCESS_REASON_TYPE
    AccessReasonNone = &H00000000 ' Indicate no reason for the bit. The bit may not be checked, or just no known reason.
    ' 
    '  The lowest 2 bytes store the index of the ACE that grant/deny this bit.
    '  If the corresponding access mask is zero, then it is deny ACE; otherwise,
    '  it is allow ACE.
    ' 
    AccessReasonAllowedAce = &H00010000 ' Granted a permission.
    AccessReasonDeniedAce = &H00020000 ' Denied a permission.
    AccessReasonAllowedParentAce = &H00030000 ' Granted a permission from parent ACE
    AccessReasonDeniedParentAce = &H00040000 ' Denied a permission from parent ACE
    AccessReasonNotGrantedByCape = &H00050000 ' A CAPE didn't grant the permission
    AccessReasonNotGrantedByParentCape = &H00060000 ' A CAPE from the parent's SD didn't grant the permission
    AccessReasonNotGrantedToAppContainer = &H00070000 ' This is an AppContainer and no ACE granted the permission.
    AccessReasonMissingPrivilege = &H00100000
    AccessReasonFromPrivilege = &H00200000
    AccessReasonIntegrityLevel = &H00300000
    AccessReasonOwnership = &H00400000
    AccessReasonNullDacl = &H00500000
    AccessReasonEmptyDacl = &H00600000
    AccessReasonNoSD = &H00700000
    AccessReasonNoGrant = &H00800000 ' this access bit is not granted by any ACE.
    AccessReasonTrustLabel = &H00900000 ' The trust label ACE did not grant this access.
    AccessReasonFilterAce = &H00a00000 ' The filtering ACE did not grant this access
End Enum
Public Type ACCESS_REASONS
    Data(0 To 31) As ACCESS_REASON_TYPE
End Type

Public Enum AUDIT_EVENT_TYPE
    AuditEventObjectAccess
    AuditEventDirectoryServiceAccess
End Enum

Public Enum AuditAllowFlag
    AUDIT_ALLOW_NO_PRIVILEGE = &H1
End Enum
'  DS values for Source and ObjectTypeName
[Description("📝**NOTE:** CONVERT TO ANSI")] Public Const ACCESS_DS_SOURCE_A  = "DS"
Public Const ACCESS_DS_SOURCE_W  = "DS"
[Description("📝**NOTE:** CONVERT TO ANSI")] Public Const ACCESS_DS_OBJECT_TYPE_NAME_A  = "Directory Service Object"
Public Const ACCESS_DS_OBJECT_TYPE_NAME_W  = "Directory Service Object"


Public Enum OBJECT_TYPE_LEVEL
    ACCESS_OBJECT_GUID = 0
    ACCESS_PROPERTY_SET_GUID = 1
    ACCESS_PROPERTY_GUID = 2
End Enum
Public Type OBJECT_TYPE_LIST
    /*[TypeHint(OBJECT_TYPE_LEVEL)]*/ Level As Integer
    Sbz As Integer
    ObjectType As LongPtr
End Type

Public Enum LM_ACCESS_FLAGS
    ACCESS_NONE = 0
    ACCESS_ALL = (ACCESS_READ Or ACCESS_WRITE Or ACCESS_CREATE Or ACCESS_EXEC Or ACCESS_DELETE Or ACCESS_ATRIB Or ACCESS_PERM)
    ACCESS_READ = &H01
    ACCESS_WRITE = &H02
    ACCESS_CREATE = &H04
    ACCESS_EXEC = &H08
    ACCESS_DELETE = &H10
    ACCESS_ATRIB = &H20
    ACCESS_PERM = &H40
    ACCESS_GROUP = &H8000&
End Enum

Public Enum SECURITY_DESCRIPTOR_CONTROL
    SE_OWNER_DEFAULTED = (&H0001)
    SE_GROUP_DEFAULTED = (&H0002)
    SE_DACL_PRESENT = (&H0004)
    SE_DACL_DEFAULTED = (&H0008)
    SE_SACL_PRESENT = (&H0010)
    SE_SACL_DEFAULTED = (&H0020)
    SE_DACL_AUTO_INHERIT_REQ = (&H0100)
    SE_SACL_AUTO_INHERIT_REQ = (&H0200)
    SE_DACL_AUTO_INHERITED = (&H0400)
    SE_SACL_AUTO_INHERITED = (&H0800)
    SE_DACL_PROTECTED = (&H1000)
    SE_SACL_PROTECTED = (&H2000)
    SE_RM_CONTROL_VALID = (&H4000)
    SE_SELF_RELATIVE = (&H8000&)
End Enum

Public Enum ACL_INFORMATION_CLASS
    AclRevisionInformation = 1
    AclSizeInformation
End Enum
Public Type ACL_SIZE_INFORMATION
    AceCount As Long
    AclBytesInUse As Long
    AclBytesFree As Long
End Type
Public Type ACL_REVISION_INFORMATION
    AclRevision As Long
End Type

Public Enum AceTypes
	ACCESS_MIN_MS_ACE_TYPE = (&H0)
	ACCESS_ALLOWED_ACE_TYPE = (&H0)
	ACCESS_DENIED_ACE_TYPE = (&H1)
	SYSTEM_AUDIT_ACE_TYPE = (&H2)
	SYSTEM_ALARM_ACE_TYPE = (&H3)
	ACCESS_MAX_MS_V2_ACE_TYPE = (&H3)
	ACCESS_ALLOWED_COMPOUND_ACE_TYPE = (&H4)
	ACCESS_MAX_MS_V3_ACE_TYPE = (&H4)
	ACCESS_MIN_MS_OBJECT_ACE_TYPE = (&H5)
	ACCESS_ALLOWED_OBJECT_ACE_TYPE = (&H5)
	ACCESS_DENIED_OBJECT_ACE_TYPE = (&H6)
	SYSTEM_AUDIT_OBJECT_ACE_TYPE = (&H7)
	SYSTEM_ALARM_OBJECT_ACE_TYPE = (&H8)
	ACCESS_MAX_MS_OBJECT_ACE_TYPE = (&H8)
	ACCESS_MAX_MS_V4_ACE_TYPE = (&H8)
	ACCESS_MAX_MS_ACE_TYPE = (&H8)
	ACCESS_ALLOWED_CALLBACK_ACE_TYPE = (&H9)
	ACCESS_DENIED_CALLBACK_ACE_TYPE = (&HA)
	ACCESS_ALLOWED_CALLBACK_OBJECT_ACE_TYPE = (&HB)
	ACCESS_DENIED_CALLBACK_OBJECT_ACE_TYPE = (&HC)
	SYSTEM_AUDIT_CALLBACK_ACE_TYPE = (&HD)
	SYSTEM_ALARM_CALLBACK_ACE_TYPE = (&HE)
	SYSTEM_AUDIT_CALLBACK_OBJECT_ACE_TYPE = (&HF)
	SYSTEM_ALARM_CALLBACK_OBJECT_ACE_TYPE = (&H10)
	SYSTEM_MANDATORY_LABEL_ACE_TYPE = (&H11)
	SYSTEM_RESOURCE_ATTRIBUTE_ACE_TYPE = (&H12)
	SYSTEM_SCOPED_POLICY_ID_ACE_TYPE = (&H13)
	SYSTEM_PROCESS_TRUST_LABEL_ACE_TYPE = (&H14)
	SYSTEM_ACCESS_FILTER_ACE_TYPE = (&H15)
	ACCESS_MAX_MS_V5_ACE_TYPE = (&H15)
End Enum

Public Enum ACE_FLAGS
	OBJECT_INHERIT_ACE = (&H1)
	CONTAINER_INHERIT_ACE = (&H2)
	NO_PROPAGATE_INHERIT_ACE = (&H4)
	INHERIT_ONLY_ACE = (&H8)
	INHERITED_ACE = (&H10)
	VALID_INHERIT_FLAGS = (&H1F)
    CRITICAL_ACE_FLAG = (&H20)
    SUCCESSFUL_ACCESS_ACE_FLAG = (&H40)
    FAILED_ACCESS_ACE_FLAG = (&H80)
    TRUST_PROTECTED_FILTER_ACE_FLAG = (&H40)
End Enum

Public Type ACE_HEADER
    /*[TypeHint(AceTypes)]*/ AceType As Byte
    AceFlags As Byte
    AceSize As Integer
End Type




Public Enum AclRevision
    ACL_REVISION1 = (1)
    ACL_REVISION2 = (2)
    ACL_REVISION3 = (3)
    ACL_REVISION4 = (4)
    ACL_REVISION = (2)
    ACL_REVISION_DS = (4)
End Enum

Public Enum PrivilegeSetControlFlags
    PRIVILEGE_SET_ALL_NECESSARY = &H1
End Enum
[Description("This UDT uses a fixed buffered array of the maximum number of privileges as of 2024; set count to only those used/")]
Public Type PRIVILEGE_SET
        PrivilegeCount As Long
        Control As PrivilegeSetControlFlags
        Privilege(44) As LUID_AND_ATTRIBUTES
End Type

Public Enum CheckTokenMembershipExFlags
    CTMF_INCLUDE_APPCONTAINER = 1
    CTMF_INCLUDE_LPAC = 2
End Enum
Public Enum TOKEN_INFORMATION_CLASS
	TokenUser = 1
	TokenGroups = 2
	TokenPrivileges = 3
	TokenOwner = 4
	TokenPrimaryGroup = 5
	TokenDefaultDacl = 6
	TokenSource = 7
	TokenType = 8
	TokenImpersonationLevel = 9
	TokenStatistics = 10
	TokenRestrictedSids = 11
	TokenSessionId = 12
	TokenGroupsAndPrivileges = 13
	TokenSessionReference = 14
	TokenSandBoxInert = 15
	TokenAuditPolicy = 16
	TokenOrigin = 17
	TokenElevationType = 18
	TokenLinkedToken = 19
	TokenElevation = 20
	TokenHasRestrictions = 21
	TokenAccessInformation = 22
	TokenVirtualizationAllowed = 23
	TokenVirtualizationEnabled = 24
	TokenIntegrityLevel = 25
	TokenUIAccess = 26
	TokenMandatoryPolicy = 27
	TokenLogonSid = 28
	TokenIsAppContainer = 29
	TokenCapabilities = 30
	TokenAppContainerSid = 31
	TokenAppContainerNumber = 32
	TokenUserClaimAttributes = 33
	TokenDeviceClaimAttributes = 34
	TokenRestrictedUserClaimAttributes = 35
	TokenRestrictedDeviceClaimAttributes = 36
	TokenDeviceGroups = 37
	TokenRestrictedDeviceGroups = 38
	TokenSecurityAttributes = 39
	TokenIsRestricted = 40
	TokenProcessTrustLevel = 41
	TokenPrivateNameSpace = 42
	TokenSingletonAttributes = 43
	TokenBnoIsolation = 44
	TokenChildProcessFlags = 45
	TokenIsLessPrivilegedAppContainer = 46
	TokenIsSandboxed = 47
	TokenIsAppSilo = 48
	MaxTokenInfoClass = 49
End Enum

Public Enum TOKEN_FLAGS
    TOKEN_HAS_TRAVERSE_PRIVILEGE = &H0001
    TOKEN_HAS_BACKUP_PRIVILEGE = &H0002
    TOKEN_HAS_RESTORE_PRIVILEGE = &H0004
    TOKEN_WRITE_RESTRICTED = &H0008
    TOKEN_IS_RESTRICTED = &H0010
    TOKEN_SESSION_NOT_REFERENCED = &H0020
    TOKEN_SANDBOX_INERT = &H0040
    TOKEN_HAS_IMPERSONATE_PRIVILEGE = &H0080
    SE_BACKUP_PRIVILEGES_CHECKED = &H0100
    TOKEN_VIRTUALIZE_ALLOWED = &H0200
    TOKEN_VIRTUALIZE_ENABLED = &H0400
    TOKEN_IS_FILTERED = &H0800
    TOKEN_UIACCESS = &H1000
    TOKEN_NOT_LOW = &H2000
    TOKEN_LOWBOX = &H4000
    TOKEN_HAS_OWN_CLAIM_ATTRIBUTES = &H8000&
    TOKEN_PRIVATE_NAMESPACE = &H00010000
    TOKEN_DO_NOT_USE_GLOBAL_ATTRIBS_FOR_QUERY = &H00020000
    SPECIAL_ENCRYPTED_OPEN = &H00040000
    TOKEN_NO_CHILD_PROCESS = &H00080000
    TOKEN_NO_CHILD_PROCESS_UNLESS_SECURE = &H00100000
    TOKEN_AUDIT_NO_CHILD_PROCESS = &H00200000
    TOKEN_INHERIT_SECURITY_FLAGS = (TOKEN_NO_CHILD_PROCESS Or TOKEN_NO_CHILD_PROCESS_UNLESS_SECURE Or TOKEN_AUDIT_NO_CHILD_PROCESS)
End Enum

Public Type SECURITY_DESCRIPTOR
	Revision As Byte
	Sbz1 As Byte
	Control As Integer
	Owner As LongPtr
	Group As LongPtr
	Sacl As LongPtr
	Dacl As LongPtr
End Type
Public Const SECURITY_DESCRIPTOR_REVISION  = (1)
Public Const SECURITY_DESCRIPTOR_REVISION1  = (1)
#If Win64 Then
	Public Const SECURITY_DESCRIPTOR_MIN_LENGTH  = 40
#Else
    Public Const SECURITY_DESCRIPTOR_MIN_LENGTH  = &H14
#End If



Public Enum WELL_KNOWN_SID_TYPE
	WinNullSid = 0
	WinWorldSid = 1
	WinLocalSid = 2
	WinCreatorOwnerSid = 3
	WinCreatorGroupSid = 4
	WinCreatorOwnerServerSid = 5
	WinCreatorGroupServerSid = 6
	WinNtAuthoritySid = 7
	WinDialupSid = 8
	WinNetworkSid = 9
	WinBatchSid = 10
	WinInteractiveSid = 11
	WinServiceSid = 12
	WinAnonymousSid = 13
	WinProxySid = 14
	WinEnterpriseControllersSid = 15
	WinSelfSid = 16
	WinAuthenticatedUserSid = 17
	WinRestrictedCodeSid = 18
	WinTerminalServerSid = 19
	WinRemoteLogonIdSid = 20
	WinLogonIdsSid = 21
	WinLocalSystemSid = 22
	WinLocalServiceSid = 23
	WinNetworkServiceSid = 24
	WinBuiltinDomainSid = 25
	WinBuiltinAdministratorsSid = 26
	WinBuiltinUsersSid = 27
	WinBuiltinGuestsSid = 28
	WinBuiltinPowerUsersSid = 29
	WinBuiltinAccountOperatorsSid = 30
	WinBuiltinSystemOperatorsSid = 31
	WinBuiltinPrintOperatorsSid = 32
	WinBuiltinBackupOperatorsSid = 33
	WinBuiltinReplicatorSid = 34
	WinBuiltinPreWindows2000CompatibleAccessSid = 35
	WinBuiltinRemoteDesktopUsersSid = 36
	WinBuiltinNetworkConfigurationOperatorsSid = 37
	WinAccountAdministratorSid = 38
	WinAccountGuestSid = 39
	WinAccountKrbtgtSid = 40
	WinAccountDomainAdminsSid = 41
	WinAccountDomainUsersSid = 42
	WinAccountDomainGuestsSid = 43
	WinAccountComputersSid = 44
	WinAccountControllersSid = 45
	WinAccountCertAdminsSid = 46
	WinAccountSchemaAdminsSid = 47
	WinAccountEnterpriseAdminsSid = 48
	WinAccountPolicyAdminsSid = 49
	WinAccountRasAndIasServersSid = 50
	WinNTLMAuthenticationSid = 51
	WinDigestAuthenticationSid = 52
	WinSChannelAuthenticationSid = 53
	WinThisOrganizationSid = 54
	WinOtherOrganizationSid = 55
	WinBuiltinIncomingForestTrustBuildersSid = 56
	WinBuiltinPerfMonitoringUsersSid = 57
	WinBuiltinPerfLoggingUsersSid = 58
	WinBuiltinAuthorizationAccessSid = 59
	WinBuiltinTerminalServerLicenseServersSid = 60
	WinBuiltinDCOMUsersSid = 61
	WinBuiltinIUsersSid = 62
	WinIUserSid = 63
	WinBuiltinCryptoOperatorsSid = 64
	WinUntrustedLabelSid = 65
	WinLowLabelSid = 66
	WinMediumLabelSid = 67
	WinHighLabelSid = 68
	WinSystemLabelSid = 69
	WinWriteRestrictedCodeSid = 70
	WinCreatorOwnerRightsSid = 71
	WinCacheablePrincipalsGroupSid = 72
	WinNonCacheablePrincipalsGroupSid = 73
	WinEnterpriseReadonlyControllersSid = 74
	WinAccountReadonlyControllersSid = 75
	WinBuiltinEventLogReadersGroup = 76
	WinNewEnterpriseReadonlyControllersSid = 77
	WinBuiltinCertSvcDComAccessGroup = 78
	WinMediumPlusLabelSid = 79
	WinLocalLogonSid = 80
	WinConsoleLogonSid = 81
	WinThisOrganizationCertificateSid = 82
	WinApplicationPackageAuthoritySid = 83
	WinBuiltinAnyPackageSid = 84
	WinCapabilityInternetClientSid = 85
	WinCapabilityInternetClientServerSid = 86
	WinCapabilityPrivateNetworkClientServerSid = 87
	WinCapabilityPicturesLibrarySid = 88
	WinCapabilityVideosLibrarySid = 89
	WinCapabilityMusicLibrarySid = 90
	WinCapabilityDocumentsLibrarySid = 91
	WinCapabilitySharedUserCertificatesSid = 92
	WinCapabilityEnterpriseAuthenticationSid = 93
	WinCapabilityRemovableStorageSid = 94
	WinBuiltinRDSRemoteAccessServersSid = 95
	WinBuiltinRDSEndpointServersSid = 96
	WinBuiltinRDSManagementServersSid = 97
	WinUserModeDriversSid = 98
	WinBuiltinHyperVAdminsSid = 99
	WinAccountCloneableControllersSid = 100
	WinBuiltinAccessControlAssistanceOperatorsSid = 101
	WinBuiltinRemoteManagementUsersSid = 102
	WinAuthenticationAuthorityAssertedSid = 103
	WinAuthenticationServiceAssertedSid = 104
	WinLocalAccountSid = 105
	WinLocalAccountAndAdministratorSid = 106
	WinAccountProtectedUsersSid = 107
	WinCapabilityAppointmentsSid = 108
	WinCapabilityContactsSid = 109
	WinAccountDefaultSystemManagedSid = 110
	WinBuiltinDefaultSystemManagedGroupSid = 111
	WinBuiltinStorageReplicaAdminsSid = 112
	WinAccountKeyAdminsSid = 113
	WinAccountEnterpriseKeyAdminsSid = 114
	WinAuthenticationKeyTrustSid = 115
	WinAuthenticationKeyPropertyMFASid = 116
	WinAuthenticationKeyPropertyAttestationSid = 117
	WinAuthenticationFreshKeyAuthSid = 118
	WinBuiltinDeviceOwnersSid = 119
    WinBuiltinUserModeHardwareOperatorsSid = 120
    WinBuiltinOpenSSHUsersSid = 121
End Enum

Public Declare PtrSafe Function OpenEventLogA Lib "advapi32" (ByVal lpUNCServerName As String, ByVal lpSourceName As String) As LongPtr
Public Declare PtrSafe Function OpenEventLogW Lib "advapi32" (ByVal lpUNCServerName As LongPtr, ByVal lpSourceName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenEventLog Lib "advapi32" Alias "OpenEventLogW" (ByVal lpUNCServerName As String, ByVal lpSourceName As String) As LongPtr
Public Declare PtrSafe Function RegisterEventSourceA Lib "advapi32" (ByVal lpUNCServerName As String, ByVal lpSourceName As String) As LongPtr
Public Declare PtrSafe Function RegisterEventSourceW Lib "advapi32" (ByVal lpUNCServerName As LongPtr, ByVal lpSourceName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function RegisterEventSource Lib "advapi32" Alias "RegisterEventSourceW" (ByVal lpUNCServerName As String, ByVal lpSourceName As String) As LongPtr
Public Declare PtrSafe Function GetOldestEventLogRecord Lib "advapi32" (ByVal hEventLog As LongPtr, OldestRecord As Long) As BOOL
Public Declare PtrSafe Function GetNumberOfEventLogRecords Lib "advapi32" (ByVal hEventLog As LongPtr, NumberOfRecords As Long) As BOOL
Public Declare PtrSafe Function DeregisterEventSource Lib "advapi32" (ByVal hEventLog As LongPtr) As BOOL
Public Declare PtrSafe Function NotifyChangeEventLog Lib "advapi32" (ByVal hEventLog As LongPtr, ByVal hEvent As LongPtr) As BOOL
Public Declare PtrSafe Function CloseEventLog Lib "advapi32" (ByVal hEventLog As LongPtr) As BOOL
Public Declare PtrSafe Function BackupEventLogA Lib "advapi32" (ByVal hEventLog As LongPtr, ByVal lpBackupFileName As String) As BOOL
Public Declare PtrSafe Function BackupEventLogW Lib "advapi32" (ByVal hEventLog As LongPtr, ByVal lpBackupFileName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function BackupEventLog Lib "advapi32" Alias "BackupEventLogW" (ByVal hEventLog As LongPtr, ByVal lpBackupFileName As String) As BOOL
Public Declare PtrSafe Function ClearEventLogA Lib "advapi32" (ByVal hEventLog As LongPtr, Optional ByVal lpBackupFileName As String) As BOOL
Public Declare PtrSafe Function ClearEventLogW Lib "advapi32" (ByVal hEventLog As LongPtr, Optional ByVal lpBackupFileName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ClearEventLog Lib "advapi32" Alias "ClearEventLogW" (ByVal hEventLog As LongPtr, Optional ByVal lpBackupFileName As String) As BOOL
Public Declare PtrSafe Function OpenBackupEventLogA Lib "advapi32" (ByVal lpUNCServerName As String, ByVal lpSourceName As String) As LongPtr
Public Declare PtrSafe Function OpenBackupEventLogW Lib "advapi32" (ByVal lpUNCServerName As LongPtr, ByVal lpSourceName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function OpenBackupEventLog Lib "advapi32" Alias "OpenBackupEventLogW" (ByVal lpUNCServerName As String, ByVal lpSourceName As String) As LongPtr
Public Declare PtrSafe Function ReadEventLogA Lib "advapi32" (ByVal hEventLog As LongPtr, ByVal dwReadFlags As EventLogReadFlags, ByVal dwRecordOffset As Long, lpBuffer As Any, ByVal nNumberOfBytesToRead As Long, pnBytesRead As Long, pnMinNumberOfBytesNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function ReadEventLogW Lib "advapi32" (ByVal hEventLog As LongPtr, ByVal dwReadFlags As EventLogReadFlags, ByVal dwRecordOffset As Long, lpBuffer As Any, ByVal nNumberOfBytesToRead As Long, pnBytesRead As Long, pnMinNumberOfBytesNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function ReadEventLog Lib "advapi32" Alias "ReadEventLogW" (ByVal hEventLog As LongPtr, ByVal dwReadFlags As EventLogReadFlags, ByVal dwRecordOffset As Long, lpBuffer As Any, ByVal nNumberOfBytesToRead As Long, pnBytesRead As Long, pnMinNumberOfBytesNeeded As Long) As BOOL
Public Declare PtrSafe Function ReportEventA Lib "advapi32" (ByVal hEventLog As LongPtr, [TypeHint(EventLogTypes)] ByVal wType As Integer, ByVal wCategory As Integer, ByVal dwEventID As Long, ByVal lpUserSid As LongPtr, ByVal wNumStrings As Long, ByVal dwDataSize As Long, Optional lpStrings As Any, Optional lpRawData As Any) As BOOL
Public DeclareWide PtrSafe Function ReportEventW Lib "advapi32" (ByVal hEventLog As LongPtr, [TypeHint(EventLogTypes)] ByVal wType As Integer, ByVal wCategory As Integer, ByVal dwEventID As Long, ByVal lpUserSid As LongPtr, ByVal wNumStrings As Long, ByVal dwDataSize As Long, Optional lpStrings As Any, Optional lpRawData As Any) As BOOL
Public DeclareWide PtrSafe Function ReportEvent Lib "advapi32" Alias "ReportEventW" (ByVal hEventLog As LongPtr, [TypeHint(EventLogTypes)] ByVal wType As Integer, ByVal wCategory As Integer, ByVal dwEventID As Long, ByVal lpUserSid As LongPtr, ByVal wNumStrings As Long, ByVal dwDataSize As Long, Optional lpStrings As Any, Optional lpRawData As Any) As BOOL
Public DeclareWide PtrSafe Function GetEventLogInformation Lib "advapi32" (ByVal hEventLog As LongPtr, ByVal dwInfoLevel As EventLogInfoLevels, lpBuffer As Any, ByVal cbBufSize As Long, pcbBytesNeeded As Long) As BOOL
Public Enum EventLogInfoLevels
    EVENTLOG_FULL_INFO = 0
End Enum
Public Type EVENTLOG_FULL_INFORMATION
	dwFull As Long
End Type
Public Enum EventLogReadFlags
	EVENTLOG_SEQUENTIAL_READ = &H0001
	EVENTLOG_SEEK_READ = &H0002
	EVENTLOG_FORWARDS_READ = &H0004
	EVENTLOG_BACKWARDS_READ = &H0008
End Enum
Public Enum EventLogTypes
	EVENTLOG_SUCCESS = &H0000
	EVENTLOG_ERROR_TYPE = &H0001
	EVENTLOG_WARNING_TYPE = &H0002
	EVENTLOG_INFORMATION_TYPE = &H0004
	EVENTLOG_AUDIT_SUCCESS = &H0008
	EVENTLOG_AUDIT_FAILURE = &H0010
End Enum
Public Enum EventLogWriteFlags
	EVENTLOG_START_PAIRED_EVENT = &H0001
	EVENTLOG_END_PAIRED_EVENT = &H0002
	EVENTLOG_END_ALL_PAIRED_EVENTS = &H0004
	EVENTLOG_PAIRED_EVENT_ACTIVE = &H0008
	EVENTLOG_PAIRED_EVENT_INACTIVE = &H0010
End Enum
Public Type EVENTLOGRECORD
	Length As Long ' Length of full record
	Reserved As Long ' Used by the service
	RecordNumber As Long ' Absolute record number
	TimeGenerated As Long ' Seconds since 1-1-1970
	TimeWritten As Long ' Seconds since 1-1-1970
	EventID As Long
	EventType As Integer
	NumStrings As Integer
	EventCategory As Integer
	ReservedFlags As Integer ' For use with paired events (auditing)
	ClosingRecordNumber As Long ' For use with paired events (auditing)
	StringOffset As Long ' Offset from beginning of record
	UserSidLength As Long
	UserSidOffset As Long
	DataLength As Long
	DataOffset As Long ' Offset from beginning of record
	' Then follow:
	' WCHAR SourceName[]
	' WCHAR Computername[]
	' SID   UserSid
	' WCHAR Strings[]
	' BYTE  Data[]
	' CHAR  Pad[]
	' DWORD Length;
End Type
Public Const MAXLOGICALLOGNAMESIZE = 256
Public Type EVENTSFORLOGFILE
	ulSize As Long
	szLogicalLogFile(0 To (MAXLOGICALLOGNAMESIZE - 1)) As Integer 'name of the logical file-security/application/system
	ulNumRecords As Long
	pEventLogRecords(0) As EVENTLOGRECORD
End Type
Public Type PACKEDEVENTINFO
	ulSize As Long 'total size of the structure
	ulNumEventsForLogFile As Long 'number of EventsForLogFile structure that follow
	ulOffsets(0) As Long 'the offsets from the start of this structure to the EVENTSFORLOGFILE structure
End Type

Public Enum OperationStartParamsFlags
    OPERATION_START_TRACE_CURRENT_THREAD = &H1
End Enum
Public Type OPERATION_START_PARAMETERS
    Version As Long
    OperationId As Long 'OPERATION_ID
    Flags As OperationStartParamsFlags
End Type
Public Enum OperationEndParamsFlags
    OPERATION_END_DISCARD = &H1
End Enum
Public Type OPERATION_END_PARAMETERS
    Version As Long
    OperationId As Long 'OPERATION_ID
    Flags As OperationEndParamsFlags
End Type
Public Declare PtrSafe Function OperationStart Lib "advapi32" (OperationStartParams As OPERATION_START_PARAMETERS) As BOOL
Public Declare PtrSafe Function OperationEnd Lib "advapi32" (OperationEndParams As OPERATION_END_PARAMETERS) As BOOL



'event tracing 

Public Const KERNEL_LOGGER_NAMEW = "NT Kernel Logger"
Public Const GLOBAL_LOGGER_NAMEW = "GlobalLogger"
Public Const EVENT_LOGGER_NAMEW = "EventLog"
Public Const DIAG_LOGGER_NAMEW = "DiagLog"
Public Const KERNEL_LOGGER_NAME = "NT Kernel Logger"
Public Const GLOBAL_LOGGER_NAME = "GlobalLogger"
Public Const EVENT_LOGGER_NAME = "EventLog"
Public Const DIAG_LOGGER_NAME = "DiagLog"
Public Const SYSTEM_EVENT_TYPE = 1
Public Const MAX_MOF_FIELDS = 16

Public Enum WNODE_HDR_FLAGS
    WNODE_FLAG_ALL_DATA = &H00000001  ' set for WNODE_ALL_DATA
    WNODE_FLAG_SINGLE_INSTANCE = &H00000002  ' set for WNODE_SINGLE_INSTANCE
    WNODE_FLAG_SINGLE_ITEM = &H00000004  ' set for WNODE_SINGLE_ITEM
    WNODE_FLAG_EVENT_ITEM = &H00000008  ' set for WNODE_EVENT_ITEM
'  Set if data block size is
'  identical for all instances
'  (used with  WNODE_ALL_DATA
'  only)
    WNODE_FLAG_FIXED_INSTANCE_SIZE = &H00000010
    WNODE_FLAG_TOO_SMALL = &H00000020  ' set for WNODE_TOO_SMALL
'  Set when a data provider returns a
'  WNODE_ALL_DATA in which the number of
'  instances and their names returned
'  are identical to those returned from the
'  previous WNODE_ALL_DATA query. Only data
'  blocks registered with dynamic instance
'  names should use this flag.
    WNODE_FLAG_INSTANCES_SAME = &H00000040
'  Instance names are not specified in
'  WNODE_ALL_DATA; values specified at
'  registration are used instead. Always
'  set for guids registered with static
'  instance names
    WNODE_FLAG_STATIC_INSTANCE_NAMES = &H00000080
    WNODE_FLAG_INTERNAL = &H00000100  ' Used internally by WMI
'  timestamp should not be modified by
'  a historical logger
    WNODE_FLAG_USE_TIMESTAMP = &H00000200
' #if (NTDDI_VERSION >= NTDDI_WINXP)
    WNODE_FLAG_PERSIST_EVENT = &H00000400
' #endif
    WNODE_FLAG_EVENT_REFERENCE = &H00002000
'  Set if Instance names are ansi. Only set when returning from
'  WMIQuerySingleInstanceA and WMIQueryAllDataA
    WNODE_FLAG_ANSI_INSTANCENAMES = &H00004000
'  Set if WNODE is a method call
    WNODE_FLAG_METHOD_ITEM = &H00008000&
'  Set if instance names originated from a PDO
    WNODE_FLAG_PDO_INSTANCE_NAMES = &H00010000
'  The second byte, except the first bit is used exclusively for tracing
    WNODE_FLAG_TRACED_GUID = &H00020000  ' denotes a trace
    WNODE_FLAG_LOG_WNODE = &H00040000  ' request to log Wnode
    WNODE_FLAG_USE_GUID_PTR = &H00080000  ' Guid is actually a pointer
    WNODE_FLAG_USE_MOF_PTR = &H00100000  ' MOF data are dereferenced
' #if (NTDDI_VERSION >= NTDDI_WINXP)
    WNODE_FLAG_NO_HEADER = &H00200000  ' Trace without header
' #endif
' #if (NTDDI_VERSION >= NTDDI_VISTA)
    WNODE_FLAG_SEND_DATA_BLOCK = &H00400000  ' Data Block delivery
' #endif
'  Indicates that the EVENT_TRACE_PROPERTIES struct that this is a part
'  of is at least EVENT_TRACE_PROPERTIES_V2 and contains a version field.
    WNODE_FLAG_VERSIONED_PROPERTIES = &H00800000
'  Set for events that are WNODE_EVENT_REFERENCE
'  Mask for event severity level. Level 0xff is the most severe type of event
    WNODE_FLAG_SEVERITY_MASK = &Hff000000
End Enum

Public Type WNODE_HEADER          'typedef struct WNODE_HEADER {
    BufferSize As Long            'ULONG BufferSize;
    ProviderId As Long            'ULONG ProviderId;
    HistoricalContext As LongLong 'union {
                                  '      ULONG64 HistoricalContext;
                                  '      struct {
                                  '        ULONG Version;
                                  '        ULONG Linkage;
                                  '      };
                                  '    };
    TimeStamp As LARGE_INTEGER    'union {
                                  '    HANDLE        KernelHandle;
                                  '    LARGE_INTEGER TimeStamp;
                                  '  };
    tGUID As UUID                 'GUID  Guid;
    ClientContext As Long         'ULONG ClientContext;
    Flags As WNODE_HDR_FLAGS      'ULONG Flags;
End Type
                                    '};

Public Type OFFSETINSTANCEDATAANDLENGTH
    OffsetInstanceData As Long ' Offset from beginning of WNODE_ALL_DATA
    ' to Data block for instance
    LengthInstanceData As Long ' Length of data block for instance
End Type

[Description("WARNING: Header only. Followed by unsupported format of data.")]
Public Type WNODE_ALL_DATA
    WnodeHeader As WNODE_HEADER
    DataBlockOffset As Long ' Offset from begin of WNODE to first data block
    InstanceCount As Long ' Count of instances whose data follows.
    ' Offset to an array of offsets to the instance names
    OffsetInstanceNameOffsets As Long
    
    
    
    
    ' // If WNODE_FLAG_FIXED_INSTANCE_SIZE is set in Flags then
    ' // FixedInstanceSize specifies the size of each data block. In this case
    ' // there is one ULONG followed by the data blocks.
    ' // If WNODE_FLAG_FIXED_INSTANCE_SIZE is not set
    ' // then OffsetInstanceDataAndLength
    ' // is an array of OFFSETINSTANCEDATAANDLENGTH that specifies the
    ' // offsets and lengths of the data blocks for each instance.
    ' union
    ' {
        ' ULONG FixedInstanceSize;
        ' OFFSETINSTANCEDATAANDLENGTH OffsetInstanceDataAndLength[];
                                    ' /* [InstanceCount] */
    ' } DUMMYUNIONNAME;

    ' // padding so that first data block begins on a 8 byte boundary

    ' // data blocks and instance names for all instances
    
End Type

[Description("WARNING: Variable data is a variable C-style array with a buffered guess for max needed size.")]
Public Type WNODE_SINGLE_INSTANCE
    WnodeHeader As WNODE_HEADER
    ' Offset from beginning of WNODE_SINGLE_INSTANCE
    ' to instance name. Use when
    ' WNODE_FLAG_STATIC_INSTANCE_NAMES is reset
    ' (Dynamic instance names)
    OffsetInstanceName As Long
    ' Instance index when
    ' WNODE_FLAG_STATIC_INSTANCE_NAME is set
    InstanceIndex As Long ' (Static Instance Names)
    DataBlockOffset As Long ' offset from beginning of WNODE to data block
    SizeDataBlock As Long ' Size of data block for instance
    VariableData(4095) As Byte
    ' instance names and padding so data block begins on 8 byte boundary
    ' data block
End Type
[Description("WARNING: Variable data is a variable C-style array with a buffered guess for max needed size.")]
Public Type WNODE_SINGLE_ITEM
    WnodeHeader As WNODE_HEADER
    ' Offset from beginning of WNODE_SINGLE_INSTANCE
    ' to instance name. Examine when
    ' WNODE_FLAG_STATIC_INSTANCE_NAME is reset
    ' (Dynamic instance names)
    OffsetInstanceName As Long
    ' Instance index when
    ' WNODE_FLAG_STATIC_INSTANCE_NAME
    InstanceIndex As Long '  set (Static Instance Names)
    ItemId As Long ' Item Id for data item being set
    DataBlockOffset As Long ' offset from WNODE begin to data item value
    SizeDataItem As Long ' Size of data item
    VariableData(4095) As Byte
    ' instance names and padding so data value begins on 8 byte boundary
    ' data item value
End Type

[Description("WARNING: Variable data is a variable C-style array with a buffered guess for max needed size.")]
Public Type WNODE_METHOD_ITEM
    WnodeHeader As WNODE_HEADER
    ' Offset from beginning of WNODE_METHOD_ITEM
    ' to instance name. Examine when
    ' WNODE_FLAG_STATIC_INSTANCE_NAME is reset
    ' (Dynamic instance names)
    OffsetInstanceName As Long
    ' Instance index when
    ' WNODE_FLAG_STATIC_INSTANCE_NAME
    InstanceIndex As Long '  set (Static Instance Names)
    MethodId As Long ' Method id of method being called
    DataBlockOffset As Long ' On Entry: offset from WNODE to input data
    ' On Return: offset from WNODE to input and
    '            output data blocks
    SizeDataBlock As Long ' On Entry: Size of input data, 0 if no input
    '           data
    ' On Return: Size of output data, 0 if no output
    '            data
    VariableData(4095) As Byte
    ' instance names and padding so data value begins on 8 byte boundary
    ' data item value
End Type

Public Type WNODE_EVENT_ITEM
    WnodeHeader As WNODE_HEADER
    ' Different data could be here depending upon the flags set in the
    ' WNODE_HEADER above. If the WNODE_FLAG_ALL_DATA flag is set then the
    ' contents of a WNODE_ALL_DATA  (excluding WNODE_HEADER) is here. If the
    ' WNODE_FLAG_SINGLE_INSTANCE flag is set then a WNODE_SINGLE_INSTANCE
    ' (excluding WNODE_HEADER) is here. Lastly if the  WNODE_FLAG_SINGLE_ITEM
    ' flag is set then a WNODE_SINGLE_ITEM (excluding WNODE_HEADER) is here.
End Type


[Description("WARNING: Header only. Followed by unsupported format of data.")]
Public Type WNODE_EVENT_REFERENCE
    WnodeHeader As WNODE_HEADER
    TargetGuid As UUID
    TargetDataBlockSize As Long
    ' union
    ' {
        ' ULONG TargetInstanceIndex;
        ' WCHAR TargetInstanceName[];
    ' } DUMMYUNIONNAME;
End Type

Public Type WNODE_TOO_SMALL
    WnodeHeader As WNODE_HEADER
    SizeNeeded As Long ' Size needed to build WNODE result
End Type


Public Type WMIREGGUIDW
    Guid As UUID ' Guid of data block being registered or updated
    Flags As WmiRegFlags ' Flags
    InstanceCount As Long ' Count of static instances names for the guid
    ' union
    ' {
                     ' // If WMIREG_FLAG_INSTANCE_LIST then this has the offset
                     ' // to a list of InstanceCount counted UNICODE
                     ' // strings placed end to end.
        ' ULONG InstanceNameList;

                     ' // If WMIREG_FLAG_INSTANCE_BASENAME then this has the
                     ' // offset to a single counted UNICODE string that
                     ' // has the basename for the instance names.

        ' ULONG BaseNameOffset;

                     ' // If WMIREG_FLAG_INSTANCE_PDO is set then InstanceInfo
                     ' // has the PDO whose device instance path will
                     ' // become the instance name
        ' ULONG_PTR Pdo;

                     ' // If WMIREG_FLAG_INSTANCE_REFERENCE then this points to
                     ' // a WMIREGINSTANCEREF structure.

        ' ULONG_PTR InstanceInfo;// Offset from beginning of the WMIREGINFO structure to
    ' } DUMMYUNIONNAME;
    u As LongPtr
End Type

Public Enum WmiRegFlags
    WMIREG_FLAG_EXPENSIVE = &H00000001
'  Set if instance names for this guid are specified in a static list within
'  the WMIREGINFO
    WMIREG_FLAG_INSTANCE_LIST = &H00000004
'  Set if instance names are to be static and generated by WMI using a
'  base name in the WMIREGINFO and an index
    WMIREG_FLAG_INSTANCE_BASENAME = &H00000008
'  Set if WMI should do automatic mapping of a PDO to device instance name
'  as the instance name for the guid. This flag should only be used by
'  kernel mode data providers.
    WMIREG_FLAG_INSTANCE_PDO = &H00000020
'  Note the flags WMIREG_FLAG_INSTANCE_LIST, WMIREG_FLAG_INSTANCE_BASENAME,
'  WMIREG_FLAG_INSTANCE_REFERENCE and WMIREG_FLAG_INSTANCE_PDO are mutually
'  exclusive.
'  These flags are only valid in a response to WMI_GUID_REGUPDATE
    WMIREG_FLAG_REMOVE_GUID = &H00010000  ' Remove support for  guid
    WMIREG_FLAG_RESERVED1 = &H00020000  ' Reserved by WMI
    WMIREG_FLAG_RESERVED2 = &H00040000  ' Reserved by WMI
'  Set if guid is one that is written to trace log.
'  This guid cannot be queried directly via WMI, but must be read using
'  logger apis.
    WMIREG_FLAG_TRACED_GUID = &H00080000
'  Only those Trace Guids that have this bit set can receive
'  Enable/Disable Notifications.
    WMIREG_FLAG_TRACE_CONTROL_GUID = &H00001000
'  Set if the guid is only used for firing events. Guids that can be queried
'  and that fire events should not have this bit set.
    WMIREG_FLAG_EVENT_ONLY_GUID = &H00000040
End Enum

Public Enum WMIDPREQUESTCODE
    WMI_GET_ALL_DATA = 0
    WMI_GET_SINGLE_INSTANCE = 1
    WMI_SET_SINGLE_INSTANCE = 2
    WMI_SET_SINGLE_ITEM = 3
    WMI_ENABLE_EVENTS = 4
    WMI_DISABLE_EVENTS = 5
    WMI_ENABLE_COLLECTION = 6
    WMI_DISABLE_COLLECTION = 7
    WMI_REGINFO = 8
    WMI_EXECUTE_METHOD = 9
    WMI_CAPTURE_STATE = 10
End Enum


[Description("WARNING: Header only. Followed by unsupported format of data.")]
Public Type WMIREGINFOW
    ' Size of entire WMIREGINFO structure including this ULONG
    ' and any static instance names that follow
    BufferSize As Long
    NextWmiRegInfo As Long ' Offset to next WMIREGINFO structure
    RegistryPath As Long ' Offset from beginning of WMIREGINFO structure to a
    ' counted Unicode string containing
    ' the driver registry path (under HKLM\CCS\Services)
    ' This must be filled only by kernel mode data
    ' providers
    ' Offset from beginning of WMIREGINFO structure to a
    ' counted Unicode string containing
    ' the name of resource in driver file containing MOF info
    MofResourceName As Long
    ' Count of WMIREGGUID structures immediately following
    GuidCount As Long
    ' WmiRegGuid(0 To 0) As WMIREGGUIDW ' array of GuidCount WMIREGGUID structures
    ' Variable length data including :
    '     Instance Names
End Type

Public Enum WmiGuidAndTraceLogFlags
    WMI_GUIDTYPE_TRACECONTROL = 0
    WMI_GUIDTYPE_TRACE = 1
    WMI_GUIDTYPE_DATA = 2
    WMI_GUIDTYPE_EVENT = 3
' #endif
'  Specific rights for WMI guid objects. These are available from 0x0001 to
'  0xffff (ie up to 16 rights)
    WMIGUID_QUERY = &H0001
    WMIGUID_SET = &H0002
    WMIGUID_NOTIFICATION = &H0004
    WMIGUID_READ_DESCRIPTION = &H0008
    WMIGUID_EXECUTE = &H0010
    TRACELOG_CREATE_REALTIME = &H0020
    TRACELOG_CREATE_ONDISK = &H0040
    TRACELOG_GUID_ENABLE = &H0080
    TRACELOG_ACCESS_KERNEL_LOGGER = &H0100
    TRACELOG_LOG_EVENT = &H0200  ' used on Vista and greater
    TRACELOG_CREATE_INPROC = &H0200  ' used pre-Vista
    TRACELOG_ACCESS_REALTIME = &H0400
    TRACELOG_REGISTER_GUIDS = &H0800
    TRACELOG_JOIN_GROUP = &H1000
    WMIGUID_ALL_ACCESS_WIN2K = (STANDARD_RIGHTS_READ Or WMIGUID_QUERY Or WMIGUID_SET Or WMIGUID_NOTIFICATION Or WMIGUID_READ_DESCRIPTION Or WMIGUID_EXECUTE Or TRACELOG_CREATE_REALTIME Or TRACELOG_CREATE_ONDISK Or TRACELOG_GUID_ENABLE Or TRACELOG_ACCESS_KERNEL_LOGGER Or TRACELOG_CREATE_INPROC Or TRACELOG_ACCESS_REALTIME)
    WMIGUID_ALL_ACCESS_WINXP = (WMIGUID_ALL_ACCESS_WIN2K Or SYNCHRONIZE Or TRACELOG_REGISTER_GUIDS)
    WMIGUID_ALL_ACCESS_RS1 = (WMIGUID_ALL_ACCESS_WINXP Or TRACELOG_JOIN_GROUP)
End Enum

[Description("WARNING: Windows 7 to Windows 10 prior to RS1: Use WMIGUID_ALL_ACCESS_WINXP")]
Public Const WMIGUID_ALL_ACCESS = WMIGUID_ALL_ACCESS_RS1
 
Public Const WMI_GLOBAL_LOGGER_ID = &H0001



Public Type EVENT_TRACE_PROPERTIES 'typedef struct _EVENT_TRACE_PROPERTIES {
    Wnode As WNODE_HEADER          'WNODE_HEADER Wnode;
    BufferSize As Long             'ULONG BufferSize;                   // buffer size for logging (kbytes)
    MinimumBuffers As Long         'ULONG MinimumBuffers;               // minimum to preallocate
    MaximumBuffers As Long         'ULONG MaximumBuffers;               // maximum buffers allowed
    MaximumFileSize As Long        'ULONG MaximumFileSize;              // maximum logfile size (in MBytes)
    LogFileMode As LoggerModeFlags 'ULONG LogFileMode;                  // sequential, circular
    FlushTimer As Long             'ULONG FlushTimer;                   // buffer flush timer, in seconds
    EnableFlags As EventTraceFlags 'ULONG EnableFlags;                  // trace enable flags
    FlushThreshold As Long         '  union {
                                   '    LONG AgeLimit 'MSDN: Not used.
                                   '    LONG  FlushThreshold;           // Number of buffers to fill before flushing
                                   '  } DUMMYUNIONNAME
    NumberOfBuffers As Long        'ULONG NumberOfBuffers;              // no of buffers in use
    FreeBuffers As Long            'ULONG FreeBuffers;                  // no of buffers free
    EventsLost As Long             'ULONG EventsLost;                   // event records lost
    BuffersWritten As Long         'ULONG BuffersWritten;               // no of buffers written to file
    LogBuffersLost As Long         'ULONG LogBuffersLost;               // no of logfile write failures
    RealTimeBuffersLost As Long    'ULONG RealTimeBuffersLost;          // no of rt delivery failures
    LoggerThreadId As LongPtr      'HANDLE LoggerThreadId;              // thread id of Logger
    LogFileNameOffset As Long      'ULONG LogFileNameOffset;            // Offset to LogFileName
    LoggerNameOffset As Long       'ULONG LoggerNameOffset;             // Offset to LoggerName
End Type                           '} EVENT_TRACE_PROPERTIES, *PEVENT_TRACE_PROPERTIES;

Public Type EtpKernelTrace
    tProp As EVENT_TRACE_PROPERTIES
    LoggerName(0 To 31) As Byte 'LenB(KERNEL_LOGGER_NAMEW)
    padding2(0 To 3) As Byte
End Type

Public Type EVENT_TRACE_PROPERTIES_V2       'typedef struct _EVENT_TRACE_PROPERTIES_V2 {
    Wnode As WNODE_HEADER                   'WNODE_HEADER Wnode;
    BufferSize As Long                      'ULONG BufferSize;                   // buffer size for logging (kbytes)
    MinimumBuffers As Long                  'ULONG MinimumBuffers;               // minimum to preallocate
    MaximumBuffers As Long                  'ULONG MaximumBuffers;               // maximum buffers allowed
    MaximumFileSize As Long                 'ULONG MaximumFileSize;              // maximum logfile size (in MBytes)
    LogFileMode As LoggerModeFlags          'ULONG LogFileMode;                  // sequential, circular
    FlushTimer As Long                      'ULONG FlushTimer;                   // buffer flush timer, in seconds
    EnableFlags As EventTraceFlags          'ULONG EnableFlags;                  // trace enable flags
    FlushThreshold As Long                  '  union {
                                            '    LONG AgeLimit 'MSDN: Not used.
                                            '    LONG  FlushThreshold;           // Number of buffers to fill before flushing
                                            '  } DUMMYUNIONNAME
    NumberOfBuffers As Long                 'ULONG NumberOfBuffers;              // no of buffers in use
    FreeBuffers As Long                     'ULONG FreeBuffers;                  // no of buffers free
    EventsLost As Long                      'ULONG EventsLost;                   // event records lost
    BuffersWritten As Long                  'ULONG BuffersWritten;               // no of buffers written to file
    LogBuffersLost As Long                  'ULONG LogBuffersLost;               // no of logfile write failures
    RealTimeBuffersLost As Long             'ULONG RealTimeBuffersLost;          // no of rt delivery failures
    LoggerThreadId As LongPtr               'HANDLE LoggerThreadId;              // thread id of Logger
    LogFileNameOffset As Long               'ULONG LogFileNameOffset;            // Offset to LogFileName
    LoggerNameOffset As Long                'ULONG LoggerNameOffset;             // Offset to LoggerName
                                            'union {
                                            '    struct {
                                            '      ULONG VersionNumber : 8;
                                            '    } DUMMYSTRUCTNAME;
    V2Control As Long                       '    ULONG V2Control;
                                            '  } DUMMYUNIONNAME2;
    FilterDescCount As Long                 '  ULONG                    FilterDescCount;
    FilterDesc As LongPtr 'VarPtr to struct '  PEVENT_FILTER_DESCRIPTOR FilterDesc;
                                            '  union {
                                            '    struct {
'    Wow As Long                             '      ULONG Wow : 1;
'    QpcDeltaTracking As Long                '      ULONG QpcDeltaTracking : 1;
'    LargeMdlPages As Long                   '      ULONG LargeMdlPages : 1;
'    ExcludeKernelStack As Long              '      ULONG ExcludeKernelStack : 1;
                                            '    } DUMMYSTRUCTNAME;
     V2Options As LongLong                  '    ULONG64 V2Options;
                                            '  } DUMMYUNIONNAME3;
End Type                                '} EVENT_TRACE_PROPERTIES_V2, *PEVENT_TRACE_PROP


Public Const PROCESS_TRACE_MODE_REAL_TIME = &H100
Public Const PROCESS_TRACE_MODE_RAW_TIMESTAMP = &H1000
Public Const PROCESS_TRACE_MODE_EVENT_RECORD = &H10000000

Public Enum ETW_PROVIDER_TRAIT_TYPE
    EtwProviderTraitTypeGroup  ' Provider group GUID.
    EtwProviderTraitDecodeGuid ' Decode GUID (when different from control GUID)
    EtwProviderTraitTypeMax
End Enum


Public Const EVENT_TRACE_TYPE_INFO As Byte = &H0 ' Info or point event
Public Const EVENT_TRACE_TYPE_START As Byte = &H1 ' Start event
Public Const EVENT_TRACE_TYPE_END As Byte = &H2 ' End event
Public Const EVENT_TRACE_TYPE_STOP As Byte = &H2 ' Stop event (WinEvent compatible)
Public Const EVENT_TRACE_TYPE_DC_START As Byte = &H3 ' Collection start marker
Public Const EVENT_TRACE_TYPE_DC_END As Byte = &H4 ' Collection end marker
Public Const EVENT_TRACE_TYPE_EXTENSION As Byte = &H5 ' Extension/continuation
Public Const EVENT_TRACE_TYPE_REPLY As Byte = &H6 ' Reply event
Public Const EVENT_TRACE_TYPE_DEQUEUE As Byte = &H7 ' De-queue event
Public Const EVENT_TRACE_TYPE_RESUME As Byte = &H7 ' Resume event (WinEvent compatible)
Public Const EVENT_TRACE_TYPE_CHECKPOINT As Byte = &H8 ' Generic checkpoint event
Public Const EVENT_TRACE_TYPE_SUSPEND As Byte = &H8 ' Suspend event (WinEvent compatible)
Public Const EVENT_TRACE_TYPE_WINEVT_SEND As Byte = &H9 ' Send Event (WinEvent compatible)
Public Const EVENT_TRACE_TYPE_WINEVT_RECEIVE As Byte = &HF0   ' Receive Event (WinEvent compatible)
 
Public Const EVENT_TRACE_TYPE_LOAD As Byte = &HA ' Load image
Public Const EVENT_TRACE_TYPE_TERMINATE As Byte = &HB ' Terminate Process
'  Event types for IO subsystem
Public Const EVENT_TRACE_TYPE_IO_READ As Byte = &HA
Public Const EVENT_TRACE_TYPE_IO_WRITE As Byte = &HB
Public Const EVENT_TRACE_TYPE_IO_READ_INIT As Byte = &HC
Public Const EVENT_TRACE_TYPE_IO_WRITE_INIT As Byte = &HD
Public Const EVENT_TRACE_TYPE_IO_FLUSH As Byte = &HE
Public Const EVENT_TRACE_TYPE_IO_FLUSH_INIT As Byte = &HF
Public Const EVENT_TRACE_TYPE_IO_REDIRECTED_INIT As Byte = &H10
'  Event types for Memory subsystem
Public Const EVENT_TRACE_TYPE_MM_TF As Byte = &HA ' Transition fault
Public Const EVENT_TRACE_TYPE_MM_DZF As Byte = &HB ' Demand Zero fault
Public Const EVENT_TRACE_TYPE_MM_COW As Byte = &HC ' Copy on Write
Public Const EVENT_TRACE_TYPE_MM_GPF As Byte = &HD ' Guard Page fault
Public Const EVENT_TRACE_TYPE_MM_HPF As Byte = &HE ' Hard page fault
Public Const EVENT_TRACE_TYPE_MM_AV As Byte = &HF ' Access violation
'  Event types for Network subsystem, all protocols
Public Const EVENT_TRACE_TYPE_SEND As Byte = &HA ' Send
Public Const EVENT_TRACE_TYPE_RECEIVE As Byte = &HB ' Receive
Public Const EVENT_TRACE_TYPE_CONNECT As Byte = &HC ' Connect
Public Const EVENT_TRACE_TYPE_DISCONNECT As Byte = &HD ' Disconnect
Public Const EVENT_TRACE_TYPE_RETRANSMIT As Byte = &HE ' ReTransmit
Public Const EVENT_TRACE_TYPE_ACCEPT As Byte = &HF ' Accept
Public Const EVENT_TRACE_TYPE_RECONNECT As Byte = &H10   ' ReConnect
Public Const EVENT_TRACE_TYPE_CONNFAIL As Byte = &H11   ' Fail
Public Const EVENT_TRACE_TYPE_COPY_TCP As Byte = &H12   ' Copy in PendData
Public Const EVENT_TRACE_TYPE_COPY_ARP As Byte = &H13   ' NDIS_STATUS_RESOURCES Copy
Public Const EVENT_TRACE_TYPE_ACKFULL As Byte = &H14   ' A full data ACK
Public Const EVENT_TRACE_TYPE_ACKPART As Byte = &H15   ' A Partial data ACK
Public Const EVENT_TRACE_TYPE_ACKDUP As Byte = &H16   ' A Duplicate data ACK
'  Event Types for the Header (to handle internal event headers)
Public Const EVENT_TRACE_TYPE_GUIDMAP As Byte = &HA
Public Const EVENT_TRACE_TYPE_CONFIG As Byte = &HB
Public Const EVENT_TRACE_TYPE_SIDINFO As Byte = &HC
Public Const EVENT_TRACE_TYPE_SECURITY As Byte = &HD
Public Const EVENT_TRACE_TYPE_DBGID_RSDS As Byte = &H40
'  Event Types for Registry subsystem
Public Const EVENT_TRACE_TYPE_REGCREATE As Byte = &HA ' NtCreateKey
Public Const EVENT_TRACE_TYPE_REGOPEN As Byte = &HB ' NtOpenKey
Public Const EVENT_TRACE_TYPE_REGDELETE As Byte = &HC ' NtDeleteKey
Public Const EVENT_TRACE_TYPE_REGQUERY As Byte = &HD ' NtQueryKey
Public Const EVENT_TRACE_TYPE_REGSETVALUE As Byte = &HE ' NtSetValueKey
Public Const EVENT_TRACE_TYPE_REGDELETEVALUE As Byte = &HF ' NtDeleteValueKey
Public Const EVENT_TRACE_TYPE_REGQUERYVALUE As Byte = &H10   ' NtQueryValueKey
Public Const EVENT_TRACE_TYPE_REGENUMERATEKEY As Byte = &H11   ' NtEnumerateKey
Public Const EVENT_TRACE_TYPE_REGENUMERATEVALUEKEY As Byte = &H12   ' NtEnumerateValueKey
Public Const EVENT_TRACE_TYPE_REGQUERYMULTIPLEVALUE As Byte = &H13   ' NtQueryMultipleValueKey
Public Const EVENT_TRACE_TYPE_REGSETINFORMATION As Byte = &H14   ' NtSetInformationKey
Public Const EVENT_TRACE_TYPE_REGFLUSH As Byte = &H15   ' NtFlushKey
Public Const EVENT_TRACE_TYPE_REGKCBCREATE As Byte = &H16   ' KcbCreate
Public Const EVENT_TRACE_TYPE_REGKCBDELETE As Byte = &H17   ' KcbDelete
Public Const EVENT_TRACE_TYPE_REGKCBRUNDOWNBEGIN As Byte = &H18   ' KcbRundownBegin
Public Const EVENT_TRACE_TYPE_REGKCBRUNDOWNEND As Byte = &H19   ' KcbRundownEnd
Public Const EVENT_TRACE_TYPE_REGVIRTUALIZE As Byte = &H1A   ' VirtualizeKey
Public Const EVENT_TRACE_TYPE_REGCLOSE As Byte = &H1B   ' NtClose (KeyObject)
Public Const EVENT_TRACE_TYPE_REGSETSECURITY As Byte = &H1C   ' SetSecurityDescriptor (KeyObject)
Public Const EVENT_TRACE_TYPE_REGQUERYSECURITY As Byte = &H1D   ' QuerySecurityDescriptor (KeyObject)
Public Const EVENT_TRACE_TYPE_REGCOMMIT As Byte = &H1E   ' CmKtmNotification (TRANSACTION_NOTIFY_COMMIT)
Public Const EVENT_TRACE_TYPE_REGPREPARE As Byte = &H1F   ' CmKtmNotification (TRANSACTION_NOTIFY_PREPARE)
Public Const EVENT_TRACE_TYPE_REGROLLBACK As Byte = &H20   ' CmKtmNotification (TRANSACTION_NOTIFY_ROLLBACK)
Public Const EVENT_TRACE_TYPE_REGMOUNTHIVE As Byte = &H21   ' NtLoadKey variations + system hives
'  Event types for system configuration records
Public Const EVENT_TRACE_TYPE_CONFIG_CPU As Byte = &HA ' CPU Configuration
Public Const EVENT_TRACE_TYPE_CONFIG_PHYSICALDISK As Byte = &HB ' Physical Disk Configuration
Public Const EVENT_TRACE_TYPE_CONFIG_LOGICALDISK As Byte = &HC ' Logical Disk Configuration
Public Const EVENT_TRACE_TYPE_CONFIG_NIC As Byte = &HD ' NIC Configuration
Public Const EVENT_TRACE_TYPE_CONFIG_VIDEO As Byte = &HE ' Video Adapter Configuration
Public Const EVENT_TRACE_TYPE_CONFIG_SERVICES As Byte = &HF ' Active Services
Public Const EVENT_TRACE_TYPE_CONFIG_POWER As Byte = &H10   ' ACPI Configuration
Public Const EVENT_TRACE_TYPE_CONFIG_NETINFO As Byte = &H11   ' Networking Configuration
Public Const EVENT_TRACE_TYPE_CONFIG_OPTICALMEDIA As Byte = &H12   ' Optical Media Configuration
Public Const EVENT_TRACE_TYPE_CONFIG_PHYSICALDISK_EX As Byte = &H13 ' Physical Disk Extended Configuration

Public Const EVENT_TRACE_TYPE_CONFIG_IRQ As Byte = &H15   ' IRQ assigned to devices
Public Const EVENT_TRACE_TYPE_CONFIG_PNP As Byte = &H16   ' PnP device info
Public Const EVENT_TRACE_TYPE_CONFIG_IDECHANNEL As Byte = &H17   ' Primary/Secondary IDE channel Configuration
Public Const EVENT_TRACE_TYPE_CONFIG_NUMANODE As Byte = &H18   ' Numa configuration
Public Const EVENT_TRACE_TYPE_CONFIG_PLATFORM As Byte = &H19   ' Platform Configuration
Public Const EVENT_TRACE_TYPE_CONFIG_PROCESSORGROUP As Byte = &H1A   ' Processor Group Configuration
Public Const EVENT_TRACE_TYPE_CONFIG_PROCESSORNUMBER As Byte = &H1B   ' ProcessorIndex -> ProcNumber mapping
Public Const EVENT_TRACE_TYPE_CONFIG_DPI As Byte = &H1C   ' Display DPI Configuration
Public Const EVENT_TRACE_TYPE_CONFIG_CI_INFO As Byte = &H1D   ' Display System Code Integrity Information
Public Const EVENT_TRACE_TYPE_CONFIG_MACHINEID As Byte = &H1E   ' SQM Machine Id
Public Const EVENT_TRACE_TYPE_CONFIG_DEFRAG As Byte = &H1F   ' Logical Disk Defragmenter Information
Public Const EVENT_TRACE_TYPE_CONFIG_MOBILEPLATFORM As Byte = &H20   ' Mobile Platform Configuration
Public Const EVENT_TRACE_TYPE_CONFIG_DEVICEFAMILY As Byte = &H21   ' Device Family Information
Public Const EVENT_TRACE_TYPE_CONFIG_FLIGHTID As Byte = &H22   ' Flights on the machine
Public Const EVENT_TRACE_TYPE_CONFIG_PROCESSOR As Byte = &H23   ' CentralProcessor records
Public Const EVENT_TRACE_TYPE_CONFIG_VIRTUALIZATION As Byte = &H24  ' virtualization config info
Public Const EVENT_TRACE_TYPE_CONFIG_BOOT As Byte = &H25  ' boot config info

'  Event types for Optical IO subsystem
Public Const EVENT_TRACE_TYPE_OPTICAL_IO_READ As Byte = &H37
Public Const EVENT_TRACE_TYPE_OPTICAL_IO_WRITE As Byte = &H38
Public Const EVENT_TRACE_TYPE_OPTICAL_IO_FLUSH As Byte = &H39
Public Const EVENT_TRACE_TYPE_OPTICAL_IO_READ_INIT As Byte = &H3A
Public Const EVENT_TRACE_TYPE_OPTICAL_IO_WRITE_INIT As Byte = &H3B
Public Const EVENT_TRACE_TYPE_OPTICAL_IO_FLUSH_INIT As Byte = &H3C
'  Event types for Filter Manager
Public Const EVENT_TRACE_TYPE_FLT_PREOP_INIT As Byte = &H60   ' Minifilter preop initiation
Public Const EVENT_TRACE_TYPE_FLT_POSTOP_INIT As Byte = &H61   ' Minifilter postop initiation
Public Const EVENT_TRACE_TYPE_FLT_PREOP_COMPLETION As Byte = &H62   ' Minifilter preop completion
Public Const EVENT_TRACE_TYPE_FLT_POSTOP_COMPLETION As Byte = &H63   ' Minifilter postop completion
Public Const EVENT_TRACE_TYPE_FLT_PREOP_FAILURE As Byte = &H64   ' Minifilter failed preop
Public Const EVENT_TRACE_TYPE_FLT_POSTOP_FAILURE As Byte = &H65   ' Minifilter failed postop


Public Const TRACE_LEVEL_NONE As Byte = 0   ' Tracing is not on
Public Const TRACE_LEVEL_CRITICAL As Byte = 1    ' Abnormal exit or termination
Public Const TRACE_LEVEL_FATAL As Byte = 1    ' Deprecated name for Abnormal exit or termination
Public Const TRACE_LEVEL_ERROR  As Byte = 2   ' Severe errors that need logging
Public Const TRACE_LEVEL_WARNING As Byte = 3   ' Warnings such as allocation failure
Public Const TRACE_LEVEL_INFORMATION As Byte = 4    ' Includes non-error cases(e.g.,Entry-Exit)
Public Const TRACE_LEVEL_VERBOSE As Byte = 5    ' Detailed traces from intermediate steps
Public Const TRACE_LEVEL_RESERVED6 As Byte = 6
Public Const TRACE_LEVEL_RESERVED7  As Byte = 7
Public Const TRACE_LEVEL_RESERVED8  As Byte = 8
Public Const TRACE_LEVEL_RESERVED9 As Byte = 9

Public Enum EventTraceFlags
'// Enable flags for Kernel Events
    EVENT_TRACE_FLAG_PROCESS = &H1   ' process start & end
    EVENT_TRACE_FLAG_THREAD = &H2   ' thread start & end
    EVENT_TRACE_FLAG_IMAGE_LOAD = &H4   ' image load
    EVENT_TRACE_FLAG_DISK_IO = &H100 ' physical disk IO
    EVENT_TRACE_FLAG_DISK_FILE_IO = &H200 ' requires disk IO
    EVENT_TRACE_FLAG_MEMORY_PAGE_FAULTS = &H1000 ' all page faults
    EVENT_TRACE_FLAG_MEMORY_HARD_FAULTS = &H2000 ' hard faults only
    EVENT_TRACE_FLAG_NETWORK_TCPIP = &H10000   ' tcpip send & receive
    EVENT_TRACE_FLAG_REGISTRY = &H20000   ' registry calls
    EVENT_TRACE_FLAG_DBGPRINT = &H40000   ' DbgPrint(ex) Calls
'  Enable flags for Kernel Events on Vista and above
    EVENT_TRACE_FLAG_PROCESS_COUNTERS = &H8   ' process perf counters
    EVENT_TRACE_FLAG_CSWITCH = &H10  ' context switches
    EVENT_TRACE_FLAG_DPC = &H20  ' deferred procedure calls
    EVENT_TRACE_FLAG_INTERRUPT = &H40  ' interrupts
    EVENT_TRACE_FLAG_SYSTEMCALL = &H80  ' system calls
    EVENT_TRACE_FLAG_DISK_IO_INIT = &H400 ' physical disk IO initiation
    EVENT_TRACE_FLAG_ALPC = &H100000  ' ALPC traces
    EVENT_TRACE_FLAG_SPLIT_IO = &H200000  ' split io traces (VolumeManager)
    EVENT_TRACE_FLAG_DRIVER = &H800000  ' driver delays
    EVENT_TRACE_FLAG_PROFILE = &H1000000 ' sample based profiling
    EVENT_TRACE_FLAG_FILE_IO = &H2000000 ' file IO
    EVENT_TRACE_FLAG_FILE_IO_INIT = &H4000000 ' file IO initiation
'  Enable flags for Kernel Events on Win7 and above
    EVENT_TRACE_FLAG_DISPATCHER = &H800 ' scheduler (ReadyThread)
    EVENT_TRACE_FLAG_VIRTUAL_ALLOC = &H4000 ' VM operations
'  Enable flags for Kernel Events on Win8 and above
    EVENT_TRACE_FLAG_VAMAP = &H8000& ' map/unmap (excluding images)
    EVENT_TRACE_FLAG_NO_SYSCONFIG = &H10000000   ' Do not do sys config rundown
'  Enable flags for Kernel Events on Threshold and above
    EVENT_TRACE_FLAG_JOB = &H80000   ' job start & end
    EVENT_TRACE_FLAG_DEBUG_EVENTS = &H400000  ' debugger events (break/continue/...)
'  Pre-defined Enable flags for everybody else
    EVENT_TRACE_FLAG_EXTENSION = &H80000000   ' Indicates more flags
    PERF_OB_HANDLE = &H80000040
    EVENT_TRACE_FLAG_FORWARD_WMI = &H40000000   ' Can forward to WMI
    EVENT_TRACE_FLAG_ENABLE_RESERVE = &H20000000   ' Reserved
End Enum

Public Enum LoggerModeFlags
    EVENT_TRACE_FILE_MODE_NONE = &H0          ' Logfile is off
    EVENT_TRACE_FILE_MODE_SEQUENTIAL = &H1          ' Log sequentially
    EVENT_TRACE_FILE_MODE_CIRCULAR = &H2          ' Log in circular manner
    EVENT_TRACE_FILE_MODE_APPEND = &H4          ' Append sequential log
    EVENT_TRACE_REAL_TIME_MODE = &H100        ' Real time mode on
    EVENT_TRACE_DELAY_OPEN_FILE_MODE = &H200        ' Delay opening file
    EVENT_TRACE_BUFFERING_MODE = &H400        ' Buffering mode only
    EVENT_TRACE_PRIVATE_LOGGER_MODE = &H800        ' Process Public Logger
    EVENT_TRACE_ADD_HEADER_MODE = &H1000       ' Add a logfile header
    EVENT_TRACE_USE_GLOBAL_SEQUENCE = &H4000       ' Use global sequence no.
    EVENT_TRACE_USE_LOCAL_SEQUENCE = &H8000&       ' Use local sequence no.
    EVENT_TRACE_RELOG_MODE = &H10000      ' Relogger
    EVENT_TRACE_USE_PAGED_MEMORY = &H1000000    ' Use pageable buffers
'  Logger Mode flags on XP and above
    EVENT_TRACE_FILE_MODE_NEWFILE = &H8          ' Auto-switch log file
    EVENT_TRACE_FILE_MODE_PREALLOCATE = &H20         ' Pre-allocate mode
'  Logger Mode flags on Vista and above
    EVENT_TRACE_NONSTOPPABLE_MODE = &H40         ' Session cannot be stopped (Autologger only)
    EVENT_TRACE_SECURE_MODE = &H80         ' Secure session
    EVENT_TRACE_USE_KBYTES_FOR_SIZE = &H2000       ' Use KBytes as file size unit
    EVENT_TRACE_PRIVATE_IN_PROC = &H20000      ' In process Public logger
    EVENT_TRACE_MODE_RESERVED = &H100000     ' Reserved bit, used to signal Heap/Critsec tracing
'  Logger Mode flags on Win7 and above
    EVENT_TRACE_NO_PER_PROCESSOR_BUFFERING = &H10000000   ' Use this for low frequency sessions.
'  Logger Mode flags on Win8 and above
    EVENT_TRACE_SYSTEM_LOGGER_MODE = &H2000000    ' Receive events from SystemTraceProvider
    EVENT_TRACE_ADDTO_TRIAGE_DUMP = &H80000000   ' Add ETW buffers to triage dumps
    EVENT_TRACE_STOP_ON_HYBRID_SHUTDOWN = &H400000     ' Stop on hybrid shutdown
    EVENT_TRACE_PERSIST_ON_HYBRID_SHUTDOWN = &H800000     ' Persist on hybrid shutdown
'  Logger Mode flags on Blue and above
    EVENT_TRACE_INDEPENDENT_SESSION_MODE = &H8000000    ' Independent logger session
'  Logger Mode flags on Redstone and above
    EVENT_TRACE_COMPRESSED_MODE = &H4000000    ' Compressed logger session.
End Enum

Public Enum ControlTraceCodes
    EVENT_TRACE_CONTROL_QUERY = 0
    EVENT_TRACE_CONTROL_STOP = 1
    EVENT_TRACE_CONTROL_UPDATE = 2
    EVENT_TRACE_CONTROL_FLUSH = 3  'Flushes all the buffers
    EVENT_TRACE_CONTROL_INCREMENT_FILE = 4
    EVENT_TRACE_CONTROL_CONVERT_TO_REALTIME = 5
End Enum

Public Enum WMITraceMessages
    TRACE_MESSAGE_SEQUENCE = 1   ' Message should include a sequence number
    TRACE_MESSAGE_GUID = 2   ' Message includes a GUID
    TRACE_MESSAGE_COMPONENTID = 4   ' Message has no GUID, Component ID instead
    TRACE_MESSAGE_TIMESTAMP = 8   ' Message includes a timestamp
    TRACE_MESSAGE_PERFORMANCE_TIMESTAMP = 16   ' *Obsolete* Clock type is controlled by the logger
    TRACE_MESSAGE_SYSTEMINFO = 32   ' Message includes system information TID,PID
'  Vista flags set by system to indicate provider pointer size.
    TRACE_MESSAGE_POINTER32 = &H40     ' Message logged by 32 bit provider
    TRACE_MESSAGE_POINTER64 = &H80     ' Message logged by 64 bit provider
    TRACE_MESSAGE_FLAG_MASK = &HFFFF&   ' Only the lower 16 bits of flags are placed in the message
'  those above 16 bits are reserved for local processing
'  Maximum size allowed for a single TraceMessage message.
'  N.B. This limit was increased from 8K to 64K in Win8.
    TRACE_MESSAGE_MAXIMUM_SIZE = 65536 '(64 * 1024)
End Enum

Public Const EVENT_TRACE_USE_PROCTIME = &H1   'ProcessorTime field is valid
Public Const EVENT_TRACE_USE_NOCPUTIME = &H2  'No Kernel/User/Processor Times

Public Enum TraceHeaderFlags
    TRACE_HEADER_FLAG_USE_TIMESTAMP = &H200
    TRACE_HEADER_FLAG_TRACED_GUID = &H20000      ' denotes a trace
    TRACE_HEADER_FLAG_LOG_WNODE = &H40000      ' request to log Wnode
    TRACE_HEADER_FLAG_USE_GUID_PTR = &H80000      ' Guid is actually a pointer
    TRACE_HEADER_FLAG_USE_MOF_PTR = &H100000     ' MOF data are dereferenced
End Enum

'  Keywords to be used for the System ALPC Provider.
Public Const SYSTEM_ALPC_KW_GENERAL  As LongLong = &H0000000000000001
'  Keywords to be used for the System Config Provider.
Public Const SYSTEM_CONFIG_KW_SYSTEM  As LongLong = &H0000000000000001
Public Const SYSTEM_CONFIG_KW_GRAPHICS  As LongLong = &H0000000000000002
Public Const SYSTEM_CONFIG_KW_STORAGE  As LongLong = &H0000000000000004
Public Const SYSTEM_CONFIG_KW_NETWORK  As LongLong = &H0000000000000008
Public Const SYSTEM_CONFIG_KW_SERVICES  As LongLong = &H0000000000000010
Public Const SYSTEM_CONFIG_KW_PNP  As LongLong = &H0000000000000020
Public Const SYSTEM_CONFIG_KW_OPTICAL  As LongLong = &H0000000000000040
'  Keywords to be used for the System CPU Provider.
Public Const SYSTEM_CPU_KW_CONFIG  As LongLong = &H0000000000000001
Public Const SYSTEM_CPU_KW_CACHE_FLUSH  As LongLong = &H0000000000000002
Public Const SYSTEM_CPU_KW_SPEC_CONTROL  As LongLong = &H0000000000000004
'  Keywords to be used for the System Hypervisor Provider.
Public Const SYSTEM_HYPERVISOR_KW_PROFILE  As LongLong = &H0000000000000001
Public Const SYSTEM_HYPERVISOR_KW_CALLOUTS  As LongLong = &H0000000000000002
Public Const SYSTEM_HYPERVISOR_KW_VTL_CHANGE  As LongLong = &H0000000000000004
'  Keywords to be used for the System Interrupt Provider.
Public Const SYSTEM_INTERRUPT_KW_GENERAL  As LongLong = &H0000000000000001
Public Const SYSTEM_INTERRUPT_KW_CLOCK_INTERRUPT  As LongLong = &H0000000000000002
Public Const SYSTEM_INTERRUPT_KW_DPC  As LongLong = &H0000000000000004
Public Const SYSTEM_INTERRUPT_KW_DPC_QUEUE  As LongLong = &H0000000000000008
Public Const SYSTEM_INTERRUPT_KW_WDF_DPC  As LongLong = &H0000000000000010
Public Const SYSTEM_INTERRUPT_KW_WDF_INTERRUPT  As LongLong = &H0000000000000020
Public Const SYSTEM_INTERRUPT_KW_IPI  As LongLong = &H0000000000000040
'  Keywords to be used for the System IO Provider.
Public Const SYSTEM_IO_KW_DISK  As LongLong = &H0000000000000001
Public Const SYSTEM_IO_KW_DISK_INIT  As LongLong = &H0000000000000002
Public Const SYSTEM_IO_KW_FILENAME  As LongLong = &H0000000000000004
Public Const SYSTEM_IO_KW_SPLIT  As LongLong = &H0000000000000008
Public Const SYSTEM_IO_KW_FILE  As LongLong = &H0000000000000010
Public Const SYSTEM_IO_KW_OPTICAL  As LongLong = &H0000000000000020
Public Const SYSTEM_IO_KW_OPTICAL_INIT  As LongLong = &H0000000000000040
Public Const SYSTEM_IO_KW_DRIVERS  As LongLong = &H0000000000000080
Public Const SYSTEM_IO_KW_CC  As LongLong = &H0000000000000100
Public Const SYSTEM_IO_KW_NETWORK  As LongLong = &H0000000000000200
'  Keywords to be used for the System IoFilter Provider.
Public Const SYSTEM_IOFILTER_KW_GENERAL  As LongLong = &H0000000000000001
Public Const SYSTEM_IOFILTER_KW_INIT  As LongLong = &H0000000000000002
Public Const SYSTEM_IOFILTER_KW_FASTIO  As LongLong = &H0000000000000004
Public Const SYSTEM_IOFILTER_KW_FAILURE  As LongLong = &H0000000000000008
'  Keywords to be used for the System SpinLock Provider.
Public Const SYSTEM_LOCK_KW_SPINLOCK  As LongLong = &H0000000000000001
Public Const SYSTEM_LOCK_KW_SPINLOCK_COUNTERS  As LongLong = &H0000000000000002
Public Const SYSTEM_LOCK_KW_SYNC_OBJECTS  As LongLong = &H0000000000000004
'  Keywords to be used for the System Memory Provider.
Public Const SYSTEM_MEMORY_KW_GENERAL  As LongLong = &H0000000000000001
Public Const SYSTEM_MEMORY_KW_HARD_FAULTS  As LongLong = &H0000000000000002
Public Const SYSTEM_MEMORY_KW_ALL_FAULTS  As LongLong = &H0000000000000004
Public Const SYSTEM_MEMORY_KW_POOL  As LongLong = &H0000000000000008
Public Const SYSTEM_MEMORY_KW_MEMINFO  As LongLong = &H0000000000000010
Public Const SYSTEM_MEMORY_KW_PFSECTION  As LongLong = &H0000000000000020
Public Const SYSTEM_MEMORY_KW_MEMINFO_WS  As LongLong = &H0000000000000040
Public Const SYSTEM_MEMORY_KW_HEAP  As LongLong = &H0000000000000080
Public Const SYSTEM_MEMORY_KW_WS  As LongLong = &H0000000000000100
Public Const SYSTEM_MEMORY_KW_CONTMEM_GEN  As LongLong = &H0000000000000200
Public Const SYSTEM_MEMORY_KW_VIRTUAL_ALLOC  As LongLong = &H0000000000000400
Public Const SYSTEM_MEMORY_KW_FOOTPRINT  As LongLong = &H0000000000000800
Public Const SYSTEM_MEMORY_KW_SESSION  As LongLong = &H0000000000001000
Public Const SYSTEM_MEMORY_KW_REFSET  As LongLong = &H0000000000002000
Public Const SYSTEM_MEMORY_KW_VAMAP  As LongLong = &H0000000000004000
Public Const SYSTEM_MEMORY_KW_NONTRADEABLE  As LongLong = &H0000000000008000^
'  Keywords to be used for the System Object Provider.
Public Const SYSTEM_OBJECT_KW_GENERAL  As LongLong = &H0000000000000001
Public Const SYSTEM_OBJECT_KW_HANDLE  As LongLong = &H0000000000000002
'  Keywords to be used for the System Power Provider.
Public Const SYSTEM_POWER_KW_GENERAL  As LongLong = &H0000000000000001
Public Const SYSTEM_POWER_KW_HIBER_RUNDOWN  As LongLong = &H0000000000000002
Public Const SYSTEM_POWER_KW_PROCESSOR_IDLE  As LongLong = &H0000000000000004
Public Const SYSTEM_POWER_KW_IDLE_SELECTION  As LongLong = &H0000000000000008
Public Const SYSTEM_POWER_KW_PPM_EXIT_LATENCY  As LongLong = &H0000000000000010
'  Keywords to be used for the System Process Provider.
Public Const SYSTEM_PROCESS_KW_GENERAL  As LongLong = &H0000000000000001
Public Const SYSTEM_PROCESS_KW_INSWAP  As LongLong = &H0000000000000002
Public Const SYSTEM_PROCESS_KW_FREEZE  As LongLong = &H0000000000000004
Public Const SYSTEM_PROCESS_KW_PERF_COUNTER  As LongLong = &H0000000000000008
Public Const SYSTEM_PROCESS_KW_WAKE_COUNTER  As LongLong = &H0000000000000010
Public Const SYSTEM_PROCESS_KW_WAKE_DROP  As LongLong = &H0000000000000020
Public Const SYSTEM_PROCESS_KW_WAKE_EVENT  As LongLong = &H0000000000000040
Public Const SYSTEM_PROCESS_KW_DEBUG_EVENTS  As LongLong = &H0000000000000080
Public Const SYSTEM_PROCESS_KW_DBGPRINT  As LongLong = &H0000000000000100
Public Const SYSTEM_PROCESS_KW_JOB  As LongLong = &H0000000000000200
Public Const SYSTEM_PROCESS_KW_WORKER_THREAD  As LongLong = &H0000000000000400
Public Const SYSTEM_PROCESS_KW_THREAD  As LongLong = &H0000000000000800
Public Const SYSTEM_PROCESS_KW_LOADER  As LongLong = &H0000000000001000
'  Keywords to be used for the System Profile Provider.
Public Const SYSTEM_PROFILE_KW_GENERAL  As LongLong = &H0000000000000001
Public Const SYSTEM_PROFILE_KW_PMC_PROFILE  As LongLong = &H0000000000000002
'  Keywords to be used for the System Registry Provider.
Public Const SYSTEM_REGISTRY_KW_GENERAL  As LongLong = &H0000000000000001
Public Const SYSTEM_REGISTRY_KW_HIVE  As LongLong = &H0000000000000002
Public Const SYSTEM_REGISTRY_KW_NOTIFICATION  As LongLong = &H0000000000000004
'  Keywords to be used for the System Scheduler Provider.
Public Const SYSTEM_SCHEDULER_KW_XSCHEDULER  As LongLong = &H0000000000000001
Public Const SYSTEM_SCHEDULER_KW_DISPATCHER  As LongLong = &H0000000000000002
Public Const SYSTEM_SCHEDULER_KW_KERNEL_QUEUE  As LongLong = &H0000000000000004
Public Const SYSTEM_SCHEDULER_KW_SHOULD_YIELD  As LongLong = &H0000000000000008
Public Const SYSTEM_SCHEDULER_KW_ANTI_STARVATION  As LongLong = &H0000000000000010
Public Const SYSTEM_SCHEDULER_KW_LOAD_BALANCER  As LongLong = &H0000000000000020
Public Const SYSTEM_SCHEDULER_KW_AFFINITY  As LongLong = &H0000000000000040
Public Const SYSTEM_SCHEDULER_KW_PRIORITY  As LongLong = &H0000000000000080
Public Const SYSTEM_SCHEDULER_KW_IDEAL_PROCESSOR  As LongLong = &H0000000000000100
Public Const SYSTEM_SCHEDULER_KW_CONTEXT_SWITCH  As LongLong = &H0000000000000200
Public Const SYSTEM_SCHEDULER_KW_COMPACT_CSWITCH  As LongLong = &H0000000000000400
'  Keywords to be used for the System Syscall Provider.
Public Const SYSTEM_SYSCALL_KW_GENERAL  As LongLong = &H0000000000000001
'  Keywords to be used for the System Timer Provider.
Public Const SYSTEM_TIMER_KW_GENERAL  As LongLong = &H0000000000000001
Public Const SYSTEM_TIMER_KW_CLOCK_TIMER  As LongLong = &H0000000000000002


Public Enum ETW_COMPRESSION_RESUMPTION_MODE
    EtwCompressionModeRestart = 0
    EtwCompressionModeNoDisable = 1
    EtwCompressionModeNoRestart = 2
End Enum

'Trace header for all legacy events.
'(WHO DESIGNED THIS GARBAGE?)

Public Type EVENT_TRACE_HEADER 'typedef struct _EVENT_TRACE_HEADER {        // overlays WNODE_HEADER
    size As Integer                'USHORT          Size;                   // Size of entire record
                                   'union {
    FieldTypeFlags As Integer      '    USHORT      FieldTypeFlags;         // Indicates valid fields
                                    'struct {
                                    '           UCHAR   HeaderType              // Header type - internal use only
                                    '           UCHAR   MarkerFlags;            // Marker - internal use only
                                    '        } DUMMYSTRUCTNAME;
                                    '    } DUMMYUNIONNAME;
                                    'union {
    'VersionOrTypeLevelVersion As Long '   ULONG       Version;
                                    '      struct {
    uType As Byte                   '          UCHAR   Type;                   // event type
    uLevel As Byte                  '          UCHAR   Level;                  // trace instrumentation level
    wVersion As Integer             '          USHORT  Version;                // version of trace record
                                    '      } Class;
                                    '  } DUMMYUNIONNAME2;
    ThreadID As Long                'ULONG           ThreadId;               // Thread Id
    ProcessID As Long               'ULONG           ProcessId;              // Process Id
    TimeStamp As LARGE_INTEGER      'LARGE_INTEGER   TimeStamp;              // time when event happens
                                    'union {
    tGUID As UUID                   '    GUID        Guid;                   // Guid that identifies event
                                    '    ULONGLONG   GuidPtr;                // use with WNODE_FLAG_USE_GUID_PTR
                                    '} DUMMYUNIONNAME3;
                                    'union {
    Value1 As Long                  '    struct {
    Value2 As Long                  '        ULONG   KernelTime;             // Kernel Mode CPU ticks
                                    '        ULONG   UserTime;               // User mode CPU ticks
                                    '    } DUMMYSTRUCTNAME;
                                    '    ULONG64     ProcessorTime;          // Processor Clock
                                    '    struct {
                                    '        ULONG   ClientContext;          // Reserved
                                    '        ULONG   Flags;                  // Event Flags
                                    '    } DUMMYSTRUCTNAME2;
                                    '} DUMMYUNIONNAME4;
End Type  '48 Bytes, qword aligned  '} EVENT_TRACE_HEADER, *PEVENT_TRACE_HEADER;
Public Type EVENT_TRACE             'typedef struct _EVENT_TRACE {
    Header As EVENT_TRACE_HEADER    '    EVENT_TRACE_HEADER      Header;             // Event trace header
    InstanceId As Long              '    ULONG                   InstanceId;         // Instance Id of this event
    ParentInstanceId As Long        '    ULONG                   ParentInstanceId;   // Parent Instance Id.
    ParentGuid As UUID              '    GUID                    ParentGuid;         // Parent Guid;
    MofData As LongPtr              '    PVOID                   MofData;            // Pointer to Variable Data
    MofLength As Long               '    ULONG                   MofLength;          // Variable Datablock Length
                                    '    union {
    Context As Long                 '        ULONG               ClientContext;
                                    '        ETW_BUFFER_CONTEXT  BufferContext;
End Type                            '} EVENT_TRACE, *PEVENT_TRACE;

Public Enum TraceDataTypes
    ETW_NULL_TYPE_VALUE = 0
    ETW_OBJECT_TYPE_VALUE = 1
    ETW_STRING_TYPE_VALUE = 2
    ETW_SBYTE_TYPE_VALUE = 3
    ETW_BYTE_TYPE_VALUE = 4
    ETW_INT16_TYPE_VALUE = 5
    ETW_UINT16_TYPE_VALUE = 6
    ETW_INT32_TYPE_VALUE = 7
    ETW_UINT32_TYPE_VALUE = 8
    ETW_INT64_TYPE_VALUE = 9
    ETW_UINT64_TYPE_VALUE = 10
    ETW_CHAR_TYPE_VALUE = 11
    ETW_SINGLE_TYPE_VALUE = 12
    ETW_DOUBLE_TYPE_VALUE = 13
    ETW_BOOLEAN_TYPE_VALUE = 14
    ETW_DECIMAL_TYPE_VALUE = 15
'  Extended types
    ETW_GUID_TYPE_VALUE = 101
    ETW_ASCIICHAR_TYPE_VALUE = 102
    ETW_ASCIISTRING_TYPE_VALUE = 103
    ETW_COUNTED_STRING_TYPE_VALUE = 104
    ETW_POINTER_TYPE_VALUE = 105
    ETW_SIZET_TYPE_VALUE = 106
    ETW_HIDDEN_TYPE_VALUE = 107
    ETW_BOOL_TYPE_VALUE = 108
    ETW_COUNTED_ANSISTRING_TYPE_VALUE = 109
    ETW_REVERSED_COUNTED_STRING_TYPE_VALUE = 110
    ETW_REVERSED_COUNTED_ANSISTRING_TYPE_VALUE = 111
    ETW_NON_NULL_TERMINATED_STRING_TYPE_VALUE = 112
    ETW_REDUCED_ANSISTRING_TYPE_VALUE = 113
    ETW_REDUCED_STRING_TYPE_VALUE = 114
    ETW_SID_TYPE_VALUE = 115
    ETW_VARIANT_TYPE_VALUE = 116
    ETW_PTVECTOR_TYPE_VALUE = 117
    ETW_WMITIME_TYPE_VALUE = 118
    ETW_DATETIME_TYPE_VALUE = 119
    ETW_REFRENCE_TYPE_VALUE = 120
End Enum

Public Type EVENT_INSTANCE_INFO
    RegHandle As LongPtr
    InstanceId As Long
End Type

Public Type TRACE_GUID_REGISTRATION
    GUID As LongPtr 'LPCUUID ' Guid of data block being registered or updated.
    RegHandle As LongPtr ' Guid Registration Handle is returned.
End Type

Public Type TRACE_GUID_PROPERTIES
    GUID As UUID
    GuidType As Long
    LoggerId As Long
    EnableLevel As Long
    EnableFlags As Long
    IsEnable As Boolean
End Type


Public Enum TraceProviderFlags
    TRACE_PROVIDER_FLAG_LEGACY = (&H00000001)
    TRACE_PROVIDER_FLAG_PRE_ENABLE = (&H00000002)
End Enum
Public Type TRACE_ENABLE_INFO
    IsEnabled As Long
    Level As Byte
    Reserved1 As Byte
    LoggerId As Integer
    EnableProperty As Long
    Reserved2 As Long
    MatchAnyKeyword As LongLong
    MatchAllKeyword As LongLong
End Type
Public Type TRACE_PROVIDER_INSTANCE_INFO
    NextOffset As Long
    EnableCount As Long
    Pid As Long
    Flags As TraceProviderFlags
End Type

Public Type TRACE_GUID_INFO
    InstanceCount As Long
    Reserved As Long
End Type

[Description("Description is a variable C-style array. Buffer will likely be less.")]
Public Type PROFILE_SOURCE_INFO
    NextEntryOffset As Long
    Source As Long
    MinInterval As Long
    MaxInterval As Long
    Reserved As LongLong
    Description(200) As Integer
End Type

Public Enum ETW_PMC_COUNTER_OWNER_TYPE
    EtwPmcOwnerFree = 0
    EtwPmcOwnerUntagged = 1
    EtwPmcOwnerTagged = 2
    EtwPmcOwnerTaggedWithSource = 3
End Enum
Public Type ETW_PMC_COUNTER_OWNER
    OwnerType As ETW_PMC_COUNTER_OWNER_TYPE
    ProfileSource As Long
    OwnerTag As Long
End Type
[Description("Description is a variable C-style array. Buffer will likely be more.")]
Public Type ETW_PMC_COUNTER_OWNERSHIP_STATUS
    ProcessorNumber As Long
    NumberOfCounters As Long
    CounterOwners(0) As ETW_PMC_COUNTER_OWNER
End Type

Public Type ETW_PMC_SESSION_INFO
    NextEntryOffset As Long
    LoggerId As Integer
    Reserved As Integer
    ProfileSourceCount As Long
    HookIdCount As Long
    ' These two fields follow as a ULONG blob after the initial header.
    ' ULONG ProfileSources[]; // Count indicated by ProfileSourceCount
    ' USHORT HookIds[]; // Count indicated by HookIdCount
End Type

Public Type ETW_BUFFER_HEADER
    Reserved1(0 To 3) As Long
    TimeStamp As LARGE_INTEGER ' Time of flush
    Reserved2(0 To 3) As Long
    ClientContext As ETW_BUFFER_CONTEXT
    Reserved3 As Long
    FilledBytes As Long ' Number of bytes written to the buffer.  Essentially the filled length of the buffer.
    Reserved4(0 To 4) As Long
End Type

Public Type ETW_BUFFER_CALLBACK_INFORMATION
    TraceHandle As LongLong
    LogfileHeader As TRACE_LOGFILE_HEADER
    BuffersRead As Long
End Type

Public Enum ETW_PROCESS_TRACE_MODES
    ETW_PROCESS_TRACE_MODE_NONE = 0
    ETW_PROCESS_TRACE_MODE_RAW_TIMESTAMP = &H00000001
End Enum

Public Delegate Function EventTraceBufferCallbackA (Logfile As EVENT_TRACE_LOGFILEA) As Long
Public Delegate Function EventTraceBufferCallbackW (Logfile As EVENT_TRACE_LOGFILEW) As Long
Public Delegate Function EventTraceBufferCallback (Logfile As EVENT_TRACE_LOGFILE) As Long
Public Delegate Sub EventCallback (pEvent As EVENT_TRACE)
Public Delegate Sub EventRecordCallback (EventRecord As EVENT_RECORD)
Public Delegate Function EtwBufferCallback (ByVal Buffer As LongPtr, ByVal BufferSize As Long, ConsumerInfo As ETW_BUFFER_CALLBACK_INFORMATION, ByVal CallbackContext As LongPtr) As BOOL
Public Delegate Sub EtwBufferCompletionCallback (ByVal Buffer As LongPtr, ByVal CallbackContext As LongPtr)


' Public Type ETW_OPEN_TRACE_OPTIONS
'     ProcessTraceModes As ETW_PROCESS_TRACE_MODES
'     ' This callback will be called for each event in time order.
'     ' If left NULL, all event playback code will be bypassed.
'     EventCallback As EventRecordCallback 'PEVENT_RECORD_CALLBACK
'     EventCallbackContext As LongPtr 'void*
'     ' This callback will get called once buffer processing is complete.
'     BufferCallback As LongPtr 'PETW_BUFFER_CALLBACK
'     BufferCallbackContext As LongPtr 'void*
' End Type
Public Type ETW_OPEN_TRACE_OPTIONS
    ProcessTraceModes As ETW_PROCESS_TRACE_MODES
    ' This callback will be called for each event in time order.
    ' If left NULL, all event playback code will be bypassed.
    EventCallback As LongPtr 'PEVENT_RECORD_CALLBACK
    EventCallbackContext As LongPtr 'void*
    ' This callback will get called once buffer processing is complete.
    BufferCallback As LongPtr 'PETW_BUFFER_CALLBACK
    BufferCallbackContext As LongPtr 'void*
End Type


Public Type EVENT_FILTER_DESCRIPTOR
    ptr As LongLong
    size As Long
    type As EventFilterType
End Type

Public Const ENABLE_TRACE_PARAMETERS_VERSION = 1
Public Const ENABLE_TRACE_PARAMETERS_VERSION_2 = 2
Public Type ENABLE_TRACE_PARAMETERS_V1         'typedef struct _ENABLE_TRACE_PARAMETERS {
    Version As Long                         '    ULONG                    Version;
    EnableProperty As EnablePropertyFlags   '    ULONG                    EnableProperty;
    ControlFlags As Long                    '    ULONG                    ControlFlags;
    SourceId As UUID                        '    GUID                     SourceId;
    EnableFilterDesc As LongPtr             '    PEVENT_FILTER_DESCRIPTOR EnableFilterDesc;
End Type
Public Type ENABLE_TRACE_PARAMETERS         'typedef struct _ENABLE_TRACE_PARAMETERS {
    Version As Long                         '    ULONG                    Version;
    EnableProperty As EnablePropertyFlags   '    ULONG                    EnableProperty;
    ControlFlags As Long                    '    ULONG                    ControlFlags;
    SourceId As UUID                        '    GUID                     SourceId;
    EnableFilterDesc As LongPtr             '    PEVENT_FILTER_DESCRIPTOR EnableFilterDesc;
    FilterDescCount As Long                 '    ULONG                    FilterDescCount;
End Type                                    '} ENABLE_TRACE_PARAMETERS, *PENABLE_TRACE_PARAMETERS;


Public Enum EnablePropertyFlags
        EVENT_ENABLE_PROPERTY_SID = &H1
        EVENT_ENABLE_PROPERTY_TS_ID = &H2
        EVENT_ENABLE_PROPERTY_STACK_TRACE = &H4
        EVENT_ENABLE_PROPERTY_PSM_KEY = &H8
        EVENT_ENABLE_PROPERTY_IGNORE_KEYWORD_0 = &H10
        EVENT_ENABLE_PROPERTY_PROVIDER_GROUP = &H20
        EVENT_ENABLE_PROPERTY_ENABLE_KEYWORD_0 = &H40
        EVENT_ENABLE_PROPERTY_PROCESS_START_KEY = &H80
        EVENT_ENABLE_PROPERTY_EVENT_KEY = &H100
        EVENT_ENABLE_PROPERTY_EXCLUDE_INPRIVATE = &H200
        EVENT_ENABLE_PROPERTY_ENABLE_SILOS = &H400
        EVENT_ENABLE_PROPERTY_SOURCE_CONTAINER_TRACKING = &H800
End Enum
Public Enum EventControlCodes
    EVENT_CONTROL_CODE_DISABLE_PROVIDER = 0
    EVENT_CONTROL_CODE_ENABLE_PROVIDER = 1
    EVENT_CONTROL_CODE_CAPTURE_STATE = 2
End Enum

Public Type TRACE_LOGFILE_HEADER           'typedef struct _TRACE_LOGFILE_HEADER {
    BufferSize As Long                      '    ULONG           BufferSize;         // Logger buffer size in Kbytes
                                            '    union {
    Version As Long                         '        ULONG       Version;            // Logger version
                                            '        struct {
                                            '            UCHAR   MajorVersion;
                                            '            UCHAR   MinorVersion;
                                            '            UCHAR   SubVersion;
                                            '            UCHAR   SubMinorVersion;
                                            '        } VersionDetail;
                                            '    } DUMMYUNIONNAME;
    ProviderVersion As Long                 '    ULONG           ProviderVersion;    // defaults to NT version
    NumberOfProcessors As Long              '    ULONG           NumberOfProcessors; // Number of Processors
    EndTime As LARGE_INTEGER                '    LARGE_INTEGER   EndTime;            // Time when logger stops
    TimerResolution As Long                 '    ULONG           TimerResolution;    // assumes timer is constant!!!
    MaximumFileSize As Long                 '    ULONG           MaximumFileSize;    // Maximum in Mbytes
    LogFileMode As LoggerModeFlags          '    ULONG           LogFileMode;        // specify logfile mode
    BuffersWritten As Long                  '    ULONG           BuffersWritten;     // used to file start of Circular File
                                            '    union {
                                            '        GUID LogInstanceGuid;           // For RealTime Buffer Delivery
                                            '        struct {
    StartBuffers As Long                    '            ULONG   StartBuffers;       // Count of buffers written at start.
    PointerSize As Long                     '            ULONG   PointerSize;        // Size of pointer type in bits
    EventsLost As Long                      '            ULONG   EventsLost;         // Events lost during log session
    CpuSpeedInMhz As Long                   '            ULONG   CpuSpeedInMHz;      // Cpu Speed in MHz
                                            '        } DUMMYSTRUCTNAME;
                                            '    } DUMMYUNIONNAME2;
                                            '#if defined(_WMIKM_)
                                            '    PWCHAR          LoggerName;
                                            '    PWCHAR          LogFileName;
                                            '    RTL_TIME_ZONE_INFORMATION TimeZone;
                                            '#Else
    LoggerName As LongPtr                   '    LPWSTR          LoggerName;
    LogFileName As LongPtr   '72            '    LPWSTR          LogFileName;
    TimeZone As TIME_ZONE_INFORMATION '172  '    TIME_ZONE_INFORMATION TimeZone;
    'tzpadding(0 To 3) As Byte               '#End If
    BootTime As LARGE_INTEGER               '    LARGE_INTEGER   BootTime;
    PerfFreq As LARGE_INTEGER               '    LARGE_INTEGER   PerfFreq;           // Reserved
    starttime As LARGE_INTEGER              '    LARGE_INTEGER   StartTime;          // Reserved
    ReservedFlags As Long                   '    ULONG           ReservedFlags;      // ClockType
    BuffersLost As Long                     '    ULONG           BuffersLost;
    'lhpad(0 To 3) As Byte
End Type  '272 bytes, qword-aligned         '} TRACE_LOGFILE_HEADER, *PTRACE_LOGFILE_HEADER;

' Public Type EVENT_TRACE_LOGFILEA            'typedef struct _EVENT_TRACE_LOGFILEA {
'     LogFileName As String                   '  LPSTR                        LogFileName;
'     LoggerName As String                    '  LPSTR                        LoggerName;
'     CurrentTime As LongLong                 '  LONGLONG                      CurrentTime;
'     BuffersRead As Long                     '  ULONG                         BuffersRead;
'                                             '  union {
'     Mode As Long                            '    ULONG LogFileMode;
'                                             '    ULONG ProcessTraceMode;
'                                             '  } DUMMYUNIONNAME;
'     CurrentEvent As EVENT_TRACE '88A'112    '  EVENT_TRACE                   CurrentEvent;
'     LogfileHeader As TRACE_LOGFILE_HEADER   '  TRACE_LOGFILE_HEADER          LogfileHeader;
'     BufferCallback As EventTraceBufferCallbackA '  PEVENT_TRACE_BUFFER_CALLBACKA BufferCallback;
'     BufferSize As Long                      '  ULONG                         BufferSize;
'     Filled As Long                          '  ULONG                         Filled;
'     EventsLost As Long                      '  ULONG                         EventsLost;
'                                             '  union {
'     EventCallback As EventRecordCallback    '    PEVENT_CALLBACK        EventCallback;
'                                             '    PEVENT_RECORD_CALLBACK EventRecordCallback;
'                                             '  } DUMMYUNIONNAME2;
'     IsKernelTrace As Long                   '  ULONG                         IsKernelTrace;
'     Context As LongPtr                      '  PVOID                         Context;
' End Type                                    '} EVENT_TRACE_LOGFILEW, *PEVENT_TRACE_LOGFILEW;
' Public Type EVENT_TRACE_LOGFILEW            'typedef struct _EVENT_TRACE_LOGFILEW {
'     LogFileName As LongPtr                   '  LPSTR                        LogFileName;
'     LoggerName As LongPtr                    '  LPSTR                        LoggerName;
'     CurrentTime As LongLong                 '  LONGLONG                      CurrentTime;
'     BuffersRead As Long                     '  ULONG                         BuffersRead;
'                                             '  union {
'     Mode As Long                            '    ULONG LogFileMode;
'                                             '    ULONG ProcessTraceMode;
'                                             '  } DUMMYUNIONNAME;
'     CurrentEvent As EVENT_TRACE '88A'112    '  EVENT_TRACE                   CurrentEvent;
'     LogfileHeader As TRACE_LOGFILE_HEADER   '  TRACE_LOGFILE_HEADER          LogfileHeader;
'     BufferCallback As EventTraceBufferCallbackW '  PEVENT_TRACE_BUFFER_CALLBACKW BufferCallback;
'     BufferSize As Long                      '  ULONG                         BufferSize;
'     Filled As Long                          '  ULONG                         Filled;
'     EventsLost As Long                      '  ULONG                         EventsLost;
'                                             '  union {
'     EventCallback As EventRecordCallback    '    PEVENT_CALLBACK        EventCallback;
'                                             '    PEVENT_RECORD_CALLBACK EventRecordCallback;
'                                             '  } DUMMYUNIONNAME2;
'     IsKernelTrace As Long                   '  ULONG                         IsKernelTrace;
'     Context As LongPtr                      '  PVOID                         Context;
' End Type                                    '} EVENT_TRACE_LOGFILEW, *PEVENT_TRACE_LOGFILEW;
' Public Type EVENT_TRACE_LOGFILE             'typedef struct _EVENT_TRACE_LOGFILEW {
'     LogFileName As LongPtr                   '  LPSTR                        LogFileName;
'     LoggerName As LongPtr                    '  LPSTR                        LoggerName;
'     CurrentTime As LongLong                 '  LONGLONG                      CurrentTime;
'     BuffersRead As Long                     '  ULONG                         BuffersRead;
'                                             '  union {
'     Mode As Long                            '    ULONG LogFileMode;
'                                             '    ULONG ProcessTraceMode;
'                                             '  } DUMMYUNIONNAME;
'     CurrentEvent As EVENT_TRACE '88A'112    '  EVENT_TRACE                   CurrentEvent;
'     LogfileHeader As TRACE_LOGFILE_HEADER   '  TRACE_LOGFILE_HEADER          LogfileHeader;
'     BufferCallback As EventTraceBufferCallback '  PEVENT_TRACE_BUFFER_CALLBACKW BufferCallback;
'     BufferSize As Long                      '  ULONG                         BufferSize;
'     Filled As Long                          '  ULONG                         Filled;
'     EventsLost As Long                      '  ULONG                         EventsLost;
'                                             '  union {
'     EventCallback As EventRecordCallback    '    PEVENT_CALLBACK        EventCallback;
'                                             '    PEVENT_RECORD_CALLBACK EventRecordCallback;
'                                             '  } DUMMYUNIONNAME2;
'     IsKernelTrace As Long                   '  ULONG                         IsKernelTrace;
'     Context As LongPtr                      '  PVOID                         Context;
' End Type                                    '} EVENT_TRACE_LOGFILEW, *PEVENT_TRACE_LOGFILEW;
Public Type EVENT_TRACE_LOGFILEA            'typedef struct _EVENT_TRACE_LOGFILEA {
    LogFileName As String                   '  LPSTR                        LogFileName;
    LoggerName As String                    '  LPSTR                        LoggerName;
    CurrentTime As LongLong                 '  LONGLONG                      CurrentTime;
    BuffersRead As Long                     '  ULONG                         BuffersRead;
                                            '  union {
    Mode As Long                            '    ULONG LogFileMode;
                                            '    ULONG ProcessTraceMode;
                                            '  } DUMMYUNIONNAME;
    CurrentEvent As EVENT_TRACE '88A'112    '  EVENT_TRACE                   CurrentEvent;
    LogfileHeader As TRACE_LOGFILE_HEADER   '  TRACE_LOGFILE_HEADER          LogfileHeader;
    BufferCallback As LongPtr '  PEVENT_TRACE_BUFFER_CALLBACKA BufferCallback;
    BufferSize As Long                      '  ULONG                         BufferSize;
    Filled As Long                          '  ULONG                         Filled;
    EventsLost As Long                      '  ULONG                         EventsLost;
                                            '  union {
    EventCallback As LongPtr    '    PEVENT_CALLBACK        EventCallback;
                                            '    PEVENT_RECORD_CALLBACK EventRecordCallback;
                                            '  } DUMMYUNIONNAME2;
    IsKernelTrace As Long                   '  ULONG                         IsKernelTrace;
    Context As LongPtr                      '  PVOID                         Context;
End Type                                    '} EVENT_TRACE_LOGFILEW, *PEVENT_TRACE_LOGFILEW;
Public Type EVENT_TRACE_LOGFILEW            'typedef struct _EVENT_TRACE_LOGFILEW {
    LogFileName As LongPtr                   '  LPSTR                        LogFileName;
    LoggerName As LongPtr                    '  LPSTR                        LoggerName;
    CurrentTime As LongLong                 '  LONGLONG                      CurrentTime;
    BuffersRead As Long                     '  ULONG                         BuffersRead;
                                            '  union {
    Mode As Long                            '    ULONG LogFileMode;
                                            '    ULONG ProcessTraceMode;
                                            '  } DUMMYUNIONNAME;
    CurrentEvent As EVENT_TRACE '88A'112    '  EVENT_TRACE                   CurrentEvent;
    LogfileHeader As TRACE_LOGFILE_HEADER   '  TRACE_LOGFILE_HEADER          LogfileHeader;
    BufferCallback As LongPtr '  PEVENT_TRACE_BUFFER_CALLBACKW BufferCallback;
    BufferSize As Long                      '  ULONG                         BufferSize;
    Filled As Long                          '  ULONG                         Filled;
    EventsLost As Long                      '  ULONG                         EventsLost;
                                            '  union {
    EventCallback As LongPtr    '    PEVENT_CALLBACK        EventCallback;
                                            '    PEVENT_RECORD_CALLBACK EventRecordCallback;
                                            '  } DUMMYUNIONNAME2;
    IsKernelTrace As Long                   '  ULONG                         IsKernelTrace;
    Context As LongPtr                      '  PVOID                         Context;
End Type                                    '} EVENT_TRACE_LOGFILEW, *PEVENT_TRACE_LOGFILEW;
Public Type EVENT_TRACE_LOGFILE             'typedef struct _EVENT_TRACE_LOGFILEW {
    LogFileName As LongPtr                   '  LPSTR                        LogFileName;
    LoggerName As LongPtr                    '  LPSTR                        LoggerName;
    CurrentTime As LongLong                 '  LONGLONG                      CurrentTime;
    BuffersRead As Long                     '  ULONG                         BuffersRead;
                                            '  union {
    Mode As Long                            '    ULONG LogFileMode;
                                            '    ULONG ProcessTraceMode;
                                            '  } DUMMYUNIONNAME;
    CurrentEvent As EVENT_TRACE '88A'112    '  EVENT_TRACE                   CurrentEvent;
    LogfileHeader As TRACE_LOGFILE_HEADER   '  TRACE_LOGFILE_HEADER          LogfileHeader;
    BufferCallback As LongPtr '  PEVENT_TRACE_BUFFER_CALLBACKW BufferCallback;
    BufferSize As Long                      '  ULONG                         BufferSize;
    Filled As Long                          '  ULONG                         Filled;
    EventsLost As Long                      '  ULONG                         EventsLost;
                                            '  union {
    EventCallback As LongPtr    '    PEVENT_CALLBACK        EventCallback;
                                            '    PEVENT_RECORD_CALLBACK EventRecordCallback;
                                            '  } DUMMYUNIONNAME2;
    IsKernelTrace As Long                   '  ULONG                         IsKernelTrace;
    Context As LongPtr                      '  PVOID                         Context;
End Type


Public Enum TRACE_QUERY_INFO_CLASS
    ' 
    '  TraceGuidQueryList:
    '  - EnumerateTraceGuidsEx.
    '       Returns a list of provider GUIDs that are currently registered with the kernel.
    '       Note: This is not the same thing as having an installed manifest.
    ' 
    '       Input Format: None.
    '       Output Format: An array of GUIDs.
    ' 
    TraceGuidQueryList = 0
    ' 
    '  TraceGuidQueryList:
    '  - EnumerateTraceGuidsEx.
    '       Returns the current registration and enablement information for the input GUID.
    ' 
    '       Input Format: GUID
    '       Output Format: TRACE_GUID_INFO followed by TRACE_GUID_INFO.InstanceCount
    '                      TRACE_PROVIDER_INSTANCE_INFO structs, each bundled with
    '                      TRACE_PROVIDER_INSTANCE_INFO.EnableCount TRACE_ENABLE_INFO.
    '                 For example, a GUID with two provider registrations, the first enabled
    '                   by two loggers and the second by three loggers would look like:
    '                   {
    '                       TRACE_GUID_INFO;  // Where InstanceCount = 2
    '                       TRACE_PROVIDER_INSTANCE_INFO; // Where EnableCount = 2
    '                       TRACE_ENABLE_INFO;
    '                       TRACE_ENABLE_INFO;
    '                       TRACE_PROVIDER_INSTANCE_INFO; // Where EnableCount = 3
    '                       TRACE_ENABLE_INFO;
    '                       TRACE_ENABLE_INFO;
    '                       TRACE_ENABLE_INFO;
    '                   }
    ' 
    TraceGuidQueryInfo = 1
    ' 
    '  TraceGuidQueryProcess:
    '  - EnumerateTraceGuidsEx.
    '       Returns a list of provider GUIDs that are registered in the current process.
    '       Note: This is not the same thing as having an installed manifest.
    ' 
    '       Input Format: None.
    '       Output Format: An array of GUIDs.
    ' 
    TraceGuidQueryProcess = 2
    ' 
    '  TraceStackTracingInfo:
    '  - TraceSetInformation.
    '       Turns on stack trace collection for the specified kernel events for the specified logger.
    '       It also turns off stack tracing for all kernel events not on this list, regardless of prior status.
    ' 
    '       Input Format: An array of CLASSIC_EVENT_ID structs.
    ' 
    TraceStackTracingInfo = 3
    ' 
    '  TraceSystemTraceEnableFlagsInfo:
    '  - TraceSetInformation
    '       Sets the Group Mask state for the specified logging session.
    ' 
    '       Input Format: PERFINFO_GROUPMASK
    ' 
    '  - TraceQueryInformation
    '       Queries the current Group Mask state for the specified logging session.
    ' 
    '       Return Format: PERFINFO_GROUPMASK
    ' 
    TraceSystemTraceEnableFlagsInfo = 4
    ' 
    '  TraceSampledProfileIntervalInfo:
    '  - TraceSetInformation
    '       Sets the Sample Profile interval for the system.
    '       Expects NULL SessionHandle parameter.
    ' 
    '       Input Format: TRACE_PROFILE_INTERVAL
    ' 
    '  - TraceQueryInformation
    '       Queries the current Sample Profile Interval for the system.
    '       Expects NULL SessionHandle parameter.
    ' 
    '       Output Format: TRACE_PROFILE_INTERVAL
    ' 
    TraceSampledProfileIntervalInfo = 5
    ' 
    '  TraceProfileSourceConfigInfo:
    '  - TraceSetInformation
    '       Sets a list of sources to be used for PMC Profiling system-wide.
    '       Expects NULL SessionHandle parameter.
    ' 
    '       Input Format: An array of ULONGs specifying the IDs of the sources.
    ' 
    TraceProfileSourceConfigInfo = 6
    ' 
    '  TraceProfileSourceListInfo:
    '  - TraceQueryInformation
    '       Queries the list of PMC Profiling sources available on the system.
    '       Expects NULL SessionHandle parameter.
    ' 
    '       Output Format: An array of PROFILE_SOURCE_INFO structs.
    ' 
    TraceProfileSourceListInfo = 7
    ' 
    '  TracePmcEventListInfo:
    '  - TraceSetInformation
    '       Updates the list of kernel events for which PMC counters will be collected
    '       for the specified logger.  This can only be set once per logger and cannot
    '       be updated.
    '       The counters collected are specified by
    '       TraceSetInformation(TracePmcCounterListInfo, ...) described below.
    ' 
    '       Input Format: An array of CLASSIC_EVENT_ID structs.
    ' 
    TracePmcEventListInfo = 8
    ' 
    '  TracePmcCounterListInfo:
    '  - TraceSetInformation
    '       Sets the list of PMC counters to be collected on system events.
    '       This can only be set once per logger and cannot be updated.
    '       The specified counters will be collected on the events specified by
    '       TraceSetInformation(TracePmcEventListInfo, ...) described above.
    ' 
    '       Input Format: An array of ULONGs.
    ' 
    TracePmcCounterListInfo = 9
    ' 
    '  TraceSetDisallowList:
    '  - TraceSetInformation
    '       Sets a list of provider GUIDs that should not be enabled via
    '       Provider Groups on the specified logging session.
    ' 
    '       Input Format: An array of GUIDs.
    ' 
    TraceSetDisallowList = 10
    ' 
    '  TraceVersionInfo:
    '  - TraceQueryInformation
    '       Queries the version number of the trace processing code.
    ' 
    '       Output Format: TRACE_VERSION_INFO
    ' 
    TraceVersionInfo = 11
    ' 
    '  TraceGroupQueryList:
    '  - EnumerateTraceGuidsEx.
    '       Returns a list of Group GUIDs that are currently known to the kernel.
    ' 
    '       Input Format: None.
    '       Output Format: An array of GUIDs.
    ' 
    TraceGroupQueryList = 12
    ' 
    '  TraceGroupQueryInfo:
    '  - EnumerateTraceGuidsEx.
    '       Returns the current enablement information and list of member providers
    '       for the input Group GUID.
    ' 
    '       Input Format: GUID
    '       Output Format:  a) ULONG - Length of the following TRACE_ENABLE_INFO array.
    '                       b) Array of TRACE_ENABLE_INFO. Size of the array is inferred from (a)
    '                       c) ULONG - Count of the Number of Unique Providers that belong to this Group
    '                       d) Array of GUID - Size of the array is specified by (c)
    ' 
    '                   PseudoStructure -
    '                       struct TRACE_GROUP_INFO {
    '                           ULONG TraceEnableInfoSize;
    '                           TRACE_ENABLE_INFO TraceEnableInfos[TraceEnableInfoSize];
    '                           ULONG GuidArraySize;
    '                           GUID UniqueProviders[GuidArraySize];
    '                       }
    ' 
    TraceGroupQueryInfo = 13
    ' 
    '  TraceDisallowListQuery:
    '  - TraceQueryInformation
    '       Queries the list of provider GUIDs that should not be enabled via
    '       Provider Groups on the specified logging session.
    ' 
    '       Output Format: An array of GUIDs.
    ' 
    TraceDisallowListQuery = 14
    TraceInfoReserved15 = 15
    ' 
    '  TracePeriodicCaptureStateListInfo:
    '  - TraceSetInformation
    '       Sets the list of providers for which capture stat should be collected
    '       at periodic time intervals for the specified logging session.
    '       If a NULL input buffer is specified, then the current periodic capture state
    '       settings are cleared.
    ' 
    '       Input Format: TRACE_PERIODIC_CAPTURE_STATE_INFO followed by an array of ProviderCount
    '                       Provider GUIDs. Or a NULL Buffer.
    ' 
    TracePeriodicCaptureStateListInfo = 16
    ' 
    '  TracePeriodicCaptureStatInfo:
    '  - TraceQueryInformation
    '       Queries the limits of periodic capture settings on this system, including
    '       the minimum time frequency and the maximum number of providers that can be
    '       enabled for periodic capture state.
    ' 
    '       Output Format: TRACE_PERIODIC_CAPTURE_STATE_INFO
    ' 
    TracePeriodicCaptureStateInfo = 17
    ' 
    '  TraceProviderBinaryTracking:
    '  - TraceSetInformation
    '       Instructs ETW to begin tracking binaries for all providers that are enabled
    '       to the session. The tracking applies retroactively for providers that were
    '       enabled to the session prior to the call, as well as for all future providers
    '       that are enabled to the session.
    ' 
    '       ETW fabricates tracking events for these tracked providers that contain a
    '       mapping between provider GUID(s). ETW also fabricates the file path that describes
    '       where the registered provider is located on disk. If the session is in realtime,
    '       the events are provided live in the realtime buffers. If the session is file-based
    '       (i.e. trace is saved to an .etl file), the events are aggregated and written to the
    '       file header; they will be among some of the first events the ETW runtime provides
    '       when the .etl file is played back.
    ' 
    '       The binary tracking events will come from the EventTraceGuid provider, with an opcode
    '       of WMI_LOG_TYPE_BINARY_PATH.
    ' 
    '       Input Format: BOOLEAN (The 1-byte type, rather than the 4-byte BOOL.)
    '                     True to turn tracking on. False to turn tracking off.
    ' 
    TraceProviderBinaryTracking = 18
    ' 
    '  TraceMaxLoggersQuery:
    '  - TraceQueryInformation
    '       Queries the maximum number of system-wide loggers that can be running at a time
    '       on this system.
    ' 
    '       Output Format: ULONG
    ' 
    TraceMaxLoggersQuery = 19
    ' 
    '  TraceLbrConfigurationInfo:
    '  - TraceSetInformation
    '       Sets a bitfield of configuration options for Last Branch Record tracing.
    ' 
    '       Input Format: ULONG
    ' 
    TraceLbrConfigurationInfo = 20
    ' 
    '  TraceLbrEventListInfo:
    '  - TraceSetInformation
    '       Provides a list of kernel events to collect Last Branch Records on.
    '       The events are specified by their HookIds.
    ' 
    '       Input Format: An array of ULONGs
    ' 
    TraceLbrEventListInfo = 21
    ' 
    '  TraceMaxPmcCounterQuery:
    '  - TraceQueryInformation
    '       Queries the maximum number of PMC counters supported on this platform.
    ' 
    '       Output Format: ULONG
    ' 
    TraceMaxPmcCounterQuery = 22
    ' 
    '  TraceStreamCount:
    '  - TraceQueryInformation
    '       Queries the number of streams that a given session can be expected
    '       to emit. This is usually proportional to CPU count, or 1 if no
    '       per-processor buffering is enabled.
    ' 
    '       Output Format: ULONG
    ' 
    TraceStreamCount = 23
    ' 
    '  TraceStackCachingInfo:
    '  - TraceSetInformation
    '       Turns on stack caching for classic event stacks.
    ' 
    '       Input Format: TRACE_STACK_CACHING_INFO
    ' 
    TraceStackCachingInfo = 24
    ' 
    '  TracePmcCounterOwners:
    '  - TraceQueryInformation
    '       Queries ownership information for active PMC counters.
    '       Expects NULL SessionHandle.
    ' 
    '       Input Format: ETW_PMC_COUNTER_OWNERSHIP_STATUS with ProcessorNumber set to an
    '                     appropriate processor index. The input buffer must be of size at least
    '                     RTL_SIZEOF_THROUGH_FIELD(ETW_PMC_COUNTER_OWNERSHIP_STATUS, NumberOfCounters) +
    '                     (sizeof(ETW_PMC_COUNTER_OWNER) * EtwMaxPmcCounters), where EtwMaxPmcCounters
    '                     is the result of a TraceQueryInformation(TraceMaxPmcCounterQuery, ...) operation.
    ' 
    '       Output Format: ETW_PMC_COUNTER_OWNERSHIP_STATUS with CounterOwners filled out. NumberOfCounters is
    '                      set to the number of items in the CounterOwners array.
    '                      If a counter owner's OwnershipType is EtwPmcOwnerTagged, then OwnerTag contains
    '                      a tag provided by the counter owner.
    ' 
    TracePmcCounterOwners = 25
    ' 
    '  TraceStackCachingInfo:
    '  - TraceSetInformation
    '       Turns on unified stack caching for all event stacks.
    ' 
    '       Input Format: TRACE_STACK_CACHING_INFO
    ' 
    TraceUnifiedStackCachingInfo = 26
    ' 
    '  TracePmcSessionInformation:
    '     TraceQueryInformation
    '       Queries information about enabled PMC counters for all sessions.
    ' 
    '       Output Format: The supplied output buffer will be set to a blob of filled out ETW_PMC_SESSION_INFO.
    '                      The NextEntryOffset member of each item will be set to the offset from the start of
    '                      the current item to the next item, or 0 if there are no more items.
    '                      The ProfileSourceCount and HookId count members will be set to the number of items that
    '                      exist in the ProfileSources array and HookIds arrays, respectively.
    ' 
    TracePmcSessionInformation = 27
    MaxTraceSetInfoClass
End Enum
Public Type CLASSIC_EVENT_ID
    EventGuid As UUID
    type As Byte
    Reserved(0 To 6) As Byte
End Type
Public Type TRACE_STACK_CACHING_INFO
    Enabled As Byte
    CacheSize As Long
    BucketCount As Long
End Type
Public Type TRACE_PROFILE_INTERVAL
    Source As Long
    Interval As Long
End Type
Public Type TRACE_VERSION_INFO
    EtwTraceProcessingVersion As Long
    Reserved As Long
End Type
Public Type TRACE_PERIODIC_CAPTURE_STATE_INFO
    CaptureStateFrequencyInSeconds As Long
    ProviderCount As Integer
    Reserved As Integer
End Type


Public Enum EventHeaderProperty
    EVENT_HEADER_PROPERTY_XML = &H1
    EVENT_HEADER_PROPERTY_FORWARDED_XML = &H2
    EVENT_HEADER_PROPERTY_LEGACY_EVENTLOG = &H4
    EVENT_HEADER_PROPERTY_RELOGGABLE = &H8
End Enum
Public Enum EventHeaderExtType
    EVENT_HEADER_EXT_TYPE_RELATED_ACTIVITYID = &H1
    EVENT_HEADER_EXT_TYPE_SID = &H2
    EVENT_HEADER_EXT_TYPE_TS_ID = &H3
    EVENT_HEADER_EXT_TYPE_INSTANCE_INFO = &H4
    EVENT_HEADER_EXT_TYPE_STACK_TRACE32 = &H5
    EVENT_HEADER_EXT_TYPE_STACK_TRACE64 = &H6
    EVENT_HEADER_EXT_TYPE_PEBS_INDEX = &H7
    EVENT_HEADER_EXT_TYPE_PMC_COUNTERS = &H8
    EVENT_HEADER_EXT_TYPE_PSM_KEY = &H9
    EVENT_HEADER_EXT_TYPE_EVENT_KEY = &HA
    EVENT_HEADER_EXT_TYPE_EVENT_SCHEMA_TL = &HB
    EVENT_HEADER_EXT_TYPE_PROV_TRAITS = &HC
    EVENT_HEADER_EXT_TYPE_PROCESS_START_KEY = &HD
    EVENT_HEADER_EXT_TYPE_CONTROL_GUID = &HE
    EVENT_HEADER_EXT_TYPE_QPC_DELTA = &H000F
    EVENT_HEADER_EXT_TYPE_CONTAINER_ID = &H0010
    EVENT_HEADER_EXT_TYPE_STACK_KEY32 = &H0011
    EVENT_HEADER_EXT_TYPE_STACK_KEY64 = &H0012
    EVENT_HEADER_EXT_TYPE_MAX = &H0013
End Enum
Public Enum EventHeaderFlags
    EVENT_HEADER_FLAG_EXTENDED_INFO = &H1
    EVENT_HEADER_FLAG_PRIVATE_SESSION = &H2
    EVENT_HEADER_FLAG_STRING_ONLY = &H4
    EVENT_HEADER_FLAG_TRACE_MESSAGE = &H8
    EVENT_HEADER_FLAG_NO_CPUTIME = &H10
    EVENT_HEADER_FLAG_32_BIT_HEADER = &H20
    EVENT_HEADER_FLAG_64_BIT_HEADER = &H40
    EVENT_HEADER_FLAG_DECODE_GUID = &H80     ' ProviderId is decode GUID.
    EVENT_HEADER_FLAG_CLASSIC_HEADER = &H100
    EVENT_HEADER_FLAG_PROCESSOR_INDEX = &H200
End Enum

Public Type EVENT_DESCRIPTOR            'typedef struct _EVENT_DESCRIPTOR {
    id As Integer                       '  USHORT    Id;
    Version As Byte                     '  UCHAR     Version;
    Channel As Byte                     '  UCHAR     Channel;
    Level As Byte                       '  UCHAR     Level;
    OpCode As Byte                      '  UCHAR     Opcode;
    Task As Integer                     '  USHORT    Task;
    Keyword As LongLong                 '  ULONGLONG Keyword;
End Type                                '} EVENT_DESCRIPTOR, *PEVENT_DESCRIPTOR;

Public Type EVENT_HEADER                'typedef struct _EVENT_HEADER {
    size As Integer                     '  USHORT           Size;
    HeaderType As Integer               '  USHORT           HeaderType;
    Flags As Integer                    '  USHORT           Flags;           EventHeaderFlags Enum
    EventProperty As Integer            '  USHORT           EventProperty;   EventHeaderProperty Enum
    ThreadID As Long                    '  ULONG            ThreadId;
    ProcessID As Long                   '  ULONG            ProcessId;
    TimeStamp As LARGE_INTEGER          '  LARGE_INTEGER    TimeStamp;
    ProviderId As UUID                  '  GUID             ProviderId;
    EventDescriptor As EVENT_DESCRIPTOR '  EVENT_DESCRIPTOR EventDescriptor;
                                        '  union {
                                        '    struct {
    KernelTime As Long                  '      ULONG KernelTime;
    UserTime As Long                    '      ULONG UserTime;
                                        '    } DUMMYSTRUCTNAME;
                                        '    ULONG64 ProcessorTime;
                                        '  } DUMMYUNIONNAME;
    ActivityGuid As UUID                '  GUID             ActivityId;
End Type                                '} EVENT_HEADER, *PEVENT_HEADER;


Public Type ETW_BUFFER_CONTEXT          'typedef struct _ETW_BUFFER_CONTEXT {
                                        '  union {
                                        '    struct {
    ProcessorNumber As Byte             '      UCHAR ProcessorNumber;
    Alignment As Byte                   '      UCHAR Alignment;
                                        '    } DUMMYSTRUCTNAME;
                                        '    USHORT ProcessorIndex;
                                        '  } DUMMYUNIONNAME;
    LoggerId As Integer                 '  USHORT LoggerId;
End Type                                '} ETW_BUFFER_CONTEXT, *PETW_BUFFER_CONTEXT;

Public Type EVENT_RECORD                'typedef struct _EVENT_RECORD {
    EventHeader As EVENT_HEADER         '  EVENT_HEADER                     EventHeader;
    BufferContext As ETW_BUFFER_CONTEXT '  ETW_BUFFER_CONTEXT               BufferContext;
    ExtendedDataCount As Integer        '  USHORT                           ExtendedDataCount;
    UserDataLength As Integer           '  USHORT                           UserDataLength;
    ExtendedData As LongPtr             '  PEVENT_HEADER_EXTENDED_DATA_ITEM ExtendedData;
    UserData As LongPtr                 '  PVOID                            UserData;
    UserContext As LongPtr              '  PVOID                            UserContext;
End Type                                '} EVENT_RECORD, *PEVENT_RECORD;

Public Type EVENT_HEADER_EXTENDED_DATA_ITEM 'typedef struct _EVENT_HEADER_EXTENDED_DATA_ITEM {
    Reserved1 As Integer                '  USHORT    Reserved1;
    ExtType As Integer                  '  USHORT    ExtType;
                                        '  struct {
    Linkage As Integer                  '    USHORT Linkage : 1;
                                        '    USHORT Reserved2 : 15;
                                        '  };
    DataSize As Integer                 '  USHORT    DataSize;
    DataPtr As LongLong                 '  ULONGLONG DataPtr;
End Type                                '} EVENT_HEADER_EXTENDED_DATA_ITEM, *PEVENT_HEADER_EXTENDED_DATA_ITEM;

Public Type EVENT_EXTENDED_ITEM_INSTANCE
    InstanceId As Long
    ParentInstanceId As Long
    ParentGuid As UUID
End Type

Public Type EVENT_EXTENDED_ITEM_RELATED_ACTIVITYID
    RelatedActivityId As UUID
End Type

Public Type EVENT_EXTENDED_ITEM_TS_ID
    SessionId As Long
End Type

Public Type EVENT_EXTENDED_ITEM_STACK_TRACE32
    MatchId As LongLong
    ' Address(0 To (ANYSIZE_ARRAY - 1)) As Long
End Type

Public Type EVENT_EXTENDED_ITEM_STACK_TRACE64
    MatchId As LongLong
    ' Address(0 To (ANYSIZE_ARRAY - 1)) As LongLong
End Type

Public Type EVENT_EXTENDED_ITEM_STACK_KEY32
    MatchId As LongLong
    StackKey As Long
    Padding As Long
End Type

Public Type EVENT_EXTENDED_ITEM_STACK_KEY64
    MatchId As LongLong
    StackKey As LongLong
End Type

Public Type EVENT_EXTENDED_ITEM_PEBS_INDEX
    PebsIndex As LongLong
End Type

Public Type EVENT_EXTENDED_ITEM_PMC_COUNTERS
    Counter(4095) As LongLong
End Type

Public Type EVENT_EXTENDED_ITEM_PROCESS_START_KEY
    ProcessStartKey As LongLong
End Type

Public Type EVENT_EXTENDED_ITEM_EVENT_KEY
    Key As LongLong
End Type



Public Const EVENT_MIN_LEVEL = (0)
'    Lowest value for an event level is 0. */
Public Const EVENT_MAX_LEVEL = (&HFF)
'    Highest value for an event level is 255. */

'/*
'EVENT_ACTIVITY_CTRL values for the ControlCode parameter of
'EventActivityIdControl.
'*/
Public Const EVENT_ACTIVITY_CTRL_GET_ID = (1)
'    EventActivityIdControl will return the current thread's activity ID. */
Public Const EVENT_ACTIVITY_CTRL_SET_ID = (2)
'    EventActivityIdControl will set the current thread's activity ID. */
Public Const EVENT_ACTIVITY_CTRL_CREATE_ID = (3)
'    EventActivityIdControl will generate and return a new activity ID. Note
'    that the returned activity ID is not a GUID. The EventActivityIdControl
'    function uses a faster generation algorithm than UuidCreate. The returned
'    ID is guaranteed to be different from any valid GUID and different from any
'    other activity ID generated by EventActivityIdControl on the same machine
'    during the same boot session. */
Public Const EVENT_ACTIVITY_CTRL_GET_SET_ID = (4)
'    EventActivityIdControl will set the current thread's activity ID and
'    return the previous activity ID. */
Public Const EVENT_ACTIVITY_CTRL_CREATE_SET_ID = (5)
'    EventActivityIdControl will generate a new activity ID, set the current
'    Thread 's activity ID to the new value, and return the previous activity
'    ID. */

Public Const MAX_EVENT_DATA_DESCRIPTORS = (128)
'    The maximum number of EVENT_DATA_DESCRIPTORs that can be used in an event.
'    Used with EventWrite, EventWriteTransfer, EventWriteEx. */
Public Const MAX_EVENT_FILTER_DATA_SIZE = (1024)
'    The maximum data size for many of the filter types.
'    Used with EVENT_FILTER_DESCRIPTOR. */
Public Const MAX_EVENT_FILTER_PAYLOAD_SIZE = (4096)
'    The maximum data size for an event payload filter.
'    Used with EVENT_FILTER_DESCRIPTOR of type EVENT_FILTER_TYPE_PAYLOAD. */
Public Const MAX_EVENT_FILTER_EVENT_NAME_SIZE = (4096)
'    The maximum data size for a name-based filter.
'    Used with EVENT_FILTER_DESCRIPTOR for name-based filters. */

Public Const MAX_EVENT_FILTERS_COUNT = (13)
'    The maximum number of filters that can be provided in a call to
'    EnableTraceEx2.
'    Used with ENABLE_TRACE_PARAMETERS. */

Public Const MAX_EVENT_FILTER_PID_COUNT = (8)
'    The maximum number of process IDs in a PID filter.
'    Used with EVENT_FILTER_DESCRIPTOR of type EVENT_FILTER_TYPE_PID. */

Public Const MAX_EVENT_FILTER_EVENT_ID_COUNT = (64)
'    The maximum number of event IDs in an event ID or stackwalk filter.
'    Used with EVENT_FILTER_DESCRIPTOR of type EVENT_FILTER_TYPE_EVENT_ID or
'    EVENT_FILTER_TYPE_STACKWALK. */
Public Enum EventFilterType
    EVENT_FILTER_TYPE_NONE = (&H0)
    EVENT_FILTER_TYPE_SCHEMATIZED = (&H80000000)   ' Provider-side.
    EVENT_FILTER_TYPE_SYSTEM_FLAGS = (&H80000001)   ' Internal use only.
    EVENT_FILTER_TYPE_TRACEHANDLE = (&H80000002)   ' Initiate rundown.
    EVENT_FILTER_TYPE_PID = (&H80000004)   ' Process ID.
    EVENT_FILTER_TYPE_EXECUTABLE_NAME = (&H80000008)   ' EXE file name.
    EVENT_FILTER_TYPE_PACKAGE_ID = (&H80000010)   ' Package ID.
    EVENT_FILTER_TYPE_PACKAGE_APP_ID = (&H80000020)   ' Package Relative App Id (PRAID).
    EVENT_FILTER_TYPE_PAYLOAD = (&H80000100)   ' TDH payload filter.
    EVENT_FILTER_TYPE_EVENT_ID = (&H80000200)   ' Event IDs.
    EVENT_FILTER_TYPE_EVENT_NAME = (&H80000400)   ' Event name (TraceLogging only).
    EVENT_FILTER_TYPE_STACKWALK = (&H80001000)   ' Event IDs for stack.
    EVENT_FILTER_TYPE_STACKWALK_NAME = (&H80002000)   ' Event name for stack (TraceLogging only).
    EVENT_FILTER_TYPE_STACKWALK_LEVEL_KW = (&H80004000)   ' Filter stack collection by level and keyword.
End Enum

Public Type EVENT_FILTER_HEADER             'typedef struct _EVENT_FILTER_HEADER {
    id As Integer                           '    USHORT     Id;
    Version As Byte                         '    UCHAR      Version;
    Reserved(0 To 4) As Byte                '    UCHAR      Reserved[5];
    InstanceId As LongLong                  '    ULONGLONG  InstanceId;
    size As Long                            '    ULONG      Size;
    NextOffset As Long                      '    ULONG      NextOffset;
End Type                                    '} EVENT_FILTER_HEADER, *PEVENT_FILTER_HEADER;

[Description("🛈 Do not use LenB for computing the size of this type. The total size should be 4 + 2 * Count (number of event IDs actually used)")]                          '
Public Type EVENT_FILTER_EVENT_ID           'typedef struct _EVENT_FILTER_EVENT_ID {
    FilterIn As Byte                        '    BOOLEAN FilterIn;
    Reserved As Byte                        '    UCHAR Reserved;
    Count As Integer                        '    USHORT Count;
    Events(0 To (MAX_EVENT_FILTER_EVENT_ID_COUNT - 1)) As Integer               '    USHORT Events[ANYSIZE_ARRAY];
End Type                                    '} EVENT_FILTER_EVENT_ID, *PEVENT_FILTER_EVENT_ID;

Public Enum ETW_PROCESS_HANDLE_INFO_TYPE
    EtwQueryPartitionInformation = 1
    EtwQueryPartitionInformationV2 = 2
    EtwQueryLastDroppedTimes = 3
    EtwQueryLogFileHeader = 4
    EtwQueryProcessHandleInfoMax = 2
End Enum
Public Type ETW_TRACE_PARTITION_INFORMATION
    PartitionId As UUID
    ParentId As UUID
    QpcOffsetFromRoot As LongLong
    PartitionType As Long
End Type
Public Type ETW_TRACE_PARTITION_INFORMATION_V2
    QpcOffsetFromRoot As LongLong
    PartitionType As Long
    PartitionId As LongPtr
    ParentId As LongPtr
End Type
 
Public Enum EVENTSECURITYOPERATION
    EventSecuritySetDACL = 0
    EventSecuritySetSACL = 1
    EventSecurityAddDACL = 2
    EventSecurityAddSACL = 3
    EventSecurityMax = 4
End Enum



' typedef ULONG (
' #ifndef MIDL_PASS
' WINAPI
' #endif
' *WMIDPREQUEST)(
    ' _In_ WMIDPREQUESTCODE RequestCode,
    ' _In_ PVOID RequestContext,
    ' _Inout_ ULONG *BufferSize,
    ' _Inout_ PVOID Buffer
    ' );
Public Delegate Function WMIDPREQUEST (ByVal RequestCode As WMIDPREQUESTCODE, ByVal RequestContext As LongPtr, BufferSize As Long, ByVal Buffer As LongPtr) As Long

Public Declare PtrSafe Function StartTraceA Lib "advapi32" (TraceHandle As LongLong, ByVal InstanceName As String, Properties As Any) As Long
Public Declare PtrSafe Function StartTraceW Lib "advapi32" (TraceHandle As LongLong, ByVal InstanceName As LongPtr, Properties As Any) As Long
Public DeclareWide PtrSafe Function StartTrace Lib "advapi32" Alias "StartTraceW" (TraceHandle As LongLong, ByVal InstanceName As String, Properties As Any) As Long
Public Declare PtrSafe Function StopTraceA Lib "advapi32" (ByVal TraceHandle As LongLong, ByVal InstanceName As String, Properties As EVENT_TRACE_PROPERTIES) As Long
Public Declare PtrSafe Function StopTraceW Lib "advapi32" (ByVal TraceHandle As LongLong, ByVal InstanceName As LongPtr, Properties As EVENT_TRACE_PROPERTIES) As Long
Public DeclareWide PtrSafe Function StopTrace Lib "advapi32" Alias "StopTraceW" (ByVal TraceHandle As LongLong, ByVal InstanceName As String, Properties As EVENT_TRACE_PROPERTIES) As Long
Public Declare PtrSafe Function QueryTraceA Lib "advapi32" (ByVal TraceHandle As LongLong, ByVal InstanceName As String, Properties As EVENT_TRACE_PROPERTIES) As Long
Public Declare PtrSafe Function QueryTraceW Lib "advapi32" (ByVal TraceHandle As LongLong, ByVal InstanceName As LongPtr, Properties As EVENT_TRACE_PROPERTIES) As Long
Public DeclareWide PtrSafe Function QueryTrace Lib "advapi32" Alias "QueryTraceW" (ByVal TraceHandle As LongLong, ByVal InstanceName As String, Properties As EVENT_TRACE_PROPERTIES) As Long
Public Declare PtrSafe Function UpdateTraceA Lib "advapi32" (ByVal TraceHandle As LongLong, ByVal InstanceName As String, Properties As Any) As Long
Public Declare PtrSafe Function UpdateTraceW Lib "advapi32" (ByVal TraceHandle As LongLong, ByVal InstanceName As LongPtr, Properties As Any) As Long
Public DeclareWide PtrSafe Function UpdateTrace Lib "advapi32" Alias "UpdateTraceW" (ByVal TraceHandle As LongLong, ByVal InstanceName As String, Properties As Any) As Long
Public Declare PtrSafe Function FlushTraceA Lib "advapi32" (ByVal TraceHandle As LongLong, ByVal InstanceName As String, Properties As EVENT_TRACE_PROPERTIES) As Long
Public Declare PtrSafe Function FlushTraceW Lib "advapi32" (ByVal TraceHandle As LongLong, ByVal InstanceName As LongPtr, Properties As EVENT_TRACE_PROPERTIES) As Long
Public DeclareWide PtrSafe Function FlushTrace Lib "advapi32" Alias "FlushTraceW" (ByVal TraceHandle As LongLong, ByVal InstanceName As String, Properties As EVENT_TRACE_PROPERTIES) As Long
Public Declare PtrSafe Function ControlTraceA Lib "advapi32" (ByVal TraceHandle As LongLong, ByVal InstanceName As String, Properties As Any, ByVal ControlCode As ControlTraceCodes) As Long
Public Declare PtrSafe Function ControlTraceW Lib "advapi32" (ByVal TraceHandle As LongLong, ByVal InstanceName As LongPtr, Properties As Any, ByVal ControlCode As ControlTraceCodes) As Long
Public DeclareWide PtrSafe Function ControlTrace Lib "advapi32" Alias "ControlTraceW" (ByVal TraceHandle As LongLong, ByVal InstanceName As String, Properties As Any, ByVal ControlCode As ControlTraceCodes) As Long
Public Declare PtrSafe Function QueryAllTracesA Lib "advapi32" (PropertyArray As LongPtr, ByVal PropertyArrayCount As Long, LoggerCount As Long) As Long
Public Declare PtrSafe Function QueryAllTracesW Lib "advapi32" (PropertyArray As LongPtr, ByVal PropertyArrayCount As Long, LoggerCount As Long) As Long
Public DeclareWide PtrSafe Function QueryAllTraces Lib "advapi32" Alias "QueryAllTracesW" (PropertyArray As LongPtr, ByVal PropertyArrayCount As Long, LoggerCount As Long) As Long
Public Declare PtrSafe Function EnableTrace Lib "advapi32" (ByVal Enable As Long, ByVal EnableFlag As Long, ByVal EnableLevel As Long, ControlGuid As UUID, ByVal TraceHandle As LongLong) As Long
Public Declare PtrSafe Function EnableTraceEx Lib "advapi32" (ProviderId As UUID, SourceId As UUID, ByVal TraceHandle As LongLong, ByVal IsEnabled As Long, ByVal Level As Byte, ByVal MatchAnyKeyWord As LongLong, ByVal MatchAllKeyword As LongLong, ByVal EnableProperty As Long, EnableFilterDesc As EVENT_FILTER_DESCRIPTOR) As Long
Public Declare PtrSafe Function EnableTraceEx2 Lib "advapi32" (ByVal TraceHandle As LongLong, ProviderId As UUID, ByVal ControlCode As EventControlCodes, _
                            ByVal Level As Byte, ByVal MatchAnyKeyWord As LongLong, ByVal MatchAllKeyword As LongLong, _
                            ByVal TimeOut As Long, EnableParameters As ENABLE_TRACE_PARAMETERS) As Long
Public Declare PtrSafe Function EnumerateTraceGuidsEx Lib "advapi32" (ByVal TraceQueryInfoClass As TRACE_QUERY_INFO_CLASS, InBuffer As Any, ByVal InBufferSize As Long, OutBuffer As Any, ByVal OutBufferSize As Long, ReturnLength As Long) As Long
Public Declare PtrSafe Function TraceSetInformation Lib "advapi32" (ByVal SessionHandle As LongLong, ByVal InformationClass As TRACE_QUERY_INFO_CLASS, TraceInformation As Any, ByVal InformationLength As Long) As Long
Public Declare PtrSafe Function TraceQueryInformation Lib "advapi32" (ByVal SessionHandle As LongLong, ByVal InformationClass As TRACE_QUERY_INFO_CLASS, TraceInformation As Long, ByVal InformationLength As Long, ReturnLength As Long) As Long
Public Declare PtrSafe Function CreateTraceInstanceId Lib "advapi32" (ByVal RegHandle As LongPtr, InstInfo As EVENT_INSTANCE_INFO) As Long
Public Declare PtrSafe Function TraceEvent Lib "advapi32" (ByVal TraceHandle As LongLong, EventTrace As EVENT_TRACE_HEADER) As Long
Public Declare PtrSafe Function TraceEventInstance Lib "advapi32" (ByVal TraceHandle As LongLong, EventTrace As EVENT_TRACE_HEADER, InstInfo As EVENT_INSTANCE_INFO, ParentInstInfo As EVENT_INSTANCE_INFO) As Long
' Public Declare PtrSafe Function RegisterTraceGuidsA Lib "advapi32" (ByVal RequestAddress As WMIDPREQUEST, ByVal RequestContext As LongPtr, ControlGuid As UUID, ByVal GuidCount As Long, TraceGuidReg As TRACE_GUID_REGISTRATION, ByVal MofImagePath As String, ByVal MofResourceName As String, RegistrationHandle As LongLong) As Long
' Public Declare PtrSafe Function RegisterTraceGuidsW Lib "advapi32" (ByVal RequestAddress As WMIDPREQUEST, ByVal RequestContext As LongPtr, ControlGuid As UUID, ByVal GuidCount As Long, TraceGuidReg As TRACE_GUID_REGISTRATION, ByVal MofImagePath As LongPtr, ByVal MofResourceName As LongPtr, RegistrationHandle As LongLong) As Long
' Public DeclareWide PtrSafe Function RegisterTraceGuids Lib "advapi32" Alias "RegisterTraceGuidsW" (ByVal RequestAddress As WMIDPREQUEST, ByVal RequestContext As LongPtr, ControlGuid As UUID, ByVal GuidCount As Long, TraceGuidReg As TRACE_GUID_REGISTRATION, ByVal MofImagePath As String, ByVal MofResourceName As String, RegistrationHandle As LongLong) As Long
Public Declare PtrSafe Function RegisterTraceGuidsA Lib "advapi32" (ByVal RequestAddress As LongPtr, ByVal RequestContext As LongPtr, ControlGuid As UUID, ByVal GuidCount As Long, TraceGuidReg As TRACE_GUID_REGISTRATION, ByVal MofImagePath As String, ByVal MofResourceName As String, RegistrationHandle As LongLong) As Long
Public Declare PtrSafe Function RegisterTraceGuidsW Lib "advapi32" (ByVal RequestAddress As LongPtr, ByVal RequestContext As LongPtr, ControlGuid As UUID, ByVal GuidCount As Long, TraceGuidReg As TRACE_GUID_REGISTRATION, ByVal MofImagePath As LongPtr, ByVal MofResourceName As LongPtr, RegistrationHandle As LongLong) As Long
Public DeclareWide PtrSafe Function RegisterTraceGuids Lib "advapi32" Alias "RegisterTraceGuidsW" (ByVal RequestAddress As LongPtr, ByVal RequestContext As LongPtr, ControlGuid As UUID, ByVal GuidCount As Long, TraceGuidReg As TRACE_GUID_REGISTRATION, ByVal MofImagePath As String, ByVal MofResourceName As String, RegistrationHandle As LongLong) As Long
Public Declare PtrSafe Function UnregisterTraceGuids Lib "advapi32" (ByVal RegistrationHandle As LongLong) As Long
Public Declare PtrSafe Function GetTraceLoggerHandle Lib "advapi32" (Buffer As Any) As LongLong
Public Declare PtrSafe Function GetTraceEnableLevel Lib "advapi32" (ByVal TraceHandle As LongLong) As Long
Public Declare PtrSafe Function GetTraceEnableFlags Lib "advapi32" (ByVal TraceHandle As LongLong) As Long
Public Declare PtrSafe Function OpenTraceA Lib "advapi32" (logfile As EVENT_TRACE_LOGFILEA) As LongLong
Public Declare PtrSafe Function OpenTraceW Lib "advapi32" (logfile As EVENT_TRACE_LOGFILEW) As LongLong
Public DeclareWide PtrSafe Function OpenTrace Lib "advapi32" Alias "OpenTraceW" (logfile As EVENT_TRACE_LOGFILE) As LongLong
Public Declare PtrSafe Function ProcessTrace Lib "advapi32" (ByVal HandleArray As LongPtr, ByVal HandleCount As Long, StartTime As FILETIME, EndTime As FILETIME) As Long
Public Declare PtrSafe Function CloseTrace Lib "advapi32" (ByVal TraceHandle As LongLong) As Long
' Public Declare PtrSafe Function OpenTraceFromBufferStream Lib "sechost" (Options As ETW_OPEN_TRACE_OPTIONS, ByVal BufferCompletionCallback As EtwBufferCompletionCallback /*PETW_BUFFER_COMPLETION_CALLBACK*/, Optional ByVal BufferCompletionContext As LongPtr) As LongLong
Public Declare PtrSafe Function OpenTraceFromBufferStream Lib "sechost" (Options As ETW_OPEN_TRACE_OPTIONS, ByVal BufferCompletionCallback As LongPtr /*PETW_BUFFER_COMPLETION_CALLBACK*/, Optional ByVal BufferCompletionContext As LongPtr) As LongLong
Public DeclareWide PtrSafe Function OpenTraceFromRealTimeLogger Lib "sechost" (ByVal LoggerName As String, Options As ETW_OPEN_TRACE_OPTIONS, LogFileHeader As TRACE_LOGFILE_HEADER) As LongLong
Public DeclareWide PtrSafe Function OpenTraceFromRealTimeLoggerWithAllocationOptions Lib "sechost" (ByVal LoggerName As String, Options As ETW_OPEN_TRACE_OPTIONS, ByVal AllocationSize As LongPtr, ByVal MemoryPartitionHandle As LongPtr, LogFileHeader As TRACE_LOGFILE_HEADER) As LongLong
Public DeclareWide PtrSafe Function OpenTraceFromFile Lib "sechost" (ByVal LogFileName As String, Options As ETW_OPEN_TRACE_OPTIONS, LogFileHeader As TRACE_LOGFILE_HEADER) As LongLong
Public Declare PtrSafe Function ProcessTraceBufferIncrementReference Lib "sechost" (ByVal TraceHandle As LongLong, Buffer As ETW_BUFFER_HEADER) As Long
Public Declare PtrSafe Function ProcessTraceBufferDecrementReference Lib "sechost" (Buffer As ETW_BUFFER_HEADER) As Long
Public Declare PtrSafe Function ProcessTraceAddBufferToBufferStream Lib "sechost" (ByVal TraceHandle As LongLong, Buffer As ETW_BUFFER_HEADER, ByVal BufferSize As Long) As Long
Public DeclareWide PtrSafe Function QueryTraceProcessingHandle Lib "advapi32" (ByVal ProcessingHandle As LongLong, ByVal InformationClass As ETW_PROCESS_HANDLE_INFO_TYPE, InBuffer As Any, ByVal InBufferSize As Long, OutBuffer As Any, ByVal OutBufferSize As Long, ReturnLength As Long) As Long
Public Declare PtrSafe Function SetTraceCallback Lib "advapi32" (pGuid As UUID, ByVal EventCallback As LongPtr) As Long
Public Declare PtrSafe Function RemoveTraceCallback Lib "advapi32" (pGuid As UUID) As Long
[Unimplemented, Description("This API uses an unsupported language feature. Use TraceMessageVa.")]
Public Declare PtrSafe Function TraceMessage Lib "advapi32" (ByVal TraceHandle As LongLong, ByVal MessageFlags As Long, MessageGuid As UUID, ByVal MessageNumber As Integer) As Long
Public Declare PtrSafe Function TraceMessageVa Lib "advapi32" (ByVal TraceHandle As LongLong, ByVal MessageFlags As Long, MessageGuid As UUID, ByVal MessageNumber As Integer, MessageArgList As Any) As Long

Public Declare PtrSafe Function EventAccessControl Lib "advapi32" (Guid As UUID, ByVal Operation As EVENTSECURITYOPERATION, ByVal Sid As LongPtr, ByVal Rights As WmiGuidAndTraceLogFlags, ByVal AllowOrDeny As Byte) As Long
Public Declare PtrSafe Function EventAccessQuery Lib "advapi32" (Guid As UUID, Buffer As SECURITY_DESCRIPTOR, BufferSize As Long) As Long
Public Declare PtrSafe Function EventAccessRemove Lib "advapi32" (Guid As UUID) As Long


Public Function GetEventProcessorIndex(EventRecord As EVENT_RECORD) As Long
    If ((EventRecord.EventHeader.Flags And EVENT_HEADER_FLAG_PROCESSOR_INDEX) <> 0) Then
        Dim ProcessorIndex As Integer
        CopyMemory ProcessorIndex, EventRecord.BufferContext.ProcessorNumber, 2
        Return ProcessorIndex
    Else
        Return EventRecord.BufferContext.ProcessorNumber
    End If
End Function

Public Sub EtwGetTraitFromProviderTraits(ByVal ProviderTraits As LongPtr, [TypeHint(ETW_PROVIDER_TRAIT_TYPE)] ByVal TraitType As Byte, Trait As LongPtr, Size As Integer)
    Dim ByteCount As Integer
    CopyMemory ByteCount, ByVal ProviderTraits, 2
    Dim Ptr As LongPtr = ProviderTraits
    Dim PtrEnd As LongPtr = Ptr + ByteCount
    
    Trait = 0
    Size = 0
    
    If ByteCount < 3 Then Exit Sub
        
    Ptr += 2
    
    Ptr += lstrlenA(ByVal Ptr)
    Ptr += 1
    
    Do While (Ptr < PtrEnd)
        Dim TraitByteCount As Integer
        CopyMemory TraitByteCount, ByVal Ptr, 2
        If TraitByteCount < 3 Then Exit Do
        
        Dim tmp As Byte
        CopyMemory tmp, ByVal Ptr + 2, 1
        If (tmp = TraitType) And (Ptr + TraitByteCount < PtrEnd) Then
            Trait = Ptr + 3
            Size = TraitByteCount - 3
            Exit Sub
        End If
        
        Ptr += TraitByteCount
    Loop
End Sub


'winsafer.h

Public Enum SaferScope
    SAFER_SCOPEID_MACHINE = 1
    SAFER_SCOPEID_USER = 2
End Enum

Public Enum SaferLevelIds
    SAFER_LEVELID_FULLYTRUSTED = &H40000
    SAFER_LEVELID_NORMALUSER = &H20000
    SAFER_LEVELID_CONSTRAINED = &H10000
    SAFER_LEVELID_UNTRUSTED = &H01000
    SAFER_LEVELID_DISALLOWED = &H00000
End Enum

Public Enum SaferOpenFlags
    SAFER_LEVEL_OPEN = 1
End Enum

Public Const SAFER_MAX_FRIENDLYNAME_SIZE  = 256
Public Const SAFER_MAX_DESCRIPTION_SIZE  = 256
Public Const SAFER_MAX_HASH_SIZE  = 64

Public Enum SaferComputeTokenFlags
    SAFER_TOKEN_NULL_IF_EQUAL = &H00000001
    SAFER_TOKEN_COMPARE_ONLY = &H00000002
    SAFER_TOKEN_MAKE_INERT = &H00000004
    SAFER_TOKEN_WANT_FLAGS = &H00000008
End Enum

Public Enum SaferIdentifyLevelFlags
    SAFER_CRITERIA_IMAGEPATH = &H00001
    SAFER_CRITERIA_NOSIGNEDHASH = &H00002
    SAFER_CRITERIA_IMAGEHASH = &H00004
    SAFER_CRITERIA_AUTHENTICODE = &H00008
    SAFER_CRITERIA_URLZONE = &H00010
    SAFER_CRITERIA_APPX_PACKAGE = &H00020
    SAFER_CRITERIA_IMAGEPATH_NT = &H01000
End Enum

Public Type SAFER_CODE_PROPERTIES_V1
    ' Must be initialized to be the size of this structure,
    ' for the purposes of future/backwards compatibility.
    cbSize As Long
    ' Must be initialized to the types of criteria that should
    ' be considered when evaluating this structure.  This can be
    ' a combination of the SAFER_CRITERIA_xxxx flags.  If not enough
    ' of the structure elements needed to evaluate the criteria
    ' types indicated were supplied, then some of those criteria
    ' flags may be silently ignored.  Specifying 0 for this value
    ' will cause the entire structure's contents to be ignored.
    dwCheckFlags As SaferIdentifyLevelFlags
    ' Optionally specifies the fully-qualified path and filename
    ' to be used for discrimination checks based on the path.
    ' The ImagePath will additionally be used to open and read the
    ' file to identify any other discrimination criteria that was
    ' unsupplied in this structure.
    ImagePath As LongPtr
    ' Optionally specifies a file handle that has been opened to
    ' code image with at least GENERIC_READ access.  The handle will
    ' be used instead of explicitly opening the file again to compute
    ' other discrimination criteria that was unsupplied in this structure.
    hImageFileHandle As LongPtr
    ' Optionally specifies the pre-determined Internet Explorer
    ' security zone.  These enums are defined within urlmon.h
    ' For example: URLZONE_LOCAL_MACHINE, URLZONE_INTRANET,
    '   URLZONE_TRUSTED, URLZONE_INTERNET, or URLZONE_UNTRUSTED.
    UrlZoneId As URLZONE
    ' Optionally specifies the pre-computed hash of the image.
    ' The supplied hash is interpreted as being valid if ImageSize
    ' is non-zero and dwImageHashSize is non-zero and HashAlgorithm
    ' represents a valid hashing algorithm from wincrypt.h
    ' If the supplied hash fails to meet the conditions above, then
    ' the hash will be automatically computed against:
    '      1) by using ImageSize and pByteBlock if both are non-zero.
    '      2) by using hImageFileHandle if it is non-null.
    '      3) by attempting to open ImagePath if it is non-null.
    ImageHash(0 To (SAFER_MAX_HASH_SIZE - 1)) As Byte
    dwImageHashSize As Long
    ImageSize As LARGE_INTEGER
    HashAlgorithm As ALG_ID
    ' Optionally specifies a memory block of memory representing
    ' the image for which the trust is being requested for.  When
    ' this member is specified, ImageSize must also be supplied.
    pByteBlock As LongPtr 'LPBYTE
    ' Optionally gives the arguments used for Authenticode signer
    ' certificate verification.  These arguments are supplied to the
    ' WinVerifyTrust() API and control the user-interface prompting
    ' to accept untrusted certificates.
    hWndParent As LongPtr
    dwWVTUIChoice As WINTRUST_DATA_UICHOICE
End Type
Public Type SAFER_CODE_PROPERTIES_V2
    ' Begin SAFER_CODE_PROPERTIES_V1
    ' These must be present for backwards compatability
    ' Must be initialized to be the size of this structure,
    ' for the purposes of future/backwards compatibility.
    cbSize As Long
    ' Must be initialized to the types of criteria that should
    ' be considered when evaluating this structure.  This can be
    ' a combination of the SAFER_CRITERIA_xxxx flags.  If not enough
    ' of the structure elements needed to evaluate the criteria
    ' types indicated were supplied, then some of those criteria
    ' flags may be silently ignored.  Specifying 0 for this value
    ' will cause the entire structure's contents to be ignored.
    dwCheckFlags As SaferIdentifyLevelFlags
    ' Optionally specifies the fully-qualified path and filename
    ' to be used for discrimination checks based on the path.
    ' The ImagePath will additionally be used to open and read the
    ' file to identify any other discrimination criteria that was
    ' unsupplied in this structure.
    ImagePath As LongPtr
    ' Optionally specifies a file handle that has been opened to
    ' code image with at least GENERIC_READ access.  The handle will
    ' be used instead of explicitly opening the file again to compute
    ' other discrimination criteria that was unsupplied in this structure.
    hImageFileHandle As LongPtr
    ' Optionally specifies the pre-determined Internet Explorer
    ' security zone.  These enums are defined within urlmon.h
    ' For example: URLZONE_LOCAL_MACHINE, URLZONE_INTRANET,
    '   URLZONE_TRUSTED, URLZONE_INTERNET, or URLZONE_UNTRUSTED.
    UrlZoneId As URLZONE
    ' Optionally specifies the pre-computed hash of the image.
    ' The supplied hash is interpreted as being valid if ImageSize
    ' is non-zero and dwImageHashSize is non-zero and HashAlgorithm
    ' represents a valid hashing algorithm from wincrypt.h
    ' If the supplied hash fails to meet the conditions above, then
    ' the hash will be automatically computed against:
    '      1) by using ImageSize and pByteBlock if both are non-zero.
    '      2) by using hImageFileHandle if it is non-null.
    '      3) by attempting to open ImagePath if it is non-null.
    ImageHash(0 To (SAFER_MAX_HASH_SIZE - 1)) As Byte
    dwImageHashSize As Long
    ImageSize As LARGE_INTEGER
    HashAlgorithm As ALG_ID
    ' Optionally specifies a memory block of memory representing
    ' the image for which the trust is being requested for.  When
    ' this member is specified, ImageSize must also be supplied.
    pByteBlock As LongPtr 'LPBYTE
    ' Optionally gives the arguments used for Authenticode signer
    ' certificate verification.  These arguments are supplied to the
    ' WinVerifyTrust() API and control the user-interface prompting
    ' to accept untrusted certificates.
    hWndParent As LongPtr
    dwWVTUIChoice As WINTRUST_DATA_UICHOICE
    ' End SAFER_CODE_PROPERTIES_V1
    ' Package properties for Modern applications
    PackageMoniker As LongPtr
    PackagePublisher As LongPtr
    PackageName As LongPtr
    PackageVersion As LongLong
    PackageIsFramework As BOOL
End Type
'Alias SAFER_CODE_PROPERTIES As SAFER_CODE_PROPERTIES_V2
Public Type SAFER_CODE_PROPERTIES
    ' Begin SAFER_CODE_PROPERTIES_V1
    ' These must be present for backwards compatability
    ' Must be initialized to be the size of this structure,
    ' for the purposes of future/backwards compatibility.
    cbSize As Long
    ' Must be initialized to the types of criteria that should
    ' be considered when evaluating this structure.  This can be
    ' a combination of the SAFER_CRITERIA_xxxx flags.  If not enough
    ' of the structure elements needed to evaluate the criteria
    ' types indicated were supplied, then some of those criteria
    ' flags may be silently ignored.  Specifying 0 for this value
    ' will cause the entire structure's contents to be ignored.
    dwCheckFlags As SaferIdentifyLevelFlags
    ' Optionally specifies the fully-qualified path and filename
    ' to be used for discrimination checks based on the path.
    ' The ImagePath will additionally be used to open and read the
    ' file to identify any other discrimination criteria that was
    ' unsupplied in this structure.
    ImagePath As LongPtr
    ' Optionally specifies a file handle that has been opened to
    ' code image with at least GENERIC_READ access.  The handle will
    ' be used instead of explicitly opening the file again to compute
    ' other discrimination criteria that was unsupplied in this structure.
    hImageFileHandle As LongPtr
    ' Optionally specifies the pre-determined Internet Explorer
    ' security zone.  These enums are defined within urlmon.h
    ' For example: URLZONE_LOCAL_MACHINE, URLZONE_INTRANET,
    '   URLZONE_TRUSTED, URLZONE_INTERNET, or URLZONE_UNTRUSTED.
    UrlZoneId As URLZONE
    ' Optionally specifies the pre-computed hash of the image.
    ' The supplied hash is interpreted as being valid if ImageSize
    ' is non-zero and dwImageHashSize is non-zero and HashAlgorithm
    ' represents a valid hashing algorithm from wincrypt.h
    ' If the supplied hash fails to meet the conditions above, then
    ' the hash will be automatically computed against:
    '      1) by using ImageSize and pByteBlock if both are non-zero.
    '      2) by using hImageFileHandle if it is non-null.
    '      3) by attempting to open ImagePath if it is non-null.
    ImageHash(0 To (SAFER_MAX_HASH_SIZE - 1)) As Byte
    dwImageHashSize As Long
    ImageSize As LARGE_INTEGER
    HashAlgorithm As ALG_ID
    ' Optionally specifies a memory block of memory representing
    ' the image for which the trust is being requested for.  When
    ' this member is specified, ImageSize must also be supplied.
    pByteBlock As LongPtr 'LPBYTE
    ' Optionally gives the arguments used for Authenticode signer
    ' certificate verification.  These arguments are supplied to the
    ' WinVerifyTrust() API and control the user-interface prompting
    ' to accept untrusted certificates.
    hWndParent As LongPtr
    dwWVTUIChoice As WINTRUST_DATA_UICHOICE
    ' End SAFER_CODE_PROPERTIES_V1
    ' Package properties for Modern applications
    PackageMoniker As LongPtr
    PackagePublisher As LongPtr
    PackageName As LongPtr
    PackageVersion As LongLong
    PackageIsFramework As BOOL
End Type

Public Enum SaferPolicyFlags
    SAFER_POLICY_JOBID_MASK = &HFF000000
    SAFER_POLICY_JOBID_CONSTRAINED = &H04000000
    SAFER_POLICY_JOBID_UNTRUSTED = &H03000000
    SAFER_POLICY_ONLY_EXES = &H00010000
    SAFER_POLICY_SANDBOX_INERT = &H00020000
    SAFER_POLICY_HASH_DUPLICATE = &H00040000
    SAFER_POLICY_ONLY_AUDIT = &H00001000
    SAFER_POLICY_BLOCK_CLIENT_UI = &H00002000
    SAFER_POLICY_UIFLAGS_MASK = &H000000FF
    SAFER_POLICY_UIFLAGS_INFORMATION_PROMPT = &H00000001
    SAFER_POLICY_UIFLAGS_OPTION_PROMPT = &H00000002
    SAFER_POLICY_UIFLAGS_HIDDEN = &H00000004
End Enum

Public Enum SAFER_POLICY_INFO_CLASS
    ' 
    '  Accesses the list of all Levels defined in a policy.
    '  The corresponding data element is a buffer that is filled
    '  with multiple DWORDs, each representing the LevelIds that
    '  are defined within this scope.
    ' 
    SaferPolicyLevelList = 1
    ' 
    '  for transparent enforcement of policy in the execution
    '  framework -- will be used by native code execution but can
    '  be used by any policy enforcement environment.
    '  Corresponding data element is a DWORD holding a Boolean value.
    ' 
    SaferPolicyEnableTransparentEnforcement = 2
    ' 
    '  Returns the name of the Level that has been designed
    '  as the default level within the specified scope.
    '  The corresponding data element is a single DWORD buffer
    '  representing the LevelId of the default Level.  If no
    '  level has been configured to be the default, then the
    '  GetInfo API will return FALSE and GetLastError will
    '  return ERROR_NOT_FOUND.
    ' 
    SaferPolicyDefaultLevel = 3
    ' 
    '  Returns whether Code Identities or Default Level within the
    '  user scope can be considered during identification.
    ' 
    SaferPolicyEvaluateUserScope = 4
    ' 
    '  Control Flags for safer policy scope.
    ' 
    SaferPolicyScopeFlags = 5
    ' 
    '  Flags which indicate "audit" or "block client UI" rules
    ' 
    SaferPolicyDefaultLevelFlags = 6
    ' 
    '  Flag which indicates if certificate rules are applied in CreateProcess
    ' 
    SaferPolicyAuthenticodeEnabled = 7
End Enum
Public Enum SAFER_OBJECT_INFO_CLASS
    SaferObjectLevelId = 1 ' get: DWORD
    SaferObjectScopeId = 2 ' get: DWORD
    SaferObjectFriendlyName = 3 ' get/set: LPCWSTR
    SaferObjectDescription = 4 ' get/set: LPCWSTR
    SaferObjectBuiltin = 5 ' get: DWORD boolean
    SaferObjectDisallowed = 6 ' get: DWORD boolean
    SaferObjectDisableMaxPrivilege = 7 ' get: DWORD boolean
    SaferObjectInvertDeletedPrivileges = 8 ' get: DWORD boolean
    SaferObjectDeletedPrivileges = 9 ' get: TOKEN_PRIVILEGES
    SaferObjectDefaultOwner = 10 ' get: TOKEN_OWNER
    SaferObjectSidsToDisable = 11 ' get: TOKEN_GROUPS
    SaferObjectRestrictedSidsInverted = 12 ' get: TOKEN_GROUPS
    SaferObjectRestrictedSidsAdded = 13 ' get: TOKEN_GROUPS
    ' 
    '  To enumerate all identities, call GetInfo with
    '       SaferObjectAllIdentificationGuids.
    ' 
    SaferObjectAllIdentificationGuids = 14 ' get: SAFER_IDENTIFICATION_GUIDS
    ' 
    '  To create a new identity, call SetInfo with
    '       SaferObjectSingleIdentification with a new
    '       unique GUID that you have generated.
    '  To get details on a single identity, call GetInfo with
    '       SaferObjectSingleIdentification with desired GUID.
    '  To modify details of a single identity, call SetInfo with
    '       SaferObjectSingleIdentification with desired info and GUID.
    '  To delete an identity, call SetInfo with
    '       SaferObjectSingleIdentification with the
    '       header.dwIdentificationType set to 0.
    ' 
    SaferObjectSingleIdentification = 15 ' get/set: SAFER_IDENTIFICATION_*
    SaferObjectExtendedError = 16 ' get: DWORD dwError
End Enum

Public Enum SAFER_IDENTIFICATION_TYPES
    SaferIdentityDefault
    SaferIdentityTypeImageName = 1
    SaferIdentityTypeImageHash
    SaferIdentityTypeUrlZone
    SaferIdentityTypeCertificate
End Enum

Public Type SAFER_IDENTIFICATION_HEADER
    ' indicates the type of the structure, one of SaferIdentityType*
    dwIdentificationType As SAFER_IDENTIFICATION_TYPES
    ' size of the whole structure, not just the common header.
    cbStructSize As Long
    ' the unique GUID of the Identity in question.
    IdentificationGuid As UUID
    ' last change of this identification.
    lastModified As FILETIME
End Type

Public Type SAFER_PATHNAME_IDENTIFICATION
    ' header.dwIdentificationType must be SaferIdentityTypeImageName
    ' header.cbStructSize must be sizeof(SAFER_PATHNAME_IDENTIFICATION)
    header As SAFER_IDENTIFICATION_HEADER
    ' user-entered description
    Description(0 To (SAFER_MAX_DESCRIPTION_SIZE - 1)) As Integer
    ' filepath or name, possibly with vars
    ImageName As LongPtr 'PWCHAR
    ' any combo of SAFER_POLICY_* flags
    dwSaferFlags As SaferPolicyFlags
End Type

Public Type SAFER_HASH_IDENTIFICATION
    ' header.dwIdentificationType must be SaferIdentityTypeImageHash
    ' header.cbStructSize must be sizeof(SAFER_HASH_IDENTIFICATION)
    header As SAFER_IDENTIFICATION_HEADER
    ' user-entered friendly name, initially from file's resources.
    Description(0 To (SAFER_MAX_DESCRIPTION_SIZE - 1)) As Integer
    ' user-entered description.
    FriendlyName(0 To (SAFER_MAX_FRIENDLYNAME_SIZE - 1)) As Integer
    ' amount of ImageHash actually used, in bytes (MD5 is 16 bytes).
    HashSize As Long
    ' computed hash data itself.
    ImageHash(0 To (SAFER_MAX_HASH_SIZE - 1)) As Byte
    ' algorithm in which the hash was computed (CALG_MD5, etc).
    HashAlgorithm As ALG_ID
    ' size of the original file in bytes.
    ImageSize As LARGE_INTEGER
    ' any combo of SAFER_POLICY_* flags
    dwSaferFlags As SaferPolicyFlags
End Type
Public Type SAFER_HASH_IDENTIFICATION2
    ' Start by including the original structure. It contains number of bytes
    ' in this particular structure.
    hashIdentification As SAFER_HASH_IDENTIFICATION
    ' amount of ImageHash actually used, in bytes (SHA256 is 32 bytes).
    HashSize As Long
    ' computed hash data itself.
    ImageHash(0 To (SAFER_MAX_HASH_SIZE - 1)) As Byte
    ' algorithm in which the hash was computed (CALG_SHA256).
    HashAlgorithm As ALG_ID
End Type

Public Type SAFER_URLZONE_IDENTIFICATION
    ' header.dwIdentificationType must be SaferIdentityTypeUrlZone
    ' header.cbStructSize must be sizeof(SAFER_URLZONE_IDENTIFICATION)
    header As SAFER_IDENTIFICATION_HEADER
    ' any single URLZONE_* from urlmon.h
    UrlZoneId As URLZONE
    ' any combo of SAFER_POLICY_* flags
    dwSaferFlags As SaferPolicyFlags
End Type

Public Declare PtrSafe Function SaferGetPolicyInformation Lib "advapi32" (ByVal dwScopeId As SaferScope, ByVal SaferPolicyInfoClass As SAFER_POLICY_INFO_CLASS, ByVal InfoBufferSize As Long, InfoBuffer As Any, InfoBufferRetSize As Long, ByVal lpReserved As LongPtr) As BOOL
Public Declare PtrSafe Function SaferSetPolicyInformation Lib "advapi32" (ByVal dwScopeId As SaferScope, ByVal SaferPolicyInfoClass As SAFER_POLICY_INFO_CLASS, ByVal InfoBufferSize As Long, InfoBuffer As Any, ByVal lpReserved As LongPtr) As BOOL
Public Declare PtrSafe Function SaferCreateLevel Lib "advapi32" (ByVal dwScopeId As SaferScope, ByVal dwLevelId As SaferLevelIds, ByVal OpenFlags As SaferOpenFlags, pLevelHandle As LongPtr, ByVal lpReserved As LongPtr) As BOOL
Public Declare PtrSafe Function SaferCloseLevel Lib "advapi32" (ByVal hLevelHandle As LongPtr) As BOOL
Public Declare PtrSafe Function SaferIdentifyLevel Lib "advapi32" (ByVal dwNumProperties As Long, pCodeProperties As SAFER_CODE_PROPERTIES, pLevelHandle As LongPtr, ByVal lpReserved As LongPtr) As BOOL
Public Declare PtrSafe Function SaferComputeTokenFromLevel Lib "advapi32" (ByVal LevelHandle As LongPtr, ByVal InAccessToken As LongPtr, OutAccessToken As LongPtr, ByVal dwFlags As SaferComputeTokenFlags, lpReserved As Any) As BOOL
Public Declare PtrSafe Function SaferGetLevelInformation Lib "advapi32" (ByVal LevelHandle As LongPtr, ByVal dwInfoType As SAFER_OBJECT_INFO_CLASS, lpQueryBuffer As Any, ByVal dwInBufferSize As Long, lpdwOutBufferSize As Long) As BOOL
Public Declare PtrSafe Function SaferSetLevelInformation Lib "advapi32" (ByVal LevelHandle As LongPtr, ByVal dwInfoType As SAFER_OBJECT_INFO_CLASS, lpQueryBuffer As Any, ByVal dwInBufferSize As Long) As BOOL
Public Declare PtrSafe Function SaferRecordEventLogEntry Lib "advapi32" (ByVal hLevel As LongPtr, ByVal szTargetPath As LongPtr, ByVal lpReserved As LongPtr) As BOOL
Public Declare PtrSafe Function SaferiIsExecutableFileType Lib "advapi32" (ByVal szFullPathName As LongPtr, ByVal bFromShellExecute As Byte) As BOOL

Public Const SRP_POLICY_EXE  = "EXE"
Public Const SRP_POLICY_DLL  = "DLL"
Public Const SRP_POLICY_MSI  = "MSI"
Public Const SRP_POLICY_SCRIPT  = "SCRIPT"
Public Const SRP_POLICY_SHELL  = "SHELL"
Public Const SRP_POLICY_NOV2  = "IGNORESRPV2"
Public Const SRP_POLICY_APPX  = "APPX"
Public Const SRP_POLICY_WLDPMSI  = "WLDPMSI"
Public Const SRP_POLICY_WLDPSCRIPT  = "WLDPSCRIPT"
Public Const SRP_POLICY_WLDPCONFIGCI  = "WLDPCONFIGCI"
Public Const SRP_POLICY_MANAGEDINSTALLER  = "MANAGEDINSTALLER"

Public Enum RtlEncryptMemOptions
    ' // Allow Encrypt/Decrypt across process boundaries.
    ' // eg: encrypted buffer passed across LPC to another process which calls RtlDecryptMemory. 
    RTL_ENCRYPT_OPTION_CROSS_PROCESS = &H01
'  Allow Encrypt/Decrypt across callers with same LogonId.
'  eg: encrypted buffer passed across LPC to another process which calls RtlDecryptMemory whilst impersonating.
    RTL_ENCRYPT_OPTION_SAME_LOGON = &H02
'  Allow callers to encrypt information to be decrypted only by a system process
    RTL_ENCRYPT_OPTION_FOR_SYSTEM = &H04
End Enum
Public Const RTL_ENCRYPT_MEMORY_SIZE = 8

Public Declare PtrSafe Function RtlEncryptMemory Lib "advapi32" Alias "SystemFunction040" (Memory As Any, ByVal MemorySize As Long, ByVal OptionFlags As RtlEncryptMemOptions) As NTSTATUS
Public Declare PtrSafe Function RtlDecryptMemory Lib "advapi32" Alias "SystemFunction041" (Memory As Any, ByVal MemorySize As Long, ByVal OptionFlags As RtlEncryptMemOptions) As NTSTATUS

Public DeclareWide PtrSafe Function RtlCheckSignatureInFile Lib "advapi32" Alias "SystemFunction035" (ByVal Filename As String) As BOOL
Public DeclareWide PtrSafe Function RtlCheckSignatureInFile Lib "advapi32" Alias "SystemFunction035" (ByVal Filename As LongPtr) As BOOL


'winefs.h

Public Enum EfsSetUserKeyFlags
    WINEFS_SETUSERKEY_SET_CAPABILITIES = &H00000001
End Enum

Public Type EFS_CERTIFICATE_BLOB
    dwCertEncodingType As CRYPT_CERT_ENCODING_TYPE
    '#ifdef MIDL_PASS
    '    [range(0,32768)]
    '#endif // MIDL_PASS
    cbData As Long
    '#ifdef MIDL_PASS
    '    [size_is(cbData)]
    '#endif // MIDL_PASS
    pbData As LongPtr
End Type

Public Type EFS_HASH_BLOB
    '#ifdef MIDL_PASS
    '    [range(0,100)]
    '#endif // MIDL_PASS
    cbData As Long
    '#ifdef MIDL_PASS
    '    [size_is(cbData)]
    '#endif // MIDL_PASS
    pbData As LongPtr
End Type

Public Type EFS_RPC_BLOB
    '#ifdef MIDL_PASS
    '    [range(0,266240)]
    '#endif // MIDL_PASS
    cbData As Long
    '#ifdef MIDL_PASS
    '    [size_is(cbData)]
    '#endif // MIDL_PASS
    pbData As LongPtr
End Type

Public Type EFS_PIN_BLOB
    '#ifdef MIDL_PASS
    '    [range(0,8)]
    '#endif // MIDL_PASS
    cbPadding As Long
    '#ifdef MIDL_PASS
    '    [range(0,2048)]
    '#endif // MIDL_PASS
    cbData As Long
    '#ifdef MIDL_PASS
    '    [size_is(cbData+cbPadding)]
    '#endif // MIDL_PASS
    pbData As LongPtr
End Type

Public Type EFS_KEY_INFO
    dwVersion As Long
    Entropy As Long
    Algorithm As ALG_ID
    KeyLength As Long
End Type

Public Type EFS_COMPATIBILITY_INFO
    EfsVersion As Long
End Type

Public Const EFS_COMPATIBILITY_VERSION_NCRYPT_PROTECTOR  = 5
Public Const EFS_COMPATIBILITY_VERSION_PFILE_PROTECTOR  = 6

Public Function EFS_IS_DESCRIPTOR_VERSION(ByVal __v As Long) As Boolean
    Return ((__v = EFS_COMPATIBILITY_VERSION_NCRYPT_PROTECTOR) Or (__v = EFS_COMPATIBILITY_VERSION_PFILE_PROTECTOR))
End Function

Public Const EFS_SUBVER_UNKNOWN  = 0
Public Const EFS_EFS_SUBVER_EFS_CERT  = 1
Public Const EFS_PFILE_SUBVER_RMS  = 2
Public Const EFS_PFILE_SUBVER_APPX  = 3

Public Type EFS_VERSION_INFO
    EfsVersion As Long
    SubVersion As Long
End Type

Public Function EFS_IS_APPX_VERSION(ByVal __v As Long, ByVal __subV As Long) As Boolean
    Return ((__v = EFS_COMPATIBILITY_VERSION_PFILE_PROTECTOR) And (__subV = EFS_PFILE_SUBVER_APPX))
End Function
    
Public Type EFS_DECRYPTION_STATUS_INFO
    dwDecryptionError As Long
    dwHashOffset As Long
    cbHash As Long
End Type

Public Type EFS_ENCRYPTION_STATUS_INFO
    bHasCurrentKey As BOOL
    dwEncryptionError As Long
End Type

Public Type ENCRYPTION_CERTIFICATE
    cbTotalLength As Long
    pUserSid As LongPtr 'SID*
    pCertBlob As LongPtr 'PEFS_CERTIFICATE_BLOB
End Type

Public Const MAX_SID_SIZE = 256

Public Type ENCRYPTION_CERTIFICATE_HASH
    cbTotalLength As Long
    pUserSid As LongPtr 'SID*
    pHash As LongPtr 'PEFS_HASH_BLOB
    '#ifdef MIDL_PASS
    '    [string]
    '#endif // MIDL_PASS
    lpDisplayInformation As LongPtr
End Type

Public Type ENCRYPTION_CERTIFICATE_HASH_LIST
    '#ifdef MIDL_PASS
    '    [range(0,500)]
    '#endif // MIDL_PASS
    nCert_Hash As Long
    '#ifdef MIDL_PASS
    '    [size_is(nCert_Hash)]
    '#endif // MIDL_PASS
    pUsers As LongPtr 'PENCRYPTION_CERTIFICATE_HASH
End Type

Public Type ENCRYPTION_CERTIFICATE_LIST
    '#ifdef MIDL_PASS
    '    [range(0,500)]
    '#endif // MIDL_PASS
    nUsers As Long
    '#ifdef MIDL_PASS
    '    [size_is(nUsers)]
    '#endif // MIDL_PASS
    pUsers As LongPtr 'PENCRYPTION_CERTIFICATE
End Type

Public Enum EfsMetadataFlags
    EFS_METADATA_ADD_USER = &H00000001
    EFS_METADATA_REMOVE_USER = &H00000002
    EFS_METADATA_REPLACE_USER = &H00000004
    EFS_METADATA_GENERAL_OP = &H00000008
End Enum

Public Type ENCRYPTED_FILE_METADATA_SIGNATURE
    dwEfsAccessType As EfsMetadataFlags
    pCertificatesAdded As LongPtr 'PENCRYPTION_CERTIFICATE_HASH_LIST
    pEncryptionCertificate As LongPtr 'PENCRYPTION_CERTIFICATE
    pEfsStreamSignature As LongPtr 'PEFS_RPC_BLOB
End Type

Public Type ENCRYPTION_PROTECTOR
    cbTotalLength As Long
    pUserSid As LongPtr 'SID*
    '#ifdef MIDL_PASS
    '    [string]
    '#endif // MIDL_PASS
    lpProtectorDescriptor As LongPtr
End Type

Public Type ENCRYPTION_PROTECTOR_LIST
    nProtectors As Long
    '#ifdef MIDL_PASS
    '    [size_is(nProtectors)]
    '#endif // MIDL_PASS
    pProtectors As LongPtr 'PENCRYPTION_PROTECTOR*
End Type

Public Declare PtrSafe Function QueryUsersOnEncryptedFile Lib "advapi32" (ByVal lpFileName As LongPtr, pUsers As LongPtr) As Long
Public Declare PtrSafe Function QueryRecoveryAgentsOnEncryptedFile Lib "advapi32" (ByVal lpFileName As LongPtr, pRecoveryAgents As LongPtr) As Long
Public Declare PtrSafe Function RemoveUsersFromEncryptedFile Lib "advapi32" (ByVal lpFileName As LongPtr, pHashes As ENCRYPTION_CERTIFICATE_HASH_LIST) As Long
Public Declare PtrSafe Function AddUsersToEncryptedFile Lib "advapi32" (ByVal lpFileName As LongPtr, pEncryptionCertificates As ENCRYPTION_CERTIFICATE_LIST) As Long
Public Declare PtrSafe Function SetUserFileEncryptionKey Lib "advapi32" (pEncryptionCertificate As ENCRYPTION_CERTIFICATE) As Long
Public Declare PtrSafe Function SetUserFileEncryptionKeyEx Lib "advapi32" (pEncryptionCertificate As ENCRYPTION_CERTIFICATE, ByVal dwCapabilities As Long, ByVal dwFlags As EfsSetUserKeyFlags, ByVal pvReserved As LongPtr) As Long
Public Declare PtrSafe Sub FreeEncryptionCertificateHashList Lib "advapi32" (pUsers As ENCRYPTION_CERTIFICATE_HASH_LIST)
Public Declare PtrSafe Function EncryptionDisable Lib "advapi32" (ByVal DirPath As LongPtr, ByVal Disable As BOOL) As BOOL
Public Declare PtrSafe Function DuplicateEncryptionInfoFile Lib "advapi32" (ByVal SrcFileName As LongPtr, ByVal DstFileName As LongPtr, ByVal dwCreationDistribution As CreateFileDisposition, ByVal dwAttributes As FileEncryptionStatus, lpSecurityAttributes As SECURITY_ATTRIBUTES) As Long
Public Declare PtrSafe Function GetEncryptedFileMetadata Lib "advapi32" (ByVal lpFileName As LongPtr, pcbMetadata As Long, ppbMetadata As LongPtr) As Long
Public Declare PtrSafe Function SetEncryptedFileMetadata Lib "advapi32" (ByVal lpFileName As LongPtr, pbOldMetadata As Any, pbNewMetadata As Any, pOwnerHash As ENCRYPTION_CERTIFICATE_HASH, ByVal dwOperation As Long, pCertificatesAdded As ENCRYPTION_CERTIFICATE_HASH_LIST) As Long
Public Declare PtrSafe Sub FreeEncryptedFileMetadata Lib "advapi32" (ByVal pbMetadata As LongPtr)






#End Region

#Region "tdh"
'tdh.h

Public Type EVENT_MAP_ENTRY
    OutputOffset As Long
    '    union {
    '        ULONG Value;        // For ULONG value (valuemap and bitmap).
    '        ULONG InputOffset;  // For String value (patternmap or valuemap in WBEM).
    '    };
    ValueOrInputOffset As Long
End Type

Public Enum MAP_FLAGS
    EVENTMAP_INFO_FLAG_MANIFEST_VALUEMAP = &H1
    EVENTMAP_INFO_FLAG_MANIFEST_BITMAP = &H2
    EVENTMAP_INFO_FLAG_MANIFEST_PATTERNMAP = &H4
    EVENTMAP_INFO_FLAG_WBEM_VALUEMAP = &H8
    EVENTMAP_INFO_FLAG_WBEM_BITMAP = &H10
    EVENTMAP_INFO_FLAG_WBEM_FLAG = &H20
    EVENTMAP_INFO_FLAG_WBEM_NO_MAP = &H40
End Enum
Public Enum MAP_VALUETYPE
    EVENTMAP_ENTRY_VALUETYPE_ULONG
    EVENTMAP_ENTRY_VALUETYPE_STRING
End Enum

[Description("Array can be any size. 128 entries are provided as a default buffer. EVENT_MAP_INFO_sa is available with it as a SAFEARRAY for split copying as a receiver. If more needed as a sender, use a byte array and append additional entries.")]
Public Type EVENT_MAP_INFO
    NameOffset As Long
    Flag As MAP_FLAGS
    EntryCount As Long
    '    union {
    '        MAP_VALUETYPE MapEntryValueType;
    '        ULONG FormatStringOffset;
    '    };
    ValueTypeOrFmtStrOffset As Long
    MapEntryArray(127) As EVENT_MAP_ENTRY
End Type
Public Type EVENT_MAP_INFO_sa
    NameOffset As Long
    Flag As MAP_FLAGS
    EntryCount As Long
    '    union {
    '        MAP_VALUETYPE MapEntryValueType;
    '        ULONG FormatStringOffset;
    '    };
    ValueTypeOrFmtStrOffset As Long
    MapEntryArray() As EVENT_MAP_ENTRY
End Type

Public Enum TDH_IN_TYPE
    TDH_INTYPE_NULL ' Invalid InType value. */
    TDH_INTYPE_UNICODESTRING   '
'         Field size depends on the Flags and length fields of the corresponding
'         EVENT_PROPERTY_INFO structure (epi) as follows:
'         - If ((epi.Flags & PropertyParamLength) != 0), the
'           epi.lengthPropertyIndex field contains the index of the property that
'           contains the number of WCHARs in the string.
'         - Else if ((epi.Flags & PropertyLength) != 0 || epi.length != 0), the
'           epi.length field contains number of WCHARs in the string.
'         - Else the string is nul-terminated (terminated by (WCHAR)0).
'         Note that some event providers do not correctly nul-terminate the last
'         string field in the event. While this is technically invalid, event
'         decoders may silently tolerate such behavior instead of rejecting the
'         event as invalid. */
    TDH_INTYPE_ANSISTRING   '
'         Field size depends on the Flags and length fields of the corresponding
'         EVENT_PROPERTY_INFO structure (epi) as follows:
'         - If ((epi.Flags & PropertyParamLength) != 0), the
'           epi.lengthPropertyIndex field contains the index of the property that
'           contains the number of BYTEs in the string.
'         - Else if ((epi.Flags & PropertyLength) != 0 || epi.length != 0), the
'           epi.length field contains number of BYTEs in the string.
'         - Else the string is nul-terminated (terminated by (CHAR)0).
'         Note that some event providers do not correctly nul-terminate the last
'         string field in the event. While this is technically invalid, event
'         decoders may silently tolerate such behavior instead of rejecting the
'         event as invalid. */
    TDH_INTYPE_INT8   ' Field size is 1 byte. */
    TDH_INTYPE_UINT8   ' Field size is 1 byte. */
    TDH_INTYPE_INT16   ' Field size is 2 bytes. */
    TDH_INTYPE_UINT16   ' Field size is 2 bytes. */
    TDH_INTYPE_INT32   ' Field size is 4 bytes. */
    TDH_INTYPE_UINT32   ' Field size is 4 bytes. */
    TDH_INTYPE_INT64  ' Field size is 8 bytes. */
    TDH_INTYPE_UINT64  ' Field size is 8 bytes. */
    TDH_INTYPE_FLOAT  ' Field size is 4 bytes. */
    TDH_INTYPE_DOUBLE   ' Field size is 8 bytes. */
    TDH_INTYPE_BOOLEAN   ' Field size is 4 bytes. */
    TDH_INTYPE_BINARY   '
'         Field size depends on the OutType, Flags, and length fields of the
'         corresponding EVENT_PROPERTY_INFO structure (epi) as follows:
'         - If ((epi.Flags & PropertyParamLength) != 0), the
'           epi.lengthPropertyIndex field contains the index of the property that
'           contains the number of BYTEs in the field.
'         - Else if ((epi.Flags & PropertyLength) != 0 || epi.length != 0), the
'           epi.length field contains number of BYTEs in the field.
'         - Else if (epi.OutType == IPV6), the field size is 16 bytes.
'         - Else the field is incorrectly encoded. */
    TDH_INTYPE_GUID  ' Field size is 16 bytes. */
    TDH_INTYPE_POINTER   '
'         Field size depends on the eventRecord.EventHeader.Flags value. If the
'         EVENT_HEADER_FLAG_32_BIT_HEADER flag is set, the field size is 4 bytes.
'         If the EVENT_HEADER_FLAG_64_BIT_HEADER flag is set, the field size is 8
'         bytes. Default OutType is HEXINT64. Other usable OutTypes include
'         CODE_POINTER, LONG, UNSIGNEDLONG.
'         */
    TDH_INTYPE_FILETIME   ' Field size is 8 bytes. */
    TDH_INTYPE_SYSTEMTIME   ' Field size is 16 bytes. */
    TDH_INTYPE_SID   '
'         Field size is determined by reading the first few bytes of the field
'         value to determine the number of relative IDs. */
    TDH_INTYPE_HEXINT32   ' Field size is 4 bytes. */
    TDH_INTYPE_HEXINT64   ' Field size is 8 bytes. */
    TDH_INTYPE_MANIFEST_COUNTEDSTRING   '
'         Supported in Windows 2018 Fall Update or later. This is the same as
'         TDH_INTYPE_COUNTEDSTRING, but can be used in manifests.
'         Field contains a little-endian 16-bit bytecount followed by a WCHAR
'         (16-bit character) string. Default OutType is STRING. Other usable
'         OutTypes include XML, JSON. Field size is determined by reading the
'         first two bytes of the payload, which are then interpreted as a
'         little-endian 16-bit integer which gives the number of additional bytes
'         (not characters) in the field. */
    TDH_INTYPE_MANIFEST_COUNTEDANSISTRING  '
'         Supported in Windows 2018 Fall Update or later. This is the same as
'         TDH_INTYPE_COUNTEDANSISTRING, but can be used in manifests.
'         Field contains a little-endian 16-bit bytecount followed by a CHAR
'         (8-bit character) string. Default OutType is STRING. Other usable
'         OutTypes include XML, JSON, UTF8. Field size is determined by reading
'         the first two bytes of the payload, which are then interpreted as a
'         little-endian 16-bit integer which gives the number of additional bytes
'         (not characters) in the field. */
    TDH_INTYPE_RESERVED24
    TDH_INTYPE_MANIFEST_COUNTEDBINARY  '
'         Supported in Windows 2018 Fall Update or later.
'         Field contains a little-endian 16-bit bytecount followed by binary
'         data. Default OutType is HEXBINARY. Other usable
'         OutTypes include IPV6, SOCKETADDRESS, PKCS7_WITH_TYPE_INFO. Field size
'         is determined by reading the first two bytes of the payload, which are
'         then interpreted as a little-endian 16-bit integer which gives the
'         number of additional bytes in the field. */
    '  End of winmeta intypes.
    '  Start of TDH intypes for WBEM. These types cannot be used in manifests.
    TDH_INTYPE_COUNTEDSTRING = 300 '
'         Field contains a little-endian 16-bit bytecount followed by a WCHAR
'         (16-bit character) string. Default OutType is STRING. Other usable
'         OutTypes include XML, JSON. Field size is determined by reading the
'         first two bytes of the payload, which are then interpreted as a
'         little-endian 16-bit integer which gives the number of additional bytes
'         (not characters) in the field. */
    TDH_INTYPE_COUNTEDANSISTRING
'         Field contains a little-endian 16-bit bytecount followed by a CHAR
'         (8-bit character) string. Default OutType is STRING. Other usable
'         OutTypes include XML, JSON, UTF8. Field size is determined by reading
'         the first two bytes of the payload, which are then interpreted as a
'         little-endian 16-bit integer which gives the number of additional bytes
'         (not characters) in the field. */
    TDH_INTYPE_REVERSEDCOUNTEDSTRING
'         Deprecated. Prefer TDH_INTYPE_COUNTEDSTRING.
'         Field contains a big-endian 16-bit bytecount followed by a WCHAR
'         (16-bit little-endian character) string. Default OutType is STRING.
'         Other usable OutTypes include XML, JSON. Field size is determined by
'         reading the first two bytes of the payload, which are then interpreted
'         as a big-endian 16-bit integer which gives the number of additional
'         bytes (not characters) in the field. */
    TDH_INTYPE_REVERSEDCOUNTEDANSISTRING
'         Deprecated. Prefer TDH_INTYPE_COUNTEDANSISTRING.
'         Field contains a big-endian 16-bit bytecount followed by a CHAR (8-bit
'         character) string. Default OutType is STRING. Other usable OutTypes
'         include XML, JSON, UTF8. Field size is determined by reading the first
'         two bytes of the payload, which are then interpreted as a big-endian
'         16-bit integer which gives the number of additional bytes in the
'         field. */
    TDH_INTYPE_NONNULLTERMINATEDSTRING
'         Deprecated. Prefer TDH_INTYPE_COUNTEDSTRING.
'         Field contains a WCHAR (16-bit character) string. Default OutType is
'         STRING. Other usable OutTypes include XML, JSON. Field size is the
'         remaining bytes of data in the event. */
    TDH_INTYPE_NONNULLTERMINATEDANSISTRING
'         Deprecated. Prefer TDH_INTYPE_COUNTEDANSISTRING.
'         Field contains a CHAR (8-bit character) string. Default OutType is
'         STRING. Other usable OutTypes include XML, JSON, UTF8. Field size is
'         the remaining bytes of data in the event. */
    TDH_INTYPE_UNICODECHAR
'         Deprecated. Prefer TDH_INTYPE_UINT16 with TDH_OUTTYPE_STRING.
'         Field contains a WCHAR (16-bit character) value. Default OutType is
'         STRING. Field size is 2 bytes. */
    TDH_INTYPE_ANSICHAR
'         Deprecated. Prefer TDH_INTYPE_UINT8 with TDH_OUTTYPE_STRING.
'         Field contains a CHAR (8-bit character) value. Default OutType is
'         STRING. Field size is 1 byte. */
    TDH_INTYPE_SIZET
'         Deprecated. Prefer TDH_INTYPE_POINTER with TDH_OUTTYPE_UNSIGNEDLONG.
'         Field contains a SIZE_T (UINT_PTR) value. Default OutType is HEXINT64.
'         Field size depends on the eventRecord.EventHeader.Flags value. If the
'         EVENT_HEADER_FLAG_32_BIT_HEADER flag is set, the field size is 4 bytes.
'         If the EVENT_HEADER_FLAG_64_BIT_HEADER flag is set, the field size is
'         8 bytes. */
    TDH_INTYPE_HEXDUMP
'         Deprecated. Prefer TDH_INTYPE_BINARY.
'         Field contains binary data. Default OutType is HEXBINARY. Field size is
'         determined by reading the first four bytes of the payload, which are
'         then interpreted as a little-endian UINT32 which gives the number of
'         additional bytes in the field. */
    TDH_INTYPE_WBEMSID
'         Deprecated. Prefer TDH_INTYPE_SID.
'         Field contains an SE_TOKEN_USER (security identifier) value. Default
'         OutType is STRING (i.e. the SID will be converted to a string during
'         decoding using ConvertSidToStringSid or equivalent). Field size is
'         determined by reading the first few bytes of the field value to
'         determine the number of relative IDs. Because the SE_TOKEN_USER
'         structure includes pointers, decoding this structure requires accurate
'         knowledge of the event provider's pointer size (i.e. from
'         eventRecord.EventHeader.Flags). */
End Enum
Public Enum TDH_OUT_TYPE
    TDH_OUTTYPE_NULL
'         Default OutType value. If a field's OutType is set to this value, the
'         decoder should determine the default OutType corresponding to the
'         field's InType and use that OutType when decoding the field. */
    TDH_OUTTYPE_STRING
'         Implied by the STRING, CHAR, and SID InType values. Applicable to the
'         INT8, UINT8, UINT16 InType values. Specifies that the field should be
'         decoded as text. Decoding depends on the InType. For INT8, UINT8, and
'         ANSISTRING InTypes, the data is decoded using the ANSI code page of the
'         event provider. For UINT16 and UNICODESTRING InTypes, the data is
'         decoded as UTF-16LE. For SID InTypes, the data is decoded using
'         ConvertSidToStringSid or equivalent. */
    TDH_OUTTYPE_DATETIME
'         Implied by the FILETIME and SYSTEMTIME InType values. Data is decoded
'         as a date/time. FILETIME is decoded as a 64-bit integer representing
'         the number of 100-nanosecond intervals since January 1, 1601.
'         SYSTEMTIME is decoded as the Win32 SYSTEMTIME structure. In both cases,
'         the time zone must be determined using other methods. (FILETIME is
'         usually but not always UTC.) */
    TDH_OUTTYPE_BYTE
'         Implied by the INT8 InType value. Data is decoded as a signed integer. */
    TDH_OUTTYPE_UNSIGNEDBYTE
'         Implied by the UINT8 InType value. Data is decoded as an unsigned
'         integer. */
    TDH_OUTTYPE_SHORT
'         Implied by the INT16 InType value. Data is decoded as a signed
'         little-endian integer. */
    TDH_OUTTYPE_UNSIGNEDSHORT
'         Implied by the UINT16 InType value. Data is decoded as an unsigned
'         little-endian integer. */
    TDH_OUTTYPE_INT
'         Implied by the INT32 InType value. Data is decoded as a signed
'         little-endian integer. */
    TDH_OUTTYPE_UNSIGNEDINT
'         Implied by the UINT32 InType value. Data is decoded as an unsigned
'         little-endian integer. */
    TDH_OUTTYPE_LONG
'         Implied by the INT64 InType value. Applicable to the INT32 InType value
'         (i.e. to distinguish between the C data types "long int" and "int").
'         Data is decoded as a signed little-endian integer. */
    TDH_OUTTYPE_UNSIGNEDLONG
'         Implied by the UINT64 InType value. Applicable to the UINT32 InType
'         value (i.e. to distinguish between the C data types "long int" and
'         "int"). Data is decoded as an unsigned little-endian integer. */
    TDH_OUTTYPE_FLOAT
'         Implied by the FLOAT InType value. Data is decoded as a
'         single-precision floating-point number. */
    TDH_OUTTYPE_DOUBLE
'         Implied by the DOUBLE InType value. Data is decoded as a
'         double-precision floating-point number. */
    TDH_OUTTYPE_BOOLEAN
'         Implied by the BOOL InType value. Applicable to the UINT8 InType value.
'         Data is decoded as a Boolean (false if zero, true if non-zero). */
    TDH_OUTTYPE_GUID
'         Implied by the GUID InType value. Data is decoded as a GUID. */
    TDH_OUTTYPE_HEXBINARY
'         Not commonly used. Implied by the BINARY and HEXDUMP InType values. */
    TDH_OUTTYPE_HEXINT8
'         Specifies that the field should be formatted as a hexadecimal integer.
'         Applicable to the UINT8 InType value. */
    TDH_OUTTYPE_HEXINT16
'         Specifies that the field should be formatted as a hexadecimal integer.
'         Applicable to the UINT16 InType value. */
    TDH_OUTTYPE_HEXINT32
'         Not commonly used. Implied by the HEXINT32 InType value. Applicable to
'         the UINT32 InType value. */
    TDH_OUTTYPE_HEXINT64
'         Not commonly used. Implied by the HEXINT64 InType value. Applicable to
'         the UINT64 InType value. */
    TDH_OUTTYPE_PID
'         Specifies that the field is a process identifier. Applicable to the
'         UINT32 InType value. */
    TDH_OUTTYPE_TID
'         Specifies that the field is a thread identifier. Applicable to the
'         UINT32 InType value. */
    TDH_OUTTYPE_PORT
'         Specifies that the field is an Internet Protocol port number, specified
'         in network byte order (big-endian). Applicable to the UINT16 InType
'         value. */
    TDH_OUTTYPE_IPV4
'         Specifies that the field is an Internet Protocol V4 address. Applicable
'         to the UINT32 InType value. */
    TDH_OUTTYPE_IPV6
'         Specifies that the field is an Internet Protocol V6 address. Applicable
'         to the BINARY InType value. If the length of a field is unspecified in
'         the EVENT_PROPERTY_INFO but the field's InType is BINARY and its
'         OutType is IPV6, the field's length should be assumed to be 16 bytes. */
    TDH_OUTTYPE_SOCKETADDRESS
'         Specifies that the field is a SOCKADDR structure. Applicable to the
'         BINARY InType value. Note that different address types have different
'         sizes. */
    TDH_OUTTYPE_CIMDATETIME
'         Not commonly used. */
    TDH_OUTTYPE_ETWTIME
'         Not commonly used. Applicable to the UINT32 InType value. */
    TDH_OUTTYPE_XML
'         Specifies that the field should be treated as XML text. Applicable to
'         the *STRING InType values. When this OutType is used, decoders should
'         use standard XML decoding rules (i.e. assume a Unicode encoding unless
'         the document specifies a different encoding in its encoding
'         attribute). */
    TDH_OUTTYPE_ERRORCODE
'         Not commonly used. Specifies that the field is an error code of
'         some type. Applicable to the UINT32 InType value. */
    TDH_OUTTYPE_WIN32ERROR
'         Specifies that the field is a Win32 error code. Applicable to the
'         UINT32 and HEXINT32 InType values. */
    TDH_OUTTYPE_NTSTATUS
'         Specifies that the field is an NTSTATUS code. Applicable to the UINT32
'         and HEXINT32 InType values. */
    TDH_OUTTYPE_HRESULT
'         Specifies that the field is an HRESULT error code. Applicable to the
'         INT32 InType value. */
    TDH_OUTTYPE_CULTURE_INSENSITIVE_DATETIME
'         Specifies that a date/time value should be formatted in a
'         locale-invariant format. Applicable to the FILETIME and SYSTEMTIME
'         InType values. */
    TDH_OUTTYPE_JSON
'         Specifies that the field should be treated as JSON text. Applicable to
'         the *STRING InType values. When this OutType is used with the ANSI
'         string InType values, decoders should decode the data as UTF-8. */
    TDH_OUTTYPE_UTF8
'         Specifies that the field should be treated as UTF-8 text. Applicable to
'         the *ANSISTRING InType values. */
    TDH_OUTTYPE_PKCS7_WITH_TYPE_INFO
'         Specifies that the field should be treated as a PKCS#7 message (e.g.
'         encrypted and/or signed). Applicable to the BINARY InType value. One
'         or more bytes of TraceLogging-compatible type information (providing
'         the type of the inner content) may optionally be appended immediately
'         after the PKCS#7 message. For example, the byte 0x01
'         (TlgInUNICODESTRING = 0x01) might be appended to indicate that the
'         inner content is to be interpreted as InType = UNICODESTRING; the bytes
'         0x82 0x22 (TlgInANSISTRING + TlgInChain = 0x82, TlgOutJSON = 0x22)
'         might be appended to indicate that the inner content is to be
'         interpreted as InType = ANSISTRING, OutType = JSON. */
    TDH_OUTTYPE_CODE_POINTER
'         Specifies that the field should be treated as an address that can
'         potentially be decoded into a symbol name. Applicable to InTypes
'         UInt32, UInt64, HexInt32, HexInt64, and Pointer. */
    TDH_OUTTYPE_DATETIME_UTC
'         Usable with the FILETIME and SYSTEMTIME InType values. Data is decoded
'         as a date/time. FILETIME is decoded as a 64-bit integer representing
'         the number of 100-nanosecond intervals since January 1, 1601.
'         SYSTEMTIME is decoded as the Win32 SYSTEMTIME structure. In both cases,
'         the time zone is assumed to be UTC.) */
    '  End of winmeta outtypes.
    '  Start of TDH outtypes for WBEM.
    TDH_OUTTYPE_REDUCEDSTRING = 300 '
'         Not commonly used. */
    TDH_OUTTYPE_NOPRINT
'         Not commonly used. Specifies that the field should not be shown in the
'         output of the decoding tool. This might be applied to a Count or a
'         Length field. Applicable to all InType values. Most decoders ignore
'         this value. */
    TDH_OUTYTPE_ERRORCODE = TDH_OUTTYPE_ERRORCODE
End Enum

Public Enum PROPERTY_FLAGS
    PropertyStruct = &H1 ' Type is struct.
    PropertyParamLength = &H2 ' Length field is index of param with length.
    PropertyParamCount = &H4 ' Count field is index of param with count.
    PropertyWBEMXmlFragment = &H8 ' WBEM extension flag for property.
    PropertyParamFixedLength = &H10 ' Length of the parameter is fixed.
    PropertyParamFixedCount = &H20 ' Count of the parameter is fixed.
    PropertyHasTags = &H40 ' The Tags field has been initialized.
    PropertyHasCustomSchema = &H80 ' Type is described with a custom schema.
End Enum

Public Type EVENT_PROPERTY_INFO
    Flags As PROPERTY_FLAGS
    NameOffset As Long
    ' union {
        ' struct _nonStructType {
            ' USHORT InType;
            ' USHORT OutType;
            ' ULONG MapNameOffset;
        ' } nonStructType;
        ' struct _structType {
            ' USHORT StructStartIndex;
            ' USHORT NumOfStructMembers;
            ' ULONG padding;
        ' } structType;
        ' struct _customSchemaType {
            ' // Data of this field is described by a user-defined serialization
            ' // protocol such as Bond or Protocol Buffers. InType and OutType
            ' // should be set for best-effort decoding by decoders that do not
            ' // understand the schema, e.g. InType could be set to
            ' // TDH_INTYPE_BINARY so that a decoder can properly extract or skip
            ' // the raw serialized data even if it can't parse it. The
            ' // CustomSchemaOffset points at a structure laid out as:
            ' // UINT16 Protocol; // User-defined value from 5..31
            ' // UINT16 Length;
            ' // BYTE SchemaData[Length];
            ' USHORT InType;
            ' USHORT OutType;
            ' ULONG CustomSchemaOffset;
        ' } customSchemaType;
    ' };
    ' union {
        ' USHORT count;
        ' USHORT countPropertyIndex;
    ' };
    ' union {
        ' USHORT length;
        ' USHORT lengthPropertyIndex;
    ' };
    ' union {
        ' ULONG Reserved;
        ' struct {
            ' ULONG Tags : 28;
        ' };
    ' };
    InTypeOrStartIndex As Integer
    OutTypeOrNumMembers As Integer
    OffsetOrPadding As Long
    Count As Integer
    Length As Integer
    Tags As Long
End Type

Public Enum DECODING_SOURCE
    DecodingSourceXMLFile
    DecodingSourceWbem
    DecodingSourceWPP
    DecodingSourceTlg
    DecodingSourceMax
End Enum

Public Enum TEMPLATE_FLAGS
    TEMPLATE_EVENT_DATA = 1 ' Used when custom xml is not specified.
    TEMPLATE_USER_DATA = 2 ' Used when custom xml is specified.
    TEMPLATE_CONTROL_GUID = 4 ' EventGuid contains the manifest control GUID.
End Enum

[Description("Array can be any size. 128 entries are provided as a default buffer. TRACE_EVENT_INFO_sa is available with it as a SAFEARRAY for split copying as a receiver. If more needed as a sender, use a byte array and append additional entries.")]
Public Type TRACE_EVENT_INFO
    ProviderGuid As UUID /* The meaning of this field depends on DecodingSource.
        - XMLFile: ProviderGuid contains the decode GUID (the provider GUID of
          the manifest).
        - Wbem: If EventGuid is GUID_NULL, ProviderGuid contains the decode
          GUID. Otherwise, ProviderGuid contains the control GUID.
        - WPP: ProviderGuid is not used (always GUID_NULL).
        - Tlg: ProviderGuid contains the control GUID. */

    EventGuid As UUID /* The meaning of this field depends on DecodingSource.
        - XMLFile: If the provider specifies a controlGuid, EventGuid contains
          the controlGuid and Flags contains TEMPLATE_CONTROL_GUID. Otherwise,
          if the event's Task specifies an eventGUID, EventGuid contains the
          eventGUID. Otherwise, EventGuid is GUID_NULL.
        - Wbem: If EventGuid is not GUID_NULL, it is the decode GUID.
        - WPP: EventGuid contains the decode GUID.
        - Tlg: EventGuid is not used (always GUID_NULL). */

    EventDescriptor As EVENT_DESCRIPTOR
    DecodingSource As DECODING_SOURCE
    ProviderNameOffset As Long
    LevelNameOffset As Long
    ChannelNameOffset As Long
    KeywordsNameOffset As Long

    TaskNameOffset As Long /* Meaning of this field depends on DecodingSource.
        - XMLFile: The offset to the name of the associated task.
        - Wbem: The offset to the event's MOF "DisplayName" property. For many
          Wbem providers, ProviderName is a provider category and TaskName is
          the provider subcategory.
        - WPP: Not used.
        - Tlg: The offset to the name of the event. */

    OpcodeNameOffset As Long /* Meaning of this field depends on DecodingSource.
        - XMLFile: The offset to the name of the associated opcode.
        - Wbem: The offset to the event's MOF "EventTypeName" property. For
          many Wbem providers, OpcodeName is the event's name.
        - WPP: Not used.
        - Tlg: The offset to the name of the associated opcode. */

    EventMessageOffset As Long
    ProviderMessageOffset As Long
    BinaryXMLOffset As Long
    BinaryXMLSize As Long

' //    union {
' //        ULONG EventNameOffset; /* Event name for manifest-based events.
'             This field is valid only if DecodingSource is set to
'             DecodingSourceXMLFile or DecodingSourceTlg.

'             EventNameOffset contains the offset from the beginning of this
'             structure to a nul-terminated Unicode string that contains the
'             event's name.

'             This field will be 0 if the event does not have an assigned name or
'             if this event is decoded on a system that does not support decoding
'             manifest event names. Event name decoding is supported on Windows
'             10 Fall Creators Update (2017) and later. */

'  //       ULONG ActivityIDNameOffset; /* Activity ID name for WBEM events.
'             This field is valid only if DecodingSource is set to
'             DecodingSourceWbem.

'             ActivityIDNameOffset contains the offset from the beginning of this
'             structure to a nul-terminated Unicode string that contains the
'             property name of the activity identifier in the MOF class. */
' //   };
    EventNameOrActivityIdNameOffset As Long
' //    union {
' //        ULONG EventAttributesOffset; /* Attributes for manifest-based events.
'             This field is valid only if DecodingSource is set to
'             DecodingSourceXMLFile.

'             EventAttributesOffset contains the offset from the beginning of
'             this structure to a nul-terminated Unicode string that contains a
'             semicolon-separated list of name=value attributes associated with
'             the event.

'             This field will be 0 if the event does not have attributes or if
'             this event is decoded on a system that does not support decoding
'             manifest event attributes. Attribute decoding is supported on
'             Windows 10 Fall Creators Update (2017) and later.

'             Defined attributes include:
'             FILE=Filename of source code associated with event;
'             LINE=Line number of source code associated with event;
'             COL=Column of source code associated with event;
'             FUNC=Function name associated with event;
'             MJ=Major component associated with event;
'             MN=Minor component associated with event.

'             Values containing semicolons or double-quotes should be quoted
'             using double-quotes. Double-quotes within the value should be
'             doubled. Example string:
'             FILE=source.cpp;LINE=123;MJ="Value; ""Quoted""" */

'  //       ULONG RelatedActivityIDNameOffset; /* Related activity ID name (WBEM).
'             This field is valid only if DecodingSource is set to
'             DecodingSourceWbem.

'             RelatedActivityIDNameOffset contains the offset from the beginning
'             of this structure to a nul-terminated Unicode string that contains
'             the property name of the related activity identifier in the MOF
'             class. */
' //    };
    EventAttributesOrRelatedActivityIDNameOffset As Long
    
    PropertyCount As Long
    TopLevelPropertyCount As Long
'    union {
        Flags As TEMPLATE_FLAGS
'        struct {
'            ULONG Reserved : 4; // TEMPLATE_FLAGS values
'           ULONG Tags : 28;
'        };
'    };
  'EVENT_PROPERTY_INFO EventPropertyInfoArray[ANYSIZE_ARRAY];
  EventPropertyInfoArray(127) As EVENT_PROPERTY_INFO
End Type
Public Type TRACE_EVENT_INFO_sa
    ProviderGuid As UUID /* The meaning of this field depends on DecodingSource.
        - XMLFile: ProviderGuid contains the decode GUID (the provider GUID of
          the manifest).
        - Wbem: If EventGuid is GUID_NULL, ProviderGuid contains the decode
          GUID. Otherwise, ProviderGuid contains the control GUID.
        - WPP: ProviderGuid is not used (always GUID_NULL).
        - Tlg: ProviderGuid contains the control GUID. */

    EventGuid As UUID /* The meaning of this field depends on DecodingSource.
        - XMLFile: If the provider specifies a controlGuid, EventGuid contains
          the controlGuid and Flags contains TEMPLATE_CONTROL_GUID. Otherwise,
          if the event's Task specifies an eventGUID, EventGuid contains the
          eventGUID. Otherwise, EventGuid is GUID_NULL.
        - Wbem: If EventGuid is not GUID_NULL, it is the decode GUID.
        - WPP: EventGuid contains the decode GUID.
        - Tlg: EventGuid is not used (always GUID_NULL). */

    EventDescriptor As EVENT_DESCRIPTOR
    DecodingSource As DECODING_SOURCE
    ProviderNameOffset As Long
    LevelNameOffset As Long
    ChannelNameOffset As Long
    KeywordsNameOffset As Long

    TaskNameOffset As Long /* Meaning of this field depends on DecodingSource.
        - XMLFile: The offset to the name of the associated task.
        - Wbem: The offset to the event's MOF "DisplayName" property. For many
          Wbem providers, ProviderName is a provider category and TaskName is
          the provider subcategory.
        - WPP: Not used.
        - Tlg: The offset to the name of the event. */

    OpcodeNameOffset As Long /* Meaning of this field depends on DecodingSource.
        - XMLFile: The offset to the name of the associated opcode.
        - Wbem: The offset to the event's MOF "EventTypeName" property. For
          many Wbem providers, OpcodeName is the event's name.
        - WPP: Not used.
        - Tlg: The offset to the name of the associated opcode. */

    EventMessageOffset As Long
    ProviderMessageOffset As Long
    BinaryXMLOffset As Long
    BinaryXMLSize As Long

' //    union {
' //        ULONG EventNameOffset; /* Event name for manifest-based events.
'             This field is valid only if DecodingSource is set to
'             DecodingSourceXMLFile or DecodingSourceTlg.

'             EventNameOffset contains the offset from the beginning of this
'             structure to a nul-terminated Unicode string that contains the
'             event's name.

'             This field will be 0 if the event does not have an assigned name or
'             if this event is decoded on a system that does not support decoding
'             manifest event names. Event name decoding is supported on Windows
'             10 Fall Creators Update (2017) and later. */

'  //       ULONG ActivityIDNameOffset; /* Activity ID name for WBEM events.
'             This field is valid only if DecodingSource is set to
'             DecodingSourceWbem.

'             ActivityIDNameOffset contains the offset from the beginning of this
'             structure to a nul-terminated Unicode string that contains the
'             property name of the activity identifier in the MOF class. */
' //   };
    EventNameOrActivityIdNameOffset As Long
' //    union {
' //        ULONG EventAttributesOffset; /* Attributes for manifest-based events.
'             This field is valid only if DecodingSource is set to
'             DecodingSourceXMLFile.

'             EventAttributesOffset contains the offset from the beginning of
'             this structure to a nul-terminated Unicode string that contains a
'             semicolon-separated list of name=value attributes associated with
'             the event.

'             This field will be 0 if the event does not have attributes or if
'             this event is decoded on a system that does not support decoding
'             manifest event attributes. Attribute decoding is supported on
'             Windows 10 Fall Creators Update (2017) and later.

'             Defined attributes include:
'             FILE=Filename of source code associated with event;
'             LINE=Line number of source code associated with event;
'             COL=Column of source code associated with event;
'             FUNC=Function name associated with event;
'             MJ=Major component associated with event;
'             MN=Minor component associated with event.

'             Values containing semicolons or double-quotes should be quoted
'             using double-quotes. Double-quotes within the value should be
'             doubled. Example string:
'             FILE=source.cpp;LINE=123;MJ="Value; ""Quoted""" */

'  //       ULONG RelatedActivityIDNameOffset; /* Related activity ID name (WBEM).
'             This field is valid only if DecodingSource is set to
'             DecodingSourceWbem.

'             RelatedActivityIDNameOffset contains the offset from the beginning
'             of this structure to a nul-terminated Unicode string that contains
'             the property name of the related activity identifier in the MOF
'             class. */
' //    };
    EventAttributesOrRelatedActivityIDNameOffset As Long
    
    PropertyCount As Long
    TopLevelPropertyCount As Long
'    union {
        Flags As TEMPLATE_FLAGS
'        struct {
'            ULONG Reserved : 4; // TEMPLATE_FLAGS values
'           ULONG Tags : 28;
'        };
'    };
  'EVENT_PROPERTY_INFO EventPropertyInfoArray[ANYSIZE_ARRAY];
  EventPropertyInfoArray() As EVENT_PROPERTY_INFO
End Type

Public Type PROPERTY_DATA_DESCRIPTOR
    PropertyName As LongLong ' Pointer to property name.
    ArrayIndex As Long ' Array Index.
    Reserved As Long
End Type

Public Enum PAYLOAD_OPERATOR
    ' 
    '  For integers, comparison can be one of:
    ' 
    PAYLOADFIELD_EQ = 0
    PAYLOADFIELD_NE = 1
    PAYLOADFIELD_LE = 2
    PAYLOADFIELD_GT = 3
    PAYLOADFIELD_LT = 4
    PAYLOADFIELD_GE = 5
    PAYLOADFIELD_BETWEEN = 6 ' Two values: lower/upper bounds
    PAYLOADFIELD_NOTBETWEEN = 7 ' Two values: lower/upper bounds
    PAYLOADFIELD_MODULO = 8 ' For periodically sampling a field
    ' 
    '  For strings:
    ' 
    PAYLOADFIELD_CONTAINS = 20 ' Substring identical to Value
    PAYLOADFIELD_DOESNTCONTAIN = 21 ' No substring identical to Value
    ' 
    '  For strings or other non-integer values
    ' 
    PAYLOADFIELD_IS = 30 ' Field is identical to Value
    PAYLOADFIELD_ISNOT = 31 ' Field is NOT identical to Value
    PAYLOADFIELD_INVALID = 32
End Enum

Public Type PAYLOAD_FILTER_PREDICATE
    FieldName As LongPtr
    /* [TypeHint(PAYLOAD_OPERATOR)] */ CompareOp As Integer ' PAYLOAD_OPERATOR
    Value As LongPtr ' One or two values (i.e., two for BETWEEN operations)
End Type

Public Const MAX_PAYLOAD_PREDICATES = 8

Public Declare PtrSafe Function TdhCreatePayloadFilter Lib "tdh.dll" (ProviderGuid As UUID, EventDescriptor As EVENT_DESCRIPTOR, ByVal EventMatchANY As Byte, ByVal PayloadPredicateCount As Long, PayloadPredicates As PAYLOAD_FILTER_PREDICATE, PayloadFilter As LongPtr) As Long
Public Declare PtrSafe Function TdhDeletePayloadFilter Lib "tdh.dll" (PayloadFilter As LongPtr) As Long
Public Declare PtrSafe Function TdhAggregatePayloadFilters Lib "tdh.dll" (ByVal PayloadFilterCount As Long, PayloadFilterPtrs As LongPtr, EventMatchALLFlags As Byte, EventFilterDescriptor As EVENT_FILTER_DESCRIPTOR) As Long
Public Declare PtrSafe Function TdhCleanupPayloadEventFilterDescriptor Lib "tdh.dll" (EventFilterDescriptor As EVENT_FILTER_DESCRIPTOR) As Long

Public Type PROVIDER_FILTER_INFO
    Id As Byte
    Version As Byte
    MessageOffset As Long
    Reserved As Long
    PropertyCount As Long
    EventPropertyInfoArray(127) As EVENT_PROPERTY_INFO
End Type

Public Enum EVENT_FIELD_TYPE
    EventKeywordInformation = 0
    EventLevelInformation
    EventChannelInformation
    EventTaskInformation
    EventOpcodeInformation
    EventInformationMax
End Enum

Public Type PROVIDER_FIELD_INFO
    NameOffset As Long ' English only.
    DescriptionOffset As Long ' Localizable String.
    Value As LongLong
End Type
Public Type PROVIDER_FIELD_INFOARRAY
    NumberOfElements As Long
    FieldType As EVENT_FIELD_TYPE
    FieldInfoArray(127) As PROVIDER_FIELD_INFO
End Type

Public Type TRACE_PROVIDER_INFO
    ProviderGuid As UUID
    SchemaSource As Long
    ProviderNameOffset As Long
End Type
Public Type PROVIDER_ENUMERATION_INFO
    NumberOfProviders As Long
    Reserved As Long
    TraceProviderInfoArray(63) As TRACE_PROVIDER_INFO
End Type

Public Type PROVIDER_EVENT_INFO
    NumberOfEvents As Long
    Reserved As Long
    EventDescriptorsArray(127) As EVENT_DESCRIPTOR
End Type

Public Enum TDH_CONTEXT_TYPE
    TDH_CONTEXT_WPP_TMFFILE   ' LPCWSTR path to the TMF file for a WPP event. */
    TDH_CONTEXT_WPP_TMFSEARCHPATH = 1 ' LPCWSTR semicolon-separated list of
'         directories to search for the TMF file for a WPP event. Only files
'         with the name [ProviderId].TMF will be found during the search. */
    TDH_CONTEXT_WPP_GMT  ' Integer value. If set to 1, the TdhGetWppProperty
'         and TdhGetWppMessage functions will format a WPP event's timestamp in
'         UTC (GMT). By default, the timestamp is formatted in local time. */
    TDH_CONTEXT_POINTERSIZE  ' Integer value, set to 4 or 8. Used when
'         decoding POINTER or SIZE_T fields on WPP events that do not set a
'         pointer size in the event header. If the event does not set a pointer
'         size in the event header and this context is not set, the decoder will
'         use the pointer size of the current process. */
    TDH_CONTEXT_PDB_PATH   ' LPCWSTR semicolon-separated list of PDB files
'         to be search for decoding information when decoding an event using
'         TdhGetWppProperty or TdhGetWppMessage. (Not used by TdhGetProperty
'         or TdhGetEventInformation.) */
    TDH_CONTEXT_MAXIMUM
End Enum

Public Type TDH_CONTEXT
    ParameterValue As LongLong /* For GMT or POINTERSIZE, directly stores
    pointin As parameter's Longeger value. For other types, stores an LongPtr
     As to a nul-terminated string with the parameter value. */
    ParameterType As TDH_CONTEXT_TYPE
    ParameterSize As Long ' Reserved. Set to 0.
End Type

Public Declare PtrSafe Function TdhGetEventInformation Lib "tdh.dll" (Event As EVENT_RECORD, ByVal TdhContextCount As Long, TdhContext As TDH_CONTEXT, Buffer As Any, BufferSize As Long) As Long
Public Declare PtrSafe Function TdhGetEventMapInformation Lib "tdh.dll" (pEvent As EVENT_RECORD, ByVal pMapName As LongPtr, pBuffer As Any, pBufferSize As Long) As Long
Public Declare PtrSafe Function TdhGetPropertySize Lib "tdh.dll" (pEvent As EVENT_RECORD, ByVal TdhContextCount As Long, TdhContext As TDH_CONTEXT, ByVal PropertyDataCount As Long, pPropertyData As PROPERTY_DATA_DESCRIPTOR, pPropertySize As Long) As Long
Public Declare PtrSafe Function TdhGetProperty Lib "tdh.dll" (pEvent As EVENT_RECORD, ByVal TdhContextCount As Long, TdhContext As TDH_CONTEXT, ByVal PropertyDataCount As Long, pPropertyData As PROPERTY_DATA_DESCRIPTOR, ByVal BufferSize As Long, pBuffer As Any) As Long
Public Declare PtrSafe Function TdhEnumerateProviders Lib "tdh.dll" (pBuffer As Any, pBufferSize As Long) As Long
Public Declare PtrSafe Function TdhEnumerateProvidersForDecodingSource Lib "tdh.dll" (ByVal filter As DECODING_SOURCE, buffer As Any, ByVal bufferSize As Long, bufferRequired As Long) As Long
Public Declare PtrSafe Function TdhQueryProviderFieldInformation Lib "tdh.dll" (pGuid As UUID, ByVal EventFieldValue As LongLong, ByVal EventFieldType As EVENT_FIELD_TYPE, pBuffer As Any, pBufferSize As Long) As Long
Public Declare PtrSafe Function TdhEnumerateProviderFieldInformation Lib "tdh.dll" (pGuid As UUID, ByVal EventFieldType As EVENT_FIELD_TYPE, pBuffer As Any, pBufferSize As Long) As Long
Public Declare PtrSafe Function TdhEnumerateProviderFilters Lib "tdh.dll" (pGuid As UUID, ByVal TdhContextCount As Long, TdhContext As TDH_CONTEXT, FilterCount As Long, Buffer As Any, BufferSize As Long) As Long
Public Declare PtrSafe Function TdhLoadManifest Lib "tdh.dll" (ByVal Manifest As LongPtr) As Long
Public Declare PtrSafe Function TdhLoadManifestFromMemory Lib "tdh.dll" (pData As Any, ByVal cbData As Long) As Long
Public Declare PtrSafe Function TdhUnloadManifest Lib "tdh.dll" (ByVal Manifest As LongPtr) As Long
Public Declare PtrSafe Function TdhUnloadManifestFromMemory Lib "tdh.dll" (pData As Any, ByVal cbData As Long) As Long
Public Declare PtrSafe Function TdhFormatProperty Lib "tdh.dll" (EventInfo As TRACE_EVENT_INFO, MapInfo As EVENT_MAP_INFO, ByVal PointerSize As Long, [TypeHint(TDH_IN_TYPE)] ByVal PropertyInType As Integer, [TypeHint(TDH_OUT_TYPE)] ByVal PropertyOutType As Integer, ByVal PropertyLength As Integer, ByVal UserDataLength As Integer, UserData As Any, BufferSize As Long, Buffer As Any, UserDataConsumed As Integer) As Long
Public Declare PtrSafe Function TdhOpenDecodingHandle Lib "tdh.dll" (Handle As LongPtr) As Long
Public Declare PtrSafe Function TdhSetDecodingParameter Lib "tdh.dll" (ByVal Handle As LongPtr, TdhContext As TDH_CONTEXT) As Long
Public Declare PtrSafe Function TdhGetDecodingParameter Lib "tdh.dll" (ByVal Handle As LongPtr, TdhContext As TDH_CONTEXT) As Long
Public Declare PtrSafe Function TdhGetWppProperty Lib "tdh.dll" (ByVal Handle As LongPtr, EventRecord As EVENT_RECORD, ByVal PropertyName As LongPtr, BufferSize As Long, Buffer As Any) As Long
Public Declare PtrSafe Function TdhGetWppMessage Lib "tdh.dll" (ByVal Handle As LongPtr, EventRecord As EVENT_RECORD, BufferSize As Long, Buffer As Any) As Long
Public Declare PtrSafe Function TdhCloseDecodingHandle Lib "tdh.dll" (ByVal Handle As LongPtr) As Long
Public Declare PtrSafe Function TdhLoadManifestFromBinary Lib "tdh.dll" (ByVal BinaryPath As LongPtr) As Long
Public Declare PtrSafe Function TdhEnumerateManifestProviderEvents Lib "tdh.dll" (ProviderGuid As UUID, Buffer As Any, BufferSize As Long) As Long
Public Declare PtrSafe Function TdhGetManifestEventInformation Lib "tdh.dll" (ProviderGuid As UUID, EventDescriptor As EVENT_DESCRIPTOR, Buffer As Any, BufferSize As Long) As Long


#End Region

#Region "authz"

'adtgen.h, authz.h 100% coverage of supported calls (AuthzReportSecurityEvent is unsupported)
Public Enum AuthzAuditType
    AUDIT_TYPE_LEGACY = 1
    AUDIT_TYPE_WMI = 2
End Enum

Public Enum AUDIT_PARAM_TYPE
    ' 
    '  do we need this?
    ' 
    APT_None = 1
    ' 
    '  NULL terminated string
    ' 
    APT_String = 2
    ' 
    '  unsigned long
    ' 
    APT_Ulong = 3
    ' 
    '  a pointer. use for specifying handles/pointers
    '  (32 bit on 32 bit systems and 64 bit on 64 bit systems)
    '  Note that the memory to which the pointer points to
    '  is not marshalled when using this type. Use this when you
    '  are interested in the absolute value of the pointer.
    '  A good example of this is when specifying HANDLE values.
    ' 
    APT_Pointer = 4
    ' 
    '  SID
    ' 
    APT_Sid = 5
    ' 
    '  Logon ID (LUID), this results in 3 output parameters.
    '  1. Account Name 2. Authority Name 3. LogonID
    ' 
    APT_LogonId = 6
    ' 
    '  Object Type List
    ' 
    APT_ObjectTypeList = 7
    ' 
    '  Luid (not translated to LogonId)
    ' 
    APT_Luid = 8
    ' 
    '  Guid
    ' 
    APT_Guid = 9
    ' 
    '  Time (FILETIME)
    ' 
    APT_Time = 10
    ' 
    '  ULONGLONG
    ' 
    APT_Int64 = 11
    ' 
    '  IP Addess (IPv4 and IPv6). This logs the address as the
    '  first parameter and the port as the second. So ensure
    '  that 2 entries are added in the event message file, one
    '  for the address and the immediate next entry as the port
    ' 
    APT_IpAddress = 12
    ' 
    '  Logon ID with SID (LUID) results in 4 output parameters.
    '  1. SID 2. Account Name 3. Authority Name 4. LogonID
    ' 
    APT_LogonIdWithSid = 13
    
    
    
'  the flags values below have overlapping values. this is ok since
'  the scope of each flag is limited to the type to which it applies.
'  APT_Ulong : format flag : causes a number to appear in hex    
    AP_FormatHex = (&H0001 << AP_ParamTypeBits)
'  APT_Ulong : format flag : causes a number to be treated as access-mask.
'                            The meaning of each bit depends on the associated
'                            object type.
    AP_AccessMask = (&H0002 << AP_ParamTypeBits)
'  APT_String : format flag : causes a string to be treated as a file-path
    AP_Filespec = (&H0001 << AP_ParamTypeBits)
'  APT_Sid : format flag : causes a sid to be treated as a logon-id
    AP_SidAsLogonId = (&H0001 << AP_ParamTypeBits)
'  APT_LogonId : control flag : logon-id is captured from the process token
    AP_PrimaryLogonId = (&H0001 << AP_ParamTypeBits)
'  APT_LogonId : control flag : logon-id is captured from the thread token
    AP_ClientLogonId = (&H0002 << AP_ParamTypeBits)
End Enum

Public Const AP_ParamTypeBits  = 8
Public Const AP_ParamTypeMask  = &H000000ff



Public Type AUDIT_OBJECT_TYPE
    ObjectType As UUID ' guid of the (sub)object
    Flags As Integer ' currently not defined
    Level As Integer ' level within the hierarchy. 
    ' 0 is the root level
    AccessMask As Long 'ACCESS_MASK ' access-mask for this (sub)object
End Type
Public Type AUDIT_OBJECT_TYPES
    Count As Integer ' number of object-types in pObjectTypes
    Flags As Integer ' currently not defined
    pObjectTypes As LongPtr '*AUDIT_OBJECT_TYPE ' array of object-types
End Type

Public Const _AUTHZ_SS_MAXSIZE = 128
Public Type AUDIT_IP_ADDRESS
    pIpAddress(0 To (_AUTHZ_SS_MAXSIZE - 1)) As Byte
End Type

Public Type AUDIT_PARAM
    Type As AUDIT_PARAM_TYPE ' type
    Length As Long ' currently unused
    Flags As Long ' currently unused
    u1 As LongPtr
    u2 As LongPtr
    ' #ifdef MIDL_PASS
    ' [switch_type(AUDIT_PARAM_TYPE),switch_is(Type)]
' #endif
    ' union 
    ' {
' #ifdef MIDL_PASS
        ' [default]
' #endif
        ' ULONG_PTR Data0;

' #ifdef MIDL_PASS
        ' [case(APT_String)]
        ' [string]
' #endif
        ' PWSTR  String;

        
' #ifdef MIDL_PASS
        ' [case(APT_Ulong,
              ' APT_Pointer)]
' #endif
        ' ULONG_PTR u;
        
' #ifdef MIDL_PASS
        ' [case(APT_Sid)]
' #endif
        ' SID* psid;
        
' #ifdef MIDL_PASS
        ' [case(APT_Guid)]
' #endif
        ' GUID* pguid;

' #ifdef MIDL_PASS
        ' [case(APT_LogonId)]
' #endif
        ' ULONG LogonId_LowPart;

' #ifdef MIDL_PASS
        ' [case(APT_ObjectTypeList)]
' #endif
        ' AUDIT_OBJECT_TYPES* pObjectTypes;
        
' #ifdef MIDL_PASS
        ' [case(APT_IpAddress)]
' #endif
        ' AUDIT_IP_ADDRESS* pIpAddress;
    ' } DUMMYUNIONNAME;

' #ifdef MIDL_PASS
    ' [switch_type(AUDIT_PARAM_TYPE),switch_is(Type)]
' #endif
    ' union 
    ' {
' #ifdef MIDL_PASS
        ' [default]
' #endif
        ' ULONG_PTR Data1;

' #ifdef MIDL_PASS
        ' [case(APT_LogonId)]
' #endif
        ' LONG LogonId_HighPart;
    ' } DUMMYUNIONNAME2;
End Type

Public Enum AUDIT_CONTROL_FLAGS
    APF_AuditFailure = &H00000000  ' generate a failure audit
    APF_AuditSuccess = &H00000001  ' generate a success audit when set, a failure audit otherwise.
    APF_ValidFlags = APF_AuditSuccess
End Enum

Public Type AUDIT_PARAMS
    Length As Long ' size in bytes
    Flags As Long ' currently unused
    Count As Integer ' number of parameters
    Parameters As LongPtr 'AUDIT_PARAM ' array of parameters
End Type

Public Type AUTHZ_AUDIT_EVENT_TYPE_LEGACY
    ' Audit category ID
    CategoryId As Integer
    ' Audit event ID
    AuditId As Integer
    ' Parameter count
    ParameterCount As Integer
End Type

Public Type AUTHZ_AUDIT_EVENT_TYPE_UNION
    Legacy As AUTHZ_AUDIT_EVENT_TYPE_LEGACY
End Type

Public Type AUTHZ_AUDIT_EVENT_TYPE_OLD
    ' version number
    Version As Long
    dwFlags As AuthzEvtTypeOldFlags
    RefCount As Long
    hAudit As LongPtr
    LinkId As LUID
    u As AUTHZ_AUDIT_EVENT_TYPE_UNION
End Type

Public Enum AuthzEvtTypeOldFlags
    AUTHZP_WPD_EVENT = &H10
End Enum

Public Enum AuthzAuditRegFlags
    AUTHZ_ALLOW_MULTIPLE_SOURCE_INSTANCES = &H1
    AUTHZ_MIGRATED_LEGACY_PUBLISHER = &H2
End Enum

Public Enum AuthzAuditGenFlags
    AUTHZ_AUDIT_INSTANCE_INFORMATION = &H2
End Enum

'end AdtGen.h

'authz.h
Public Enum AuthzClientCreateFlags
    AUTHZ_SKIP_TOKEN_GROUPS = &H2
    AUTHZ_REQUIRE_S4U_LOGON = &H4
    AUTHZ_COMPUTE_PRIVILEGES = &H8
End Enum

Public Type AUTHZ_ACCESS_REQUEST
    DesiredAccess As Long 'ACCESS_MASK
    ' To replace the principal self sid in the acl.
    PrincipalSelfSid As LongPtr 'PSID
    ' Object type list represented by an array of (level, guid) pair and the
    ' number of elements in the array. This is a post-fix representation of the
    ' object tree.
    ' These fields should be set to NULL and 0 respectively except when per
    ' property access is desired.
    ObjectTypeList As LongPtr 'POBJECT_TYPE_LIST
    ObjectTypeListLength As Long
    ' To support completely business rules based access. This will be passed as
    ' input to the callback access check function. Access check algorithm does
    ' not interpret these.
    OptionalArguments As LongPtr
End Type

Public Enum AuthzSaclEvalRes
    AUTHZ_GENERATE_SUCCESS_AUDIT = &H1
    AUTHZ_GENERATE_FAILURE_AUDIT = &H2
End Enum

Public Type AUTHZ_ACCESS_REPLY
    ' The length of the array representing the object type list structure. If
    ' no object type is used to represent the object, then the length must be
    ' set to 1.
    ' Note: This parameter must be filled!
    ResultListLength As Long
    ' Array of granted access masks. This memory is allocated by the RM. Access
    ' check routines just fill in the values.
    GrantedAccessMask As LongPtr '_Field_size_(ResultListLength) PACCESS_MASK
    ' Array of SACL evaluation results.  This memory is allocated by the RM, if SACL
    ' evaluation results are desired. Access check routines just fill in the values.
    ' Sacl evaluation will only be performed if auditing is requested.
    /* [ TypeHint(AuthzSaclEvalRes) ] */ SaclEvaluationResults As LongPtr
    ' Array of results for each element of the array. This memory is allocated
    ' by the RM. Access check routines just fill in the values.
    Error As LongPtr
End Type

Public Enum AuthzSecAttrDataTypes
    AUTHZ_SECURITY_ATTRIBUTE_TYPE_INVALID = &H00
    AUTHZ_SECURITY_ATTRIBUTE_TYPE_INT64 = &H01
    AUTHZ_SECURITY_ATTRIBUTE_TYPE_UINT64 = &H02
'   Case insensitive attribute value string by default.
'   Unless the flag AUTHZ_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE
'   is set indicating otherwise.
    AUTHZ_SECURITY_ATTRIBUTE_TYPE_STRING = &H03
    AUTHZ_SECURITY_ATTRIBUTE_TYPE_FQBN = &H04
    ' _WIN32_WINNT_WIN8)
    AUTHZ_SECURITY_ATTRIBUTE_TYPE_SID = &H05
    AUTHZ_SECURITY_ATTRIBUTE_TYPE_BOOLEAN = &H06
    AUTHZ_SECURITY_ATTRIBUTE_TYPE_OCTET_STRING = &H10
End Enum

Public Type AUTHZ_SECURITY_ATTRIBUTE_FQBN_VALUE
    Version As LongLong
    pName As LongPtr
End Type
Public Type AUTHZ_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE
    pValue As LongPtr '  Pointer is BYTE aligned.
    ValueLength As Long '  In bytes
End Type

Public Enum AUTHZ_SECURITY_ATTRIBUTE_OPERATION
    ' 
    '   No-op
    ' 
    AUTHZ_SECURITY_ATTRIBUTE_OPERATION_NONE
    ' 
    '   Delete all existing security attributes and their values in
    '   the NT token and replace it with the specified attributes/values.
    '   If attributes to replace with are not specified, all existing
    '   attributes and values are deleted.
    ' 
    '   This operation can be specified at most once and must be the
    '   only operation specified.
    ' 
    AUTHZ_SECURITY_ATTRIBUTE_OPERATION_REPLACE_ALL
    ' 
    '   Add a new attribute or a new value to an existing attribute.
    '   If the value specified for any attribute already exists for
    '   that attribute, the call fails.
    ' 
    AUTHZ_SECURITY_ATTRIBUTE_OPERATION_ADD
    ' 
    '   Delete the specified value(s) of the specified attribute(s).
    '   If the last value is deleted from an attribute, the attribute
    '   itself is removed. If no matching attribute name was found, no
    '   modifications are done and the call fails. If no value is specified
    '   for the attribute, the attribute itself will be deleted.
    ' 
    AUTHZ_SECURITY_ATTRIBUTE_OPERATION_DELETE
    ' 
    '   The value(s) of the specified security attribute(s) completely
    '   replace(s) the existing value(s) of the attribute(s). If the
    '   attribute does not already exist, it is added.  When no value
    '   is specified, the attribute is deleted, if it exists; otherwise,
    '   the operation is simply ignored and no failure is reported.
    ' 
    AUTHZ_SECURITY_ATTRIBUTE_OPERATION_REPLACE
End Enum

Public Enum AUTHZ_SID_OPERATION
    ' 
    '   No-op
    ' 
    AUTHZ_SID_OPERATION_NONE = 0
    ' 
    '   Delete all existing SIDs in the NT token and replace them with
    '   the specified SIDs.
    '   If the SIDs to replace with are not specified, all existing
    '   SIDs are deleted.
    ' 
    '   This operation can be specified at most once and must be the
    '   only operation specified.
    ' 
    AUTHZ_SID_OPERATION_REPLACE_ALL = 1
    ' 
    '   Add a new SID.
    '   If the SID specified already exists, the call fails.
    ' 
    AUTHZ_SID_OPERATION_ADD = 2
    ' 
    '   Delete the specified SID(s).
    '   If no matching SID was found, no modifications are done and
    '   the call fails.
    ' 
    AUTHZ_SID_OPERATION_DELETE = 3
    ' 
    '   The specified SID(s) completely replace(s) the existing SID(s).
    '   If the SID does not already exist, it is added.
    ' 
    AUTHZ_SID_OPERATION_REPLACE = 4
End Enum

Public Enum AuthzSecAttrFlags
    AUTHZ_SECURITY_ATTRIBUTE_NON_INHERITABLE = &H0001
'   Attribute value is compared in a case sensitive way. It is valid with string value
'   or composite type containing string value. For other types of value, this flag
'   will be ignored. Currently, it is valid with the two types:
'   AUTHZ_SECURITY_ATTRIBUTE_TYPE_STRING and AUTHZ_SECURITY_ATTRIBUTE_TYPE_FQBN.
    AUTHZ_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE = &H0002
    AUTHZ_SECURITY_ATTRIBUTE_VALID_FLAGS = (AUTHZ_SECURITY_ATTRIBUTE_NON_INHERITABLE Or AUTHZ_SECURITY_ATTRIBUTE_VALUE_CASE_SENSITIVE)
End Enum

Public Type AUTHZ_SECURITY_ATTRIBUTE_V1
    '  Name of the attribute.
    '  Case insensitive Windows Unicode string.
    pName As LongPtr
    '  Data type of attribute.
    ValueType As Integer
    '  Pass 0 in a set operation and check for 0 in
    '  a get operation.
    Reserved As Integer
    Flags As Long
    '  Number of values.
    ValueCount As Long
    Values As LongPtr
    ' union {
        ' PLONG64                                         pInt64;
        ' PULONG64                                        pUint64;
        ' PWSTR                                           *ppString;
        ' PAUTHZ_SECURITY_ATTRIBUTE_FQBN_VALUE            pFqbn;
        ' PAUTHZ_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE    pOctetString;
    ' } Values;
End Type

Public Const AUTHZ_SECURITY_ATTRIBUTES_INFORMATION_VERSION_V1 = 1
Public Const AUTHZ_SECURITY_ATTRIBUTES_INFORMATION_VERSION = 1

Public Type AUTHZ_SECURITY_ATTRIBUTES_INFORMATION
    '  Versioning. The interpretation of the pointers in the
    '  Attribute field below is dependent on the version field.
    '  Get operations return the version while the set operation
    '  MUST specify the version of the data structure passed in.
    '  MUST BE first.
    [Description("AUTHZ_SECURITY_ATTRIBUTES_INFORMATION_VERSION")]
    Version As Integer
    '  Pass 0 in set operations and ignore on get operations.
    Reserved As Integer
    AttributeCount As Long
    Attribute As LongPtr
    ' union {
        ' PAUTHZ_SECURITY_ATTRIBUTE_V1    pAttributeV1;
    ' } Attribute;
End Type

Public Enum AuthzAccessCheckFlags
    AUTHZ_ACCESS_CHECK_NO_DEEP_COPY_SD = &H1
End Enum




Public Declare PtrSafe Function AuthzAccessCheck Lib "authz.dll" (ByVal Flags As AuthzAccessCheckFlags, ByVal hAuthzClientContext As LongPtr, pRequest As AUTHZ_ACCESS_REQUEST, ByVal hAuditEvent As LongPtr, pSecurityDescriptor As SECURITY_DESCRIPTOR, OptionalSecurityDescriptorArray As LongPtr, ByVal OptionalSecurityDescriptorCount As Long, pReply As AUTHZ_ACCESS_REPLY, phAccessCheckResults As LongPtr) As BOOL
Public Declare PtrSafe Function AuthzCachedAccessCheck Lib "authz.dll" (ByVal Flags As AuthzAccessCheckFlags, ByVal hAccessCheckResults As LongPtr, ByVal hAuditEvent As LongPtr, pReply As AUTHZ_ACCESS_REPLY) As BOOL
Public Declare PtrSafe Function AuthzOpenObjectAudit Lib "authz.dll" (ByVal Flags As Long, ByVal hAuthzClientContext As LongPtr, pRequest As AUTHZ_ACCESS_REQUEST, ByVal hAuditEvent As LongPtr, pSecurityDescriptor As SECURITY_DESCRIPTOR, OptionalSecurityDescriptorArray As LongPtr, ByVal OptionalSecurityDescriptorCount As Long, pReply As AUTHZ_ACCESS_REPLY) As BOOL
Public Declare PtrSafe Function AuthzFreeHandle Lib "authz.dll" (ByVal hAccessCheckResults As LongPtr) As BOOL

Public Enum AuthzResManFlags
    AUTHZ_RM_FLAG_NO_AUDIT = &H1
    AUTHZ_RM_FLAG_INITIALIZE_UNDER_IMPERSONATION = &H2
    AUTHZ_RM_FLAG_NO_CENTRAL_ACCESS_POLICIES = &H4
    AUTHZ_VALID_RM_INIT_FLAGS = (AUTHZ_RM_FLAG_NO_AUDIT Or AUTHZ_RM_FLAG_INITIALIZE_UNDER_IMPERSONATION Or AUTHZ_RM_FLAG_NO_CENTRAL_ACCESS_POLICIES)
End Enum

Public DeclareWide PtrSafe Function AuthzInitializeResourceManager Lib "authz.dll" (ByVal Flags As AuthzResManFlags, ByVal pfnDynamicAccessCheck As LongPtr, ByVal pfnComputeDynamicGroups As LongPtr, ByVal pfnFreeDynamicGroups As LongPtr, ByVal szResourceManagerName As String, phAuthzResourceManager As LongPtr) As BOOL

Public Const AUTHZ_RPC_INIT_INFO_CLIENT_VERSION_V1 = 1
Public Type AUTHZ_RPC_INIT_INFO_CLIENT
    [Description("AUTHZ_RPC_INIT_INFO_CLIENT_VERSION_V1")] version As Integer
    ObjectUuid As LongPtr
    ProtSeq As LongPtr
    NetworkAddr As LongPtr
    Endpoint As LongPtr
    Options As LongPtr
    ServerSpn As LongPtr
End Type

Public Const AUTHZ_INIT_INFO_VERSION_V1 = 1
Public Type AUTHZ_INIT_INFO
    version As Integer
    szResourceManagerName As LongPtr
    pfnDynamicAccessCheck As LongPtr 'PFN_AUTHZ_DYNAMIC_ACCESS_CHECK
    pfnComputeDynamicGroups As LongPtr 'PFN_AUTHZ_COMPUTE_DYNAMIC_GROUPS
    pfnFreeDynamicGroups As LongPtr 'PFN_AUTHZ_FREE_DYNAMIC_GROUPS
    pfnGetCentralAccessPolicy As LongPtr 'PFN_AUTHZ_GET_CENTRAL_ACCESS_POLICY
    pfnFreeCentralAccessPolicy As LongPtr 'PFN_AUTHZ_FREE_CENTRAL_ACCESS_POLICY
End Type

Public Declare PtrSafe Function AuthzInitializeResourceManagerEx Lib "authz.dll" (ByVal Flags As AuthzResManFlags, pAuthzInitInfo As AUTHZ_INIT_INFO, phAuthzResourceManager As LongPtr) As BOOL
Public Declare PtrSafe Function AuthzInitializeRemoteResourceManager Lib "authz.dll" (pRpcInitInfo As AUTHZ_RPC_INIT_INFO_CLIENT, phAuthzResourceManager As LongPtr) As BOOL
Public Declare PtrSafe Function AuthzFreeResourceManager Lib "authz.dll" (ByVal hAuthzResourceManager As LongPtr) As BOOL
[Description("Note: 'Identifier' is a ByVal LUID")]
Public DeclareWide PtrSafe Function AuthzInitializeContextFromToken Lib "authz.dll" (ByVal Flags As Long, ByVal TokenHandle As LongPtr, ByVal hAuthzResourceManager As LongPtr, pExpirationTime As LARGE_INTEGER, ByVal Identifier As LongLong, DynamicGroupArgs As Any, phAuthzClientContext As LongPtr) As BOOL
[Description("Note: 'Identifier' is a ByVal LUID")]
Public DeclareWide PtrSafe Function AuthzInitializeContextFromSid Lib "authz.dll" (ByVal Flags As AuthzClientCreateFlags, ByVal UserSid As LongPtr, ByVal hAuthzResourceManager As LongPtr, pExpirationTime As LARGE_INTEGER, ByVal Identifier As LongLong, DynamicGroupArgs As Any, phAuthzClientContext As LongPtr) As BOOL
[Description("Note: 'Identifier' is a ByVal LUID")]
Public DeclareWide PtrSafe Function AuthzInitializeContextFromAuthzContext Lib "authz.dll" (ByVal Flags As Long, ByVal UserSid As LongPtr, ByVal hAuthzResourceManager As LongPtr, pExpirationTime As LARGE_INTEGER, ByVal Identifier As LongLong, DynamicGroupArgs As Any, phNewAuthzClientContext As LongPtr) As BOOL
Public Declare PtrSafe Function AuthzInitializeCompoundContext Lib "authz.dll" (ByVal UserContext As LongPtr, ByVal DeviceContext As LongPtr, phCompoundContext As LongPtr) As BOOL
Public Declare PtrSafe Function AuthzAddSidsToContext Lib "authz.dll" (ByVal hAuthzClientContext As LongPtr, Sids As SID_AND_ATTRIBUTES, ByVal SidCount As Long, RestrictedSids As SID_AND_ATTRIBUTES, ByVal RestrictedSidCount As Long, phNewAuthzClientContext As LongPtr) As BOOL
Public Declare PtrSafe Function AuthzModifySecurityAttributes Lib "authz.dll" (ByVal hAuthzClientContext As LongPtr, pOperations As AUTHZ_SECURITY_ATTRIBUTE_OPERATION, pAttributes As AUTHZ_SECURITY_ATTRIBUTES_INFORMATION) As BOOL

Public Enum AUTHZ_CONTEXT_INFORMATION_CLASS
    AuthzContextInfoUserSid = 1
    AuthzContextInfoGroupsSids
    AuthzContextInfoRestrictedSids
    AuthzContextInfoPrivileges
    AuthzContextInfoExpirationTime
    AuthzContextInfoServerContext
    AuthzContextInfoIdentifier
    AuthzContextInfoSource
    AuthzContextInfoAll
    AuthzContextInfoAuthenticationId
    AuthzContextInfoSecurityAttributes
    AuthzContextInfoDeviceSids
    AuthzContextInfoUserClaims
    AuthzContextInfoDeviceClaims
    AuthzContextInfoAppContainerSid
    AuthzContextInfoCapabilitySids
End Enum

Public Declare PtrSafe Function AuthzModifyClaims Lib "authz.dll" (ByVal hAuthzClientContext As LongPtr, ByVal ClaimClass As AUTHZ_CONTEXT_INFORMATION_CLASS, pClaimOperations As AUTHZ_SECURITY_ATTRIBUTE_OPERATION, pClaims As AUTHZ_SECURITY_ATTRIBUTES_INFORMATION) As BOOL
Public Declare PtrSafe Function AuthzModifySids Lib "authz.dll" (ByVal hAuthzClientContext As LongPtr, ByVal ClaimClass As AUTHZ_CONTEXT_INFORMATION_CLASS, pSidOperations As AUTHZ_SID_OPERATION, pSids As TOKEN_GROUPS) As BOOL
Public Declare PtrSafe Function AuthzSetAppContainerInformation Lib "authz.dll" (ByVal hAuthzClientContext As LongPtr, ByVal pAppContainerSid As LongPtr, ByVal CapabilityCount As Long, pCapabilitySids As SID_AND_ATTRIBUTES) As BOOL
Public DeclareWide PtrSafe Function AuthzGetInformationFromContext Lib "authz.dll" (ByVal hAuthzClientContext As LongPtr, ByVal InfoClass As AUTHZ_CONTEXT_INFORMATION_CLASS, ByVal BufferSize As Long, pSizeRequired As Long, Buffer As Any) As BOOL
Public Declare PtrSafe Function AuthzFreeContext Lib "authz.dll" (ByVal hAuthzClientContext As LongPtr) As BOOL

Public Enum AuthzInitObjAccessAndAuditEvtFlags
    AUTHZ_NO_SUCCESS_AUDIT = &H00000001
    AUTHZ_NO_FAILURE_AUDIT = &H00000002
    AUTHZ_NO_ALLOC_STRINGS = &H00000004
    AUTHZ_WPD_CATEGORY_FLAG = &H00000010
    AUTHZ_VALID_OBJECT_ACCESS_AUDIT_FLAGS = (AUTHZ_NO_SUCCESS_AUDIT Or AUTHZ_NO_FAILURE_AUDIT Or AUTHZ_NO_ALLOC_STRINGS Or AUTHZ_WPD_CATEGORY_FLAG)
End Enum

Public DeclareWide PtrSafe Function AuthzInitializeObjectAccessAuditEvent Lib "authz.dll" (ByVal Flags As AuthzInitObjAccessAndAuditEvtFlags, ByVal hAuditEventType As LongPtr, ByVal szOperationType As String, ByVal szObjectType As String, ByVal szObjectName As String, ByVal szAdditionalInfo As String, phAuditEvent As LongPtr, ByVal dwAdditionalParameterCount As Long) As BOOL
Public DeclareWide PtrSafe Function AuthzInitializeObjectAccessAuditEvent2 Lib "authz.dll" (ByVal Flags As AuthzInitObjAccessAndAuditEvtFlags, ByVal hAuditEventType As LongPtr, ByVal szOperationType As String, ByVal szObjectType As String, ByVal szObjectName As String, ByVal szAdditionalInfo As String, ByVal szAdditionalInfo2 As String, phAuditEvent As LongPtr, ByVal dwAdditionalParameterCount As Long) As BOOL

Public Enum AUTHZ_AUDIT_EVENT_INFORMATION_CLASS
    AuthzAuditEventInfoFlags = 1
    AuthzAuditEventInfoOperationType
    AuthzAuditEventInfoObjectType
    AuthzAuditEventInfoObjectName
    AuthzAuditEventInfoAdditionalInfo
End Enum

Public Declare PtrSafe Function AuthzFreeAuditEvent Lib "authz.dll" (ByVal hAuditEvent As LongPtr) As BOOL
Public Declare PtrSafe Function AuthzEvaluateSacl Lib "authz.dll" (ByVal AuthzClientContext As LongPtr, pRequest As AUTHZ_ACCESS_REQUEST, ByVal Sacl As LongPtr, ByVal GrantedAccess As Long, ByVal AccessGranted As BOOL, pbGenerateAudit As BOOL) As BOOL

Public Type AUTHZ_REGISTRATION_OBJECT_TYPE_NAME_OFFSET
    szObjectTypeName As LongPtr
    dwOffset As Long
End Type

Public Type AUTHZ_SOURCE_SCHEMA_REGISTRATION
    dwFlags As AuthzAuditRegFlags
    szEventSourceName As LongPtr
    szEventMessageFile As LongPtr
    szEventSourceXmlSchemaFile As LongPtr
    szEventAccessStringsFile As LongPtr
    szExecutableImagePath As LongPtr
    ' The meaning of the data is defined by dwFlags. Make sure
    ' new types are pointers.
    'union
    '{
    '     PVOID pReserved;
    ' Must be supplied when dwFlags contains AUTHZ_MIGRATED_LEGACY_PUBLISHER
    pProviderGuid As LongPtr '*UUID
    '} DUMMYUNIONNAME;
    dwObjectTypeNameCount As Long
    ObjectTypeNames(100) As AUTHZ_REGISTRATION_OBJECT_TYPE_NAME_OFFSET
End Type

Public Enum AuthzSecInstallFlags
    AUTHZ_FLAG_ALLOW_MULTIPLE_SOURCE_INSTANCES = &H1
End Enum

Public DeclareWide PtrSafe Function AuthzInstallSecurityEventSource Lib "authz.dll" (ByVal dwFlags As AuthzSecInstallFlags, pRegistration As Any) As BOOL
Public DeclareWide PtrSafe Function AuthzUninstallSecurityEventSource Lib "authz.dll" (ByVal dwFlags As Long, ByVal szEventSourceName As String) As BOOL
Public DeclareWide PtrSafe Function AuthzEnumerateSecurityEventSources Lib "authz.dll" (ByVal dwFlags As Long, Buffer As Any, pdwCount As Long, pdwLength As Long) As BOOL
Public DeclareWide PtrSafe Function AuthzRegisterSecurityEventSource Lib "authz.dll" (ByVal dwFlags As Long, ByVal szEventSourceName As String, phEventProvider As LongPtr) As BOOL
Public Declare PtrSafe Function AuthzUnregisterSecurityEventSource Lib "authz.dll" (ByVal dwFlags As Long, phEventProvider As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AuthzReportSecurityEvent CDecl Lib "authz.dll" (ByVal dwFlags As Long, ByVal hEventProvider As LongPtr, ByVal dwAuditId As Long, ByVal pUserSid As LongPtr, ByVal dwCount As Long, ByVal ParamArray vargs As Any()) As BOOL

' [Description("This function cannot be called directly due to ... (variable arguments) being unsupported. This is a custom handler that calls it via DispCallFunc. Supply a type array and matching value array (of Variants that can be coerced into types. Provide LUID and FILETIME as LongLong inside a Variant.")]
' Public Function AuthzReportSecurityEvent(ByVal dwFlags As AUDIT_CONTROL_FLAGS, ByVal hEventProvider As LongPtr, ByVal dwAuditId As Long, ByVal pUserSid As LongPtr, ByVal dwCount As Long, va_values() As Variant) As BOOL

' Dim hAZ As LongPtr = LoadLibrary("authz.dll")
' If hAZ Then
' 	Dim lpfn As LongPtr = GetProcAddress(hAZ, "AuthzReportSecurityEvent")
'     Dim nArgs As Long
'     Dim pVA() As Variant
'     Dim pVT() As Integer
    
'     nArgs = 5 + (dwCount * 2)
'     ReDim pVA(nArgs - 1)
'     ReDim pVT(nArgs - 1)
    
'     pVT(0) = CInt(VT_UI4)
'     pVA(0) = dwFlags
'     pVT(1) = CInt(VT_UINT_PTR)
'     pVA(1) = hEventProvider
'     pVT(2) = CInt(VT_UI4)
'     pVA(2) = dwAuditId
'     pVT(3) = CInt(VT_PTR)
'     pVA(3) = pUserSid
'     pVT(4) = CInt(VT_UI4)
'     pVA(4) = dwCount
    
'     Dim i As Long, k As Long
'     Dim paramType As AUDIT_PARAM_TYPE
'     Dim paramFlags As AUDIT_PARAM_TYPE
    
'     i = 5
    
'     For k = 0 To UBound(va_values)
'         paramType = ApExtractType(CType(Of AUDIT_PARAM_TYPE)(va_values(k)))
'         paramFlags = ApExtractFlags(CType(Of AUDIT_PARAM_TYPE)(va_values(k)))
        
'         'First add one 4-byte argument for the type
'         ReDim Preserve pVT(i)
'         ReDim Preserve pVA(i)
'         pVT(i) = CInt(VT_UI4)
'         pVA(i) = va_values(k)
'         i += 1
'         k += 1
        
'         Select Case paramType
'             Case APT_Ulong
'                 If (paramFlags And AP_AccessMask) = AP_AccessMask Then
'                     'Add two 4-byte argument    
'                     ' case APT_Ulong:
'                         ' pParam->Data0 = va_arg(arglist, ULONG);
'                         ' if (ParamFlags & AP_AccessMask)
'                         ' {
'                             ' ObjectTypeIndex = va_arg(arglist, ULONG);
'                     ReDim Preserve pVT(i + 1)
'                     ReDim Preserve pVA(i + 1)
'                     pVT(i) = CInt(VT_UI4)
'                     pVT(i + 1) = CInt(VT_UI4)
'                     pVA(i) = va_values(k)
'                     pVA(i + 1) = va_values(k + 1)
'                     i += 2
'                     'k will advance by one automatically, still needs one more
'                     k += 1
'                 Else
'                     'Add one 4-byte argument	
'                     ReDim Preserve pVT(i)
'                     ReDim Preserve pVA(i)
'                     pVT(i) = CInt(VT_UI4)
'                     pVA(i) = va_values(k)
'                     i += 1
'                     'k will advance by one automatically
'                 End If
                
'             Case APT_Pointer, APT_String, APT_Sid, APT_Guid
'                 'Add a single pointer sized arg
'                 ReDim Preserve pVT(i)
'                 ReDim Preserve pVA(i)
'                 pVT(i) = CInt(VT_UINT_PTR)
'                 pVA(i) = va_values(k)
'                 i += 1
        
'             Case APT_Luid, APT_Time
'                 'Add a single 8-byte argument (LUID or FILETIME)
'                 ReDim Preserve pVT(i)
'                 ReDim Preserve pVA(i)
'                 pVT(i) = CInt(VT_UI8)
'                 pVA(i) = va_values(k)
'                 i += 1
                
'             Case APT_LogonId
'                 If ((paramFlags And AP_PrimaryLogonId) = AP_PrimaryLogonId) Or ((paramFlags And AP_ClientLogonId) = AP_ClientLogonId) Then
'                     'These flags substitute an internal query and don't have a va_arg statement to pop args off the stack
'                 Else
'                     'Add a single 8-byte argument (LUID)
'                     ReDim Preserve pVT(i)
'                     ReDim Preserve pVA(i)
'                     pVT(i) = CInt(VT_UI8)
'                     pVA(i) = va_values(k)
'                     i += 1
'                 End If
                
'             Case APT_ObjectTypeList
'                 'Add one pointer and one ULONG   
'                 ReDim Preserve pVT(i + 1)
'                 ReDim Preserve pVA(i + 1)
'                 pVT(i) = CInt(VT_UINT_PTR)
'                 pVT(i + 1) = CInt(VT_UI4)
'                 pVA(i) = va_values(k)
'                 pVA(i + 1) = va_values(k + 1)
'                 i += 2
'                 'k will advance by one automatically, still needs one more
'                 k += 1
'         End Select
        
'     Next k
        
'     Dim vRet As Variant
'     Dim hr As Long
    
'     hr = DispCallFunc(ByVal 0, lpfn, CC_CDECL, CInt(VT_I4), UBound(pVA) + 1, pVT(0), pVA(0), vRet)
    
'     Return CType(Of BOOL)(CLng(vRet))
' End If

' End Function
Public Function ApExtractType(ByVal TypeFlags As AUDIT_PARAM_TYPE) As AUDIT_PARAM_TYPE
    Return (TypeFlags And AP_ParamTypeMask)
End Function
Public Function ApExtractFlags(ByVal TypeFlags As AUDIT_PARAM_TYPE) As AUDIT_PARAM_TYPE
    Return (TypeFlags And Not AP_ParamTypeMask)
End Function

Public Declare PtrSafe Function AuthzReportSecurityEventFromParams Lib "authz.dll" (ByVal dwFlags As AUDIT_CONTROL_FLAGS, ByVal hEventProvider As LongPtr, ByVal dwAuditId As Long, ByVal pUserSid As LongPtr, pParameters As AUDIT_PARAMS) As BOOL
Public Declare PtrSafe Function AuthzRegisterCapChangeNotification Lib "authz.dll" (phCapChangeSubscription As LongPtr, ByVal pfnCapChangeCallback As LongPtr, Optional ByVal pCallbackContext As LongPtr) As BOOL
Public Declare PtrSafe Function AuthzUnregisterCapChangeNotification Lib "authz.dll" (ByVal hCapChangeSubscription As LongPtr) As BOOL
Public Declare PtrSafe Function AuthzFreeCentralAccessPolicyCache Lib "authz.dll" () As BOOL

' Private Function AuthzpGetThreadTokenInfo(ppUserSid As LongPtr, pAuthenticationId As LUID) As BOOL
'     Dim fResult As BOOL
'     Dim hToken As LongPtr
'     If (OpenThreadToken(GetCurrentThread(), TOKEN_QUERY, cTrue, hToken))
    
'         fResult = AuthzpGetTokenInfo(hToken, ppUserSid, pAuthenticationId)
'         CloseHandle(hToken)
    

'     Return fResult
' End Function

' Private Function AuthzpGetTokenInfo(ByVal hToken As LongPtr, ppUserSid As LongPtr, pAuthenticationId As LUID) As BOOL
'     Dim fResult As BOOL
'     Dim TokenStats As TOKEN_STATISTICS
    
' End Function

#End Region


#Region "setupapi"
'SetupAPI.h/newdev.h/cfgmgr32.h
'setupapi.dll, cfgmgr32.dll, newdev.dll, and devmgr.dll

Public Enum SetupApiErrorCodes
	ERROR_EXPECTED_SECTION_NAME = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or 0)
	ERROR_BAD_SECTION_NAME_LINE = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or 1)
	ERROR_SECTION_NAME_TOO_LONG = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or 2)
	ERROR_GENERAL_SYNTAX = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or 3)
	ERROR_WRONG_INF_STYLE = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H100)
	ERROR_SECTION_NOT_FOUND = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H101)
	ERROR_LINE_NOT_FOUND = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H102)
	ERROR_NO_BACKUP = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H103)
	ERROR_NO_ASSOCIATED_CLASS = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H200)
	ERROR_CLASS_MISMATCH = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H201)
	ERROR_DUPLICATE_FOUND = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H202)
	ERROR_NO_DRIVER_SELECTED = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H203)
	ERROR_KEY_DOES_NOT_EXIST = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H204)
	ERROR_INVALID_DEVINST_NAME = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H205)
	ERROR_INVALID_CLASS = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H206)
	ERROR_DEVINST_ALREADY_EXISTS = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H207)
	ERROR_DEVINFO_NOT_REGISTERED = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H208)
	ERROR_INVALID_REG_PROPERTY = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H209)
	ERROR_NO_INF = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H20A)
	ERROR_NO_SUCH_DEVINST = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H20B)
	ERROR_CANT_LOAD_CLASS_ICON = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H20C)
	ERROR_INVALID_CLASS_INSTALLER = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H20D)
	ERROR_DI_DO_DEFAULT = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H20E)
	ERROR_DI_NOFILECOPY = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H20F)
	ERROR_INVALID_HWPROFILE = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H210)
	ERROR_NO_DEVICE_SELECTED = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H211)
	ERROR_DEVINFO_LIST_LOCKED = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H212)
	ERROR_DEVINFO_DATA_LOCKED = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H213)
	ERROR_DI_BAD_PATH = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H214)
	ERROR_NO_CLASSINSTALL_PARAMS = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H215)
	ERROR_FILEQUEUE_LOCKED = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H216)
	ERROR_BAD_SERVICE_INSTALLSECT = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H217)
	ERROR_NO_CLASS_DRIVER_LIST = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H218)
	ERROR_NO_ASSOCIATED_SERVICE = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H219)
	ERROR_NO_DEFAULT_DEVICE_INTERFACE = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H21A)
	ERROR_DEVICE_INTERFACE_ACTIVE = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H21B)
	ERROR_DEVICE_INTERFACE_REMOVED = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H21C)
	ERROR_BAD_INTERFACE_INSTALLSECT = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H21D)
	ERROR_NO_SUCH_INTERFACE_CLASS = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H21E)
	ERROR_INVALID_REFERENCE_STRING = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H21F)
	ERROR_INVALID_MACHINENAME = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H220)
	ERROR_REMOTE_COMM_FAILURE = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H221)
	ERROR_MACHINE_UNAVAILABLE = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H222)
	ERROR_NO_CONFIGMGR_SERVICES = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H223)
	ERROR_INVALID_PROPPAGE_PROVIDER = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H224)
	ERROR_NO_SUCH_DEVICE_INTERFACE = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H225)
	ERROR_DI_POSTPROCESSING_REQUIRED = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H226)
	ERROR_INVALID_COINSTALLER = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H227)
	ERROR_NO_COMPAT_DRIVERS = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H228)
	ERROR_NO_DEVICE_ICON = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H229)
	ERROR_INVALID_INF_LOGCONFIG = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H22A)
	ERROR_DI_DONT_INSTALL = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H22B)
	ERROR_INVALID_FILTER_DRIVER = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H22C)
	ERROR_NON_WINDOWS_NT_DRIVER = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H22D)
	ERROR_NON_WINDOWS_DRIVER = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H22E)
	ERROR_NO_CATALOG_FOR_OEM_INF = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H22F)
	ERROR_DEVINSTALL_QUEUE_NONNATIVE = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H230)
	ERROR_NOT_DISABLEABLE = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H231)
	ERROR_CANT_REMOVE_DEVINST = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H232)
	ERROR_INVALID_TARGET = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H233)
	ERROR_DRIVER_NONNATIVE = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H234)
	ERROR_IN_WOW64 = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H235)
	ERROR_SET_SYSTEM_RESTORE_POINT = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H236)
	ERROR_SCE_DISABLED = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H238)
	ERROR_UNKNOWN_EXCEPTION = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H239)
	ERROR_PNP_REGISTRY_ERROR = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H23A)
	ERROR_REMOTE_REQUEST_UNSUPPORTED = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H23B)
	ERROR_NOT_AN_INSTALLED_OEM_INF = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H23C)
	ERROR_INF_IN_USE_BY_DEVICES = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H23D)
	ERROR_DI_FUNCTION_OBSOLETE = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H23E)
	ERROR_NO_AUTHENTICODE_CATALOG = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H23F)
	ERROR_AUTHENTICODE_DISALLOWED = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H240)
	ERROR_AUTHENTICODE_TRUSTED_PUBLISHER = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H241)
	ERROR_AUTHENTICODE_TRUST_NOT_ESTABLISHED = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H242)
	ERROR_AUTHENTICODE_PUBLISHER_NOT_TRUSTED = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H243)
	ERROR_SIGNATURE_OSATTRIBUTE_MISMATCH = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H244)
	ERROR_ONLY_VALIDATE_VIA_AUTHENTICODE = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H245)
	ERROR_DEVICE_INSTALLER_NOT_READY = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H246)
	ERROR_DRIVER_STORE_ADD_FAILED = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H247)
	ERROR_DEVICE_INSTALL_BLOCKED = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H248)
	ERROR_DRIVER_INSTALL_BLOCKED = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H249)
	ERROR_WRONG_INF_TYPE = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H24A)
	ERROR_FILE_HASH_NOT_IN_CATALOG = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H24B)
	ERROR_DRIVER_STORE_DELETE_FAILED = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H24C)
    ERROR_UNRECOVERABLE_STACK_OVERFLOW = (APPLICATION_ERROR_MASK Or ERROR_SEVERITY_ERROR Or &H300)
    ERROR_NO_DEFAULT_INTERFACE_DEVICE = ERROR_NO_DEFAULT_DEVICE_INTERFACE
    ERROR_INTERFACE_DEVICE_ACTIVE = ERROR_DEVICE_INTERFACE_ACTIVE
    ERROR_INTERFACE_DEVICE_REMOVED = ERROR_DEVICE_INTERFACE_REMOVED
    ERROR_NO_SUCH_INTERFACE_DEVICE = ERROR_NO_SUCH_DEVICE_INTERFACE
End Enum

Public Enum Setup_KeyType
	DIREG_DEV = &H00000001  ' Open/Create/Delete device key
	DIREG_DRV = &H00000002  ' Open/Create/Delete driver key
	DIREG_BOTH = &H00000004  ' Delete both driver and Device key
End Enum
Public Enum Setup_DIGCF
	DIGCF_DEFAULT = &H00000001  ' only valid with DIGCF_DEVICEINTERFACE
	DIGCF_PRESENT = &H00000002
	DIGCF_ALLCLASSES = &H00000004
	DIGCF_PROFILE = &H00000008
	DIGCF_DEVICEINTERFACE = &H00000010
End Enum

Public Type SP_DEVINFO_DATA
	cbSize As Long
	ClassGuid As UUID
	DevInst As Long
	Reserved As LongPtr
End Type

Public Enum SetupDevIfaceDataFlags
	SPINT_ACTIVE = &H00000001
	SPINT_DEFAULT = &H00000002
	SPINT_REMOVED = &H00000004
End Enum
Public Type SP_DEVICE_INTERFACE_DATA
	cbSize As Long
	InterfaceClassGuid As UUID
	Flags As SetupDevIfaceDataFlags
	Reserved As LongPtr
End Type

Public Enum Setup_DICSF
	DICS_FLAG_GLOBAL = &H00000001  ' make change in all hardware profiles
	DICS_FLAG_CONFIGSPECIFIC = &H00000002  ' make change in specified profile only
	DICS_FLAG_CONFIGGENERAL = &H00000004  ' 1 or more hardware profile-specific changes to follow.
End Enum


Public Enum DI_FUNCTION
	DIF_SELECTDEVICE = &H00000001
	DIF_INSTALLDEVICE = &H00000002
	DIF_ASSIGNRESOURCES = &H00000003
	DIF_PROPERTIES = &H00000004
	DIF_REMOVE = &H00000005
	DIF_FIRSTTIMESETUP = &H00000006
	DIF_FOUNDDEVICE = &H00000007
	DIF_SELECTCLASSDRIVERS = &H00000008
	DIF_VALIDATECLASSDRIVERS = &H00000009
	DIF_INSTALLCLASSDRIVERS = &H0000000A
	DIF_CALCDISKSPACE = &H0000000B
	DIF_DESTROYPRIVATEDATA = &H0000000C
	DIF_VALIDATEDRIVER = &H0000000D
    DIF_MOVEDEVICE = &H0000000E
	DIF_DETECT = &H0000000F
	DIF_INSTALLWIZARD = &H00000010
	DIF_DESTROYWIZARDDATA = &H00000011
	DIF_PROPERTYCHANGE = &H00000012
	DIF_ENABLECLASS = &H00000013
	DIF_DETECTVERIFY = &H00000014
	DIF_INSTALLDEVICEFILES = &H00000015
	DIF_UNREMOVE = &H00000016
	DIF_SELECTBESTCOMPATDRV = &H00000017
	DIF_ALLOW_INSTALL = &H00000018
	DIF_REGISTERDEVICE = &H00000019
	DIF_NEWDEVICEWIZARD_PRESELECT = &H0000001A
	DIF_NEWDEVICEWIZARD_SELECT = &H0000001B
	DIF_NEWDEVICEWIZARD_PREANALYZE = &H0000001C
	DIF_NEWDEVICEWIZARD_POSTANALYZE = &H0000001D
	DIF_NEWDEVICEWIZARD_FINISHINSTALL = &H0000001E
	DIF_UNUSED1 = &H0000001F
	DIF_INSTALLINTERFACES = &H00000020
	DIF_DETECTCANCEL = &H00000021
	DIF_REGISTER_COINSTALLERS = &H00000022
	DIF_ADDPROPERTYPAGE_ADVANCED = &H00000023
	DIF_ADDPROPERTYPAGE_BASIC = &H00000024
	DIF_RESERVED1 = &H00000025
	DIF_TROUBLESHOOTER = &H00000026
	DIF_POWERMESSAGEWAKE = &H00000027
	DIF_ADDREMOTEPROPERTYPAGE_ADVANCED = &H00000028
	DIF_UPDATEDRIVER_UI = &H00000029
	DIF_FINISHINSTALL_ACTION = &H0000002A
	DIF_RESERVED2 = &H00000030
End Enum

Public Type SP_CLASSINSTALL_HEADER
	cbSize As Long
	InstallFunction As DI_FUNCTION
End Type

Public Enum SetupDeviceStateChange
	DICS_ENABLE = &H00000001
	DICS_DISABLE = &H00000002
	DICS_PROPCHANGE = &H00000003
	DICS_START = &H00000004
	DICS_STOP = &H00000005
End Enum

Public Type SP_PROPCHANGE_PARAMS
	ClassInstallHeader As SP_CLASSINSTALL_HEADER
	StateChange As SetupDeviceStateChange
	Scope As Setup_DICSF
	HwProfile As Long
End Type

Public Enum SetupRemDeviceScope
	DI_REMOVEDEVICE_GLOBAL = &H00000001
	DI_REMOVEDEVICE_CONFIGSPECIFIC = &H00000002
End Enum
Public Type SP_REMOVEDEVICE_PARAMS
	ClassInstallHeader As SP_CLASSINSTALL_HEADER
	Scope As SetupRemDeviceScope
	HwProfile As Long
End Type
Public Enum SetupUnRemDeviceScope
	DI_UNREMOVEDEVICE_CONFIGSPECIFIC = &H00000002
End Enum
Public Type SP_UNREMOVEDEVICE_PARAMS
	ClassInstallHeader As SP_CLASSINSTALL_HEADER
	Scope As SetupUnRemDeviceScope
	HwProfile As Long
End Type

Public Type SP_DETECTDEVICE_PARAMS
	ClassInstallHeader As SP_CLASSINSTALL_HEADER
	DetectProgressNotify As LongPtr
	ProgressNotifyParam As LongPtr
End Type

Public Type SP_POWERMESSAGEWAKE_PARAMS_W
    ClassInstallHeader As SP_CLASSINSTALL_HEADER
    PowerMessageWake(0 To ((LINE_LEN * 2) - 1)) As Integer
End Type
'Alias SP_POWERMESSAGEWAKE_PARAMS As SP_POWERMESSAGEWAKE_PARAMS_W
Public Type SP_POWERMESSAGEWAKE_PARAMS
    ClassInstallHeader As SP_CLASSINSTALL_HEADER
    PowerMessageWake(0 To ((LINE_LEN * 2) - 1)) As Integer
End Type

Public Type SP_NEWDEVICEWIZARD_DATA
    ClassInstallHeader As SP_CLASSINSTALL_HEADER
    Flags As Long ' presently unused--must be zero.
    DynamicPages(0 To (MAX_INSTALLWIZARD_DYNAPAGES - 1)) As LongPtr 'HPROPSHEETPAGE
    NumDynamicPages As Long
    hwndWizardDlg As LongPtr
End Type



Public Type SP_CLASSIMAGELIST_DATA
	cbSize As Long
	ImageList As LongPtr
	Reserved As LongPtr
End Type

Public Enum DevPropBooleanValues
	DEVPROP_TRUE = -1 'True
    DEVPROP_FALSE = 0 ' False
End Enum

Public Enum SetupDevInstallFlags
	DI_SHOWOEM = &H00000001  ' support Other... button
	DI_SHOWCOMPAT = &H00000002  ' show compatibility list
	DI_SHOWCLASS = &H00000004  ' show class list
	DI_SHOWALL = &H00000007  ' both class & compat list shown
	DI_NOVCP = &H00000008  ' don't create a new copy queue--use
'  caller-supplied FileQueue
	DI_DIDCOMPAT = &H00000010  ' Searched for compatible devices
	DI_DIDCLASS = &H00000020  ' Searched for class devices
	DI_AUTOASSIGNRES = &H00000040  ' No UI for resources if possible
'  flags returned by DiInstallDevice to indicate need to reboot/restart
	DI_NEEDRESTART = &H00000080  ' Reboot required to take effect
	DI_NEEDREBOOT = &H00000100  ' ""
'  flags for device installation
	DI_NOBROWSE = &H00000200  ' no Browse... in InsertDisk
'  Flags set by DiBuildDriverInfoList
	DI_MULTMFGS = &H00000400  ' Set if multiple manufacturers in
'  class driver list
'  Flag indicates that device is disabled
	DI_DISABLED = &H00000800  ' Set if device disabled
'  Flags for Device/Class Properties
	DI_GENERALPAGE_ADDED = &H00001000
	DI_RESOURCEPAGE_ADDED = &H00002000
'  Flag to indicate the setting properties for this Device (or class) caused a change
'  so the Dev Mgr UI probably needs to be updatd.
	DI_PROPERTIES_CHANGE = &H00004000
'  Flag to indicate that the sorting from the INF file should be used.
	DI_INF_IS_SORTED = &H00008000&
'  Flag to indicate that only the the INF specified by SP_DEVINSTALL_PARAMS.DriverPath
'  should be searched.
	DI_ENUMSINGLEINF = &H00010000
'  Flag that prevents ConfigMgr from removing/re-enumerating devices during device
'  registration, installation, and deletion.
	DI_DONOTCALLCONFIGMG = &H00020000
'  The following flag can be used to install a device disabled
	DI_INSTALLDISABLED = &H00040000
'  Flag that causes SetupDiBuildDriverInfoList to build a device's compatible driver
'  list from its existing class driver list, instead of the normal INF search.
	DI_COMPAT_FROM_CLASS = &H00080000
'  This flag is set if the Class Install params should be used.
	DI_CLASSINSTALLPARAMS = &H00100000
'  This flag is set if the caller of DiCallClassInstaller does NOT
'  want the internal default action performed if the Class installer
'  returns ERROR_DI_DO_DEFAULT.
	DI_NODI_DEFAULTACTION = &H00200000
'  The setupx flag, DI_NOSYNCPROCESSING (0x00400000L) is not support in the Setup APIs.
'  flags for device installation
	DI_QUIETINSTALL = &H00800000  ' don't confuse the user with
'  questions or excess info
	DI_NOFILECOPY = &H01000000  ' No file Copy necessary
	DI_FORCECOPY = &H02000000  ' Force files to be copied from install path
	DI_DRIVERPAGE_ADDED = &H04000000  ' Prop provider added Driver page.
	DI_USECI_SELECTSTRINGS = &H08000000  ' Use Class Installer Provided strings in the Select Device Dlg
	DI_OVERRIDE_INFFLAGS = &H10000000 ' Override INF flags
	DI_PROPS_NOCHANGEUSAGE = &H20000000  ' No Enable/Disable in General Props
	DI_NOSELECTICONS = &H40000000  ' No small icons in select device dialogs
	DI_NOWRITE_IDS = &H80000000  ' Don't write HW & Compat IDs on install
End Enum
Public Enum SetupDevInstallFlagsEx
	DI_FLAGSEX_RESERVED2 = &H00000001  ' DI_FLAGSEX_USEOLDINFSEARCH is obsolete
	DI_FLAGSEX_RESERVED3 = &H00000002  ' DI_FLAGSEX_AUTOSELECTRANK0 is obsolete
	DI_FLAGSEX_CI_FAILED = &H00000004  ' Failed to Load/Call class installer
	DI_FLAGSEX_FINISHINSTALL_ACTION = &H00000008  ' Class/co-installer wants to get a DIF_FINISH_INSTALL action in client context.
	DI_FLAGSEX_DIDINFOLIST = &H00000010  ' Did the Class Info List
	DI_FLAGSEX_DIDCOMPATINFO = &H00000020  ' Did the Compat Info List
	DI_FLAGSEX_FILTERCLASSES = &H00000040
	DI_FLAGSEX_SETFAILEDINSTALL = &H00000080
	DI_FLAGSEX_DEVICECHANGE = &H00000100
	DI_FLAGSEX_ALWAYSWRITEIDS = &H00000200
	DI_FLAGSEX_PROPCHANGE_PENDING = &H00000400  ' One or more device property sheets have had changes made
'  to them, and need to have a DIF_PROPERTYCHANGE occur.
	DI_FLAGSEX_ALLOWEXCLUDEDDRVS = &H00000800
	DI_FLAGSEX_NOUIONQUERYREMOVE = &H00001000
	DI_FLAGSEX_USECLASSFORCOMPAT = &H00002000  ' Use the device's class when building compat drv list.
'  (Ignored if DI_COMPAT_FROM_CLASS flag is specified.)
	DI_FLAGSEX_RESERVED4 = &H00004000  ' DI_FLAGSEX_OLDINF_IN_CLASSLIST is obsolete
	DI_FLAGSEX_NO_DRVREG_MODIFY = &H00008000&  ' Don't run AddReg and DelReg for device's software (driver) key.
	DI_FLAGSEX_IN_SYSTEM_SETUP = &H00010000  ' Installation is occurring during initial system setup.
	DI_FLAGSEX_INET_DRIVER = &H00020000  ' Driver came from Windows Update
	DI_FLAGSEX_APPENDDRIVERLIST = &H00040000  ' Cause SetupDiBuildDriverInfoList to append
'  a new driver list to an existing list.
	DI_FLAGSEX_PREINSTALLBACKUP = &H00080000  ' not used
	DI_FLAGSEX_BACKUPONREPLACE = &H00100000  ' not used
	DI_FLAGSEX_DRIVERLIST_FROM_URL = &H00200000  ' build driver list from INF(s) retrieved from URL specified
'  in SP_DEVINSTALL_PARAMS.DriverPath (empty string means
'  Windows Update website)
	DI_FLAGSEX_RESERVED1 = &H00400000
	DI_FLAGSEX_EXCLUDE_OLD_INET_DRIVERS = &H00800000  ' Don't include old Internet drivers when building
'  a driver list.
'  Ignored on Windows Vista and later.
	DI_FLAGSEX_POWERPAGE_ADDED = &H01000000  ' class installer added their own power page
	DI_FLAGSEX_FILTERSIMILARDRIVERS = &H02000000  ' only include similar drivers in class list
	DI_FLAGSEX_INSTALLEDDRIVER = &H04000000  ' only add the installed driver to the class or compat
'  driver list.  Used in calls to SetupDiBuildDriverInfoList
	DI_FLAGSEX_NO_CLASSLIST_NODE_MERGE = &H08000000  ' Don't remove identical driver nodes from the class list
	DI_FLAGSEX_ALTPLATFORM_DRVSEARCH = &H10000000  ' Build driver list based on alternate platform information
'  specified in associated file queue
	DI_FLAGSEX_RESTART_DEVICE_ONLY = &H20000000  ' only restart the device drivers are being installed on as
'  opposed to restarting all devices using those drivers.
	DI_FLAGSEX_RECURSIVESEARCH = &H40000000  ' Tell SetupDiBuildDriverInfoList to do a recursive search
	DI_FLAGSEX_SEARCH_PUBLISHED_INFS = &H80000000  ' Tell SetupDiBuildDriverInfoList to do a "published INF" search
End Enum

Public Type SP_DEVINSTALL_PARAMS_W
	cbSize As Long
	Flags As SetupDevInstallFlags
	FlagsEx As SetupDevInstallFlagsEx
	hwndParent As LongPtr
	InstallMsgHandler As LongPtr
	InstallMsgHandlerContext As LongPtr
	FileQueue As LongPtr
	ClassInstallReserved As LongPtr
	Reserved As Long
	DriverPath(0 To (MAX_PATH - 1)) As Integer
End Type
Public Type SP_DEVINSTALL_PARAMS
    cbSize As Long
    Flags As SetupDevInstallFlags
    FlagsEx As SetupDevInstallFlagsEx
    hwndParent As LongPtr
    InstallMsgHandler As LongPtr
    InstallMsgHandlerContext As LongPtr
    FileQueue As LongPtr
    ClassInstallReserved As LongPtr
    Reserved As Long
    DriverPath(0 To (MAX_PATH - 1)) As Integer
End Type

Public Enum SetupClassListFlags
	DIBCI_NOINSTALLCLASS = &H00000001
	DIBCI_NODISPLAYCLASS = &H00000002
End Enum

#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Public Type SP_DEVICE_INTERFACE_DETAIL_DATA_W
	cbSize As Long
	DevicePath(MAX_INTERFACE_NAME_LEN) As Integer
End Type
#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Public Type SP_DEVICE_INTERFACE_DETAIL_DATA
    cbSize As Long
    DevicePath(MAX_INTERFACE_NAME_LEN) As Integer
End Type

Public Enum SetupDICDFlags
	DICD_GENERATE_ID = &H00000001
	DICD_INHERIT_CLASSDRVS = &H00000002
End Enum

Public Enum SetupDevRegProps
	SPDRP_DEVICEDESC = (&H00000000)  ' DeviceDesc (R/W)
	SPDRP_HARDWAREID = (&H00000001)  ' HardwareID (R/W)
	SPDRP_COMPATIBLEIDS = (&H00000002)  ' CompatibleIDs (R/W)
	SPDRP_UNUSED0 = (&H00000003)  ' unused
	SPDRP_SERVICE = (&H00000004)  ' Service (R/W)
	SPDRP_UNUSED1 = (&H00000005)  ' unused
	SPDRP_UNUSED2 = (&H00000006)  ' unused
	SPDRP_CLASS = (&H00000007)  ' Class (R--tied to ClassGUID)
	SPDRP_CLASSGUID = (&H00000008)  ' ClassGUID (R/W)
	SPDRP_DRIVER = (&H00000009)  ' Driver (R/W)
	SPDRP_CONFIGFLAGS = (&H0000000A)  ' ConfigFlags (R/W)
	SPDRP_MFG = (&H0000000B)  ' Mfg (R/W)
	SPDRP_FRIENDLYNAME = (&H0000000C)  ' FriendlyName (R/W)
	SPDRP_LOCATION_INFORMATION = (&H0000000D)  ' LocationInformation (R/W)
	SPDRP_PHYSICAL_DEVICE_OBJECT_NAME = (&H0000000E)  ' PhysicalDeviceObjectName (R)
	SPDRP_CAPABILITIES = (&H0000000F)  ' Capabilities (R)
	SPDRP_UI_NUMBER = (&H00000010)  ' UiNumber (R)
	SPDRP_UPPERFILTERS = (&H00000011)  ' UpperFilters (R/W)
	SPDRP_LOWERFILTERS = (&H00000012)  ' LowerFilters (R/W)
	SPDRP_BUSTYPEGUID = (&H00000013)  ' BusTypeGUID (R)
	SPDRP_LEGACYBUSTYPE = (&H00000014)  ' LegacyBusType (R)
	SPDRP_BUSNUMBER = (&H00000015)  ' BusNumber (R)
	SPDRP_ENUMERATOR_NAME = (&H00000016)  ' Enumerator Name (R)
	SPDRP_SECURITY = (&H00000017)  ' Security (R/W, binary form)
	SPDRP_SECURITY_SDS = (&H00000018)  ' Security (W, SDS form)
	SPDRP_DEVTYPE = (&H00000019)  ' Device Type (R/W)
	SPDRP_EXCLUSIVE = (&H0000001A)  ' Device is exclusive-access (R/W)
	SPDRP_CHARACTERISTICS = (&H0000001B)  ' Device Characteristics (R/W)
	SPDRP_ADDRESS = (&H0000001C)  ' Device Address (R)
	SPDRP_UI_NUMBER_DESC_FORMAT = (&H0000001D)  ' UiNumberDescFormat (R/W)
	SPDRP_DEVICE_POWER_DATA = (&H0000001E)  ' Device Power Data (R)
	SPDRP_REMOVAL_POLICY = (&H0000001F)  ' Removal Policy (R)
	SPDRP_REMOVAL_POLICY_HW_DEFAULT = (&H00000020)  ' Hardware Removal Policy (R)
	SPDRP_REMOVAL_POLICY_OVERRIDE = (&H00000021)  ' Removal Policy Override (RW)
	SPDRP_INSTALL_STATE = (&H00000022)  ' Device Install State (R)
	SPDRP_LOCATION_PATHS = (&H00000023)  ' Device Location Paths (R)
	SPDRP_BASE_CONTAINERID = (&H00000024)  ' Base ContainerID (R)
End Enum
Public Enum SetupClsRegProps
	SPCRP_UPPERFILTERS = (&H00000011)  ' UpperFilters (R/W)
	SPCRP_LOWERFILTERS = (&H00000012)  ' LowerFilters (R/W)
	SPCRP_SECURITY = (&H00000017)  ' Security (R/W, binary form)
	SPCRP_SECURITY_SDS = (&H00000018)  ' Security (W, SDS form)
	SPCRP_DEVTYPE = (&H00000019)  ' Device Type (R/W)
	SPCRP_EXCLUSIVE = (&H0000001A)  ' Device is exclusive-access (R/W)
	SPCRP_CHARACTERISTICS = (&H0000001B)  ' Device Characteristics (R/W)
End Enum



Public Enum SetupDriverType
	SPDIT_NODRIVER = &H00000000
	SPDIT_CLASSDRIVER = &H00000001
	SPDIT_COMPATDRIVER = &H00000002
End Enum

Public Const LINE_LEN = 256

[Description("Note: This is the V2 version, for Windows 2000 and higher.")]
#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Public Type SP_DRVINFO_DATA_W
	cbSize As Long
	DriverType As SetupDriverType
	Reserved As LongPtr
	Description(0 To (LINE_LEN - 1)) As Integer
	MfgName(0 To (LINE_LEN - 1)) As Integer
	ProviderName(0 To (LINE_LEN - 1)) As Integer
	DriverDate As FILETIME
	DriverVersion As LongLong
End Type
[Description("Note: This is the V2 version, for Windows 2000 and higher.")]
#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Public Type SP_DRVINFO_DATA
    cbSize As Long
    DriverType As SetupDriverType
    Reserved As LongPtr
    Description(0 To (LINE_LEN - 1)) As Integer
    MfgName(0 To (LINE_LEN - 1)) As Integer
    ProviderName(0 To (LINE_LEN - 1)) As Integer
    DriverDate As FILETIME
    DriverVersion As LongLong
End Type

#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Public Type SP_DRVINFO_DATA_V2_W
    cbSize As Long
    DriverType As SetupDriverType
    Reserved As LongPtr
    Description(0 To (LINE_LEN - 1)) As Integer
    MfgName(0 To (LINE_LEN - 1)) As Integer
    ProviderName(0 To (LINE_LEN - 1)) As Integer
    DriverDate As FILETIME
    DriverVersion As LongLong
End Type
#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Public Type SP_DRVINFO_DATA_V2
    cbSize As Long
    DriverType As SetupDriverType
    Reserved As LongPtr
    Description(0 To (LINE_LEN - 1)) As Integer
    MfgName(0 To (LINE_LEN - 1)) As Integer
    ProviderName(0 To (LINE_LEN - 1)) As Integer
    DriverDate As FILETIME
    DriverVersion As LongLong
End Type

Public Enum SetupClassPropFlags
	DICLASSPROP_INSTALLER = &H00000001  ' device setup class property
	DICLASSPROP_INTERFACE = &H00000002  ' device interface class property
End Enum

Public Enum SetupPropsheetReqPage
    SPPSR_SELECT_DEVICE_RESOURCES = 1  ' supplied by setupapi.dll
    SPPSR_ENUM_BASIC_DEVICE_PROPERTIES = 2  ' supplied by device's BasicProperties32 provider
    SPPSR_ENUM_ADV_DEVICE_PROPERTIES = 3  ' supplied by class and/or device's EnumPropPages32 provider
End Enum
Public Type SP_PROPSHEETPAGE_REQUEST
	cbSize As Long
	PageRequested As SetupPropsheetReqPage
	DeviceInfoSet As LongPtr
	DeviceInfoData As LongPtr
End Type

Public Enum SetupPropPageTypes
	DIGCDP_FLAG_BASIC = &H00000001
	DIGCDP_FLAG_ADVANCED = &H00000002
	DIGCDP_FLAG_REMOTE_BASIC = &H00000003  ' not presently implemented
	DIGCDP_FLAG_REMOTE_ADVANCED = &H00000004
End Enum

Public Type SP_TROUBLESHOOTER_PARAMS_A
    ClassInstallHeader As SP_CLASSINSTALL_HEADER
    ChmFile(0 To (MAX_PATH - 1)) As Integer
    HtmlTroubleShooter(0 To (MAX_PATH - 1)) As Byte
End Type
Public Type SP_TROUBLESHOOTER_PARAMS_W
    ClassInstallHeader As SP_CLASSINSTALL_HEADER
    ChmFile(0 To (MAX_PATH - 1)) As Integer
    HtmlTroubleShooter(0 To (MAX_PATH - 1)) As Integer
End Type
'Alias SP_TROUBLESHOOTER_PARAMS As SP_TROUBLESHOOTER_PARAMS_W
Public Type SP_TROUBLESHOOTER_PARAMS
    ClassInstallHeader As SP_CLASSINSTALL_HEADER
    ChmFile(0 To (MAX_PATH - 1)) As Integer
    HtmlTroubleShooter(0 To (MAX_PATH - 1)) As Integer
End Type

Public Enum SetupDrvInstallFlags
    DNF_DUPDESC = &H00000001  ' Multiple providers have same desc
    DNF_OLDDRIVER = &H00000002  ' Driver node specifies old/current driver
    DNF_EXCLUDEFROMLIST = &H00000004  ' If set, this driver node will not be displayed in any driver select dialogs.
    DNF_NODRIVER = &H00000008  ' if we want to install no driver (e.g no mouse drv)
    DNF_LEGACYINF = &H00000010  ' Driver node came from an old-style INF (obsolete)
    DNF_CLASS_DRIVER = &H00000020  ' Driver node represents a class driver
    DNF_COMPATIBLE_DRIVER = &H00000040  ' Driver node represents a compatible driver
    DNF_INET_DRIVER = &H00000080  ' Driver comes from an internet source
    DNF_UNUSED1 = &H00000100
    DNF_UNUSED2 = &H00000200
    DNF_OLD_INET_DRIVER = &H00000400  ' Driver came from the Internet, but we don't currently have access to it's source files.  Never attempt to
'  install a driver with this flag! Note used on Windows Vista and Later.
    DNF_BAD_DRIVER = &H00000800  ' Driver node should not be used at all
    DNF_DUPPROVIDER = &H00001000  ' Multiple drivers have the same provider and desc
' #if _SETUPAPI_VER >= _WIN32_WINNT_WINXP
    DNF_INF_IS_SIGNED = &H00002000  ' If file is digitally signed
    DNF_OEM_F6_INF = &H00004000  ' INF specified from F6 during textmode setup.
    DNF_DUPDRIVERVER = &H00008000&  ' Multipe drivers have the same desc, provider, and DriverVer values
    DNF_BASIC_DRIVER = &H00010000  ' Driver provides basic functionality, but should not be chosen if other signed drivers exist.
' #endif // _SETUPAPI_VER >= _WIN32_WINNT_WINXP
' #if _SETUPAPI_VER >= _WIN32_WINNT_WS03
    DNF_AUTHENTICODE_SIGNED = &H00020000  ' Inf file is signed by an Authenticode(tm) catalog.
' #endif // _SETUPAPI_VER >= _WIN32_WINNT_WS03
' #if _SETUPAPI_VER >= _WIN32_WINNT_LONGHORN
    DNF_INSTALLEDDRIVER = &H00040000  ' This driver node is currently installed on the device.
    DNF_ALWAYSEXCLUDEFROMLIST = &H00080000  ' If set, this driver is not even displayed in
'  alternative platform either.
    DNF_INBOX_DRIVER = &H00100000  ' This driver node came from an INF that shipped with Windows.
' #endif // _SETUPAPI_VER >= _WIN32_WINNT_LONGHORN
' #if _SETUPAPI_VER >= _WIN32_WINNT_WIN7
    DNF_REQUESTADDITIONALSOFTWARE = &H00200000  ' This driver is only part of a software solution needed by this device
' #endif // _SETUPAPI_VER >= _WIN32_WINNT_WIN7
    DNF_UNUSED_22 = &H00400000
    DNF_UNUSED_23 = &H00800000
    DNF_UNUSED_24 = &H01000000
    DNF_UNUSED_25 = &H02000000
    DNF_UNUSED_26 = &H04000000
    DNF_UNUSED_27 = &H08000000
    DNF_UNUSED_28 = &H10000000
    DNF_UNUSED_29 = &H20000000
    DNF_UNUSED_30 = &H40000000
    DNF_UNUSED_31 = &H80000000
End Enum
Public Enum SetupDrvInstallRank
    DRIVER_HARDWAREID_RANK = &H00000FFF    ' Any rank less than or equal to
                                            '  this value is a gold
                                            '  HardwareID match
    DRIVER_HARDWAREID_MASK = &H80000FFF    ' If you mask these bits off (AND)
                                            '  from the Rank and the result is 0
                                            '  then the Rank is a trusted HardwareID
                                            '  match
    DRIVER_UNTRUSTED_RANK = &H80000000 ' Any rank with this bit set is an
                                        '  "untrusted" rank, meaning that
                                        '  the INF was unsigned.
    DRIVER_W9X_SUSPECT_RANK = &HC0000000   ' Any rank that is greater than
                                            '  or equal to this value, and lesser
                                            '  than or equal to 0xFFFF is suspected
                                            '  to be a Win9x-only driver, because
                                            '  (a) it isn't signed, and (b) there
                                            '  is no NT-specific decoration to
                                            '  explicitly indicate that the INF
                                            '  supports Windows NT/2000/XP
End Enum
Public Type SP_DRVINSTALL_PARAMS
    cbSize As Long
    Rank As SetupDrvInstallRank
    Flags As SetupDrvInstallFlags
    PrivateData As LongPtr
    Reserved As Long
End Type

Public Type SP_BACKUP_QUEUE_PARAMS_V2_W
    cbSize As Long ' size of structure
    FullInfPath(0 To (MAX_PATH - 1)) As Integer ' buffer to hold UNICODE pathname of INF file
    FilenameOffset As Long ' offset in WCHAR's of filename part (after '\')
    ReinstallInstance(0 To (MAX_PATH - 1)) As Integer ' Instance ID (if present)
End Type
'Alias SP_BACKUP_QUEUE_PARAMS_V2 As SP_BACKUP_QUEUE_PARAMS_V2_W
'Alias SP_BACKUP_QUEUE_PARAMS As SP_BACKUP_QUEUE_PARAMS_V2_W
'Alias SP_BACKUP_QUEUE_PARAMS_W As SP_BACKUP_QUEUE_PARAMS_V2_W
Public Type SP_BACKUP_QUEUE_PARAMS_V2
    cbSize As Long ' size of structure
    FullInfPath(0 To (MAX_PATH - 1)) As Integer ' buffer to hold UNICODE pathname of INF file
    FilenameOffset As Long ' offset in WCHAR's of filename part (after '\')
    ReinstallInstance(0 To (MAX_PATH - 1)) As Integer ' Instance ID (if present)
End Type
Public Type SP_BACKUP_QUEUE_PARAMS
    cbSize As Long ' size of structure
    FullInfPath(0 To (MAX_PATH - 1)) As Integer ' buffer to hold UNICODE pathname of INF file
    FilenameOffset As Long ' offset in WCHAR's of filename part (after '\')
    ReinstallInstance(0 To (MAX_PATH - 1)) As Integer ' Instance ID (if present)
End Type
Public Type SP_BACKUP_QUEUE_PARAMS_W
    cbSize As Long ' size of structure
    FullInfPath(0 To (MAX_PATH - 1)) As Integer ' buffer to hold UNICODE pathname of INF file
    FilenameOffset As Long ' offset in WCHAR's of filename part (after '\')
    ReinstallInstance(0 To (MAX_PATH - 1)) As Integer ' Instance ID (if present)
End Type


Public Enum DEVPROPSTORE
    DEVPROP_STORE_SYSTEM
    DEVPROP_STORE_USER
End Enum

Public Type DEVPROPCOMPKEY
    Key As PROPERTYKEY
    Store As DEVPROPSTORE
    LocaleName As LongPtr
End Type

Public Type DEVPROPERTY
    CompKey As DEVPROPCOMPKEY
    Type As DEVPROPTYPE
    BufferSize As Long
    Buffer As LongPtr
End Type

Public Const DEVPROPID_FIRST_USABLE = 2

Public Enum SetupMiniIconFlags
    DMI_MASK = &H00000001
    DMI_BKCOLOR = &H00000002
    DMI_USERECT = &H00000004
End Enum

Public Enum SetupDefaultIconIDs
    IDI_RESOURCEFIRST = 159
    IDI_RESOURCE = 159
    IDI_RESOURCELAST = 161
    IDI_RESOURCEOVERLAYFIRST = 161
    IDI_RESOURCEOVERLAYLAST = 161
    IDI_CONFLICT = 161
    IDI_CLASSICON_OVERLAYFIRST = 500
    IDI_CLASSICON_OVERLAYLAST = 502
    IDI_PROBLEM_OVL = 500
    IDI_DISABLED_OVL = 501
    IDI_FORCED_OVL = 502
End Enum

Public Enum SetupWizPageTypes
    SPWPT_SELECTDEVICE = &H1
End Enum
Public Enum SetupWizPageFlags
    SPWP_USE_DEVINFO_DATA = &H1
End Enum

Public Const MAX_INSTALLWIZARD_DYNAPAGES = 20
Public Enum SetupWizardDataFlags
    NDW_INSTALLFLAG_DIDFACTDEFS = &H00000001
    NDW_INSTALLFLAG_HARDWAREALLREADYIN = &H00000002
    NDW_INSTALLFLAG_NEEDRESTART = DI_NEEDRESTART
    NDW_INSTALLFLAG_NEEDREBOOT = DI_NEEDREBOOT
    NDW_INSTALLFLAG_NEEDSHUTDOWN = &H00000200
    NDW_INSTALLFLAG_EXPRESSINTRO = &H00000400
    NDW_INSTALLFLAG_SKIPISDEVINSTALLED = &H00000800
    NDW_INSTALLFLAG_NODETECTEDDEVS = &H00001000
    NDW_INSTALLFLAG_INSTALLSPECIFIC = &H00002000
    NDW_INSTALLFLAG_SKIPCLASSLIST = &H00004000
    NDW_INSTALLFLAG_CI_PICKED_OEM = &H00008000&
    NDW_INSTALLFLAG_PCMCIAMODE = &H00010000
    NDW_INSTALLFLAG_PCMCIADEVICE = &H00020000
    NDW_INSTALLFLAG_USERCANCEL = &H00040000
    NDW_INSTALLFLAG_KNOWNCLASS = &H00080000
End Enum
Public Enum SetupWizardDynPageFlags
    DYNAWIZ_FLAG_PAGESADDED = &H00000001
'  Set this flag if you jump to the analyze page, and want it to
'  handle conflicts for you.  NOTE.  You will not get control back
'  in the event of a conflict if you set this flag.
    DYNAWIZ_FLAG_ANALYZE_HANDLECONFLICT = &H00000008
'  The following flags are not used by the Windows NT hardware wizard.
    DYNAWIZ_FLAG_INSTALLDET_NEXT = &H00000002
    DYNAWIZ_FLAG_INSTALLDET_PREV = &H00000004
End Enum
Public Type SP_INSTALLWIZARD_DATA
    ClassInstallHeader As SP_CLASSINSTALL_HEADER
    Flags As SetupWizardDataFlags
    DynamicPages(0 To (MAX_INSTALLWIZARD_DYNAPAGES - 1)) As LongPtr 'HPROPSHEETPAGE
    NumDynamicPages As Long
    DynamicPageFlags As SetupWizardDynPageFlags
    PrivateFlags As Long
    PrivateData As LongPtr
    hwndWizardDlg As LongPtr
End Type


Public Const MIN_IDD_DYNAWIZ_RESOURCE_ID  = 10000
Public Const MAX_IDD_DYNAWIZ_RESOURCE_ID  = 11000
'  Define wizard page resource IDs to be used when adding custom pages to the
'  hardware install wizard via DIF_INSTALLWIZARD.  Pages marked with
'  (CLASS INSTALLER PROVIDED) _must_ be supplied by the class installer if it
'  responds to the DIF_INSTALLWIZARD request.
'  Resource ID for the first page that the install wizard will go to after
'  adding the class installer pages.  (CLASS INSTALLER PROVIDED)
Public Const IDD_DYNAWIZ_FIRSTPAGE  = 10000
'  Resource ID for the page that the Select Device page will go back to.
'  (CLASS INSTALLER PROVIDED)
Public Const IDD_DYNAWIZ_SELECT_PREVPAGE  = 10001
'  Resource ID for the page that the Select Device page will go forward to.
'  (CLASS INSTALLER PROVIDED)
Public Const IDD_DYNAWIZ_SELECT_NEXTPAGE  = 10002
'  Resource ID for the page that the Analyze dialog should go back to
'  This will only be used in the event that there is a problem, and the user
'  selects Back from the analyze proc. (CLASS INSTALLER PROVIDED)
Public Const IDD_DYNAWIZ_ANALYZE_PREVPAGE  = 10003
'  Resource ID for the page that the Analyze dialog should go to if it
'  continues from the analyze proc. (CLASS INSTALLER PROVIDED)
Public Const IDD_DYNAWIZ_ANALYZE_NEXTPAGE  = 10004
'  Resource ID of the hardware install wizard's select device page.
'  This ID can be used to go directly to the hardware install wizard's select
'  device page.  (This is the resource ID of the Select Device wizard page
'  retrieved via SetupDiGetWizardPage when SPWPT_SELECTDEVICE is the requested
'  PageType.)
Public Const IDD_DYNAWIZ_SELECTDEV_PAGE  = 10009
'  Resource ID of the hardware install wizard's device analysis page.
'  This ID can be use to go directly to the hardware install wizard's analysis
'  page.
Public Const IDD_DYNAWIZ_ANALYZEDEV_PAGE  = 10010
'  Resource ID of the hardware install wizard's install detected devices page.
'  This ID can be use to go directly to the hardware install wizard's install
'  detected devices page.
Public Const IDD_DYNAWIZ_INSTALLDETECTEDDEVS_PAGE  = 10011
'  Resource ID of the hardware install wizard's select class page.
'  This ID can be use to go directly to the hardware install wizard's select
'  class page.
Public Const IDD_DYNAWIZ_SELECTCLASS_PAGE  = 10012
'  The following class installer-provided wizard page resource IDs are not used
'  by the Windows NT hardware wizard.
Public Const IDD_DYNAWIZ_INSTALLDETECTED_PREVPAGE  = 10006
Public Const IDD_DYNAWIZ_INSTALLDETECTED_NEXTPAGE  = 10007
Public Const IDD_DYNAWIZ_INSTALLDETECTED_NODEVS  = 10008

Public Enum SetupTxtLogDefTokens
    LOGTOKEN_TYPE_MASK = 3
    LOGTOKEN_UNSPECIFIED = 0
    LOGTOKEN_NO_LOG = 1
    LOGTOKEN_SETUPAPI_APPLOG = 2
    LOGTOKEN_SETUPAPI_DEVLOG = 3
End Enum
Public Enum SetupCreateTextLogSectionFlags
    TXTLOG_SETUPAPI_DEVLOG = &H00000001  ' 1 = setupdi.log, 0 = setupapi.log
    TXTLOG_SETUPAPI_CMDLINE = &H00000002  ' log the command line
    TXTLOG_SETUPAPI_BITS = &H00000003
End Enum
Public Enum SetupTextLogEventLevels
    TXTLOG_ERROR = &H1  ' shows entries which indicate a real problem
    TXTLOG_WARNING = &H2  ' shows entries which indicate a potential problem
    TXTLOG_SYSTEM_STATE_CHANGE = &H3  ' system changes only
    TXTLOG_SUMMARY = &H4  ' show basic operation surrounding system changes
    TXTLOG_DETAILS = &H5  ' detailed operation of the install process
    TXTLOG_VERBOSE = &H6  ' log entries which potentially generate a lot of data
    TXTLOG_VERY_VERBOSE = &H7  ' highest level shows all log entries
End Enum
Public Enum SetupTextLogEventFlags
    TXTLOG_TIMESTAMP = &H00010000
    TXTLOG_DEPTH_INCR = &H00020000
    TXTLOG_DEPTH_DECR = &H00040000
    TXTLOG_TAB_1 = &H00080000
    TXTLOG_FLUSH_FILE = &H00100000
End Enum
Public Enum SetupTextLogEventCategories
    TXTLOG_DEVINST = &H00000001
    TXTLOG_INF = &H00000002
    TXTLOG_FILEQ = &H00000004
    TXTLOG_COPYFILES = &H00000008
    TXTLOG_SIGVERIF = &H00000020
    TXTLOG_BACKUP = &H00000080
    TXTLOG_UI = &H00000100
    TXTLOG_UTIL = &H00000200
    TXTLOG_INFDB = &H00000400
    TXTLOG_DRVSETUP = &H00400000
    TXTLOG_POLICY = &H00800000
    TXTLOG_NEWDEV = &H01000000
    TXTLOG_UMPNPMGR = &H02000000
    TXTLOG_DRIVER_STORE = &H04000000
    TXTLOG_SETUP = &H08000000
    TXTLOG_CMI = &H10000000
    TXTLOG_DEVMGR = &H20000000
    TXTLOG_INSTALLER = &H40000000
    TXTLOG_VENDOR = &H80000000
End Enum

Public Const MAX_INF_STRING_LENGTH  = 4096  ' Actual maximum size of an INF string
'  (including string substitutions).
Public Const MAX_INF_SECTION_NAME_LENGTH  = 255  ' For Windows 9x compatibility, INF
'  section names should be constrained
'  to 32 characters.
Public Const MAX_TITLE_LEN  = 60
Public Const MAX_INSTRUCTION_LEN  = 256
Public Const MAX_LABEL_LEN  = 30
Public Const MAX_SERVICE_NAME_LEN  = 256
Public Const MAX_SUBTITLE_LEN  = 256

Public Const SP_MAX_MACHINENAME_LENGTH = (MAX_PATH + 3)

Public Type INFCONTEXT
    Inf As LongPtr
    CurrentInf As LongPtr
    Section As Long
    Line As Long
End Type
Public Enum SetupInfStyles
    INF_STYLE_NONE = &H00000000  ' unrecognized or non-existent
    INF_STYLE_OLDNT = &H00000001  ' winnt 3.x
    INF_STYLE_WIN4 = &H00000002  ' Win95
End Enum
Public Type SP_INF_INFORMATION
    InfStyle As SetupInfStyles
    InfCount As Long
    VersionData(4095) As Byte
End Type

Public Enum SetupOpenDevInterfaceFlags
    DIODI_NO_ADD = &H1
End Enum

#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Public Type SP_DRVINFO_DETAIL_DATA
    cbSize As Long
    InfDate As FILETIME
    CompatIDsOffset As Long
    CompatIDsLength As Long
    Reserved As LongPtr
    SectionName(0 To (LINE_LEN - 1)) As Integer
    InfFileName(0 To (MAX_PATH - 1)) As Integer
    DrvDescription(0 To (LINE_LEN - 1)) As Integer
    HardwareID(MAX_INF_STRING_LENGTH) As Integer
End Type
'Alias SP_DRVINFO_DETAIL_DATA As SP_DRVINFO_DETAIL_DATA_W
#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Public Type SP_DRVINFO_DETAIL_DATA_W
    cbSize As Long
    InfDate As FILETIME
    CompatIDsOffset As Long
    CompatIDsLength As Long
    Reserved As LongPtr
    SectionName(0 To (LINE_LEN - 1)) As Integer
    InfFileName(0 To (MAX_PATH - 1)) As Integer
    DrvDescription(0 To (LINE_LEN - 1)) As Integer
    HardwareID(MAX_INF_STRING_LENGTH) As Integer
End Type

Public Enum SetupOpenDeviceInfoFlags
    DIOD_INHERIT_CLASSDRVS = &H00000002
    DIOD_CANCEL_REMOVE = &H00000004
End Enum

#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Public Type SP_DEVINFO_LIST_DETAIL_DATA_W
    cbSize As Long
    ClassGuid As UUID
    RemoteMachineHandle As LongPtr
    RemoteMachineName(0 To (SP_MAX_MACHINENAME_LENGTH - 1)) As Integer
End Type
#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Public Type SP_DEVINFO_LIST_DETAIL_DATA
    cbSize As Long
    ClassGuid As UUID
    RemoteMachineHandle As LongPtr
    RemoteMachineName(0 To (SP_MAX_MACHINENAME_LENGTH - 1)) As Integer
End Type

Public Enum SetupCustomDevPropFlags
    DICUSTOMDEVPROP_MERGE_MULTISZ = &H1
End Enum

Public Enum SetupSigningInfo
    SIGNERSCORE_UNKNOWN = &HFF000000
    SIGNERSCORE_W9X_SUSPECT = &HC0000000
    SIGNERSCORE_UNSIGNED = &H80000000
    SIGNERSCORE_AUTHENTICODE = &H0F000000
    SIGNERSCORE_WHQL = &H0D000005  ' base WHQL.
    SIGNERSCORE_UNCLASSIFIED = &H0D000004  ' UNCLASSIFIED == INBOX == STANDARD == PREMIUM when the SIGNERSCORE_MASK
    SIGNERSCORE_INBOX = &H0D000003  ' filter is applied.
    SIGNERSCORE_LOGO_STANDARD = &H0D000002
    SIGNERSCORE_LOGO_PREMIUM = &H0D000001
    SIGNERSCORE_MASK = &HFF000000  ' Mask out all but the upper BYTE which contains the ranking signer information
    SIGNERSCORE_SIGNED_MASK = &HF0000000  ' Mask out only the upper nibble, which tells us if the package is signed or not.
End Enum

[Description("Windows 10 Redstone 1 or higher")]
#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Public Type SP_ALTPLATFORM_INFO_V3
    cbSize As Long
    ' platform to use (VER_PLATFORM_WIN32_WINDOWS or VER_PLATFORM_WIN32_NT)
    Platform As Long
    ' major and minor version numbers to use
    MajorVersion As Long
    MinorVersion As Long
    ' processor architecture to use (PROCESSOR_ARCHITECTURE_INTEL,
    ' PROCESSOR_ARCHITECTURE_AMD64, PROCESSOR_ARCHITECTURE_IA64,
    ' or PROCESSOR_ARCHITECTURE_ARM).
    ProcessorArchitecture As Integer
    'union {
    '    WORD  Reserved; // for compatibility with V1 structure
    Flags As Integer ' indicates validity of non V1 fields
    '} DUMMYUNIONNAME;
    ' specify SP_ALTPLATFORM_FLAGS_VERSION_RANGE in Flags
    ' to use FirstValidatedMajorVersion and FirstValidatedMinorVersion
    ' Major and minor versions of the oldest previous OS for which this
    ' package's digital signature may be considered valid.  For example, say
    ' the alternate platform is VER_PLATFORM_WIN32_NT, version 5.1.  However,
    ' it is wished that driver packages signed with a 5.0 osattr also be
    ' considered valid.  In this case, you'd have a  MajorVersion/MinorVersion
    ' of 5.1, and a FirstValidatedMajorVersion/FirstValidatedMinorVersion of
    ' 5.0.  To validate packages signed for any previous OS release, specify
    ' 0 for these fields.  To only validate against the target alternate
    ' platform, specify the same values as those in the MajorVersion and
    ' MinorVersion fields.
    FirstValidatedMajorVersion As Long
    FirstValidatedMinorVersion As Long
    ' specify non-zero value (e.g. VER_NT_WORKSTATION) in ProductType to use
    ' field, and/or specify SP_ALTPLATFORM_FLAGS_SUITE_MASK in Flags to use
    ' SuiteMask field, which may be zero.
    ' Product type and suite mask of alternate platform.  Used to select
    ' matching decorated install sections within driver packages that target
    ' specific product variants of the OS.  For example, for only Server
    ' products with the Enterprise or Small Business suite classification,
    ' use ProductType VER_NT_SERVER with SuiteMask VER_SUITE_ENTERPRISE and
    ' VER_SUITE_SMALLBUSINESS.
    ProductType As Byte
    SuiteMask As Integer
    ' Build number of alternate platform.  Used to select matching
    ' decorated install sections within driver packages that target a
    ' minimal build number with the specified OS
    ' MajorVersion/MinorVersion. If no specific minimal build number
    ' targeting is required, a value of zero should be specified. Note that
    ' this capability is only supported on certain builds of 10.0 and
    ' later.
    BuildNumber As Long
End Type
[Description("Windows XP to Windows 10 before Redstone 1")]
Public Type SP_ALTPLATFORM_INFO_V2
    cbSize As Long
    Platform As Long
    MajorVersion As Long
    MinorVersion As Long
    ProcessorArchitecture As Integer
    '    union {
    '        WORD  Reserved;
    Flags As Integer
    '    } DUMMYUNIONNAME;
    FirstValidatedMajorVersion As Long
    FirstValidatedMinorVersion As Long
End Type


Public Type SP_INF_SIGNER_INFO_V2_W
    cbSize As Long
    CatalogFile(0 To (MAX_PATH - 1)) As Integer
    DigitalSigner(0 To (MAX_PATH - 1)) As Integer
    DigitalSignerVersion(0 To (MAX_PATH - 1)) As Integer
    SignerScore As SetupSigningInfo
End Type
'Alias SP_INF_SIGNER_INFO_V2 As SP_INF_SIGNER_INFO_V2_W
'Alias SP_INF_SIGNER_INFO As SP_INF_SIGNER_INFO_V2_W
Public Type SP_INF_SIGNER_INFO_V2
    cbSize As Long
    CatalogFile(0 To (MAX_PATH - 1)) As Integer
    DigitalSigner(0 To (MAX_PATH - 1)) As Integer
    DigitalSignerVersion(0 To (MAX_PATH - 1)) As Integer
    SignerScore As SetupSigningInfo
End Type
Public Type SP_INF_SIGNER_INFO_W
    cbSize As Long
    CatalogFile(0 To (MAX_PATH - 1)) As Integer
    DigitalSigner(0 To (MAX_PATH - 1)) As Integer
    DigitalSignerVersion(0 To (MAX_PATH - 1)) As Integer
    SignerScore As SetupSigningInfo
End Type
Public Type SP_INF_SIGNER_INFO
    cbSize As Long
    CatalogFile(0 To (MAX_PATH - 1)) As Integer
    DigitalSigner(0 To (MAX_PATH - 1)) As Integer
    DigitalSignerVersion(0 To (MAX_PATH - 1)) As Integer
    SignerScore As SetupSigningInfo
End Type

Public Enum SetupInfSearchControl
    INFINFO_INF_SPEC_IS_HINF = 1
    INFINFO_INF_NAME_IS_ABSOLUTE = 2
    INFINFO_DEFAULT_SEARCH = 3
    INFINFO_REVERSE_DEFAULT_SEARCH = 4
    INFINFO_INF_PATH_LIST_SEARCH = 5
End Enum

Public Type SP_ORIGINAL_FILE_INFO_W
    cbSize As Long
    OriginalInfName(0 To (MAX_PATH - 1)) As Integer
    OriginalCatalogName(0 To (MAX_PATH - 1)) As Integer
End Type
Public Type SP_ORIGINAL_FILE_INFO
    cbSize As Long
    OriginalInfName(0 To (MAX_PATH - 1)) As Integer
    OriginalCatalogName(0 To (MAX_PATH - 1)) As Integer
End Type

Public Declare PtrSafe Function SetupDiGetClassDevsW Lib "setupapi" (ClassGuid As UUID, ByVal Enumerator As LongPtr, ByVal hWndParent As LongPtr, ByVal Flags As Setup_DIGCF) As LongPtr
Public DeclareWide PtrSafe Function SetupDiGetClassDevs Lib "setupapi" Alias "SetupDiGetClassDevsW" (ClassGuid As UUID, ByVal Enumerator As String, ByVal hWndParent As LongPtr, ByVal Flags As Setup_DIGCF) As LongPtr
Public Declare PtrSafe Function SetupDiEnumDeviceInfo Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, ByVal MemberIndex As Long, ByRef DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public Declare PtrSafe Function SetupDiDestroyDeviceInfoList Lib "setupapi" (ByVal DeviceInfoSet As LongPtr) As BOOL
Public Declare PtrSafe Function SetupDiGetDeviceInstanceIdW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal DeviceInstanceId As LongPtr, ByVal DeviceInstanceSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceInstanceId Lib "setupapi" Alias "SetupDiGetDeviceInstanceIdW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal DeviceInstanceId As String, ByVal DeviceInstanceSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetClassInstallParamsW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ClassInstallParams As Any, ByVal ClassInstallParamsSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetClassInstallParams Lib "setupapi" Alias "SetupDiSetClassInstallParamsW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ClassInstallParams As Any, ByVal ClassInstallParamsSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassInstallParamsW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ClassInstallParams As Any, ByVal ClassInstallParamsSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassInstallParams Lib "setupapi" Alias "SetupDiGetClassInstallParamsW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ClassInstallParams As Any, ByVal ClassInstallParamsSize As Long, RequiredSize As Long) As BOOL
Public Declare PtrSafe Function SetupDiOpenDevRegKey Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, ByRef DeviceInfoData As SP_DEVINFO_DATA, ByVal Scope As Setup_DICSF, ByVal HwProfile As Long, ByVal KeyType As Setup_KeyType, ByVal samDesired As REGSAM) As LongPtr
Public Declare PtrSafe Function SetupDiCreateDevRegKeyW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, ByRef DeviceInfoData As SP_DEVINFO_DATA, ByVal Scope As Setup_DICSF, ByVal HwProfile As Long, ByVal KeyType As Setup_KeyType, Optional ByVal InfHandle As LongPtr, Optional ByVal InfSectionName As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function SetupDiCreateDevRegKey Lib "setupapi" Alias "SetupDiCreateDevRegKeyW" (ByVal DeviceInfoSet As LongPtr, ByRef DeviceInfoData As SP_DEVINFO_DATA, ByVal Scope As Setup_DICSF, ByVal HwProfile As Long, ByVal KeyType As Setup_KeyType, Optional ByVal InfHandle As LongPtr, Optional ByVal InfSectionName As String) As LongPtr
Public Declare PtrSafe Function SetupDiRemoveDevice Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public Declare PtrSafe Function SetupDiDeleteDevRegKey Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, ByRef DeviceInfoData As SP_DEVINFO_DATA, ByVal Scope As Setup_DICSF, ByVal HwProfile As Long, ByVal KeyType As Setup_KeyType) As BOOL
Public Declare PtrSafe Function SetupDiUnremoveDevice Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public Declare PtrSafe Function SetupDiRestartDevices Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public Declare PtrSafe Function SetupDiLoadClassIcon Lib "setupapi" (ClassGuid As UUID, Optional LargeIcon As LongPtr, Optional MiniIconIndex As Long) As BOOL
Public Declare PtrSafe Function SetupDiLoadDeviceIcon Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal cxIcon As Long, ByVal cyIcon As Long, ByVal Flags As Long, hIcon As LongPtr) As BOOL
Public Declare PtrSafe Function SetupDiGetClassDescriptionW Lib "setupapi" (ClassGuid As UUID, ByVal ClassDescription As LongPtr, ByVal ClassDescriptionSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassDescription Lib "setupapi" Alias "SetupDiGetClassDescriptionW" (ClassGuid As UUID, ByVal ClassDescription As String, ByVal ClassDescriptionSize As Long, RequiredSize As Long) As BOOL
Public Declare PtrSafe Function SetupDiGetClassImageList Lib "setupapi" (ClassImageListData As SP_CLASSIMAGELIST_DATA) As BOOL
Public Declare PtrSafe Function SetupDiDestroyClassImageList Lib "setupapi" (ClassImageListData As SP_CLASSIMAGELIST_DATA) As BOOL
Public Declare PtrSafe Function SetupDiGetClassImageIndex Lib "setupapi" (ClassImageListData As SP_CLASSIMAGELIST_DATA, ClassGuid As UUID, ImageIndex As Long) As BOOL
Public Declare PtrSafe Function SetupDiGetDeviceInstallParamsW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, DeviceInstallParams As SP_DEVINSTALL_PARAMS_W) As BOOL
Public Declare PtrSafe Function SetupDiSetDeviceInstallParamsW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, DeviceInstallParams As SP_DEVINSTALL_PARAMS_W) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceInstallParams Lib "setupapi" Alias "SetupDiGetDeviceInstallParamsW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, DeviceInstallParams As SP_DEVINSTALL_PARAMS) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetDeviceInstallParams Lib "setupapi" Alias "SetupDiSetDeviceInstallParamsW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, DeviceInstallParams As SP_DEVINSTALL_PARAMS) As BOOL
Public Declare PtrSafe Function SetupDiBuildClassInfoList Lib "setupapi" (ByVal Flags As SetupClassListFlags, ClassGuidList As UUID, ByVal ClassGuidListSize As Long, RequiredSize As Long) As BOOL
Public Declare PtrSafe Function SetupDiClassNameFromGuidW Lib "setupapi" (ClassGuid As UUID, ByVal ClassName As LongPtr, ByVal ClassNameSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiClassNameFromGuid Lib "setupapi" Alias "SetupDiClassNameFromGuidW" (ClassGuid As UUID, ByVal ClassName As String, ByVal ClassNameSize As Long, RequiredSize As Long) As BOOL
Public Declare PtrSafe Function SetupDiClassGuidsFromNameW Lib "setupapi" (ByVal ClassName As LongPtr, ClassGuidList As UUID, ByVal ClassGuidListSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiClassGuidsFromName Lib "setupapi" Alias "SetupDiClassGuidsFromNameW" (ByVal ClassName As String, ClassGuidList As UUID, ByVal ClassGuidListSize As Long, RequiredSize As Long) As BOOL
Public Declare PtrSafe Function SetupDiGetHwProfileFriendlyNameW Lib "setupapi" (ByVal HwProfile As Long, ByVal FriendlyName As LongPtr, ByVal FriendlyNameSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetHwProfileFriendlyName Lib "setupapi" Alias "SetupDiGetHwProfileFriendlyNameW" (ByVal HwProfile As Long, ByVal FriendlyName As String, ByVal FriendlyNameSize As Long, RequiredSize As Long) As BOOL
Public Declare PtrSafe Function SetupDiGetWizardPage Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, InstallWizardData As SP_INSTALLWIZARD_DATA, ByVal PageType As SetupWizPageTypes, ByVal Flags As SetupWizPageFlags) As LongPtr
Public Declare PtrSafe Function SetupDiEnumDeviceInterfaces Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, InterfaceClassGuid As UUID, ByVal MemberIndex As Long, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA) As BOOL
Public Declare PtrSafe Function SetupDiGetDeviceInterfaceDetailW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA, DeviceInterfaceDetailData As SP_DEVICE_INTERFACE_DETAIL_DATA_W, ByVal DeviceInterfaceDetailDataSize As Long, RequiredSize As Long, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceInterfaceDetail Lib "setupapi" Alias "SetupDiGetDeviceInterfaceDetailW" (ByVal DeviceInfoSet As LongPtr, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA, DeviceInterfaceDetailData As SP_DEVICE_INTERFACE_DETAIL_DATA, ByVal DeviceInterfaceDetailDataSize As Long, RequiredSize As Long, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDevicePropertyW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceProperty Lib "setupapi" Alias "SetupDiGetDevicePropertyW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetDevicePropertyW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetDeviceProperty Lib "setupapi" Alias "SetupDiSetDevicePropertyW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal Flags As Long) As BOOL
Public Declare PtrSafe Function SetupDiGetDevicePropertyKeys Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, PropertyKeyArray As PROPERTYKEY, ByVal PropertyKeyCount As Long, RequiredPropertyKeyCount As Long, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetDeviceInterfacePropertyW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVICE_INTERFACE_DATA, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetDeviceInterfaceProperty Lib "setupapi" Alias "SetupDiSetDeviceInterfacePropertyW" (ByVal DeviceInfoSet As LongPtr, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceInterfacePropertyW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceInterfaceProperty Lib "setupapi" Alias "SetupDiGetDeviceInterfacePropertyW" (ByVal DeviceInfoSet As LongPtr, DeviceInterfaceData As SP_DEVINFO_DATA, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long, ByVal Flags As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceInterfacePropertyKeys Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA, PropertyKeyArray As PROPERTYKEY, ByVal PropertyKeyCount As Long, RequiredPropertyKeyCount As Long, ByVal Flags As Long) As BOOL
Public Declare PtrSafe Function SetupDiCreateDeviceInfoList Lib "setupapi" (ClassGuid As UUID, ByVal hwndParent As LongPtr) As LongPtr
Public Declare PtrSafe Function SetupDiGetDeviceInfoListDetailW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoSetDetailData As SP_DEVINFO_LIST_DETAIL_DATA_W) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceInfoListDetail Lib "setupapi" Alias "SetupDiGetDeviceInfoListDetailW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoSetDetailData As SP_DEVINFO_LIST_DETAIL_DATA) As BOOL
Public Declare PtrSafe Function SetupDiGetDeviceInfoListClass Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, ClassGuid As UUID) As BOOL
Public Declare PtrSafe Function SetupDiCreateDeviceInfoW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, ByVal DeviceName As LongPtr, ClassGuid As UUID, ByVal DeviceDescription As LongPtr, ByVal hwndParent As LongPtr, ByVal CreationFlags As SetupDICDFlags, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiCreateDeviceInfo Lib "setupapi" Alias "SetupDiCreateDeviceInfoW" (ByVal DeviceInfoSet As LongPtr, ByVal DeviceName As String, ClassGuid As UUID, ByVal DeviceDescription As String, ByVal hwndParent As LongPtr, ByVal CreationFlags As SetupDICDFlags, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public Declare PtrSafe Function SetupDiOpenDeviceInfoW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, ByVal DeviceInstanceId As LongPtr, ByVal hwndParent As LongPtr, ByVal OpenFlags As SetupOpenDeviceInfoFlags, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiOpenDeviceInfo Lib "setupapi" Alias "SetupDiOpenDeviceInfoW" (ByVal DeviceInfoSet As LongPtr, ByVal DeviceInstanceId As String, ByVal hwndParent As LongPtr, ByVal OpenFlags As SetupOpenDeviceInfoFlags, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public Declare PtrSafe Function SetupDiDeleteDeviceInfo Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public Declare PtrSafe Function SetupDiCreateDeviceInterfaceW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, InterfaceClassGuid As UUID, ByVal ReferenceString As LongPtr, ByVal CreationFlags As Long, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiCreateDeviceInterface Lib "setupapi" Alias "SetupDiCreateDeviceInterfaceW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, InterfaceClassGuid As UUID, ByVal ReferenceString As String, ByVal CreationFlags As Long, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA) As BOOL
Public Declare PtrSafe Function SetupDiSetDeviceInterfaceDefault Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA, ByVal Flags As Long, ByVal Reserved As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceRegistryPropertyW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal nProperty As SetupDevRegProps, PropertyRegDataType As REGTYPES, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDeviceRegistryProperty Lib "setupapi" Alias "SetupDiGetDeviceRegistryPropertyW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal nProperty As SetupDevRegProps, PropertyRegDataType As REGTYPES, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetDeviceRegistryPropertyW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal nProperty As SetupDevRegProps, PropertyBuffer As Any, ByVal PropertyBufferSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetDeviceRegistryProperty Lib "setupapi" Alias "SetupDiSetDeviceRegistryPropertyW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal nProperty As SetupDevRegProps, PropertyBuffer As Any, ByVal PropertyBufferSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassRegistryPropertyW Lib "setupapi" (ClassGuid As UUID, ByVal nProperty As SetupClsRegProps, PropertyRegDataType As REGTYPES, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long, ByVal MachineName As LongPtr, ByVal Reserved As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassRegistryProperty Lib "setupapi" Alias "SetupDiGetClassRegistryPropertyW" (ClassGuid As UUID, ByVal nProperty As SetupClsRegProps, PropertyRegDataType As REGTYPES, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long, ByVal MachineName As LongPtr, ByVal Reserved As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetClassRegistryPropertyW Lib "setupapi" (ClassGuid As UUID, ByVal nProperty As SetupClsRegProps, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal MachineName As LongPtr, ByVal Reserved As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetClassRegistryProperty Lib "setupapi" Alias "SetupDiSetClassRegistryPropertyW" (ClassGuid As UUID, ByVal nProperty As SetupClsRegProps, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal MachineName As LongPtr, ByVal Reserved As LongPtr) As BOOL
Public Declare PtrSafe Function SetupDiAskForOEMDisk Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public Declare PtrSafe Function SetupDiSelectOEMDrv Lib "setupapi" (ByVal hwndParent As LongPtr, ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public Declare PtrSafe Function SetupDiBuildDriverInfoList Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal DriverType As SetupDriverType) As BOOL
Public Declare PtrSafe Function SetupDiCancelDriverInfoSearch Lib "setupapi" (ByVal DeviceInfoSet As LongPtr) As BOOL
Public Declare PtrSafe Function SetupDiEnumDriverInfoW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal DriverType As SetupDriverType, ByVal MemberIndex As Long, DriverInfoData As SP_DRVINFO_DATA_W) As BOOL
Public DeclareWide PtrSafe Function SetupDiEnumDriverInfo Lib "setupapi" Alias "SetupDiEnumDriverInfoW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal DriverType As SetupDriverType, ByVal MemberIndex As Long, DriverInfoData As SP_DRVINFO_DATA) As BOOL
Public Declare PtrSafe Function SetupDiGetDriverInfoDetailW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, DriverInfoData As SP_DRVINFO_DATA_W, DriverInfoDetailData As SP_DRVINFO_DETAIL_DATA_W, ByVal DriverInfoDetailDataSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDriverInfoDetail Lib "setupapi" Alias "SetupDiGetDriverInfoDetailW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, DriverInfoData As SP_DRVINFO_DATA, DriverInfoDetailData As SP_DRVINFO_DETAIL_DATA, ByVal DriverInfoDetailDataSize As Long, RequiredSize As Long) As BOOL
Public Declare PtrSafe Function SetupDiDestroyDriverInfoList Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal DriverType As SetupDriverType) As BOOL
Public Declare PtrSafe Function SetupDiChangeState Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public Declare PtrSafe Function SetupDiCallClassInstaller Lib "setupapi" (ByVal InstallFunction As DI_FUNCTION, ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetClassPropertyW Lib "setupapi" (ClassGuid As UUID, PropertyKey As PROPERTYKEY, ByVal PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal Flags As SetupClassPropFlags) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetClassProperty Lib "setupapi" Alias "SetupDiSetClassPropertyW" (ClassGuid As UUID, PropertyKey As PROPERTYKEY, ByVal PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal Flags As SetupClassPropFlags) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassPropertyW Lib "setupapi" (ClassGuid As UUID, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long, ByVal Flags As SetupClassPropFlags) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassProperty Lib "setupapi" Alias "SetupDiGetClassPropertyW" (ClassGuid As UUID, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, RequiredSize As Long, ByVal Flags As SetupClassPropFlags) As BOOL
Public Declare PtrSafe Function SetupDiGetClassPropertyKeys Lib "setupapi" (ClassGuid As UUID, PropertyKeyArray As PROPERTYKEY, ByVal PropertyKeyCount As Long, RequiredPropertyKeyCount As Long, ByVal Flags As SetupClassPropFlags) As BOOL
Public Declare PtrSafe Function SetupDiGetDeviceInterfaceAlias Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA, AliasInterfaceClassGuid As UUID, AliasDeviceInterfaceData As SP_DEVICE_INTERFACE_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassDevPropertySheetsW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, PropertySheetHeader As Any, ByVal PropertySheetHeaderPageListSize As Long, RequiredSize As Long, ByVal PropertySheetType As SetupPropPageTypes) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetClassDevPropertySheets Lib "setupapi" Alias "SetupDiGetClassDevPropertySheetsW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, PropertySheetHeader As Any, ByVal PropertySheetHeaderPageListSize As Long, RequiredSize As Long, ByVal PropertySheetType As SetupPropPageTypes) As BOOL
#If Win64 Then
Public Declare PtrSafe Function SetupDiDrawMiniIcon Lib "setupapi" (ByVal hdc As LongPtr, rc As RECT, ByVal MiniIconIndex As Long, ByVal Flags As SetupMiniIconFlags) As Long
#Else
Public Declare PtrSafe Function SetupDiDrawMiniIcon Lib "setupapi" (ByVal hdc As LongPtr, ByVal rcLeft As Long, ByVal rcTop As Long, ByVal rcRight As Long, ByVal rcBottom As Long, ByVal MiniIconIndex As Long, ByVal Flags As SetupMiniIconFlags) As Long
#End If
Public Declare PtrSafe Function SetupDiGetClassBitmapIndex Lib "setupapi" (ClassGuid As UUID, MiniIconIndex As Long) As BOOL
Public Declare PtrSafe Function SetupDiGetSelectedDevice Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public Declare PtrSafe Function SetupDiSetSelectedDevice Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public Declare PtrSafe Function SetupDiOpenDeviceInterfaceW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, ByVal DevicePath As LongPtr, ByVal OpenFlags As SetupOpenDevInterfaceFlags, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiOpenDeviceInterface Lib "setupapi" Alias "SetupDiOpenDeviceInterfaceW" (ByVal DeviceInfoSet As LongPtr, ByVal DevicePath As String, ByVal OpenFlags As SetupOpenDevInterfaceFlags, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA) As BOOL
Public Declare PtrSafe Function SetupDiDeleteDeviceInterfaceData Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA) As BOOL
Public Declare PtrSafe Function SetupDiRemoveDeviceInterface Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInterfaceData As SP_DEVICE_INTERFACE_DATA) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetCustomDevicePropertyW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal CustomPropertyName As LongPtr, ByVal Flags As SetupCustomDevPropFlags, PropertyRegDataType As REGTYPES, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, Optional RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetCustomDeviceProperty Lib "setupapi" Alias "SetupDiGetCustomDevicePropertyW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal CustomPropertyName As String, ByVal Flags As SetupCustomDevPropFlags, PropertyRegDataType As REGTYPES, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, Optional RequiredSize As Long) As BOOL
Public Declare PtrSafe Function SetupDiGetDriverInstallParamsW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, DriverInfoData As SP_DRVINFO_DATA_W, DriverInstallParams As SP_DRVINSTALL_PARAMS) As BOOL
Public DeclareWide PtrSafe Function SetupDiGetDriverInstallParams Lib "setupapi" Alias "SetupDiGetDriverInstallParamsW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, DriverInfoData As SP_DRVINFO_DATA, DriverInstallParams As SP_DRVINSTALL_PARAMS) As BOOL
Public Declare PtrSafe Function SetupDiSetDriverInstallParamsW Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, DriverInfoData As SP_DRVINFO_DATA_W, DriverInstallParams As SP_DRVINSTALL_PARAMS) As BOOL
Public DeclareWide PtrSafe Function SetupDiSetDriverInstallParams Lib "setupapi" Alias "SetupDiSetDriverInstallParamsW" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, DriverInfoData As SP_DRVINFO_DATA, DriverInstallParams As SP_DRVINSTALL_PARAMS) As BOOL
Public Declare PtrSafe Function SetupDiInstallClassW Lib "setupapi" (ByVal hwndParent As LongPtr, ByVal InfFileName As LongPtr, ByVal Flags As SetupDevInstallFlags, Optional ByVal FileQueue As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetupDiInstallClass Lib "setupapi" Alias "SetupDiInstallClassW" (ByVal hwndParent As LongPtr, ByVal InfFileName As String, ByVal Flags As SetupDevInstallFlags, Optional ByVal FileQueue As LongPtr) As BOOL
Public Declare PtrSafe Function SetupDiSelectDevice Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public Declare PtrSafe Function SetupDiSelectBestCompatDrv Lib "setupapi" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA) As BOOL
Public Declare PtrSafe Function SetupDiGetHwProfileList Lib "setupapi" (HwProfileList As Long, ByVal HwProfileListSize As Long, RequiredSize As Long, CurrentlyActiveIndex As Long) As BOOL

Public Enum SetupCreateDiskSpaceListFlags
    SPDSL_IGNORE_DISK = &H00000001  ' ignore deletes and on-disk files in copies
    SPDSL_DISALLOW_NEGATIVE_ADJUST = &H00000002
End Enum
Public Declare PtrSafe Function SetupCreateDiskSpaceListA Lib "setupapi" (ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long, ByVal Flags As SetupCreateDiskSpaceListFlags) As LongPtr
Public Declare PtrSafe Function SetupCreateDiskSpaceListW Lib "setupapi" (ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long, ByVal Flags As SetupCreateDiskSpaceListFlags) As LongPtr
Public DeclareWide PtrSafe Function SetupCreateDiskSpaceList Lib "setupapi" Alias "SetupCreateDiskSpaceListW" (ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long, ByVal Flags As SetupCreateDiskSpaceListFlags) As LongPtr
Public Declare PtrSafe Function SetupDuplicateDiskSpaceListA Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long, ByVal Flags As Long) As LongPtr
Public Declare PtrSafe Function SetupDuplicateDiskSpaceListW Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long, ByVal Flags As Long) As LongPtr
Public DeclareWide PtrSafe Function SetupDuplicateDiskSpaceList Lib "setupapi" Alias "SetupDuplicateDiskSpaceListW" (ByVal DiskSpace As LongPtr, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long, ByVal Flags As Long) As LongPtr
Public Declare PtrSafe Function SetupDestroyDiskSpaceList Lib "setupapi" (ByVal DiskSpace As LongPtr) As BOOL
Public Declare PtrSafe Function SetupQueryDrivesInDiskSpaceListA Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal ReturnBuffer As String, ByVal ReturnBufferSize As Long, RequiredSize As Long) As BOOL
Public Declare PtrSafe Function SetupQueryDrivesInDiskSpaceListW Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal ReturnBuffer As LongPtr, ByVal ReturnBufferSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupQueryDrivesInDiskSpaceList Lib "setupapi" Alias "SetupQueryDrivesInDiskSpaceListW" (ByVal DiskSpace As LongPtr, ByVal ReturnBuffer As String, ByVal ReturnBufferSize As Long, RequiredSize As Long) As BOOL
Public Declare PtrSafe Function SetupQuerySpaceRequiredOnDriveA Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal DriveSpec As String, SpaceRequired As LongLong, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public Declare PtrSafe Function SetupQuerySpaceRequiredOnDriveW Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal DriveSpec As LongPtr, SpaceRequired As LongLong, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public DeclareWide PtrSafe Function SetupQuerySpaceRequiredOnDrive Lib "setupapi" Alias "SetupQuerySpaceRequiredOnDriveW" (ByVal DiskSpace As LongPtr, ByVal DriveSpec As String, SpaceRequired As LongLong, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public Declare PtrSafe Function SetupAdjustDiskSpaceListA Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal DriveRoot As String, ByVal Amount As LongLong, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public Declare PtrSafe Function SetupAdjustDiskSpaceListW Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal DriveRoot As LongPtr, ByVal Amount As LongLong, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public DeclareWide PtrSafe Function SetupAdjustDiskSpaceList Lib "setupapi" Alias "SetupAdjustDiskSpaceListW" (ByVal DiskSpace As LongPtr, ByVal DriveRoot As String, ByVal Amount As LongLong, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public Declare PtrSafe Function SetupAddToDiskSpaceListA Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal TargetFilespec As String, ByVal FileSize As LongLong, ByVal Operation As SpFileOpCodes, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public Declare PtrSafe Function SetupAddToDiskSpaceListW Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal TargetFilespec As LongPtr, ByVal FileSize As LongLong, ByVal Operation As SpFileOpCodes, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public DeclareWide PtrSafe Function SetupAddToDiskSpaceList Lib "setupapi" Alias "SetupAddToDiskSpaceListW" (ByVal DiskSpace As LongPtr, ByVal TargetFilespec As String, ByVal FileSize As LongLong, ByVal Operation As SpFileOpCodes, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public Declare PtrSafe Function SetupAddSectionToDiskSpaceListA Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal InfHandle As LongPtr, ByVal ListInfHandle As LongPtr, ByVal SectionName As String, ByVal Operation As SpFileOpCodes, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public Declare PtrSafe Function SetupAddSectionToDiskSpaceListW Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal InfHandle As LongPtr, ByVal ListInfHandle As LongPtr, ByVal SectionName As LongPtr, ByVal Operation As SpFileOpCodes, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public DeclareWide PtrSafe Function SetupAddSectionToDiskSpaceList Lib "setupapi" Alias "SetupAddSectionToDiskSpaceListW" (ByVal DiskSpace As LongPtr, ByVal InfHandle As LongPtr, ByVal ListInfHandle As LongPtr, ByVal SectionName As String, ByVal Operation As SpFileOpCodes, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public Declare PtrSafe Function SetupAddInstallSectionToDiskSpaceListA Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal InfHandle As LongPtr, ByVal LayoutInfHandle As LongPtr, ByVal SectionName As String, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public Declare PtrSafe Function SetupAddInstallSectionToDiskSpaceListW Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal InfHandle As LongPtr, ByVal LayoutInfHandle As LongPtr, ByVal SectionName As LongPtr, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public DeclareWide PtrSafe Function SetupAddInstallSectionToDiskSpaceList Lib "setupapi" Alias "SetupAddInstallSectionToDiskSpaceListW" (ByVal DiskSpace As LongPtr, ByVal InfHandle As LongPtr, ByVal LayoutInfHandle As LongPtr, ByVal SectionName As String, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public Declare PtrSafe Function SetupRemoveFromDiskSpaceListA Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal TargetFilespec As String, ByVal Operation As SpFileOpCodes, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public Declare PtrSafe Function SetupRemoveFromDiskSpaceListW Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal TargetFilespec As LongPtr, ByVal Operation As SpFileOpCodes, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public DeclareWide PtrSafe Function SetupRemoveFromDiskSpaceList Lib "setupapi" Alias "SetupRemoveFromDiskSpaceListW" (ByVal DiskSpace As LongPtr, ByVal TargetFilespec As String, ByVal Operation As SpFileOpCodes, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public Declare PtrSafe Function SetupRemoveSectionFromDiskSpaceListA Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal InfHandle As LongPtr, ByVal ListInfHandle As LongPtr, ByVal SectionName As String, ByVal Operation As SpFileOpCodes, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public Declare PtrSafe Function SetupRemoveSectionFromDiskSpaceListW Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal InfHandle As LongPtr, ByVal ListInfHandle As LongPtr, ByVal SectionName As LongPtr, ByVal Operation As SpFileOpCodes, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public DeclareWide PtrSafe Function SetupRemoveSectionFromDiskSpaceList Lib "setupapi" Alias "SetupRemoveSectionFromDiskSpaceListW" (ByVal DiskSpace As LongPtr, ByVal InfHandle As LongPtr, ByVal ListInfHandle As LongPtr, ByVal SectionName As String, ByVal Operation As SpFileOpCodes, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public Declare PtrSafe Function SetupRemoveInstallSectionFromDiskSpaceListA Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal InfHandle As LongPtr, ByVal LayoutInfHandle As LongPtr, ByVal SectionName As String, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public Declare PtrSafe Function SetupRemoveInstallSectionFromDiskSpaceListW Lib "setupapi" (ByVal DiskSpace As LongPtr, ByVal InfHandle As LongPtr, ByVal LayoutInfHandle As LongPtr, ByVal SectionName As LongPtr, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL
Public DeclareWide PtrSafe Function SetupRemoveInstallSectionFromDiskSpaceList Lib "setupapi" Alias "SetupRemoveInstallSectionFromDiskSpaceListW" (ByVal DiskSpace As LongPtr, ByVal InfHandle As LongPtr, ByVal LayoutInfHandle As LongPtr, ByVal SectionName As String, ByVal Reserved1 As LongPtr, ByVal Reserved2 As Long) As BOOL


Public Declare PtrSafe Function SetupPromptReboot Lib "setupapi" (ByVal FileQueue As LongPtr, ByVal Owner As LongPtr, ByVal ScanOnly As BOOL) As Long
Public DeclareWide PtrSafe Function SetupVerifyInfFileW Lib "setupapi" (ByVal InfName As LongPtr, AltPlatformInfo As Any, InfSignerInfo As SP_INF_SIGNER_INFO_W) As BOOL
Public DeclareWide PtrSafe Function SetupVerifyInfFile Lib "setupapi" Alias "SetupVerifyInfFileW" (ByVal InfName As String, AltPlatformInfo As Any, InfSignerInfo As SP_INF_SIGNER_INFO) As BOOL
Public DeclareWide PtrSafe Function SetupGetInfInformationW Lib "setupapi" (InfSpec As Any, ByVal SearchControl As SetupInfSearchControl, ReturnBuffer As SP_INF_INFORMATION, ByVal ReturnBufferSize As Long, RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupGetInfInformation Lib "setupapi" Alias "SetupGetInfInformationW" (InfSpec As Any, ByVal SearchControl As SetupInfSearchControl, ReturnBuffer As SP_INF_INFORMATION, ByVal ReturnBufferSize As Long, RequiredSize As Long) As BOOL
[Description("For AlternatePlatformInfo, SP_ALTPLATFORM_INFO_V3 can be used on Win10 Redstone 1 and higher, otherwise use SP_ALTPLATFORM_INFO_V2 for WinXP+")]
Public DeclareWide PtrSafe Function SetupQueryInfOriginalFileInformationW Lib "setupapi" (InfInformation As SP_INF_INFORMATION, ByVal InfIndex As Long, AlternatePlatformInfo As Any, OriginalFileInfo As SP_ORIGINAL_FILE_INFO_W) As BOOL
[Description("For AlternatePlatformInfo, SP_ALTPLATFORM_INFO_V3 can be used on Win10 Redstone 1 and higher, otherwise use SP_ALTPLATFORM_INFO_V2 for WinXP+")]
Public DeclareWide PtrSafe Function SetupQueryInfOriginalFileInformation Lib "setupapi" Alias "SetupQueryInfOriginalFileInformationW" (InfInformation As SP_INF_INFORMATION, ByVal InfIndex As Long, AlternatePlatformInfo As Any, OriginalFileInfo As SP_ORIGINAL_FILE_INFO) As BOOL
Public Declare PtrSafe Function SetupQueryInfFileInformationW Lib "setupapi" (InfInformation As SP_INF_INFORMATION, ByVal InfIndex As Long, ByVal ReturnBuffer As LongPtr, ByVal ReturnBufferSize As Long, Optional ByRef RequiredSize As Long) As BOOL
Public DeclareWide PtrSafe Function SetupQueryInfFileInformation Lib "setupapi" Alias "SetupQueryInfFileInformationW" (InfInformation As SP_INF_INFORMATION, ByVal InfIndex As Long, ByVal ReturnBuffer As LongPtr, ByVal ReturnBufferSize As String, Optional ByRef RequiredSize As Long) As BOOL
Public Declare PtrSafe Function SetupOpenInfFileW Lib "setupapi" (ByVal FileName As LongPtr, ByVal InfClass As LongPtr, ByVal InfStyle As SetupInfStyles, ErrLine As Long) As LongPtr
Public DeclareWide PtrSafe Function SetupOpenInfFile Lib "setupapi" Alias "SetupOpenInfFileW" (ByVal FileName As String, ByVal InfClass As String, ByVal InfStyle As SetupInfStyles, ErrLine As Long) As LongPtr
Public Declare PtrSafe Function SetupInstallServicesFromInfSectionW Lib "setupapi" (ByVal InfHandle As LongPtr, ByVal SectionName As LongPtr, ByVal dwFlags As SetupInstallServiceFlags) As BOOL
Public DeclareWide PtrSafe Function SetupInstallServicesFromInfSection Lib "setupapi" Alias "SetupInstallServicesFromInfSectionW" (ByVal InfHandle As LongPtr, ByVal SectionName As String, ByVal dwFlags As SetupInstallServiceFlags) As BOOL
Public Declare PtrSafe Function SetupInstallServicesFromInfSectionExW Lib "setupapi" (ByVal InfHandle As LongPtr, ByVal SectionName As LongPtr, ByVal dwFlags As SetupInstallServiceFlags, ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal Reserved1 As LongPtr, ByVal Reserved2 As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetupInstallServicesFromInfSectionEx Lib "setupapi" Alias "SetupInstallServicesFromInfSectionExW" (ByVal InfHandle As LongPtr, ByVal SectionName As String, ByVal dwFlags As SetupInstallServiceFlags, ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal Reserved1 As LongPtr, ByVal Reserved2 As LongPtr) As BOOL
Public Declare PtrSafe Sub InstallHinfSectionW Lib "setupapi" (ByVal Window As LongPtr, ByVal ModuleHandle As LongPtr, ByVal CommandLine As LongPtr, ByVal ShowCommand As SHOWWINDOW)
Public DeclareWide PtrSafe Sub InstallHinfSection Lib "setupapi" Alias "InstallHinfSectionW" (ByVal Window As LongPtr, ByVal ModuleHandle As LongPtr, ByVal CommandLine As String, ByVal ShowCommand As SHOWWINDOW)

Private Type CABINET_INFO_A
    CabinetPath As String
    CabinetFile As String
    DiskName As String
    SetId As Integer
    CabinetNumber As Integer
End Type
Private Type CABINET_INFO_W
    CabinetPath As LongPtr
    CabinetFile As LongPtr
    DiskName As LongPtr
    SetId As Integer
    CabinetNumber As Integer
End Type
'Alias CABINET_INFO As CABINET_INFO_W
Private Type CABINET_INFO
    CabinetPath As LongPtr
    CabinetFile As LongPtr
    DiskName As LongPtr
    SetId As Integer
    CabinetNumber As Integer
End Type

#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Private Type FILE_IN_CABINET_INFO_A
    NameInCabinet As String
    FileSize As Long
    Win32Error As Long
    DosDate As Integer
    DosTime As Integer
    DosAttribs As Integer
    FullTargetName(0 To (MAX_PATH - 1)) As Byte
End Type
#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Private Type FILE_IN_CABINET_INFO_W
    NameInCabinet As LongPtr
    FileSize As Long
    Win32Error As Long
    DosDate As Integer
    DosTime As Integer
    DosAttribs As Integer
    FullTargetName(0 To (MAX_PATH - 1)) As Integer
End Type
#If Win64 = 0 Then
[PackingAlignment(1)]
#End If
Private Type FILE_IN_CABINET_INFO
    NameInCabinet As LongPtr
    FileSize As Long
    Win32Error As Long
    DosDate As Integer
    DosTime As Integer
    DosAttribs As Integer
    FullTargetName(0 To (MAX_PATH - 1)) As Integer
End Type


Public Enum SpFileNotifyCodes
    SPFILENOTIFY_STARTQUEUE = &H00000001
    SPFILENOTIFY_ENDQUEUE = &H00000002
    SPFILENOTIFY_STARTSUBQUEUE = &H00000003
    SPFILENOTIFY_ENDSUBQUEUE = &H00000004
    SPFILENOTIFY_STARTDELETE = &H00000005
    SPFILENOTIFY_ENDDELETE = &H00000006
    SPFILENOTIFY_DELETEERROR = &H00000007
    SPFILENOTIFY_STARTRENAME = &H00000008
    SPFILENOTIFY_ENDRENAME = &H00000009
    SPFILENOTIFY_RENAMEERROR = &H0000000a
    SPFILENOTIFY_STARTCOPY = &H0000000b
    SPFILENOTIFY_ENDCOPY = &H0000000c
    SPFILENOTIFY_COPYERROR = &H0000000d
    SPFILENOTIFY_NEEDMEDIA = &H0000000e
    SPFILENOTIFY_QUEUESCAN = &H0000000f
'  These are used with SetupIterateCabinet().
    SPFILENOTIFY_CABINETINFO = &H00000010
    SPFILENOTIFY_FILEINCABINET = &H00000011
    SPFILENOTIFY_NEEDNEWCABINET = &H00000012
    SPFILENOTIFY_FILEEXTRACTED = &H00000013
    SPFILENOTIFY_FILEOPDELAYED = &H00000014
'  These are used for backup operations
    SPFILENOTIFY_STARTBACKUP = &H00000015
    SPFILENOTIFY_BACKUPERROR = &H00000016
    SPFILENOTIFY_ENDBACKUP = &H00000017
'  Extended notification for SetupScanFileQueue(Flags=SPQ_SCAN_USE_CALLBACKEX)
    SPFILENOTIFY_QUEUESCAN_EX = &H00000018
    SPFILENOTIFY_STARTREGISTRATION = &H00000019
    SPFILENOTIFY_ENDREGISTRATION = &H00000020
'  Extended notification for SetupScanFileQueue(Flags=SPQ_SCAN_USE_CALLBACK_SIGNERINFO)
    SPFILENOTIFY_QUEUESCAN_SIGNERINFO = &H00000040
'  Copy notification. These are bit flags that may be combined.
    SPFILENOTIFY_LANGMISMATCH = &H00010000
    SPFILENOTIFY_TARGETEXISTS = &H00020000
    SPFILENOTIFY_TARGETNEWER = &H00040000
End Enum

Public Enum SpFileOpCodes
    FILEOP_COPY = 0
    FILEOP_RENAME = 1
    FILEOP_DELETE = 2
    FILEOP_BACKUP = 3
    FILEOP_ABORT = 0
    FILEOP_DOIT = 1
    FILEOP_SKIP = 2
    FILEOP_RETRY = FILEOP_DOIT
    FILEOP_NEWPATH = 4
End Enum


' typedef UINT (CALLBACK* PSP_FILE_CALLBACK_A)(
' _In_ PVOID Context,
' _In_ UINT Notification,
' _In_ UINT_PTR Param1,
' _In_ UINT_PTR Param2
' );
Public Delegate Function SpFileCallbackA (ByVal Context As LongPtr, ByVal Notification As SpFileNotifyCodes, ByVal Param1 As LongPtr, ByVal Param2 As LongPtr) As SpFileOpCodes
' typedef UINT (CALLBACK* PSP_FILE_CALLBACK_W)(
' _In_ PVOID Context,
' _In_ UINT Notification,
' _In_ UINT_PTR Param1,
' _In_ UINT_PTR Param2
' );
Public Delegate Function SpFileCallbackW (ByVal Context As LongPtr, ByVal Notification As SpFileNotifyCodes, ByVal Param1 As LongPtr, ByVal Param2 As LongPtr) As SpFileOpCodes
Public Delegate Function SpFileCallback (ByVal Context As LongPtr, ByVal Notification As SpFileNotifyCodes, ByVal Param1 As LongPtr, ByVal Param2 As LongPtr) As SpFileOpCodes

' Public Declare PtrSafe Function SetupIterateCabinetA Lib "setupapi" (ByVal CabinetFile As String, ByVal Reserved As Long, ByVal MsgHandler As SpFileCallbackA, ByVal Context As LongPtr) As BOOL
' Public Declare PtrSafe Function SetupIterateCabinetW Lib "setupapi" (ByVal CabinetFile As LongPtr, ByVal Reserved As Long, ByVal MsgHandler As SpFileCallbackW, ByVal Context As LongPtr) As BOOL
' Public DeclareWide PtrSafe Function SetupIterateCabinet Lib "setupapi" Alias "SetupIterateCabinetW" (ByVal CabinetFile As String, ByVal Reserved As Long, ByVal MsgHandler As SpFileCallback, ByVal Context As LongPtr) As BOOL
Public Declare PtrSafe Function SetupIterateCabinetA Lib "setupapi" (ByVal CabinetFile As String, ByVal Reserved As Long, ByVal MsgHandler As LongPtr, ByVal Context As LongPtr) As BOOL
Public Declare PtrSafe Function SetupIterateCabinetW Lib "setupapi" (ByVal CabinetFile As LongPtr, ByVal Reserved As Long, ByVal MsgHandler As LongPtr, ByVal Context As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetupIterateCabinet Lib "setupapi" Alias "SetupIterateCabinetW" (ByVal CabinetFile As String, ByVal Reserved As Long, ByVal MsgHandler As LongPtr, ByVal Context As LongPtr) As BOOL


Public Enum SetupInstallServiceFlags
    SPSVCINST_TAGTOFRONT = (&H00000001)
'  (AddService) **Ex API only** mark this service as the function driver for the
'  device being installed
    SPSVCINST_ASSOCSERVICE = (&H00000002)
'  (DelService) delete the associated event log entry for a service specified in
'  a DelService entry
    SPSVCINST_DELETEEVENTLOGENTRY = (&H00000004)
'  (AddService) don't overwrite display name if it already exists
    SPSVCINST_NOCLOBBER_DISPLAYNAME = (&H00000008)
'  (AddService) don't overwrite start type value if service already exists
    SPSVCINST_NOCLOBBER_STARTTYPE = (&H00000010)
'  (AddService) don't overwrite error control value if service already exists
    SPSVCINST_NOCLOBBER_ERRORCONTROL = (&H00000020)
'  (AddService) don't overwrite load order group if it already exists
    SPSVCINST_NOCLOBBER_LOADORDERGROUP = (&H00000040)
'  (AddService) don't overwrite dependencies list if it already exists
    SPSVCINST_NOCLOBBER_DEPENDENCIES = (&H00000080)
'  (AddService) don't overwrite description if it already exists
    SPSVCINST_NOCLOBBER_DESCRIPTION = (&H00000100)
'  (DelService) stop the associated service specified in
'  a DelService entry before deleting the service
    SPSVCINST_STOPSERVICE = (&H00000200)
' #if _SETUPAPI_VER >= _WIN32_WINNT_WINXP
'  (AddService) force overwrite of security settings
    SPSVCINST_CLOBBER_SECURITY = (&H00000400)
' #endif // _SETUPAPI_VER >= _WIN32_WINNT_WINXP
' #if _SETUPAPI_VER >= _WIN32_WINNT_LONGHORN
'  (Start Service) start a service manually after install
    SPSVCINST_STARTSERVICE = (&H00000800)
' #endif // _SETUPAPI_VER >= _WIN32_WINNT_LONGHORN
' #if _SETUPAPI_VER >= _WIN32_WINNT_WIN7
'  (AddService) don't overwrite required privileges list if it already exists
    SPSVCINST_NOCLOBBER_REQUIREDPRIVILEGES = (&H00001000)
' #endif // _SETUPAPI_VER >= _WIN32_WINNT_WIN7
' #if _SETUPAPI_VER >= _WIN32_WINNT_WIN10
'  (AddService) don't overwrite triggers if they already exist
    SPSVCINST_NOCLOBBER_TRIGGERS = (&H00002000)
'  (AddService) don't overwrite service SID type if it already exists
    SPSVCINST_NOCLOBBER_SERVICESIDTYPE = (&H00004000)
'  (AddService) don't overwrite delayed auto start if it already exists
    SPSVCINST_NOCLOBBER_DELAYEDAUTOSTART = (&H00008000&)
'  (AddService) create service with a unique name
    SPSVCINST_UNIQUE_NAME = (&H00010000)
'  (AddService) don't overwrite failure actions if they already exist
    SPSVCINST_NOCLOBBER_FAILUREACTIONS = (&H00020000)
End Enum


'newdev.h, 100% coverage
Public Enum NewDevUpdatePnpFlags
    INSTALLFLAG_FORCE = &H00000001  ' Force the installation of the specified driver
    INSTALLFLAG_READONLY = &H00000002  ' Do a read-only install (no file copy)
    INSTALLFLAG_NONINTERACTIVE = &H00000004  ' No UI shown at all. API will fail if any UI must be shown.
    INSTALLFLAG_BITS = &H00000007
End Enum

Public Enum NewDevInstallFlags
    DIIDFLAG_SHOWSEARCHUI = &H00000001  ' Show search UI if no drivers can be found.
    DIIDFLAG_NOFINISHINSTALLUI = &H00000002  ' Do NOT show the finish install UI.
    DIIDFLAG_INSTALLNULLDRIVER = &H00000004  ' Install the NULL driver on this device.
    DIIDFLAG_INSTALLCOPYINFDRIVERS = &H00000008  ' Install any extra INFs specified via CopyInf directive.
    DIIDFLAG_BITS = &H0000000F
End Enum

Public Enum NewDevDrvInstallFlags
    DIIRFLAG_INF_ALREADY_COPIED = &H00000001  ' Don't copy inf, it has been published
    DIIRFLAG_FORCE_INF = &H00000002  ' use the inf as if users picked it.
    DIIRFLAG_HW_USING_THE_INF = &H00000004  ' limit installs on hw using the inf
    DIIRFLAG_HOTPATCH = &H00000008  ' Perform a hotpatch service pack install
    DIIRFLAG_NOBACKUP = &H00000010  ' install w/o backup and no rollback
' #if (WINVER >= _WIN32_WINNT_WINBLUE)
    DIIRFLAG_PRE_CONFIGURE_INF = &H00000020  ' Pre-install inf, if possible
    DIIRFLAG_INSTALL_AS_SET = &H00000040
    DIIRFLAG_BITS = (DIIRFLAG_FORCE_INF Or DIIRFLAG_HOTPATCH Or DIIRFLAG_PRE_CONFIGURE_INF Or DIIRFLAG_INSTALL_AS_SET)
    DIIRFLAG_SYSTEM_BITS = (DIIRFLAG_INF_ALREADY_COPIED Or DIIRFLAG_FORCE_INF Or DIIRFLAG_HW_USING_THE_INF Or DIIRFLAG_HOTPATCH Or DIIRFLAG_NOBACKUP Or DIIRFLAG_PRE_CONFIGURE_INF Or DIIRFLAG_INSTALL_AS_SET)
' #endif
End Enum

Public Enum NewDevUninstFlags
    DIURFLAG_NO_REMOVE_INF = (&H00000001)  ' Do not remove inf from the system
    DIURFLAG_RESERVED = (&H00000002)  ' DIURFLAG_UNCONFIGURE_INF is obsolete.
    DIURFLAG_VALID = (DIURFLAG_NO_REMOVE_INF Or DIURFLAG_RESERVED)
End Enum

Public Enum NewDevRollbackFlags
    ROLLBACK_FLAG_NO_UI = &H00000001  ' don't show any UI (this could cause failures if UI must be displayed)
    ROLLBACK_BITS = &H00000001
End Enum


Public Declare PtrSafe Function UpdateDriverForPlugAndPlayDevicesA Lib "newdev" (ByVal hwndParent As LongPtr, ByVal HardwareId As String, ByVal FullInfPath As String, ByVal InstallFlags As NewDevUpdatePnpFlags, bRebootRequired As BOOL) As BOOL
Public Declare PtrSafe Function UpdateDriverForPlugAndPlayDevicesW Lib "newdev" (ByVal hwndParent As LongPtr, ByVal HardwareId As LongPtr, ByVal FullInfPath As LongPtr, ByVal InstallFlags As NewDevUpdatePnpFlags, bRebootRequired As BOOL) As BOOL
Public DeclareWide PtrSafe Function UpdateDriverForPlugAndPlayDevices Lib "newdev" Alias "UpdateDriverForPlugAndPlayDevicesW" (ByVal hwndParent As LongPtr, ByVal HardwareId As String, ByVal FullInfPath As String, ByVal InstallFlags As NewDevUpdatePnpFlags, bRebootRequired As BOOL) As BOOL
Public Declare PtrSafe Function DiInstallDevice Lib "newdev" (ByVal hwndParent As LongPtr, ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, DriverInfoData As SP_DRVINFO_DATA, ByVal Flags As NewDevInstallFlags, NeedReboot As BOOL) As BOOL
Public Declare PtrSafe Function DiInstallDriverA Lib "newdev" (ByVal hwndParent As LongPtr, ByVal InfPath As String, ByVal Flags As NewDevDrvInstallFlags, NeedReboot As BOOL) As BOOL
Public Declare PtrSafe Function DiInstallDriverW Lib "newdev" (ByVal hwndParent As LongPtr, ByVal InfPath As LongPtr, ByVal Flags As NewDevDrvInstallFlags, NeedReboot As BOOL) As BOOL
Public DeclareWide PtrSafe Function DiInstallDriver Lib "newdev" Alias "DiInstallDriverW" (ByVal hwndParent As LongPtr, ByVal InfPath As String, ByVal Flags As NewDevDrvInstallFlags, NeedReboot As BOOL) As BOOL
Public Declare PtrSafe Function DiUninstallDevice Lib "newdev" (ByVal hwndParent As LongPtr, ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal Flags As Long, NeedReboot As BOOL) As BOOL
Public Declare PtrSafe Function DiUninstallDriverA Lib "newdev" (ByVal hwndParent As LongPtr, ByVal InfPath As String, ByVal Flags As NewDevUninstFlags, NeedReboot As BOOL) As BOOL
Public Declare PtrSafe Function DiUninstallDriverW Lib "newdev" (ByVal hwndParent As LongPtr, ByVal InfPath As LongPtr, ByVal Flags As NewDevUninstFlags, NeedReboot As BOOL) As BOOL
Public DeclareWide PtrSafe Function DiUninstallDriver Lib "newdev" Alias "DiUninstallDriverW" (ByVal hwndParent As LongPtr, ByVal InfPath As String, ByVal Flags As NewDevUninstFlags, NeedReboot As BOOL) As BOOL
Public Declare PtrSafe Function DiShowUpdateDevice Lib "newdev" (ByVal hwndParent As LongPtr, ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal Flags As Long, NeedReboot As BOOL) As BOOL
Public Declare PtrSafe Function DiRollbackDriver Lib "newdev" (ByVal DeviceInfoSet As LongPtr, DeviceInfoData As SP_DEVINFO_DATA, ByVal hwndParent As LongPtr, ByVal Flags As NewDevRollbackFlags, NeedReboot As BOOL) As BOOL
Public DeclareWide PtrSafe Function DiShowUpdateDriver Lib "newdev" (ByVal hwndParent As LongPtr, ByVal FilePath As String, ByVal Flags As Long, NeedReboot As BOOL) As BOOL

'cfgmgr32.h - 100% coverage
Public Enum PNP_VETO_TYPE
    PNP_VetoTypeUnknown
    PNP_VetoLegacyDevice
    PNP_VetoPendingClose
    PNP_VetoWindowsApp
    PNP_VetoWindowsService
    PNP_VetoOutstandingOpen
    PNP_VetoDevice
    PNP_VetoDriver
    PNP_VetoIllegalDeviceRequest
    PNP_VetoInsufficientPower
    PNP_VetoNonDisableable
    PNP_VetoLegacyDriver
    PNP_VetoInsufficientRights
    PNP_VetoAlreadyRemoved
End Enum

Public Enum CONFIGRET
	CR_SUCCESS = (&H00000000)
	CR_DEFAULT = (&H00000001)
	CR_OUT_OF_MEMORY = (&H00000002)
	CR_INVALID_POINTER = (&H00000003)
	CR_INVALID_FLAG = (&H00000004)
	CR_INVALID_DEVNODE = (&H00000005)
	CR_INVALID_DEVINST = CR_INVALID_DEVNODE
	CR_INVALID_RES_DES = (&H00000006)
	CR_INVALID_LOG_CONF = (&H00000007)
	CR_INVALID_ARBITRATOR = (&H00000008)
	CR_INVALID_NODELIST = (&H00000009)
	CR_DEVNODE_HAS_REQS = (&H0000000A)
	CR_DEVINST_HAS_REQS = CR_DEVNODE_HAS_REQS
	CR_INVALID_RESOURCEID = (&H0000000B)
	CR_DLVXD_NOT_FOUND = (&H0000000C)  ' WIN 95 ONLY
	CR_NO_SUCH_DEVNODE = (&H0000000D)
	CR_NO_SUCH_DEVINST = CR_NO_SUCH_DEVNODE
	CR_NO_MORE_LOG_CONF = (&H0000000E)
	CR_NO_MORE_RES_DES = (&H0000000F)
	CR_ALREADY_SUCH_DEVNODE = (&H00000010)
	CR_ALREADY_SUCH_DEVINST = CR_ALREADY_SUCH_DEVNODE
	CR_INVALID_RANGE_LIST = (&H00000011)
	CR_INVALID_RANGE = (&H00000012)
	CR_FAILURE = (&H00000013)
	CR_NO_SUCH_LOGICAL_DEV = (&H00000014)
	CR_CREATE_BLOCKED = (&H00000015)
	CR_NOT_SYSTEM_VM = (&H00000016)  ' WIN 95 ONLY
	CR_REMOVE_VETOED = (&H00000017)
	CR_APM_VETOED = (&H00000018)
	CR_INVALID_LOAD_TYPE = (&H00000019)
	CR_BUFFER_SMALL = (&H0000001A)
	CR_NO_ARBITRATOR = (&H0000001B)
	CR_NO_REGISTRY_HANDLE = (&H0000001C)
	CR_REGISTRY_ERROR = (&H0000001D)
	CR_INVALID_DEVICE_ID = (&H0000001E)
	CR_INVALID_DATA = (&H0000001F)
	CR_INVALID_API = (&H00000020)
	CR_DEVLOADER_NOT_READY = (&H00000021)
	CR_NEED_RESTART = (&H00000022)
	CR_NO_MORE_HW_PROFILES = (&H00000023)
	CR_DEVICE_NOT_THERE = (&H00000024)
	CR_NO_SUCH_VALUE = (&H00000025)
	CR_WRONG_TYPE = (&H00000026)
	CR_INVALID_PRIORITY = (&H00000027)
	CR_NOT_DISABLEABLE = (&H00000028)
	CR_FREE_RESOURCES = (&H00000029)
	CR_QUERY_VETOED = (&H0000002A)
	CR_CANT_SHARE_IRQ = (&H0000002B)
	CR_NO_DEPENDENT = (&H0000002C)
	CR_SAME_RESOURCES = (&H0000002D)
	CR_NO_SUCH_REGISTRY_KEY = (&H0000002E)
	CR_INVALID_MACHINENAME = (&H0000002F)  ' NT ONLY
	CR_REMOTE_COMM_FAILURE = (&H00000030)  ' NT ONLY
	CR_MACHINE_UNAVAILABLE = (&H00000031)  ' NT ONLY
	CR_NO_CM_SERVICES = (&H00000032)  ' NT ONLY
	CR_ACCESS_DENIED = (&H00000033)  ' NT ONLY
	CR_CALL_NOT_IMPLEMENTED = (&H00000034)
	CR_INVALID_PROPERTY = (&H00000035)
	CR_DEVICE_INTERFACE_ACTIVE = (&H00000036)
	CR_NO_SUCH_DEVICE_INTERFACE = (&H00000037)
	CR_INVALID_REFERENCE_STRING = (&H00000038)
	CR_INVALID_CONFLICT_LIST = (&H00000039)
	CR_INVALID_INDEX = (&H0000003A)
	CR_INVALID_STRUCTURE_SIZE = (&H0000003B)
End Enum

Public Enum CfgMgrProblems
	CM_PROB_NOT_CONFIGURED = (&H00000001)  ' no config for device
	CM_PROB_DEVLOADER_FAILED = (&H00000002)  ' service load failed
	CM_PROB_OUT_OF_MEMORY = (&H00000003)  ' out of memory
	CM_PROB_ENTRY_IS_WRONG_TYPE = (&H00000004)  '
	CM_PROB_LACKED_ARBITRATOR = (&H00000005)  '
	CM_PROB_BOOT_CONFIG_CONFLICT = (&H00000006)  ' boot config conflict
	CM_PROB_FAILED_FILTER = (&H00000007)  '
	CM_PROB_DEVLOADER_NOT_FOUND = (&H00000008)  ' Devloader not found
	CM_PROB_INVALID_DATA = (&H00000009)  ' Invalid ID
	CM_PROB_FAILED_START = (&H0000000A)  '
	CM_PROB_LIAR = (&H0000000B)  '
	CM_PROB_NORMAL_CONFLICT = (&H0000000C)  ' config conflict
	CM_PROB_NOT_VERIFIED = (&H0000000D)  '
	CM_PROB_NEED_RESTART = (&H0000000E)  ' requires restart
	CM_PROB_REENUMERATION = (&H0000000F)  '
	CM_PROB_PARTIAL_LOG_CONF = (&H00000010)  '
	CM_PROB_UNKNOWN_RESOURCE = (&H00000011)  ' unknown res type
	CM_PROB_REINSTALL = (&H00000012)  '
	CM_PROB_REGISTRY = (&H00000013)  '
	CM_PROB_VXDLDR = (&H00000014)  ' WINDOWS 95 ONLY
	CM_PROB_WILL_BE_REMOVED = (&H00000015)  ' devinst will remove
	CM_PROB_DISABLED = (&H00000016)  ' devinst is disabled
	CM_PROB_DEVLOADER_NOT_READY = (&H00000017)  ' Devloader not ready
	CM_PROB_DEVICE_NOT_THERE = (&H00000018)  ' device doesn't exist
	CM_PROB_MOVED = (&H00000019)  '
	CM_PROB_TOO_EARLY = (&H0000001A)  '
	CM_PROB_NO_VALID_LOG_CONF = (&H0000001B)  ' no valid log config
	CM_PROB_FAILED_INSTALL = (&H0000001C)  ' install failed
	CM_PROB_HARDWARE_DISABLED = (&H0000001D)  ' device disabled
	CM_PROB_CANT_SHARE_IRQ = (&H0000001E)  ' can't share IRQ
	CM_PROB_FAILED_ADD = (&H0000001F)  ' driver failed add
	CM_PROB_DISABLED_SERVICE = (&H00000020)  ' service's Start = 4
	CM_PROB_TRANSLATION_FAILED = (&H00000021)  ' resource translation failed
	CM_PROB_NO_SOFTCONFIG = (&H00000022)  ' no soft config
	CM_PROB_BIOS_TABLE = (&H00000023)  ' device missing in BIOS table
	CM_PROB_IRQ_TRANSLATION_FAILED = (&H00000024)  ' IRQ translator failed
	CM_PROB_FAILED_DRIVER_ENTRY = (&H00000025)  ' DriverEntry() failed.
	CM_PROB_DRIVER_FAILED_PRIOR_UNLOAD = (&H00000026)  ' Driver should have unloaded.
	CM_PROB_DRIVER_FAILED_LOAD = (&H00000027)  ' Driver load unsuccessful.
	CM_PROB_DRIVER_SERVICE_KEY_INVALID = (&H00000028)  ' Error accessing driver's service key
	CM_PROB_LEGACY_SERVICE_NO_DEVICES = (&H00000029)  ' Loaded legacy service created no devices
	CM_PROB_DUPLICATE_DEVICE = (&H0000002A)  ' Two devices were discovered with the same name
	CM_PROB_FAILED_POST_START = (&H0000002B)  ' The drivers set the device state to failed
	CM_PROB_HALTED = (&H0000002C)  ' This device was failed post start via usermode
	CM_PROB_PHANTOM = (&H0000002D)  ' The devinst currently exists only in the registry
	CM_PROB_SYSTEM_SHUTDOWN = (&H0000002E)  ' The system is shutting down
	CM_PROB_HELD_FOR_EJECT = (&H0000002F)  ' The device is offline awaiting removal
	CM_PROB_DRIVER_BLOCKED = (&H00000030)  ' One or more drivers is blocked from loading
	CM_PROB_REGISTRY_TOO_LARGE = (&H00000031)  ' System hive has grown too large
	CM_PROB_SETPROPERTIES_FAILED = (&H00000032)  ' Failed to apply one or more registry properties
	CM_PROB_WAITING_ON_DEPENDENCY = (&H00000033)  ' Device is stalled waiting on a dependency to start
	CM_PROB_UNSIGNED_DRIVER = (&H00000034)  ' Failed load driver due to unsigned image.
	CM_PROB_USED_BY_DEBUGGER = (&H00000035)  ' Device is being used by kernel debugger
	CM_PROB_DEVICE_RESET = (&H00000036)  ' Device is being reset
	CM_PROB_CONSOLE_LOCKED = (&H00000037)  ' Device is blocked while console is locked
	CM_PROB_NEED_CLASS_CONFIG = (&H00000038)  ' Device needs extended class configuration to start
	CM_PROB_GUEST_ASSIGNMENT_FAILED = (&H00000039)  ' Assignment to guest partition failed
End Enum

Public Enum CfgNumCmProbs
    NUM_CM_PROB_V1 = (&H00000025)
    NUM_CM_PROB_V2 = (&H00000032)
    NUM_CM_PROB_V3 = (&H00000033)
    NUM_CM_PROB_V4 = (&H00000034)
    NUM_CM_PROB_V5 = (&H00000035)
    NUM_CM_PROB_V6 = (&H00000036)
    NUM_CM_PROB_V7 = (&H00000037)
    NUM_CM_PROB_V8 = (&H00000039)
    NUM_CM_PROB_V9 = (&H0000003A)
End Enum

' #if (NTDDI_VERSION >= NTDDI_WIN10_VB)

' #define NUM_CM_PROB NUM_CM_PROB_V9

' #elif (NTDDI_VERSION >= NTDDI_WIN10_RS3)

' #define NUM_CM_PROB NUM_CM_PROB_V8

' #elif (NTDDI_VERSION >= NTDDI_WINTHRESHOLD)

' #define NUM_CM_PROB NUM_CM_PROB_V7

' #elif (NTDDI_VERSION >= NTDDI_WINBLUE)

' #define NUM_CM_PROB NUM_CM_PROB_V6

' #elif (NTDDI_VERSION >= NTDDI_WIN7)

' #define NUM_CM_PROB NUM_CM_PROB_V5

' #elif (NTDDI_VERSION >= NTDDI_WS08)

' #define NUM_CM_PROB NUM_CM_PROB_V4

' #elif (NTDDI_VERSION >= NTDDI_WS03)

' #define NUM_CM_PROB NUM_CM_PROB_V3

' #elif (NTDDI_VERSION >= NTDDI_WINXP)

' #define NUM_CM_PROB NUM_CM_PROB_V2

' #elif (NTDDI_VERSION >= WIN2K)

' #define NUM_CM_PROB NUM_CM_PROB_V1

' #endif



Public Enum CfgMgDevNodeStatus
	DN_ROOT_ENUMERATED = (&H00000001)  ' Was enumerated by ROOT
	DN_DRIVER_LOADED = (&H00000002)  ' Has Register_Device_Driver
	DN_ENUM_LOADED = (&H00000004)  ' Has Register_Enumerator
	DN_STARTED = (&H00000008)  ' Is currently configured
	DN_MANUAL = (&H00000010)  ' Manually installed
	DN_NEED_TO_ENUM = (&H00000020)  ' May need reenumeration
	DN_NOT_FIRST_TIME = (&H00000040)  ' Has received a config
	DN_HARDWARE_ENUM = (&H00000080)  ' Enum generates hardware ID
	DN_LIAR = (&H00000100)  ' Lied about can reconfig once
	DN_HAS_MARK = (&H00000200)  ' Not CM_Create_DevInst lately
	DN_HAS_PROBLEM = (&H00000400)  ' Need device installer
	DN_FILTERED = (&H00000800)  ' Is filtered
	DN_MOVED = (&H00001000)  ' Has been moved
	DN_DISABLEABLE = (&H00002000)  ' Can be disabled
	DN_REMOVABLE = (&H00004000)  ' Can be removed
	DN_PRIVATE_PROBLEM = (&H00008000&)  ' Has a private problem
	DN_MF_PARENT = (&H00010000)  ' Multi function parent
	DN_MF_CHILD = (&H00020000)  ' Multi function child
	DN_WILL_BE_REMOVED = (&H00040000)  ' DevInst is being removed
'  Windows 4 OPK2 Flags
	DN_NOT_FIRST_TIMEE = &H00080000  ' S: Has received a config enumerate
	DN_STOP_FREE_RES = &H00100000  ' S: When child is stopped, free resources
	DN_REBAL_CANDIDATE = &H00200000  ' S: Don't skip during rebalance
	DN_BAD_PARTIAL = &H00400000  ' S: This devnode's log_confs do not have same resources
	DN_NT_ENUMERATOR = &H00800000  ' S: This devnode's is an NT enumerator
	DN_NT_DRIVER = &H01000000  ' S: This devnode's is an NT driver
'  Windows 4.1 Flags
	DN_NEEDS_LOCKING = &H02000000  ' S: Devnode need lock resume processing
	DN_ARM_WAKEUP = &H04000000  ' S: Devnode can be the wakeup device
	DN_APM_ENUMERATOR = &H08000000  ' S: APM aware enumerator
	DN_APM_DRIVER = &H10000000  ' S: APM aware driver
	DN_SILENT_INSTALL = &H20000000  ' S: Silent install
	DN_NO_SHOW_IN_DM = &H40000000  ' S: No show in device manager
	DN_BOOT_LOG_PROB = &H80000000  ' S: Had a problem during preassignment of boot log conf
	DN_NEED_RESTART = DN_LIAR  ' System needs to be restarted for this Devnode to work properly
	DN_DRIVER_BLOCKED = DN_NOT_FIRST_TIME  ' One or more drivers are blocked from loading for this Devnode
	DN_LEGACY_DRIVER = DN_MOVED  ' This device is using a legacy driver
	DN_CHILD_WITH_INVALID_ID = DN_HAS_MARK  ' One or more children have invalid ID(s)
	DN_DEVICE_DISCONNECTED = DN_NEEDS_LOCKING  ' The function driver for a device reported that the device is not connected.  Typically this means a wireless device is out of range.
	DN_QUERY_REMOVE_PENDING = DN_MF_PARENT  ' Device is part of a set of related devices collectively pending query-removal
	DN_QUERY_REMOVE_ACTIVE = DN_MF_CHILD  ' Device is actively engaged in a query-remove IRP

    DN_CHANGEABLE_FLAGS = (DN_NOT_FIRST_TIME + DN_HARDWARE_ENUM + DN_HAS_MARK + DN_DISABLEABLE + DN_REMOVABLE + DN_MF_CHILD + DN_MF_PARENT + DN_NOT_FIRST_TIMEE + DN_STOP_FREE_RES + DN_REBAL_CANDIDATE + DN_NT_ENUMERATOR + DN_NT_DRIVER + DN_SILENT_INSTALL + DN_NO_SHOW_IN_DM)
End Enum

Public Enum CfgLcpriValues
    LCPRI_FORCECONFIG = (&H00000000)  ' Coming from a forced config
    LCPRI_BOOTCONFIG = (&H00000001)  ' Coming from a boot config
    LCPRI_DESIRED = (&H00002000)  ' Preferable (better performance)
    LCPRI_NORMAL = (&H00003000)  ' Workable (acceptable performance)
    LCPRI_LASTBESTCONFIG = (&H00003FFF)  ' CM only--do not use
    LCPRI_SUBOPTIMAL = (&H00005000)  ' Not desired, but will work
    LCPRI_LASTSOFTCONFIG = (&H00007FFF)  ' CM only--do not use
    LCPRI_RESTART = (&H00008000&)  ' Need to restart
    LCPRI_REBOOT = (&H00009000&)  ' Need to reboot
    LCPRI_POWEROFF = (&H0000A000&)  ' Need to shutdown/power-off
    LCPRI_HARDRECONFIG = (&H0000C000&)  ' Need to change a jumper
    LCPRI_HARDWIRED = (&H0000E000&)  ' Cannot be changed
    LCPRI_IMPOSSIBLE = (&H0000F000&)  ' Impossible configuration
    LCPRI_DISABLED = (&H0000FFFF&)  ' Disabled configuration
    MAX_LCPRI = (&H0000FFFF&)  ' Maximum known LC Priority
End Enum

Public Enum CfgCmDevicePanels
    CM_DEVICE_PANEL_SIDE_UNKNOWN = (&H00000000)
    CM_DEVICE_PANEL_SIDE_TOP = (&H00000001)
    CM_DEVICE_PANEL_SIDE_BOTTOM = (&H00000002)
    CM_DEVICE_PANEL_SIDE_LEFT = (&H00000003)
    CM_DEVICE_PANEL_SIDE_RIGHT = (&H00000004)
    CM_DEVICE_PANEL_SIDE_FRONT = (&H00000005)
    CM_DEVICE_PANEL_SIDE_BACK = (&H00000006)
'  Device panel edges
    CM_DEVICE_PANEL_EDGE_UNKNOWN = (&H00000000)
    CM_DEVICE_PANEL_EDGE_TOP = (&H00000001)
    CM_DEVICE_PANEL_EDGE_BOTTOM = (&H00000002)
    CM_DEVICE_PANEL_EDGE_LEFT = (&H00000003)
    CM_DEVICE_PANEL_EDGE_RIGHT = (&H00000004)
'  Device panel shapes
    CM_DEVICE_PANEL_SHAPE_UNKNOWN = (&H00000000)
    CM_DEVICE_PANEL_SHAPE_RECTANGLE = (&H00000001)
    CM_DEVICE_PANEL_SHAPE_OVAL = (&H00000002)
'  Device panel orientations
    CM_DEVICE_PANEL_ORIENTATION_HORIZONTAL = (&H00000000)
    CM_DEVICE_PANEL_ORIENTATION_VERTICAL = (&H00000001)
'  Device panel joint types
    CM_DEVICE_PANEL_JOINT_TYPE_UNKNOWN = (&H00000000)
    CM_DEVICE_PANEL_JOINT_TYPE_PLANAR = (&H00000001)
    CM_DEVICE_PANEL_JOINT_TYPE_HINGE = (&H00000002)
    CM_DEVICE_PANEL_JOINT_TYPE_PIVOT = (&H00000003)
    CM_DEVICE_PANEL_JOINT_TYPE_SWIVEL = (&H00000004)
End Enum

'cfg.h completed - 100%


Public Const MAX_DEVICE_ID_LEN = 200
Public Const MAX_DEVNODE_ID_LEN = MAX_DEVICE_ID_LEN
Public Const MAX_GUID_STRING_LEN = 39 ' 38 chars + terminator null
Public Const MAX_CONFIG_VALUE  = 9999
Public Const MAX_INSTANCE_VALUE  = 9999
Public Const MAX_MEM_REGISTERS  = 9  ' Win95 compatibility--not applicable to 32-bit ConfigMgr

Public Const MAX_IRQS  = 7  ' Win95 compatibility--not applicable to 32-bit ConfigMgr
Public Const MAX_DMA_CHANNELS  = 7  ' Win95 compatibility--not applicable to 32-bit ConfigMgr
Public Const DWORD_MAX  = &Hffffffff
Public Const DWORDLONG_MAX  = &Hffffffffffffffff
Public Const CONFIGMG_VERSION  = &H0400

Public Type CONFLICT_DETAILS_A
    CD_ulSize As Long ' size of structure, ie: sizeof(CONFLICT_DETAILS)
    CD_ulMask As CfgConflictDetailsMask ' indicates what information is required/valid
    CD_dnDevInst As Long ' filled with DevInst of conflicting device if CM_CDMASK_DEVINST set
    CD_rdResDes As LongPtr 'RES_DES ' filled with a ResDes of conflict if CM_CDMASK_RESDES set
    CD_ulFlags As CfgConflictDetailsFlags ' various flags regarding conflict
    CD_szDescription(0 To (MAX_PATH - 1)) As Byte ' description of conflicting device
End Type
Public Type CONFLICT_DETAILS_W
    CD_ulSize As Long ' size of structure, ie: sizeof(CONFLICT_DETAILS)
    CD_ulMask As CfgConflictDetailsMask ' indicates what information is required/valid
    CD_dnDevInst As Long ' filled with DevInst of conflicting device if CM_CDMASK_DEVINST set
    CD_rdResDes As LongPtr 'RES_DES ' filled with a ResDes of conflict if CM_CDMASK_RESDES set
    CD_ulFlags As CfgConflictDetailsFlags ' various flags regarding conflict
    CD_szDescription(0 To (MAX_PATH - 1)) As Integer ' description of conflicting device
End Type
'Alias CONFLICT_DETAILS As CONFLICT_DETAILS_W
Public Type CONFLICT_DETAILS
    CD_ulSize As Long ' size of structure, ie: sizeof(CONFLICT_DETAILS)
    CD_ulMask As CfgConflictDetailsMask ' indicates what information is required/valid
    CD_dnDevInst As Long ' filled with DevInst of conflicting device if CM_CDMASK_DEVINST set
    CD_rdResDes As LongPtr 'RES_DES ' filled with a ResDes of conflict if CM_CDMASK_RESDES set
    CD_ulFlags As CfgConflictDetailsFlags ' various flags regarding conflict
    CD_szDescription(0 To (MAX_PATH - 1)) As Integer ' description of conflicting device
End Type
Public Enum CfgConflictDetailsMask
    CM_CDMASK_DEVINST = (&H00000001)  ' mask to retrieve CD_dnDevInst attribute for conflict
    CM_CDMASK_RESDES = (&H00000002)  ' mask to retrieve CD_rdResDes attribute for conflict
    CM_CDMASK_FLAGS = (&H00000004)  ' mask to retrieve CD_ulFlags attribute for conflict
    CM_CDMASK_DESCRIPTION = (&H00000008)  ' mask to retrieve CD_szDescription attribute for conflict
    CM_CDMASK_VALID = (&H0000000F)  ' valid bits
End Enum
Public Enum CfgConflictDetailsFlags
    CM_CDFLAGS_DRIVER = (&H00000001)  ' CD_ulFlags: CD_szDescription reports back legacy driver name
    CM_CDFLAGS_ROOT_OWNED = (&H00000002)  ' CD_ulFlags: Root owned device
    CM_CDFLAGS_RESERVED = (&H00000004)  ' CD_ulFlags: Specified range is not available for use
End Enum

Public Enum CfgMemRangeAttribs
    mMD_MemoryType = (&H1)  ' Bitmask, whether memory is writable
    fMD_MemoryType = mMD_MemoryType  ' compatibility
    fMD_ROM = (&H0)  ' Memory range is read-only
    fMD_RAM = (&H1)  ' Memory range may be written to
    mMD_32_24 = (&H2)  ' Bitmask, memory is 24 or 32-bit
    fMD_32_24 = mMD_32_24  ' compatibility
    fMD_24 = (&H0)  ' Memory range is 24-bit
    fMD_32 = (&H2)  ' Memory range is 32-bit
    mMD_Prefetchable = (&H4)  ' Bitmask,whether memory prefetchable
    fMD_Prefetchable = mMD_Prefetchable  ' compatibility
    fMD_Pref = mMD_Prefetchable  ' compatibility
    fMD_PrefetchDisallowed = (&H0)  ' Memory range is not prefetchable
    fMD_PrefetchAllowed = (&H4)  ' Memory range is prefetchable
    mMD_Readable = (&H8)  ' Bitmask,whether memory is readable
    fMD_Readable = mMD_Readable  ' compatibility
    fMD_ReadAllowed = (&H0)  ' Memory range is readable
    fMD_ReadDisallowed = (&H8)  ' Memory range is write-only
    mMD_CombinedWrite = (&H10)  ' Bitmask,supports write-behind
    fMD_CombinedWrite = mMD_CombinedWrite  ' compatibility
    fMD_CombinedWriteDisallowed = (&H0)  ' no combined-write caching
    fMD_CombinedWriteAllowed = (&H10)  ' supports combined-write caching
    mMD_Cacheable = (&H20)  ' Bitmask,whether memory is cacheable
    fMD_NonCacheable = (&H0)  ' Memory range is non-cacheable
    fMD_Cacheable = (&H20)  ' Memory range is cacheable
    fMD_WINDOW_DECODE = (&H40)  ' Memory range is bridge window decode.
    fMD_MEMORY_BAR = (&H80)  ' Memory BAR resource.
End Enum
[PackingAlignment(1)]
Public Type MEM_RANGE
    MR_Align As LongLong ' specifies mask for base alignment
    MR_nBytes As Long ' specifies number of bytes required
    MR_Min As LongLong ' specifies minimum address of the range
    MR_Max As LongLong ' specifies maximum address of the range
    MR_Flags As CfgMemRangeAttribs ' specifies flags describing range (fMD flags)
    MR_Reserved As Long
End Type
Public Type MEM_DES
    MD_Count As Long ' number of MEM_RANGE structs in MEM_RESOURCE
    MD_Type As Long ' size (in bytes) of MEM_RANGE (MType_Range)
    MD_Alloc_Base As LongLong ' base memory address of range allocated
    MD_Alloc_End As LongLong ' end of allocated range
    MD_Flags As CfgMemRangeAttribs ' flags describing allocated range (fMD flags)
    MD_Reserved As Long
End Type
[Description("WARNING: Header only. This is followed by a variable C-style array.")]
Public Type MEM_RESOURCE
    MEM_Header As MEM_DES ' info about memory range list
    'MEM_Data(0 To (ANYSIZE_ARRAY - 1)) As MEM_RANGE ' list of memory ranges
End Type

Public Const MType_Range = &H24 '  sizeof(struct Mem_Range_s)

Public Type MEM_LARGE_RANGE
    MLR_Align As LongLong ' specifies mask for base alignment
    MLR_nBytes As LongLong ' specifies number of bytes required
    MLR_Min As LongLong ' specifies minimum address of the range
    MLR_Max As LongLong ' specifies maximum address of the range
    MLR_Flags As CfgMemRangeAttribs ' specifies flags describing range (fMD flags)
    MLR_Reserved As Long
End Type

Public Type MEM_LARGE_DES
    MLD_Count As Long ' number of LARGE_MEM_RANGE structs in LARGE_MEM_RESOURCE
    MLD_Type As Long ' size (in bytes) of MEM_RANGE (MType_Range)
    MLD_Alloc_Base As LongLong ' base memory address of range allocated
    MLD_Alloc_End As LongLong ' end of allocated range
    MLD_Flags As CfgMemRangeAttribs ' flags describing allocated range (fMD flags)
    MLD_Reserved As Long
End Type

[Description("WARNING: Header only. This is followed by a variable C-style array.")]
Public Type MEM_LARGE_RESOURCE
    MEM_Header As MEM_LARGE_DES ' info about memory range list
    'MEM_Data(0 To (ANYSIZE_ARRAY - 1)) As MEM_LARGE_RANGE ' list of memory ranges
End Type

Public Const MLType_Range = &H28 'sizeof(struct Mem_Large_Range_s)

Public Enum CfgIoPortResources
    fIOD_PortType = (&H1)  ' Bitmask,whether port is IO or memory
    fIOD_Memory = (&H0)  ' Port resource really uses memory
    fIOD_IO = (&H1)  ' Port resource uses IO ports
    fIOD_DECODE = (&H00fc)  ' decode flags
    fIOD_10_BIT_DECODE = (&H0004)
    fIOD_12_BIT_DECODE = (&H0008)
    fIOD_16_BIT_DECODE = (&H0010)
    fIOD_POSITIVE_DECODE = (&H0020)
    fIOD_PASSIVE_DECODE = (&H0040)
    fIOD_WINDOW_DECODE = (&H0080)
    fIOD_PORT_BAR = (&H0100)
'  these are for compatiblity
    IO_ALIAS_10_BIT_DECODE = (&H00000004)
    IO_ALIAS_12_BIT_DECODE = (&H00000010)
    IO_ALIAS_16_BIT_DECODE = (&H00000000)
    IO_ALIAS_POSITIVE_DECODE = (&H000000FF)
End Enum

[PackingAlignment(1)]
Public Type IO_RANGE
    IOR_Align As LongLong ' mask for base alignment
    IOR_nPorts As Long ' number of ports
    IOR_Min As LongLong ' minimum port address
    IOR_Max As LongLong ' maximum port address
    IOR_RangeFlags As CfgIoPortResources ' flags for this port range
    IOR_Alias As LongLong ' multiplier that generates aliases for port(s) 
End Type
[PackingAlignment(1)]
Public Type IO_DES
    IOD_Count As Long ' number of IO_RANGE structs in IO_RESOURCE
    IOD_Type As Long ' size (in bytes) of IO_RANGE (IOType_Range)
    IOD_Alloc_Base As LongLong ' base of allocated port range
    IOD_Alloc_End As LongLong ' end of allocated port range
    IOD_DesFlags As CfgIoPortResources ' flags relating to allocated port range
End Type
[Description("WARNING: Header only. This is followed by a variable C-style array.")]
Public Type IO_RESOURCE
    IO_Header As IO_DES ' info about I/O port range list
    'IO_Data(0 To (ANYSIZE_ARRAY - 1)) As IO_RANGE ' list of I/O port ranges
End Type
Public Const IOA_Local  = &Hff
'  Define the size of each range structure
Public Const IOType_Range  = &H28 ' sizeof(struct IO_Range_s)

Public Enum CfgDmaAttribs
    mDD_Width = (&H3)  ' Bitmask, width of the DMA channel:
    fDD_BYTE = (&H0)  '   8-bit DMA channel
    fDD_WORD = (&H1)  '   16-bit DMA channel
    fDD_DWORD = (&H2)  '   32-bit DMA channel
    fDD_BYTE_AND_WORD = (&H3)  '   8-bit and 16-bit DMA channel
    mDD_BusMaster = (&H4)  ' Bitmask, whether bus mastering is supported
    fDD_NoBusMaster = (&H0)  '   no bus mastering
    fDD_BusMaster = (&H4)  '   bus mastering
    mDD_Type = (&H18)  ' Bitmask, specifies type of DMA
    fDD_TypeStandard = (&H00)  '   standard DMA
    fDD_TypeA = (&H08)  '   Type-A DMA
    fDD_TypeB = (&H10)  '   Type-B DMA
    fDD_TypeF = (&H18)  '   Type-F DMA
End Enum
Public Type DMA_RANGE
    DR_Min As Long ' minimum DMA port in the range
    DR_Max As Long ' maximum DMA port in the range
    DR_Flags As CfgDmaAttribs ' flags describing the range (fDD flags)
End Type
Public Type DMA_DES
    DD_Count As Long ' number of DMA_RANGE structs in DMA_RESOURCE
    DD_Type As Long ' size (in bytes) of DMA_RANGE struct (DType_Range)
    DD_Flags As CfgDmaAttribs ' Flags describing DMA channel (fDD flags)
    DD_Alloc_Chan As Long ' Specifies the DMA channel that was allocated
End Type
[Description("WARNING: Header only. This is followed by a variable C-style array.")]
Public Type DMA_RESOURCE
    DMA_Header As IO_DES ' info about DMA channel range list
    'DMA_Data(0 To (ANYSIZE_ARRAY - 1)) As DMA_RANGE ' list of DMA ranges
End Type

Public Const DType_Range = &HC 'sizeof(struct DMA_Range_s)

Public Enum CfgInterruptAttribs
    mIRQD_Share = (&H1)  ' Bitmask,whether the IRQ may be shared:
    fIRQD_Exclusive = (&H0)  '   The IRQ may not be shared
    fIRQD_Share = (&H1)  '   The IRQ may be shared
    fIRQD_Share_Bit = 0  ' compatibility
    fIRQD_Level_Bit = 1  ' compatibility
'  ** NOTE: 16-bit ConfigMgr uses fIRQD_Level_Bit being set to indicate that the
'  ** interrupt is _level-sensitive_.  For 32-bit ConfigMgr, if this bit is set,
'  ** then the interrupt is _edge-sensitive_.
    mIRQD_Edge_Level = (&H2)  ' Bitmask,whether edge or level triggered:
    fIRQD_Level = (&H0)  '   The IRQ is level-sensitive
    fIRQD_Edge = (&H2)  '   The IRQ is edge-sensitive
End Enum

[Description("Note: This type respects the NT_PROCESSOR_GROUPS flag.")]
Public Type IRQ_RANGE
    IRQR_Min As Long ' minimum IRQ in the range
    IRQR_Max As Long ' maximum IRQ in the range
    #If NT_PROCESSOR_GROUPS Then
    IRQR_Flags As Integer ' flags describing the range (fIRQD flags)
    IRQR_Rsvdz As Integer ' Reserved, must be zero.
    #Else
    IRQR_Flags As CfgInterruptAttribs ' flags describing the range (fIRQD flags)
    #End If
End Type
[Description("Note: This type respects the NT_PROCESSOR_GROUPS flag.")]
Public Type IRQ_DES_32
    IRQD_Count As Long ' number of IRQ_RANGE structs in IRQ_RESOURCE
    IRQD_Type As Long ' size (in bytes) of IRQ_RANGE (IRQType_Range)
    #If NT_PROCESSOR_GROUPS Then
    IRQD_Flags As Integer ' flags describing the IRQ (fIRQD flags)
    IRQD_Group As Integer ' Group number of interrupt target.
    #Else
    IRQD_Flags As CfgInterruptAttribs ' flags describing the IRQ (fIRQD flags)
    #End If
    IRQD_Alloc_Num As Long ' specifies the IRQ that was allocated
    IRQD_Affinity As Long
End Type
[Description("Note: This type respects the NT_PROCESSOR_GROUPS flag.")]
Public Type IRQ_DES_64
    IRQD_Count As Long ' number of IRQ_RANGE structs in IRQ_RESOURCE
    IRQD_Type As Long ' size (in bytes) of IRQ_RANGE (IRQType_Range)
    #If NT_PROCESSOR_GROUPS Then
    IRQD_Flags As Integer ' flags describing the IRQ (fIRQD flags)
    IRQD_Group As Integer ' Group number of interrupt target.
    #Else
    IRQD_Flags As CfgInterruptAttribs ' flags describing the IRQ (fIRQD flags)
    #End If
    IRQD_Alloc_Num As Long ' specifies the IRQ that was allocated
    IRQD_Affinity As LongLong
End Type

#If Win64 Then
'Alias IRQ_DES As IRQ_DES_64
[Description("Note: This type respects the NT_PROCESSOR_GROUPS flag.")]
Public Type IRQ_DES
    IRQD_Count As Long ' number of IRQ_RANGE structs in IRQ_RESOURCE
    IRQD_Type As Long ' size (in bytes) of IRQ_RANGE (IRQType_Range)
    #If NT_PROCESSOR_GROUPS Then
    IRQD_Flags As Integer ' flags describing the IRQ (fIRQD flags)
    IRQD_Group As Integer ' Group number of interrupt target.
    #Else
    IRQD_Flags As CfgInterruptAttribs ' flags describing the IRQ (fIRQD flags)
    #End If
    IRQD_Alloc_Num As Long ' specifies the IRQ that was allocated
    IRQD_Affinity As LongLong
End Type
#Else
'Alias IRQ_DES As IRQ_DES_32
[Description("Note: This type respects the NT_PROCESSOR_GROUPS flag.")]
Public Type IRQ_DES
    IRQD_Count As Long ' number of IRQ_RANGE structs in IRQ_RESOURCE
    IRQD_Type As Long ' size (in bytes) of IRQ_RANGE (IRQType_Range)
    #If NT_PROCESSOR_GROUPS Then
    IRQD_Flags As Integer ' flags describing the IRQ (fIRQD flags)
    IRQD_Group As Integer ' Group number of interrupt target.
    #Else
    IRQD_Flags As CfgInterruptAttribs ' flags describing the IRQ (fIRQD flags)
    #End If
    IRQD_Alloc_Num As Long ' specifies the IRQ that was allocated
    IRQD_Affinity As Long
End Type
#End If

[Description("WARNING: Header only. This is followed by a variable C-style array.")]
Public Type IRQ_RESOURCE_32
    IRQ_Header As IRQ_DES_32 ' info about IRQ range list
    ' IRQ_Data(0 To (ANYSIZE_ARRAY - 1)) As IRQ_RANGE ' list of IRQ ranges
End Type
[Description("WARNING: Header only. This is followed by a variable C-style array.")]
Public Type IRQ_RESOURCE_64
    IRQ_Header As IRQ_DES_64 ' info about IRQ range list
    ' IRQ_Data(0 To (ANYSIZE_ARRAY - 1)) As IRQ_RANGE ' list of IRQ ranges
End Type

#If Win64 Then
'Alias IRQ_RESOURCE As IRQ_RESOURCE_64
[Description("WARNING: Header only. This is followed by a variable C-style array.")]
Public Type IRQ_RESOURCE
    IRQ_Header As IRQ_DES_64 ' info about IRQ range list
    ' IRQ_Data(0 To (ANYSIZE_ARRAY - 1)) As IRQ_RANGE ' list of IRQ ranges
End Type
#Else
'Alias IRQ_RESOURCE As IRQ_RESOURCE_32
[Description("WARNING: Header only. This is followed by a variable C-style array.")]
Public Type IRQ_RESOURCE
    IRQ_Header As IRQ_DES_32 ' info about IRQ range list
    ' IRQ_Data(0 To (ANYSIZE_ARRAY - 1)) As IRQ_RANGE ' list of IRQ ranges
End Type
#End If
 
Public Const IRQType_Range = 12
 
Public Enum CfgResourceDescWidths
    CM_RESDES_WIDTH_DEFAULT = (&H00000000)  ' 32 or 64-bit IRQ_RESOURCE / IRQ_DES, based on client
    CM_RESDES_WIDTH_32 = (&H00000001)  ' 32-bit IRQ_RESOURCE / IRQ_DES
    CM_RESDES_WIDTH_64 = (&H00000002)  ' 64-bit IRQ_RESOURCE / IRQ_DES
    CM_RESDES_WIDTH_BITS = (&H00000003)
End Enum

Public Type DEVPRIVATE_RANGE
    PR_Data1 As Long ' mask for base alignment
    PR_Data2 As Long ' number of bytes
    PR_Data3 As Long ' minimum address
End Type

Public Type DEVPRIVATE_DES
    PD_Count As Long
    PD_Type As Long
    PD_Data1 As Long
    PD_Data2 As Long
    PD_Data3 As Long
    PD_Flags As Long
End Type

[Description("WARNING: Header only. This is followed by a variable C-style array.")]
Public Type DEVPRIVATE_RESOURCE
    PRV_Header As DEVPRIVATE_DES
    'DEVPRIVATE_RANGE PRV_Data[ANYSIZE_ARRAY];
End Type

Public Const PType_Range = 12 'sizeof(struct DevPrivate_Range_s)

[Description("WARNING: Header only. This is followed by a variable C-style array.")]
Public Type CS_DES
    CSD_SignatureLength As Long
    CSD_LegacyDataOffset As Long
    CSD_LegacyDataSize As Long
    CSD_Flags As Long
    CSD_ClassGuid As UUID
    ' CSD_Signature(0 To (ANYSIZE_ARRAY - 1)) As Byte
End Type
Public Type CS_RESOURCE
    CS_Header As CS_DES
End Type

Public Enum CfgPcCardCfgResAttribs
    mPCD_IO_8_16 = (&H1)  ' Bitmask, whether I/O is 8 or 16 bits
    fPCD_IO_8 = (&H0)  ' I/O is 8-bit
    fPCD_IO_16 = (&H1)  ' I/O is 16-bit
    mPCD_MEM_8_16 = (&H2)  ' Bitmask, whether MEM is 8 or 16 bits
    fPCD_MEM_8 = (&H0)  ' MEM is 8-bit
    fPCD_MEM_16 = (&H2)  ' MEM is 16-bit
    mPCD_MEM_A_C = (&HC)  ' Bitmask, whether MEMx is Attribute or Common
    fPCD_MEM1_A = (&H4)  ' MEM1 is Attribute
    fPCD_MEM2_A = (&H8)  ' MEM2 is Attribute
    fPCD_IO_ZW_8 = (&H10)  ' zero wait on 8 bit I/O
    fPCD_IO_SRC_16 = (&H20)  ' iosrc 16
    fPCD_IO_WS_16 = (&H40)  ' wait states on 16 bit io
    mPCD_MEM_WS = (&H300)  ' Bitmask, for additional wait states on memory windows
    fPCD_MEM_WS_ONE = (&H100)  ' 1 wait state
    fPCD_MEM_WS_TWO = (&H200)  ' 2 wait states
    fPCD_MEM_WS_THREE = (&H300)  ' 3 wait states
' #if (WINVER >= _WIN32_WINNT_WINXP)
    fPCD_MEM_A = (&H4)  ' MEM is Attribute
    fPCD_ATTRIBUTES_PER_WINDOW = (&H8000&)
    fPCD_IO1_16 = (&H00010000)  ' I/O window 1 is 16-bit
    fPCD_IO1_ZW_8 = (&H00020000)  ' I/O window 1 zero wait on 8 bit I/O
    fPCD_IO1_SRC_16 = (&H00040000)  ' I/O window 1 iosrc 16
    fPCD_IO1_WS_16 = (&H00080000)  ' I/O window 1 wait states on 16 bit io
    fPCD_IO2_16 = (&H00100000)  ' I/O window 2 is 16-bit
    fPCD_IO2_ZW_8 = (&H00200000)  ' I/O window 2 zero wait on 8 bit I/O
    fPCD_IO2_SRC_16 = (&H00400000)  ' I/O window 2 iosrc 16
    fPCD_IO2_WS_16 = (&H00800000)  ' I/O window 2 wait states on 16 bit io
    mPCD_MEM1_WS = (&H03000000)  ' MEM window 1 Bitmask, for additional wait states on memory windows
    fPCD_MEM1_WS_ONE = (&H01000000)  ' MEM window 1, 1 wait state
    fPCD_MEM1_WS_TWO = (&H02000000)  ' MEM window 1, 2 wait states
    fPCD_MEM1_WS_THREE = (&H03000000)  ' MEM window 1, 3 wait states
    fPCD_MEM1_16 = (&H04000000)  ' MEM window 1 is 16-bit
    mPCD_MEM2_WS = (&H30000000)  ' MEM window 2 Bitmask, for additional wait states on memory windows
    fPCD_MEM2_WS_ONE = (&H10000000)  ' MEM window 2, 1 wait state
    fPCD_MEM2_WS_TWO = (&H20000000)  ' MEM window 2, 2 wait states
    fPCD_MEM2_WS_THREE = (&H30000000)  ' MEM window 2, 3 wait states
    fPCD_MEM2_16 = (&H40000000)  ' MEM window 2 is 16-bit
    PCD_MAX_MEMORY = 2
    PCD_MAX_IO = 2
End Enum

[PackingAlignment(1)]
Public Type PCCARD_DES
    PCD_Count As Long
    PCD_Type As Long
    PCD_Flags As Long
    PCD_ConfigIndex As Byte
    PCD_Reserved(0 To 2) As Byte
    PCD_MemoryCardBase1 As Long
    PCD_MemoryCardBase2 As Long
    '#if (WINVER >= _WIN32_WINNT_WINXP)
    PCD_MemoryCardBase(0 To (PCD_MAX_MEMORY - 1)) As Long ' will soon be removed
    PCD_MemoryFlags(0 To (PCD_MAX_MEMORY - 1)) As Integer ' will soon be removed
    PCD_IoFlags(0 To (PCD_MAX_IO - 1)) As Byte ' will soon be removed
    '#endif // (WINVER >= _WIN32_WINNT_WINXP)
End Type

Public Type PCCARD_RESOURCE
    PcCard_Header As PCCARD_DES
End Type

Public Enum CfgPcCardMfCfgRes
    mPMF_AUDIO_ENABLE = (&H8)  ' Bitmask, whether audio is enabled or not
    fPMF_AUDIO_ENABLE = (&H8)  ' Audio is enabled
End Enum

Public Type MFCARD_DES
    PMF_Count As Long
    PMF_Type As Long
    PMF_Flags As Long
    PMF_ConfigOptions As Byte
    PMF_IoResourceIndex As Byte
    PMF_Reserved(0 To 1) As Byte
    PMF_ConfigRegisterBase As Long
End Type

Public Type MFCARD_RESOURCE
    MfCard_Header As MFCARD_DES
End Type

Public Type BUSNUMBER_RANGE
    BUSR_Min As Long ' minimum Bus Number in the range
    BUSR_Max As Long ' maximum Bus Number in the range
    BUSR_nBusNumbers As Long ' specifies number of buses required
    BUSR_Flags As Long ' flags describing the range (currently unused)
End Type

Public Type BUSNUMBER_DES
    BUSD_Count As Long ' number of BUSNUMBER_RANGE structs in BUSNUMBER_RESOURCE
    BUSD_Type As Long ' size (in bytes) of BUSNUMBER_RANGE (BusNumberType_Range)
    BUSD_Flags As Long ' flags describing the range (currently unused)
    BUSD_Alloc_Base As Long ' specifies the first Bus that was allocated
    BUSD_Alloc_End As Long ' specifies the last Bus number that was allocated
End Type

Public Const BusNumberType_Range = 16 '  sizeof(struct BusNumber_Range_s)

[PackingAlignment(1)]
Public Type CONNECTION_DES
    COND_Type As Long ' currently unused
    COND_Flags As Long ' flags describing the connection
    COND_Class As Byte ' class-type of connection
    COND_ClassType As Byte ' sub-type of connection class
    COND_Reserved1 As Byte ' reserved for future use
    COND_Reserved2 As Byte ' reserved for future use
    COND_Id As LARGE_INTEGER ' unique connection identifier for use by this connection
End Type

Public Type CONNECTION_RESOURCE
    Connection_Header As CONNECTION_DES ' info about Connection range list
End Type

Public Enum CfgmgrHwProfileFlags
    CM_HWPI_NOT_DOCKABLE = (&H00000000)  ' machine is not dockable
    CM_HWPI_UNDOCKED = (&H00000001)  ' hw profile for docked config
    CM_HWPI_DOCKED = (&H00000002)  ' hw profile for undocked config
End Enum
Public Type HWPROFILEINFO_A
    HWPI_ulHWProfile As Long ' handle of hw profile
    HWPI_szFriendlyName(0 To (MAX_PROFILE_LEN - 1)) As Byte ' friendly name of hw profile
    HWPI_dwFlags As CfgmgrHwProfileFlags ' profile flags (CM_HWPI_*)
End Type
Public Type HWPROFILEINFO_W
    HWPI_ulHWProfile As Long ' handle of hw profile
    HWPI_szFriendlyName(0 To (MAX_PROFILE_LEN - 1)) As Integer ' friendly name of hw profile
    HWPI_dwFlags As CfgmgrHwProfileFlags ' profile flags (CM_HWPI_*)
End Type
'Alias HWPROFILEINFO As HWPROFILEINFO_W
Public Type HWPROFILEINFO
    HWPI_ulHWProfile As Long ' handle of hw profile
    HWPI_szFriendlyName(0 To (MAX_PROFILE_LEN - 1)) As Integer ' friendly name of hw profile
    HWPI_dwFlags As CfgmgrHwProfileFlags ' profile flags (CM_HWPI_*)
End Type

Public Enum CfgHwResourceTypes
    ResType_All = (&H00000000)  ' Return all resource types
    ResType_None = (&H00000000)  ' Arbitration always succeeded
    ResType_Mem = (&H00000001)  ' Physical address resource
    ResType_IO = (&H00000002)  ' Physical I/O address resource
    ResType_DMA = (&H00000003)  ' DMA channels resource
    ResType_IRQ = (&H00000004)  ' IRQ resource
    ResType_DoNotUse = (&H00000005)  ' Used as spacer to sync subsequent ResTypes w/NT
    ResType_BusNumber = (&H00000006)  ' bus number resource
    ResType_MemLarge = (&H00000007)  ' Memory resources >= 4GB
    ResType_MAX = (&H00000007)  ' Maximum known (arbitrated) ResType
    ResType_Ignored_Bit = (&H00008000&)  ' Ignore this resource
    ResType_ClassSpecific = (&H0000FFFF&)  ' class-specific resource
    ResType_Reserved = (&H00008000&)  ' reserved for internal use
    ResType_DevicePrivate = (&H00008001&)  ' device private data
    ResType_PcCardConfig = (&H00008002&)  ' PC Card configuration data
    ResType_MfCardConfig = (&H00008003&)  ' MF Card configuration data
' #if (WINVER >= _WIN32_WINNT_WIN8)
    ResType_Connection = (&H00008004&)  ' Connection (Resource Hub) resource
End Enum

Public Enum CfgAddRangeFlags
    CM_ADD_RANGE_ADDIFCONFLICT = (&H00000000)  ' merg with conflicting range
    CM_ADD_RANGE_DONOTADDIFCONFLICT = (&H00000001)  ' error if range conflicts
    CM_ADD_RANGE_BITS = (&H00000001)
End Enum

Public Enum CfgLogicalConfigFlags
    BASIC_LOG_CONF = &H00000000  ' Specifies the req list.
    FILTERED_LOG_CONF = &H00000001  ' Specifies the filtered req list.
    ALLOC_LOG_CONF = &H00000002  ' Specifies the Alloc Element.
    BOOT_LOG_CONF = &H00000003  ' Specifies the RM Alloc Element.
    FORCED_LOG_CONF = &H00000004  ' Specifies the Forced Log Conf
    OVERRIDE_LOG_CONF = &H00000005  ' Specifies the Override req list.
    NUM_LOG_CONF = &H00000006  ' Number of Log Conf type
    LOG_CONF_BITS = &H00000007  ' The bits of the log conf type.
    PRIORITY_EQUAL_FIRST = (&H00000008)  ' Same priority, new one first
    PRIORITY_EQUAL_LAST = (&H00000000)  ' Same priority, new one last
    PRIORITY_BIT = (&H00000008)
End Enum

Public Enum REGDISPOSITION
    RegDisposition_OpenAlways = (&H00000000)  ' open if exists else create
    RegDisposition_OpenExisting = (&H00000001)  ' open key only if exists
    RegDisposition_Bits = (&H00000001)
End Enum

Public Enum CfgAddIdFlags
    CM_ADD_ID_HARDWARE = (&H00000000)
    CM_ADD_ID_COMPATIBLE = (&H00000001)
    CM_ADD_ID_BITS = (&H00000001)
End Enum

Public Enum CfgCreateDevNodeFlags
    CM_CREATE_DEVNODE_NORMAL = (&H00000000)  ' install later
    CM_CREATE_DEVNODE_NO_WAIT_INSTALL = (&H00000001)  ' NOT SUPPORTED ON NT
    CM_CREATE_DEVNODE_PHANTOM = (&H00000002)
    CM_CREATE_DEVNODE_GENERATE_ID = (&H00000004)
    CM_CREATE_DEVNODE_DO_NOT_INSTALL = (&H00000008)
    CM_CREATE_DEVNODE_BITS = (&H0000000F)
    CM_CREATE_DEVINST_NORMAL = CM_CREATE_DEVNODE_NORMAL
    CM_CREATE_DEVINST_NO_WAIT_INSTALL = CM_CREATE_DEVNODE_NO_WAIT_INSTALL
    CM_CREATE_DEVINST_PHANTOM = CM_CREATE_DEVNODE_PHANTOM
    CM_CREATE_DEVINST_GENERATE_ID = CM_CREATE_DEVNODE_GENERATE_ID
    CM_CREATE_DEVINST_DO_NOT_INSTALL = CM_CREATE_DEVNODE_DO_NOT_INSTALL
    CM_CREATE_DEVINST_BITS = CM_CREATE_DEVNODE_BITS
End Enum

Public Enum CfgDeleteClassKeyFlags
    CM_DELETE_CLASS_ONLY = (&H00000000)
    CM_DELETE_CLASS_SUBKEYS = (&H00000001)
' #if (WINVER >= _WIN32_WINNT_LONGHORN)
    CM_DELETE_CLASS_INTERFACE = (&H00000002)
 
    CM_DELETE_CLASS_BITS = (&H00000003)
End Enum

Public Enum CfgEnumClassesFlags
    CM_ENUMERATE_CLASSES_INSTALLER = (&H00000000)
    CM_ENUMERATE_CLASSES_INTERFACE = (&H00000001)
    CM_ENUMERATE_CLASSES_BITS = (&H00000001)
End Enum

Public Enum CfgHwDetectionFlags
    CM_DETECT_NEW_PROFILE = (&H00000001)  ' detection for new hw profile
    CM_DETECT_CRASHED = (&H00000002)  ' Previous detection crashed
    CM_DETECT_HWPROF_FIRST_BOOT = (&H00000004)
    CM_DETECT_RUN = (&H80000000)
    CM_DETECT_BITS = (&H80000007)
End Enum

Public Enum CmDisableDNFlags
    CM_DISABLE_POLITE = (&H00000000)  ' Ask the driver
    CM_DISABLE_ABSOLUTE = (&H00000001)  ' Don't ask the driver
    CM_DISABLE_HARDWARE = (&H00000002)  ' Don't ask the driver, and won't be restarteable
    CM_DISABLE_UI_NOT_OK = (&H00000004)  ' Don't popup any veto API
    CM_DISABLE_PERSIST = (&H00000008)  ' Persists through restart by setting CONFIGFLAG_DISABLED in the registry
    CM_DISABLE_BITS = (&H0000000F)  ' The bits for the disable function
End Enum

Public Enum CmGetIdListFlags
    CM_GETIDLIST_FILTER_NONE = (&H00000000)
    CM_GETIDLIST_FILTER_ENUMERATOR = (&H00000001)
    CM_GETIDLIST_FILTER_SERVICE = (&H00000002)
    CM_GETIDLIST_FILTER_EJECTRELATIONS = (&H00000004)
    CM_GETIDLIST_FILTER_REMOVALRELATIONS = (&H00000008)
    CM_GETIDLIST_FILTER_POWERRELATIONS = (&H00000010)
    CM_GETIDLIST_FILTER_BUSRELATIONS = (&H00000020)
    CM_GETIDLIST_DONOTGENERATE = (&H10000040)
' #if (WINVER <= _WIN32_WINNT_LONGHORN)
    CM_GETIDLIST_FILTER_BITS_VISTA = (&H1000007F)
' #endif // (WINVER <= _WIN32_WINNT_LONGHORN)
' #if (WINVER >= _WIN32_WINNT_WIN7)
    CM_GETIDLIST_FILTER_TRANSPORTRELATIONS = (&H00000080)
    CM_GETIDLIST_FILTER_PRESENT = (&H00000100)
    CM_GETIDLIST_FILTER_CLASS = (&H00000200)
    CM_GETIDLIST_FILTER_BITS = (&H100003FF)
End Enum

Public Enum CmGetDevInterfaceFlags
    CM_GET_DEVICE_INTERFACE_LIST_PRESENT = (&H00000000)  ' only currently 'live' device interfaces
    CM_GET_DEVICE_INTERFACE_LIST_ALL_DEVICES = (&H00000001)  ' all registered device interfaces, live or not
    CM_GET_DEVICE_INTERFACE_LIST_BITS = (&H00000001)
End Enum

Public Enum ConfigMgrRegistryProps
    CM_DRP_DEVICEDESC = (&H00000001)  ' DeviceDesc REG_SZ property (RW)
    CM_DRP_HARDWAREID = (&H00000002)  ' HardwareID REG_MULTI_SZ property (RW)
    CM_DRP_COMPATIBLEIDS = (&H00000003)  ' CompatibleIDs REG_MULTI_SZ property (RW)
    CM_DRP_UNUSED0 = (&H00000004)  ' unused
    CM_DRP_SERVICE = (&H00000005)  ' Service REG_SZ property (RW)
    CM_DRP_UNUSED1 = (&H00000006)  ' unused
    CM_DRP_UNUSED2 = (&H00000007)  ' unused
    CM_DRP_CLASS = (&H00000008)  ' Class REG_SZ property (RW)
    CM_DRP_CLASSGUID = (&H00000009)  ' ClassGUID REG_SZ property (RW)
    CM_DRP_DRIVER = (&H0000000A)  ' Driver REG_SZ property (RW)
    CM_DRP_CONFIGFLAGS = (&H0000000B)  ' ConfigFlags REG_DWORD property (RW)
    CM_DRP_MFG = (&H0000000C)  ' Mfg REG_SZ property (RW)
    CM_DRP_FRIENDLYNAME = (&H0000000D)  ' FriendlyName REG_SZ property (RW)
    CM_DRP_LOCATION_INFORMATION = (&H0000000E)  ' LocationInformation REG_SZ property (RW)
    CM_DRP_PHYSICAL_DEVICE_OBJECT_NAME = (&H0000000F)  ' PhysicalDeviceObjectName REG_SZ property (R)
    CM_DRP_CAPABILITIES = (&H00000010)  ' Capabilities REG_DWORD property (R)
    CM_DRP_UI_NUMBER = (&H00000011)  ' UiNumber REG_DWORD property (R)
    CM_DRP_UPPERFILTERS = (&H00000012)  ' UpperFilters REG_MULTI_SZ property (RW)
' #if (WINVER >= _WIN32_WINNT_LONGHORN)
    CM_CRP_UPPERFILTERS = CM_DRP_UPPERFILTERS  ' UpperFilters REG_MULTI_SZ property (RW)
' #endif // (WINVER >= _WIN32_WINNT_LONGHORN)
    CM_DRP_LOWERFILTERS = (&H00000013)  ' LowerFilters REG_MULTI_SZ property (RW)
' #if (WINVER >= _WIN32_WINNT_LONGHORN)
    CM_CRP_LOWERFILTERS = CM_DRP_LOWERFILTERS  ' LowerFilters REG_MULTI_SZ property (RW)
' #endif // (WINVER >= _WIN32_WINNT_LONGHORN)
    CM_DRP_BUSTYPEGUID = (&H00000014)  ' Bus Type Guid, GUID, (R)
    CM_DRP_LEGACYBUSTYPE = (&H00000015)  ' Legacy bus type, INTERFACE_TYPE, (R)
    CM_DRP_BUSNUMBER = (&H00000016)  ' Bus Number, DWORD, (R)
    CM_DRP_ENUMERATOR_NAME = (&H00000017)  ' Enumerator Name REG_SZ property (R)
    CM_DRP_SECURITY = (&H00000018)  ' Security - Device override (RW)
    CM_CRP_SECURITY = CM_DRP_SECURITY  ' Class default security (RW)
    CM_DRP_SECURITY_SDS = (&H00000019)  ' Security - Device override (RW)
    CM_CRP_SECURITY_SDS = CM_DRP_SECURITY_SDS  ' Class default security (RW)
    CM_DRP_DEVTYPE = (&H0000001A)  ' Device Type - Device override (RW)
    CM_CRP_DEVTYPE = CM_DRP_DEVTYPE  ' Class default Device-type (RW)
    CM_DRP_EXCLUSIVE = (&H0000001B)  ' Exclusivity - Device override (RW)
    CM_CRP_EXCLUSIVE = CM_DRP_EXCLUSIVE  ' Class default (RW)
    CM_DRP_CHARACTERISTICS = (&H0000001C)  ' Characteristics - Device Override (RW)
    CM_CRP_CHARACTERISTICS = CM_DRP_CHARACTERISTICS  ' Class default (RW)
    CM_DRP_ADDRESS = (&H0000001D)  ' Device Address (R)
    CM_DRP_UI_NUMBER_DESC_FORMAT = (&H0000001E)  ' UINumberDescFormat REG_SZ property (RW)
' #if (WINVER >= _WIN32_WINNT_WINXP)
    CM_DRP_DEVICE_POWER_DATA = (&H0000001F)  ' CM_POWER_DATA REG_BINARY property (R)
    CM_DRP_REMOVAL_POLICY = (&H00000020)  ' CM_DEVICE_REMOVAL_POLICY REG_DWORD (R)
    CM_DRP_REMOVAL_POLICY_HW_DEFAULT = (&H00000021)  ' CM_DRP_REMOVAL_POLICY_HW_DEFAULT REG_DWORD (R)
    CM_DRP_REMOVAL_POLICY_OVERRIDE = (&H00000022)  ' CM_DRP_REMOVAL_POLICY_OVERRIDE REG_DWORD (RW)
    CM_DRP_INSTALL_STATE = (&H00000023)  ' CM_DRP_INSTALL_STATE REG_DWORD (R)
' #endif // (WINVER >= _WIN32_WINNT_WINXP)
' #if (WINVER >= _WIN32_WINNT_WS03)
    CM_DRP_LOCATION_PATHS = (&H00000024)  ' CM_DRP_LOCATION_PATHS REG_MULTI_SZ (R)
' #endif // (WINVER >= _WIN32_WINNT_WS03)
' #if (WINVER >= _WIN32_WINNT_WIN7)
    CM_DRP_BASE_CONTAINERID = (&H00000025)  ' Base ContainerID REG_SZ property (R)
' #endif // (WINVER >= _WIN32_WINNT_WIN7)
    CM_DRP_MIN = (&H00000001)  ' First device register
    CM_CRP_MIN = CM_DRP_MIN  ' First class register
    CM_DRP_MAX = (&H00000025)  ' Last device register
    CM_CRP_MAX = CM_DRP_MAX  ' Last class register
End Enum

Public Enum SetupDevCap
    CM_DEVCAP_LOCKSUPPORTED = (&H00000001)
    CM_DEVCAP_EJECTSUPPORTED = (&H00000002)
    CM_DEVCAP_REMOVABLE = (&H00000004)
    CM_DEVCAP_DOCKDEVICE = (&H00000008)
    CM_DEVCAP_UNIQUEID = (&H00000010)
    CM_DEVCAP_SILENTINSTALL = (&H00000020)
    CM_DEVCAP_RAWDEVICEOK = (&H00000040)
    CM_DEVCAP_SURPRISEREMOVALOK = (&H00000080)
    CM_DEVCAP_HARDWAREDISABLED = (&H00000100)
    CM_DEVCAP_NONDYNAMIC = (&H00000200)
    CM_DEVCAP_SECUREDEVICE = (&H00000400)
End Enum

Public Enum ConfigMgRemovalPolicies
    CM_REMOVAL_POLICY_EXPECT_NO_REMOVAL = 1
    CM_REMOVAL_POLICY_EXPECT_ORDERLY_REMOVAL = 2
    CM_REMOVAL_POLICY_EXPECT_SURPRISE_REMOVAL = 3
End Enum

Public Enum ConfigMgInstallState
    CM_INSTALL_STATE_INSTALLED = 0
    CM_INSTALL_STATE_NEEDS_REINSTALL = 1
    CM_INSTALL_STATE_FAILED_INSTALL = 2
    CM_INSTALL_STATE_FINISH_INSTALL = 3
End Enum

Public Enum CfgmgrLocateDevnodeFlags
    CM_LOCATE_DEVNODE_NORMAL = &H00000000
    CM_LOCATE_DEVNODE_PHANTOM = &H00000001
    CM_LOCATE_DEVNODE_CANCELREMOVE = &H00000002
    CM_LOCATE_DEVNODE_NOVALIDATION = &H00000004
    CM_LOCATE_DEVNODE_BITS = &H00000007
    CM_LOCATE_DEVINST_NORMAL = CM_LOCATE_DEVNODE_NORMAL
    CM_LOCATE_DEVINST_PHANTOM = CM_LOCATE_DEVNODE_PHANTOM
    CM_LOCATE_DEVINST_CANCELREMOVE = CM_LOCATE_DEVNODE_CANCELREMOVE
    CM_LOCATE_DEVINST_NOVALIDATION = CM_LOCATE_DEVNODE_NOVALIDATION
    CM_LOCATE_DEVINST_BITS = CM_LOCATE_DEVNODE_BITS
End Enum

Public Enum CmOpenClassKeyFlags
    CM_OPEN_CLASS_KEY_INSTALLER = (&H00000000)
    CM_OPEN_CLASS_KEY_INTERFACE = (&H00000001)
    CM_OPEN_CLASS_KEY_BITS = (&H00000001)
End Enum

Public Enum ConfigMgrRemoveSubtreeFlags
    CM_REMOVE_UI_OK = &H00000000
    CM_REMOVE_UI_NOT_OK = &H00000001
    CM_REMOVE_NO_RESTART = &H00000002
    'Windows 10
    CM_REMOVE_DISABLE = &H00000004
    CM_REMOVE_BITS = &H00000007
'  Backward compatibility--do not use
'  (use above CM_REMOVE_* flags instead)
    CM_QUERY_REMOVE_UI_OK = (CM_REMOVE_UI_OK)
    CM_QUERY_REMOVE_UI_NOT_OK = (CM_REMOVE_UI_NOT_OK)
    CM_QUERY_REMOVE_BITS = (CM_QUERY_REMOVE_UI_OK Or CM_QUERY_REMOVE_UI_NOT_OK)
End Enum

Public Enum CfgMgrReEnumFlags
    CM_REENUMERATE_NORMAL = &H00000000
    CM_REENUMERATE_SYNCHRONOUS = &H00000001
' #if (WINVER >= _WIN32_WINNT_WINXP)
    CM_REENUMERATE_RETRY_INSTALLATION = &H00000002
    CM_REENUMERATE_ASYNCHRONOUS = &H00000004
' #endif // (WINVER >= _WIN32_WINNT_WINXP)
    CM_REENUMERATE_BITS = &H00000007
End Enum

Public Enum CmRegisterDeviceDriverFlags
    CM_REGISTER_DEVICE_DRIVER_STATIC = (&H00000000)
    CM_REGISTER_DEVICE_DRIVER_DISABLEABLE = (&H00000001)
    CM_REGISTER_DEVICE_DRIVER_REMOVABLE = (&H00000002)
    CM_REGISTER_DEVICE_DRIVER_BITS = (&H00000003)
End Enum

Public Enum CmRegistryBranchLocations
    CM_REGISTRY_HARDWARE = (&H00000000)
    CM_REGISTRY_SOFTWARE = (&H00000001)
    CM_REGISTRY_USER = (&H00000100)
    CM_REGISTRY_CONFIG = (&H00000200)
    CM_REGISTRY_BITS = (&H00000301)
End Enum

Public Enum CfgmgrSetProblemFlags
    CM_SET_DEVNODE_PROBLEM_NORMAL = (&H00000000)  ' only set problem if currently no problem
    CM_SET_DEVNODE_PROBLEM_OVERRIDE = (&H00000001)  ' override current problem with new problem
    CM_SET_DEVNODE_PROBLEM_BITS = (&H00000001)
    CM_SET_DEVINST_PROBLEM_NORMAL = CM_SET_DEVNODE_PROBLEM_NORMAL
    CM_SET_DEVINST_PROBLEM_OVERRIDE = CM_SET_DEVNODE_PROBLEM_OVERRIDE
    CM_SET_DEVINST_PROBLEM_BITS = CM_SET_DEVNODE_PROBLEM_BITS
End Enum

Public Enum CmSetHwProfFlags
    CM_SET_HW_PROF_FLAGS_UI_NOT_OK = (&H00000001)  ' Don't popup any veto UI
    CM_SET_HW_PROF_FLAGS_BITS = (&H00000001)
End Enum

Public Enum CmEnableAndConfigActions
    CM_SETUP_DEVNODE_READY = (&H00000000)  ' Reenable problem devinst
    CM_SETUP_DEVINST_READY = CM_SETUP_DEVNODE_READY
    CM_SETUP_DOWNLOAD = (&H00000001)  ' Get info about devinst
    CM_SETUP_WRITE_LOG_CONFS = (&H00000002)
    CM_SETUP_PROP_CHANGE = (&H00000003)
' #if (WINVER >= _WIN32_WINNT_WINXP)
    CM_SETUP_DEVNODE_RESET = (&H00000004)  ' Reset problem devinst without starting
    CM_SETUP_DEVINST_RESET = CM_SETUP_DEVNODE_RESET
' #endif // (WINVER >= _WIN32_WINNT_WINXP)
' #if (WINVER >= _WIN32_WINNT_WIN8)
    CM_SETUP_DEVNODE_CONFIG = (&H00000005)  ' Configure devinst without (re)starting
    CM_SETUP_DEVINST_CONFIG = CM_SETUP_DEVNODE_CONFIG
    CM_SETUP_DEVNODE_CONFIG_CLASS = (&H00000006)  ' Configure devinst class without (re)starting
    CM_SETUP_DEVINST_CONFIG_CLASS = CM_SETUP_DEVNODE_CONFIG_CLASS
' #endif // (WINVER >= _WIN32_WINNT_WIN8)
' #if (WINVER >= _WIN32_WINNT_WINBLUE)
    CM_SETUP_DEVNODE_CONFIG_EXTENSIONS = (&H00000007)  ' Configure devinst extensions without (re)starting
    CM_SETUP_DEVINST_CONFIG_EXTENSIONS = CM_SETUP_DEVNODE_CONFIG_EXTENSIONS
' #endif // (WINVER >= _WIN32_WINNT_WINBLUE)
' #if (WINVER >= _WIN32_WINNT_WINTHRESHOLD)
    CM_SETUP_DEVNODE_CONFIG_RESET = (&H00000008)  ' Reset devinst configuration without (re)starting
    CM_SETUP_DEVINST_CONFIG_RESET = CM_SETUP_DEVNODE_CONFIG_RESET
' #endif // (WINVER >= _WIN32_WINNT_WINTHRESHOLD)
    CM_SETUP_BITS = (&H0000000F)
End Enum

Public Enum CmArbitratorFlags
    CM_QUERY_ARBITRATOR_RAW = (&H00000000)
    CM_QUERY_ARBITRATOR_TRANSLATED = (&H00000001)
    CM_QUERY_ARBITRATOR_BITS = (&H00000001)
End Enum

Public Enum CmCustomDevPropFlags
    CM_CUSTOMDEVPROP_MERGE_MULTISZ = (&H00000001)
    CM_CUSTOMDEVPROP_BITS = (&H00000001)
End Enum

Public Enum CmNameAttribs
    CM_NAME_ATTRIBUTE_NAME_RETRIEVED_FROM_DEVICE = (&H1)
    CM_NAME_ATTRIBUTE_USER_ASSIGNED_NAME = (&H2)
End Enum

Public Enum CmClassPropkeyFlags
    CM_CLASS_PROPERTY_INSTALLER = (&H00000000)
    CM_CLASS_PROPERTY_INTERFACE = (&H00000001)
    CM_CLASS_PROPERTY_BITS = (&H00000001)
End Enum

Public Enum ConfigMgrNotifyFilterFlags
    CM_NOTIFY_FILTER_FLAG_ALL_INTERFACE_CLASSES = &H00000001
    CM_NOTIFY_FILTER_FLAG_ALL_DEVICE_INSTANCES = &H00000002
    CM_NOTIFY_FILTER_VALID_FLAGS = (CM_NOTIFY_FILTER_FLAG_ALL_INTERFACE_CLASSES Or CM_NOTIFY_FILTER_FLAG_ALL_DEVICE_INSTANCES)
End Enum
Public Enum CM_NOTIFY_FILTER_TYPE
    CM_NOTIFY_FILTER_TYPE_DEVICEINTERFACE = 0
    CM_NOTIFY_FILTER_TYPE_DEVICEHANDLE
    CM_NOTIFY_FILTER_TYPE_DEVICEINSTANCE
    CM_NOTIFY_FILTER_TYPE_MAX
End Enum
[Description("For convenience, an alternate with the DeviceInstance union option is provided as CM_NOTIFY_FILTER_DI.")]
Public Type CM_NOTIFY_FILTER
    cbSize As Long
    Flags As ConfigMgrNotifyFilterFlags
    FilterType As CM_NOTIFY_FILTER_TYPE
    Reserved As Long
    ' union {
        ' struct {
            ' GUID    ClassGuid;
        ' } DeviceInterface;

        ' struct {
            ' HANDLE  hTarget;
        ' } DeviceHandle;

        ' struct {
            ' WCHAR   InstanceId[MAX_DEVICE_ID_LEN];
        ' } DeviceInstance;

    ' } u;
    u(399) As Byte
End Type
Public Type CM_NOTIFY_FILTER_DI
    cbSize As Long
    Flags As ConfigMgrNotifyFilterFlags
    FilterType As CM_NOTIFY_FILTER_TYPE
    Reserved As Long
    ' union {
        ' struct {
            ' GUID    ClassGuid;
        ' } DeviceInterface;

        ' struct {
            ' HANDLE  hTarget;
        ' } DeviceHandle;

        ' struct {
            ' WCHAR   InstanceId[MAX_DEVICE_ID_LEN];
        ' } DeviceInstance;

    ' } u;
    InstanceId(0 To (MAX_DEVICE_ID_LEN - 1)) As Integer
End Type

Public Enum CM_NOTIFY_ACTION
    /* Filter type: CM_NOTIFY_FILTER_TYPE_DEVICEINTERFACE */
    CM_NOTIFY_ACTION_DEVICEINTERFACEARRIVAL = 0
    CM_NOTIFY_ACTION_DEVICEINTERFACEREMOVAL
    /* Filter type: CM_NOTIFY_FILTER_TYPE_DEVICEHANDLE */
    CM_NOTIFY_ACTION_DEVICEQUERYREMOVE
    CM_NOTIFY_ACTION_DEVICEQUERYREMOVEFAILED
    CM_NOTIFY_ACTION_DEVICEREMOVEPENDING
    CM_NOTIFY_ACTION_DEVICEREMOVECOMPLETE
    CM_NOTIFY_ACTION_DEVICECUSTOMEVENT
    /* Filter type: CM_NOTIFY_FILTER_TYPE_DEVICEINSTANCE */
    CM_NOTIFY_ACTION_DEVICEINSTANCEENUMERATED
    CM_NOTIFY_ACTION_DEVICEINSTANCESTARTED
    CM_NOTIFY_ACTION_DEVICEINSTANCEREMOVED
    CM_NOTIFY_ACTION_MAX
End Enum

[Description("**WARNING:** This structure cannot be used as is. Copy the first 8 bytes, redim u to EventData - 8 elements, then copy from EventData + 8 into it.")]
Public Type CM_NOTIFY_EVENT_DATA
    FilterType As CM_NOTIFY_FILTER_TYPE
    Reserved As Long
    ' union {

        ' struct {
            ' GUID    ClassGuid;
            ' WCHAR   SymbolicLink[ANYSIZE_ARRAY];
        ' } DeviceInterface;

        ' struct {
            ' GUID    EventGuid;
            ' LONG    NameOffset;
            ' DWORD   DataSize;
            ' BYTE    Data[ANYSIZE_ARRAY];
        ' } DeviceHandle;

        ' struct {
            ' WCHAR   InstanceId[ANYSIZE_ARRAY];
        ' } DeviceInstance;

    ' } u;
    u() As Byte
End Type

' typedef __callback DWORD (CALLBACK *PCM_NOTIFY_CALLBACK)(
' _In_ HCMNOTIFICATION       hNotify,
' _In_opt_ PVOID             Context,
' _In_ CM_NOTIFY_ACTION      Action,
' _In_reads_bytes_(EventDataSize) PCM_NOTIFY_EVENT_DATA EventData,
' _In_ DWORD                 EventDataSize
' );
Public Delegate Function CmNotifyCallback (ByVal hNotify As LongPtr, ByVal Context As LongPtr, ByVal Action As CM_NOTIFY_ACTION, EventData As CM_NOTIFY_EVENT_DATA, ByVal EventDataSize As Long) As Long












Public Const POWER_SYSTEM_MAXIMUM = 7
Public Enum ConfigMgrPowerCaps
    PDCAP_D0_SUPPORTED = &H00000001
    PDCAP_D1_SUPPORTED = &H00000002
    PDCAP_D2_SUPPORTED = &H00000004
    PDCAP_D3_SUPPORTED = &H00000008
    PDCAP_WAKE_FROM_D0_SUPPORTED = &H00000010
    PDCAP_WAKE_FROM_D1_SUPPORTED = &H00000020
    PDCAP_WAKE_FROM_D2_SUPPORTED = &H00000040
    PDCAP_WAKE_FROM_D3_SUPPORTED = &H00000080
    PDCAP_WARM_EJECT_SUPPORTED = &H00000100
End Enum
Public Type CM_POWER_DATA
    PD_Size As Long
    PD_MostRecentPowerState As DEVICE_POWER_STATE
    PD_Capabilities As ConfigMgrPowerCaps
    PD_D1Latency As Long
    PD_D2Latency As Long
    PD_D3Latency As Long
    PD_PowerStateMapping(0 To (POWER_SYSTEM_MAXIMUM - 1)) As DEVICE_POWER_STATE
    PD_DeepestSystemWake As SYSTEM_POWER_STATE
End Type
 



Public Enum CfgmgrConfigFlags
    CONFIGFLAG_DISABLED = &H00000001 'Set if disabled
    CONFIGFLAG_REMOVED = &H00000002 'Set if a present hardware enum device deleted
    CONFIGFLAG_MANUAL_INSTALL = &H00000004 'Set if the devnode was manually installed
    CONFIGFLAG_IGNORE_BOOT_LC = &H00000008 'Set if skip the boot config
    CONFIGFLAG_NET_BOOT = &H00000010 'Load this devnode when in net boot
    CONFIGFLAG_REINSTALL = &H00000020 'Redo install
    CONFIGFLAG_FAILEDINSTALL = &H00000040 'Failed the install
    CONFIGFLAG_CANTSTOPACHILD = &H00000080 'Can't stop/remove a single child
    CONFIGFLAG_OKREMOVEROM = &H00000100 'Can remove even if rom.
    CONFIGFLAG_NOREMOVEEXIT = &H00000200 'Don't remove at exit.
    CONFIGFLAG_FINISH_INSTALL = &H00000400 'Complete install for devnode running 'raw'
    CONFIGFLAG_NEEDS_FORCED_CONFIG = &H00000800 'This devnode requires a forced config
End Enum

Public Enum CfgmgrCSConfigFlags
    CSCONFIGFLAG_BITS = &H00000007 'OR of below bits
    CSCONFIGFLAG_NONE = 0
    CSCONFIGFLAG_DISABLED = &H00000001 'Set if
    CSCONFIGFLAG_DO_NOT_CREATE = &H00000002 'Set if
    CSCONFIGFLAG_DO_NOT_START = &H00000004 'Set if
End Enum





Public Declare PtrSafe Function CM_Add_Empty_Log_Conf Lib "cfgmgr32" (plcLogConf As LongPtr, ByVal dnDevInst As Long, ByVal Priority As CfgLcpriValues, ByVal ulFlags As CfgLogicalConfigFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Add_Empty_Log_Conf_Ex Lib "cfgmgr32" (plcLogConf As LongPtr, ByVal dnDevInst As Long, ByVal Priority As CfgLcpriValues, ByVal ulFlags As CfgLogicalConfigFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Add_IDA Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal pszID As String, ByVal ulFlags As CfgAddIdFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Add_IDW Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal pszID As LongPtr, ByVal ulFlags As CfgAddIdFlags) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Add_ID Lib "cfgmgr32" Alias "CM_Add_IDW" (ByVal dnDevInst As Long, ByVal pszID As String, ByVal ulFlags As CfgAddIdFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Add_ID_ExA Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal pszID As String, ByVal ulFlags As CfgAddIdFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Add_ID_ExW Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal pszID As LongPtr, ByVal ulFlags As CfgAddIdFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Add_ID_Ex Lib "cfgmgr32" Alias "CM_Add_ID_ExW" (ByVal dnDevInst As Long, ByVal pszID As String, ByVal ulFlags As CfgAddIdFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Add_Range Lib "cfgmgr32" (ByVal ullStartValue As LongLong, ByVal ullEndValue As LongLong, ByVal rlh As LongPtr, ByVal ulFlags As CfgAddRangeFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Add_Res_Des Lib "cfgmgr32" (prdResDes As LongPtr, ByVal lcLogConf As LongPtr, ByVal ResourceId As CfgHwResourceTypes, ResourceData As Any, ByVal ResourceLen As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Add_Res_Des_Ex Lib "cfgmgr32" (prdResDes As LongPtr, ByVal lcLogConf As LongPtr, ByVal ResourceId As CfgHwResourceTypes, ResourceData As Any, ByVal ResourceLen As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Connect_MachineA Lib "cfgmgr32" (ByVal UNCServerName As String, phMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Connect_MachineW Lib "cfgmgr32" (ByVal UNCServerName As LongPtr, phMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Connect_Machine Lib "cfgmgr32" Alias "CM_Connect_MachineW" (ByVal UNCServerName As String, phMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Create_DevNodeA Lib "cfgmgr32" (pdnDevInst As Long, ByVal pDevicID As String, ByVal dnParent As Long, ByVal ulFlags As CfgCreateDevNodeFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Create_DevNodeW Lib "cfgmgr32" (pdnDevInst As Long, ByVal pDevicID As LongPtr, ByVal dnParent As Long, ByVal ulFlags As CfgCreateDevNodeFlags) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Create_DevNode Lib "cfgmgr32" Alias "CM_Create_DevNodeW" (pdnDevInst As Long, ByVal pDevicID As String, ByVal dnParent As Long, ByVal ulFlags As CfgCreateDevNodeFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Create_DevNode_ExA Lib "cfgmgr32" (pdnDevInst As Long, ByVal pDevicID As String, ByVal dnParent As Long, ByVal ulFlags As CfgCreateDevNodeFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Create_DevNode_ExW Lib "cfgmgr32" (pdnDevInst As Long, ByVal pDevicID As LongPtr, ByVal dnParent As Long, ByVal ulFlags As CfgCreateDevNodeFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Create_DevNode_Ex Lib "cfgmgr32" Alias "CM_Create_DevNode_ExW" (pdnDevInst As Long, ByVal pDevicID As String, ByVal dnParent As Long, ByVal ulFlags As CfgCreateDevNodeFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Create_DevInstA Lib "cfgmgr32" Alias "CM_Create_DevNodeA" (pdnDevInst As Long, ByVal pDevicID As String, ByVal dnParent As Long, ByVal ulFlags As CfgCreateDevNodeFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Create_DevInstW Lib "cfgmgr32" Alias "CM_Create_DevNodeW" (pdnDevInst As Long, ByVal pDevicID As LongPtr, ByVal dnParent As Long, ByVal ulFlags As CfgCreateDevNodeFlags) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Create_DevInst Lib "cfgmgr32" Alias "CM_Create_DevNodeW" (pdnDevInst As Long, ByVal pDevicID As String, ByVal dnParent As Long, ByVal ulFlags As CfgCreateDevNodeFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Create_DevInst_ExA Lib "cfgmgr32" Alias "CM_Create_DevNode_ExA" (pdnDevInst As Long, ByVal pDevicID As String, ByVal dnParent As Long, ByVal ulFlags As CfgCreateDevNodeFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Create_DevInst_ExW Lib "cfgmgr32" Alias "CM_Create_DevNode_ExW" (pdnDevInst As Long, ByVal pDevicID As LongPtr, ByVal dnParent As Long, ByVal ulFlags As CfgCreateDevNodeFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Create_DevInst_Ex Lib "cfgmgr32" Alias "CM_Create_DevNode_ExW" (pdnDevInst As Long, ByVal pDevicID As String, ByVal dnParent As Long, ByVal ulFlags As CfgCreateDevNodeFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Create_Range_List Lib "cfgmgr32" (prlh As LongPtr, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Delete_Class_Key Lib "cfgmgr32" (ClassGuid As UUID, ByVal ulFlags As CfgDeleteClassKeyFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Delete_Class_Key_Ex Lib "cfgmgr32" (ClassGuid As UUID, ByVal ulFlags As CfgDeleteClassKeyFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Delete_DevNode_Key Lib "cfgmgr32" (ByVal dnDevNode As Long, ByVal ulHardwareProfile As Long, ByVal ulFlags As CmRegistryBranchLocations) As CONFIGRET
Public Declare PtrSafe Function CM_Delete_DevNode_Key_Ex Lib "cfgmgr32" (ByVal dnDevNode As Long, ByVal ulHardwareProfile As Long, ByVal ulFlags As CmRegistryBranchLocations, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Delete_DevInst_Key Lib "cfgmgr32" Alias "CM_Delete_DevNode_Key" (ByVal dnDevNode As Long, ByVal ulHardwareProfile As Long, ByVal ulFlags As CmRegistryBranchLocations) As CONFIGRET
Public Declare PtrSafe Function CM_Delete_DevInst_Key_Ex Lib "cfgmgr32" Alias "CM_Delete_DevNode_Key_Ex" (ByVal dnDevNode As Long, ByVal ulHardwareProfile As Long, ByVal ulFlags As CmRegistryBranchLocations, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Delete_Range Lib "cfgmgr32" (ByVal ullStartValue As LongLong, ByVal ullEndValue As LongLong, ByVal rlh As LongPtr, ByVal ulFlags As Long) As CONFIGRET
[Description("This function is obsolete. Use CM_Query_Resource_Conflict_List instead.")]
Public DeclareWide PtrSafe Function CM_Detect_Resource_Conflict Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ResourceID As Long, ResourceData As Any, ByVal ResourceLen As Long, pbConflictDetected As BOOL, ByVal ulFlags As CfgResourceDescWidths) As CONFIGRET
[Description("This function is obsolete. Use CM_Query_Resource_Conflict_List instead.")]
Public DeclareWide PtrSafe Function CM_Detect_Resource_Conflict_Ex Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ResourceID As Long, ResourceData As Any, ByVal ResourceLen As Long, pbConflictDetected As BOOL, ByVal ulFlags As CfgResourceDescWidths, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Disable_DevNode Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulFlags As CmDisableDNFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Disable_DevNode_Ex Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulFlags As CmDisableDNFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Disable_DevInst Lib "cfgmgr32" Alias "CM_Disable_DevNode" (ByVal dnDevInst As Long, ByVal ulFlags As CmDisableDNFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Disable_DevInst_Ex Lib "cfgmgr32" Alias "CM_Disable_DevNode_Ex" (ByVal dnDevInst As Long, ByVal ulFlags As CmDisableDNFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Disconnect_Machine Lib "cfgmgr32" (ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Dup_Range_List Lib "cfgmgr32" (ByVal rlhOld As LongPtr, ByVal rlhNew As LongPtr, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Enable_DevNode Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Enable_DevInst Lib "cfgmgr32" Alias "CM_Enable_DevNode" (ByVal dnDevInst As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Enable_DevNode_Ex Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Enable_DevInst_Ex Lib "cfgmgr32" Alias "CM_Enable_DevNode_Ex" (ByVal dnDevInst As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Enumerate_Classes Lib "cfgmgr32" (ByVal ulClassIndex As Long, ClassGuid As UUID, ByVal ulFlags As CfgEnumClassesFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Enumerate_Classes_Ex Lib "cfgmgr32" (ByVal ulClassIndex As Long, ClassGuid As UUID, ByVal ulFlags As CfgEnumClassesFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Enumerate_EnumeratorsA Lib "cfgmgr32" (ByVal ulEnumIndex As Long, ByVal Buffer As String, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Enumerate_EnumeratorsW Lib "cfgmgr32" (ByVal ulEnumIndex As Long, ByVal Buffer As LongPtr, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Enumerate_Enumerators Lib "cfgmgr32" Alias "CM_Enumerate_EnumeratorsW" (ByVal ulEnumIndex As Long, ByVal Buffer As String, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Enumerate_Enumerators_ExA Lib "cfgmgr32" (ByVal ulEnumIndex As Long, ByVal Buffer As String, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Enumerate_Enumerators_ExW Lib "cfgmgr32" (ByVal ulEnumIndex As Long, ByVal Buffer As LongPtr, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Enumerate_Enumerators_Ex Lib "cfgmgr32" Alias "CM_Enumerate_Enumerators_ExW" (ByVal ulEnumIndex As Long, ByVal Buffer As String, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Find_Range Lib "cfgmgr32" (pullStart As LongLong, ByVal ullStart As LongLong, ByVal ulLength As Long, ByVal ullAlignment As LongLong, ByVal ullEnd As LongLong, ByVal rlh As LongPtr, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_First_Range Lib "cfgmgr32" (ByVal rlh As LongPtr, pullStart As LongLong, pullEnd As LongLong, preElement As LongPtr, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Free_Log_Conf Lib "cfgmgr32" (ByVal lcLogConfToBeFreed As LongPtr, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Free_Log_Conf_Ex Lib "cfgmgr32" (ByVal lcLogConfToBeFreed As LongPtr, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Free_Log_Conf_Handle Lib "cfgmgr32" (ByVal lcLogConf As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Free_Range_List Lib "cfgmgr32" (ByVal rlh As LongPtr, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Free_Res_Des Lib "cfgmgr32" (prdResDes As LongPtr, ByVal rdResDes As LongPtr, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Free_Res_Des_Ex Lib "cfgmgr32" (prdResDes As LongPtr, ByVal rdResDes As LongPtr, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Free_Res_Des_Handle Lib "cfgmgr32" (ByVal rdResDes As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Child Lib "cfgmgr32" (pdnDevInst As Long, ByVal dnDevInst As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Child_Ex Lib "cfgmgr32" (pdnDevInst As Long, ByVal dnDevInst As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Class_NameA Lib "cfgmgr32" (ClassGuid As UUID, ByVal Buffer As String, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Class_NameW Lib "cfgmgr32" (ClassGuid As UUID, ByVal Buffer As LongPtr, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Class_Name Lib "cfgmgr32" Alias "CM_Get_Class_NameW" (ClassGuid As UUID, ByVal Buffer As String, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Class_Name_ExA Lib "cfgmgr32" (ClassGuid As UUID, ByVal Buffer As String, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Class_Name_ExW Lib "cfgmgr32" (ClassGuid As UUID, ByVal Buffer As LongPtr, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Class_Name_Ex Lib "cfgmgr32" Alias "CM_Get_Class_Name_ExW" (ClassGuid As UUID, ByVal Buffer As String, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Class_Key_NameA Lib "cfgmgr32" (ClassGuid As UUID, ByVal pszKeyName As String, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Class_Key_NameW Lib "cfgmgr32" (ClassGuid As UUID, ByVal pszKeyName As LongPtr, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Class_Key_Name Lib "cfgmgr32" Alias "CM_Get_Class_Key_NameW" (ClassGuid As UUID, ByVal pszKeyName As String, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Class_Key_Name_ExA Lib "cfgmgr32" (ClassGuid As UUID, ByVal pszKeyName As String, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Class_Key_Name_ExW Lib "cfgmgr32" (ClassGuid As UUID, ByVal pszKeyName As LongPtr, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Class_Key_Name_Ex Lib "cfgmgr32" Alias "CM_Get_Class_Key_Name_ExW" (ClassGuid As UUID, ByVal pszKeyName As String, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Depth Lib "cfgmgr32" (pulDepth As Long, ByVal dnDevInst As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Depth_Ex Lib "cfgmgr32" (pulDepth As Long, ByVal dnDevInst As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_IDA Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal Buffer As String, ByVal BufferLen As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_IDW Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal Buffer As LongPtr, ByVal BufferLen As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Device_ID Lib "cfgmgr32" Alias "CM_Get_Device_IDW" (ByVal dnDevInst As Long, ByVal Buffer As String, ByVal BufferLen As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_ID_ExA Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal Buffer As String, ByVal BufferLen As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_ID_ExW Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal Buffer As LongPtr, ByVal BufferLen As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Device_ID_Ex Lib "cfgmgr32" Alias "CM_Get_Device_ID_ExW" (ByVal dnDevInst As Long, ByVal Buffer As String, ByVal BufferLen As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_ID_ListA Lib "cfgmgr32" (ByVal pszFilter As String, ByVal Buffer As String, ByVal BufferLen As Long, ByVal ulFlags As CmGetIdListFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_ID_ListW Lib "cfgmgr32" (ByVal pszFilter As LongPtr, ByVal Buffer As LongPtr, ByVal BufferLen As Long, ByVal ulFlags As CmGetIdListFlags) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Device_ID_List Lib "cfgmgr32" Alias "CM_Get_Device_ID_ListW" (ByVal pszFilter As String, ByVal Buffer As String, ByVal BufferLen As Long, ByVal ulFlags As CmGetIdListFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_ID_List_ExA Lib "cfgmgr32" (ByVal pszFilter As String, ByVal Buffer As String, ByVal BufferLen As Long, ByVal ulFlags As CmGetIdListFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_ID_List_ExW Lib "cfgmgr32" (ByVal pszFilter As LongPtr, ByVal Buffer As LongPtr, ByVal BufferLen As Long, ByVal ulFlags As CmGetIdListFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Device_ID_List_Ex Lib "cfgmgr32" Alias "CM_Get_Device_ID_List_ExW" (ByVal pszFilter As String, ByVal Buffer As String, ByVal BufferLen As Long, ByVal ulFlags As CmGetIdListFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_ID_List_SizeA Lib "cfgmgr32" (pulLen As Long, ByVal pszFilter As String, ByVal ulFlags As CmGetIdListFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_ID_List_SizeW Lib "cfgmgr32" (pulLen As Long, ByVal pszFilter As LongPtr, ByVal ulFlags As CmGetIdListFlags) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Device_ID_List_Size Lib "cfgmgr32" Alias "CM_Get_Device_ID_List_SizeW" (pulLen As Long, ByVal pszFilter As String, ByVal ulFlags As CmGetIdListFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_ID_List_Size_ExA Lib "cfgmgr32" (pulLen As Long, ByVal pszFilter As String, ByVal ulFlags As CmGetIdListFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_ID_List_Size_ExW Lib "cfgmgr32" (pulLen As Long, ByVal pszFilter As LongPtr, ByVal ulFlags As CmGetIdListFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Device_ID_List_Size_Ex Lib "cfgmgr32" Alias "CM_Get_Device_ID_List_Size_ExW" (pulLen As Long, ByVal pszFilter As String, ByVal ulFlags As CmGetIdListFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_ID_Size Lib "cfgmgr32" (ByRef pulLen As Long, ByVal dnDevInst As Long, ByVal ulFlags As Long) As CONFIGRET
 'CM_Get_DevNode_PropertyA does not exist
Public DeclareWide PtrSafe Function CM_Get_DevNode_PropertyW Lib "cfgmgr32" (ByVal dnDevInst As Long, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, PropertyBufferSize As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevNode_Property Lib "cfgmgr32" Alias "CM_Get_DevNode_PropertyW" (ByVal dnDevInst As Long, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, PropertyBufferSize As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_DevNode_Property_ExW Lib "cfgmgr32" (ByVal dnDevInst As Long, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, PropertyBufferSize As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevNode_Property_Ex Lib "cfgmgr32" Alias "CM_Get_DevNode_Property_ExW" (ByVal dnDevInst As Long, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, PropertyBufferSize As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_DevNode_Property_Keys Lib "cfgmgr32" (ByVal dnDevInst As Long, PropertyKeyArray As PROPERTYKEY, PropertyKeyCount As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_DevNode_Property_Keys_Ex Lib "cfgmgr32" (ByVal dnDevInst As Long, PropertyKeyArray As PROPERTYKEY, PropertyKeyCount As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_DevNode_Registry_PropertyA Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevNode_Registry_PropertyW Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevNode_Registry_Property Lib "cfgmgr32" Alias "CM_Get_DevNode_Registry_PropertyW" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_DevInst_Registry_PropertyA Lib "cfgmgr32" Alias "CM_Get_DevNode_Registry_PropertyA" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevInst_Registry_PropertyW Lib "cfgmgr32" Alias "CM_Get_DevNode_Registry_PropertyW" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevInst_Registry_Property Lib "cfgmgr32" Alias "CM_Get_DevNode_Registry_PropertyW" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_DevNode_Registry_Property_ExA Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevNode_Registry_Property_ExW Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevNode_Registry_Property_Ex Lib "cfgmgr32" Alias "CM_Get_DevNode_Registry_PropertyW" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_DevInst_Registry_Property_ExA Lib "cfgmgr32" Alias "CM_Get_DevNode_Registry_Property_ExA" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevInst_Registry_Property_ExW Lib "cfgmgr32" Alias "CM_Get_DevNode_Registry_Property_ExW" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevInst_Registry_Property_Ex Lib "cfgmgr32" Alias "CM_Get_DevNode_Registry_Property_ExW" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_DevNode_Custom_PropertyA Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal pszCustomPropertyName As String, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As CmCustomDevPropFlags) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevNode_Custom_PropertyW Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal pszCustomPropertyName As LongPtr, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As CmCustomDevPropFlags) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevNode_Custom_Property Lib "cfgmgr32" Alias "CM_Get_DevNode_Custom_PropertyW" (ByVal dnDevInst As Long, ByVal pszCustomPropertyName As String, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As CmCustomDevPropFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Get_DevInst_Custom_PropertyA Lib "cfgmgr32" Alias "CM_Get_DevNode_Custom_PropertyA" (ByVal dnDevInst As Long, ByVal pszCustomPropertyName As String, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As CmCustomDevPropFlags) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevInst_Custom_PropertyW Lib "cfgmgr32" Alias "CM_Get_DevNode_Custom_PropertyW" (ByVal dnDevInst As Long, ByVal pszCustomPropertyName As LongPtr, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As CmCustomDevPropFlags) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevInst_Custom_Property Lib "cfgmgr32" Alias "CM_Get_DevNode_Custom_PropertyW" (ByVal dnDevInst As Long, ByVal pszCustomPropertyName As String, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As CmCustomDevPropFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Get_DevNode_Custom_Property_ExA Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal pszCustomPropertyName As String, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As CmCustomDevPropFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevNode_Custom_Property_ExW Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal pszCustomPropertyName As LongPtr, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As CmCustomDevPropFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevNode_Custom_Property_Ex Lib "cfgmgr32" Alias "CM_Get_DevNode_Custom_Property_ExW" (ByVal dnDevInst As Long, ByVal pszCustomPropertyName As String, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As CmCustomDevPropFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_DevInst_Custom_Property_ExA Lib "cfgmgr32" Alias "CM_Get_DevNode_Custom_Property_ExA" (ByVal dnDevInst As Long, ByVal pszCustomPropertyName As String, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As CmCustomDevPropFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevInst_Custom_Property_ExW Lib "cfgmgr32" Alias "CM_Get_DevNode_Custom_Property_ExW" (ByVal dnDevInst As Long, ByVal pszCustomPropertyName As LongPtr, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As CmCustomDevPropFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_DevInst_Custom_Property_Ex Lib "cfgmgr32" Alias "CM_Get_DevNode_Custom_Property_ExW" (ByVal dnDevInst As Long, ByVal pszCustomPropertyName As String, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As CmCustomDevPropFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_DevNode_Status Lib "cfgmgr32" (pulStatus As CfgMgDevNodeStatus, pulProblemNumber As CfgMgrProblems, ByVal dnDevInst As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_DevNode_Status_Ex Lib "cfgmgr32" (pulStatus As CfgMgDevNodeStatus, pulProblemNumber As CfgMgrProblems, ByVal dnDevInst As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_DevInst_Status Lib "cfgmgr32" Alias "CM_Get_DevNode_Status" (pulStatus As CfgMgDevNodeStatus, pulProblemNumber As CfgMgrProblems, ByVal dnDevInst As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_DevInst_Status_Ex Lib "cfgmgr32" Alias "CM_Get_DevNode_Status_Ex" (pulStatus As CfgMgDevNodeStatus, pulProblemNumber As CfgMgrProblems, ByVal dnDevInst As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_First_Log_Conf Lib "cfgmgr32" (plcLogConf As LongPtr, ByVal dnDevInst As Long, ByVal ulFlags As CfgLogicalConfigFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Get_First_Log_Conf_Ex Lib "cfgmgr32" (plcLogConf As LongPtr, ByVal dnDevInst As Long, ByVal ulFlags As CfgLogicalConfigFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Global_State Lib "cfgmgr32" (pulState As CmGlobalStates, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Global_State_Ex Lib "cfgmgr32" (pulState As CmGlobalStates, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Enum CmGlobalStates
    CM_GLOBAL_STATE_CAN_DO_UI = (&H00000001)  ' Can  do UI
    CM_GLOBAL_STATE_ON_BIG_STACK = (&H00000002)  ' Not used (reserved)
    CM_GLOBAL_STATE_SERVICES_AVAILABLE = (&H00000004)  ' CM APIs available?
    CM_GLOBAL_STATE_SHUTTING_DOWN = (&H00000008)  ' CM shutting down
    CM_GLOBAL_STATE_DETECTION_PENDING = (&H00000010)  ' Not used (reserved)
' #if (WINVER >= _WIN32_WINNT_WIN7)
    CM_GLOBAL_STATE_REBOOT_REQUIRED = (&H00000020)  ' system reboot is required
End Enum
Public Declare PtrSafe Function CM_Get_Hardware_Profile_InfoA Lib "cfgmgr32" (ByVal ulIndex As Long, pHWProfileInfo As HWPROFILEINFO_A, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Hardware_Profile_Info_ExA Lib "cfgmgr32" (ByVal ulIndex As Long, pHWProfileInfo As HWPROFILEINFO_A, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Hardware_Profile_InfoW Lib "cfgmgr32" (ByVal ulIndex As Long, pHWProfileInfo As HWPROFILEINFO_W, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Hardware_Profile_Info_ExW Lib "cfgmgr32" (ByVal ulIndex As Long, pHWProfileInfo As HWPROFILEINFO_W, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Hardware_Profile_Info Lib "cfgmgr32" Alias "CM_Get_Hardware_Profile_InfoW" (ByVal ulIndex As Long, pHWProfileInfo As HWPROFILEINFO, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Hardware_Profile_Info_Ex Lib "cfgmgr32" Alias "CM_Get_Hardware_Profile_Info_ExW" (ByVal ulIndex As Long, pHWProfileInfo As HWPROFILEINFO, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_HW_Prof_FlagsA Lib "cfgmgr32" (ByVal pDeviceID As String, ByVal ulHardwareProfile As Long, pulValue As CfgmgrCSConfigFlags, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_HW_Prof_FlagsW Lib "cfgmgr32" (ByVal pDeviceID As LongPtr, ByVal ulHardwareProfile As Long, pulValue As CfgmgrCSConfigFlags, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_HW_Prof_Flags Lib "cfgmgr32" Alias "CM_Get_HW_Prof_FlagsW" (ByVal pDeviceID As String, ByVal ulHardwareProfile As Long, pulValue As CfgmgrCSConfigFlags, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_HW_Prof_Flags_ExA Lib "cfgmgr32" (ByVal pDeviceID As String, ByVal ulHardwareProfile As Long, pulValue As CfgmgrCSConfigFlags, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_HW_Prof_Flags_ExW Lib "cfgmgr32" (ByVal pDeviceID As LongPtr, ByVal ulHardwareProfile As Long, pulValue As CfgmgrCSConfigFlags, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_HW_Prof_Flags_Ex Lib "cfgmgr32" Alias "CM_Get_HW_Prof_Flags_ExW" (ByVal pDeviceID As String, ByVal ulHardwareProfile As Long, pulValue As CfgmgrCSConfigFlags, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_Interface_AliasA Lib "cfgmgr32" (ByVal pszDeviceInterface As String, AliasInterfaceGuid As UUID, ByVal pszAliasDeviceInterface As String, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_Interface_AliasW Lib "cfgmgr32" (ByVal pszDeviceInterface As LongPtr, AliasInterfaceGuid As UUID, ByVal pszAliasDeviceInterface As LongPtr, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Device_Interface_Alias Lib "cfgmgr32" Alias "CM_Get_Device_Interface_AliasW" (ByVal pszDeviceInterface As String, AliasInterfaceGuid As UUID, ByVal pszAliasDeviceInterface As String, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_Interface_Alias_ExA Lib "cfgmgr32" (ByVal pszDeviceInterface As String, AliasInterfaceGuid As UUID, ByVal pszAliasDeviceInterface As String, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_Interface_Alias_ExW Lib "cfgmgr32" (ByVal pszDeviceInterface As LongPtr, AliasInterfaceGuid As UUID, ByVal pszAliasDeviceInterface As LongPtr, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Device_Interface_Alia_Ex Lib "cfgmgr32" Alias "CM_Get_Device_Interface_Alias_ExW" (ByVal pszDeviceInterface As String, AliasInterfaceGuid As UUID, ByVal pszAliasDeviceInterface As String, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_Interface_ListA Lib "cfgmgr32" (InterfaceClassGuid As UUID, ByVal pDeviceID As String, ByVal Buffer As String, ByVal BufferLen As Long, ByVal ulFlags As CmGetDevInterfaceFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_Interface_ListW Lib "cfgmgr32" (InterfaceClassGuid As UUID, ByVal pDeviceID As LongPtr, ByVal Buffer As LongPtr, ByVal BufferLen As Long, ByVal ulFlags As CmGetDevInterfaceFlags) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Device_Interface_List Lib "cfgmgr32" Alias "CM_Get_Device_Interface_ListW" (InterfaceClassGuid As UUID, ByVal pDeviceID As String, ByVal Buffer As String, ByVal BufferLen As Long, ByVal ulFlags As CmGetDevInterfaceFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_Interface_List_ExA Lib "cfgmgr32" (InterfaceClassGuid As UUID, ByVal pDeviceID As String, ByVal Buffer As String, ByVal BufferLen As Long, ByVal ulFlags As CmGetDevInterfaceFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_Interface_List_ExW Lib "cfgmgr32" (InterfaceClassGuid As UUID, ByVal pDeviceID As LongPtr, ByVal Buffer As LongPtr, ByVal BufferLen As Long, ByVal ulFlags As CmGetDevInterfaceFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Device_Interface_List_Ex Lib "cfgmgr32" Alias "CM_Get_Device_Interface_List_ExW" (InterfaceClassGuid As UUID, ByVal pDeviceID As String, ByVal Buffer As String, ByVal BufferLen As Long, ByVal ulFlags As CmGetDevInterfaceFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_Interface_List_SizeA Lib "cfgmgr32" (pulLen As Long, InterfaceClassGuid As UUID, ByVal pDeviceID As String, ByVal ulFlags As CmGetDevInterfaceFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_Interface_List_SizeW Lib "cfgmgr32" (pulLen As Long, InterfaceClassGuid As UUID, ByVal pDeviceID As LongPtr, ByVal ulFlags As CmGetDevInterfaceFlags) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Device_Interface_List_Size Lib "cfgmgr32" Alias "CM_Get_Device_Interface_List_SizeW" (pulLen As Long, InterfaceClassGuid As UUID, ByVal pDeviceID As String, ByVal ulFlags As CmGetDevInterfaceFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_Interface_List_Size_ExA Lib "cfgmgr32" (pulLen As Long, InterfaceClassGuid As UUID, ByVal pDeviceID As String, ByVal ulFlags As CmGetDevInterfaceFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Device_Interface_List_Size_ExW Lib "cfgmgr32" (pulLen As Long, InterfaceClassGuid As UUID, ByVal pDeviceID As LongPtr, ByVal ulFlags As CmGetDevInterfaceFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Device_Interface_List_Size_Ex Lib "cfgmgr32" Alias "CM_Get_Device_Interface_List_Size_ExW" (pulLen As Long, InterfaceClassGuid As UUID, ByVal pDeviceID As String, ByVal ulFlags As CmGetDevInterfaceFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
'CM_Get_Device_Interface_Property[_Ex]A does not exist
Public DeclareWide PtrSafe Function CM_Get_Device_Interface_PropertyW Lib "cfgmgr32" (ByVal pszDeviceInterface As LongPtr, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, PropertyBufferSize As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Device_Interface_Property Lib "cfgmgr32" Alias "CM_Get_Device_Interface_PropertyW" (ByVal pszDeviceInterface As String, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, PropertyBufferSize As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Device_Interface_Property_ExW Lib "cfgmgr32" (ByVal pszDeviceInterface As LongPtr, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, PropertyBufferSize As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Device_Interface_Property_Ex Lib "cfgmgr32" Alias "CM_Get_Device_Interface_Property_ExW" (ByVal pszDeviceInterface As String, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, PropertyBufferSize As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
'CM_Get_Device_Interface_Property_Keys[_Ex]A does not exist
Public Declare PtrSafe Function CM_Get_Device_Interface_Property_KeysW Lib "cfgmgr32" (ByVal pszDeviceInterface As LongPtr, PropertyKeyArray As PROPERTYKEY, PropertyKeyCount As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Device_Interface_Property_Keys Lib "cfgmgr32" Alias "CM_Get_Device_Interface_Property_KeysW" (ByVal pszDeviceInterface As String, PropertyKeyArray As PROPERTYKEY, PropertyKeyCount As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Log_Conf_Priority Lib "cfgmgr32" (ByVal lcLogConf As LongPtr, pPriority As CfgLcpriValues, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Log_Conf_Priority_Ex Lib "cfgmgr32" (ByVal lcLogConf As LongPtr, pPriority As CfgLcpriValues, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Next_Log_Conf Lib "cfgmgr32" (plcLogConf As LongPtr, ByVal lcLogConf As LongPtr, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Next_Log_Conf_Ex Lib "cfgmgr32" (plcLogConf As LongPtr, ByVal lcLogConf As LongPtr, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Parent Lib "cfgmgr32" (pdnDevInst As Long, ByVal dnDevInst As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Parent_Ex Lib "cfgmgr32" (pdnDevInst As Long, ByVal dnDevInst As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Res_Des_Data Lib "cfgmgr32" (ByVal rdResDes As LongPtr, Buffer As Any, ByVal BufferLen As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Res_Des_Data_Ex Lib "cfgmgr32" (ByVal rdResDes As LongPtr, Buffer As Any, ByVal BufferLen As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Res_Des_Data_Size Lib "cfgmgr32" (pulSize As Long, ByVal rdResDes As LongPtr, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Res_Des_Data_Size_Ex Lib "cfgmgr32" (pulSize As Long, ByVal rdResDes As LongPtr, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Sibling Lib "cfgmgr32" (pdnDevInst As Long, ByVal dnDevInst As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Sibling_Ex Lib "cfgmgr32" (pdnDevInst As Long, ByVal dnDevInst As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Version Lib "cfgmgr32" () As Integer
Public Declare PtrSafe Function CM_Get_Version_Ex Lib "cfgmgr32" (Optional ByVal hMachine As LongPtr) As Integer
Public Declare PtrSafe Function CM_Is_Version_Available Lib "cfgmgr32" (ByVal wVersion As Integer) As BOOL
Public Declare PtrSafe Function CM_Is_Version_Available_Ex Lib "cfgmgr32" (ByVal wVersion As Integer, Optional ByVal hMachine As LongPtr) As BOOL
Public Declare PtrSafe Function CM_Intersect_Range_List Lib "cfgmgr32" (ByVal rlhOld1 As LongPtr, ByVal rlhOld2 As LongPtr, ByVal rhlNew As LongPtr, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Invert_Range_List Lib "cfgmgr32" (ByVal rlhOld As LongPtr, ByVal rhlNew As LongPtr, ByVal ullMaxValue As LongLong, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Locate_DevNodeA Lib "cfgmgr32" (pdnDevInst As Long, ByVal pDeviceID As String, ByVal ulFlags As CfgmgrLocateDevnodeFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Locate_DevNodeW Lib "cfgmgr32" (pdnDevInst As Long, ByVal pDeviceID As LongPtr, ByVal ulFlags As CfgmgrLocateDevnodeFlags) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Locate_DevNode Lib "cfgmgr32" Alias "CM_Locate_DevNodeW" (pdnDevInst As Long, ByVal pDeviceID As String, ByVal ulFlags As CfgmgrLocateDevnodeFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Locate_DevInstA Lib "cfgmgr32" Alias "CM_Locate_DevNodeA" (pdnDevInst As Long, ByVal pDeviceID As String, ByVal ulFlags As CfgmgrLocateDevnodeFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Locate_DevInstW Lib "cfgmgr32" Alias "CM_Locate_DevNodeW" (pdnDevInst As Long, ByVal pDeviceID As LongPtr, ByVal ulFlags As CfgmgrLocateDevnodeFlags) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Locate_DevInst Lib "cfgmgr32" Alias "CM_Locate_DevNodeW" (pdnDevInst As Long, ByVal pDeviceID As String, ByVal ulFlags As CfgmgrLocateDevnodeFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Locate_DevNode_ExA Lib "cfgmgr32" (pdnDevInst As Long, ByVal pDeviceID As String, ByVal ulFlags As CfgmgrLocateDevnodeFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Locate_DevNode_ExW Lib "cfgmgr32" (pdnDevInst As Long, ByVal pDeviceID As LongPtr, ByVal ulFlags As CfgmgrLocateDevnodeFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Locate_DevNode_Ex Lib "cfgmgr32" Alias "CM_Locate_DevNode_ExW" (pdnDevInst As Long, ByVal pDeviceID As String, ByVal ulFlags As CfgmgrLocateDevnodeFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Locate_DevInst_ExA Lib "cfgmgr32" Alias "CM_Locate_DevNode_ExA" (pdnDevInst As Long, ByVal pDeviceID As String, ByVal ulFlags As CfgmgrLocateDevnodeFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Locate_DevInst_ExW Lib "cfgmgr32" Alias "CM_Locate_DevNode_ExW" (pdnDevInst As Long, ByVal pDeviceID As LongPtr, ByVal ulFlags As CfgmgrLocateDevnodeFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Locate_DevInst_Ex Lib "cfgmgr32" Alias "CM_Locate_DevNode_ExW" (pdnDevInst As Long, ByVal pDeviceID As String, ByVal ulFlags As CfgmgrLocateDevnodeFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Merge_Range_List Lib "cfgmgr32" (ByVal rlhOld1 As LongPtr, ByVal rlhOld2 As LongPtr, ByVal rhlNew As LongPtr, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Modify_Res_Des Lib "cfgmgr32" (prdResDes As LongPtr, ByVal rdResDes As LongPtr, ByVal ResourceID As Long, ResourceData As Any, ByVal ResourceLen As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Modify_Res_Des_Ex Lib "cfgmgr32" (prdResDes As LongPtr, ByVal rdResDes As LongPtr, ByVal ResourceID As Long, ResourceData As Any, ByVal ResourceLen As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Move_DevNode Lib "cfgmgr32" (ByVal dnFromDevInst As Long, ByVal dnToDevInst As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Move_DevNode_Ex Lib "cfgmgr32" (ByVal dnFromDevInst As Long, ByVal dnToDevInst As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Move_DevInst Lib "cfgmgr32" Alias "CM_Move_DevNode" (ByVal dnFromDevInst As Long, ByVal dnToDevInst As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Move_DevInst_Ex Lib "cfgmgr32" Alias "CM_Move_DevNode_Ex" (ByVal dnFromDevInst As Long, ByVal dnToDevInst As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Next_Range Lib "cfgmgr32" (preElement As LongPtr, pullStart As LongLong, pullEnd As LongLong, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Next_Res_Des Lib "cfgmgr32" (prdResDes As LongPtr, ByVal rdResDes As LongPtr, ByVal ResourceID As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Next_Res_Des_Ex Lib "cfgmgr32" (prdResDes As LongPtr, ByVal rdResDes As LongPtr, ByVal ResourceID As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Open_Class_KeyA Lib "cfgmgr32" (ClassGuid As UUID, ByVal pszClassName As String, ByVal samDesired As REGSAM, ByVal Disposition As REGDISPOSITION, phkClass As LongPtr, ByVal ulFlags As CmOpenClassKeyFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Open_Class_KeyW Lib "cfgmgr32" (ClassGuid As UUID, ByVal pszClassName As LongPtr, ByVal samDesired As REGSAM, ByVal Disposition As REGDISPOSITION, phkClass As LongPtr, ByVal ulFlags As CmOpenClassKeyFlags) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Open_Class_Key Lib "cfgmgr32" Alias "CM_Open_Class_KeyW" (ClassGuid As UUID, ByVal pszClassName As String, ByVal samDesired As REGSAM, ByVal Disposition As REGDISPOSITION, phkClass As LongPtr, ByVal ulFlags As CmOpenClassKeyFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Open_Class_Key_ExA Lib "cfgmgr32" (ClassGuid As UUID, ByVal pszClassName As String, ByVal samDesired As REGSAM, ByVal Disposition As REGDISPOSITION, phkClass As LongPtr, ByVal ulFlags As CmOpenClassKeyFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Open_Class_Key_ExW Lib "cfgmgr32" (ClassGuid As UUID, ByVal pszClassName As LongPtr, ByVal samDesired As REGSAM, ByVal Disposition As REGDISPOSITION, phkClass As LongPtr, ByVal ulFlags As CmOpenClassKeyFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Open_Class_Key_Ex Lib "cfgmgr32" Alias "CM_Open_Class_Key_ExW" (ClassGuid As UUID, ByVal pszClassName As String, ByVal samDesired As REGSAM, ByVal Disposition As REGDISPOSITION, phkClass As LongPtr, ByVal ulFlags As CmOpenClassKeyFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Open_DevNode_Key Lib "cfgmgr32" (ByVal dnDevNode As Long, ByVal samDesired As REGSAM, ByVal Disposition As REGDISPOSITION, phkDevice As LongPtr, ByVal ulFlags As CmRegistryBranchLocations) As CONFIGRET
Public Declare PtrSafe Function CM_Open_DevNode_Key_Ex Lib "cfgmgr32" (ByVal dnDevNode As Long, ByVal samDesired As REGSAM, ByVal Disposition As REGDISPOSITION, phkDevice As LongPtr, ByVal ulFlags As CmRegistryBranchLocations, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Open_DevInst_Key Lib "cfgmgr32" Alias "CM_Open_DevNode_Key" (ByVal dnDevNode As Long, ByVal samDesired As REGSAM, ByVal Disposition As REGDISPOSITION, phkDevice As LongPtr, ByVal ulFlags As CmRegistryBranchLocations) As CONFIGRET
Public Declare PtrSafe Function CM_Open_DevInst_Key_Ex Lib "cfgmgr32" Alias "CM_Open_DevNode_Key_Ex" (ByVal dnDevNode As Long, ByVal samDesired As REGSAM, ByVal Disposition As REGDISPOSITION, phkDevice As LongPtr, ByVal ulFlags As CmRegistryBranchLocations, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Open_Device_Interface_KeyA Lib "cfgmgr32" (ByVal pszDeviceInterface As String, ByVal samDesired As REGSAM, ByVal Disposition As REGDISPOSITION, phkDeviceInterface As LongPtr, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Open_Device_Interface_KeyW Lib "cfgmgr32" (ByVal pszDeviceInterface As LongPtr, ByVal samDesired As REGSAM, ByVal Disposition As REGDISPOSITION, phkDeviceInterface As LongPtr, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Open_Device_Interface_Key Lib "cfgmgr32" Alias "CM_Open_Device_Interface_KeyW" (ByVal pszDeviceInterface As String, ByVal samDesired As REGSAM, ByVal Disposition As REGDISPOSITION, phkDeviceInterface As LongPtr, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Open_Device_Interface_Key_ExA Lib "cfgmgr32" (ByVal pszDeviceInterface As String, ByVal samDesired As REGSAM, ByVal Disposition As REGDISPOSITION, phkDeviceInterface As LongPtr, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Open_Device_Interface_Key_ExW Lib "cfgmgr32" (ByVal pszDeviceInterface As LongPtr, ByVal samDesired As REGSAM, ByVal Disposition As REGDISPOSITION, phkDeviceInterface As LongPtr, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Open_Device_Interface_Key_Ex Lib "cfgmgr32" Alias "CM_Open_Device_Interface_Key_ExW" (ByVal pszDeviceInterface As String, ByVal samDesired As REGSAM, ByVal Disposition As REGDISPOSITION, phkDeviceInterface As LongPtr, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Delete_Device_Interface_KeyA Lib "cfgmgr32" (ByVal pszDeviceInterface As String, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Delete_Device_Interface_KeyW Lib "cfgmgr32" (ByVal pszDeviceInterface As LongPtr, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Delete_Device_Interface_Key Lib "cfgmgr32" Alias "CM_Delete_Device_Interface_KeyW" (ByVal pszDeviceInterface As String, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Delete_Device_Interface_Key_ExA Lib "cfgmgr32" (ByVal pszDeviceInterface As String, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Delete_Device_Interface_Key_ExW Lib "cfgmgr32" (ByVal pszDeviceInterface As LongPtr, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Delete_Device_Interface_Key_Ex Lib "cfgmgr32" Alias "CM_Delete_Device_Interface_Key_ExW" (ByVal pszDeviceInterface As String, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Query_Arbitrator_Free_Data Lib "cfgmgr32" (pData As Any, ByVal DataLen As Long, ByVal dnDevInst As Long, ByVal ResourceID As Long, ByVal ulFlags As CmArbitratorFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Query_Arbitrator_Free_Data_Ex Lib "cfgmgr32" (pData As Any, ByVal DataLen As Long, ByVal dnDevInst As Long, ByVal ResourceID As Long, ByVal ulFlags As CmArbitratorFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Query_Arbitrator_Free_Size Lib "cfgmgr32" (pulSize As Long, ByVal dnDevInst As Long, ByVal ResourceID As Long, ByVal ulFlags As CmArbitratorFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Query_Arbitrator_Free_Size_Ex Lib "cfgmgr32" (pulSize As Long, ByVal dnDevInst As Long, ByVal ResourceID As Long, ByVal ulFlags As CmArbitratorFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Query_Remove_SubTree Lib "cfgmgr32" (ByVal dnAncestor As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Query_Remove_SubTree_Ex Lib "cfgmgr32" (ByVal dnAncestor As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Query_And_Remove_SubTreeA Lib "cfgmgr32" (ByVal dnAncestor As Long, pVetoType As PNP_VETO_TYPE, ByVal pszVetoName As String, ByVal ulNameLength As Long, ByVal ulFlags As ConfigMgrRemoveSubtreeFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Query_And_Remove_SubTreeW Lib "cfgmgr32" (ByVal dnAncestor As Long, pVetoType As PNP_VETO_TYPE, ByVal pszVetoName As LongPtr, ByVal ulNameLength As Long, ByVal ulFlags As ConfigMgrRemoveSubtreeFlags) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Query_And_Remove_SubTree Lib "cfgmgr32" Alias "CM_Query_And_Remove_SubTreeW" (ByVal dnAncestor As Long, pVetoType As PNP_VETO_TYPE, ByVal pszVetoName As String, ByVal ulNameLength As Long, ByVal ulFlags As ConfigMgrRemoveSubtreeFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Query_And_Remove_SubTree_ExA Lib "cfgmgr32" (ByVal dnAncestor As Long, pVetoType As PNP_VETO_TYPE, ByVal pszVetoName As String, ByVal ulNameLength As Long, ByVal ulFlags As ConfigMgrRemoveSubtreeFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Query_And_Remove_SubTree_ExW Lib "cfgmgr32" (ByVal dnAncestor As Long, pVetoType As PNP_VETO_TYPE, ByVal pszVetoName As LongPtr, ByVal ulNameLength As Long, ByVal ulFlags As ConfigMgrRemoveSubtreeFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Query_And_Remove_SubTree_Ex Lib "cfgmgr32" Alias "CM_Query_And_Remove_SubTree_ExW" (ByVal dnAncestor As Long, pVetoType As PNP_VETO_TYPE, ByVal pszVetoName As String, ByVal ulNameLength As Long, ByVal ulFlags As ConfigMgrRemoveSubtreeFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Request_Device_EjectA Lib "setupapi" (ByVal dnDevInst As Long, pVetoType As PNP_VETO_TYPE, ByVal pszVetoName As String, ByVal ulNameLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Request_Device_Eject_ExA Lib "setupapi" (ByVal dnDevInst As Long, pVetoType As PNP_VETO_TYPE, ByVal pszVetoName As String, ByVal ulNameLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Request_Device_EjectW Lib "setupapi" (ByVal dnDevInst As Long, pVetoType As PNP_VETO_TYPE, ByVal pszVetoName As LongPtr, ByVal ulNameLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Request_Device_Eject_ExW Lib "setupapi" (ByVal dnDevInst As Long, pVetoType As PNP_VETO_TYPE, ByVal pszVetoName As LongPtr, ByVal ulNameLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Request_Device_Eject Lib "setupapi" Alias "CM_Request_Device_EjectW" (ByVal dnDevInst As Long, pVetoType As PNP_VETO_TYPE, ByVal pszVetoName As String, ByVal ulNameLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Request_Device_Eject_Ex Lib "setupapi" Alias "CM_Request_Device_Eject_ExW" (ByVal dnDevInst As Long, pVetoType As PNP_VETO_TYPE, ByVal pszVetoName As String, ByVal ulNameLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Reenumerate_DevNode Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulFlags As CfgMgrReEnumFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Reenumerate_DevNode_Ex Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulFlags As CfgMgrReEnumFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Reenumerate_DevInst Lib "cfgmgr32" Alias "CM_Reenumerate_DevNode" (ByVal dnDevInst As Long, ByVal ulFlags As CfgMgrReEnumFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Reenumerate_DevInst_Ex Lib "cfgmgr32" Alias "CM_Reenumerate_DevNode_Ex" (ByVal dnDevInst As Long, ByVal ulFlags As CfgMgrReEnumFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Register_Device_InterfaceA Lib "cfgmgr32" (ByVal dnDevInst As Long, InterfaceClassGuid As UUID, ByVal pszReference As String, ByVal pszDeviceInterface As String, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Register_Device_InterfaceW Lib "cfgmgr32" (ByVal dnDevInst As Long, InterfaceClassGuid As UUID, ByVal pszReference As LongPtr, ByVal pszDeviceInterface As LongPtr, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Register_Device_Interface Lib "cfgmgr32" Alias "CM_Register_Device_InterfaceW" (ByVal dnDevInst As Long, InterfaceClassGuid As UUID, ByVal pszReference As String, ByVal pszDeviceInterface As String, pulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Register_Device_Interface_ExA Lib "cfgmgr32" (ByVal dnDevInst As Long, InterfaceClassGuid As UUID, ByVal pszReference As String, ByVal pszDeviceInterface As String, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Register_Device_Interface_ExW Lib "cfgmgr32" (ByVal dnDevInst As Long, InterfaceClassGuid As UUID, ByVal pszReference As LongPtr, ByVal pszDeviceInterface As LongPtr, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Register_Device_Interface_Ex Lib "cfgmgr32" Alias "CM_Register_Device_Interface_ExW" (ByVal dnDevInst As Long, InterfaceClassGuid As UUID, ByVal pszReference As String, ByVal pszDeviceInterface As String, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Set_DevNode_Problem_Ex Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulProblem As CfgMgrProblems, ByVal ulFlags As CfgmgrSetProblemFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Set_DevNode_Problem Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulProblem As CfgMgrProblems, ByVal ulFlags As CfgmgrSetProblemFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Set_DevInst_Problem Lib "cfgmgr32" Alias "CM_Set_DevNode_Problem" (ByVal dnDevInst As Long, ByVal ulProblem As CfgMgrProblems, ByVal ulFlags As CfgmgrSetProblemFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Set_DevInst_Problem_Ex Lib "cfgmgr32" Alias "CM_Set_DevNode_Problem_Ex" (ByVal dnDevInst As Long, ByVal ulProblem As CfgMgrProblems, ByVal ulFlags As CfgmgrSetProblemFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Unregister_Device_InterfaceA Lib "cfgmgr32" (ByVal pszDeviceInterface As String, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Unregister_Device_InterfaceW Lib "cfgmgr32" (ByVal pszDeviceInterface As LongPtr, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Unregister_Device_Interface Lib "cfgmgr32" Alias "CM_Unregister_Device_InterfaceW" (ByVal pszDeviceInterface As String, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Unregister_Device_Interface_ExA Lib "cfgmgr32" (ByVal pszDeviceInterface As String, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Unregister_Device_Interface_ExW Lib "cfgmgr32" (ByVal pszDeviceInterface As LongPtr, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Unregister_Device_Interface_Ex Lib "cfgmgr32" Alias "CM_Unregister_Device_Interface_ExW" (ByVal pszDeviceInterface As String, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Register_Device_Driver Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulFlags As CmRegisterDeviceDriverFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Register_Device_Driver_Ex Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulFlags As CmRegisterDeviceDriverFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
[Description("This function is obsolete. Use CM_Query_And_Remove_Subtree instead.")]
Public Declare PtrSafe Function CM_Remove_SubTree Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulFlags As Long) As CONFIGRET
[Description("This function is obsolete. Use CM_Query_And_Remove_Subtree_Ex instead.")]
Public Declare PtrSafe Function CM_Remove_SubTree_Ex Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
'CM_Set_DevNode_PropertyA does not exist 
Public Declare PtrSafe Function CM_Set_DevNode_PropertyW Lib "cfgmgr32" (ByVal dnDevInst As Long, PropertyKey As PROPERTYKEY, ByVal PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Set_DevNode_Property Lib "cfgmgr32" Alias "CM_Set_DevNode_PropertyW" (ByVal dnDevInst As Long, PropertyKey As PROPERTYKEY, ByVal PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal ulFlags As Long) As CONFIGRET
'CM_Set_DevNode_Property_ExA does not exist 
Public Declare PtrSafe Function CM_Set_DevNode_Property_ExW Lib "cfgmgr32" (ByVal dnDevInst As Long, PropertyKey As PROPERTYKEY, ByVal PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Set_DevNode_Property_Ex Lib "cfgmgr32" Alias "CM_Set_DevNode_Property_ExW" (ByVal dnDevInst As Long, PropertyKey As PROPERTYKEY, ByVal PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Set_DevNode_Registry_PropertyA Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, Buffer As Any, ByVal ulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Set_DevNode_Registry_PropertyW Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, Buffer As Any, ByVal ulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Set_DevNode_Registry_Property Lib "cfgmgr32" Alias "CM_Set_DevNode_Registry_PropertyW" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, Buffer As Any, ByVal ulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Set_DevInst_Registry_PropertyA Lib "cfgmgr32" Alias "CM_Set_DevNode_Registry_PropertyA" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, Buffer As Any, ByVal ulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Set_DevInst_Registry_PropertyW Lib "cfgmgr32" Alias "CM_Set_DevNode_Registry_PropertyW" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, Buffer As Any, ByVal ulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Set_DevInst_Registry_Property Lib "cfgmgr32" Alias "CM_Set_DevNode_Registry_PropertyW" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, Buffer As Any, ByVal ulLength As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Set_DevNode_Registry_Property_ExA Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, Buffer As Any, ByVal ulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Set_DevNode_Registry_Property_ExW Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, Buffer As Any, ByVal ulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Set_DevNode_Registry_Property_Ex Lib "cfgmgr32" Alias "CM_Set_DevNode_Registry_Property_ExW" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, Buffer As Any, ByVal ulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Set_DevInst_Registry_Property_ExA Lib "cfgmgr32" Alias "CM_Set_DevNode_Registry_Property_ExA" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, Buffer As Any, ByVal ulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Set_DevInst_Registry_Property_ExW Lib "cfgmgr32" Alias "CM_Set_DevNode_Registry_Property_ExW" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, Buffer As Any, ByVal ulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Set_DevInst_Registry_Property_Ex Lib "cfgmgr32" Alias "CM_Set_DevNode_Registry_Property_ExW" (ByVal dnDevInst As Long, ByVal ulProperty As ConfigMgrRegistryProps, Buffer As Any, ByVal ulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
'CM_Set_Device_Interface_PropertyA does not exist
Public Declare PtrSafe Function CM_Set_Device_Interface_PropertyW Lib "cfgmgr32" (ByVal pszDeviceInterface As LongPtr, PropertyKey As PROPERTYKEY, ByVal PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Set_Device_Interface_Property Lib "cfgmgr32" Alias "CM_Set_Device_Interface_PropertyW" (ByVal pszDeviceInterface As String, PropertyKey As PROPERTYKEY, ByVal PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal ulFlags As Long) As CONFIGRET
'CM_Set_Device_Interface_Property_ExA does not exist
Public Declare PtrSafe Function CM_Set_Device_Interface_Property_ExW Lib "cfgmgr32" (ByVal pszDeviceInterface As LongPtr, PropertyKey As PROPERTYKEY, ByVal PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Set_Device_Interface_Property_Ex Lib "cfgmgr32" Alias "CM_Set_Device_Interface_Property_ExW" (ByVal pszDeviceInterface As String, PropertyKey As PROPERTYKEY, ByVal PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Is_Dock_Station_Present Lib "cfgmgr32" (pbPresent As BOOL) As CONFIGRET
Public Declare PtrSafe Function CM_Is_Dock_Station_Present_Ex Lib "cfgmgr32" (pbPresent As BOOL, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Request_Eject_PC Lib "cfgmgr32" () As CONFIGRET
Public Declare PtrSafe Function CM_Request_Eject_PC_Ex Lib "cfgmgr32" (Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Set_HW_Prof_FlagsA Lib "cfgmgr32" (ByVal pDeviceID As String, ByVal ulHardwareProfile As Long, ByVal ulValue As CfgmgrCSConfigFlags, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Set_HW_Prof_FlagsW Lib "cfgmgr32" (ByVal pDeviceID As LongPtr, ByVal ulHardwareProfile As Long, ByVal ulValue As CfgmgrCSConfigFlags, ByVal ulFlags As Long) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Set_HW_Prof_Flags Lib "cfgmgr32" Alias "CM_Set_HW_Prof_FlagsW" (ByVal pDeviceID As String, ByVal ulHardwareProfile As Long, ByVal ulValue As CfgmgrCSConfigFlags, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Set_HW_Prof_Flags_ExA Lib "cfgmgr32" (ByVal pDeviceID As String, ByVal ulHardwareProfile As Long, ByVal ulValue As CfgmgrCSConfigFlags, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Set_HW_Prof_Flags_ExW Lib "cfgmgr32" (ByVal pDeviceID As LongPtr, ByVal ulHardwareProfile As Long, ByVal ulValue As CfgmgrCSConfigFlags, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Set_HW_Prof_Flags_Ex Lib "cfgmgr32" Alias "CM_Set_HW_Prof_Flags_ExW" (ByVal pDeviceID As String, ByVal ulHardwareProfile As Long, ByVal ulValue As CfgmgrCSConfigFlags, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Setup_DevNode Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulFlags As CmEnableAndConfigActions) As CONFIGRET
Public Declare PtrSafe Function CM_Setup_DevNode_Ex Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulFlags As CmEnableAndConfigActions, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Setup_DevInst Lib "cfgmgr32" Alias "CM_Setup_DevNode" (ByVal dnDevInst As Long, ByVal ulFlags As CmEnableAndConfigActions) As CONFIGRET
Public Declare PtrSafe Function CM_Setup_DevInst_Ex Lib "cfgmgr32" Alias "CM_Setup_DevNode_Ex" (ByVal dnDevInst As Long, ByVal ulFlags As CmEnableAndConfigActions, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Test_Range_Available Lib "cfgmgr32" (ByVal ullStartValue As LongLong, ByVal ullEndValue As LongLong, ByVal rlh As LongPtr, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Uninstall_DevNode Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Uninstall_DevNode_Ex Lib "cfgmgr32" (ByVal dnDevInst As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Uninstall_DevInst Lib "cfgmgr32" Alias "CM_Uninstall_DevNode" (ByVal dnDevInst As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Uninstall_DevInst_Ex Lib "cfgmgr32" Alias "CM_Uninstall_DevNode_Ex" (ByVal dnDevInst As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Run_Detection Lib "cfgmgr32" (ByVal ulFlags As CfgHwDetectionFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Run_Detection_Ex Lib "cfgmgr32" (ByVal ulFlags As CfgHwDetectionFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Apply_PowerScheme Lib "cfgmgr32" () As CONFIGRET
Public Declare PtrSafe Function CM_Write_UserPowerKey Lib "cfgmgr32" (SchemeGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, ByVal AccessFlags As Long, ByVal Type As Long, Buffer As Any, ByVal BufferSize As Long, Error As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Set_ActiveScheme Lib "cfgmgr32" (SchemeGuid As UUID, Error As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Restore_DefaultPowerScheme Lib "cfgmgr32" (SchemeGuid As UUID, Error As Long) As CONFIGRET
Public Declare PtrSafe Function CM_RestoreAll_DefaultPowerSchemes Lib "cfgmgr32" (Error As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Duplicate_PowerScheme Lib "cfgmgr32" (SourceSchemeGuid As UUID, DestinationSchemeGuid As LongPtr, Error As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Delete_PowerScheme Lib "cfgmgr32" (SchemeGuid As UUID, Error As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Import_PowerScheme Lib "cfgmgr32" (ByVal ImportFileNamePath As LongPtr, DestinationSchemeGuid As UUID, Error As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Set_HW_Prof Lib "cfgmgr32" (ByVal ulHardwareProfile As Long, ByVal ulFlags As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Set_HW_Prof_Ex Lib "cfgmgr32" (ByVal ulHardwareProfile As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Query_Resource_Conflict_List Lib "cfgmgr32" (pclConflictList As LongPtr, ByVal dnDevInst As Long, ByVal ResourceID As Long, ResourceData As Any, ByVal ResourceLen As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Free_Resource_Conflict_Handle Lib "cfgmgr32" (ByVal clConflictList As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Resource_Conflict_Count Lib "cfgmgr32" (ByVal clConflictList As LongPtr, pulCount As Long) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Resource_Conflict_DetailsA Lib "cfgmgr32" (ByVal clConflictList As LongPtr, ByVal ulIndex As Long, pConflictDetails As CONFLICT_DETAILS_A) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Resource_Conflict_DetailsW Lib "cfgmgr32" (ByVal clConflictList As LongPtr, ByVal ulIndex As Long, pConflictDetails As CONFLICT_DETAILS_W) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Resource_Conflict_Details Lib "cfgmgr32" Alias "CM_Get_Resource_Conflict_DetailsW" (ByVal clConflictList As LongPtr, ByVal ulIndex As Long, pConflictDetails As CONFLICT_DETAILS) As CONFIGRET
' CM_Get_Class_PropertyA does not exist
Public Declare PtrSafe Function CM_Get_Class_PropertyW Lib "cfgmgr32" (ClassGuid As UUID, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, PropertyBufferSize As Long, ByVal ulFlags As CmClassPropkeyFlags) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Class_Property Lib "cfgmgr32" Alias "CM_Get_Class_PropertyW" (ClassGuid As UUID, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, PropertyBufferSize As Long, ByVal ulFlags As CmClassPropkeyFlags) As CONFIGRET
' CM_Get_Class_PropertyA does not exist
Public Declare PtrSafe Function CM_Get_Class_Property_ExW Lib "cfgmgr32" (ClassGuid As UUID, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, PropertyBufferSize As Long, ByVal ulFlags As CmClassPropkeyFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Class_Property_Ex Lib "cfgmgr32" Alias "CM_Get_Class_Property_ExW" (ClassGuid As UUID, PropertyKey As PROPERTYKEY, PropertyType As DEVPROPTYPE, PropertyBuffer As Any, PropertyBufferSize As Long, ByVal ulFlags As CmClassPropkeyFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Class_Property_Keys Lib "cfgmgr32" (ClassGuid As UUID, PropertyKeyArray As PROPERTYKEY, PropertyKeyCount As Long, ByVal ulFlags As CmClassPropkeyFlags) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Class_Property_Keys_Ex Lib "cfgmgr32" (ClassGuid As UUID, PropertyKeyArray As PROPERTYKEY, PropertyKeyCount As Long, ByVal ulFlags As CmClassPropkeyFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
' CM_Set_Class_PropertyA does not exist
Public Declare PtrSafe Function CM_Set_Class_PropertyW Lib "cfgmgr32" (ClassGuid As UUID, PropertyKey As PROPERTYKEY, ByVal PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal ulFlags As CmClassPropkeyFlags) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Set_Class_Property Lib "cfgmgr32" Alias "CM_Set_Class_PropertyW" (ClassGuid As UUID, PropertyKey As PROPERTYKEY, ByVal PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal ulFlags As CmClassPropkeyFlags) As CONFIGRET
' CM_Get_Class_PropertyA does not exist
Public Declare PtrSafe Function CM_Set_Class_Property_ExW Lib "cfgmgr32" (ClassGuid As UUID, PropertyKey As PROPERTYKEY, ByVal PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal ulFlags As CmClassPropkeyFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Set_Class_Property_Ex Lib "cfgmgr32" Alias "CM_Set_Class_Property_ExW" (ClassGuid As UUID, PropertyKey As PROPERTYKEY, ByVal PropertyType As DEVPROPTYPE, PropertyBuffer As Any, ByVal PropertyBufferSize As Long, ByVal ulFlags As CmClassPropkeyFlags, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Class_Registry_PropertyA Lib "cfgmgr32" (ClassGuid As UUID, ByVal ulProperty As ConfigMgrRegistryProps, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Get_Class_Registry_PropertyW Lib "cfgmgr32" (ClassGuid As UUID, ByVal ulProperty As ConfigMgrRegistryProps, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Get_Class_Registry_Property Lib "cfgmgr32" Alias "CM_Get_Class_Registry_PropertyW" (ClassGuid As UUID, ByVal ulProperty As ConfigMgrRegistryProps, pulRegDataType As REGTYPES, Buffer As Any, pulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Set_Class_Registry_PropertyA Lib "cfgmgr32" (ClassGuid As UUID, ByVal ulProperty As ConfigMgrRegistryProps, Buffer As Any, ByVal ulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Set_Class_Registry_PropertyW Lib "cfgmgr32" (ClassGuid As UUID, ByVal ulProperty As ConfigMgrRegistryProps, Buffer As Any, ByVal ulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public DeclareWide PtrSafe Function CM_Set_Class_Registry_Property Lib "cfgmgr32" Alias "CM_Set_Class_Registry_PropertyW" (ClassGuid As UUID, ByVal ulProperty As ConfigMgrRegistryProps, Buffer As Any, ByVal ulLength As Long, ByVal ulFlags As Long, Optional ByVal hMachine As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_WaitNoPendingInstallEvents Lib "cfgmgr32" Alias "CMP_WaitNoPendingInstallEvents" (ByVal dwTimeout As Long) As Long
[Description("Use RegisterDeviceNotification instead of CM_Register_Notification if your code targets Windows 7 or earlier versions of Windows.")]
' Public Declare PtrSafe Function CM_Register_Notification Lib "cfgmgr32" (pFilter As CM_NOTIFY_FILTER, ByVal pContext As LongPtr, ByVal pCallback As CmNotifyCallback, pNotifyContext As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Register_Notification Lib "cfgmgr32" (pFilter As CM_NOTIFY_FILTER, ByVal pContext As LongPtr, ByVal pCallback As LongPtr, pNotifyContext As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_Unregister_Notification Lib "cfgmgr32" (ByVal NotifyContext As LongPtr) As CONFIGRET
Public Declare PtrSafe Function CM_MapCrToWin32Err Lib "cfgmgr32" (ByVal CmReturnCode As CONFIGRET, ByVal DefaultErr As Long) As Long


'cfgmgr32.h verified complete 




Public Enum DevPropUIFlags
    DEVPROP_SHOW_RESOURCE_TAB = &H00000001
    DEVPROP_LAUNCH_TROUBLESHOOTER = &H00000002
End Enum

Public Declare PtrSafe Sub DeviceProperties_RunDLLA Lib "devmgr" (ByVal hwndStub As LongPtr, ByVal hAppInstance As LongPtr, ByVal lpCmdLine As String, ByVal nCmdShow As SHOWWINDOW)
Public Declare PtrSafe Sub DeviceProperties_RunDLLW Lib "devmgr" (ByVal hwndStub As LongPtr, ByVal hAppInstance As LongPtr, ByVal lpCmdLine As LongPtr, ByVal nCmdShow As SHOWWINDOW)
Public DeclareWide PtrSafe Sub DeviceProperties_RunDLL Lib "devmgr" Alias "DeviceProperties_RunDLLW" (ByVal hwndStub As LongPtr, ByVal hAppInstance As LongPtr, ByVal lpCmdLine As String, ByVal nCmdShow As SHOWWINDOW)
Public Declare PtrSafe Function DevicePropertiesA Lib "devmgr" (ByVal hwndParent As LongPtr, ByVal MachineName As String, ByVal DeviceID As String, ByVal ShowDeviceTree As BOOL) As Long
Public Declare PtrSafe Function DevicePropertiesW Lib "devmgr" (ByVal hwndParent As LongPtr, ByVal MachineName As LongPtr, ByVal DeviceID As LongPtr, ByVal ShowDeviceTree As BOOL) As Long
Public DeclareWide PtrSafe Function DeviceProperties Lib "devmgr" Alias "DevicePropertiesW" (ByVal hwndParent As LongPtr, ByVal MachineName As String, ByVal DeviceID As String, ByVal ShowDeviceTree As BOOL) As Long
Public Declare PtrSafe Function DevicePropertiesExA Lib "devmgr" (ByVal hwndParent As LongPtr, ByVal MachineName As String, ByVal DeviceID As String, ByVal Flags As DevPropUIFlags, ByVal ShowDeviceTree As BOOL) As Long
Public Declare PtrSafe Function DevicePropertiesExW Lib "devmgr" (ByVal hwndParent As LongPtr, ByVal MachineName As LongPtr, ByVal DeviceID As LongPtr, ByVal Flags As DevPropUIFlags, ByVal ShowDeviceTree As BOOL) As Long
Public DeclareWide PtrSafe Function DevicePropertiesEx Lib "devmgr" Alias "DevicePropertiesExW" (ByVal hwndParent As LongPtr, ByVal MachineName As String, ByVal DeviceID As String, ByVal Flags As DevPropUIFlags, ByVal ShowDeviceTree As BOOL) As Long
Public Declare PtrSafe Function DeviceAdvancedPropertiesA Lib "devmgr" (ByVal hwndParent As LongPtr, ByVal MachineName As String, ByVal DeviceID As String) As Long
Public Declare PtrSafe Function DeviceAdvancedPropertiesW Lib "devmgr" (ByVal hwndParent As LongPtr, ByVal MachineName As LongPtr, ByVal DeviceID As LongPtr) As Long
Public DeclareWide PtrSafe Function DeviceAdvancedProperties Lib "devmgr" Alias "DeviceAdvancedPropertiesW" (ByVal hwndParent As LongPtr, ByVal MachineName As String, ByVal DeviceID As String) As Long
Public Declare PtrSafe Function DeviceManager_ExecuteA Lib "devmgr" (ByVal hwndStub As LongPtr, ByVal hAppInstance As LongPtr, ByVal lpCmdLine As String, ByVal nCmdShow As SHOWWINDOW) As BOOL
Public Declare PtrSafe Function DeviceManager_ExecuteW Lib "devmgr" (ByVal hwndStub As LongPtr, ByVal hAppInstance As LongPtr, ByVal lpCmdLine As LongPtr, ByVal nCmdShow As SHOWWINDOW) As BOOL
Public DeclareWide PtrSafe Function DeviceManager_Execute Lib "devmgr" Alias "DeviceManager_ExecuteW" (ByVal hwndStub As LongPtr, ByVal hAppInstance As LongPtr, ByVal lpCmdLine As String, ByVal nCmdShow As SHOWWINDOW) As BOOL
Public Declare PtrSafe Function DeviceProblemTextA Lib "devmgr" (ByVal hMachine As LongPtr, ByVal DevNode As Long, ByVal ProblemNumber As CfgMgrProblems, ByVal Buffer As String, ByVal BufferSize As Long) As Long
Public Declare PtrSafe Function DeviceProblemTextW Lib "devmgr" (ByVal hMachine As LongPtr, ByVal DevNode As Long, ByVal ProblemNumber As CfgMgrProblems, ByVal Buffer As LongPtr, ByVal BufferSize As Long) As Long
Public DeclareWide PtrSafe Function DeviceProblemText Lib "devmgr" Alias "DeviceProblemTextW" (ByVal hMachine As LongPtr, ByVal DevNode As Long, ByVal ProblemNumber As CfgMgrProblems, ByVal Buffer As String, ByVal BufferSize As Long) As Long
Public Declare PtrSafe Sub DeviceProblenWizard_RunDLLA Lib "devmgr" (ByVal hwndStub As LongPtr, ByVal hAppInstance As LongPtr, ByVal lpCmdLine As String, ByVal nCmdShow As SHOWWINDOW)
Public Declare PtrSafe Sub DeviceProblenWizard_RunDLLW Lib "devmgr" (ByVal hwndStub As LongPtr, ByVal hAppInstance As LongPtr, ByVal lpCmdLine As LongPtr, ByVal nCmdShow As SHOWWINDOW)
Public DeclareWide PtrSafe Sub DeviceProblenWizard_RunDLL Lib "devmgr" Alias "DeviceProblenWizard_RunDLLW" (ByVal hwndStub As LongPtr, ByVal hAppInstance As LongPtr, ByVal lpCmdLine As String, ByVal nCmdShow As SHOWWINDOW)
Public Declare PtrSafe Function DeviceProblemWizardA Lib "devmgr" (ByVal hwndParent As LongPtr, ByVal MachineName As String, ByVal DeviceID As String) As Long
Public Declare PtrSafe Function DeviceProblemWizardW Lib "devmgr" (ByVal hwndParent As LongPtr, ByVal MachineName As LongPtr, ByVal DeviceID As LongPtr) As Long
Public DeclareWide PtrSafe Function DeviceProblemWizard Lib "devmgr" Alias "DeviceProblemWizardW" (ByVal hwndParent As LongPtr, ByVal MachineName As String, ByVal DeviceID As String) As Long


#End Region

#Region "netapi32"
Public Const CNLEN  = 15  ' Computer name length	
Public Const LM20_CNLEN  = 15  ' LM 2.0 Computer name length
Public Const DNLEN  = CNLEN  ' Maximum domain name length
Public Const LM20_DNLEN  = LM20_CNLEN  ' LM 2.0 Maximum domain name length
Public Const UNCLEN  = (CNLEN + 2)  ' UNC computer name length
Public Const LM20_UNCLEN  = (LM20_CNLEN + 2)  ' LM 2.0 UNC computer name length
Public Const NNLEN  = 80  ' Net name length (share name)
Public Const LM20_NNLEN  = 12  ' LM 2.0 Net name length
Public Const RMLEN  = (UNCLEN + 1 + NNLEN)  ' Max remote name length
Public Const LM20_RMLEN  = (LM20_UNCLEN + 1 + LM20_NNLEN)  ' LM 2.0 Max remote name length
Public Const SNLEN  = 80  ' Service name length
Public Const LM20_SNLEN  = 15  ' LM 2.0 Service name length
Public Const STXTLEN  = 256  ' Service text length
Public Const LM20_STXTLEN  = 63  ' LM 2.0 Service text length
Public Const PATHLEN  = 256  ' Max. path (not including drive name)
Public Const LM20_PATHLEN  = 256  ' LM 2.0 Max. path
Public Const DEVLEN  = 80  ' Device name length
Public Const LM20_DEVLEN  = 8  ' LM 2.0 Device name length
Public Const EVLEN  = 16  ' Event name length
'  User, Group and Password lengths
Public Const UNLEN  = 256  ' Maximum user name length
Public Const LM20_UNLEN  = 20  ' LM 2.0 Maximum user name length
Public Const GNLEN  = UNLEN  ' Group name
Public Const LM20_GNLEN  = LM20_UNLEN  ' LM 2.0 Group name
Public Const PWLEN  = 256  ' Maximum password length
Public Const LM20_PWLEN  = 14  ' LM 2.0 Maximum password length
Public Const SHPWLEN  = 8  ' Share password length (bytes)
Public Const CLTYPE_LEN  = 12  ' Length of client type string
Public Const MAXCOMMENTSZ  = 256  ' Multipurpose comment length
Public Const LM20_MAXCOMMENTSZ  = 48  ' LM 2.0 Multipurpose comment length
Public Const QNLEN  = NNLEN  ' Queue name maximum length
Public Const LM20_QNLEN  = LM20_NNLEN  ' LM 2.0 Queue name maximum length
'  The ALERTSZ and MAXDEVENTRIES defines have not yet been NT'ized.
'  Whoever ports these components should change these values appropriately.
Public Const ALERTSZ  = 128  ' size of alert string in server
Public Const MAXDEVENTRIES  = 32 '(sizeof (int)*8)  ' Max number of device entries
'  We use int bitmap to represent
Public Const NETBIOS_NAME_LEN  = 16  ' NetBIOS net name (bytes)
'  Value to be used with APIs which have a "preferred maximum length"
'  parameter.  This value indicates that the API should just allocate
'  "as much as it takes."
Public Const MAX_PREFERRED_LENGTH As Long = (-1)
'         Constants used with encryption
Public Const CRYPT_KEY_LEN  = 7
Public Const CRYPT_TXT_LEN  = 8
Public Const ENCRYPTED_PWLEN  = 16
Public Const SESSION_PWLEN  = 24
Public Const SESSION_CRYPT_KLEN  = 21
'   Value to be used with SetInfo calls to allow setting of all
'   settable parameters (parmnum zero option)
Public Const PARMNUM_ALL  = 0
Public Const PARM_ERROR_UNKNOWN As Long = (-1)
Public Const PARM_ERROR_NONE  = 0
Public Const PARMNUM_BASE_INFOLEVEL  = 1000

Public Const MESSAGE_FILENAME        = "NETMSG"
Public Const OS2MSG_FILENAME         = "BASE"
Public Const HELP_MSG_FILENAME       = "NETH"

Public Enum NETAPI_PLATFORMID
    PLATFORM_ID_DOS = 300
    PLATFORM_ID_OS2 = 400
    PLATFORM_ID_NT = 500
    PLATFORM_ID_OSF = 600
    PLATFORM_ID_VMS = 700
    SV_PLATFORM_ID_OS2 = 400
    SV_PLATFORM_ID_NT = 500
End Enum

Public Const NERR_BASE = 2100
Public Const MIN_LANMAN_MESSAGE_ID  = NERR_BASE
Public Const MAX_LANMAN_MESSAGE_ID  = 5899

Public Const NERR_Success          = 0 /* Success */
[Description("The workstation driver is not installed.")] Public Const NERR_NetNotStarted = (NERR_BASE + 2)
[Description("The server could not be located.")] Public Const NERR_UnknownServer = (NERR_BASE + 3)
[Description("An internal error occurred. The network cannot access a shared memory segment.")] Public Const NERR_ShareMem  = (NERR_BASE + 4)

[Description("A network resource shortage occurred .")] Public Const NERR_NoNetworkResource = (NERR_BASE + 5)
[Description("This operation is not supported on workstations.")] Public Const NERR_RemoteOnly = (NERR_BASE + 6)
[Description("The device is not connected.")] Public Const NERR_DevNotRedirected = (NERR_BASE + 7)
/* NERR_BASE+8 is used for ERROR_CONNECTED_OTHER_PASSWORD */
/* NERR_BASE+9 is used for ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT */
/* UNUSED BASE+10 */
/* UNUSED BASE+11 */
/* UNUSED BASE+12 */
/* UNUSED BASE+13 */
[Description("The Server service is not started.")] Public Const NERR_ServerNotStarted = (NERR_BASE + 14)
[Description("The queue is empty.")] Public Const NERR_ItemNotFound = (NERR_BASE + 15)
[Description("The device or directory does not exist.")] Public Const NERR_UnknownDevDir = (NERR_BASE + 16)
[Description("The operation is invalid on a redirected resource.")] Public Const NERR_RedirectedPath = (NERR_BASE + 17)
[Description("The name has already been shared.")] Public Const NERR_DuplicateShare = (NERR_BASE + 18)
[Description("The server is currently out of the requested resource.")] Public Const NERR_NoRoom = (NERR_BASE + 19)
/* UNUSED BASE+20 */
[Description("Requested addition of items exceeds the maximum allowed.")] Public Const NERR_TooManyItems = (NERR_BASE + 21)
[Description("The Peer service supports only two simultaneous users.")] Public Const NERR_InvalidMaxUsers = (NERR_BASE + 22)
[Description("The API return buffer is too small.")] Public Const NERR_BufTooSmall = (NERR_BASE + 23)
/* UNUSED BASE+24 */
/* UNUSED BASE+25 */
/* UNUSED BASE+26 */
[Description("A remote API error occurred.")] Public Const NERR_RemoteErr = (NERR_BASE + 27)
/* UNUSED BASE+28 */
/* UNUSED BASE+29 */
/* UNUSED BASE+30 */
[Description("An error occurred when opening or reading the configuration file.")] Public Const NERR_LanmanIniError = (NERR_BASE + 31)
/* UNUSED BASE+32 */
/* UNUSED BASE+33 */
/* UNUSED BASE+34 */
/* UNUSED BASE+35 */
[Description("A general network error occurred.")] Public Const NERR_NetworkError = (NERR_BASE + 36)
[Description("The Workstation service is in an inconsistent state. Restart the computer before restarting the Workstation service.")] Public Const NERR_WkstaInconsistentState = (NERR_BASE + 37)
[Description("The Workstation service has not been started.")] Public Const NERR_WkstaNotStarted = (NERR_BASE + 38)
[Description("The requested information is not available.")] Public Const NERR_BrowserNotStarted = (NERR_BASE + 39)
[Description("An internal Windows error occurred.")] Public Const NERR_InternalError = (NERR_BASE + 40)
[Description("The server is not configured for transactions.")] Public Const NERR_BadTransactConfig = (NERR_BASE + 41)
[Description("The requested API is not supported on the remote server.")] Public Const NERR_InvalidAPI = (NERR_BASE + 42)
[Description("The event name is invalid.")] Public Const NERR_BadEventName = (NERR_BASE + 43)
[Description("The computer name already exists on the network. Change it and restart the computer.")] Public Const NERR_DupNameReboot = (NERR_BASE + 44)
/*
 *      Config API related
 *              Error codes from BASE+45 to BASE+49
 */

/* UNUSED BASE+45 */
[Description("The specified component could not be found in the configuration information.")] Public Const NERR_CfgCompNotFound = (NERR_BASE + 46)
[Description("The specified parameter could not be found in the configuration information.")] Public Const NERR_CfgParamNotFound = (NERR_BASE + 47)
[Description("A line in the configuration file is too long.")] Public Const NERR_LineTooLong = (NERR_BASE + 49)

/*
 *      Spooler API related
 *              Error codes from BASE+50 to BASE+79
 */

[Description("The printer does not exist.")] Public Const NERR_QNotFound = (NERR_BASE + 50)
[Description("The print job does not exist.")] Public Const NERR_JobNotFound = (NERR_BASE + 51)
[Description("The printer destination cannot be found.")] Public Const NERR_DestNotFound = (NERR_BASE + 52)
[Description("The printer destination already exists.")] Public Const NERR_DestExists = (NERR_BASE + 53)
[Description("The printer queue already exists.")] Public Const NERR_QExists = (NERR_BASE + 54)
[Description("No more printers can be added.")] Public Const NERR_QNoRoom = (NERR_BASE + 55)
[Description("No more print jobs can be added.")] Public Const NERR_JobNoRoom = (NERR_BASE + 56)
[Description("No more printer destinations can be added.")] Public Const NERR_DestNoRoom = (NERR_BASE + 57)
[Description("This printer destination is idle and cannot accept control operations.")] Public Const NERR_DestIdle  = (NERR_BASE + 58)
[Description("This printer destination request contains an invalid control function.")] Public Const NERR_DestInvalidOp = (NERR_BASE + 59)
[Description("The print processor is not responding.")] Public Const NERR_ProcNoRespond = (NERR_BASE + 60)
[Description("The spooler is not running.")] Public Const NERR_SpoolerNotLoaded = (NERR_BASE + 61)
[Description("This operation cannot be performed on the print destination in its current state.")] Public Const NERR_DestInvalidState = (NERR_BASE + 62)
[Description("This operation cannot be performed on the printer queue in its current state.")] Public Const NERR_QInvalidState = (NERR_BASE + 63)
[Description("This operation cannot be performed on the print job in its current state.")] Public Const NERR_JobInvalidState = (NERR_BASE + 64)
[Description("A spooler memory allocation failure occurred.")] Public Const NERR_SpoolNoMemory = (NERR_BASE + 65)
[Description("The device driver does not exist.")] Public Const NERR_DriverNotFound = (NERR_BASE + 66)
[Description("The data type is not supported by the print processor.")] Public Const NERR_DataTypeInvalid = (NERR_BASE + 67)
[Description("The print processor is not installed.")] Public Const NERR_ProcNotFound = (NERR_BASE + 68)

/*
 *      Service API related
 *              Error codes from BASE+80 to BASE+99
 */

[Description("The service database is locked.")] Public Const NERR_ServiceTableLocked = (NERR_BASE + 80)
[Description("The service table is full.")] Public Const NERR_ServiceTableFull = (NERR_BASE + 81)
[Description("The requested service has already been started.")] Public Const NERR_ServiceInstalled = (NERR_BASE + 82)
[Description("The service does not respond to control actions.")] Public Const NERR_ServiceEntryLocked = (NERR_BASE + 83)
[Description("The service has not been started.")] Public Const NERR_ServiceNotInstalled = (NERR_BASE + 84)
[Description("The service name is invalid.")] Public Const NERR_BadServiceName = (NERR_BASE + 85)
[Description("The service is not responding to the control function.")] Public Const NERR_ServiceCtlTimeout = (NERR_BASE + 86)
[Description("The service control is busy.")] Public Const NERR_ServiceCtlBusy = (NERR_BASE + 87)
[Description("The configuration file contains an invalid service program name.")] Public Const NERR_BadServiceProgName = (NERR_BASE + 88)
[Description("The service could not be controlled in its present state.")] Public Const NERR_ServiceNotCtrl = (NERR_BASE + 89)
[Description("The service ended abnormally.")] Public Const NERR_ServiceKillProc = (NERR_BASE + 90)
[Description("The requested pause, continue, or stop is not valid for this service.")] Public Const NERR_ServiceCtlNotValid = (NERR_BASE + 91)
[Description("The service control dispatcher could not find the service name in the dispatch table.")] Public Const NERR_NotInDispatchTbl = (NERR_BASE + 92)
[Description("The service control dispatcher pipe read failed.")] Public Const NERR_BadControlRecv = (NERR_BASE + 93)
[Description("A thread for the new service could not be created.")] Public Const NERR_ServiceNotStarting = (NERR_BASE + 94)

/*
 *      Wksta and Logon API related
 *              Error codes from BASE+100 to BASE+118
 */

[Description("This workstation is already logged on to the local-area network.")] Public Const NERR_AlreadyLoggedOn = (NERR_BASE + 100)
[Description("The workstation is not logged on to the local-area network.")] Public Const NERR_NotLoggedOn = (NERR_BASE + 101)
[Description("The user name or group name parameter is invalid.")] Public Const NERR_BadUsername = (NERR_BASE + 102)
[Description("The password parameter is invalid.")] Public Const NERR_BadPassword = (NERR_BASE + 103)
[Description("@W The logon processor did not add the message alias.")] Public Const NERR_UnableToAddName_W = (NERR_BASE + 104)
[Description("The logon processor did not add the message alias.")] Public Const NERR_UnableToAddName_F = (NERR_BASE + 105)
[Description("@W The logoff processor did not delete the message alias.")] Public Const NERR_UnableToDelName_W = (NERR_BASE + 106)
[Description("The logoff processor did not delete the message alias.")] Public Const NERR_UnableToDelName_F = (NERR_BASE + 107)
/* UNUSED BASE+108 */
[Description("Network logons are paused.")] Public Const NERR_LogonsPaused = (NERR_BASE + 109)
[Description("A centralized logon-server conflict occurred.")] Public Const NERR_LogonServerConflict = (NERR_BASE + 110)
[Description("The server is configured without a valid user path.")] Public Const NERR_LogonNoUserPath = (NERR_BASE + 111)
[Description("An error occurred while loading or running the logon script.")] Public Const NERR_LogonScriptError = (NERR_BASE + 112)
/* UNUSED BASE+113 */
[Description("The logon server was not specified. Your computer will be logged on as STANDALONE.")] Public Const NERR_StandaloneLogon = (NERR_BASE + 114)
[Description("The logon server could not be found.")] Public Const NERR_LogonServerNotFound = (NERR_BASE + 115)
[Description("There is already a logon domain for this computer.")] Public Const NERR_LogonDomainExists = (NERR_BASE + 116)
[Description("The logon server could not validate the logon.")] Public Const NERR_NonValidatedLogon = (NERR_BASE + 117)

/*
 *      ACF API related (access, user, group)
 *              Error codes from BASE+119 to BASE+149
 */

[Description("The security database could not be found.")] Public Const NERR_ACFNotFound = (NERR_BASE + 119)
[Description("The group name could not be found.")] Public Const NERR_GroupNotFound = (NERR_BASE + 120)
[Description("The user name could not be found.")] Public Const NERR_UserNotFound = (NERR_BASE + 121)
[Description("The resource name could not be found.")] Public Const NERR_ResourceNotFound = (NERR_BASE + 122)
[Description("The group already exists.")] Public Const NERR_GroupExists = (NERR_BASE + 123)
[Description("The account already exists.")] Public Const NERR_UserExists = (NERR_BASE + 124)
[Description("The resource permission list already exists.")] Public Const NERR_ResourceExists = (NERR_BASE + 125)
[Description("This operation is only allowed on the primary domain controller of the domain.")] Public Const NERR_NotPrimary = (NERR_BASE + 126)
[Description("The security database has not been started.")] Public Const NERR_ACFNotLoaded = (NERR_BASE + 127)
[Description("There are too many names in the user accounts database.")] Public Const NERR_ACFNoRoom = (NERR_BASE + 128)
[Description("A disk I/O failure occurred.")] Public Const NERR_ACFFileIOFail = (NERR_BASE + 129)
[Description("The limit of 64 entries per resource was exceeded.")] Public Const NERR_ACFTooManyLists = (NERR_BASE + 130)
[Description("Deleting a user with a session is not allowed.")] Public Const NERR_UserLogon = (NERR_BASE + 131)
[Description("The parent directory could not be located.")] Public Const NERR_ACFNoParent = (NERR_BASE + 132)
[Description("Unable to add to the security database session cache segment.")] Public Const NERR_CanNotGrowSegment = (NERR_BASE + 133)
[Description("This operation is not allowed on this special group.")] Public Const NERR_SpeGroupOp = (NERR_BASE + 134)
[Description("This user is not cached in user accounts database session cache.")] Public Const NERR_NotInCache = (NERR_BASE + 135)
[Description("The user already belongs to this group.")] Public Const NERR_UserInGroup = (NERR_BASE + 136)
[Description("The user does not belong to this group.")] Public Const NERR_UserNotInGroup = (NERR_BASE + 137)
[Description("This user account is undefined.")] Public Const NERR_AccountUndefined = (NERR_BASE + 138)
[Description("This user account has expired.")] Public Const NERR_AccountExpired = (NERR_BASE + 139)
[Description("The user is not allowed to log on from this workstation.")] Public Const NERR_InvalidWorkstation = (NERR_BASE + 140)
[Description("The user is not allowed to log on at this time.")] Public Const NERR_InvalidLogonHours = (NERR_BASE + 141)
[Description("The password of this user has expired.")] Public Const NERR_PasswordExpired = (NERR_BASE + 142)
[Description("The password of this user cannot change.")] Public Const NERR_PasswordCantChange = (NERR_BASE + 143)
[Description("This password cannot be used now.")] Public Const NERR_PasswordHistConflict = (NERR_BASE + 144)
[Description("The password does not meet the password policy requirements. Check the minimum password length, password complexity and password history requirements.")] Public Const NERR_PasswordTooShort = (NERR_BASE + 145)
[Description("The password of this user is too recent to change.")] Public Const NERR_PasswordTooRecent = (NERR_BASE + 146)
[Description("The security database is corrupted.")] Public Const NERR_InvalidDatabase = (NERR_BASE + 147)
[Description("No updates are necessary to this replicant network/local security database.")] Public Const NERR_DatabaseUpToDate = (NERR_BASE + 148)
[Description("This replicant database is outdated; synchronization is required.")] Public Const NERR_SyncRequired = (NERR_BASE + 149)

/*
 *      Use API related
 *              Error codes from BASE+150 to BASE+169
 */

[Description("The network connection could not be found.")] Public Const NERR_UseNotFound = (NERR_BASE + 150)
[Description("This asg_type is invalid.")] Public Const NERR_BadAsgType = (NERR_BASE + 151)
[Description("This device is currently being shared.")] Public Const NERR_DeviceIsShared = (NERR_BASE + 152)
[Description("The user name may not be same as computer name.")] Public Const NERR_SameAsComputerName = (NERR_BASE + 153)


/*
 *      Message Server related
 *              Error codes BASE+170 to BASE+209
 */

[Description("The computer name could not be added as a message alias. The name may already exist on the network.")] Public Const NERR_NoComputerName = (NERR_BASE + 170)
[Description("The Messenger service is already started.")] Public Const NERR_MsgAlreadyStarted = (NERR_BASE + 171)
[Description("The Messenger service failed to start.")] Public Const NERR_MsgInitFailed = (NERR_BASE + 172)
[Description("The message alias could not be found on the network.")] Public Const NERR_NameNotFound = (NERR_BASE + 173)
[Description("This message alias has already been forwarded.")] Public Const NERR_AlreadyForwarded = (NERR_BASE + 174)
[Description("This message alias has been added but is still forwarded.")] Public Const NERR_AddForwarded = (NERR_BASE + 175)
[Description("This message alias already exists locally.")] Public Const NERR_AlreadyExists = (NERR_BASE + 176)
[Description("The maximum number of added message aliases has been exceeded.")] Public Const NERR_TooManyNames = (NERR_BASE + 177)
[Description("The computer name could not be deleted.")] Public Const NERR_DelComputerName = (NERR_BASE + 178)
[Description("Messages cannot be forwarded back to the same workstation.")] Public Const NERR_LocalForward = (NERR_BASE + 179)
[Description("An error occurred in the domain message processor.")] Public Const NERR_GrpMsgProcessor = (NERR_BASE + 180)
[Description("The message was sent, but the recipient has paused the Messenger service.")] Public Const NERR_PausedRemote = (NERR_BASE + 181)
[Description("The message was sent but not received.")] Public Const NERR_BadReceive = (NERR_BASE + 182)
[Description("The message alias is currently in use. Try again later.")] Public Const NERR_NameInUse = (NERR_BASE + 183)
[Description("The Messenger service has not been started.")] Public Const NERR_MsgNotStarted = (NERR_BASE + 184)
[Description("The name is not on the local computer.")] Public Const NERR_NotLocalName = (NERR_BASE + 185)
[Description("The forwarded message alias could not be found on the network.")] Public Const NERR_NoForwardName = (NERR_BASE + 186)
[Description("The message alias table on the remote station is full.")] Public Const NERR_RemoteFull = (NERR_BASE + 187)
[Description("Messages for this alias are not currently being forwarded.")] Public Const NERR_NameNotForwarded = (NERR_BASE + 188)
[Description("The broadcast message was truncated.")] Public Const NERR_TruncatedBroadcast = (NERR_BASE + 189)
[Description("This is an invalid device name.")] Public Const NERR_InvalidDevice = (NERR_BASE + 194)
[Description("A write fault occurred.")] Public Const NERR_WriteFault = (NERR_BASE + 195)
/* UNUSED BASE+196 */
[Description("A duplicate message alias exists on the network.")] Public Const NERR_DuplicateName = (NERR_BASE + 197)
[Description("@W This message alias will be deleted later.")] Public Const NERR_DeleteLater = (NERR_BASE + 198)
[Description("The message alias was not successfully deleted from all networks.")] Public Const NERR_IncompleteDel = (NERR_BASE + 199)
[Description("This operation is not supported on computers with multiple networks.")] Public Const NERR_MultipleNets = (NERR_BASE + 200)

/*
 *      Server API related
 *              Error codes BASE+210 to BASE+229
 */

[Description("This shared resource does not exist.")] Public Const NERR_NetNameNotFound = (NERR_BASE + 210)
[Description("This device is not shared.")] Public Const NERR_DeviceNotShared = (NERR_BASE + 211)
[Description("A session does not exist with that computer name.")] Public Const NERR_ClientNameNotFound = (NERR_BASE + 212)
[Description("There is not an open file with that identification number.")] Public Const NERR_FileIdNotFound = (NERR_BASE + 214)
[Description("A failure occurred when executing a remote administration command.")] Public Const NERR_ExecFailure = (NERR_BASE + 215)
[Description("A failure occurred when opening a remote temporary file.")] Public Const NERR_TmpFile = (NERR_BASE + 216)
[Description("The data returned from a remote administration command has been truncated to 64K.")] Public Const NERR_TooMuchData = (NERR_BASE + 217)
[Description("This device cannot be shared as both a spooled and a non-spooled resource.")] Public Const NERR_DeviceShareConflict = (NERR_BASE + 218)
[Description("The information in the list of servers may be incorrect.")] Public Const NERR_BrowserTableIncomplete = (NERR_BASE + 219)
[Description("The computer is not active in this domain.")] Public Const NERR_NotLocalDomain = (NERR_BASE + 220)
[Description("The share must be removed from the Distributed File System before it can be deleted.")] Public Const NERR_IsDfsShare = (NERR_BASE + 221)

/*
 *      CharDev API related
 *              Error codes BASE+230 to BASE+249
 */

/* UNUSED BASE+230 */
[Description("The operation is invalid for this device.")] Public Const NERR_DevInvalidOpCode = (NERR_BASE + 231)
[Description("This device cannot be shared.")] Public Const NERR_DevNotFound = (NERR_BASE + 232)
[Description("This device was not open.")] Public Const NERR_DevNotOpen = (NERR_BASE + 233)
[Description("This device name list is invalid.")] Public Const NERR_BadQueueDevString = (NERR_BASE + 234)
[Description("The queue priority is invalid.")] Public Const NERR_BadQueuePriority = (NERR_BASE + 235)
[Description("There are no shared communication devices.")] Public Const NERR_NoCommDevs = (NERR_BASE + 237)
[Description("The queue you specified does not exist.")] Public Const NERR_QueueNotFound = (NERR_BASE + 238)
[Description("This list of devices is invalid.")] Public Const NERR_BadDevString = (NERR_BASE + 240)
[Description("The requested device is invalid.")] Public Const NERR_BadDev = (NERR_BASE + 241)
[Description("This device is already in use by the spooler.")] Public Const NERR_InUseBySpooler = (NERR_BASE + 242)
[Description("This device is already in use as a communication device.")] Public Const NERR_CommDevInUse = (NERR_BASE + 243)

/*
 *      NetICanonicalize and NetIType and NetIMakeLMFileName
 *      NetIListCanon and NetINameCheck
 *              Error codes BASE+250 to BASE+269
 */

[Description("This computer name is invalid.")] Public Const NERR_InvalidComputer = (NERR_BASE + 251)
/* UNUSED BASE+252 */
/* UNUSED BASE+253 */
[Description("The string and prefix specified are too long.")] Public Const NERR_MaxLenExceeded = (NERR_BASE + 254)
/* UNUSED BASE+255 */
[Description("This path component is invalid.")] Public Const NERR_BadComponent = (NERR_BASE + 256)
[Description("Could not determine the type of input.")] Public Const NERR_CantType = (NERR_BASE + 257)
/* UNUSED BASE+258 */
/* UNUSED BASE+259 */
[Description("The buffer for types is not big enough.")] Public Const NERR_TooManyEntries = (NERR_BASE + 262)

/*
 *      NetProfile
 *              Error codes BASE+270 to BASE+276
 */

[Description("Profile files cannot exceed 64K.")] Public Const NERR_ProfileFileTooBig = (NERR_BASE + 270)
[Description("The start offset is out of range.")] Public Const NERR_ProfileOffset = (NERR_BASE + 271)
[Description("The system cannot delete current connections to network resources.")] Public Const NERR_ProfileCleanup = (NERR_BASE + 272)
[Description("The system was unable to parse the command line in this file.")] Public Const NERR_ProfileUnknownCmd = (NERR_BASE + 273)
[Description("An error occurred while loading the profile file.")] Public Const NERR_ProfileLoadErr = (NERR_BASE + 274)
[Description("@W Errors occurred while saving the profile file. The profile was partially saved.")] Public Const NERR_ProfileSaveErr = (NERR_BASE + 275)


/*
 *      NetAudit and NetErrorLog
 *              Error codes BASE+277 to BASE+279
 */

[Description("Log file %1 is full.")] Public Const NERR_LogOverflow  = (NERR_BASE + 277)
[Description("This log file has changed between reads.")] Public Const NERR_LogFileChanged = (NERR_BASE + 278)
[Description("Log file %1 is corrupt.")] Public Const NERR_LogFileCorrupt = (NERR_BASE + 279)


/*
 *      NetRemote
 *              Error codes BASE+280 to BASE+299
 */
[Description("The source path cannot be a directory.")] Public Const NERR_SourceIsDir = (NERR_BASE + 280)
[Description("The source path is illegal.")] Public Const NERR_BadSource = (NERR_BASE + 281)
[Description("The destination path is illegal.")] Public Const NERR_BadDest = (NERR_BASE + 282)
[Description("The source and destination paths are on different servers.")] Public Const NERR_DifferentServers = (NERR_BASE + 283)
/* UNUSED BASE+284 */
[Description("The Run server you requested is paused.")] Public Const NERR_RunSrvPaused = (NERR_BASE + 285)
/* UNUSED BASE+286 */
/* UNUSED BASE+287 */
/* UNUSED BASE+288 */
[Description("An error occurred when communicating with a Run server.")] Public Const NERR_ErrCommRunSrv = (NERR_BASE + 289)
/* UNUSED BASE+290 */
[Description("An error occurred when starting a background process.")] Public Const NERR_ErrorExecingGhost = (NERR_BASE + 291)
[Description("The shared resource you are connected to could not be found.")] Public Const NERR_ShareNotFound = (NERR_BASE + 292)
/* UNUSED BASE+293 */
/* UNUSED BASE+294 */


/*
 *  NetWksta.sys (redir) returned error codes.
 *
 *          NERR_BASE + (300-329)
 */

[Description("The LAN adapter number is invalid.")] Public Const NERR_InvalidLana = (NERR_BASE + 300)
[Description("There are open files on the connection.")] Public Const NERR_OpenFiles = (NERR_BASE + 301)
[Description("Active connections still exist.")] Public Const NERR_ActiveConns = (NERR_BASE + 302)
[Description("This share name or password is invalid.")] Public Const NERR_BadPasswordCore = (NERR_BASE + 303)
[Description("The device is being accessed by an active process.")] Public Const NERR_DevInUse  = (NERR_BASE + 304)
[Description("The drive letter is in use locally.")] Public Const NERR_LocalDrive = (NERR_BASE + 305)

/*
 *  Alert error codes.
 *
 *          NERR_BASE + (330-339)
 */
[Description("The specified client is already registered for the specified event.")] Public Const NERR_AlertExists = (NERR_BASE + 330)
[Description("The alert table is full.")] Public Const NERR_TooManyAlerts = (NERR_BASE + 331)
[Description("An invalid or nonexistent alert name was raised.")] Public Const NERR_NoSuchAlert = (NERR_BASE + 332)
[Description("The alert recipient is invalid.")] Public Const NERR_BadRecipient = (NERR_BASE + 333)
[Description("A user's session with this server has been deleted because the user's logon hours are no longer valid.")] Public Const NERR_AcctLimitExceeded = (NERR_BASE + 334)

/*
 *  Additional Error and Audit log codes.
 *
 *          NERR_BASE +(340-343)
 */
[Description("The log file does not contain the requested record number.")] Public Const NERR_InvalidLogSeek = (NERR_BASE + 340)
/* UNUSED BASE+341 */
/* UNUSED BASE+342 */
/* UNUSED BASE+343 */

/*
 *  Additional UAS and NETLOGON codes
 *
 *          NERR_BASE +(350-359)
 */
[Description("The user accounts database is not configured correctly.")] Public Const NERR_BadUasConfig = (NERR_BASE + 350)
[Description("This operation is not permitted when the Netlogon service is running.")] Public Const NERR_InvalidUASOp = (NERR_BASE + 351)
[Description("This operation is not allowed on the last administrative account.")] Public Const NERR_LastAdmin = (NERR_BASE + 352)
[Description("Could not find domain controller for this domain.")] Public Const NERR_DCNotFound = (NERR_BASE + 353)
[Description("Could not set logon information for this user.")] Public Const NERR_LogonTrackingError = (NERR_BASE + 354)
[Description("The Netlogon service has not been started.")] Public Const NERR_NetlogonNotStarted = (NERR_BASE + 355)
[Description("Unable to add to the user accounts database.")] Public Const NERR_CanNotGrowUASFile = (NERR_BASE + 356)
[Description("This server's clock is not synchronized with the primary domain controller's clock.")] Public Const NERR_TimeDiffAtDC = (NERR_BASE + 357)
[Description("A password mismatch has been detected.")] Public Const NERR_PasswordMismatch = (NERR_BASE + 358)


/*
 *  Server Integration error codes.
 *
 *          NERR_BASE +(360-369)
 */
[Description("The server identification does not specify a valid server.")] Public Const NERR_NoSuchServer = (NERR_BASE + 360)
[Description("The session identification does not specify a valid session.")] Public Const NERR_NoSuchSession = (NERR_BASE + 361)
[Description("The connection identification does not specify a valid connection.")] Public Const NERR_NoSuchConnection = (NERR_BASE + 362)
[Description("There is no space for another entry in the table of available servers.")] Public Const NERR_TooManyServers = (NERR_BASE + 363)
[Description("The server has reached the maximum number of sessions it supports.")] Public Const NERR_TooManySessions = (NERR_BASE + 364)
[Description("The server has reached the maximum number of connections it supports.")] Public Const NERR_TooManyConnections = (NERR_BASE + 365)
[Description("The server cannot open more files because it has reached its maximum number.")] Public Const NERR_TooManyFiles = (NERR_BASE + 366)
[Description("There are no alternate servers registered on this server.")] Public Const NERR_NoAlternateServers = (NERR_BASE + 367)
/* UNUSED BASE+368 */
/* UNUSED BASE+369 */

[Description("Try down-level (remote admin protocol) version of API instead.")] Public Const NERR_TryDownLevel = (NERR_BASE + 370)

/*
 *  UPS error codes.
 *
 *          NERR_BASE + (380-384)
 */
[Description("The UPS driver could not be accessed by the UPS service.")] Public Const NERR_UPSDriverNotStarted = (NERR_BASE + 380)
[Description("The UPS service is not configured correctly.")] Public Const NERR_UPSInvalidConfig = (NERR_BASE + 381)
[Description("The UPS service could not access the specified Comm Port.")] Public Const NERR_UPSInvalidCommPort = (NERR_BASE + 382)
[Description("The UPS indicated a line fail or low battery situation. Service not started.")] Public Const NERR_UPSSignalAsserted = (NERR_BASE + 383)
[Description("The UPS service failed to perform a system shut down.")] Public Const NERR_UPSShutdownFailed = (NERR_BASE + 384)

/*
 *  Remoteboot error codes.
 *
 *          NERR_BASE + (400-419)
 *          Error codes 400 - 405 are used by RPLBOOT.SYS.
 *          Error codes 403, 407 - 416 are used by RPLLOADR.COM,
 *          Error code 417 is the alerter message of REMOTEBOOT (RPLSERVR.EXE).
 *          Error code 418 is for when REMOTEBOOT can't start
 *          Error code 419 is for a disallowed 2nd rpl connection
 *
 */
[Description("The program below returned an MS-DOS error code:")] Public Const NERR_BadDosRetCode = (NERR_BASE + 400)
[Description("The program below needs more memory:")] Public Const NERR_ProgNeedsExtraMem = (NERR_BASE + 401)
[Description("The program below called an unsupported MS-DOS function:")] Public Const NERR_BadDosFunction = (NERR_BASE + 402)
[Description("The workstation failed to boot.")] Public Const NERR_RemoteBootFailed = (NERR_BASE + 403)
[Description("The file below is corrupt.")] Public Const NERR_BadFileCheckSum = (NERR_BASE + 404)
[Description("No loader is specified in the boot-block definition file.")] Public Const NERR_NoRplBootSystem = (NERR_BASE + 405)
[Description("NetBIOS returned an error: The NCB and SMB are dumped above.")] Public Const NERR_RplLoadrNetBiosErr = (NERR_BASE + 406)
[Description("A disk I/O error occurred.")] Public Const NERR_RplLoadrDiskErr = (NERR_BASE + 407)
[Description("Image parameter substitution failed.")] Public Const NERR_ImageParamErr = (NERR_BASE + 408)
[Description("Too many image parameters cross disk sector boundaries.")] Public Const NERR_TooManyImageParams = (NERR_BASE + 409)
[Description("The image was not generated from an MS-DOS diskette formatted with /S.")] Public Const NERR_NonDosFloppyUsed = (NERR_BASE + 410)
[Description("Remote boot will be restarted later.")] Public Const NERR_RplBootRestart = (NERR_BASE + 411)
[Description("The call to the Remoteboot server failed.")] Public Const NERR_RplSrvrCallFailed = (NERR_BASE + 412)
[Description("Cannot connect to the Remoteboot server.")] Public Const NERR_CantConnectRplSrvr = (NERR_BASE + 413)
[Description("Cannot open image file on the Remoteboot server.")] Public Const NERR_CantOpenImageFile = (NERR_BASE + 414)
[Description("Connecting to the Remoteboot server...")] Public Const NERR_CallingRplSrvr = (NERR_BASE + 415)
[Description("Connecting to the Remoteboot server...")] Public Const NERR_StartingRplBoot = (NERR_BASE + 416)
[Description("Remote boot service was stopped; check the error log for the cause of the problem.")] Public Const NERR_RplBootServiceTerm = (NERR_BASE + 417)
[Description("Remote boot startup failed; check the error log for the cause of the problem.")] Public Const NERR_RplBootStartFailed = (NERR_BASE + 418)
[Description("A second connection to a Remoteboot resource is not allowed.")] Public Const NERR_RPL_CONNECTED = (NERR_BASE + 419)

/*
 *  FTADMIN API error codes
 *
 *       NERR_BASE + (425-434)
 *
 *       (Currently not used in NT)
 *
 */

/*
 *  Browser service API error codes
 *
 *       NERR_BASE + (450-475)
 *
 */
[Description("The browser service was configured with MaintainServerList=No.")] Public Const NERR_BrowserConfiguredToNotRun = (NERR_BASE + 450)

/*
 *  Additional Remoteboot error codes.
 *
 *          NERR_BASE + (510-550)
 */
[Description("Service failed to start since none of the network adapters started with this service.")] Public Const NERR_RplNoAdaptersStarted = (NERR_BASE + 510)
[Description("Service failed to start due to bad startup information in the registry.")] Public Const NERR_RplBadRegistry = (NERR_BASE + 511)
[Description("Service failed to start because its database is absent or corrupt.")] Public Const NERR_RplBadDatabase = (NERR_BASE + 512)
[Description("Service failed to start because RPLFILES share is absent.")] Public Const NERR_RplRplfilesShare  = (NERR_BASE + 513)
[Description("Service failed to start because RPLUSER group is absent.")] Public Const NERR_RplNotRplServer = (NERR_BASE + 514)
[Description("Cannot enumerate service records.")] Public Const NERR_RplCannotEnum  = (NERR_BASE + 515)
[Description("Workstation record information has been corrupted.")] Public Const NERR_RplWkstaInfoCorrupted = (NERR_BASE + 516)
[Description("Workstation record was not found.")] Public Const NERR_RplWkstaNotFound  = (NERR_BASE + 517)
[Description("Workstation name is in use by some other workstation.")] Public Const NERR_RplWkstaNameUnavailable = (NERR_BASE + 518)
[Description("Profile record information has been corrupted.")] Public Const NERR_RplProfileInfoCorrupted = (NERR_BASE + 519)
[Description("Profile record was not found.")] Public Const NERR_RplProfileNotFound = (NERR_BASE + 520)
[Description("Profile name is in use by some other profile.")] Public Const NERR_RplProfileNameUnavailable = (NERR_BASE + 521)
[Description("There are workstations using this profile.")] Public Const NERR_RplProfileNotEmpty = (NERR_BASE + 522)
[Description("Configuration record information has been corrupted.")] Public Const NERR_RplConfigInfoCorrupted = (NERR_BASE + 523)
[Description("Configuration record was not found.")] Public Const NERR_RplConfigNotFound = (NERR_BASE + 524)
[Description("Adapter id record information has been corrupted.")] Public Const NERR_RplAdapterInfoCorrupted = (NERR_BASE + 525)
[Description("An internal service error has occurred.")] Public Const NERR_RplInternal  = (NERR_BASE + 526)
[Description("Vendor id record information has been corrupted.")] Public Const NERR_RplVendorInfoCorrupted = (NERR_BASE + 527)
[Description("Boot block record information has been corrupted.")] Public Const NERR_RplBootInfoCorrupted = (NERR_BASE + 528)
[Description("The user account for this workstation record is missing.")] Public Const NERR_RplWkstaNeedsUserAcct = (NERR_BASE + 529)
[Description("The RPLUSER local group could not be found.")] Public Const NERR_RplNeedsRPLUSERAcct  = (NERR_BASE + 530)
[Description("Boot block record was not found.")] Public Const NERR_RplBootNotFound = (NERR_BASE + 531)
[Description("Chosen profile is incompatible with this workstation.")] Public Const NERR_RplIncompatibleProfile = (NERR_BASE + 532)
[Description("Chosen network adapter id is in use by some other workstation.")] Public Const NERR_RplAdapterNameUnavailable = (NERR_BASE + 533)
[Description("There are profiles using this configuration.")] Public Const NERR_RplConfigNotEmpty = (NERR_BASE + 534)
[Description("There are workstations, profiles or configurations using this boot block.")] Public Const NERR_RplBootInUse = (NERR_BASE + 535)
[Description("Service failed to backup Remoteboot database.")] Public Const NERR_RplBackupDatabase = (NERR_BASE + 536)
[Description("Adapter record was not found.")] Public Const NERR_RplAdapterNotFound = (NERR_BASE + 537)
[Description("Vendor record was not found.")] Public Const NERR_RplVendorNotFound = (NERR_BASE + 538)
[Description("Vendor name is in use by some other vendor record.")] Public Const NERR_RplVendorNameUnavailable = (NERR_BASE + 539)
[Description("(boot name, vendor id) is in use by some other boot block record.")] Public Const NERR_RplBootNameUnavailable = (NERR_BASE + 540)
[Description("Configuration name is in use by some other configuration.")] Public Const NERR_RplConfigNameUnavailable = (NERR_BASE + 541)

/**INTERNAL_ONLY**/

/*
 *  Dfs API error codes.
 *
 *          NERR_BASE + (560-590)
 */

[Description("The internal database maintained by the DFS service is corrupt")] Public Const NERR_DfsInternalCorruption = (NERR_BASE + 560)
[Description("One of the records in the internal DFS database is corrupt")] Public Const NERR_DfsVolumeDataCorrupt = (NERR_BASE + 561)
[Description("There is no DFS name whose entry path matches the input Entry Path")] Public Const NERR_DfsNoSuchVolume = (NERR_BASE + 562)
[Description("A root or link with the given name already exists")] Public Const NERR_DfsVolumeAlreadyExists = (NERR_BASE + 563)
[Description("The server share specified is already shared in the DFS")] Public Const NERR_DfsAlreadyShared  = (NERR_BASE + 564)
[Description("The indicated server share does not support the indicated DFS namespace")] Public Const NERR_DfsNoSuchShare = (NERR_BASE + 565)
[Description("The operation is not valid on this portion of the namespace")] Public Const NERR_DfsNotALeafVolume = (NERR_BASE + 566)
[Description("The operation is not valid on this portion of the namespace")] Public Const NERR_DfsLeafVolume  = (NERR_BASE + 567)
[Description("The operation is ambiguous because the link has multiple servers")] Public Const NERR_DfsVolumeHasMultipleServers = (NERR_BASE + 568)
[Description("Unable to create a link")] Public Const NERR_DfsCantCreateJunctionPoint = (NERR_BASE + 569)
[Description("The server is not DFS Aware")] Public Const NERR_DfsServerNotDfsAware = (NERR_BASE + 570)
[Description("The specified rename target path is invalid")] Public Const NERR_DfsBadRenamePath  = (NERR_BASE + 571)
[Description("The specified DFS link is offline")] Public Const NERR_DfsVolumeIsOffline = (NERR_BASE + 572)
[Description("The specified server is not a server for this link")] Public Const NERR_DfsNoSuchServer = (NERR_BASE + 573)
[Description("A cycle in the DFS name was detected")] Public Const NERR_DfsCyclicalName = (NERR_BASE + 574)
[Description("The operation is not supported on a server-based DFS")] Public Const NERR_DfsNotSupportedInServerDfs = (NERR_BASE + 575)
[Description("This link is already supported by the specified server-share")] Public Const NERR_DfsDuplicateService  = (NERR_BASE + 576)
[Description("Can't remove the last server-share supporting this root or link")] Public Const NERR_DfsCantRemoveLastServerShare = (NERR_BASE + 577)
[Description("The operation is not supported for an Inter-DFS link")] Public Const NERR_DfsVolumeIsInterDfs  = (NERR_BASE + 578)
[Description("The internal state of the DFS Service has become inconsistent")] Public Const NERR_DfsInconsistent = (NERR_BASE + 579)
[Description("The DFS Service has been installed on the specified server")] Public Const NERR_DfsServerUpgraded = (NERR_BASE + 580)
[Description("The DFS data being reconciled is identical")] Public Const NERR_DfsDataIsIdentical = (NERR_BASE + 581)
[Description("The DFS root cannot be deleted - Uninstall DFS if required")] Public Const NERR_DfsCantRemoveDfsRoot = (NERR_BASE + 582)
[Description("A child or parent directory of the share is already in a DFS")] Public Const NERR_DfsChildOrParentInDfs = (NERR_BASE + 583)
[Description("DFS internal error")] Public Const NERR_DfsInternalError  = (NERR_BASE + 590)

/*
 *  Net setup error codes.
 *
 *          NERR_BASE + (591-600)
 */
[Description("This machine is already joined to a domain.")] Public Const NERR_SetupAlreadyJoined = (NERR_BASE + 591)
[Description("This machine is not currently joined to a domain.")] Public Const NERR_SetupNotJoined = (NERR_BASE + 592)
[Description("This machine is a domain controller and cannot be unjoined from a domain.")] Public Const NERR_SetupDomainController = (NERR_BASE + 593)
[Description("The destination domain controller does not support creating machine accounts in OUs.")] Public Const NERR_DefaultJoinRequired  = (NERR_BASE + 594)
[Description("The specified workgroup name is invalid.")] Public Const NERR_InvalidWorkgroupName = (NERR_BASE + 595)
[Description("The specified computer name is incompatible with the default language used on the domain controller.")] Public Const NERR_NameUsesIncompatibleCodePage = (NERR_BASE + 596)
[Description("The specified computer account could not be found. Contact an administrator to verify the account is in the domain. If the account has been deleted unjoin, reboot, and rejoin the domain.")] Public Const NERR_ComputerAccountNotFound = (NERR_BASE + 597)
[Description("This version of Windows cannot be joined to a domain.")] Public Const NERR_PersonalSku  = (NERR_BASE + 598)
[Description("An attempt to resolve the DNS name of a domain controller in the domain being joined has failed. Please verify this client is configured to reach a DNS server that can resolve DNS names in the target domain.")] Public Const NERR_SetupCheckDNSConfig  = (NERR_BASE + 599)
[Description("This device is joined to Azure AD. To join an Active Directory domain, you must first go to settings and choose to disconnect your device from your work or school.")] Public Const NERR_AlreadyCloudDomainJoined = (NERR_BASE + 600)

/*
 *  Some Password and account error results
 *
 *          NERR_BASE + (601 - 608)
*/
[Description("Password must change at next logon")] Public Const NERR_PasswordMustChange = (NERR_BASE + 601)
[Description("Account is locked out")] Public Const NERR_AccountLockedOut  = (NERR_BASE + 602)
[Description("Password is too long")] Public Const NERR_PasswordTooLong = (NERR_BASE + 603)
[Description("Password doesn't meet the complexity policy")] Public Const NERR_PasswordNotComplexEnough = (NERR_BASE + 604)
[Description("Password doesn't meet the requirements of the filter dll's")] Public Const NERR_PasswordFilterError  = (NERR_BASE + 605)

/*
 *  Error codes used for offline domain join and completion
 *
 *          NERR_BASE + (609 - 621)
 */
[Description("Offline join completion information was not found.")] Public Const NERR_NoOfflineJoinInfo = (NERR_BASE + 609)
[Description("The offline join completion information was bad.")] Public Const NERR_BadOfflineJoinInfo = (NERR_BASE + 610)
[Description("Unable to create offline join information. Please ensure you have access to the specified path location and permissions to modify its contents. Running as an elevated administrator may be required.")] Public Const NERR_CantCreateJoinInfo = (NERR_BASE + 611)
[Description("The domain join info being saved was incomplete or bad.")] Public Const NERR_BadDomainJoinInfo = (NERR_BASE + 612)
[Description("Offline join operation successfully completed but a restart is needed.")] Public Const NERR_JoinPerformedMustRestart = (NERR_BASE + 613)
[Description("There was no offline join operation pending.")] Public Const NERR_NoJoinPending  = (NERR_BASE + 614)
[Description("Unable to set one or more requested machine or domain name values on the local computer.")] Public Const NERR_ValuesNotSet = (NERR_BASE + 615)
[Description("Could not verify the current machine's hostname against the saved value in the join completion information.")] Public Const NERR_CantVerifyHostname = (NERR_BASE + 616)
[Description("Unable to load the specified offline registry hive. Please ensure you have access to the specified path location and permissions to modify its contents. Running as an elevated administrator may be required.")] Public Const NERR_CantLoadOfflineHive  = (NERR_BASE + 617)
[Description("The minimum session security requirements for this operation were not met.")] Public Const NERR_ConnectionInsecure = (NERR_BASE + 618)
[Description("Computer account provisioning blob version is not supported.")] Public Const NERR_ProvisioningBlobUnsupported = (NERR_BASE + 619)
[Description("The specified domain controller does not meet the version requirement for this operation. Please select a domain controller capable of issuing claims.")] Public Const NERR_DS8DCRequired  = (NERR_BASE + 620)
[Description("This operation requires a domain controller which supports LDAP. Please select an LDAP-capable domain controller.")] Public Const NERR_LDAPCapableDCRequired = (NERR_BASE + 621)

/*
 *  Additional error codes
 *
 *          NERR_BASE + (622 - MAX)
 */
[Description("A domain controller which meets the version requirement for this operation could not be located. Please ensure that a domain controller capable of issuing claims is available.")] Public Const NERR_DS8DCNotFound  = (NERR_BASE + 622)
[Description("The Windows version of the specified image does not support provisioning.")] Public Const NERR_TargetVersionUnsupported = (NERR_BASE + 623)
[Description("The machine name is blocked from joining the domain.")] Public Const NERR_InvalidMachineNameForJoin = (NERR_BASE + 624)
[Description("The domain controller does not meet the version requirement for this operation. See http://go.microsoft.com/fwlink/?LinkId=294288 for more information.")] Public Const NERR_DS9DCNotFound  = (NERR_BASE + 625)
[Description("The local machine does not allow querying of LSA secrets in plain-text.")] Public Const NERR_PlainTextSecretsRequired = (NERR_BASE + 626)
[Description("Unable to leave the Azure AD domain that this machine is joined to. Check the event log for detailed error information.")] Public Const NERR_CannotUnjoinAadDomain = (NERR_BASE + 627)
[Description("Unable to update hostname in Azure AD. Check the event log for detailed error information.")] Public Const NERR_CannotUpdateAadHostName = (NERR_BASE + 628)
[Description("The hostname is already taken by another device.")] Public Const NERR_DuplicateHostName = (NERR_BASE + 629)
[Description("The hostname is too long.")] Public Const NERR_HostNameTooLong = (NERR_BASE + 630)
[Description("Too many hostnames specified for the device.")] Public Const NERR_TooManyHostNames  = (NERR_BASE + 631)

Public Const SERVICE_WORKSTATION  = "LanmanWorkstation"
Public Const SERVICE_LM20_WORKSTATION  = "WORKSTATION"
Public Const WORKSTATION_DISPLAY_NAME  = "Workstation"
Public Const SERVICE_SERVER  = "LanmanServer"
Public Const SERVICE_LM20_SERVER  = "SERVER"
Public Const SERVER_DISPLAY_NAME  = "Server"
Public Const SERVICE_BROWSER  = "BROWSER"
Public Const SERVICE_LM20_BROWSER  = SERVICE_BROWSER
Public Const SERVICE_MESSENGER  = "MESSENGER"
Public Const SERVICE_LM20_MESSENGER  = SERVICE_MESSENGER
Public Const SERVICE_NETRUN  = "NETRUN"
Public Const SERVICE_LM20_NETRUN  = SERVICE_NETRUN
Public Const SERVICE_SPOOLER  = "SPOOLER"
Public Const SERVICE_LM20_SPOOLER  = SERVICE_SPOOLER
Public Const SERVICE_ALERTER  = "ALERTER"
Public Const SERVICE_LM20_ALERTER  = SERVICE_ALERTER
Public Const SERVICE_NETLOGON  = "NETLOGON"
Public Const SERVICE_LM20_NETLOGON  = SERVICE_NETLOGON
Public Const SERVICE_NETPOPUP  = "NETPOPUP"
Public Const SERVICE_LM20_NETPOPUP  = SERVICE_NETPOPUP
Public Const SERVICE_SQLSERVER  = "SQLSERVER"
Public Const SERVICE_LM20_SQLSERVER  = SERVICE_SQLSERVER
Public Const SERVICE_REPL  = "REPLICATOR"
Public Const SERVICE_LM20_REPL  = SERVICE_REPL
Public Const SERVICE_RIPL  = "REMOTEBOOT"
Public Const SERVICE_LM20_RIPL  = SERVICE_RIPL
Public Const SERVICE_TIMESOURCE  = "TIMESOURCE"
Public Const SERVICE_LM20_TIMESOURCE  = SERVICE_TIMESOURCE
Public Const SERVICE_AFP  = "AFP"
Public Const SERVICE_LM20_AFP  = SERVICE_AFP
Public Const SERVICE_UPS  = "UPS"
Public Const SERVICE_LM20_UPS  = SERVICE_UPS
Public Const SERVICE_XACTSRV  = "XACTSRV"
Public Const SERVICE_LM20_XACTSRV  = SERVICE_XACTSRV
Public Const SERVICE_TCPIP  = "TCPIP"
Public Const SERVICE_LM20_TCPIP  = SERVICE_TCPIP
Public Const SERVICE_NBT  = "NBT"
Public Const SERVICE_LM20_NBT  = SERVICE_NBT
Public Const SERVICE_LMHOSTS  = "LMHOSTS"
Public Const SERVICE_LM20_LMHOSTS  = SERVICE_LMHOSTS
Public Const SERVICE_TELNET  = "Telnet"
Public Const SERVICE_LM20_TELNET  = SERVICE_TELNET
Public Const SERVICE_SCHEDULE  = "Schedule"
Public Const SERVICE_LM20_SCHEDULE  = SERVICE_SCHEDULE
Public Const SERVICE_NTLMSSP  = "NtLmSsp"
Public Const SERVICE_DHCP  = "DHCP"
Public Const SERVICE_LM20_DHCP  = SERVICE_DHCP
Public Const SERVICE_NWSAP  = "NwSapAgent"
Public Const SERVICE_LM20_NWSAP  = SERVICE_NWSAP
Public Const NWSAP_DISPLAY_NAME  = "NW Sap Agent"
Public Const SERVICE_NWCS  = "NWCWorkstation"
Public Const SERVICE_DNS_CACHE  = "DnsCache"
Public Const SERVICE_W32TIME  = "w32time"
Public Const SERVCE_LM20_W32TIME  = SERVICE_W32TIME
Public Const SERVICE_KDC  = "kdc"
Public Const SERVICE_LM20_KDC  = SERVICE_KDC
Public Const SERVICE_RPCLOCATOR  = "RPCLOCATOR"
Public Const SERVICE_LM20_RPCLOCATOR  = SERVICE_RPCLOCATOR
Public Const SERVICE_TRKSVR  = "TrkSvr"
Public Const SERVICE_LM20_TRKSVR  = SERVICE_TRKSVR
Public Const SERVICE_TRKWKS  = "TrkWks"
Public Const SERVICE_LM20_TRKWKS  = SERVICE_TRKWKS
Public Const SERVICE_NTFRS  = "NtFrs"
Public Const SERVICE_LM20_NTFRS  = SERVICE_NTFRS
Public Const SERVICE_ISMSERV  = "IsmServ"
Public Const SERVICE_LM20_ISMSERV  = SERVICE_ISMSERV
Public Const SERVICE_NTDS  = "NTDS"
Public Const SERVICE_LM20_NTDS  = SERVICE_NTDS
Public Const SERVICE_ADWS  = "ADWS"
Public Const SERVICE_DSROLE  = "DsRoleSvc"
Public Const SERVICE_LM20_DSROLE  = SERVICE_DSROLE


Public Enum usriPrivilege
    USER_PRIV_GUEST = 0
    USER_PRIV_USER = 1
    USER_PRIV_ADMIN = 2
End Enum
Public Enum usriFlags
    UF_SCRIPT = &H0001
    UF_ACCOUNTDISABLE = &H0002
    UF_HOMEDIR_REQUIRED = &H0008
    UF_LOCKOUT = &H0010
    UF_PASSWD_NOTREQD = &H0020
    UF_PASSWD_CANT_CHANGE = &H0040
    UF_ENCRYPTED_TEXT_PASSWORD_ALLOWED = &H0080
    UF_TEMP_DUPLICATE_ACCOUNT = &H0100
    UF_NORMAL_ACCOUNT = &H0200
    UF_INTERDOMAIN_TRUST_ACCOUNT = &H0800
    UF_WORKSTATION_TRUST_ACCOUNT = &H1000
    UF_SERVER_TRUST_ACCOUNT = &H2000
    UF_DONT_EXPIRE_PASSWD = &H10000
    UF_MNS_LOGON_ACCOUNT = &H20000
    UF_SMARTCARD_REQUIRED = &H40000
    UF_TRUSTED_FOR_DELEGATION = &H80000
    UF_NOT_DELEGATED = &H100000
    UF_USE_DES_KEY_ONLY = &H200000
    UF_DONT_REQUIRE_PREAUTH = &H400000
    UF_PASSWORD_EXPIRED = &H800000
    UF_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION = &H1000000
    UF_NO_AUTH_DATA_REQUIRED = &H2000000
    UF_PARTIAL_SECRETS_ACCOUNT = &H4000000
    UF_USE_AES_KEYS = &H8000000
End Enum
Public Enum usriAuthFlags
    AF_OP_PRINT = &H1
    AF_OP_COMM = &H2
    AF_OP_SERVER = &H4
    AF_OP_ACCOUNTS = &H8
End Enum
Public Type USER_INFO_0
    usri0_name As LongPtr
End Type
Public Type USER_INFO_1
    usri1_name As LongPtr
    usri1_password As LongPtr
    usri1_password_age As Long
    usri1_priv As usriPrivilege
    usri1_home_dir As LongPtr
    usri1_comment As LongPtr
    usri1_flags As usriFlags
    usri1_script_path As LongPtr
End Type
Public Type USER_INFO_2
    usri2_name As LongPtr
    usri2_password As LongPtr
    usri2_password_age As Long
    usri2_priv As usriPrivilege
    usri2_home_dir As LongPtr
    usri2_comment As LongPtr
    usri2_flags As usriFlags
    usri2_script_path As LongPtr
    usri2_auth_flags As usriAuthFlags
    usri2_full_name As LongPtr
    usri2_usr_comment As LongPtr
    usri2_parms As LongPtr
    usri2_workstations As LongPtr
    usri2_last_logon As Long
    usri2_last_logoff As Long
    usri2_acct_expires As Long
    usri2_max_storage As Long
    usri2_units_per_week As Long
    usri2_logon_hours As LongPtr
    usri2_bad_pw_count As Long
    usri2_num_logons As Long
    usri2_logon_server As LongPtr
    usri2_country_code As Long
    usri2_code_page As Long
End Type
Public Type USER_INFO_3
    usri3_name As LongPtr
    usri3_password As LongPtr
    usri3_password_age As Long
    usri3_priv As usriPrivilege
    usri3_home_dir As LongPtr
    usri3_comment As LongPtr
    usri3_flags As usriFlags
    usri3_script_path As LongPtr
    usri3_auth_flags As usriAuthFlags
    usri3_full_name As LongPtr
    usri3_usr_comment As LongPtr
    usri3_parms As LongPtr
    usri3_workstations As LongPtr
    usri3_last_logon As Long
    usri3_last_logoff As Long
    usri3_acct_expires As Long
    usri3_max_storage As Long
    usri3_units_per_week As Long
    usri3_logon_hours As LongPtr
    usri3_bad_pw_count As Long
    usri3_num_logons As Long
    usri3_logon_server As LongPtr
    usri3_country_code As Long
    usri3_code_page As Long
    usri3_user_id As Long
    usri3_primary_group_id As Long
    usri3_profile As LongPtr
    usri3_home_dir_drive As LongPtr
    usri3_password_expired As Long
End Type
Public Type USER_INFO_4
    usri4_name As LongPtr
    usri4_password As LongPtr
    usri4_password_age As Long
    usri4_priv As usriPrivilege
    usri4_home_dir As LongPtr
    usri4_comment As LongPtr
    usri4_flags As usriFlags
    usri4_script_path As LongPtr
    usri4_auth_flags As usriAuthFlags
    usri4_full_name As LongPtr
    usri4_usr_comment As LongPtr
    usri4_parms As LongPtr
    usri4_workstations As LongPtr
    usri4_last_logon As Long
    usri4_last_logoff As Long
    usri4_acct_expires As Long
    usri4_max_storage As Long
    usri4_units_per_week As Long
    usri4_logon_hours As LongPtr
    usri4_bad_pw_count As Long
    usri4_num_logons As Long
    usri4_logon_server As LongPtr
    usri4_country_code As Long
    usri4_code_page As Long
    usri4_user_sid As LongPtr
    usri4_primary_group_id As Long
    usri4_profile As LongPtr
    usri4_home_dir_drive As LongPtr
    usri4_password_expired As Long
End Type
Public Type USER_INFO_10
    usri10_name As LongPtr
    usri10_comment As LongPtr
    usri10_usr_comment As LongPtr
    usri10_full_name As LongPtr
End Type
Public Type USER_INFO_11
    usri11_name As LongPtr
    usri11_comment As LongPtr
    usri11_usr_comment As LongPtr
    usri11_full_name As LongPtr
    usri11_priv As usriPrivilege
    usri11_auth_flags As usriAuthFlags
    usri11_password_age As Long
    usri11_home_dir As LongPtr
    usri11_parms As LongPtr
    usri11_last_logon As Long
    usri11_last_logoff As Long
    usri11_bad_pw_count As Long
    usri11_num_logons As Long
    usri11_logon_server As LongPtr
    usri11_country_code As Long
    usri11_workstations As LongPtr
    usri11_max_storage As Long
    usri11_units_per_week As Long
    usri11_logon_hours As LongPtr
    usri11_code_page As Long
End Type
Public Type USER_INFO_20
    usri20_name As LongPtr
    usri20_full_name As LongPtr
    usri20_comment As LongPtr
    usri20_flags As usriFlags
    usri20_user_id As Long
End Type
Public Type USER_INFO_21
    usri21_password(0 To (ENCRYPTED_PWLEN - 1)) As Byte
End Type
Public Type USER_INFO_22
    usri22_name As LongPtr
    usri22_password(0 To (ENCRYPTED_PWLEN - 1)) As Byte
    usri22_password_age As Long
    usri22_priv As usriPrivilege
    usri22_home_dir As LongPtr
    usri22_comment As LongPtr
    usri22_flags As usriFlags
    usri22_script_path As LongPtr
    usri22_auth_flags As usriAuthFlags
    usri22_full_name As LongPtr
    usri22_usr_comment As LongPtr
    usri22_parms As LongPtr
    usri22_workstations As LongPtr
    usri22_last_logon As Long
    usri22_last_logoff As Long
    usri22_acct_expires As Long
    usri22_max_storage As Long
    usri22_units_per_week As Long
    usri22_logon_hours As LongPtr
    usri22_bad_pw_count As Long
    usri22_num_logons As Long
    usri22_logon_server As LongPtr
    usri22_country_code As Long
    usri22_code_page As Long
End Type
Public Type USER_INFO_23
    usri23_name As LongPtr
    usri23_full_name As LongPtr
    usri23_comment As LongPtr
    usri23_flags As usriFlags
    usri23_user_sid As LongPtr
End Type
Public Type USER_INFO_24
    usri24_internet_identity As BOOL
    usri24_flags As Long
    usri24_internet_provider_name As LongPtr
    usri24_internet_principal_name As LongPtr
    usri23_user_sid As LongPtr
End Type
Public Type USER_INFO_1003
    usri1003_password As LongPtr
End Type
Public Type USER_INFO_1005
    usri1005_priv As usriPrivilege
End Type
Public Type USER_INFO_1006
    usri1006_home_dir As LongPtr
End Type
Public Type USER_INFO_1007
    usri1007_comment As LongPtr
End Type
Public Type USER_INFO_1008
    usri1008_flags As usriFlags
End Type
Public Type USER_INFO_1009
    usri1009_script_path As LongPtr
End Type
Public Type USER_INFO_1010
    usri1010_auth_flags As usriAuthFlags
End Type
Public Type USER_INFO_1011
    usri1011_full_name As LongPtr
End Type
Public Type USER_INFO_1012
    usri1012_usr_comment As LongPtr
End Type
Public Type USER_INFO_1013
    usri1013_parms As LongPtr
End Type
Public Type USER_INFO_1014
    usri1014_workstations As LongPtr
End Type
Public Type USER_INFO_1017
    usri1017_acct_expires As Long
End Type
Public Type USER_INFO_1018
    usri1018_max_storage As Long
End Type
Public Type USER_INFO_1020
    usri1020_units_per_week As Long
    usri1020_logon_hours As LongPtr
End Type
Public Type USER_INFO_1023
    usri1023_logon_server As LongPtr
End Type
Public Type USER_INFO_1024
    usri1024_country_code As Long
End Type
Public Type USER_INFO_1025
    usri1025_code_page As Long
End Type
Public Type USER_INFO_1051
    usri1051_primary_group_id As Long
End Type
Public Type USER_INFO_1052
    usri1052_profile As LongPtr
End Type
Public Type USER_INFO_1053
    usri1053_home_dir_drive As LongPtr
End Type

Public Const NULL_USERSETINFO_PASSWD  = "              "
Public Const TIMEQ_FOREVER As Long = (-1)
Public Const USER_MAXSTORAGE_UNLIMITED As Long = (-1)
Public Const USER_NO_LOGOFF As Long = (-1)
Public Const UNITS_PER_DAY  = 24
Public Const UNITS_PER_WEEK  = UNITS_PER_DAY * 7


Public Enum NETUSER_LG_FLAGS
    LG_INCLUDE_INDIRECT = (&H0001)
End Enum

Public Enum NETUSER_ENUMFILTER
    FILTER_TEMP_DUPLICATE_ACCOUNT = (&H0001)
    FILTER_NORMAL_ACCOUNT = (&H0002)
    FILTER_PROXY_ACCOUNT = (&H0004)
    FILTER_INTERDOMAIN_TRUST_ACCOUNT = (&H0008)
    FILTER_WORKSTATION_TRUST_ACCOUNT = (&H0010)
    FILTER_SERVER_TRUST_ACCOUNT = (&H0020)
End Enum

Public Type GROUP_USERS_INFO_0
    grui0_name As LongPtr
End Type

Public Const GROUPIDMASK = &H8000&

Public Type GROUP_USERS_INFO_1
    grui1_name As LongPtr
    grui1_attributes As GROUP_SID_ATTRIBUTES
End Type

Public Const GROUP_SPECIALGRP_USERS  = "USERS"
Public Const GROUP_SPECIALGRP_ADMINS  = "ADMINS"
Public Const GROUP_SPECIALGRP_GUESTS  = "GUESTS"
Public Const GROUP_SPECIALGRP_LOCAL  = "LOCAL"


Public Type LOCALGROUP_USERS_INFO_0
    lgrui0_name As LongPtr
End Type

Public Type WKSTA_INFO_100
    wki100_platform_id As Long
    wki100_computername As String
    wki100_langroup As String
    wki100_ver_major As Long
    wki100_ver_minor As Long
End Type
Public Type WKSTA_INFO_101
    wki101_platform_id As Long
    wki101_computername As String
    wki101_langroup As String
    wki101_ver_major As Long
    wki101_ver_minor As Long
    wki101_lanroot As String
End Type
Public Type WKSTA_INFO_102
    wki102_platform_id As Long
    wki102_computername As String
    wki102_langroup As String
    wki102_ver_major As Long
    wki102_ver_minor As Long
    wki102_lanroot As String
    wki102_logged_on_users As Long
End Type

Public Type WKSTA_USER_INFO_0
    wkui0_username As String
End Type
Public Type WKSTA_USER_INFO_1
    wkui1_username As String
    wkui1_logon_domain As String
    wkui1_oth_domains As String
    wkui1_logon_server As String
End Type
Public Type WKSTA_USER_INFO_1101
    wkui1101_oth_domains As String
End Type

Public Type TIME_OF_DAY_INFO
    tod_elapsedt As Long
    tod_msecs As Long
    tod_hours As Long
    tod_mins As Long
    tod_secs As Long
    tod_hunds As Long
    tod_timezone As Long
    tod_tinterval As Long
    tod_day As Long
    tod_month As Long
    tod_year As Long
    tod_weekday As Long
End Type

Public Type LOCALGROUP_INFO_0
    lgrpi0_name As LongPtr
End Type
Public Type LOCALGROUP_INFO_1
    lgrpi1_name As LongPtr
    lgrpi1_comment As LongPtr
End Type
Public Type LOCALGROUP_INFO_1002
    lgrpi1002_comment As LongPtr
End Type

Public Type LOCALGROUP_MEMBERS_INFO_0
    lgrmi0_sid As LongPtr
End Type
Public Type LOCALGROUP_MEMBERS_INFO_1
    lgrmi1_sid As LongPtr
    lgrmi1_sidusage As SID_NAME_USE
    lgrmi1_name As LongPtr
End Type
Public Type LOCALGROUP_MEMBERS_INFO_2
    lgrmi2_sid As LongPtr
    lgrmi2_sidusage As SID_NAME_USE
    lgrmi2_domainandname As LongPtr
End Type
Public Type LOCALGROUP_MEMBERS_INFO_3
    lgrmi3_domainandname As LongPtr
End Type

Public Type GROUP_INFO_0
    grpi0_name As LongPtr
End Type
Public Type GROUP_INFO_1
    grpi1_name As LongPtr
    grpi1_comment As LongPtr
End Type
Public Type GROUP_INFO_3
    grpi3_name As LongPtr
    grpi3_comment As LongPtr
    grpi3_group_sid As LongPtr
    grpi3_attributes As GROUP_SID_ATTRIBUTES
End Type
Public Type GROUP_INFO_1002
    grpi1002_comment As LongPtr
End Type
Public Type GROUP_INFO_1005
    grpi1005_attributes As GROUP_SID_ATTRIBUTES
End Type

Public Enum NETUSER_UAS_ROLE
    UAS_ROLE_STANDALONE = 0
    UAS_ROLE_MEMBER = 1
    UAS_ROLE_BACKUP = 2
    UAS_ROLE_PRIMARY = 3
End Enum

Public Type USER_MODALS_INFO_0
    usrmod0_min_passwd_len As Long
    usrmod0_max_passwd_age As Long
    usrmod0_min_passwd_age As Long
    usrmod0_force_logoff As Long
    usrmod0_password_hist_len As Long
End Type
Public Type USER_MODALS_INFO_1
    usrmod1_role As NETUSER_UAS_ROLE
    usrmod1_primary As LongPtr
End Type
Public Type USER_MODALS_INFO_2
    usrmod2_domain_name As LongPtr
    usrmod2_domain_id As LongPtr
End Type
Public Type USER_MODALS_INFO_3
    usrmod3_lockout_duration As Long
    usrmod3_lockout_observation_window As Long
    usrmod3_lockout_threshold As Long
End Type
Public Type USER_MODALS_INFO_1001
    usrmod1001_min_passwd_len As Long
End Type
Public Type USER_MODALS_INFO_1002
    usrmod1002_max_passwd_age As Long
End Type
Public Type USER_MODALS_INFO_1003
    usrmod1003_min_passwd_age As Long
End Type
Public Type USER_MODALS_INFO_1004
    usrmod1004_force_logoff As Long
End Type
Public Type USER_MODALS_INFO_1005
    usrmod1005_password_hist_len As Long
End Type
Public Type USER_MODALS_INFO_1006
    usrmod1006_role As NETUSER_UAS_ROLE
End Type
Public Type USER_MODALS_INFO_1007
    usrmod1007_primary As LongPtr
End Type

Public Enum NETUSER_MODALS_PARM
    MODALS_MIN_PASSWD_LEN_PARMNUM = 1
    MODALS_MAX_PASSWD_AGE_PARMNUM = 2
    MODALS_MIN_PASSWD_AGE_PARMNUM = 3
    MODALS_FORCE_LOGOFF_PARMNUM = 4
    MODALS_PASSWD_HIST_LEN_PARMNUM = 5
    MODALS_ROLE_PARMNUM = 6
    MODALS_PRIMARY_PARMNUM = 7
    MODALS_DOMAIN_NAME_PARMNUM = 8
    MODALS_DOMAIN_ID_PARMNUM = 9
    MODALS_LOCKOUT_DURATION_PARMNUM = 10
    MODALS_LOCKOUT_OBSERVATION_WINDOW_PARMNUM = 11
    MODALS_LOCKOUT_THRESHOLD_PARMNUM = 12
End Enum

Public Enum NETUSER_USI_PARMERR
    USER_NAME_PARMNUM = 1
    USER_PASSWORD_PARMNUM = 3
    USER_PASSWORD_AGE_PARMNUM = 4
    USER_PRIV_PARMNUM = 5
    USER_HOME_DIR_PARMNUM = 6
    USER_COMMENT_PARMNUM = 7
    USER_FLAGS_PARMNUM = 8
    USER_SCRIPT_PATH_PARMNUM = 9
    USER_AUTH_FLAGS_PARMNUM = 10
    USER_FULL_NAME_PARMNUM = 11
    USER_USR_COMMENT_PARMNUM = 12
    USER_PARMS_PARMNUM = 13
    USER_WORKSTATIONS_PARMNUM = 14
    USER_LAST_LOGON_PARMNUM = 15
    USER_LAST_LOGOFF_PARMNUM = 16
    USER_ACCT_EXPIRES_PARMNUM = 17
    USER_MAX_STORAGE_PARMNUM = 18
    USER_UNITS_PER_WEEK_PARMNUM = 19
    USER_LOGON_HOURS_PARMNUM = 20
    USER_PAD_PW_COUNT_PARMNUM = 21
    USER_NUM_LOGONS_PARMNUM = 22
    USER_LOGON_SERVER_PARMNUM = 23
    USER_COUNTRY_CODE_PARMNUM = 24
    USER_CODE_PAGE_PARMNUM = 25
    USER_PRIMARY_GROUP_PARMNUM = 51
    USER_PROFILE = 52  ' ?? Delete when convenient
    USER_PROFILE_PARMNUM = 52
    USER_HOME_DIR_DRIVE_PARMNUM = 53
End Enum

Public Enum NET_VALIDATE_PASSWORD_TYPE
    NetValidateAuthentication = 1
    NetValidatePasswordChange
    NetValidatePasswordReset
End Enum

Public Type NET_VALIDATE_PASSWORD_HASH
    Length As Long
    Hash As LongPtr
End Type

Public Enum NETUSER_VALIDATE_PASSWD
    NET_VALIDATE_PASSWORD_LAST_SET = &H00000001
    NET_VALIDATE_BAD_PASSWORD_TIME = &H00000002
    NET_VALIDATE_LOCKOUT_TIME = &H00000004
    NET_VALIDATE_BAD_PASSWORD_COUNT = &H00000008
    NET_VALIDATE_PASSWORD_HISTORY_LENGTH = &H00000010
    NET_VALIDATE_PASSWORD_HISTORY = &H00000020
End Enum

Public Type NET_VALIDATE_PERSISTED_FIELDS
    PresentFields As NETUSER_VALIDATE_PASSWD
    PasswordLastSet As FILETIME
    BadPasswordTime As FILETIME
    LockoutTime As FILETIME
    BadPasswordCount As Long
    PasswordHistoryLength As Long
    PasswordHistory As LongPtr
End Type

Public Type NET_VALIDATE_OUTPUT_ARG
    ChangedPersistedFields As NET_VALIDATE_PERSISTED_FIELDS
    ValidationStatus As Long
End Type

Public Type NET_VALIDATE_AUTHENTICATION_INPUT_ARG
    InputPersistedFields As NET_VALIDATE_PERSISTED_FIELDS
    PasswordMatched As Byte
End Type

Public Type NET_VALIDATE_PASSWORD_CHANGE_INPUT_ARG
    InputPersistedFields As NET_VALIDATE_PERSISTED_FIELDS
    ClearPassword As LongPtr
    UserAccountName As LongPtr
    HashedPassword As NET_VALIDATE_PASSWORD_HASH
    PasswordMatch As Byte
End Type

Public Type NET_VALIDATE_PASSWORD_RESET_INPUT_ARG
    InputPersistedFields As NET_VALIDATE_PERSISTED_FIELDS
    ClearPassword As LongPtr
    UserAccountName As LongPtr
    HashedPassword As NET_VALIDATE_PASSWORD_HASH
    PasswordMustChangeAtNextLogon As Byte
    ClearLockout As Byte
End Type

Public Enum NETUSER_GROUP_PARM
    GROUP_ALL_PARMNUM = 0
    GROUP_NAME_PARMNUM = 1
    GROUP_COMMENT_PARMNUM = 2
    GROUP_ATTRIBUTES_PARMNUM = 3
End Enum
Public Enum NETUSER_LOCALGROUP_PARM
    LOCALGROUP_NAME_PARMNUM = 1
    LOCALGROUP_COMMENT_PARMNUM = 2
End Enum

Public Type NET_DISPLAY_USER
    usri1_name As LongPtr
    usri1_comment As LongPtr
    usri1_flags As usriFlags
    usri1_full_name As LongPtr
    usri1_user_id As Long
    usri1_next_index As Long
End Type

Public Type NET_DISPLAY_MACHINE
    usri2_name As LongPtr
    usri2_comment As LongPtr
    usri2_flags As usriFlags
    usri2_user_id As Long
    usri2_next_index As Long
End Type

Public Type NET_DISPLAY_GROUP
    grpi3_name As LongPtr
    grpi3_comment As LongPtr
    grpi3_group_id As Long
    grpi3_attributes As GROUP_SID_ATTRIBUTES
    grpi3_next_index As Long
End Type

Public Enum NETUSER_ACL_ATTR
    ACCESS_AUDIT = &H1
    ACCESS_SUCCESS_OPEN = &H10
    ACCESS_SUCCESS_WRITE = &H20
    ACCESS_SUCCESS_DELETE = &H40
    ACCESS_SUCCESS_ACL = &H80
    ACCESS_SUCCESS_MASK = &HF0
    ACCESS_FAIL_OPEN = &H100
    ACCESS_FAIL_WRITE = &H200
    ACCESS_FAIL_DELETE = &H400
    ACCESS_FAIL_ACL = &H800
    ACCESS_FAIL_MASK = &HF00
    ACCESS_FAIL_SHIFT = 4
End Enum

Public Type ACCESS_INFO_0
    acc0_resource_name As LongPtr
End Type

Public Type ACCESS_INFO_1
    acc1_resource_name As LongPtr
    acc1_attr As NETUSER_ACL_ATTR
    acc1_count As Long
End Type

Public Type ACCESS_INFO_1002
    acc1002_attr As NETUSER_ACL_ATTR
End Type


Public Type ACCESS_LIST
    acl_ugname As LongPtr
    acl_access As LM_ACCESS_FLAGS
End Type

Public Enum NETUSER_ACCESS_PARMNUM
    ACCESS_RESOURCE_NAME_PARMNUM = 1
    ACCESS_ATTR_PARMNUM = 2
    ACCESS_COUNT_PARMNUM = 3
    ACCESS_ACCESS_LIST_PARMNUM = 4
End Enum

Public Const MAXPERMENTRIES = 64

Public Enum SHARE_INFO_TYPES
    STYPE_DISKTREE = 0
    STYPE_PRINTQ = 1
    STYPE_DEVICE = 2
    STYPE_IPC = 3
    STYPE_MASK = &H000000FF  ' AND with shi_type to
    STYPE_RESERVED1 = &H01000000  ' Reserved for internal processing
    STYPE_RESERVED2 = &H02000000
    STYPE_RESERVED3 = &H04000000
    STYPE_RESERVED4 = &H08000000
    STYPE_RESERVED5 = &H00100000
    STYPE_RESERVED_ALL = &H3FFFFF00
    STYPE_TEMPORARY = &H40000000
    STYPE_SPECIAL = &H80000000
End Enum
Public Enum SHARE_INFO_FLAGS
    SHI1005_FLAGS_DFS = &H0001  ' Share is in the DFS
    SHI1005_FLAGS_DFS_ROOT = &H0002  ' Share is root of DFS
    CSC_MASK_EXT = &H2030  ' Used to mask off the following states (including SHI1005_FLAGS_ENABLE_HASH)
    CSC_MASK = &H0030  ' Used to mask off the following states
    CSC_CACHE_MANUAL_REINT = &H0000  ' No automatic file by file reintegration
    CSC_CACHE_AUTO_REINT = &H0010  ' File by file reintegration is OK
    CSC_CACHE_VDO = &H0020  ' no need to flow opens
    CSC_CACHE_NONE = &H0030  ' no CSC for this share
    SHI1005_FLAGS_RESTRICT_EXCLUSIVE_OPENS = &H000100  ' Used to disallow read-deny read behavior
    SHI1005_FLAGS_FORCE_SHARED_DELETE = &H000200  ' Used to allows force shared delete
    SHI1005_FLAGS_ALLOW_NAMESPACE_CACHING = &H000400  ' The clients may cache the namespace
    SHI1005_FLAGS_ACCESS_BASED_DIRECTORY_ENUM = &H000800  ' Trim visible files in enumerations based on access
    SHI1005_FLAGS_FORCE_LEVELII_OPLOCK = &H001000  ' Only issue level2 oplock
    SHI1005_FLAGS_ENABLE_HASH = &H002000  ' Enable hash generation and retrieval requests from share
    SHI1005_FLAGS_ENABLE_CA = &H004000  ' Enable continuously available
    SHI1005_FLAGS_ENCRYPT_DATA = &H008000&  ' Require encryption
    SHI1005_FLAGS_RESERVED = &H010000  ' Reserved for internal use
    SHI1005_FLAGS_DISABLE_CLIENT_BUFFERING = &H020000  ' Used to set the allowed client buffering
    SHI1005_FLAGS_IDENTITY_REMOTING = &H040000  ' Allows auth tunneling
    SHI1005_FLAGS_CLUSTER_MANAGED = &H080000  ' Used to prevent share from being modified by users
    SHI1005_FLAGS_COMPRESS_DATA = &H100000  ' Request compression
    SHI1005_FLAGS_ISOLATED_TRANSPORT = &H200000  ' Request asymmetric connections for this share
    SHI1005_FLAGS_DISABLE_DIRECTORY_HANDLE_LEASING = &H400000  ' Used to disable handle caching for directories
'  The subset of 1005 infolevel flags that can be set via the API
    SHI1005_VALID_FLAGS_SET = (CSC_MASK Or SHI1005_FLAGS_RESTRICT_EXCLUSIVE_OPENS Or SHI1005_FLAGS_FORCE_SHARED_DELETE Or SHI1005_FLAGS_ALLOW_NAMESPACE_CACHING Or SHI1005_FLAGS_ACCESS_BASED_DIRECTORY_ENUM Or SHI1005_FLAGS_FORCE_LEVELII_OPLOCK Or SHI1005_FLAGS_ENABLE_HASH Or SHI1005_FLAGS_ENABLE_CA Or SHI1005_FLAGS_ENCRYPT_DATA Or SHI1005_FLAGS_DISABLE_CLIENT_BUFFERING Or SHI1005_FLAGS_IDENTITY_REMOTING Or SHI1005_FLAGS_CLUSTER_MANAGED Or SHI1005_FLAGS_RESERVED Or SHI1005_FLAGS_COMPRESS_DATA Or SHI1005_FLAGS_ISOLATED_TRANSPORT Or SHI1005_FLAGS_DISABLE_DIRECTORY_HANDLE_LEASING)
End Enum
 
Public Const SHI_USES_UNLIMITED  = -1
Public Type SHARE_INFO_0
    shi0_netname As LongPtr
End Type
Public Type SHARE_INFO_1
    shi1_netname As LongPtr
    shi1_type As SHARE_INFO_TYPES
    shi1_remark As LongPtr
End Type
Public Type SHARE_INFO_2
    shi2_netname As LongPtr
    shi2_type As SHARE_INFO_TYPES
    shi2_remark As LongPtr
    shi2_permissions As LM_ACCESS_FLAGS
    shi2_max_uses As Long
    shi2_current_uses As Long
    shi2_path As LongPtr
    shi2_passwd As LongPtr
End Type
Public Type SHARE_INFO_501
    shi501_netname As LongPtr
    shi501_type As SHARE_INFO_TYPES
    shi501_remark As LongPtr
    shi501_flags As SHARE_INFO_FLAGS
End Type
Public Type SHARE_INFO_502
    shi502_netname As LongPtr
    shi502_type As SHARE_INFO_TYPES
    shi502_remark As LongPtr
    shi502_permissions As LM_ACCESS_FLAGS
    shi502_max_uses As Long
    shi502_current_uses As Long
    shi502_path As LongPtr
    shi502_passwd As LongPtr
    shi502_reserved As Long
    shi502_security_descriptor As LongPtr
End Type
Public Type SHARE_INFO_503
    shi503_netname As LongPtr
    shi503_type As SHARE_INFO_TYPES
    shi503_remark As LongPtr
    shi503_permissions As LM_ACCESS_FLAGS
    shi503_max_uses As Long
    shi503_current_uses As Long
    shi503_path As LongPtr
    shi503_passwd As LongPtr
    shi503_servername As LongPtr
    shi503_reserved As Long
    shi503_security_descriptor As LongPtr
End Type
Public Type SHARE_INFO_1004
    shi1004_remark As LongPtr
End Type
Public Type SHARE_INFO_1005
    shi1005_flags As SHARE_INFO_FLAGS
End Type
Public Type SHARE_INFO_1006
    shi1006_max_uses As Long
End Type
Public Type SHARE_INFO_1501
    shi1501_reserved As Long
    shi1501_security_descriptor As LongPtr 'PSECURITY_DESCRIPTOR
End Type
Public Type SHARE_INFO_1503
    shi1503_sharefilter As UUID
End Type
Public Type SERVER_ALIAS_INFO_0
    srvai0_alias As LongPtr
    srvai0_target As LongPtr
    srvai0_default As Byte
    srvai0_reserved As Long
End Type

Public Enum SHARE_PARM_ERR
    SHARE_NETNAME_PARMNUM = 1
    SHARE_TYPE_PARMNUM = 3
    SHARE_REMARK_PARMNUM = 4
    SHARE_PERMISSIONS_PARMNUM = 5
    SHARE_MAX_USES_PARMNUM = 6
    SHARE_CURRENT_USES_PARMNUM = 7
    SHARE_PATH_PARMNUM = 8
    SHARE_PASSWD_PARMNUM = 9
    SHARE_FILE_SD_PARMNUM = 501
    SHARE_SERVER_PARMNUM = 503
    SHARE_QOS_POLICY_PARMNUM = 504
End Enum

Public Const SHARE_REMARK_INFOLEVEL  = (PARMNUM_BASE_INFOLEVEL + SHARE_REMARK_PARMNUM)
Public Const SHARE_MAX_USES_INFOLEVEL  = (PARMNUM_BASE_INFOLEVEL + SHARE_MAX_USES_PARMNUM)
Public Const SHARE_FILE_SD_INFOLEVEL  = (PARMNUM_BASE_INFOLEVEL + SHARE_FILE_SD_PARMNUM)

Public Const SHI1_NUM_ELEMENTS  = 4
Public Const SHI2_NUM_ELEMENTS  = 10


Public Enum NET_SESSION_FLAGS
    SESS_GUEST = &H00000001  ' session is logged on as a guest
    SESS_NOENCRYPTION = &H00000002  ' session is not using encryption
End Enum
Public Type SESSION_INFO_0
    sesi0_cname As LongPtr ' client name (no backslashes)
End Type
Public Type SESSION_INFO_1
    sesi1_cname As LongPtr ' client name (no backslashes)
    sesi1_username As LongPtr
    sesi1_num_opens As Long
    sesi1_time As Long
    sesi1_idle_time As Long
    sesi1_user_flags As NET_SESSION_FLAGS
End Type
Public Type SESSION_INFO_2
    sesi2_cname As LongPtr ' client name (no backslashes)
    sesi2_username As LongPtr
    sesi2_num_opens As Long
    sesi2_time As Long
    sesi2_idle_time As Long
    sesi2_user_flags As NET_SESSION_FLAGS
    sesi2_cltype_name As LongPtr
End Type
Public Type SESSION_INFO_10
    sesi10_cname As LongPtr ' client name (no backslashes)
    sesi10_username As LongPtr
    sesi10_time As Long
    sesi10_idle_time As Long
End Type
Public Type SESSION_INFO_502
    sesi502_cname As LongPtr ' client name (no backslashes)
    sesi502_username As LongPtr
    sesi502_num_opens As Long
    sesi502_time As Long
    sesi502_idle_time As Long
    sesi502_user_flags As NET_SESSION_FLAGS
    sesi502_cltype_name As LongPtr
    sesi502_transport As LongPtr
End Type
Public Const SESI1_NUM_ELEMENTS  = 8
Public Const SESI2_NUM_ELEMENTS  = 9

Public Type CONNECTION_INFO_0
    coni0_id As Long
End Type
Public Type CONNECTION_INFO_1
    coni1_id As Long
    coni1_type As SHARE_INFO_TYPES
    coni1_num_opens As Long
    coni1_num_users As Long
    coni1_time As Long
    coni1_username As LongPtr
    coni1_netname As LongPtr
End Type
Public Type CONNECTION_INFO_50
    coni50_type As SHARE_INFO_TYPES
    coni50_num_opens As Long
    coni50_time As Long
    coni50_netname As LongPtr
    coni50_username As LongPtr
End Type

Public Enum NET_FILE_PERMISSIONS
    PERM_FILE_READ = &H1  ' user has read access
    PERM_FILE_WRITE = &H2  ' user has write access
    PERM_FILE_CREATE = &H4  ' user has create access
End Enum
Public Type FILE_INFO_0
    fi0_id As Long
End Type
Public Type FILE_INFO_1
    fi1_id As Long
    fi1_permissions As NET_FILE_PERMISSIONS
    fi1_num_locks As Long
    fi1_pathname As LongPtr
    fi1_username As LongPtr
End Type
Public Type FILE_INFO_2
    fi2_id As Long
End Type
Public Type FILE_INFO_3
    fi3_id As Long
    fi3_permissions As NET_FILE_PERMISSIONS
    fi3_num_locks As Long
    fi3_pathname As LongPtr
    fi3_username As LongPtr
End Type

Public Enum SERVER_CERTIFICATE_TYPE
    QUIC
End Enum

Public Type SERVER_CERTIFICATE_INFO_0
    srvci0_name As LongPtr
    srvci0_subject As LongPtr
    srvci0_issuer As LongPtr
    srvci0_thumbprint As LongPtr
    srvci0_friendlyname As LongPtr
    srvci0_notbefore As LongPtr
    srvci0_notafter As LongPtr
    srvci0_storelocation As LongPtr
    srvci0_storename As LongPtr
    srvci0_renewalchain As LongPtr
    srvci0_type As Long
    srvci0_flags As Long
    srvci0_mapping_status As Long
End Type

Public Type STAT_LM20_WORKSTATION_0
    stw0_start As Long
    stw0_numNCB_r As Long
    stw0_numNCB_s As Long
    stw0_numNCB_a As Long
    stw0_fiNCB_r As Long
    stw0_fiNCB_s As Long
    stw0_fiNCB_a As Long
    stw0_fcNCB_r As Long
    stw0_fcNCB_s As Long
    stw0_fcNCB_a As Long
    stw0_sesstart As Long
    stw0_sessfailcon As Long
    stw0_sessbroke As Long
    stw0_uses As Long
    stw0_usefail As Long
    stw0_autorec As Long
    stw0_bytessent_r_lo As Long
    stw0_bytessent_r_hi As Long
    stw0_bytesrcvd_r_lo As Long
    stw0_bytesrcvd_r_hi As Long
    stw0_bytessent_s_lo As Long
    stw0_bytessent_s_hi As Long
    stw0_bytesrcvd_s_lo As Long
    stw0_bytesrcvd_s_hi As Long
    stw0_bytessent_a_lo As Long
    stw0_bytessent_a_hi As Long
    stw0_bytesrcvd_a_lo As Long
    stw0_bytesrcvd_a_hi As Long
    stw0_reqbufneed As Long
    stw0_bigbufneed As Long
End Type

[Description("If you're looking for the other version of this struct, it's STAT_LM20_WORKSTATION_0")]
Public Type STAT_WORKSTATION_0
    StatisticsStartTime As LARGE_INTEGER
    BytesReceived As LARGE_INTEGER
    SmbsReceived As LARGE_INTEGER
    PagingReadBytesRequested As LARGE_INTEGER
    NonPagingReadBytesRequested As LARGE_INTEGER
    CacheReadBytesRequested As LARGE_INTEGER
    NetworkReadBytesRequested As LARGE_INTEGER
    BytesTransmitted As LARGE_INTEGER
    SmbsTransmitted As LARGE_INTEGER
    PagingWriteBytesRequested As LARGE_INTEGER
    NonPagingWriteBytesRequested As LARGE_INTEGER
    CacheWriteBytesRequested As LARGE_INTEGER
    NetworkWriteBytesRequested As LARGE_INTEGER
    InitiallyFailedOperations As Long
    FailedCompletionOperations As Long
    ReadOperations As Long
    RandomReadOperations As Long
    ReadSmbs As Long
    LargeReadSmbs As Long
    SmallReadSmbs As Long
    WriteOperations As Long
    RandomWriteOperations As Long
    WriteSmbs As Long
    LargeWriteSmbs As Long
    SmallWriteSmbs As Long
    RawReadsDenied As Long
    RawWritesDenied As Long
    NetworkErrors As Long
    '  Connection/Session counts
    Sessions As Long
    FailedSessions As Long
    Reconnects As Long
    CoreConnects As Long
    Lanman20Connects As Long
    Lanman21Connects As Long
    LanmanNtConnects As Long
    ServerDisconnects As Long
    HungSessions As Long
    UseCount As Long
    FailedUseCount As Long
    '  Queue Lengths (updates protected by RdrMpxTableSpinLock NOT
    '  RdrStatisticsSpinlock)
    CurrentCommands As Long
End Type

Public Enum NET_SERVERSTAT_OPTIONS
    STATSOPT_CLR = 1
End Enum
Public Const STATS_NO_VALUE  = (-1)
Public Const STATS_OVERFLOW  = (-2)

Public Type STAT_SERVER_0
    sts0_start As Long
    sts0_fopens As Long
    sts0_devopens As Long
    sts0_jobsqueued As Long
    sts0_sopens As Long
    sts0_stimedout As Long
    sts0_serrorout As Long
    sts0_pwerrors As Long
    sts0_permerrors As Long
    sts0_syserrors As Long
    sts0_bytessent_low As Long
    sts0_bytessent_high As Long
    sts0_bytesrcvd_low As Long
    sts0_bytesrcvd_high As Long
    sts0_avresponse As Long
    sts0_reqbufneed As Long
    sts0_bigbufneed As Long
End Type

Public Enum NetLogonControlFlags
    NETLOGON_CONTROL_QUERY = 1  ' No-op: just query
    NETLOGON_CONTROL_REPLICATE = 2  ' Force replicate on BDC
    NETLOGON_CONTROL_SYNCHRONIZE = 3  ' Force synchronize on BDC
    NETLOGON_CONTROL_PDC_REPLICATE = 4  ' Force PDC to broadcast change
    NETLOGON_CONTROL_REDISCOVER = 5  ' Force to re-discover trusted domain DCs
    NETLOGON_CONTROL_TC_QUERY = 6  ' Query status of specified trusted channel status
    NETLOGON_CONTROL_TRANSPORT_NOTIFY = 7  ' Notify netlogon that a new transport has come online
    NETLOGON_CONTROL_FIND_USER = 8  ' Find named user in a trusted domain
    NETLOGON_CONTROL_CHANGE_PASSWORD = 9  ' Change machine password on a secure channel to a trusted domain
    NETLOGON_CONTROL_TC_VERIFY = 10  ' Verify status of specified trusted channel
    NETLOGON_CONTROL_FORCE_DNS_REG = 11  ' Force DNS re-registration of all registered records
    NETLOGON_CONTROL_QUERY_DNS_REG = 12  ' Query the status of DNS updates
    NETLOGON_CONTROL_QUERY_ENC_TYPES = 13  ' Query the supported encryption types
'  Debug function codes
    NETLOGON_CONTROL_UNLOAD_NETLOGON_DLL = &HFFFB&
    NETLOGON_CONTROL_BACKUP_CHANGE_LOG = &HFFFC&
    NETLOGON_CONTROL_TRUNCATE_LOG = &HFFFD&
    NETLOGON_CONTROL_SET_DBFLAG = &HFFFE&
    NETLOGON_CONTROL_BREAKPOINT = &HFFFF&
End Enum

Public Type NETLOGON_INFO_1
    netlog1_flags As NetLogonFlags
    netlog1_pdc_connection_status As Long  'NET_API_STATUS
End Type

Public Type NETLOGON_INFO_2
    netlog2_flags As NetLogonFlags
    ' If NETLOGON_VERIFY_STATUS_RETURNED bit is set in
    '  netlog2_flags, the following field will return
    '  the status of trust verification. Otherwise,
    '  the field will return the status of the secure
    '  channel to the primary domain of the machine
    '  (useful for BDCs only).
    netlog2_pdc_connection_status As Long  'NET_API_STATUS
    '#ifdef MIDL_PASS
    '        [string] wchar_t * netlog2_trusted_dc_name;
    '#else
    netlog2_trusted_dc_name As LongPtr
    '#endif // MIDL_PASS
    netlog2_tc_connection_status As Long  'NET_API_STATUS
End Type

Public Type NETLOGON_INFO_3
    netlog3_flags As NetLogonFlags
    netlog3_logon_attempts As Long
    netlog3_reserved1 As Long
    netlog3_reserved2 As Long
    netlog3_reserved3 As Long
    netlog3_reserved4 As Long
    netlog3_reserved5 As Long
End Type

Public Enum NetLogonFlags
    NETLOGON_REPLICATION_NEEDED = &H01  ' Database is out of date
    NETLOGON_REPLICATION_IN_PROGRESS = &H02  ' Replication is happening now
    NETLOGON_FULL_SYNC_REPLICATION = &H04  ' full sync replication required/progress
    NETLOGON_REDO_NEEDED = &H08  ' Redo of previous replication needed
    NETLOGON_HAS_IP = &H10  ' The trusted domain DC has an IP address
    NETLOGON_HAS_TIMESERV = &H20  ' The trusted domain DC runs the Windows Time Service
    NETLOGON_DNS_UPDATE_FAILURE = &H40  ' There was a failure in the last update for one of the DNS records
    NETLOGON_VERIFY_STATUS_RETURNED = &H80  ' Trust verification status returned in netlog2_pdc_connection_status
End Enum

Public Const SERVICE_ACCOUNT_PASSWORD  = "_SA_{262E99C9-6160-4871-ACEC-4E61736B6F21}"
Public Const SERVICE_ACCOUNT_SECRET_PREFIX  = "_SC_{262E99C9-6160-4871-ACEC-4E61736B6F21}_"

Public Function ServiceAccountPasswordGUID() As UUID
'{262e99c9-6160-4871-acec-4e61736b6f21}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H262e99c9, CInt(&H6160), CInt(&H4871), &Hac, &Hec, &H4e, &H61, &H73, &H6b, &H6f, &H21)
 ServiceAccountPasswordGUID = iid
End Function

Public Enum NetServiceAcctFlags
    ' // Do not create an account by this name
    ' // Only link this account to my computer if it exists
    SERVICE_ACCOUNT_FLAG_LINK_TO_HOST_ONLY = &H00000001
'  Add the service account against an RODC
'  The account must already exist and be linked
'  The third parameter contains the preset password
    SERVICE_ACCOUNT_FLAG_ADD_AGAINST_RODC = &H00000002
'  Do not delete the service account object from AD
'  Simply unlink it from this computer and delete the local secret
    SERVICE_ACCOUNT_FLAG_UNLINK_FROM_HOST_ONLY = &H00000001
'  Remove the account from password management on the local
'  machine.  The DC is unavailable or read-only so do not
'  attempt to unlink or delete the account
    SERVICE_ACCOUNT_FLAG_REMOVE_OFFLINE = &H00000002
End Enum

Public Enum MSA_INFO_LEVEL
    MsaInfoLevel0 = 0
    MsaInfoLevelMax
End Enum
Public Enum MSA_INFO_STATE
    MsaInfoNotExist = 1
    MsaInfoNotService
    MsaInfoCannotInstall
    MsaInfoCanInstall
    MsaInfoInstalled
End Enum

Public Type MSA_INFO_0
    State As MSA_INFO_STATE
End Type

Public Declare PtrSafe Function NetApiBufferAllocate Lib "netapi32" (ByVal ByteCount As Long, Buffer As LongPtr) As Long
Public Declare PtrSafe Function NetApiBufferReallocate Lib "netapi32" (ByVal OldBuffer As LongPtr, ByVal NewByteCount As Long, NewBuffer As LongPtr) As Long
Public Declare PtrSafe Function NetApiBufferSize Lib "netapi32" (ByVal Buffer As LongPtr, ByteCount As Long) As Long
Public Declare PtrSafe Function NetApiBufferFree Lib "netapi32" (ByVal Buffer As LongPtr) As Long

Public Declare PtrSafe Function NetValidatePasswordPolicy Lib "netapi32" (ByVal servername As LongPtr, ByVal Qualifier As LongPtr, ByVal ValidationType As NET_VALIDATE_PASSWORD_TYPE, InputArg As Any, OutputArg As LongPtr) As Long
Public Declare PtrSafe Function NetValidatePasswordPolicyFree Lib "netapi32" (OutputArg As LongPtr) As Long
Public Declare PtrSafe Function NetQueryDisplayInformation Lib "netapi32" (ByVal servername As LongPtr, ByVal Level As Long, ByVal Index As Long, ByVal EntriesRequested As Long, ByVal PreferredMaxiumLength As Long, ReturnedEntryCount As Long, SortedBuffer As LongPtr) As Long
Public Declare PtrSafe Function NetGetDisplayInformationIndex Lib "netapi32" (ByVal servername As LongPtr, ByVal Level As Long, ByVal Prefix As LongPtr, Index As Long) As Long
Public Declare PtrSafe Function NetGetDCName Lib "netapi32" (ByVal servername As LongPtr, ByVal DomainName As LongPtr, Buffer As LongPtr) As Long
Public Declare PtrSafe Function NetGetAnyDCName Lib "netapi32" (ByVal servername As LongPtr, ByVal DomainName As LongPtr, Buffer As LongPtr) As Long
Public Declare PtrSafe Function I_NetLogonControl Lib "netapi32" (ByVal servername As LongPtr, ByVal FunctionCode As NetLogonControlFlags, ByVal QueryLevel As Long, Buffer As LongPtr) As Long
Public Declare PtrSafe Function I_NetLogonControl2 Lib "netapi32" (ByVal servername As LongPtr, ByVal FunctionCode As NetLogonControlFlags, ByVal QueryLevel As Long, Data As Any, Buffer As LongPtr) As Long
Public Declare PtrSafe Function NetEnumerateTrustedDomains Lib "netapi32" (ByVal servername As LongPtr, DomainNames As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NetAddServiceAccount Lib "netapi32" (ByVal servername As LongPtr, ByVal AccountName As LongPtr, ByVal Password As LongPtr, ByVal Flags As NetServiceAcctFlags) As NTSTATUS
Public Declare PtrSafe Function NetRemoveServiceAccount Lib "netapi32" (ByVal servername As LongPtr, ByVal AccountName As LongPtr, ByVal Flags As NetServiceAcctFlags) As NTSTATUS
Public Declare PtrSafe Function NetEnumerateServiceAccounts Lib "netapi32" (ByVal servername As LongPtr, ByVal Flags As NetServiceAcctFlags, AccountsCount As Long, Accounts As LongPtr) As NTSTATUS
Public Declare PtrSafe Function NetIsServiceAccount Lib "netapi32" (ByVal servername As LongPtr, ByVal AccountName As LongPtr, IsService As BOOL) As NTSTATUS
Public Declare PtrSafe Function NetQueryServiceAccount Lib "netapi32" (ByVal servername As LongPtr, ByVal AccountName As LongPtr, ByVal InfoLevel As Long, Buffer As LongPtr) As NTSTATUS



Public Declare PtrSafe Function NetAccessAdd Lib "netapi32" (ByVal servername As LongPtr, ByVal Level As Long, lpBuffer As Any, parm_err As NETUSER_ACCESS_PARMNUM) As Long
Public Declare PtrSafe Function NetAccessEnum Lib "netapi32" (ByVal servername As LongPtr, ByVal BasePath As LongPtr, ByVal Recursive As Long, ByVal Level As Long, bufptr As LongPtr, ByVal prefmaxlen As Long, entriesread As Long, totalentries As Long, Optional resume_handle As Long) As Long
Public Declare PtrSafe Function NetAccessGetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal resource As LongPtr, ByVal Level As Long, lpBuffer As LongPtr) As Long
Public Declare PtrSafe Function NetAccessSetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal resource As LongPtr, ByVal Level As Long, lpBuffer As Any, parm_err As NETUSER_ACCESS_PARMNUM) As Long
Public Declare PtrSafe Function NetAccessDel Lib "netapi32" (ByVal servername As LongPtr, ByVal resource As LongPtr) As Long
Public Declare PtrSafe Function NetAccessGetUserPerms Lib "netapi32" (ByVal servername As LongPtr, ByVal UGname As LongPtr, ByVal resource As LongPtr, Perms As Long) As Long

Public Declare PtrSafe Function NetUserGetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal username As LongPtr, ByVal level As Long, bufptr As LongPtr) As Long
Public Declare PtrSafe Function NetUserSetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal username As LongPtr, ByVal level As Long, buf As Any, parm_err As NETUSER_USI_PARMERR) As Long
Public Declare PtrSafe Function NetUserAdd Lib "netapi32" (ByVal servername As LongPtr, ByVal Level As Long, lpUser As Any, parm_err As Long) As Long
Public Declare PtrSafe Function NetUserEnum Lib "netapi32" (ByVal servername As LongPtr, ByVal Level As Long, ByVal filter As NETUSER_ENUMFILTER, bufptr As LongPtr, ByVal prefmaxlen As Long, entriesread As Long, totalentries As Long, Optional resume_handle As Long) As Long
Public Declare PtrSafe Function NetUserDel Lib "netapi32" (ByVal servername As LongPtr, ByVal username As LongPtr) As Long
Public Declare PtrSafe Function NetUserChangePassword Lib "netapi32" (ByVal servername As LongPtr, ByVal username As LongPtr, ByVal oldpassword As LongPtr, ByVal newpassword As LongPtr) As Long
Public Declare PtrSafe Function NetUserGetGroups Lib "netapi32" (ByVal servername As LongPtr, ByVal username As LongPtr, ByVal Level As Long, lpBuffer As LongPtr, ByVal PrefMaxLen As Long, lpEntriesRead As Long, lpTotalEntries As Long) As Long
Public Declare PtrSafe Function NetUserGetLocalGroups Lib "netapi32" (ByVal servername As LongPtr, ByVal username As LongPtr, ByVal Level As Long, ByVal Flags As NETUSER_LG_FLAGS, lpBuffer As LongPtr, ByVal prefmaxlen As Long, lpEntriesRead As Long, lpTotalEntries As Long) As Long
Public Declare PtrSafe Function NetUserSetGroups Lib "netapi32" (ByVal servername As LongPtr, ByVal username As LongPtr, ByVal Level As Long, lpBuffer As Any, ByVal num_entries As Long) As Long
Public Declare PtrSafe Function NetUserModalsGet Lib "netapi32" (ByVal servername As LongPtr, ByVal Level As Long, lpBuffer As LongPtr) As Long
Public Declare PtrSafe Function NetUserModalsSet Lib "netapi32" (ByVal servername As LongPtr, ByVal Level As Long, lpBuffer As Any, parm_err As NETUSER_MODALS_PARM) As Long

Public Declare PtrSafe Function NetWkstaGetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal Level As Long, lpBuffer As LongPtr) As Long
Public Declare PtrSafe Function NetWkstaUserGetInfo Lib "netapi32" (ByVal reserved As Any, ByVal Level As Long, lpBuffer As Any) As Long
Public Declare PtrSafe Function NetRemoteTOD Lib "netapi32" (ByVal servername As LongPtr, pBuffer As LongPtr) As Long

Public Declare PtrSafe Function NetLocalGroupDelMember Lib "netapi32" (ByVal servername As LongPtr, ByVal groupname As LongPtr, ByVal membersid As LongPtr) As Long
Public Declare PtrSafe Function NetLocalGroupDelMembers Lib "netapi32" (ByVal servername As LongPtr, ByVal groupname As LongPtr, ByVal level As Long, buf As Any, ByVal totalentries As Long) As Long
Public Declare PtrSafe Function NetLocalGroupGetMembers Lib "netapi32" (ByVal servername As LongPtr, ByVal localgroupname As LongPtr, ByVal level As Long, pBuffer As LongPtr, ByVal lMaxLength As Long, plEntriesRead As Long, plTotalEntries As Long, phResume As LongPtr) As Long
Public Declare PtrSafe Function NetLocalGroupSetMembers Lib "netapi32" (ByVal servername As LongPtr, ByVal groupname As LongPtr, ByVal level As Long, pBuffer As Any, ByVal totalentries As Long) As Long
Public Declare PtrSafe Function NetLocalGroupAddMember Lib "netapi32" (ByVal servername As LongPtr, ByVal groupname As LongPtr, ByVal membersid As LongPtr) As Long
Public Declare PtrSafe Function NetLocalGroupAddMembers Lib "netapi32" (ByVal servername As LongPtr, ByVal groupname As LongPtr, ByVal level As Long, buf As Any, ByVal totalentries As Long) As Long
Public Declare PtrSafe Function NetLocalGroupAdd Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, buf As Any, parm_err As NETUSER_LOCALGROUP_PARM) As Long
Public Declare PtrSafe Function NetLocalGroupDel Lib "netapi32" (ByVal servername As LongPtr, ByVal groupname As LongPtr) As Long
Public Declare PtrSafe Function NetLocalGroupEnum Lib "netapi32" (ByVal servername As LongPtr, ByVal Level As Long, bufptr As LongPtr, ByVal prefmaxlen As Long, entriesread As Long, totalentries As Long, Optional resume_handle As LongPtr) As Long
Public Declare PtrSafe Function NetLocalGroupGetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal groupname As LongPtr, ByVal level As Long, bufptr As LongPtr) As Long
Public Declare PtrSafe Function NetLocalGroupSetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal groupname As LongPtr, ByVal level As Long, buf As Any, parm_err As NETUSER_LOCALGROUP_PARM) As Long
Public Declare PtrSafe Function NetGroupAddUser Lib "netapi32" (ByVal servername As LongPtr, ByVal groupname As LongPtr, ByVal username As LongPtr) As Long
Public Declare PtrSafe Function NetGroupDelUser Lib "netapi32" (ByVal servername As LongPtr, ByVal groupname As LongPtr, ByVal username As LongPtr) As Long
Public Declare PtrSafe Function NetGroupDel Lib "netapi32" (ByVal servername As LongPtr, ByVal groupname As LongPtr) As Long
Public Declare PtrSafe Function NetGroupAdd Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, buf As Any, parm_err As NETUSER_GROUP_PARM) As Long
Public Declare PtrSafe Function NetGroupEnum Lib "netapi32" (ByVal servername As LongPtr, ByVal Level As Long, bufptr As LongPtr, ByVal prefmaxlen As Long, entriesread As Long, totalentries As Long, Optional resume_handle As LongPtr) As Long
Public Declare PtrSafe Function NetGroupGetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal groupname As LongPtr, ByVal level As Long, bufptr As LongPtr) As Long
Public Declare PtrSafe Function NetGroupSetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal groupname As LongPtr, ByVal level As Long, buf As Any, parm_err As NETUSER_GROUP_PARM) As Long
Public Declare PtrSafe Function NetGroupGetUsers Lib "netapi32" (ByVal servername As LongPtr, ByVal groupname As LongPtr, ByVal Level As Long, bufptr As LongPtr, ByVal prefmaxlen As Long, entriesread As Long, totalentries As Long, Optional resume_handle As LongPtr) As Long
Public Declare PtrSafe Function NetGroupSetUsers Lib "netapi32" (ByVal servername As LongPtr, ByVal groupname As LongPtr, ByVal Level As Long, buf As Any, ByVal totalentries As Long) As Long

Public Declare PtrSafe Function NetShareAdd Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, buf As Any, parm_err As SHARE_PARM_ERR) As Long
Public Declare PtrSafe Function NetShareEnum Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, bufptr As LongPtr, ByVal prefmaxlen As Long, entriesread As Long, totalentries As Long, Optional resume_handle As Long) As Long
Public Declare PtrSafe Function NetShareEnumSticky Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, bufptr As LongPtr, ByVal prefmaxlen As Long, entriesread As Long, totalentries As Long, Optional resume_handle As Long) As Long
Public Declare PtrSafe Function NetShareGetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal netname As LongPtr, ByVal level As Long, bufptr As LongPtr) As Long
Public Declare PtrSafe Function NetShareSetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal netname As LongPtr, ByVal level As Long, buf As Any, parm_err As SHARE_PARM_ERR) As Long
Public Declare PtrSafe Function NetShareDel Lib "netapi32" (ByVal servername As LongPtr, ByVal netname As LongPtr, ByVal reserved As Long) As Long
Public Declare PtrSafe Function NetShareDelSticky Lib "netapi32" (ByVal servername As LongPtr, ByVal netname As LongPtr, ByVal reserved As Long) As Long
Public Declare PtrSafe Function NetShareCheck Lib "netapi32" (ByVal servername As LongPtr, ByVal device As LongPtr, type As SHARE_INFO_TYPES) As Long
Public Declare PtrSafe Function NetShareDelEx Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, buf As Any) As Long

Public Declare PtrSafe Function NetServerAliasAdd Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, buf As Any) As Long
Public Declare PtrSafe Function NetServerAliasDel Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, buf As Any) As Long
Public Declare PtrSafe Function NetServerAliasEnum Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, bufptr As LongPtr, ByVal prefmaxlen As Long, entriesread As Long, totalentries As Long, Optional resumehandle As Long) As Long

Public Declare PtrSafe Function NetSessionEnum Lib "netapi32" (ByVal servername As LongPtr, ByVal UncClientName As LongPtr, ByVal username As LongPtr, ByVal level As Long, bufptr As LongPtr, ByVal prefmaxlen As Long, entriesread As Long, totalentries As Long, Optional resume_handle As Long) As Long
Public Declare PtrSafe Function NetSessionDel Lib "netapi32" (ByVal servername As LongPtr, ByVal UncClientName As LongPtr, ByVal username As LongPtr) As Long
Public Declare PtrSafe Function NetSessionGetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal UncClientName As LongPtr, ByVal username As LongPtr, ByVal level As Long, bufptr As LongPtr) As Long

Public Declare PtrSafe Function NetConnectionEnum Lib "netapi32" (ByVal servername As LongPtr, ByVal qualifier As LongPtr, ByVal level As Long, bufptr As LongPtr, ByVal prefmaxlen As Long, entriesread As Long, totalentries As Long, Optional resume_handle As Long) As Long

Public Declare PtrSafe Function NetFileClose Lib "netapi32" (ByVal servername As LongPtr, ByVal fileid As Long) As Long
Public Declare PtrSafe Function NetFileEnum Lib "netapi32" (ByVal servername As LongPtr, ByVal basepath As LongPtr, ByVal username As LongPtr, ByVal level As Long, bufptr As LongPtr, ByVal prefmaxlen As Long, entriesread As Long, totalentries As Long, Optional resume_handle As LongPtr) As Long
Public Declare PtrSafe Function NetFileGetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal fileid As Long, ByVal level As Long, bufptr As LongPtr) As Long

Public Declare PtrSafe Function NetStatisticsGet Lib "netapi32" (ByVal servername As LongPtr, ByVal service As LongPtr, ByVal Level As Long, ByVal Options As NET_SERVERSTAT_OPTIONS, Buffer As LongPtr) As Long

'LMJoin.h

Public Enum NETSETUP_NAME_TYPE
    NetSetupUnknown = 0
    NetSetupMachine
    NetSetupWorkgroup
    NetSetupDomain
    NetSetupNonExistentDomain
    NetSetupDnsMachine
End Enum

Public Enum DSREG_JOIN_TYPE
    DSREG_UNKNOWN_JOIN = 0
    DSREG_DEVICE_JOIN = 1
    DSREG_WORKPLACE_JOIN = 2
End Enum

Public Type DSREG_USER_INFO
    pszUserEmail As LongPtr
    pszUserKeyId As LongPtr
    pszUserKeyName As LongPtr
End Type

Public Type DSREG_JOIN_INFO
    joinType As DSREG_JOIN_TYPE
    pJoinCertificate As LongPtr 'PCCERT_CONTEXT
    pszDeviceId As LongPtr
    pszIdpDomain As LongPtr
    pszTenantId As LongPtr
    pszJoinUserEmail As LongPtr
    pszTenantDisplayName As LongPtr
    pszMdmEnrollmentUrl As LongPtr
    pszMdmTermsOfUseUrl As LongPtr
    pszMdmComplianceUrl As LongPtr
    pszUserSettingSyncUrl As LongPtr
    pUserInfo As LongPtr 'DSREG_USER_INFO*
End Type

Public Enum NetSetupJoinFlags
    NETSETUP_JOIN_DOMAIN = &H00000001  ' If not present, workgroup is joined
    NETSETUP_ACCT_CREATE = &H00000002  ' Do the server side account creation/rename
    NETSETUP_ACCT_DELETE = &H00000004  ' Delete the account when a domain is left
    NETSETUP_WIN9X_UPGRADE = &H00000010  ' Invoked during upgrade of Windows 9x to
'  Windows NT
    NETSETUP_DOMAIN_JOIN_IF_JOINED = &H00000020  ' Allow the client to join a new domain
'  even if it is already joined to a domain
    NETSETUP_JOIN_UNSECURE = &H00000040  ' Performs an unsecure join
    NETSETUP_MACHINE_PWD_PASSED = &H00000080  ' Indicates that the machine (not user) password
'   is passed. Valid only for unsecure joins
    NETSETUP_DEFER_SPN_SET = &H00000100  ' Specifies that writting SPN and DnsHostName
'   attributes on the computer object should be
'   defered until rename that will follow join
    NETSETUP_JOIN_DC_ACCOUNT = &H00000200  ' Allow join if existing account is a DC
    NETSETUP_JOIN_WITH_NEW_NAME = &H00000400  ' Check for computer name change
    NETSETUP_JOIN_READONLY = &H00000800  ' Perform join using a pre-created account w/o requiring a writable DC
    NETSETUP_DNS_NAME_CHANGES_ONLY = &H00001000  ' When performing machine rename only update DNS based names
    NETSETUP_INSTALL_INVOCATION = &H00040000  ' The APIs were invoked during install
    NETSETUP_AMBIGUOUS_DC = &H00001000  ' When joining the domain don't try to set the
'  preferred DC in the registry.
    NETSETUP_NO_NETLOGON_CACHE = &H00002000  ' Don't create the netlogon cache
    NETSETUP_DONT_CONTROL_SERVICES = &H00004000  ' Don't force netlogon to start
    NETSETUP_SET_MACHINE_NAME = &H00008000&  ' For offline join only, set target machine hostname and NB name.
    NETSETUP_FORCE_SPN_SET = &H00010000  ' Override other settings during domain join
'  and attempt to set the SPN.
    NETSETUP_NO_ACCT_REUSE = &H00020000  ' Do not reuse an existing account
    NETSETUP_ALT_SAMACCOUNTNAME = &H00020000  ' do not use OEM code page to derive the netbios\samAccountName
    NETSETUP_IGNORE_UNSUPPORTED_FLAGS = &H10000000  ' If this bit is set, unrecognized flags
'   will be ignored by the NetJoin API and
'   the API will behave as if the flags
'   were not set.
    NETSETUP_VALID_UNJOIN_FLAGS = (NETSETUP_ACCT_DELETE Or NETSETUP_IGNORE_UNSUPPORTED_FLAGS Or NETSETUP_JOIN_DC_ACCOUNT)
'  The following flags are used when the system is processing information left from a prior offline
'  join.  We want to force DC discovery and we don't want to create the netlogon cache.  We also
'  don't want to immediately force netlogon to start, let it start on its own.
    NETSETUP_PROCESS_OFFLINE_FLAGS = (NETSETUP_JOIN_DOMAIN Or NETSETUP_DOMAIN_JOIN_IF_JOINED Or NETSETUP_JOIN_WITH_NEW_NAME Or NETSETUP_DONT_CONTROL_SERVICES Or NETSETUP_MACHINE_PWD_PASSED)
End Enum

Public Declare PtrSafe Function NetJoinDomain Lib "netapi32" (ByVal lpServer As LongPtr, ByVal lpDomain As LongPtr, ByVal lpMachineAccountOU As LongPtr, ByVal lpAccount As LongPtr, ByVal lpPassword As LongPtr, ByVal fJoinOptions As NetSetupJoinFlags) As Long
Public Declare PtrSafe Function NetUnjoinDomain Lib "netapi32" (ByVal lpServer As LongPtr, ByVal lpAccount As LongPtr, ByVal lpPassword As LongPtr, ByVal fUnjoinOptions As NetSetupJoinFlags) As Long
Public Declare PtrSafe Function NetRenameMachineInDomain Lib "netapi32" (ByVal lpServer As LongPtr, ByVal lpNewMachineName As LongPtr, ByVal lpAccount As LongPtr, ByVal lpPassword As LongPtr, ByVal fRenameOptions As NetSetupJoinFlags) As Long
Public Declare PtrSafe Function NetValidateName Lib "netapi32" (ByVal lpServer As LongPtr, ByVal lpName As LongPtr, ByVal lpAccount As LongPtr, ByVal lpPassword As LongPtr, ByVal NameType As NETSETUP_NAME_TYPE) As Long
Public Declare PtrSafe Function NetGetJoinableOUs Lib "netapi32" (ByVal lpServer As LongPtr, ByVal lpDomain As LongPtr, ByVal lpAccount As LongPtr, ByVal lpPassword As LongPtr, OUCount As Long, OUs As LongPtr) As Long
Public Declare PtrSafe Function NetAddAlternateComputerName Lib "netapi32" (ByVal Server As LongPtr, ByVal AlternateName As LongPtr, ByVal DomainAccount As LongPtr, ByVal DomainAccountPassword As LongPtr, ByVal Reserved As Long) As Long
Public Declare PtrSafe Function NetRemoveAlternateComputerName Lib "netapi32" (ByVal Server As LongPtr, ByVal AlternateName As LongPtr, ByVal DomainAccount As LongPtr, ByVal DomainAccountPassword As LongPtr, ByVal Reserved As Long) As Long
Public Declare PtrSafe Function NetSetPrimaryComputerName Lib "netapi32" (ByVal Server As LongPtr, ByVal PrimaryName As LongPtr, ByVal DomainAccount As LongPtr, ByVal DomainAccountPassword As LongPtr, ByVal Reserved As Long) As Long

Public Enum NET_COMPUTER_NAME_TYPE
    NetPrimaryComputerName
    NetAlternateComputerNames
    NetAllComputerNames
    NetComputerNameTypeMax
End Enum

Public Declare PtrSafe Function NetEnumerateComputerNames Lib "netapi32" (ByVal Server As LongPtr, ByVal NameType As NET_COMPUTER_NAME_TYPE, ByVal Reserved As Long, EntryCount As Long, ComputerNames As LongPtr) As Long

Public Enum NetSetupProvisionFlags
    NETSETUP_PROVISION_DOWNLEVEL_PRIV_SUPPORT = &H00000001
'  If the named account already exists an attempt will be made to reuse. Requires
'  sufficient credentials i.e. Domain Administrator or the object owner.
    NETSETUP_PROVISION_REUSE_ACCOUNT = &H00000002
'  Use the default machine account password which is the machine name in lowercase.
    NETSETUP_PROVISION_USE_DEFAULT_PASSWORD = &H00000004
'  Do not try to find the account on any DC in the domain. This is faster but
'  should only be used when the caller is certain that an account by the same
'  name hasn't recently been created. Only valid when specifying the target DC.
'  When the pre-requisites are met, this option allows for must faster provisioning
'  useful for scenarios such as batch processing.
    NETSETUP_PROVISION_SKIP_ACCOUNT_SEARCH = &H00000008
'  Include root Certificate Authority certificates in provisioning package.
    NETSETUP_PROVISION_ROOT_CA_CERTS = &H00000010
'  Configure site as persistent (if not specified then configure as dynamic).
    NETSETUP_PROVISION_PERSISTENTSITE = &H00000020
'  The following are reserved for internal use.
'  The operation is online.
'  This is an internal option not available through the API.
    NETSETUP_PROVISION_ONLINE_CALLER = &H40000000
'  Validate the machine password only. This is an internal option not available
'  through the API.
    NETSETUP_PROVISION_CHECK_PWD_ONLY = &H80000000
End Enum

Public Declare PtrSafe Function NetProvisionComputerAccount Lib "netapi32" (ByVal lpDomain As LongPtr, ByVal lpMachineName As LongPtr, ByVal lpMachineNameOU As LongPtr, ByVal lpDcName As LongPtr, ByVal dwOptions As NetSetupProvisionFlags, Optional pProvisionBinData As LongPtr, Optional pdwProvisionBinDataSize As Long, Optional pProvisionTextData As LongPtr) As Long
Public Declare PtrSafe Function NetRequestOfflineDomainJoin Lib "netapi32" (pProvisionBinData As Any, ByVal cbProvisionBinDataSize As Long, ByVal dwOptions As NetSetupProvisionFlags, ByVal lpWindowsPath As LongPtr) As Long

Public Enum NetSetupProvisionParamsVersions
    NETSETUP_PROVISIONING_PARAMS_WIN8_VERSION = &H00000001
    NETSETUP_PROVISIONING_PARAMS_CURRENT_VERSION = &H00000002
End Enum
Public Type NETSETUP_PROVISIONING_PARAMS
    ' Version 1 fields
    dwVersion As NetSetupProvisionParamsVersions '  _In_
    lpDomain As LongPtr '  _In_z_
    lpHostName As LongPtr '  _In_z_
    lpMachineAccountOU As LongPtr '  _In_opt_z_
    lpDcName As LongPtr '  _In_opt_z_
    dwProvisionOptions As NetSetupProvisionFlags '  _In_
    aCertTemplateNames As LongPtr '  _In_reads_opt_(cCertTemplateNames)
    cCertTemplateNames As Long '  _In_
    aMachinePolicyNames As LongPtr '  _In_reads_opt_(cMachinePolicyNames)
    cMachinePolicyNames As Long '  _In_
    aMachinePolicyPaths As LongPtr '  _In_reads_opt_(cMachinePolicyPaths)
    cMachinePolicyPaths As Long '  _In_
    ' Version 2 fields
    lpNetbiosName As LongPtr '  _In_
    lpSiteName As LongPtr '  _In_
    lpPrimaryDNSDomain As LongPtr '  _In_
End Type

Public Declare PtrSafe Function NetCreateProvisioningPackage Lib "netapi32" (pProvisioningParams As NETSETUP_PROVISIONING_PARAMS, ppPackageBinData As LongPtr, pdwPackageBinDataSize As Long, ppPackageTextData As LongPtr) As Long
Public Declare PtrSafe Function NetRequestProvisioningPackageInstall Lib "netapi32" (pPackageBinData As Any, ByVal dwPackageBinDataSize As Long, ByVal dwProvisionOptions As NetSetupProvisionFlags, ByVal lpWindowsPath As LongPtr, ByVal pvReserved As LongPtr) As Long
Public Declare PtrSafe Function NetGetAadJoinInformation Lib "netapi32" (ByVal pcszTenantId As LongPtr, ppJoinInfo As LongPtr) As Long
Public Declare PtrSafe Sub NetFreeAadJoinInformation Lib "netapi32" (ByVal pJoinInfo As LongPtr)

Public Enum NETSETUP_JOIN_STATUS
    NetSetupUnknownStatus = 0
    NetSetupUnjoined
    NetSetupWorkgroupName
    NetSetupDomainName
End Enum

Public Declare PtrSafe Function NetGetJoinInformation Lib "netapi32" (ByVal lpServer As LongPtr, lpNameBuffer As LongPtr, BufferType As NETSETUP_JOIN_STATUS) As Long


'lmmsg.h

Public Declare PtrSafe Function NetMessageNameAdd Lib "netapi32" (ByVal servername As LongPtr, ByVal msgname As LongPtr) As Long
Public Declare PtrSafe Function NetMessageNameEnum Lib "netapi32" (ByVal servername As LongPtr, ByVal msgname As LongPtr, ByVal level As Long, bufptr As LongPtr, ByVal prefmaxlen As Long, entriesread As Long, totalentries As Long, resume_handle As Long) As Long
Public Declare PtrSafe Function NetMessageNameGetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal msgname As LongPtr, ByVal level As Long, bufptr As LongPtr) As Long
Public Declare PtrSafe Function NetMessageNameDel Lib "netapi32" (ByVal servername As LongPtr, ByVal msgname As LongPtr) As Long
Public Declare PtrSafe Function NetMessageBufferSend Lib "netapi32" (ByVal servername As LongPtr, ByVal msgname As LongPtr, ByVal fromname As LongPtr, buf As Any, ByVal buflen As Long) As Long

Public Type MSG_INFO_0
    msgi0_name As LongPtr
End Type

Public Type MSG_INFO_1
    msgi1_name As LongPtr
    msgi1_forward_flag As NetMsgForwardFlags
    msgi1_forward As LongPtr
End Type

Public Enum NetMsgForwardFlags
    MSGNAME_NOT_FORWARDED = 0  ' Name not forwarded
    MSGNAME_FORWARDED_TO = &H04  ' Name forward to remote station
    MSGNAME_FORWARDED_FROM = &H10  ' Name forwarded from remote station
End Enum

'lmserver.h

Public Enum NetServerServiceTypes
    SV_TYPE_WORKSTATION = &H00000001
    SV_TYPE_SERVER = &H00000002
    SV_TYPE_SQLSERVER = &H00000004
    SV_TYPE_DOMAIN_CTRL = &H00000008
    SV_TYPE_DOMAIN_BAKCTRL = &H00000010
    SV_TYPE_TIME_SOURCE = &H00000020
    SV_TYPE_AFP = &H00000040
    SV_TYPE_NOVELL = &H00000080
    SV_TYPE_DOMAIN_MEMBER = &H00000100
    SV_TYPE_PRINTQ_SERVER = &H00000200
    SV_TYPE_DIALIN_SERVER = &H00000400
    SV_TYPE_XENIX_SERVER = &H00000800
    SV_TYPE_SERVER_UNIX = SV_TYPE_XENIX_SERVER
    SV_TYPE_NT = &H00001000
    SV_TYPE_WFW = &H00002000
    SV_TYPE_SERVER_MFPN = &H00004000
    SV_TYPE_SERVER_NT = &H00008000&
    SV_TYPE_POTENTIAL_BROWSER = &H00010000
    SV_TYPE_BACKUP_BROWSER = &H00020000
    SV_TYPE_MASTER_BROWSER = &H00040000
    SV_TYPE_DOMAIN_MASTER = &H00080000
    SV_TYPE_SERVER_OSF = &H00100000
    SV_TYPE_SERVER_VMS = &H00200000
    SV_TYPE_WINDOWS = &H00400000  ' /* Windows95 and above */
    SV_TYPE_DFS = &H00800000  ' /* Root of a DFS tree */
    SV_TYPE_CLUSTER_NT = &H01000000  '  /* NT Cluster */
    SV_TYPE_TERMINALSERVER = &H02000000  ' /* Terminal Server(Hydra) */
    SV_TYPE_CLUSTER_VS_NT = &H04000000  ' /* NT Cluster Virtual Server Name */
    SV_TYPE_DCE = &H10000000  ' /* IBM DSS (Directory and Security Services) or equivalent */
    SV_TYPE_ALTERNATE_XPORT = &H20000000  ' /* return list for alternate transport */
    SV_TYPE_LOCAL_LIST_ONLY = &H40000000  ' /* Return local list only */
    SV_TYPE_DOMAIN_ENUM = &H80000000
    SV_TYPE_ALL = &HFFFFFFFF  ' /* handy for NetServerEnum2 */
End Enum

Public Declare PtrSafe Function SetServiceBits Lib "advapi32" (ByVal hServiceStatus As LongPtr, ByVal dwServiceBits As NetServerServiceTypes, ByVal bSetBitsOn As BOOL, ByVal bUpdateImmediately As BOOL) As BOOL

Public Declare PtrSafe Function NetServerEnum Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, bufptr As LongPtr, ByVal prefMaxlen As Long, entriesread As Long, totalentries As Long, ByVal servertype As NetServerServiceTypes, Optional ByVal domain As LongPtr, Optional resume_handle As Long) As Long
Public Declare PtrSafe Function NetServerEnumEx Lib "netapi32" (ByVal ServerName As LongPtr, ByVal Level As Long, Bufptr As LongPtr, ByVal PrefMaxlen As Long, EntriesRead As Long, totalentries As Long, ByVal servertype As NetServerServiceTypes, Optional ByVal domain As LongPtr, Optional ByVal FirstNameToReturn As LongPtr) As Long
Public Declare PtrSafe Function NetServerGetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, bufptr As LongPtr) As Long
Public Declare PtrSafe Function NetServerSetInfo Lib "netapi32" (ByVal servername As LongPtr, [TypeHint(NetServerInfoLevels)] ByVal level As Long, buf As Any, Optional ParmError As NetServerParmErrors) As Long
Public Declare PtrSafe Function NetServerSetInfoCommandLine Lib "netapi32" (ByVal argc As Integer, argv As LongPtr) As Long
Public Declare PtrSafe Function NetServerDiskEnum Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, bufptr As LongPtr, ByVal prefMaxlen As Long, entriesread As Long, totalentries As Long, Optional resume_handle As Long) As Long
Public Declare PtrSafe Function NetServerComputerNameAdd Lib "netapi32" (ByVal ServerName As LongPtr, ByVal EmulatedDomainName As LongPtr, ByVal EmulatedServerName As LongPtr) As Long
Public Declare PtrSafe Function NetServerComputerNameDel Lib "netapi32" (ByVal ServerName As LongPtr, ByVal EmulatedServerName As LongPtr) As Long
Public Declare PtrSafe Function NetServerTransportAdd Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, bufptr As Any) As Long
Public Declare PtrSafe Function NetServerTransportAddEx Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, bufptr As Any) As Long
Public Declare PtrSafe Function NetServerTransportAddForInstance Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, bufptr As Any, InstanceHandle As Long) As Long
Public Declare PtrSafe Function NetServerTransportDel Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, bufptr As Any) As Long
Public Declare PtrSafe Function NetServerTransportDelForInstance Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, bufptr As Any, InstanceHandle As Long) As Long
Public Declare PtrSafe Function NetServerTransportEnum Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, bufptr As LongPtr, ByVal prefMaxlen As Long, entriesread As Long, totalentries As Long, Optional resume_handle As Long) As Long

Public Type SERVER_INFO_100
    sv100_platform_id As NETAPI_PLATFORMID
    sv100_name As LongPtr
End Type

Public Type SERVER_INFO_101
    sv101_platform_id As NETAPI_PLATFORMID
    sv101_name As LongPtr
    sv101_version_major As Long
    sv101_version_minor As Long
    sv101_type As NetServerServiceTypes
    sv101_comment As LongPtr
End Type

Public Type SERVER_INFO_102
    sv102_platform_id As NETAPI_PLATFORMID
    sv102_name As LongPtr
    sv102_version_major As Long
    sv102_version_minor As Long
    sv102_type As NetServerServiceTypes
    sv102_comment As LongPtr
    sv102_users As Long
    sv102_disc As NetServerDiscConsts
    sv102_hidden As BOOL
    sv102_announce As Long
    sv102_anndelta As Long
    sv102_licenses As NetServerLicenseConstants
    sv102_userpath As LongPtr
End Type

Public Type SERVER_INFO_103
    sv103_platform_id As NETAPI_PLATFORMID
    sv103_name As LongPtr
    sv103_version_major As Long
    sv103_version_minor As Long
    sv103_type As NetServerServiceTypes
    sv103_comment As LongPtr
    sv103_users As Long
    sv103_disc As NetServerDiscConsts
    sv103_hidden As BOOL
    sv103_announce As Long
    sv103_anndelta As Long
    sv103_licenses As NetServerLicenseConstants
    sv103_userpath As LongPtr
    sv103_capabilities As NetServerCapabilities
End Type

Public Type SERVER_INFO_402
    sv402_ulist_mtime As Long
    sv402_glist_mtime As Long
    sv402_alist_mtime As Long
    sv402_alerts As LongPtr
    sv402_security As NetServerSecurityFlags
    sv402_numadmin As Long
    sv402_lanmask As Long
    sv402_guestacct As LongPtr
    sv402_chdevs As Long
    sv402_chdevq As Long
    sv402_chdevjobs As Long
    sv402_connections As Long
    sv402_shares As Long
    sv402_openfiles As Long
    sv402_sessopens As Long
    sv402_sessvcs As Long
    sv402_sessreqs As Long
    sv402_opensearch As Long
    sv402_activelocks As Long
    sv402_numreqbuf As Long
    sv402_sizreqbuf As Long
    sv402_numbigbuf As Long
    sv402_numfiletasks As Long
    sv402_alertsched As Long
    sv402_erroralert As Long
    sv402_logonalert As Long
    sv402_accessalert As Long
    sv402_diskalert As Long
    sv402_netioalert As Long
    sv402_maxauditsz As Long
    sv402_srvheuristics As LongPtr
End Type

Public Type SERVER_INFO_403
    sv403_ulist_mtime As Long
    sv403_glist_mtime As Long
    sv403_alist_mtime As Long
    sv403_alerts As LongPtr
    sv403_security As NetServerSecurityFlags
    sv403_numadmin As Long
    sv403_lanmask As Long
    sv403_guestacct As LongPtr
    sv403_chdevs As Long
    sv403_chdevq As Long
    sv403_chdevjobs As Long
    sv403_connections As Long
    sv403_shares As Long
    sv403_openfiles As Long
    sv403_sessopens As Long
    sv403_sessvcs As Long
    sv403_sessreqs As Long
    sv403_opensearch As Long
    sv403_activelocks As Long
    sv403_numreqbuf As Long
    sv403_sizreqbuf As Long
    sv403_numbigbuf As Long
    sv403_numfiletasks As Long
    sv403_alertsched As Long
    sv403_erroralert As Long
    sv403_logonalert As Long
    sv403_accessalert As Long
    sv403_diskalert As Long
    sv403_netioalert As Long
    sv403_maxauditsz As Long
    sv403_srvheuristics As LongPtr
    sv403_auditedevents As Long
    sv403_autoprofile As NetServerAutoProfileFlags
    sv403_autopath As LongPtr
End Type

Public Type SERVER_INFO_502
    sv502_sessopens As Long
    sv502_sessvcs As Long
    sv502_opensearch As Long
    sv502_sizreqbuf As Long
    sv502_initworkitems As Long
    sv502_maxworkitems As Long
    sv502_rawworkitems As Long
    sv502_irpstacksize As Long
    sv502_maxrawbuflen As Long
    sv502_sessusers As Long
    sv502_sessconns As Long
    sv502_maxpagedmemoryusage As Long
    sv502_maxnonpagedmemoryusage As Long
    sv502_enablesoftcompat As BOOL
    sv502_enableforcedlogoff As BOOL
    sv502_timesource As BOOL
    sv502_acceptdownlevelapis As BOOL
    sv502_lmannounce As BOOL
End Type

Public Type SERVER_INFO_503
    sv503_sessopens As Long
    sv503_sessvcs As Long
    sv503_opensearch As Long
    sv503_sizreqbuf As Long
    sv503_initworkitems As Long
    sv503_maxworkitems As Long
    sv503_rawworkitems As Long
    sv503_irpstacksize As Long
    sv503_maxrawbuflen As Long
    sv503_sessusers As Long
    sv503_sessconns As Long
    sv503_maxpagedmemoryusage As Long
    sv503_maxnonpagedmemoryusage As Long
    sv503_enablesoftcompat As BOOL
    sv503_enableforcedlogoff As BOOL
    sv503_timesource As BOOL
    sv503_acceptdownlevelapis As BOOL
    sv503_lmannounce As BOOL
    sv503_domain As LongPtr
    sv503_maxcopyreadlen As Long
    sv503_maxcopywritelen As Long
    sv503_minkeepsearch As Long
    sv503_maxkeepsearch As Long
    sv503_minkeepcomplsearch As Long
    sv503_maxkeepcomplsearch As Long
    sv503_threadcountadd As Long
    sv503_numblockthreads As Long
    sv503_scavtimeout As Long
    sv503_minrcvqueue As Long
    sv503_minfreeworkitems As Long
    sv503_xactmemsize As Long
    sv503_threadpriority As Long
    sv503_maxmpxct As Long
    sv503_oplockbreakwait As Long
    sv503_oplockbreakresponsewait As Long
    sv503_enableoplocks As BOOL
    sv503_enableoplockforceclose As BOOL
    sv503_enablefcbopens As BOOL
    sv503_enableraw As BOOL
    sv503_enablesharednetdrives As BOOL
    sv503_minfreeconnections As Long
    sv503_maxfreeconnections As Long
End Type

Public Type SERVER_INFO_599
    sv599_sessopens As Long
    sv599_sessvcs As Long
    sv599_opensearch As Long
    sv599_sizreqbuf As Long
    sv599_initworkitems As Long
    sv599_maxworkitems As Long
    sv599_rawworkitems As Long
    sv599_irpstacksize As Long
    sv599_maxrawbuflen As Long
    sv599_sessusers As Long
    sv599_sessconns As Long
    sv599_maxpagedmemoryusage As Long
    sv599_maxnonpagedmemoryusage As Long
    sv599_enablesoftcompat As BOOL
    sv599_enableforcedlogoff As BOOL
    sv599_timesource As BOOL
    sv599_acceptdownlevelapis As BOOL
    sv599_lmannounce As BOOL
    sv599_domain As LongPtr
    sv599_maxcopyreadlen As Long
    sv599_maxcopywritelen As Long
    sv599_minkeepsearch As Long
    sv599_maxkeepsearch As Long
    sv599_minkeepcomplsearch As Long
    sv599_maxkeepcomplsearch As Long
    sv599_threadcountadd As Long
    sv599_numblockthreads As Long
    sv599_scavtimeout As Long
    sv599_minrcvqueue As Long
    sv599_minfreeworkitems As Long
    sv599_xactmemsize As Long
    sv599_threadpriority As Long
    sv599_maxmpxct As Long
    sv599_oplockbreakwait As Long
    sv599_oplockbreakresponsewait As Long
    sv599_enableoplocks As BOOL
    sv599_enableoplockforceclose As BOOL
    sv599_enablefcbopens As BOOL
    sv599_enableraw As BOOL
    sv599_enablesharednetdrives As BOOL
    sv599_minfreeconnections As Long
    sv599_maxfreeconnections As Long
    sv599_initsesstable As Long
    sv599_initconntable As Long
    sv599_initfiletable As Long
    sv599_initsearchtable As Long
    sv599_alertschedule As Long
    sv599_errorthreshold As Long
    sv599_networkerrorthreshold As Long
    sv599_diskspacethreshold As Long
    sv599_reserved As Long
    sv599_maxlinkdelay As Long
    sv599_minlinkthroughput As Long
    sv599_linkinfovalidtime As Long
    sv599_scavqosinfoupdatetime As Long
    sv599_maxworkitemidletime As Long
End Type

Public Type SERVER_INFO_598
    sv598_maxrawworkitems As Long
    sv598_maxthreadsperqueue As Long
    sv598_producttype As Long
    sv598_serversize As Long
    sv598_connectionlessautodisc As Long
    sv598_sharingviolationretries As Long
    sv598_sharingviolationdelay As Long
    sv598_maxglobalopensearch As Long
    sv598_removeduplicatesearches As Long
    sv598_lockviolationoffset As Long
    sv598_lockviolationdelay As Long
    sv598_mdlreadswitchover As Long
    sv598_cachedopenlimit As Long
    sv598_otherqueueaffinity As Long
    sv598_restrictnullsessaccess As BOOL
    sv598_enablewfw311directipx As BOOL
    sv598_queuesamplesecs As Long
    sv598_balancecount As Long
    sv598_preferredaffinity As Long
    sv598_maxfreerfcbs As Long
    sv598_maxfreemfcbs As Long
    sv598_maxfreelfcbs As Long
    sv598_maxfreepagedpoolchunks As Long
    sv598_minpagedpoolchunksize As Long
    sv598_maxpagedpoolchunksize As Long
    sv598_sendsfrompreferredprocessor As BOOL
    sv598_cacheddirectorylimit As Long
    sv598_maxcopylength As Long
    sv598_enablecompression As BOOL
    sv598_autosharewks As BOOL
    sv598_autoshareserver As BOOL
    sv598_enablesecuritysignature As BOOL
    sv598_requiresecuritysignature As BOOL
    sv598_minclientbuffersize As Long
    sv598_serverguid As UUID
    sv598_ConnectionNoSessionsTimeout As Long
    sv598_IdleThreadTimeOut As Long
    sv598_enableW9xsecuritysignature As BOOL
    sv598_enforcekerberosreauthentication As BOOL
    sv598_disabledos As BOOL
    sv598_lowdiskspaceminimum As Long
    sv598_disablestrictnamechecking As BOOL
    sv598_enableauthenticateusersharing As BOOL
End Type

Public Type SERVER_INFO_1005
    sv1005_comment As LongPtr
End Type

Public Type SERVER_INFO_1107
    sv1107_users As Long
End Type

Public Type SERVER_INFO_1010
    sv1010_disc As NetServerDiscConsts
End Type

Public Type SERVER_INFO_1016
    sv1016_hidden As BOOL
End Type

Public Type SERVER_INFO_1017
    sv1017_announce As Long
End Type

Public Type SERVER_INFO_1018
    sv1018_anndelta As Long
End Type

Public Type SERVER_INFO_1501
    sv1501_sessopens As Long
End Type

Public Type SERVER_INFO_1502
    sv1502_sessvcs As Long
End Type

Public Type SERVER_INFO_1503
    sv1503_opensearch As Long
End Type

Public Type SERVER_INFO_1506
    sv1506_maxworkitems As Long
End Type

Public Type SERVER_INFO_1509
    sv1509_maxrawbuflen As Long
End Type

Public Type SERVER_INFO_1510
    sv1510_sessusers As Long
End Type

Public Type SERVER_INFO_1511
    sv1511_sessconns As Long
End Type

Public Type SERVER_INFO_1512
    sv1512_maxnonpagedmemoryusage As Long
End Type

Public Type SERVER_INFO_1513
    sv1513_maxpagedmemoryusage As Long
End Type

Public Type SERVER_INFO_1514
    sv1514_enablesoftcompat As BOOL
End Type

Public Type SERVER_INFO_1515
    sv1515_enableforcedlogoff As BOOL
End Type

Public Type SERVER_INFO_1516
    sv1516_timesource As BOOL
End Type

Public Type SERVER_INFO_1518
    sv1518_lmannounce As BOOL
End Type

Public Type SERVER_INFO_1520
    sv1520_maxcopyreadlen As Long
End Type

Public Type SERVER_INFO_1521
    sv1521_maxcopywritelen As Long
End Type

Public Type SERVER_INFO_1522
    sv1522_minkeepsearch As Long
End Type

Public Type SERVER_INFO_1523
    sv1523_maxkeepsearch As Long
End Type

Public Type SERVER_INFO_1524
    sv1524_minkeepcomplsearch As Long
End Type

Public Type SERVER_INFO_1525
    sv1525_maxkeepcomplsearch As Long
End Type

Public Type SERVER_INFO_1528
    sv1528_scavtimeout As Long
End Type

Public Type SERVER_INFO_1529
    sv1529_minrcvqueue As Long
End Type

Public Type SERVER_INFO_1530
    sv1530_minfreeworkitems As Long
End Type

Public Type SERVER_INFO_1533
    sv1533_maxmpxct As Long
End Type

Public Type SERVER_INFO_1534
    sv1534_oplockbreakwait As Long
End Type

Public Type SERVER_INFO_1535
    sv1535_oplockbreakresponsewait As Long
End Type

Public Type SERVER_INFO_1536
    sv1536_enableoplocks As BOOL
End Type

Public Type SERVER_INFO_1537
    sv1537_enableoplockforceclose As BOOL
End Type

Public Type SERVER_INFO_1538
    sv1538_enablefcbopens As BOOL
End Type

Public Type SERVER_INFO_1539
    sv1539_enableraw As BOOL
End Type

Public Type SERVER_INFO_1540
    sv1540_enablesharednetdrives As BOOL
End Type

Public Type SERVER_INFO_1541
    sv1541_minfreeconnections As BOOL
End Type

Public Type SERVER_INFO_1542
    sv1542_maxfreeconnections As BOOL
End Type

Public Type SERVER_INFO_1543
    sv1543_initsesstable As Long
End Type

Public Type SERVER_INFO_1544
    sv1544_initconntable As Long
End Type

Public Type SERVER_INFO_1545
    sv1545_initfiletable As Long
End Type

Public Type SERVER_INFO_1546
    sv1546_initsearchtable As Long
End Type

Public Type SERVER_INFO_1547
    sv1547_alertschedule As Long
End Type

Public Type SERVER_INFO_1548
    sv1548_errorthreshold As Long
End Type

Public Type SERVER_INFO_1549
    sv1549_networkerrorthreshold As Long
End Type

Public Type SERVER_INFO_1550
    sv1550_diskspacethreshold As Long
End Type

Public Type SERVER_INFO_1552
    sv1552_maxlinkdelay As Long
End Type

Public Type SERVER_INFO_1553
    sv1553_minlinkthroughput As Long
End Type

Public Type SERVER_INFO_1554
    sv1554_linkinfovalidtime As Long
End Type

Public Type SERVER_INFO_1555
    sv1555_scavqosinfoupdatetime As Long
End Type

Public Type SERVER_INFO_1556
    sv1556_maxworkitemidletime As Long
End Type

Public Type SERVER_INFO_1557
    sv1557_maxrawworkitems As Long
End Type

Public Type SERVER_INFO_1560
    sv1560_producttype As Long
End Type

Public Type SERVER_INFO_1561
    sv1561_serversize As Long
End Type

Public Type SERVER_INFO_1562
    sv1562_connectionlessautodisc As Long
End Type

Public Type SERVER_INFO_1563
    sv1563_sharingviolationretries As Long
End Type

Public Type SERVER_INFO_1564
    sv1564_sharingviolationdelay As Long
End Type

Public Type SERVER_INFO_1565
    sv1565_maxglobalopensearch As Long
End Type

Public Type SERVER_INFO_1566
    sv1566_removeduplicatesearches As BOOL
End Type

Public Type SERVER_INFO_1567
    sv1567_lockviolationretries As Long
End Type

Public Type SERVER_INFO_1568
    sv1568_lockviolationoffset As Long
End Type

Public Type SERVER_INFO_1569
    sv1569_lockviolationdelay As Long
End Type

Public Type SERVER_INFO_1570
    sv1570_mdlreadswitchover As Long
End Type

Public Type SERVER_INFO_1571
    sv1571_cachedopenlimit As Long
End Type

Public Type SERVER_INFO_1572
    sv1572_criticalthreads As Long
End Type

Public Type SERVER_INFO_1573
    sv1573_restrictnullsessaccess As Long
End Type

Public Type SERVER_INFO_1574
    sv1574_enablewfw311directipx As Long
End Type

Public Type SERVER_INFO_1575
    sv1575_otherqueueaffinity As Long
End Type

Public Type SERVER_INFO_1576
    sv1576_queuesamplesecs As Long
End Type

Public Type SERVER_INFO_1577
    sv1577_balancecount As Long
End Type

Public Type SERVER_INFO_1578
    sv1578_preferredaffinity As Long
End Type

Public Type SERVER_INFO_1579
    sv1579_maxfreerfcbs As Long
End Type

Public Type SERVER_INFO_1580
    sv1580_maxfreemfcbs As Long
End Type

Public Type SERVER_INFO_1581
    sv1581_maxfreemlcbs As Long
End Type

Public Type SERVER_INFO_1582
    sv1582_maxfreepagedpoolchunks As Long
End Type

Public Type SERVER_INFO_1583
    sv1583_minpagedpoolchunksize As Long
End Type

Public Type SERVER_INFO_1584
    sv1584_maxpagedpoolchunksize As Long
End Type

Public Type SERVER_INFO_1585
    sv1585_sendsfrompreferredprocessor As BOOL
End Type

Public Type SERVER_INFO_1586
    sv1586_maxthreadsperqueue As Long
End Type

Public Type SERVER_INFO_1587
    sv1587_cacheddirectorylimit As Long
End Type

Public Type SERVER_INFO_1588
    sv1588_maxcopylength As Long
End Type

Public Type SERVER_INFO_1590
    sv1590_enablecompression As Long
End Type

Public Type SERVER_INFO_1591
    sv1591_autosharewks As Long
End Type

Public Type SERVER_INFO_1592
    sv1592_autosharewks As Long
End Type

Public Type SERVER_INFO_1593
    sv1593_enablesecuritysignature As Long
End Type

Public Type SERVER_INFO_1594
    sv1594_requiresecuritysignature As Long
End Type

Public Type SERVER_INFO_1595
    sv1595_minclientbuffersize As Long
End Type

Public Type SERVER_INFO_1596
    sv1596_ConnectionNoSessionsTimeout As Long
End Type

Public Type SERVER_INFO_1597
    sv1597_IdleThreadTimeOut As Long
End Type

Public Type SERVER_INFO_1598
    sv1598_enableW9xsecuritysignature As Long
End Type

Public Type SERVER_INFO_1599
    sv1598_enforcekerberosreauthentication As Byte
End Type

Public Type SERVER_INFO_1600
    sv1598_disabledos As Byte
End Type

Public Type SERVER_INFO_1601
    sv1598_lowdiskspaceminimum As Long
End Type

Public Type SERVER_INFO_1602
    sv_1598_disablestrictnamechecking As BOOL
End Type

Public Type SERVER_TRANSPORT_INFO_0
    svti0_numberofvcs As Long
    svti0_transportname As LongPtr
    svti0_transportaddress As LongPtr 'LPBYTE
    svti0_transportaddresslength As Long
    svti0_networkaddress As LongPtr
End Type

Public Type SERVER_TRANSPORT_INFO_1
    svti1_numberofvcs As Long
    svti1_transportname As LongPtr
    svti1_transportaddress As LongPtr
    svti1_transportaddresslength As Long
    svti1_networkaddress As LongPtr
    svti1_domain As LongPtr
End Type

Public Type SERVER_TRANSPORT_INFO_2
    svti2_numberofvcs As Long
    svti2_transportname As LongPtr
    svti2_transportaddress As LongPtr
    svti2_transportaddresslength As Long
    svti2_networkaddress As LongPtr
    svti2_domain As LongPtr
    svti2_flags As NetServerTransportFlags
End Type

Public Type SERVER_TRANSPORT_INFO_3
    svti3_numberofvcs As Long
    svti3_transportname As LongPtr
    svti3_transportaddress As LongPtr
    svti3_transportaddresslength As Long
    svti3_networkaddress As LongPtr
    svti3_domain As LongPtr
    svti3_flags As NetServerTransportFlags
    svti3_passwordlength As Long
    svti3_password(0 To 255) As Byte
End Type



Public Const MAJOR_VERSION_MASK = &H0F


Public Enum NetServerDiscConsts
    SV_NODISC = (-1)
End Enum

Public Enum NetServerSecurityFlags
    SV_USERSECURITY = 1
    SV_SHARESECURITY = 0
End Enum

Public Enum NetServerHiddenFlags
    SV_HIDDEN = 1
    SV_VISIBLE = 0
End Enum

Public Enum NetServerParmErrors
    SV_PLATFORM_ID_PARMNUM = 101
    SV_NAME_PARMNUM = 102
    SV_VERSION_MAJOR_PARMNUM = 103
    SV_VERSION_MINOR_PARMNUM = 104
    SV_TYPE_PARMNUM = 105
    SV_COMMENT_PARMNUM = 5
    SV_USERS_PARMNUM = 107
    SV_DISC_PARMNUM = 10
    SV_HIDDEN_PARMNUM = 16
    SV_ANNOUNCE_PARMNUM = 17
    SV_ANNDELTA_PARMNUM = 18
    SV_USERPATH_PARMNUM = 112
    SV_ULIST_MTIME_PARMNUM = 401
    SV_GLIST_MTIME_PARMNUM = 402
    SV_ALIST_MTIME_PARMNUM = 403
    SV_ALERTS_PARMNUM = 11
    SV_SECURITY_PARMNUM = 405
    SV_NUMADMIN_PARMNUM = 406
    SV_LANMASK_PARMNUM = 407
    SV_GUESTACC_PARMNUM = 408
    SV_CHDEVQ_PARMNUM = 410
    SV_CHDEVJOBS_PARMNUM = 411
    SV_CONNECTIONS_PARMNUM = 412
    SV_SHARES_PARMNUM = 413
    SV_OPENFILES_PARMNUM = 414
    SV_SESSREQS_PARMNUM = 417
    SV_ACTIVELOCKS_PARMNUM = 419
    SV_NUMREQBUF_PARMNUM = 420
    SV_NUMBIGBUF_PARMNUM = 422
    SV_NUMFILETASKS_PARMNUM = 423
    SV_ALERTSCHED_PARMNUM = 37
    SV_ERRORALERT_PARMNUM = 38
    SV_LOGONALERT_PARMNUM = 39
    SV_ACCESSALERT_PARMNUM = 40
    SV_DISKALERT_PARMNUM = 41
    SV_NETIOALERT_PARMNUM = 42
    SV_MAXAUDITSZ_PARMNUM = 43
    SV_SRVHEURISTICS_PARMNUM = 431
    SV_SESSOPENS_PARMNUM = 501
    SV_SESSVCS_PARMNUM = 502
    SV_OPENSEARCH_PARMNUM = 503
    SV_SIZREQBUF_PARMNUM = 504
    SV_INITWORKITEMS_PARMNUM = 505
    SV_MAXWORKITEMS_PARMNUM = 506
    SV_RAWWORKITEMS_PARMNUM = 507
    SV_IRPSTACKSIZE_PARMNUM = 508
    SV_MAXRAWBUFLEN_PARMNUM = 509
    SV_SESSUSERS_PARMNUM = 510
    SV_SESSCONNS_PARMNUM = 511
    SV_MAXNONPAGEDMEMORYUSAGE_PARMNUM = 512
    SV_MAXPAGEDMEMORYUSAGE_PARMNUM = 513
    SV_ENABLESOFTCOMPAT_PARMNUM = 514
    SV_ENABLEFORCEDLOGOFF_PARMNUM = 515
    SV_TIMESOURCE_PARMNUM = 516
    SV_ACCEPTDOWNLEVELAPIS_PARMNUM = 517
    SV_LMANNOUNCE_PARMNUM = 518
    SV_DOMAIN_PARMNUM = 519
    SV_MAXCOPYREADLEN_PARMNUM = 520
    SV_MAXCOPYWRITELEN_PARMNUM = 521
    SV_MINKEEPSEARCH_PARMNUM = 522
    SV_MAXKEEPSEARCH_PARMNUM = 523
    SV_MINKEEPCOMPLSEARCH_PARMNUM = 524
    SV_MAXKEEPCOMPLSEARCH_PARMNUM = 525
    SV_THREADCOUNTADD_PARMNUM = 526
    SV_NUMBLOCKTHREADS_PARMNUM = 527
    SV_SCAVTIMEOUT_PARMNUM = 528
    SV_MINRCVQUEUE_PARMNUM = 529
    SV_MINFREEWORKITEMS_PARMNUM = 530
    SV_XACTMEMSIZE_PARMNUM = 531
    SV_THREADPRIORITY_PARMNUM = 532
    SV_MAXMPXCT_PARMNUM = 533
    SV_OPLOCKBREAKWAIT_PARMNUM = 534
    SV_OPLOCKBREAKRESPONSEWAIT_PARMNUM = 535
    SV_ENABLEOPLOCKS_PARMNUM = 536
    SV_ENABLEOPLOCKFORCECLOSE_PARMNUM = 537
    SV_ENABLEFCBOPENS_PARMNUM = 538
    SV_ENABLERAW_PARMNUM = 539
    SV_ENABLESHAREDNETDRIVES_PARMNUM = 540
    SV_MINFREECONNECTIONS_PARMNUM = 541
    SV_MAXFREECONNECTIONS_PARMNUM = 542
    SV_INITSESSTABLE_PARMNUM = 543
    SV_INITCONNTABLE_PARMNUM = 544
    SV_INITFILETABLE_PARMNUM = 545
    SV_INITSEARCHTABLE_PARMNUM = 546
    SV_ALERTSCHEDULE_PARMNUM = 547
    SV_ERRORTHRESHOLD_PARMNUM = 548
    SV_NETWORKERRORTHRESHOLD_PARMNUM = 549
    SV_DISKSPACETHRESHOLD_PARMNUM = 550
    SV_MAXLINKDELAY_PARMNUM = 552
    SV_MINLINKTHROUGHPUT_PARMNUM = 553
    SV_LINKINFOVALIDTIME_PARMNUM = 554
    SV_SCAVQOSINFOUPDATETIME_PARMNUM = 555
    SV_MAXWORKITEMIDLETIME_PARMNUM = 556
    SV_MAXRAWWORKITEMS_PARMNUM = 557
    SV_PRODUCTTYPE_PARMNUM = 560
    SV_SERVERSIZE_PARMNUM = 561
    SV_CONNECTIONLESSAUTODISC_PARMNUM = 562
    SV_SHARINGVIOLATIONRETRIES_PARMNUM = 563
    SV_SHARINGVIOLATIONDELAY_PARMNUM = 564
    SV_MAXGLOBALOPENSEARCH_PARMNUM = 565
    SV_REMOVEDUPLICATESEARCHES_PARMNUM = 566
    SV_LOCKVIOLATIONRETRIES_PARMNUM = 567
    SV_LOCKVIOLATIONOFFSET_PARMNUM = 568
    SV_LOCKVIOLATIONDELAY_PARMNUM = 569
    SV_MDLREADSWITCHOVER_PARMNUM = 570
    SV_CACHEDOPENLIMIT_PARMNUM = 571
    SV_CRITICALTHREADS_PARMNUM = 572
    SV_RESTRICTNULLSESSACCESS_PARMNUM = 573
    SV_ENABLEWFW311DIRECTIPX_PARMNUM = 574
    SV_OTHERQUEUEAFFINITY_PARMNUM = 575
    SV_QUEUESAMPLESECS_PARMNUM = 576
    SV_BALANCECOUNT_PARMNUM = 577
    SV_PREFERREDAFFINITY_PARMNUM = 578
    SV_MAXFREERFCBS_PARMNUM = 579
    SV_MAXFREEMFCBS_PARMNUM = 580
    SV_MAXFREELFCBS_PARMNUM = 581
    SV_MAXFREEPAGEDPOOLCHUNKS_PARMNUM = 582
    SV_MINPAGEDPOOLCHUNKSIZE_PARMNUM = 583
    SV_MAXPAGEDPOOLCHUNKSIZE_PARMNUM = 584
    SV_SENDSFROMPREFERREDPROCESSOR_PARMNUM = 585
    SV_MAXTHREADSPERQUEUE_PARMNUM = 586
    SV_CACHEDDIRECTORYLIMIT_PARMNUM = 587
    SV_MAXCOPYLENGTH_PARMNUM = 588
    SV_ENABLECOMPRESSION_PARMNUM = 590
    SV_AUTOSHAREWKS_PARMNUM = 591
    SV_AUTOSHARESERVER_PARMNUM = 592
    SV_ENABLESECURITYSIGNATURE_PARMNUM = 593
    SV_REQUIRESECURITYSIGNATURE_PARMNUM = 594
    SV_MINCLIENTBUFFERSIZE_PARMNUM = 595
    SV_CONNECTIONNOSESSIONSTIMEOUT_PARMNUM = 596
    SV_IDLETHREADTIMEOUT_PARMNUM = 597
    SV_ENABLEW9XSECURITYSIGNATURE_PARMNUM = 598
    SV_ENFORCEKERBEROSREAUTHENTICATION_PARMNUM = 599
    SV_DISABLEDOS_PARMNUM = 600
    SV_LOWDISKSPACEMINIMUM_PARMNUM = 601
    SV_DISABLESTRICTNAMECHECKING_PARMNUM = 602
    SV_ENABLEAUTHENTICATEUSERSHARING_PARMNUM = 603
End Enum

Public Enum NetServerInfoLevels
    SV_COMMENT_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_COMMENT_PARMNUM)
    SV_USERS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_USERS_PARMNUM)
    SV_DISC_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_DISC_PARMNUM)
    SV_HIDDEN_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_HIDDEN_PARMNUM)
    SV_ANNOUNCE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_ANNOUNCE_PARMNUM)
    SV_ANNDELTA_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_ANNDELTA_PARMNUM)
    SV_SESSOPENS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_SESSOPENS_PARMNUM)
    SV_SESSVCS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_SESSVCS_PARMNUM)
    SV_OPENSEARCH_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_OPENSEARCH_PARMNUM)
    SV_MAXWORKITEMS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXWORKITEMS_PARMNUM)
    SV_MAXRAWBUFLEN_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXRAWBUFLEN_PARMNUM)
    SV_SESSUSERS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_SESSUSERS_PARMNUM)
    SV_SESSCONNS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_SESSCONNS_PARMNUM)
    SV_MAXNONPAGEDMEMORYUSAGE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXNONPAGEDMEMORYUSAGE_PARMNUM)
    SV_MAXPAGEDMEMORYUSAGE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXPAGEDMEMORYUSAGE_PARMNUM)
    SV_ENABLESOFTCOMPAT_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_ENABLESOFTCOMPAT_PARMNUM)
    SV_ENABLEFORCEDLOGOFF_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_ENABLEFORCEDLOGOFF_PARMNUM)
    SV_TIMESOURCE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_TIMESOURCE_PARMNUM)
    SV_LMANNOUNCE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_LMANNOUNCE_PARMNUM)
    SV_MAXCOPYREADLEN_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXCOPYREADLEN_PARMNUM)
    SV_MAXCOPYWRITELEN_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXCOPYWRITELEN_PARMNUM)
    SV_MINKEEPSEARCH_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MINKEEPSEARCH_PARMNUM)
    SV_MAXKEEPSEARCH_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXKEEPSEARCH_PARMNUM)
    SV_MINKEEPCOMPLSEARCH_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MINKEEPCOMPLSEARCH_PARMNUM)
    SV_MAXKEEPCOMPLSEARCH_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXKEEPCOMPLSEARCH_PARMNUM)
    SV_SCAVTIMEOUT_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_SCAVTIMEOUT_PARMNUM)
    SV_MINRCVQUEUE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MINRCVQUEUE_PARMNUM)
    SV_MINFREEWORKITEMS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MINFREEWORKITEMS_PARMNUM)
    SV_MAXMPXCT_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXMPXCT_PARMNUM)
    SV_OPLOCKBREAKWAIT_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_OPLOCKBREAKWAIT_PARMNUM)
    SV_OPLOCKBREAKRESPONSEWAIT_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_OPLOCKBREAKRESPONSEWAIT_PARMNUM)
    SV_ENABLEOPLOCKS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_ENABLEOPLOCKS_PARMNUM)
    SV_ENABLEOPLOCKFORCECLOSE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_ENABLEOPLOCKFORCECLOSE_PARMNUM)
    SV_ENABLEFCBOPENS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_ENABLEFCBOPENS_PARMNUM)
    SV_ENABLERAW_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_ENABLERAW_PARMNUM)
    SV_ENABLESHAREDNETDRIVES_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_ENABLESHAREDNETDRIVES_PARMNUM)
    SV_MINFREECONNECTIONS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MINFREECONNECTIONS_PARMNUM)
    SV_MAXFREECONNECTIONS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXFREECONNECTIONS_PARMNUM)
    SV_INITSESSTABLE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_INITSESSTABLE_PARMNUM)
    SV_INITCONNTABLE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_INITCONNTABLE_PARMNUM)
    SV_INITFILETABLE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_INITFILETABLE_PARMNUM)
    SV_INITSEARCHTABLE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_INITSEARCHTABLE_PARMNUM)
    SV_ALERTSCHEDULE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_ALERTSCHEDULE_PARMNUM)
    SV_ERRORTHRESHOLD_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_ERRORTHRESHOLD_PARMNUM)
    SV_NETWORKERRORTHRESHOLD_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_NETWORKERRORTHRESHOLD_PARMNUM)
    SV_DISKSPACETHRESHOLD_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_DISKSPACETHRESHOLD_PARMNUM)
    SV_MAXLINKDELAY_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXLINKDELAY_PARMNUM)
    SV_MINLINKTHROUGHPUT_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MINLINKTHROUGHPUT_PARMNUM)
    SV_LINKINFOVALIDTIME_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_LINKINFOVALIDTIME_PARMNUM)
    SV_SCAVQOSINFOUPDATETIME_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_SCAVQOSINFOUPDATETIME_PARMNUM)
    SV_MAXWORKITEMIDLETIME_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXWORKITEMIDLETIME_PARMNUM)
    SV_MAXRAWWORKITEMS_INFOLOEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXRAWWORKITEMS_PARMNUM)
    SV_PRODUCTTYPE_INFOLOEVEL = (PARMNUM_BASE_INFOLEVEL + SV_PRODUCTTYPE_PARMNUM)
    SV_SERVERSIZE_INFOLOEVEL = (PARMNUM_BASE_INFOLEVEL + SV_SERVERSIZE_PARMNUM)
    SV_CONNECTIONLESSAUTODISC_INFOLOEVEL = (PARMNUM_BASE_INFOLEVEL + SV_CONNECTIONLESSAUTODISC_PARMNUM)
    SV_SHARINGVIOLATIONRETRIES_INFOLOEVEL = (PARMNUM_BASE_INFOLEVEL + SV_SHARINGVIOLATIONRETRIES_PARMNUM)
    SV_SHARINGVIOLATIONDELAY_INFOLOEVEL = (PARMNUM_BASE_INFOLEVEL + SV_SHARINGVIOLATIONDELAY_PARMNUM)
    SV_MAXGLOBALOPENSEARCH_INFOLOEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXGLOBALOPENSEARCH_PARMNUM)
    SV_REMOVEDUPLICATESEARCHES_INFOLOEVEL = (PARMNUM_BASE_INFOLEVEL + SV_REMOVEDUPLICATESEARCHES_PARMNUM)
    SV_LOCKVIOLATIONRETRIES_INFOLOEVEL = (PARMNUM_BASE_INFOLEVEL + SV_LOCKVIOLATIONRETRIES_PARMNUM)
    SV_LOCKVIOLATIONOFFSET_INFOLOEVEL = (PARMNUM_BASE_INFOLEVEL + SV_LOCKVIOLATIONOFFSET_PARMNUM)
    SV_LOCKVIOLATIONDELAY_INFOLOEVEL = (PARMNUM_BASE_INFOLEVEL + SV_LOCKVIOLATIONDELAY_PARMNUM)
    SV_MDLREADSWITCHOVER_INFOLOEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MDLREADSWITCHOVER_PARMNUM)
    SV_CACHEDOPENLIMIT_INFOLOEVEL = (PARMNUM_BASE_INFOLEVEL + SV_CACHEDOPENLIMIT_PARMNUM)
    SV_CRITICALTHREADS_INFOLOEVEL = (PARMNUM_BASE_INFOLEVEL + SV_CRITICALTHREADS_PARMNUM)
    SV_RESTRICTNULLSESSACCESS_INFOLOEVEL = (PARMNUM_BASE_INFOLEVEL + SV_RESTRICTNULLSESSACCESS_PARMNUM)
    SV_ENABLEWFW311DIRECTIPX_INFOLOEVEL = (PARMNUM_BASE_INFOLEVEL + SV_ENABLEWFW311DIRECTIPX_PARMNUM)
    SV_OTHERQUEUEAFFINITY_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_OTHERQUEUEAFFINITY_PARMNUM)
    SV_QUEUESAMPLESECS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_QUEUESAMPLESECS_PARMNUM)
    SV_BALANCECOUNT_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_BALANCECOUNT_PARMNUM)
    SV_PREFERREDAFFINITY_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_PREFERREDAFFINITY_PARMNUM)
    SV_MAXFREERFCBS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXFREERFCBS_PARMNUM)
    SV_MAXFREEMFCBS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXFREEMFCBS_PARMNUM)
    SV_MAXFREELFCBS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXFREELFCBS_PARMNUM)
    SV_MAXFREEPAGEDPOOLCHUNKS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXFREEPAGEDPOOLCHUNKS_PARMNUM)
    SV_MINPAGEDPOOLCHUNKSIZE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MINPAGEDPOOLCHUNKSIZE_PARMNUM)
    SV_MAXPAGEDPOOLCHUNKSIZE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXPAGEDPOOLCHUNKSIZE_PARMNUM)
    SV_SENDSFROMPREFERREDPROCESSOR_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_SENDSFROMPREFERREDPROCESSOR_PARMNUM)
    SV_MAXTHREADSPERQUEUE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXTHREADSPERQUEUE_PARMNUM)
    SV_CACHEDDIRECTORYLIMIT_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_CACHEDDIRECTORYLIMIT_PARMNUM)
    SV_MAXCOPYLENGTH_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MAXCOPYLENGTH_PARMNUM)
    SV_ENABLECOMPRESSION_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_ENABLECOMPRESSION_PARMNUM)
    SV_AUTOSHAREWKS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_AUTOSHAREWKS_PARMNUM)
    SV_AUTOSHARESERVER_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_AUTOSHARESERVER_PARMNUM)
    SV_ENABLESECURITYSIGNATURE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_ENABLESECURITYSIGNATURE_PARMNUM)
    SV_REQUIRESECURITYSIGNATURE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_REQUIRESECURITYSIGNATURE_PARMNUM)
    SV_MINCLIENTBUFFERSIZE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_MINCLIENTBUFFERSIZE_PARMNUM)
    SV_CONNECTIONNOSESSIONSTIMEOUT_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_CONNECTIONNOSESSIONSTIMEOUT_PARMNUM)
    SV_IDLETHREADTIMEOUT_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_IDLETHREADTIMEOUT_PARMNUM)
    SV_ENABLEW9XSECURITYSIGNATURE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_ENABLEW9XSECURITYSIGNATURE_PARMNUM)
    SV_ENFORCEKERBEROSREAUTHENTICATION_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_ENFORCEKERBEROSREAUTHENTICATION_PARMNUM)
    SV_DISABLEDOS_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_DISABLEDOS_PARMNUM)
    SV_LOWDISKSPACEMINIMUM_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_LOWDISKSPACEMINIMUM_PARMNUM)
    SV_DISABLESTRICTNAMECHECKING_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_DISABLESTRICTNAMECHECKING_PARMNUM)
    SV_ENABLEAUTHENTICATEUSERSHARING_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + SV_ENABLEAUTHENTICATEUSERSHARING_PARMNUM)
End Enum

Public Const SVI1_NUM_ELEMENTS  = 5
Public Const SVI2_NUM_ELEMENTS  = 40
Public Const SVI3_NUM_ELEMENTS  = 44

Public Const SV_MAX_CMD_LEN = PATHLEN

Public Enum NetServerAutoProfileFlags
    SW_AUTOPROF_LOAD_MASK = &H1
    SW_AUTOPROF_SAVE_MASK = &H2
End Enum

Public Enum NetServerHeuristics
    SV_MAX_SRV_HEUR_LEN = 32
End Enum

Public Enum NetServerLicenseConstants
    SV_USERS_PER_LICENSE = 5
End Enum

Public Enum NetServerTransportFlags
    SVTI2_REMAP_PIPE_NAMES = &H02
    SVTI2_SCOPED_NAME = &H04
'  new Win8 flags for clustering
'  the values should be changed once new sscore functionality is impelmented
'  SVTI2_CLUSTER_NAME means that scope belongs to clustering
    SVTI2_CLUSTER_NAME = &H08
'  SVTI2_CLUSTER_DNN_NAME means that scope belongs to scale-out clustering
    SVTI2_CLUSTER_DNN_NAME = &H10
'  Means that transport address field passed with the server transport info
'  struct contains a unicode string.
    SVTI2_UNICODE_TRANSPORT_ADDRESS = &H20
'  Reserved for Internal Use
    SVTI2_RESERVED1 = &H1000
    SVTI2_RESERVED2 = &H2000
    SVTI2_RESERVED3 = &H4000
    SVTI2_VALID_FLAGS = (SVTI2_REMAP_PIPE_NAMES Or SVTI2_SCOPED_NAME Or SVTI2_CLUSTER_NAME Or SVTI2_CLUSTER_DNN_NAME Or SVTI2_UNICODE_TRANSPORT_ADDRESS)
End Enum

Public Enum NetServerCapabilities
    SRV_SUPPORT_HASH_GENERATION = &H0001
    SRV_HASH_GENERATION_ACTIVE = &H0002
End Enum


'nb30.h

Public Const NCBNAMSZ  = 16 /* absolute length of a net name */
Public Const MAX_LANA  = 254 /* lana's in range 0 to MAX_LANA inclusive */

Public Delegate Sub ncb_post (ncb As NCB)
' Public Type NCB
'     ncb_command As Byte /* command code                   */
'     ncb_retcode As Byte /* return code                    */
'     ncb_lsn As Byte /* local session number           */
'     ncb_num As Byte /* number of our network name     */
'     ncb_buffer As LongPtr /* address of message buffer (PUCHAR)     */
'     ncb_length As Integer /* size of message buffer         */
'     ncb_callname(0 To (NCBNAMSZ - 1)) As Byte /* blank-padded name of remote    */
'     ncb_name(0 To (NCBNAMSZ - 1)) As Byte /* our blank-padded netname       */
'     ncb_rto As Byte /* rcv timeout/retry count        */
'     ncb_sto As Byte /* send timeout/sys timeout       */
'     'void (CALLBACK *ncb_post)( struct _NCB * ); /* POST routine address        */
'     ncb_post As ncb_post
'     ncb_lana_num As Byte /* lana (adapter) number          */
'     ncb_cmd_cplt As Byte /* 0xff => commmand pending       */
'     #If Win64 Then
'     ncb_reserve(0 To 17) As Byte /* reserved, used by BIOS         */
'     #Else
'     ncb_reserve(0 To 9) As Byte /* reserved, used by BIOS         */
'     #End If
'     ncb_event As LongPtr /* HANDLE to Win32 event which    */
'                          /* will be set to the signalled   */
'                          /* state when an ASYNCH command   */
'                          /* completes                      */
' End Type
Public Type NCB
    ncb_command As Byte /* command code                   */
    ncb_retcode As Byte /* return code                    */
    ncb_lsn As Byte /* local session number           */
    ncb_num As Byte /* number of our network name     */
    ncb_buffer As LongPtr /* address of message buffer (PUCHAR)     */
    ncb_length As Integer /* size of message buffer         */
    ncb_callname(0 To (NCBNAMSZ - 1)) As Byte /* blank-padded name of remote    */
    ncb_name(0 To (NCBNAMSZ - 1)) As Byte /* our blank-padded netname       */
    ncb_rto As Byte /* rcv timeout/retry count        */
    ncb_sto As Byte /* send timeout/sys timeout       */
    'void (CALLBACK *ncb_post)( struct _NCB * ); /* POST routine address        */
    ncb_post As LongPtr
    ncb_lana_num As Byte /* lana (adapter) number          */
    ncb_cmd_cplt As Byte /* 0xff => commmand pending       */
    #If Win64 Then
    ncb_reserve(0 To 17) As Byte /* reserved, used by BIOS         */
    #Else
    ncb_reserve(0 To 9) As Byte /* reserved, used by BIOS         */
    #End If
    ncb_event As LongPtr /* HANDLE to Win32 event which    */
                         /* will be set to the signalled   */
                         /* state when an ASYNCH command   */
                         /* completes                      */
End Type

Public Type ADAPTER_STATUS
    adapter_address(0 To 5) As Byte
    rev_major As Byte
    reserved0 As Byte
    adapter_type As Byte
    rev_minor As Byte
    duration As Integer
    frmr_recv As Integer
    frmr_xmit As Integer
    iframe_recv_err As Integer
    xmit_aborts As Integer
    xmit_success As Long
    recv_success As Long
    iframe_xmit_err As Integer
    recv_buff_unavail As Integer
    t1_timeouts As Integer
    ti_timeouts As Integer
    reserved1 As Long
    free_ncbs As Integer
    max_cfg_ncbs As Integer
    max_ncbs As Integer
    xmit_buf_unavail As Integer
    max_dgram_size As Integer
    pending_sess As Integer
    max_cfg_sess As Integer
    max_sess As Integer
    max_sess_pkt_size As Integer
    name_count As Integer
End Type

Public Type NAME_BUFFER
    name(0 To (NCBNAMSZ - 1)) As Byte
    name_num As Byte
    name_flags As Byte
End Type

Public Enum NetbiosNameFlags
    NAME_FLAGS_MASK = &H87
    GROUP_NAME = &H80
    UNIQUE_NAME = &H00
    REGISTERING = &H00
    REGISTERED = &H04
    DEREGISTERED = &H05
    DUPLICATE = &H06
    DUPLICATE_DEREG = &H07
End Enum

Public Type SESSION_HEADER
    sess_name As Byte
    num_sess As Byte
    rcv_dg_outstanding As Byte
    rcv_any_outstanding As Byte
End Type

Public Type SESSION_BUFFER
    lsn As Byte
    state As Byte
    local_name(0 To (NCBNAMSZ - 1)) As Byte
    remote_name(0 To (NCBNAMSZ - 1)) As Byte
    rcvs_outstanding As Byte
    sends_outstanding As Byte
End Type

Public Enum NetbiosStateValues
    LISTEN_OUTSTANDING = &H01
    CALL_PENDING = &H02
    SESSION_ESTABLISHED = &H03
    HANGUP_PENDING = &H04
    HANGUP_COMPLETE = &H05
    SESSION_ABORTED = &H06
End Enum

Public Type LANA_ENUM
    length As Byte '  Number of valid entries in lana[]
    lana(MAX_LANA) As Byte
End Type

Public Type FIND_NAME_HEADER
    node_count As Integer
    reserved As Byte
    unique_group As Byte
End Type

Public Type FIND_NAME_BUFFER
    length As Byte
    access_control As Byte
    frame_control As Byte
    destination_addr(0 To 5) As Byte
    source_addr(0 To 5) As Byte
    routing_info(0 To 17) As Byte
End Type

Public Type ACTION_HEADER
    transport_id As Long
    action_code As Integer
    reserved As Integer
End Type

Public Const ALL_TRANSPORTS  = "M" & vbNullChar
Public Const MS_NBF  = "MNBF"

Public Enum NetbiosCommandCodes
    NCBCALL = &H10  '/* NCB CALL                           */
    NCBLISTEN = &H11  '/* NCB LISTEN                         */
    NCBHANGUP = &H12  '/* NCB HANG UP                        */
    NCBSEND = &H14  '/* NCB SEND                           */
    NCBRECV = &H15  '/* NCB RECEIVE                        */
    NCBRECVANY = &H16  '/* NCB RECEIVE ANY                    */
    NCBCHAINSEND = &H17  '/* NCB CHAIN SEND                     */
    NCBDGSEND = &H20  '/* NCB SEND DATAGRAM                  */
    NCBDGRECV = &H21  '/* NCB RECEIVE DATAGRAM               */
    NCBDGSENDBC = &H22  '/* NCB SEND BROADCAST DATAGRAM        */
    NCBDGRECVBC = &H23  '/* NCB RECEIVE BROADCAST DATAGRAM     */
    NCBADDNAME = &H30  '/* NCB ADD NAME                       */
    NCBDELNAME = &H31  '/* NCB DELETE NAME                    */
    NCBRESET = &H32  '/* NCB RESET                          */
    NCBASTAT = &H33  '/* NCB ADAPTER STATUS                 */
    NCBSSTAT = &H34  '/* NCB SESSION STATUS                 */
    NCBCANCEL = &H35  '/* NCB CANCEL                         */
    NCBADDGRNAME = &H36  '/* NCB ADD GROUP NAME                 */
    NCBENUM = &H37  '/* NCB ENUMERATE LANA NUMBERS         */
    NCBUNLINK = &H70  '/* NCB UNLINK                         */
    NCBSENDNA = &H71  '/* NCB SEND NO ACK                    */
    NCBCHAINSENDNA = &H72  '/* NCB CHAIN SEND NO ACK              */
    NCBLANSTALERT = &H73  '/* NCB LAN STATUS ALERT               */
    NCBACTION = &H77  '/* NCB ACTION                         */
    NCBFINDNAME = &H78  '/* NCB FIND NAME                      */
    NCBTRACE = &H79  '/* NCB TRACE                          */
    ASYNCH = &H80  '/* high bit set == asynchronous       */
End Enum

Public Enum NetbiosReturnCodes
    NRC_GOODRET = &H00  '/* good return                                */
' /* also returned when ASYNCH request accepted */
    NRC_BUFLEN = &H01  '/* illegal buffer length                      */
    NRC_ILLCMD = &H03  '/* illegal command                            */
    NRC_CMDTMO = &H05  '/* command timed out                          */
    NRC_INCOMP = &H06  '/* message incomplete, issue another command  */
    NRC_BADDR = &H07  '/* illegal buffer address                     */
    NRC_SNUMOUT = &H08  '/* session number out of range                */
    NRC_NORES = &H09  '/* no resource available                      */
    NRC_SCLOSED = &H0a  '/* session closed                             */
    NRC_CMDCAN = &H0b  '/* command cancelled                          */
    NRC_DUPNAME = &H0d  '/* duplicate name                             */
    NRC_NAMTFUL = &H0e  '/* name table full                            */
    NRC_ACTSES = &H0f  '/* no deletions, name has active sessions     */
    NRC_LOCTFUL = &H11  '/* local session table full                   */
    NRC_REMTFUL = &H12  '/* remote session table full                  */
    NRC_ILLNN = &H13  '/* illegal name number                        */
    NRC_NOCALL = &H14  '/* no callname                                */
    NRC_NOWILD = &H15  '/* cannot put * in NCB_NAME                   */
    NRC_INUSE = &H16  '/* name in use on remote adapter              */
    NRC_NAMERR = &H17  '/* name deleted                               */
    NRC_SABORT = &H18  '/* session ended abnormally                   */
    NRC_NAMCONF = &H19  '/* name conflict detected                     */
    NRC_IFBUSY = &H21  '/* interface busy, IRET before retrying       */
    NRC_TOOMANY = &H22  '/* too many commands outstanding, retry later */
    NRC_BRIDGE = &H23  '/* ncb_lana_num field invalid                 */
    NRC_CANOCCR = &H24  '/* command completed while cancel occurring   */
    NRC_CANCEL = &H26  '/* command not valid to cancel                */
    NRC_DUPENV = &H30  '/* name defined by anther local process       */
    NRC_ENVNOTDEF = &H34  '/* environment undefined. RESET required      */
    NRC_OSRESNOTAV = &H35  '/* required OS resources exhausted            */
    NRC_MAXAPPS = &H36  '/* max number of applications exceeded        */
    NRC_NOSAPS = &H37  '/* no saps available for netbios              */
    NRC_NORESOURCES = &H38  '/* requested resources are not available      */
    NRC_INVADDRESS = &H39  '/* invalid ncb address or length > segment    */
    NRC_INVDDID = &H3B  '/* invalid NCB DDID                           */
    NRC_LOCKFAIL = &H3C  '/* lock of user area failed                   */
    NRC_OPENERR = &H3f  '/* NETBIOS not loaded                         */
    NRC_SYSTEM = &H40  '/* system error                               */
    NRC_PENDING = &Hff  '/* asynchronous command is not yet finished   */
End Enum

Public Declare PtrSafe Function Netbios Lib "netapi32" (pncb As NCB) As Byte
 
'lmuse.h/lmuseflg.h

Public Enum LmUseForce
    USE_NOFORCE = 0
    USE_FORCE = 1
    USE_LOTS_OF_FORCE = 2
    USE_FLAG_GLOBAL_MAPPING = &h10000
End Enum
Public Function FORCE_LEVEL(ByVal LEVELFLAGS As LmUseForce) As Long: Return ((LEVELFLAGS) And &Hffff&): End Function
Public Function USE_LEVEL(ByVal LEVELFLAGS As LmUseForce) As Long: Return ((LEVELFLAGS) And &Hffff&): End Function
Public Function USE_FLAGS(ByVal LEVELFLAGS As LmUseForce) As Long: Return ((LEVELFLAGS) And &Hffff0000&): End Function

Public Declare PtrSafe Function NetUseAdd Lib "netapi32" (ByVal servername As LongPtr, ByVal LevelFlags As Long, buf As Any, parm_err As NetUseAddErrors) As Long
Public Declare PtrSafe Function NetUseDel Lib "netapi32" (ByVal UncServerName As LongPtr, ByVal UseName As LongPtr, ByVal ForceLevelFlags As LmUseForce) As Long
Public Declare PtrSafe Function NetUseEnum Lib "netapi32" (ByVal UncServerName As LongPtr, ByVal LevelFlags As Long, BufPtr As LongPtr, ByVal PreferedMaximumSize As Long, EntriesRead As Long, TotalEntries As Long, Optional ResumeHandle As Long) As Long
Public Declare PtrSafe Function NetUseGetInfo Lib "netapi32" (ByVal UncServerName As LongPtr, ByVal UseName As LongPtr, ByVal LevelFlags As Long, bufptr As LongPtr) As Long

Public Type USE_INFO_0
    ui0_local As LongPtr 'LMSTR
    ui0_remote As LongPtr 'LMSTR
End Type

Public Type USE_INFO_1
    ui1_local As LongPtr 'LMSTR
    ui1_remote As LongPtr 'LMSTR
    ui1_password As LongPtr 'LMSTR
    ui1_status As LmUseInfoStatus
    ui1_asg_type As LmUseInfoAsgType
    ui1_refcount As Long
    ui1_usecount As Long
End Type

Public Type USE_INFO_2
    ui2_local As LongPtr 'LMSTR
    ui2_remote As LongPtr 'LMSTR
    ui2_password As LongPtr 'LMSTR
    ui2_status As LmUseInfoStatus
    ui2_asg_type As LmUseInfoAsgType
    ui2_refcount As Long
    ui2_usecount As Long
    ui2_username As LongPtr 'LMSTR
    ui2_domainname As LongPtr 'LMSTR
End Type

Public Type USE_INFO_3
    ui3_ui2 As USE_INFO_2
    ui3_flags As LmUseInfoFlags
End Type

Public Type USE_INFO_4
    ui4_ui3 As USE_INFO_3
    ui4_auth_identity_length As Long
    ui4_auth_identity As LongPtr
End Type

Public Type USE_INFO_5
    ui4_ui3 As USE_INFO_3
    ui4_auth_identity_length As Long
    ui4_auth_identity As LongPtr
    ui5_security_descriptor_length As Long
    ui5_security_descriptor As LongPtr
    ui5_use_options_length As Long
    ui5_use_options As LongPtr
End Type



Public Enum NetUseAddErrors
    USE_LOCAL_PARMNUM = 1
    USE_REMOTE_PARMNUM = 2
    USE_PASSWORD_PARMNUM = 3
    USE_ASGTYPE_PARMNUM = 4
    USE_USERNAME_PARMNUM = 5
    USE_DOMAINNAME_PARMNUM = 6
    USE_FLAGS_PARMNUM = 7
    USE_AUTHIDENTITY_PARMNUM = 8
    USE_SD_PARMNUM = 9
    USE_OPTIONS_PARMNUM = 10
End Enum

Public Enum LmUseInfoStatus
    USE_OK = 0
    USE_PAUSED = 1
    USE_SESSLOST = 2
    USE_DISCONN = 2
    USE_NETERR = 3
    USE_CONN = 4
    USE_RECONN = 5
End Enum

Public Enum LmUseInfoAsgType
    USE_WILDCARD = (-1)
    USE_DISKDEV = 0
    USE_SPOOLDEV = 1
    USE_CHARDEV = 2
    USE_IPC = 3
End Enum

Public Enum LmUseInfoFlags
    CREATE_NO_CONNECT = &H1  ' creation flags
    CREATE_BYPASS_CSC = &H2  ' force connection to server, bypassing CSC
'   all ops on this connection go to the server,
'   never to the cache
    CREATE_CRED_RESET = &H4  ' Create a connection with credentials passed in
'   this netuse if none exist. If connection already
'   exists then update credentials after issuing remote
'   tree connection. This is needed as CSC cannot verify
'   credentials while offline.
    USE_DEFAULT_CREDENTIALS = &H4  ' No explicit credentials passed to NetUseAdd
'  Enforce connection level integrity and privacy.
    CREATE_REQUIRE_CONNECTION_INTEGRITY = &H8
    CREATE_REQUIRE_CONNECTION_PRIVACY = &H10
'  Persist the mapping in the registry. (Only valid for global mappings.)
    CREATE_PERSIST_MAPPING = &H20
'  Enables write-through semantics on all files opened via this mapping.
    CREATE_WRITE_THROUGH_SEMANTICS = &H40
    CREATE_GLOBAL_MAPPING = &H100
End Enum

Public Enum LmUseOptionsTags
    USE_OPTION_DEFERRED_CONNECTION_PARAMS = &H43666544 'CfeD'
    USE_OPTION_TRANSPORT_PARAMS = &H50617254 'ParT'
    USE_OPTION_SMB_COMPRESSION_PARAMS = &H506d6f43 'PmoC'
    USE_OPTION_BLOCK_NTLM_PARAMS = &H4e6f6c42 'NolB'
End Enum

Public Type USE_OPTION_GENERIC
    Tag As LmUseOptionsTags
    Length As Integer
    Reserved As Integer
End Type

Public Type USE_OPTION_DEFERRED_CONNECTION_PARAMETERS
    Tag As LmUseOptionsTags ' 'CfeD'
    Length As Integer ' sizeof(USE_OPTION_DEFERRED_CONNECTION_PARAMETERS) + sizeof(FILE_REMOTE_PROTOCOL_INFO)
    Reserved As Integer ' 0
    ' Followed by FILE_REMOTE_PROTOCOL_INFO
End Type

Public Enum TRANSPORT_TYPE
    UseTransportType_None = 0
    UseTransportType_Wsk = 1
    UseTransportType_Quic = 2
End Enum

Public Enum TRANSPORT_INFO_FLAG
    NoneFlag = &H00000000
    TcpPortSetFlag = &H00000001
    QuicPortSetFlag = &H00000002
    RdmaPortSetFlag = &H00000004
End Enum

Public Type TRANSPORT_INFO
    Type As TRANSPORT_TYPE
    SkipCertificateCheck As Byte
    TcpPort As Integer
    QuicPort As Integer
    RdmaPort As Integer
    Flags As TRANSPORT_INFO_FLAG
End Type

Public Type USE_OPTION_TRANSPORT_PARAMETERS
    Tag As LmUseOptionsTags ' 'ParT'
    Length As Integer ' sizeof(USE_OPTION_TRANSPORT_PARAMETERS) + sizeof(TRANSPORT_INFO)
    Reserved As Integer ' 0
    ' Followed by TRANSPORT_INFO
End Type

Public Type SMB_COMPRESSION_INFO
    Switch As Byte ' FALSE: OFF; TRUE: ON;
    Reserved1 As Byte ' 0
    Reserved2 As Integer ' 0
    Reserved3 As Long ' 0
End Type

Public Type SMB_USE_OPTION_COMPRESSION_PARAMETERS
    Tag As LmUseOptionsTags ' 'ParC'
    Length As Integer
    Reserved As Integer
End Type

Public Type BLOCK_NTLM_INFO
    BlockNTLM As Byte
    Reserved1 As Byte ' 0
    Reserved2 As Integer ' 0
    Reserved3 As Long ' 0 
End Type

Public Type USE_OPTION_BLOCK_NTLM_PARAMETERS
    Tag As LmUseOptionsTags ' 'NolB'
    Length As Integer
    Reserved As Integer
End Type

Public Type SMB_TREE_CONNECT_PARAMETERS
    EABufferOffset As Long ' relative offset 
    EABufferLen As Long
    CreateOptions As Long
    TreeConnectAttributes As Long
End Type

Public Type USE_OPTION_PROPERTIES
    Tag As Long
    pInfo As LongPtr
    Length As LongPtr
End Type


'lmat.h
Public Enum LmJobFlags
    JOB_RUN_PERIODICALLY = &H01  '  set if EVERY
'   Was there an error last time we tried to exec a program on behalf of
'   this job.
'   This flag is meaningfull on output only!
    JOB_EXEC_ERROR = &H02  '  set if error
'   Will this job run today or tomorrow.
'   This flag is meaningfull on output only!
    JOB_RUNS_TODAY = &H04  '  set if today
'   Add current day of the month to DaysOfMonth input.
'   This flag is meaningfull on input only!
    JOB_ADD_CURRENT_DATE = &H08  ' set if to add current date
'   Will this job be run interactively or not.  Windows NT 3.1 do not
'   know about this bit, i.e. they submit interactive jobs only.
    JOB_NONINTERACTIVE = &H10  ' set for noninteractive
    JOB_INPUT_FLAGS = (JOB_RUN_PERIODICALLY Or JOB_ADD_CURRENT_DATE Or JOB_NONINTERACTIVE)
    JOB_OUTPUT_FLAGS = (JOB_RUN_PERIODICALLY Or JOB_EXEC_ERROR Or JOB_RUNS_TODAY Or JOB_NONINTERACTIVE)
End Enum

Public Type AT_INFO
    JobTime As LongPtr
    DaysOfMonth As Long
    DaysOfWeek As Byte
    Flags As Byte
    Command As LongPtr
End Type

Public Type AT_ENUM
    JobId As Long
    JobTime As LongPtr
    DaysOfMonth As Long
    DaysOfWeek As Byte
    Flags As Byte
    Command As LongPtr
End Type

[Description("NetScheduleJobAdd is no longer available for use as of Windows 8. Instead, use the Task Scheduler 2.0 Interfaces.")]
Public Declare PtrSafe Function NetScheduleJobAdd Lib "netapi32" (ByVal Servername As LongPtr, Buffer As Any, JobId As Long) As Long
[Description("NetScheduleJobDel is no longer available for use as of Windows 8. Instead, use the Task Scheduler 2.0 Interfaces.")]
Public Declare PtrSafe Function NetScheduleJobDel Lib "netapi32" (ByVal Servername As LongPtr, ByVal MinJobId As Long, ByVal MaxJobId As Long) As Long
[Description("NetScheduleJobEnum is no longer available for use as of Windows 8. Instead, use the Task Scheduler 2.0 Interfaces.")]
Public Declare PtrSafe Function NetScheduleJobEnum Lib "netapi32" (ByVal Servername As LongPtr, PointerToBuffer As LongPtr, ByVal PrefferedMaximumLength As Long, EntriesRead As Long, TotalEntries As Long, Optional ResumeHandle As Long) As Long
[Description("NetScheduleJobGetInfo is no longer available for use as of Windows 8. Instead, use the Task Scheduler 2.0 Interfaces.")]
Public Declare PtrSafe Function NetScheduleJobGetInfo Lib "netapi32" (ByVal Servername As LongPtr, ByVal JobId As Long, PointerToBuffer As LongPtr) As Long

'lmrepl.h

Public Enum LmReplRoles
    REPL_ROLE_EXPORT = 1
    REPL_ROLE_IMPORT = 2
    REPL_ROLE_BOTH = 3
End Enum

Public Enum LmReplInfoLevels
    REPL_INTERVAL_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + 0)
    REPL_PULSE_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + 1)
    REPL_GUARDTIME_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + 2)
    REPL_RANDOM_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + 3)
End Enum

Public Type REPL_INFO_0
    rp0_role As LmReplRoles
    rp0_exportpath As LongPtr
    rp0_exportlist As LongPtr
    rp0_importpath As LongPtr
    rp0_importlist As LongPtr
    rp0_logonusername As LongPtr
    rp0_interval As Long
    rp0_pulse As Long
    rp0_guardtime As Long
    rp0_random As Long
End Type

Public Type REPL_INFO_1000
    rp1000_interval As Long
End Type

Public Type REPL_INFO_1001
    rp1001_pulse As Long
End Type

Public Type REPL_INFO_1002
    rp1002_guardtime As Long
End Type

Public Type REPL_INFO_1003
    rp1003_random As Long
End Type

Public Declare PtrSafe Function NetReplGetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, bufptr As LongPtr) As Long
Public Declare PtrSafe Function NetReplSetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, buf As Any, Optional parm_err As Long) As Long

Public Enum LmReplIntegrity
    REPL_INTEGRITY_FILE = 1
    REPL_INTEGRITY_TREE = 2
End Enum

Public Enum LmReplExtent
    REPL_EXTENT_FILE = 1
    REPL_EXTENT_TREE = 2
End Enum

Public Enum LmReplExportInfoLevel
    REPL_EXPORT_INTEGRITY_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + 0)
    REPL_EXPORT_EXTENT_INFOLEVEL = (PARMNUM_BASE_INFOLEVEL + 1)
End Enum

Public Type REPL_EDIR_INFO_0
    rped0_dirname As LongPtr
End Type

Public Type REPL_EDIR_INFO_1
    rped1_dirname As LongPtr
    rped1_integrity As LmReplIntegrity
    rped1_extent As LmReplExtent
End Type

Public Type REPL_EDIR_INFO_2
    rped2_dirname As LongPtr
    rped2_integrity As LmReplIntegrity
    rped2_extent As LmReplExtent
    rped2_lockcount As Long
    rped2_locktime As Long
End Type

Public Type REPL_EDIR_INFO_1000
    rped1000_integrity As LmReplIntegrity
End Type
Public Type REPL_EDIR_INFO_1001
    rped1001_extent As LmReplExtent
End Type

Public Declare PtrSafe Function NetReplExportDirAdd Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, buf As Any, Optional parm_err As Long) As Long
Public Declare PtrSafe Function NetReplExportDirDel Lib "netapi32" (ByVal servername As LongPtr, ByVal dirname As LongPtr) As Long
Public Declare PtrSafe Function NetReplExportDirEnum Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, bufptr As LongPtr, ByVal prefmaxlen As Long, entriesread As Long, totalentries As Long, Optional resumehandle As Long) As Long
Public Declare PtrSafe Function NetReplExportDirGetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal dirname As LongPtr, ByVal level As Long, bufptr As LongPtr) As Long
Public Declare PtrSafe Function NetReplExportDirSetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal dirname As LongPtr, ByVal level As Long, buf As Any, Optional parm_err As Long) As Long
Public Declare PtrSafe Function NetReplExportDirLock Lib "netapi32" (ByVal servername As LongPtr, ByVal dirname As LongPtr) As Long
Public Declare PtrSafe Function NetReplExportDirUnlock Lib "netapi32" (ByVal servername As LongPtr, ByVal dirname As LongPtr, ByVal unlockforce As LmReplUnlockForce) As Long

Public Enum LmReplUnlockForce
    REPL_UNLOCK_NOFORCE = 0
    REPL_UNLOCK_FORCE = 1
End Enum

Public Type REPL_IDIR_INFO_0
    rpid0_dirname As LongPtr
End Type

Public Type REPL_IDIR_INFO_1
    rpid1_dirname As LongPtr
    rpid1_state As LmReplState
    rpid1_mastername As LongPtr
    rpid1_last_update_time As Long
    rpid1_lockcount As Long
    rpid1_locktime As Long
End Type

Public Declare PtrSafe Function NetReplImportDirAdd Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, buf As Any, Optional parm_err As Long) As Long
Public Declare PtrSafe Function NetReplImportDirDel Lib "netapi32" (ByVal servername As LongPtr, ByVal dirname As LongPtr) As Long
Public Declare PtrSafe Function NetReplImportDirEnum Lib "netapi32" (ByVal servername As LongPtr, ByVal level As Long, bufptr As LongPtr, ByVal prefmaxlen As Long, entriesread As Long, totalentries As Long, Optional resumehandle As Long) As Long
Public Declare PtrSafe Function NetReplImportDirGetInfo Lib "netapi32" (ByVal servername As LongPtr, ByVal dirname As LongPtr, ByVal level As Long, bufptr As LongPtr) As Long
Public Declare PtrSafe Function NetReplImportDirLock Lib "netapi32" (ByVal servername As LongPtr, ByVal dirname As LongPtr) As Long
Public Declare PtrSafe Function NetReplImportDirUnlock Lib "netapi32" (ByVal servername As LongPtr, ByVal dirname As LongPtr, ByVal unlockforce As LmReplUnlockForce) As Long

Public Enum LmReplState
    REPL_STATE_OK = 0
    REPL_STATE_NO_MASTER = 1
    REPL_STATE_NO_SYNC = 2
    REPL_STATE_NEVER_REPLICATED = 3
End Enum

#End Region

#Region "winmm"

#Region "winmm_mmreg"
Public Enum MM_MANUFACTURER_IDS
    MM_MICROSOFT = 1 /* Microsoft Corporation */

    MM_CREATIVE = 2 /* Creative Labs, Inc. */
    MM_MEDIAVISION = 3 /* Media Vision, Inc. */
    MM_FUJITSU = 4 /* Fujitsu Corp. */
    MM_PRAGMATRAX = 5 /* PRAGMATRAX Software */
    MM_CYRIX = 6 /* Cyrix Corporation */
    MM_PHILIPS_SPEECH_PROCESSING = 7 /* Philips Speech Processing */
    MM_NETXL = 8 /* NetXL, Inc. */
    MM_ZYXEL = 9 /* ZyXEL Communications, Inc. */
    MM_BECUBED = 10 /* BeCubed Software Inc. */
    MM_AARDVARK = 11 /* Aardvark Computer Systems, Inc. */
    MM_BINTEC = 12 /* Bin Tec Communications GmbH */
    MM_HEWLETT_PACKARD = 13 /* Hewlett-Packard Company */
    MM_ACULAB = 14 /* Aculab plc */
    MM_FAITH = 15 /* Faith,Inc. */
    MM_MITEL = 16 /* Mitel Corporation */
    MM_QUANTUM3D = 17 /* Quantum3D, Inc. */
    MM_SNI = 18 /* Siemens-Nixdorf */
    MM_EMU = 19 /* E-mu Systems, Inc. */
    MM_ARTISOFT = 20 /* Artisoft, Inc. */
    MM_TURTLE_BEACH = 21 /* Turtle Beach, Inc. */
    MM_IBM = 22 /* IBM Corporation */
    MM_VOCALTEC = 23 /* Vocaltec Ltd. */
    MM_ROLAND = 24 /* Roland */
    MM_DSP_SOLUTIONS = 25 /* DSP Solutions, Inc. */
    MM_NEC = 26 /* NEC */
    MM_ATI = 27 /* ATI Technologies Inc. */
    MM_WANGLABS = 28 /* Wang Laboratories, Inc. */
    MM_TANDY = 29 /* Tandy Corporation */
    MM_VOYETRA = 30 /* Voyetra */
    MM_ANTEX = 31 /* Antex Electronics Corporation */
    MM_ICL_PS = 32 /* ICL Personal Systems */
    MM_INTEL = 33 /* Intel Corporation */
    MM_GRAVIS = 34 /* Advanced Gravis */
    MM_VAL = 35 /* Video Associates Labs, Inc. */
    MM_INTERACTIVE = 36 /* InterActive Inc. */
    MM_YAMAHA = 37 /* Yamaha Corporation of America */
    MM_EVEREX = 38 /* Everex Systems, Inc. */
    MM_ECHO = 39 /* Echo Speech Corporation */
    MM_SIERRA = 40 /* Sierra Semiconductor Corp */
    MM_CAT = 41 /* Computer Aided Technologies */
    MM_APPS = 42 /* APPS Software International */
    MM_DSP_GROUP = 43 /* DSP Group, Inc. */
    MM_MELABS = 44 /* microEngineering Labs */
    MM_COMPUTER_FRIENDS = 45 /* Computer Friends, Inc. */
    MM_ESS = 46 /* ESS Technology */
    MM_AUDIOFILE = 47 /* Audio, Inc. */
    MM_MOTOROLA = 48 /* Motorola, Inc. */
    MM_CANOPUS = 49 /* Canopus, co., Ltd. */
    MM_EPSON = 50 /* Seiko Epson Corporation */
    MM_TRUEVISION = 51 /* Truevision */
    MM_AZTECH = 52 /* Aztech Labs, Inc. */
    MM_VIDEOLOGIC = 53 /* Videologic */
    MM_SCALACS = 54 /* SCALACS */
    MM_KORG = 55 /* Korg Inc. */
    MM_APT = 56 /* Audio Processing Technology */
    MM_ICS = 57 /* Integrated Circuit Systems, Inc. */
    MM_ITERATEDSYS = 58 /* Iterated Systems, Inc. */
    MM_METHEUS = 59 /* Metheus */
    MM_LOGITECH = 60 /* Logitech, Inc. */
    MM_WINNOV = 61 /* Winnov, Inc. */
    MM_NCR = 62 /* NCR Corporation */
    MM_EXAN = 63 /* EXAN */
    MM_AST = 64 /* AST Research Inc. */
    MM_WILLOWPOND = 65 /* Willow Pond Corporation */
    MM_SONICFOUNDRY = 66 /* Sonic Foundry */
    MM_VITEC = 67 /* Vitec Multimedia */
    MM_MOSCOM = 68 /* MOSCOM Corporation */
    MM_SILICONSOFT = 69 /* Silicon Soft, Inc. */
    MM_TERRATEC = 70 /* TerraTec Electronic GmbH */
    MM_MEDIASONIC = 71 /* MediaSonic Ltd. */
    MM_SANYO = 72 /* SANYO Electric Co., Ltd. */
    MM_SUPERMAC = 73 /* Supermac */
    MM_AUDIOPT = 74 /* Audio Processing Technology */
    MM_NOGATECH = 75 /* NOGATECH Ltd. */
    MM_SPEECHCOMP = 76 /* Speech Compression */
    MM_AHEAD = 77 /* Ahead, Inc. */
    MM_DOLBY = 78 /* Dolby Laboratories */
    MM_OKI = 79 /* OKI */
    MM_AURAVISION = 80 /* AuraVision Corporation */
    MM_OLIVETTI = 81 /* Ing C. Olivetti & C., S.p.A. */
    MM_IOMAGIC = 82 /* I/O Magic Corporation */
    MM_MATSUSHITA = 83 /* Matsushita Electric Industrial Co., Ltd. */
    MM_CONTROLRES = 84 /* Control Resources Limited */
    MM_XEBEC = 85 /* Xebec Multimedia Solutions Limited */
    MM_NEWMEDIA = 86 /* New Media Corporation */
    MM_NMS = 87 /* Natural MicroSystems */
    MM_LYRRUS = 88 /* Lyrrus Inc. */
    MM_COMPUSIC = 89 /* Compusic */
    MM_OPTI = 90 /* OPTi Computers Inc. */
    MM_ADLACC = 91 /* Adlib Accessories Inc. */
    MM_COMPAQ = 92 /* Compaq Computer Corp. */
    MM_DIALOGIC = 93 /* Dialogic Corporation */
    MM_INSOFT = 94 /* InSoft, Inc. */
    MM_MPTUS = 95 /* M.P. Technologies, Inc. */
    MM_WEITEK = 96 /* Weitek */
    MM_LERNOUT_AND_HAUSPIE = 97 /* Lernout & Hauspie */
    MM_QCIAR = 98 /* Quanta Computer Inc. */
    MM_APPLE = 99 /* Apple Computer, Inc. */
    MM_DIGITAL = 100 /* Digital Equipment Corporation */
    MM_MOTU = 101 /* Mark of the Unicorn */
    MM_WORKBIT = 102 /* Workbit Corporation */
    MM_OSITECH = 103 /* Ositech Communications Inc. */
    MM_MIRO = 104 /* miro Computer Products AG */
    MM_CIRRUSLOGIC = 105 /* Cirrus Logic */
    MM_ISOLUTION = 106 /* ISOLUTION B.V. */
    MM_HORIZONS = 107 /* Horizons Technology, Inc. */
    MM_CONCEPTS = 108 /* Computer Concepts Ltd. */
    MM_VTG = 109 /* Voice Technologies Group, Inc. */
    MM_RADIUS = 110 /* Radius */
    MM_ROCKWELL = 111 /* Rockwell International */
    MM_XYZ = 112 /* Co. XYZ for testing */
    MM_OPCODE = 113 /* Opcode Systems */
    MM_VOXWARE = 114 /* Voxware Inc. */
    MM_NORTHERN_TELECOM = 115 /* Northern Telecom Limited */
    MM_APICOM = 116 /* APICOM */
    MM_GRANDE = 117 /* Grande Software */
    MM_ADDX = 118 /* ADDX */
    MM_WILDCAT = 119 /* Wildcat Canyon Software */
    MM_RHETOREX = 120 /* Rhetorex Inc. */
    MM_BROOKTREE = 121 /* Brooktree Corporation */
    MM_ENSONIQ = 125 /* ENSONIQ Corporation */
    MM_FAST = 126 /* FAST Multimedia AG */
    MM_NVIDIA = 127 /* NVidia Corporation */
    MM_OKSORI = 128 /* OKSORI Co., Ltd. */
    MM_DIACOUSTICS = 129 /* DiAcoustics, Inc. */
    MM_GULBRANSEN = 130 /* Gulbransen, Inc. */
    MM_KAY_ELEMETRICS = 131 /* Kay Elemetrics, Inc. */
    MM_CRYSTAL = 132 /* Crystal Semiconductor Corporation */
    MM_SPLASH_STUDIOS = 133 /* Splash Studios */
    MM_QUARTERDECK = 134 /* Quarterdeck Corporation */
    MM_TDK = 135 /* TDK Corporation */
    MM_DIGITAL_AUDIO_LABS = 136 /* Digital Audio Labs, Inc. */
    MM_SEERSYS = 137 /* Seer Systems, Inc. */
    MM_PICTURETEL = 138 /* PictureTel Corporation */
    MM_ATT_MICROELECTRONICS = 139 /* AT&T Microelectronics */
    MM_OSPREY = 140 /* Osprey Technologies, Inc. */
    MM_MEDIATRIX = 141 /* Mediatrix Peripherals */
    MM_SOUNDESIGNS = 142 /* SounDesignS M.C.S. Ltd. */
    MM_ALDIGITAL = 143 /* A.L. Digital Ltd. */
    MM_SPECTRUM_SIGNAL_PROCESSING = 144 /* Spectrum Signal Processing, Inc. */
    MM_ECS = 145 /* Electronic Courseware Systems, Inc. */
    MM_AMD = 146 /* AMD */
    MM_COREDYNAMICS = 147 /* Core Dynamics */
    MM_CANAM = 148 /* CANAM Computers */
    MM_SOFTSOUND = 149 /* Softsound, Ltd. */
    MM_NORRIS = 150 /* Norris Communications, Inc. */
    MM_DDD = 151 /* Danka Data Devices */
    MM_EUPHONICS = 152 /* EuPhonics */
    MM_PRECEPT = 153 /* Precept Software, Inc. */
    MM_CRYSTAL_NET = 154 /* Crystal Net Corporation */
    MM_CHROMATIC = 155 /* Chromatic Research, Inc. */
    MM_VOICEINFO = 156 /* Voice Information Systems, Inc. */
    MM_VIENNASYS = 157 /* Vienna Systems */
    MM_CONNECTIX = 158 /* Connectix Corporation */
    MM_GADGETLABS = 159 /* Gadget Labs LLC */
    MM_FRONTIER = 160 /* Frontier Design Group LLC */
    MM_VIONA = 161 /* Viona Development GmbH */
    MM_CASIO = 162 /* Casio Computer Co., LTD */
    MM_DIAMONDMM = 163 /* Diamond Multimedia */
    MM_S3 = 164 /* S3 */
    MM_DVISION = 165 /* D-Vision Systems, Inc. */
    MM_NETSCAPE = 166 /* Netscape Communications */
    MM_SOUNDSPACE = 167 /* Soundspace Audio */
    MM_VANKOEVERING = 168 /* VanKoevering Company */
    MM_QTEAM = 169 /* Q-Team */
    MM_ZEFIRO = 170 /* Zefiro Acoustics */
    MM_STUDER = 171 /* Studer Professional Audio AG */
    MM_FRAUNHOFER_IIS = 172 /* Fraunhofer IIS */
    MM_QUICKNET = 173 /* Quicknet Technologies */
    MM_ALARIS = 174 /* Alaris, Inc. */
    MM_SICRESOURCE = 175 /* SIC Resource Inc. */
    MM_NEOMAGIC = 176 /* NeoMagic Corporation */
    MM_MERGING_TECHNOLOGIES = 177 /* Merging Technologies S.A. */
    MM_XIRLINK = 178 /* Xirlink, Inc. */
    MM_COLORGRAPH = 179 /* Colorgraph (UK) Ltd */
    MM_OTI = 180 /* Oak Technology, Inc. */
    MM_AUREAL = 181 /* Aureal Semiconductor */
    MM_VIVO = 182 /* Vivo Software */
    MM_SHARP = 183 /* Sharp */
    MM_LUCENT = 184 /* Lucent Technologies */
    MM_ATT = 185 /* AT&T Labs, Inc. */
    MM_SUNCOM = 186 /* Sun Communications, Inc. */
    MM_SORVIS = 187 /* Sorenson Vision */
    MM_INVISION = 188 /* InVision Interactive */
    MM_BERKOM = 189 /* Deutsche Telekom Berkom GmbH */
    MM_MARIAN = 190 /* Marian GbR Leipzig */
    MM_DPSINC = 191 /* Digital Processing Systems, Inc. */
    MM_BCB = 192 /* BCB Holdings Inc. */
    MM_MOTIONPIXELS = 193 /* Motion Pixels */
    MM_QDESIGN = 194 /* QDesign Corporation */
    MM_NMP = 195 /* Nokia Mobile Phones */
    MM_DATAFUSION = 196 /* DataFusion Systems (Pty) (Ltd) */
    MM_DUCK = 197 /* The Duck Corporation */
    MM_FTR = 198 /* Future Technology Resources Pty Ltd */
    MM_BERCOS = 199 /* BERCOS GmbH */
    MM_ONLIVE = 200 /* OnLive! Technologies, Inc. */
    MM_SIEMENS_SBC = 201 /* Siemens Business Communications Systems */
    MM_TERALOGIC = 202 /* TeraLogic, Inc. */
    MM_PHONET = 203 /* PhoNet Communications Ltd. */
    MM_WINBOND = 204 /* Winbond Electronics Corp */
    MM_VIRTUALMUSIC = 205 /* Virtual Music, Inc. */
    MM_ENET = 206 /* e-Net, Inc. */
    MM_GUILLEMOT = 207 /* Guillemot International */
    MM_EMAGIC = 208 /* Emagic Soft- und Hardware GmbH */
    MM_MWM = 209 /* MWM Acoustics LLC */
    MM_PACIFICRESEARCH = 210 /* Pacific Research and Engineering Corporation */
    MM_SIPROLAB = 211 /* Sipro Lab Telecom Inc. */
    MM_LYNX = 212 /* Lynx Studio Technology, Inc. */
    MM_SPECTRUM_PRODUCTIONS = 213 /* Spectrum Productions */
    MM_DICTAPHONE = 214 /* Dictaphone Corporation */
    MM_QUALCOMM = 215 /* QUALCOMM, Inc. */
    MM_RZS = 216 /* Ring Zero Systems, Inc */
    MM_AUDIOSCIENCE = 217 /* AudioScience Inc. */
    MM_PINNACLE = 218 /* Pinnacle Systems, Inc. */
    MM_EES = 219 /* EES Technik fuer Musik GmbH */
    MM_HAFTMANN = 220 /* haftmann#software */
    MM_LUCID = 221 /* Lucid Technology, Symetrix Inc. */
    MM_HEADSPACE = 222 /* Headspace, Inc */
    MM_UNISYS = 223 /* UNISYS CORPORATION */
    MM_LUMINOSITI = 224 /* Luminositi, Inc. */
    MM_ACTIVEVOICE = 225 /* ACTIVE VOICE CORPORATION */
    MM_DTS = 226 /* Digital Theater Systems, Inc. */
    MM_DIGIGRAM = 227 /* DIGIGRAM */
    MM_SOFTLAB_NSK = 228 /* Softlab-Nsk */
    MM_FORTEMEDIA = 229 /* ForteMedia, Inc */
    MM_SONORUS = 230 /* Sonorus, Inc. */
    MM_ARRAY = 231 /* Array Microsystems, Inc. */
    MM_DATARAN = 232 /* Data Translation, Inc. */
    MM_I_LINK = 233 /* I-link Worldwide */
    MM_SELSIUS_SYSTEMS = 234 /* Selsius Systems Inc. */
    MM_ADMOS = 235 /* AdMOS Technology, Inc. */
    MM_LEXICON = 236 /* Lexicon Inc. */
    MM_SGI = 237 /* Silicon Graphics Inc. */
    MM_IPI = 238 /* Interactive Product Inc. */
    MM_ICE = 239 /* IC Ensemble, Inc. */
    MM_VQST = 240 /* ViewQuest Technologies Inc. */
    MM_ETEK = 241 /* eTEK Labs Inc. */
    MM_CS = 242 /* Consistent Software */
    MM_ALESIS = 243 /* Alesis Studio Electronics */
    MM_INTERNET = 244 /* INTERNET Corporation */
    MM_SONY = 245 /* Sony Corporation */
    MM_HYPERACTIVE = 246 /* Hyperactive Audio Systems, Inc. */
    MM_UHER_INFORMATIC = 247 /* UHER informatic GmbH */
    MM_SYDEC_NV = 248 /* Sydec NV */
    MM_FLEXION = 249 /* Flexion Systems Ltd. */
    MM_VIA = 250 /* Via Technologies, Inc. */
    MM_MICRONAS = 251 /* Micronas Semiconductors, Inc. */
    MM_ANALOGDEVICES = 252 /* Analog Devices, Inc. */
    MM_HP = 253 /* Hewlett Packard Company */
    MM_MATROX_DIV = 254 /* Matrox */
    MM_QUICKAUDIO = 255 /* Quick Audio, GbR */
    MM_YOUCOM = 256 /* You/Com Audiocommunicatie BV */
    MM_RICHMOND = 257 /* Richmond Sound Design Ltd. */
    MM_IODD = 258 /* I-O Data Device, Inc. */
    MM_ICCC = 259 /* ICCC A/S */
    MM_3COM = 260 /* 3COM Corporation */
    MM_MALDEN = 261 /* Malden Electronics Ltd. */
    MM_3DFX = 262 /* 3Dfx Interactive, Inc. */
    MM_MINDMAKER = 263 /* Mindmaker, Inc. */
    MM_TELEKOL = 264 /* Telekol Corp. */
    MM_ST_MICROELECTRONICS = 265 /* ST Microelectronics */
    MM_ALGOVISION = 266 /* Algo Vision Systems GmbH */
    MM_UNMAPPED = &Hffff& /* extensible MID mapping */
    MM_PID_UNMAPPED = MM_UNMAPPED /* extensible PID mapping */
End Enum


Public Type EXBMINFOHEADER
    bmi As BITMAPINFOHEADER
    '        /* extended BITMAPINFOHEADER fields */
    biExtDataOffset As Long
    '       /* Other stuff will go here */
    '       /* ... */
    '        /* Format-specific information */
    '        /* biExtDataOffset points here */
End Type

Public Const JPEG_DIB = &H4745504a ' mmioFOURCC('J','P','E','G')
Public Const MJPG_DIB = &H47504a4d ' mmioFOURCC('M','J','P','G')    /* Motion JPEG DIB biCompression     */
Public Const BICOMP_IBMULTIMOTION = &H49544c55 'mmioFOURCC('U', 'L', 'T', 'I')
Public Const BICOMP_IBMPHOTOMOTION = &H4f4d4850 ' mmioFOURCC('P', 'H', 'M', 'O')
Public Const BICOMP_CREATIVEYUV = &H76757963 ' mmioFOURCC('c', 'y', 'u', 'v')


Public Const JIFMK_SOF0 As Integer = &HFFC0 /* SOF Huff - Baseline DCT*/
Public Const JIFMK_SOF1 As Integer = &HFFC1 /* SOF Huff - Extended sequential DCT*/
Public Const JIFMK_SOF2 As Integer = &HFFC2 /* SOF Huff - Progressive DCT*/
Public Const JIFMK_SOF3 As Integer = &HFFC3 /* SOF Huff - Spatial (sequential) lossless*/
Public Const JIFMK_SOF5 As Integer = &HFFC5 /* SOF Huff - Differential sequential DCT*/
Public Const JIFMK_SOF6 As Integer = &HFFC6 /* SOF Huff - Differential progressive DCT*/
Public Const JIFMK_SOF7 As Integer = &HFFC7 /* SOF Huff - Differential spatial*/
Public Const JIFMK_JPG As Integer = &HFFC8 /* SOF Arith - Reserved for JPEG extensions*/
Public Const JIFMK_SOF9 As Integer = &HFFC9 /* SOF Arith - Extended sequential DCT*/
Public Const JIFMK_SOF10 As Integer = &HFFCA /* SOF Arith - Progressive DCT*/
Public Const JIFMK_SOF11 As Integer = &HFFCB /* SOF Arith - Spatial (sequential) lossless*/
Public Const JIFMK_SOF13 As Integer = &HFFCD /* SOF Arith - Differential sequential DCT*/
Public Const JIFMK_SOF14 As Integer = &HFFCE /* SOF Arith - Differential progressive DCT*/
Public Const JIFMK_SOF15 As Integer = &HFFCF /* SOF Arith - Differential spatial*/
Public Const JIFMK_DHT As Integer = &HFFC4 /* Define Huffman Table(s) */
Public Const JIFMK_DAC As Integer = &HFFCC /* Define Arithmetic coding conditioning(s) */
Public Const JIFMK_RST0 As Integer = &HFFD0 /* Restart with modulo 8 count 0 */
Public Const JIFMK_RST1 As Integer = &HFFD1 /* Restart with modulo 8 count 1 */
Public Const JIFMK_RST2 As Integer = &HFFD2 /* Restart with modulo 8 count 2 */
Public Const JIFMK_RST3 As Integer = &HFFD3 /* Restart with modulo 8 count 3 */
Public Const JIFMK_RST4 As Integer = &HFFD4 /* Restart with modulo 8 count 4 */
Public Const JIFMK_RST5 As Integer = &HFFD5 /* Restart with modulo 8 count 5 */
Public Const JIFMK_RST6 As Integer = &HFFD6 /* Restart with modulo 8 count 6 */
Public Const JIFMK_RST7 As Integer = &HFFD7 /* Restart with modulo 8 count 7 */
Public Const JIFMK_SOI As Integer = &HFFD8 /* Start of Image */
Public Const JIFMK_EOI As Integer = &HFFD9 /* End of Image */
Public Const JIFMK_SOS As Integer = &HFFDA /* Start of Scan */
Public Const JIFMK_DQT As Integer = &HFFDB /* Define quantization Table(s) */
Public Const JIFMK_DNL As Integer = &HFFDC /* Define Number of Lines */
Public Const JIFMK_DRI As Integer = &HFFDD /* Define Restart Interval */
Public Const JIFMK_DHP As Integer = &HFFDE /* Define Hierarchical progression */
Public Const JIFMK_EXP As Integer = &HFFDF /* Expand Reference Component(s) */
Public Const JIFMK_APP0 As Integer = &HFFE0 /* Application Field 0*/
Public Const JIFMK_APP1 As Integer = &HFFE1 /* Application Field 1*/
Public Const JIFMK_APP2 As Integer = &HFFE2 /* Application Field 2*/
Public Const JIFMK_APP3 As Integer = &HFFE3 /* Application Field 3*/
Public Const JIFMK_APP4 As Integer = &HFFE4 /* Application Field 4*/
Public Const JIFMK_APP5 As Integer = &HFFE5 /* Application Field 5*/
Public Const JIFMK_APP6 As Integer = &HFFE6 /* Application Field 6*/
Public Const JIFMK_APP7 As Integer = &HFFE7 /* Application Field 7*/
Public Const JIFMK_JPG0 As Integer = &HFFF0 /* Reserved for JPEG extensions */
Public Const JIFMK_JPG1 As Integer = &HFFF1 /* Reserved for JPEG extensions */
Public Const JIFMK_JPG2 As Integer = &HFFF2 /* Reserved for JPEG extensions */
Public Const JIFMK_JPG3 As Integer = &HFFF3 /* Reserved for JPEG extensions */
Public Const JIFMK_JPG4 As Integer = &HFFF4 /* Reserved for JPEG extensions */
Public Const JIFMK_JPG5 As Integer = &HFFF5 /* Reserved for JPEG extensions */
Public Const JIFMK_JPG6 As Integer = &HFFF6 /* Reserved for JPEG extensions */
Public Const JIFMK_JPG7 As Integer = &HFFF7 /* Reserved for JPEG extensions */
Public Const JIFMK_JPG8 As Integer = &HFFF8 /* Reserved for JPEG extensions */
Public Const JIFMK_JPG9 As Integer = &HFFF9 /* Reserved for JPEG extensions */
Public Const JIFMK_JPG10 As Integer = &HFFFA /* Reserved for JPEG extensions */
Public Const JIFMK_JPG11 As Integer = &HFFFB /* Reserved for JPEG extensions */
Public Const JIFMK_JPG12 As Integer = &HFFFC /* Reserved for JPEG extensions */
Public Const JIFMK_JPG13 As Integer = &HFFFD /* Reserved for JPEG extensions */
Public Const JIFMK_COM As Integer = &HFFFE /* Comment */
Public Const JIFMK_TEM As Integer = &HFF01 /* for temp private use arith code */
Public Const JIFMK_RES As Integer = &HFF02 /* Reserved */
Public Const JIFMK_00 As Integer = &HFF00 /* Zero stuffed byte - entropy data */
Public Const JIFMK_FF As Integer = &HFFFF /* Fill byte */


Public Enum JpegColorSpaceIds
    JPEG_Y = 1  '  /* Y only component of YCbCr */
    JPEG_YCbCr = 2  '  /* YCbCr as define by CCIR 601 */
    JPEG_RGB = 3  '  /* 3 component RGB */
End Enum
Public Type JPEGINFOHEADER
    ' /* compression-specific fields */
    '   /* these fields are defined for 'JPEG' and 'MJPG' */
    JPEGSize As Long
    JPEGProcess As Long
    '   /* Process specific fields */
    JPEGColorSpaceID As JpegColorSpaceIds
    JPEGBitsPerSample As Long
    JPEGHSubSampling As Long
    JPEGVSubSampling As Long
End Type

#End Region

'Complete
#Region "winmm_sound"
Public Enum SND_FLAGS
    SND_ALIAS = &H10000 ' name is a WIN.INI [sounds] entry
    SND_ALIAS_ID = &H110000 ' name is a WIN.INI [sounds]Entry identifier
    SND_ALIAS_START = 0 ' must be > 4096 to keep strings insame section of resource file
    SND_APPLICATION = &H80 ' look for applicationspecific association
    SND_ASYNC = &H1 ' play asynchronously
    SND_FILENAME = &H20000 ' name is a file name
    SND_LOOP = &H8 ' loop the sound until nextsndPlaySound
    SND_MEMORY = &H4 ' lpszSoundName points to a memoryFile
    SND_NODEFAULT = &H2 ' silence not default, if soundnot found
    SND_NOSTOP = &H10 ' don't stop any currently playingsound
    SND_NOWAIT = &H2000 ' don't wait if the driver is busy
    SND_PURGE = &H40 ' purge non-static events forTask
    SND_RESERVED = &HFF000000 ' In particular these flags areReserved
    SND_RESOURCE = &H40004 ' name is a resource name or atom
    SND_RING = &H00100000 /* Treat this as a "ring" from a communications app - don't duck me */
    SND_SYSTEM = &H00200000 /* Treat this as a system sound */
    SND_SYNC = &H0 ' play synchronously (default)
    SND_TYPE_MASK = &H170007
End Enum

Public Const SND_ALIAS_SYSTEMASTERISK_STR      As String = "SystemAsterisk"
Public Const SND_ALIAS_SYSTEMDEFAULT_STR       As String = "SystemDefault"
Public Const SND_ALIAS_SYSTEMEXCLAMATION_STR   As String = "SystemExclamation"
Public Const SND_ALIAS_SYSTEMEXIT_STR          As String = "SystemExit"
Public Const SND_ALIAS_SYSTEMHAND_STR          As String = "SystemHand"
Public Const SND_ALIAS_SYSTEMQUESTION_STR      As String = "SystemQuestion"
Public Const SND_ALIAS_SYSTEMSTART_STR         As String = "SystemStart"
Public Const SND_ALIAS_SYSTEMWELCOME_STR       As String = "SystemWelcome"
Public Const SND_ALIAS_YouGotMail_STR          As String = "MailBeep"
Public Enum PlaySoundAliasConstants
    SND_ALIAS_SYSTEMASTERISK = &H2A53
    SND_ALIAS_SYSTEMQUESTION = &H3F53
    SND_ALIAS_SYSTEMHAND = &H4853
    SND_ALIAS_SYSTEMEXIT = &H4553
    SND_ALIAS_SYSTEMSTART = &H5353
    SND_ALIAS_SYSTEMWELCOME = &H5753
    SND_ALIAS_SYSTEMEXCLAMATION = &H2153
    SND_ALIAS_SYSTEMDEFAULT = &H4453
End Enum
Public DeclareWide PtrSafe Function PlaySound Lib "winmm" Alias "PlaySoundW" (ByVal pszSound As String, ByVal hModule As LongPtr, ByVal dwFlags As SND_FLAGS) As Long
Public Declare PtrSafe Function PlaySoundA Lib "winmm" (ByVal pszSound As String, ByVal hModule As LongPtr, ByVal dwFlags As SND_FLAGS) As Long
Public Declare PtrSafe Function PlaySoundW Lib "winmm" ([TypeHint(PlaySoundAliasConstants)] ByVal pszSound As LongPtr, ByVal hModule As LongPtr, ByVal dwFlags As SND_FLAGS) As Long
Public DeclareWide PtrSafe Function sndPlaySound Lib "winmm" Alias "PlaySoundW" (ByVal lpszSound As String, ByVal dwFlags As SND_FLAGS) As Long
Public Declare PtrSafe Function sndPlaySoundA Lib "winmm" (ByVal lpszSound As String, ByVal dwFlags As SND_FLAGS) As Long
Public Declare PtrSafe Function sndPlaySoundW Lib "winmm" ([TypeHint(PlaySoundAliasConstants)] ByVal lpszSound As LongPtr, ByVal dwFlags As SND_FLAGS) As Long

Public Function sndAlias(ByVal ch0 As Long, ByVal ch1 As Long) As Long
    Return (SND_ALIAS_START + (ch0) Or ((ch1) << 8))
End Function
#End Region

#Region "winmm_time"

Public Const TIMERR_NOERROR  = (0) /* no error */
Public Const TIMERR_NOCANDO  = (TIMERR_BASE + 1) /* request not completed */
Public Const TIMERR_STRUCT  = (TIMERR_BASE + 33) /* time struct size */

Public Type TIMECAPS
    wPeriodMin As Long /* minimum period supported  */
    wPeriodMax As Long /* maximum period supported  */
End Type


Public Declare PtrSafe Function timeGetSystemTime Lib "winmm" (pmmt As MMTIME, ByVal cbmmt As Long) As Long
Public Declare PtrSafe Function timeGetTime Lib "winmm" () As Long
Public Declare PtrSafe Function timeGetDevCaps Lib "winmm" (ptc As TIMECAPS, ByVal cbtc As Long) As Long
Public Declare PtrSafe Function timeBeginPeriod Lib "winmm" (ByVal uPeriod As Long) As Long
Public Declare PtrSafe Function timeEndPeriod Lib "winmm" (ByVal uPeriod As Long) As Long

' typedef void (CALLBACK TIMECALLBACK)(UINT uTimerID, UINT uMsg, DWORD_PTR dwUser, DWORD_PTR dw1, DWORD_PTR dw2);
' typedef TIMECALLBACK FAR *LPTIMECALLBACK;

Public Enum WinmmTimerFlags
    TIME_ONESHOT = &H0000 /* program timer for single event */
    TIME_PERIODIC = &H0001 /* program for continuous periodic event */
 
    TIME_CALLBACK_FUNCTION = &H0000 /* callback is function */
    TIME_CALLBACK_EVENT_SET = &H0010 /* callback is event - use SetEvent */
    TIME_CALLBACK_EVENT_PULSE = &H0020 /* callback is event - use PulseEvent */
    
    TIME_KILL_SYNCHRONOUS = &H0100 /* This flag prevents the event from occurring */
                                        /* after the user calls timeKillEvent() to */
                                        /* destroy it. */
End Enum
                                        
Public Declare PtrSafe Function timeSetEvent Lib "winmm" (ByVal uDelay As Long, ByVal uResolution As Long, ByVal fptc As LongPtr, ByVal dwUser As LongPtr, ByVal fuEvent As WinmmTimerFlags) As Long
Public Declare PtrSafe Function timeKillEvent Lib "winmm" (ByVal uTimerID As Long) As Long

#End Region
'Complete
#Region "winmm_mci"
Public Enum MCIERROR
    MCIERR_INVALID_DEVICE_ID = (MCIERR_BASE + 1)
    MCIERR_UNRECOGNIZED_KEYWORD = (MCIERR_BASE + 3)
    MCIERR_UNRECOGNIZED_COMMAND = (MCIERR_BASE + 5)
    MCIERR_HARDWARE = (MCIERR_BASE + 6)
    MCIERR_INVALID_DEVICE_NAME = (MCIERR_BASE + 7)
    MCIERR_OUT_OF_MEMORY = (MCIERR_BASE + 8)
    MCIERR_DEVICE_OPEN = (MCIERR_BASE + 9)
    MCIERR_CANNOT_LOAD_DRIVER = (MCIERR_BASE + 10)
    MCIERR_MISSING_COMMAND_STRING = (MCIERR_BASE + 11)
    MCIERR_PARAM_OVERFLOW = (MCIERR_BASE + 12)
    MCIERR_MISSING_STRING_ARGUMENT = (MCIERR_BASE + 13)
    MCIERR_BAD_INTEGER = (MCIERR_BASE + 14)
    MCIERR_PARSER_INTERNAL = (MCIERR_BASE + 15)
    MCIERR_DRIVER_INTERNAL = (MCIERR_BASE + 16)
    MCIERR_MISSING_PARAMETER = (MCIERR_BASE + 17)
    MCIERR_UNSUPPORTED_FUNCTION = (MCIERR_BASE + 18)
    MCIERR_FILE_NOT_FOUND = (MCIERR_BASE + 19)
    MCIERR_DEVICE_NOT_READY = (MCIERR_BASE + 20)
    MCIERR_INTERNAL = (MCIERR_BASE + 21)
    MCIERR_DRIVER = (MCIERR_BASE + 22)
    MCIERR_CANNOT_USE_ALL = (MCIERR_BASE + 23)
    MCIERR_MULTIPLE = (MCIERR_BASE + 24)
    MCIERR_EXTENSION_NOT_FOUND = (MCIERR_BASE + 25)
    MCIERR_OUTOFRANGE = (MCIERR_BASE + 26)
    MCIERR_FLAGS_NOT_COMPATIBLE = (MCIERR_BASE + 28)
    MCIERR_FILE_NOT_SAVED = (MCIERR_BASE + 30)
    MCIERR_DEVICE_TYPE_REQUIRED = (MCIERR_BASE + 31)
    MCIERR_DEVICE_LOCKED = (MCIERR_BASE + 32)
    MCIERR_DUPLICATE_ALIAS = (MCIERR_BASE + 33)
    MCIERR_BAD_CONSTANT = (MCIERR_BASE + 34)
    MCIERR_MUST_USE_SHAREABLE = (MCIERR_BASE + 35)
    MCIERR_MISSING_DEVICE_NAME = (MCIERR_BASE + 36)
    MCIERR_BAD_TIME_FORMAT = (MCIERR_BASE + 37)
    MCIERR_NO_CLOSING_QUOTE = (MCIERR_BASE + 38)
    MCIERR_DUPLICATE_FLAGS = (MCIERR_BASE + 39)
    MCIERR_INVALID_FILE = (MCIERR_BASE + 40)
    MCIERR_NULL_PARAMETER_BLOCK = (MCIERR_BASE + 41)
    MCIERR_UNNAMED_RESOURCE = (MCIERR_BASE + 42)
    MCIERR_NEW_REQUIRES_ALIAS = (MCIERR_BASE + 43)
    MCIERR_NOTIFY_ON_AUTO_OPEN = (MCIERR_BASE + 44)
    MCIERR_NO_ELEMENT_ALLOWED = (MCIERR_BASE + 45)
    MCIERR_NONAPPLICABLE_FUNCTION = (MCIERR_BASE + 46)
    MCIERR_ILLEGAL_FOR_AUTO_OPEN = (MCIERR_BASE + 47)
    MCIERR_FILENAME_REQUIRED = (MCIERR_BASE + 48)
    MCIERR_EXTRA_CHARACTERS = (MCIERR_BASE + 49)
    MCIERR_DEVICE_NOT_INSTALLED = (MCIERR_BASE + 50)
    MCIERR_GET_CD = (MCIERR_BASE + 51)
    MCIERR_SET_CD = (MCIERR_BASE + 52)
    MCIERR_SET_DRIVE = (MCIERR_BASE + 53)
    MCIERR_DEVICE_LENGTH = (MCIERR_BASE + 54)
    MCIERR_DEVICE_ORD_LENGTH = (MCIERR_BASE + 55)
    MCIERR_NO_INTEGER = (MCIERR_BASE + 56)
    MCIERR_WAVE_OUTPUTSINUSE = (MCIERR_BASE + 64)
    MCIERR_WAVE_SETOUTPUTINUSE = (MCIERR_BASE + 65)
    MCIERR_WAVE_INPUTSINUSE = (MCIERR_BASE + 66)
    MCIERR_WAVE_SETINPUTINUSE = (MCIERR_BASE + 67)
    MCIERR_WAVE_OUTPUTUNSPECIFIED = (MCIERR_BASE + 68)
    MCIERR_WAVE_INPUTUNSPECIFIED = (MCIERR_BASE + 69)
    MCIERR_WAVE_OUTPUTSUNSUITABLE = (MCIERR_BASE + 70)
    MCIERR_WAVE_SETOUTPUTUNSUITABLE = (MCIERR_BASE + 71)
    MCIERR_WAVE_INPUTSUNSUITABLE = (MCIERR_BASE + 72)
    MCIERR_WAVE_SETINPUTUNSUITABLE = (MCIERR_BASE + 73)
    MCIERR_SEQ_DIV_INCOMPATIBLE = (MCIERR_BASE + 80)
    MCIERR_SEQ_PORT_INUSE = (MCIERR_BASE + 81)
    MCIERR_SEQ_PORT_NONEXISTENT = (MCIERR_BASE + 82)
    MCIERR_SEQ_PORT_MAPNODEVICE = (MCIERR_BASE + 83)
    MCIERR_SEQ_PORT_MISCERROR = (MCIERR_BASE + 84)
    MCIERR_SEQ_TIMER = (MCIERR_BASE + 85)
    MCIERR_SEQ_PORTUNSPECIFIED = (MCIERR_BASE + 86)
    MCIERR_SEQ_NOMIDIPRESENT = (MCIERR_BASE + 87)
    MCIERR_NO_WINDOW = (MCIERR_BASE + 90)
    MCIERR_CREATEWINDOW = (MCIERR_BASE + 91)
    MCIERR_FILE_READ = (MCIERR_BASE + 92)
    MCIERR_FILE_WRITE = (MCIERR_BASE + 93)
    MCIERR_NO_IDENTITY = (MCIERR_BASE + 94)
    MCIERR_CUSTOM_DRIVER_BASE = (MCIERR_BASE + 256)
End Enum
Public Enum MCI_COMMANDS
    MCI_OPEN = &H0803
    MCI_CLOSE = &H0804
    MCI_ESCAPE = &H0805
    MCI_PLAY = &H0806
    MCI_SEEK = &H0807
    MCI_STOP = &H0808
    MCI_PAUSE = &H0809
    MCI_INFO = &H080A
    MCI_GETDEVCAPS = &H080B
    MCI_SPIN = &H080C
    MCI_SET = &H080D
    MCI_STEP = &H080E
    MCI_RECORD = &H080F
    MCI_SYSINFO = &H0810
    MCI_BREAK = &H0811
    MCI_SOUND = &H0812
    MCI_SAVE = &H0813
    MCI_STATUS = &H0814
    MCI_CUE = &H0830
    MCI_REALIZE = &H0840
    MCI_WINDOW = &H0841
    MCI_PUT = &H0842
    MCI_WHERE = &H0843
    MCI_FREEZE = &H0844
    MCI_UNFREEZE = &H0845
    MCI_LOAD = &H0850
    MCI_CUT = &H0851
    MCI_COPY = &H0852
    MCI_PASTE = &H0853
    MCI_UPDATE = &H0854
    MCI_RESUME = &H0855
    MCI_DELETE = &H0856
End Enum

Public Enum MCI_DEVICE_TYPE
    MCI_DEVTYPE_VCR = 513 /* (MCI_STRING_OFFSET + 1) */
    MCI_DEVTYPE_VIDEODISC = 514 /* (MCI_STRING_OFFSET + 2) */
    MCI_DEVTYPE_OVERLAY = 515 /* (MCI_STRING_OFFSET + 3) */
    MCI_DEVTYPE_CD_AUDIO = 516 /* (MCI_STRING_OFFSET + 4) */
    MCI_DEVTYPE_DAT = 517 /* (MCI_STRING_OFFSET + 5) */
    MCI_DEVTYPE_SCANNER = 518 /* (MCI_STRING_OFFSET + 6) */
    MCI_DEVTYPE_ANIMATION = 519 /* (MCI_STRING_OFFSET + 7) */
    MCI_DEVTYPE_DIGITAL_VIDEO = 520 /* (MCI_STRING_OFFSET + 8) */
    MCI_DEVTYPE_OTHER = 521 /* (MCI_STRING_OFFSET + 9) */
    MCI_DEVTYPE_WAVEFORM_AUDIO = 522 /* (MCI_STRING_OFFSET + 10) */
    MCI_DEVTYPE_SEQUENCER = 523 /* (MCI_STRING_OFFSET + 11) */
    MCI_DEVTYPE_FIRST = MCI_DEVTYPE_VCR
    MCI_DEVTYPE_LAST = MCI_DEVTYPE_SEQUENCER
    MCI_DEVTYPE_FIRST_USER = &H1000
End Enum

Public Enum MCI_STATUS_MODE
    MCI_MODE_NOT_READY = (MCI_STRING_OFFSET + 12)
    MCI_MODE_STOP = (MCI_STRING_OFFSET + 13)
    MCI_MODE_PLAY = (MCI_STRING_OFFSET + 14)
    MCI_MODE_RECORD = (MCI_STRING_OFFSET + 15)
    MCI_MODE_SEEK = (MCI_STRING_OFFSET + 16)
    MCI_MODE_PAUSE = (MCI_STRING_OFFSET + 17)
    MCI_MODE_OPEN = (MCI_STRING_OFFSET + 18)
End Enum

Public Enum MCI_STATUS_TIMEFMT
    MCI_FORMAT_MILLISECONDS = 0
    MCI_FORMAT_HMS = 1
    MCI_FORMAT_MSF = 2
    MCI_FORMAT_FRAMES = 3
    MCI_FORMAT_SMPTE_24 = 4
    MCI_FORMAT_SMPTE_25 = 5
    MCI_FORMAT_SMPTE_30 = 6
    MCI_FORMAT_SMPTE_30DROP = 7
    MCI_FORMAT_BYTES = 8
    MCI_FORMAT_SAMPLES = 9
    MCI_FORMAT_TMSF = 10
End Enum

Public Enum MCI_NOTIFY_RESULT
    MCI_NOTIFY_SUCCESSFUL = &H0001
    MCI_NOTIFY_SUPERSEDED = &H0002
    MCI_NOTIFY_ABORTED = &H0004
    MCI_NOTIFY_FAILURE = &H0008
End Enum

Public Enum MCI_CMD_FLAGS
    MCI_NOTIFY = &H00000001
    MCI_WAIT = &H00000002
    MCI_FROM = &H00000004
    MCI_TO = &H00000008
    MCI_TRACK = &H00000010
End Enum

Public Enum MCI_OPEN_FLAGS
    MCI_OPEN_SHAREABLE = &H00000100
    MCI_OPEN_ELEMENT = &H00000200
    MCI_OPEN_ALIAS = &H00000400
    MCI_OPEN_ELEMENT_ID = &H00000800
    MCI_OPEN_TYPE_ID = &H00001000
    MCI_OPEN_TYPE = &H00002000
End Enum

Public Enum MCI_SEEK_FLAGS
    MCI_SEEK_TO_START = &H00000100
    MCI_SEEK_TO_END = &H00000200
End Enum

Public Enum MCI_STATUS_FLAGS
    MCI_STATUS_ITEM = &H00000100
    MCI_STATUS_START = &H00000200
End Enum

Public Enum MCI_STATUS_ITEM
    MCI_STATUS_LENGTH = &H00000001
    MCI_STATUS_POSITION = &H00000002
    MCI_STATUS_NUMBER_OF_TRACKS = &H00000003
    MCI_STATUS_MODE = &H00000004
    MCI_STATUS_MEDIA_PRESENT = &H00000005
    MCI_STATUS_TIME_FORMAT = &H00000006
    MCI_STATUS_READY = &H00000007
    MCI_STATUS_CURRENT_TRACK = &H00000008
End Enum

Public Enum MCI_INFO_FLAGS
    MCI_INFO_PRODUCT = &H00000100
    MCI_INFO_FILE = &H00000200
    MCI_INFO_MEDIA_UPC = &H00000400
    MCI_INFO_MEDIA_IDENTITY = &H00000800
    MCI_INFO_NAME = &H00001000
    MCI_INFO_COPYRIGHT = &H00002000
End Enum

Public Enum MCI_GETDEVCAPS_FLAGS
    MCI_GETDEVCAPS_ITEM = &H00000100
End Enum

Public Enum MCI_GETDEVCAPS_PARAM
    MCI_GETDEVCAPS_CAN_RECORD = &H00000001
    MCI_GETDEVCAPS_HAS_AUDIO = &H00000002
    MCI_GETDEVCAPS_HAS_VIDEO = &H00000003
    MCI_GETDEVCAPS_DEVICE_TYPE = &H00000004
    MCI_GETDEVCAPS_USES_FILES = &H00000005
    MCI_GETDEVCAPS_COMPOUND_DEVICE = &H00000006
    MCI_GETDEVCAPS_CAN_EJECT = &H00000007
    MCI_GETDEVCAPS_CAN_PLAY = &H00000008
    MCI_GETDEVCAPS_CAN_SAVE = &H00000009
End Enum

Public Enum MCI_SYSINFO_FLAGS
    MCI_SYSINFO_QUANTITY = &H00000100
    MCI_SYSINFO_OPEN = &H00000200
    MCI_SYSINFO_NAME = &H00000400
    MCI_SYSINFO_INSTALLNAME = &H00000800
End Enum

Public Enum MCI_SET_FLAGS
    MCI_SET_DOOR_OPEN = &H00000100
    MCI_SET_DOOR_CLOSED = &H00000200
    MCI_SET_TIME_FORMAT = &H00000400
    MCI_SET_AUDIO = &H00000800
    MCI_SET_VIDEO = &H00001000
    MCI_SET_ON = &H00002000
    MCI_SET_OFF = &H00004000
End Enum

Public Enum MCI_SET_PARAM
    MCI_SET_AUDIO_ALL = &H00000000
    MCI_SET_AUDIO_LEFT = &H00000001
    MCI_SET_AUDIO_RIGHT = &H00000002
End Enum

Public Enum MCI_BREAK_FLAGS
    MCI_BREAK_KEY = &H00000100
    MCI_BREAK_HWND = &H00000200
    MCI_BREAK_OFF = &H00000400
End Enum

Public Enum MCI_BREAK_PARAM
    MCI_RECORD_INSERT = &H00000100
    MCI_RECORD_OVERWRITE = &H00000200
End Enum

Public Enum MCI_SAVE_FLAGS
    MCI_SAVE_FILE = &H00000100
End Enum

Public Enum MCI_LOAD_FLAGS
    MCI_LOAD_FILE = &H00000100
End Enum

Public Type MCI_GENERIC_PARMS
    dwCallback As LongPtr
End Type

[PackingAlignment(1)]
Public Type MCI_OPEN_PARMSA
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As String
    lpstrElementName As String
    lpstrAlias As String
End Type
[PackingAlignment(1)]
Public Type MCI_OPEN_PARMSW
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As LongPtr
    lpstrElementName As LongPtr
    lpstrAlias As LongPtr
End Type
[PackingAlignment(1)]
Public Type MCI_OPEN_PARMS
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As LongPtr
    lpstrElementName As LongPtr
    lpstrAlias As LongPtr
End Type

Public Type MCI_PLAY_PARMS
    dwCallback As LongPtr
    dwFrom As Long
    dwTo As Long
End Type

[PackingAlignment(1)]
Public Type MCI_SEEK_PARMS
    dwCallback As LongPtr
    dwTo As Long
End Type

Public Type MCI_STATUS_PARMS
    dwCallback As LongPtr
    dwReturn As LongPtr
    dwItem As MCI_STATUS_ITEM
    dwTrack As Long
End Type

[PackingAlignment(1)]
Public Type MCI_INFO_PARMSA
    dwCallback As LongPtr
    lpstrReturn As String
    dwRetSize As Long
End Type
[PackingAlignment(1)]
Public Type MCI_INFO_PARMSW
    dwCallback As LongPtr
    lpstrReturn As LongPtr
    dwRetSize As Long
End Type
[PackingAlignment(1)]
Public Type MCI_INFO_PARMS
    dwCallback As LongPtr
    lpstrReturn As LongPtr
    dwRetSize As Long
End Type

Public Type MCI_GETDEVCAPS_PARMS
    dwCallback As LongPtr
    dwReturn As Long
    dwItem As MCI_GETDEVCAPS_PARAM
End Type

[PackingAlignment(1)]
Public Type MCI_SYSINFO_PARMSA
    dwCallback As LongPtr
    lpstrReturn As String
    dwRetSize As Long
    dwNumber As Long
    wDeviceType As MCI_DEVICE_TYPE
End Type
[PackingAlignment(1)]
Public Type MCI_SYSINFO_PARMSW
    dwCallback As LongPtr
    lpstrReturn As LongPtr
    dwRetSize As Long
    dwNumber As Long
    wDeviceType As MCI_DEVICE_TYPE
End Type
[PackingAlignment(1)]
Public Type MCI_SYSINFO_PARMS
    dwCallback As LongPtr
    lpstrReturn As LongPtr
    dwRetSize As Long
    dwNumber As Long
    wDeviceType As MCI_DEVICE_TYPE
End Type

Public Type MCI_SET_PARMS
    dwCallback As LongPtr
    dwTimeFormat As MCI_STATUS_TIMEFMT
    dwAudio As Long
End Type

[PackingAlignment(1)]
Public Type MCI_BREAK_PARMS
    dwCallback As LongPtr
    nVirtKey As Long
    hwndBreak As LongPtr
End Type

Public Type MCI_SAVE_PARMSA
    dwCallback As LongPtr
    lpfilename As String
End Type
Public Type MCI_SAVE_PARMSW
    dwCallback As LongPtr
    lpfilename As LongPtr
End Type
Public Type MCI_SAVE_PARMS
    dwCallback As LongPtr
    lpfilename As LongPtr
End Type

Public Type MCI_LOAD_PARMSA
    dwCallback As LongPtr
    lpfilename As String
End Type
Public Type MCI_LOAD_PARMSW
    dwCallback As LongPtr
    lpfilename As LongPtr
End Type
Public Type MCI_LOAD_PARMS
    dwCallback As LongPtr
    lpfilename As LongPtr
End Type

Public Type MCI_RECORD_PARMS
    dwCallback As LongPtr
    dwFrom As Long
    dwTo As Long
End Type

Public Const MCI_VD_MODE_PARK = (MCI_VD_OFFSET + 1)

Public Enum MciVdMedia
    MCI_VD_MEDIA_CLV = (MCI_VD_OFFSET + 2)
    MCI_VD_MEDIA_CAV = (MCI_VD_OFFSET + 3)
    MCI_VD_MEDIA_OTHER = (MCI_VD_OFFSET + 4)
End Enum

Public Const MCI_VD_FORMAT_TRACK = &H4001

Public Enum MciVdPlay
    MCI_VD_PLAY_REVERSE = &H00010000
    MCI_VD_PLAY_FAST = &H00020000
    MCI_VD_PLAY_SPEED = &H00040000
    MCI_VD_PLAY_SCAN = &H00080000
    MCI_VD_PLAY_SLOW = &H0010000
End Enum

Public Const MCI_VD_SEEK_REVERSE = &H10000

Public Enum MciVdStatus
    MCI_VD_STATUS_SPEED = &H00004002
    MCI_VD_STATUS_FORWARD = &H00004003
    MCI_VD_STATUS_MEDIA_TYPE = &H00004004
    MCI_VD_STATUS_SIDE = &H00004005
    MCI_VD_STATUS_DISC_SIZE = &H00004006
End Enum

Public Enum MciVdDevCapsFlags
    MCI_VD_GETDEVCAPS_CLV = &H00010000
    MCI_VD_GETDEVCAPS_CAV = &H00020000
End Enum

Public Enum MciVdSpin
    MCI_VD_SPIN_UP = &H00010000
    MCI_VD_SPIN_DOWN = &H00020000
End Enum

Public Enum MciVdDevCapsItem
    MCI_VD_GETDEVCAPS_CAN_REVERSE = &H00004002
    MCI_VD_GETDEVCAPS_FAST_RATE = &H00004003
    MCI_VD_GETDEVCAPS_SLOW_RATE = &H00004004
    MCI_VD_GETDEVCAPS_NORMAL_RATE = &H00004005
End Enum

Public Enum MciVdStep
    MCI_VD_STEP_FRAMES = &H00010000
    MCI_VD_STEP_REVERSE = &H00020000
End Enum

Public Const MCI_VD_ESCAPE_STRING = &H100

[PackingAlignment(1)]
Public Type MCI_VD_PLAY_PARMS
    dwCallback As LongPtr
    dwFrom As Long
    dwTo As Long
    dwSpeed As Long
End Type

[PackingAlignment(1)]
Public Type MCI_VD_STEP_PARMS
    dwCallback As LongPtr
    dwFrames As Long
End Type

Public Type MCI_VD_ESCAPE_PARMSA
    dwCallback As LongPtr
    lpstrCommand As String
End Type
Public Type MCI_VD_ESCAPE_PARMSW
    dwCallback As LongPtr
    lpstrCommand As LongPtr
End Type
'Alias MCI_VD_ESCAPE_PARMS As MCI_VD_ESCAPE_PARMSW
Public Type MCI_VD_ESCAPE_PARMS
    dwCallback As LongPtr
    lpstrCommand As LongPtr
End Type

Public Const MCI_CDA_STATUS_TYPE_TRACK = &H4001

Public Enum MciCdaTrack
    MCI_CDA_TRACK_AUDIO = (MCI_CD_OFFSET + 0)
    MCI_CDA_TRACK_OTHER = (MCI_CD_OFFSET + 1)
End Enum

Public Enum MciWaveFormExts
    MCI_WAVE_PCM = (MCI_WAVE_OFFSET + 0)
    MCI_WAVE_MAPPER = (MCI_WAVE_OFFSET + 1)
End Enum

Public Const MCI_WAVE_OPEN_BUFFER = &H10000

Public Enum MciWaveSet
    MCI_WAVE_SET_FORMATTAG = &H00010000
    MCI_WAVE_SET_CHANNELS = &H00020000
    MCI_WAVE_SET_SAMPLESPERSEC = &H00040000
    MCI_WAVE_SET_AVGBYTESPERSEC = &H00080000
    MCI_WAVE_SET_BLOCKALIGN = &H00100000
    MCI_WAVE_SET_BITSPERSAMPLE = &H00200000
End Enum

Public Enum MciWaveStatusFlags
    MCI_WAVE_INPUT = &H00400000
    MCI_WAVE_OUTPUT = &H0080000
End Enum
Public Enum MciWaveStatusItem
    MCI_WAVE_STATUS_FORMATTAG = &H00004001
    MCI_WAVE_STATUS_CHANNELS = &H00004002
    MCI_WAVE_STATUS_SAMPLESPERSEC = &H00004003
    MCI_WAVE_STATUS_AVGBYTESPERSEC = &H00004004
    MCI_WAVE_STATUS_BLOCKALIGN = &H00004005
    MCI_WAVE_STATUS_BITSPERSAMPLE = &H00004006
    MCI_WAVE_STATUS_LEVEL = &H00004007
End Enum

Public Enum MciWaveSetFlags
    MCI_WAVE_SET_ANYINPUT = &H04000000
    MCI_WAVE_SET_ANYOUTPUT = &H08000000
End Enum

Public Enum MciWaveDevCaps
    MCI_WAVE_GETDEVCAPS_INPUTS = &H00004001
    MCI_WAVE_GETDEVCAPS_OUTPUTS = &H00004002
End Enum


[PackingAlignment(1)]
Public Type MCI_WAVE_OPEN_PARMSA
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As String
    lpstrElementName As String
    lpstrAlias As String
    dwBufferSeconds As Long
End Type
[PackingAlignment(1)]
Public Type MCI_WAVE_OPEN_PARMSW
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As LongPtr
    lpstrElementName As LongPtr
    lpstrAlias As LongPtr
    dwBufferSeconds As Long
End Type
[PackingAlignment(1)]
Public Type MCI_WAVE_OPEN_PARMS
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As LongPtr
    lpstrElementName As LongPtr
    lpstrAlias As LongPtr
    dwBufferSeconds As Long
End Type

Public Type MCI_WAVE_DELETE_PARMS
    dwCallback As LongPtr
    dwFrom As Long
    dwTo As Long
End Type
[PackingAlignment(1)]
Public Type MCI_WAVE_SET_PARMS
    dwCallback As LongPtr
    dwTimeFormat As MCI_STATUS_TIMEFMT
    dwAudio As Long
    wInput As Long
    wOutput As Long
    /* [ TypeHint(WAV_FORMAT_IDS) ] */ wFormatTag As Integer
    wReserved2 As Integer
    nChannels As Integer
    wReserved3 As Integer
    nSamplesPerSec As Long
    nAvgBytesPerSec As Long
    nBlockAlign As Integer
    wReserved4 As Integer
    wBitsPerSample As Integer
    wReserved5 As Integer
End Type


[PackingAlignment(1)]
Public Type WAVEFORMAT
    /* [ TypeHint(WAV_FORMAT_IDS) ] */ wFormatTag As Integer '* format type */
    nChannels As Integer '* number of channels (i.e. mono, stereo...) */
    nSamplesPerSec As Long '* sample rate */
    nAvgBytesPerSec As Long '* for buffer estimation */
    nBlockAlign As Integer '* block size of data */
End Type
[PackingAlignment(1)]
Public Type PCMWAVEFORMAT
    wf As WAVEFORMAT
    wBitsPerSample As Integer
End Type

Public Enum MCI_SEQ_DIV
    MCI_SEQ_DIV_PPQN = (0 + MCI_SEQ_OFFSET)
    MCI_SEQ_DIV_SMPTE_24 = (1 + MCI_SEQ_OFFSET)
    MCI_SEQ_DIV_SMPTE_25 = (2 + MCI_SEQ_OFFSET)
    MCI_SEQ_DIV_SMPTE_30DROP = (3 + MCI_SEQ_OFFSET)
    MCI_SEQ_DIV_SMPTE_30 = (4 + MCI_SEQ_OFFSET)
End Enum

Public Enum MCI_SEQ_SET
    MCI_SEQ_FORMAT_SONGPTR = &H4001
    MCI_SEQ_FILE = &H4002
    MCI_SEQ_MIDI = &H4003
    MCI_SEQ_SMPTE = &H4004
    MCI_SEQ_NONE = 65533
    MCI_SEQ_MAPPER = 65535
End Enum

Public Enum MCI_SEQ_STATUS
    MCI_SEQ_STATUS_TEMPO = &H00004002
    MCI_SEQ_STATUS_PORT = &H00004003
    MCI_SEQ_STATUS_SLAVE = &H00004007
    MCI_SEQ_STATUS_MASTER = &H00004008
    MCI_SEQ_STATUS_OFFSET = &H00004009
    MCI_SEQ_STATUS_DIVTYPE = &H0000400A
    MCI_SEQ_STATUS_NAME = &H0000400B
    MCI_SEQ_STATUS_COPYRIGHT = &H0000400C
End Enum

Public Enum MCI_SEQ_SET_FLAGS
    MCI_SEQ_SET_TEMPO = &H00010000
    MCI_SEQ_SET_PORT = &H00020000
    MCI_SEQ_SET_SLAVE = &H00040000
    MCI_SEQ_SET_MASTER = &H00080000
    MCI_SEQ_SET_OFFSET = &H01000000
End Enum

[PackingAlignment(1)]
Public Type MCI_SEQ_SET_PARMS
    dwCallback As LongPtr
    dwTimeFormat As MCI_STATUS_TIMEFMT
    dwAudio As Long
    dwTempo As Long
    dwPort As Long
    dwSlave As Long
    dwMaster As Long
    dwOffset As Long
End Type

Public Enum MciAnimOpen
    MCI_ANIM_OPEN_WS = &H00010000
    MCI_ANIM_OPEN_PARENT = &H00020000
    MCI_ANIM_OPEN_NOSTATIC = &H00040000
End Enum
Public Enum MciAnimPlay
    MCI_ANIM_PLAY_SPEED = &H00010000
    MCI_ANIM_PLAY_REVERSE = &H00020000
    MCI_ANIM_PLAY_FAST = &H00040000
    MCI_ANIM_PLAY_SLOW = &H00080000
    MCI_ANIM_PLAY_SCAN = &H00100000
End Enum
Public Enum MciAnimStep
    MCI_ANIM_STEP_REVERSE = &H00010000
    MCI_ANIM_STEP_FRAMES = &H00020000
End Enum
Public Enum MciAnimStatus
    MCI_ANIM_STATUS_SPEED = &H00004001
    MCI_ANIM_STATUS_FORWARD = &H00004002
    MCI_ANIM_STATUS_HWND = &H00004003
    MCI_ANIM_STATUS_HPAL = &H00004004
    MCI_ANIM_STATUS_STRETCH = &H00004005
End Enum
Public Const MCI_ANIM_INFO_TEXT = &H10000
Public Enum MciAnimDevCapsItem
    MCI_ANIM_GETDEVCAPS_CAN_REVERSE = &H00004001
    MCI_ANIM_GETDEVCAPS_FAST_RATE = &H00004002
    MCI_ANIM_GETDEVCAPS_SLOW_RATE = &H00004003
    MCI_ANIM_GETDEVCAPS_NORMAL_RATE = &H00004004
    MCI_ANIM_GETDEVCAPS_PALETTES = &H00004006
    MCI_ANIM_GETDEVCAPS_CAN_STRETCH = &H00004007
    MCI_ANIM_GETDEVCAPS_MAX_WINDOWS = &H00004008
End Enum
Public Enum MciAnimRealize
    MCI_ANIM_REALIZE_NORM = &H00010000
    MCI_ANIM_REALIZE_BKGD = &H00020000
End Enum
Public Enum MciAnimWindow
    MCI_ANIM_WINDOW_HWND = &H00010000
    MCI_ANIM_WINDOW_STATE = &H00040000
    MCI_ANIM_WINDOW_TEXT = &H00080000
    MCI_ANIM_WINDOW_ENABLE_STRETCH = &H00100000
    MCI_ANIM_WINDOW_DISABLE_STRETCH = &H00200000
    MCI_ANIM_WINDOW_DEFAULT = 0
End Enum
Public Enum MciAnimPut
    MCI_ANIM_RECT = &H00010000
    MCI_ANIM_PUT_SOURCE = &H00020000
    MCI_ANIM_PUT_DESTINATION = &H00040000
End Enum
Public Enum MciAnimWhere
    MCI_ANIM_WHERE_SOURCE = &H00020000
    MCI_ANIM_WHERE_DESTINATION = &H00040000
End Enum

[PackingAlignment(1)]
Public Type MCI_ANIM_OPEN_PARMSA
    dwCallback As LongPtr
    wDeviceID As Long 'MCIDEVICEID
    lpstrDeviceType As String
    lpstrElementName As String
    lpstrAlias As String
    dwStyle As Long
    hWndParent As LongPtr
End Type
[PackingAlignment(1)]
Public Type MCI_ANIM_OPEN_PARMSW
    dwCallback As LongPtr
    wDeviceID As Long 'MCIDEVICEID
    lpstrDeviceType As LongPtr
    lpstrElementName As LongPtr
    lpstrAlias As LongPtr
    dwStyle As Long
    hWndParent As LongPtr
End Type
'Alias MCI_ANIM_OPEN_PARMS As MCI_ANIM_OPEN_PARMSW
[PackingAlignment(1)]
Public Type MCI_ANIM_OPEN_PARMS
    dwCallback As LongPtr
    wDeviceID As Long 'MCIDEVICEID
    lpstrDeviceType As LongPtr
    lpstrElementName As LongPtr
    lpstrAlias As LongPtr
    dwStyle As Long
    hWndParent As LongPtr
End Type

[PackingAlignment(1)]
Public Type MCI_ANIM_PLAY_PARMS
    dwCallback As LongPtr
    dwFrom As Long
    dwTo As Long
    dwSpeed As Long
End Type

[PackingAlignment(1)]
Public Type MCI_ANIM_STEP_PARMS
    dwCallback As LongPtr
    dwFrames As Long
End Type

[PackingAlignment(1)]
Public Type MCI_ANIM_WINDOW_PARMSA
    dwCallback As LongPtr
    hWnd As LongPtr
    nCmdShow As Long
    lpstrText As String
End Type
[PackingAlignment(1)]
Public Type MCI_ANIM_WINDOW_PARMSW
    dwCallback As LongPtr
    hWnd As LongPtr
    nCmdShow As Long
    lpstrText As LongPtr
End Type
'Alias MCI_ANIM_WINDOW_PARMS As MCI_ANIM_WINDOW_PARMSW
[PackingAlignment(1)]
Public Type MCI_ANIM_WINDOW_PARMS
    dwCallback As LongPtr
    hWnd As LongPtr
    nCmdShow As Long
    lpstrText As LongPtr
End Type

[PackingAlignment(1)]
Public Type MCI_ANIM_RECT_PARMS
    dwCallback As LongPtr
    '#ifdef MCI_USE_OFFEXT
    '    POINT   ptOffset;
    '    POINT   ptExtent;
    '#else   /* ifdef MCI_USE_OFFEXT */
    rc As RECT
    '#endif  /* ifdef MCI_USE_OFFEXT */
End Type

[PackingAlignment(1)]
Public Type MCI_ANIM_UPDATE_PARMS
    dwCallback As LongPtr
    rc As RECT
    hDC As LongPtr
End Type

Public Enum MCI_OVLY_OPEN
    MCI_OVLY_OPEN_WS = &H00010000
    MCI_OVLY_OPEN_PARENT = &H00020000
End Enum

Public Enum MCI_OVLY_STATUS
    MCI_OVLY_STATUS_HWND = &H00004001
    MCI_OVLY_STATUS_STRETCH = &H00004002
End Enum

Public Enum MCI_OVLY_INFO
    MCI_OVLY_INFO_TEXT = &H00010000
End Enum

Public Enum MCI_OVLY_GETDEVCAPS
    MCI_OVLY_GETDEVCAPS_CAN_STRETCH = &H00004001
    MCI_OVLY_GETDEVCAPS_CAN_FREEZE = &H00004002
    MCI_OVLY_GETDEVCAPS_MAX_WINDOWS = &H00004003
End Enum

Public Enum MCI_OVLY_WINDOW
    MCI_OVLY_WINDOW_HWND = &H00010000
    MCI_OVLY_WINDOW_STATE = &H00040000
    MCI_OVLY_WINDOW_TEXT = &H00080000
    MCI_OVLY_WINDOW_ENABLE_STRETCH = &H00100000
    MCI_OVLY_WINDOW_DISABLE_STRETCH = &H00200000
End Enum

Public Const MCI_OVLY_WINDOW_DEFAULT = 0

Public Enum MCI_OVLY_PUT
    MCI_OVLY_RECT = &H00010000
    MCI_OVLY_PUT_SOURCE = &H00020000
    MCI_OVLY_PUT_DESTINATION = &H00040000
    MCI_OVLY_PUT_FRAME = &H00080000
    MCI_OVLY_PUT_VIDEO = &H00100000
End Enum

Public Enum MCI_OVLY_WHERE
    MCI_OVLY_WHERE_SOURCE = &H00020000
    MCI_OVLY_WHERE_DESTINATION = &H00040000
    MCI_OVLY_WHERE_FRAME = &H00080000
    MCI_OVLY_WHERE_VIDEO = &H00100000
End Enum

[PackingAlignment(1)]
Public Type MCI_OVLY_OPEN_PARMSA
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As String
    lpstrElementName As String
    lpstrAlias As String
    dwStyle As MCI_OVLY_OPEN
    hWndParent As LongPtr
End Type
[PackingAlignment(1)]
Public Type MCI_OVLY_OPEN_PARMSW
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As LongPtr
    lpstrElementName As LongPtr
    lpstrAlias As LongPtr
    dwStyle As MCI_OVLY_OPEN
    hWndParent As LongPtr
End Type
[PackingAlignment(1)]
Public Type MCI_OVLY_OPEN_PARMS
    dwCallback As LongPtr
    wDeviceID As Long
    lpstrDeviceType As LongPtr
    lpstrElementName As LongPtr
    lpstrAlias As LongPtr
    dwStyle As MCI_OVLY_OPEN
    hWndParent As LongPtr
End Type

[PackingAlignment(1)]
Public Type MCI_OVLY_WINDOW_PARMSA
    dwCallback As LongPtr
    hWnd As LongPtr
    nCmdShow As SHOWWINDOW
    lpstrText As String
End Type
[PackingAlignment(1)]
Public Type MCI_OVLY_WINDOW_PARMSW
    dwCallback As LongPtr
    hWnd As LongPtr
    nCmdShow As SHOWWINDOW
    lpstrText As LongPtr
End Type
[PackingAlignment(1)]
Public Type MCI_OVLY_WINDOW_PARMS
    dwCallback As LongPtr
    hWnd As LongPtr
    nCmdShow As SHOWWINDOW
    lpstrText As LongPtr
End Type

[PackingAlignment(1)]
Public Type MCI_OVLY_RECT_PARMS
    dwCallback As LongPtr
    rc As RECT
End Type

[PackingAlignment(1)]
Public Type MCI_OVLY_SAVE_PARMSA
    dwCallback As LongPtr
    lpfilename As String
    rc As RECT
End Type
[PackingAlignment(1)]
Public Type MCI_OVLY_SAVE_PARMSW
    dwCallback As LongPtr
    lpfilename As LongPtr
    rc As RECT
End Type
[PackingAlignment(1)]
Public Type MCI_OVLY_SAVE_PARMS
    dwCallback As LongPtr
    lpfilename As LongPtr
    rc As RECT
End Type

[PackingAlignment(1)]
Public Type MCI_OVLY_LOAD_PARMSA
    dwCallback As LongPtr
    lpfilename As String
    rc As RECT
End Type
[PackingAlignment(1)]
Public Type MCI_OVLY_LOAD_PARMSW
    dwCallback As LongPtr
    lpfilename As LongPtr
    rc As RECT
End Type
[PackingAlignment(1)]
Public Type MCI_OVLY_LOAD_PARMS
    dwCallback As LongPtr
    lpfilename As LongPtr
    rc As RECT
End Type

 



Public Declare PtrSafe Function mciSendStringA Lib "winmm" (ByVal lpszCommand As String, ByVal lpszReturnString As String, ByVal cchReturn As Long, ByVal hwndCallback As LongPtr) As MCIERROR
Public Declare PtrSafe Function mciSendStringW Lib "winmm" (ByVal lpszommand As LongPtr, ByVal lpszReturnString As LongPtr, ByVal cchReturn As Long, ByVal hwndCallback As LongPtr) As MCIERROR
Public DeclareWide PtrSafe Function mciSendString Lib "winmm" Alias "mciSendStringW" (ByVal lpszCommand As String, ByVal lpszReturnString As String, ByVal cchReturn As Long, ByVal hwndCallback As LongPtr) As MCIERROR
Public Declare PtrSafe Function mciGetErrorStringA Lib "winmm" (ByVal fdwError As MCIERROR, ByVal lpszErrorText As String, ByVal cchErrorText As Long) As BOOL
Public Declare PtrSafe Function mciGetErrorStringW Lib "winmm" (ByVal fdwError As MCIERROR, ByVal lpszErrorText As LongPtr, ByVal cchErrorText As Long) As BOOL
Public DeclareWide PtrSafe Function mciGetErrorString Lib "winmm" Alias "mciGetErrorStringW" (ByVal fdwError As MCIERROR, ByVal lpszErrorText As String, ByVal cchErrorText As Long) As Long
Public Declare PtrSafe Function mciSendCommandA Lib "winmm" (ByVal wDeviceID As Long, ByVal uMessage As MCI_COMMANDS, ByVal dwParam1 As LongPtr, ByVal dwParam2 As Any) As MCIERROR
Public Declare PtrSafe Function mciSendCommandW Lib "winmm" (ByVal wDeviceID As Long, ByVal uMessage As MCI_COMMANDS, ByVal dwParam1 As LongPtr, ByVal dwParam2 As Any) As MCIERROR
Public DeclareWide PtrSafe Function mciSendCommand Lib "winmm" Alias "mciSendCommandW" (ByVal wDeviceID As Long, ByVal uMessage As MCI_COMMANDS, ByVal dwParam1 As LongPtr, ByVal dwParam2 As Any) As MCIERROR
Public Declare PtrSafe Function mciGetCreatorTask Lib "winmm" (ByVal wDeviceID As Long) As LongPtr
Public Declare PtrSafe Function mciGetDeviceIDA Lib "winmm" (ByVal lpstrName As String) As Long
Public Declare PtrSafe Function mciGetDeviceIDW Lib "winmm" (ByVal lpstrName As LongPtr) As Long
Public DeclareWide PtrSafe Function mciGetDeviceID Lib "winmm" Alias "mciGetDeviceIDW" (ByVal lpstrName As String) As Long
Public Declare PtrSafe Function mciGetDeviceIDFromElementIDA Lib "winmm" (ByVal dwElementID As Long, ByVal lpstrType As String) As Long
Public Declare PtrSafe Function mciGetDeviceIDFromElementIDW Lib "winmm" (ByVal dwElementID As Long, ByVal lpstrType As LongPtr) As Long
Public DeclareWide PtrSafe Function mciGetDeviceIDFromElementID Lib "winmm" Alias "mciGetDeviceIDFromElementIDW" (ByVal dwElementID As Long, ByVal lpstrType As String) As Long
Public Declare PtrSafe Function mciSetYieldProc Lib "winmm" (ByVal mciId As Long, ByVal fpYieldProc As LongPtr, ByVal dwYieldData As Long) As BOOL
Public Declare PtrSafe Function mciGetYieldProc Lib "winmm" (ByVal mciId As Long, pdwYieldData As Long) As BOOL
Public Declare PtrSafe Function mciExecute Lib "winmm" (ByVal lpstrCommand As String) As Long


#End Region

'Complete
#Region "winmm_mmio"
Public Enum MMIOERR
    MMIOERR_BASE = 256
    MMIOERR_FILENOTFOUND = (MMIOERR_BASE + 1) /* file not found */
    MMIOERR_OUTOFMEMORY = (MMIOERR_BASE + 2) /* out of memory */
    MMIOERR_CANNOTOPEN = (MMIOERR_BASE + 3) /* cannot open */
    MMIOERR_CANNOTCLOSE = (MMIOERR_BASE + 4) /* cannot close */
    MMIOERR_CANNOTREAD = (MMIOERR_BASE + 5) /* cannot read */
    MMIOERR_CANNOTWRITE = (MMIOERR_BASE + 6) /* cannot write */
    MMIOERR_CANNOTSEEK = (MMIOERR_BASE + 7) /* cannot seek */
    MMIOERR_CANNOTEXPAND = (MMIOERR_BASE + 8) /* cannot expand file */
    MMIOERR_CHUNKNOTFOUND = (MMIOERR_BASE + 9) /* chunk not found */
    MMIOERR_UNBUFFERED = (MMIOERR_BASE + 10) /* */
    MMIOERR_PATHNOTFOUND = (MMIOERR_BASE + 11) /* path incorrect */
    MMIOERR_ACCESSDENIED = (MMIOERR_BASE + 12) /* file was protected */
    MMIOERR_SHARINGVIOLATION = (MMIOERR_BASE + 13) /* file in use */
    MMIOERR_NETWORKERROR = (MMIOERR_BASE + 14) /* network not responding */
    MMIOERR_TOOMANYOPENFILES = (MMIOERR_BASE + 15) /* no more file handles */
    MMIOERR_INVALIDFILE = (MMIOERR_BASE + 16) /* default error file error */
End Enum

[Description("📝**NOTE:** Convert to ANSI")]
Public Const CFSEPCHAR   = "+" /* compound file name separator char. */

Public Enum MMIO_OPENMODE
    MMIO_RWMODE = &H00000003  ' /* open file for reading/writing/both */
    MMIO_SHAREMODE = &H00000070  ' /* file sharing mode number */
End Enum

Public Enum MMIO_INFO_FLAGS
    MMIO_CREATE = &H00001000 /* create new file (or truncate file) */
    MMIO_PARSE = &H00000100 /* parse new file returning path */
    MMIO_DELETE = &H00000200 /* create new file (or truncate file) */
    MMIO_EXIST = &H00004000 /* checks for existence of file */
    MMIO_ALLOCBUF = &H00010000 /* mmioOpen() should allocate a buffer */
    MMIO_GETTEMP = &H00020000 /* mmioOpen() should retrieve temp name */
    MMIO_DIRTY = &H10000000 /* I/O buffer is dirty */
End Enum

Public Enum MMIO_RWMODE
    MMIO_READ = &H00000000  ' /* open file for reading only */
    MMIO_WRITE = &H00000001  ' /* open file for writing only */
    MMIO_READWRITE = &H00000002  ' /* open file for reading and writing */
End Enum

Public Enum MMIO_SHAREMODE
    MMIO_COMPAT = &H00000000  ' /* compatibility mode */
    MMIO_EXCLUSIVE = &H00000010  ' /* exclusive-access mode */
    MMIO_DENYWRITE = &H00000020  ' /* deny writing to other processes */
    MMIO_DENYREAD = &H00000030  ' /* deny reading to other processes */
    MMIO_DENYNONE = &H00000040  ' /* deny nothing to other processes */
End Enum

[PackingAlignment(1)]
Public Type MMIOINFO
   /* TypeHint(MMIO_SHAREMODE, MMIO_RWMODE, MMIO_OPENMODE) ] */ dwFlags As MMIO_INFO_FLAGS '  /* general status flags */
   fccIOProc As Long '   /* pointer to I/O procedure */
   pIOProc As LongPtr '  /* pointer to I/O procedure */
   wErrorRet As MMIOERR '  /* place for error to be returned */
   htask As LongPtr '  /* alternate local task */
   ' /* fields maintained by MMIO /functions during buffered I/O */
   cchBuffer As Long '  /* size of I/O buffer (or 0L) */
   pchBuffer As LongPtr '  /* start of I/O buffer (or NULL) */
   pchNext As LongPtr '  /* pointer to next byte to read/write */
   pchEndRead As LongPtr '  /* pointer to last valid byte to read */
   pchEndWrite As LongPtr ' /* pointer to last byte to write */
   lBufOffset As Long ' /* disk offset of start of buffer */
   ' /* fields maintained by I/O procedure */
   lDiskOffset As Long ' /* disk offset of next read or write */
   adwInfo(0 To 2) As Long ' /* data specific to type of MMIOPROC */
   ' /* other fields maintained by MMIO */
   dwReserved1 As Long ' /* reserved for MMIO use */
   dwReserved2 As Long ' /* reserved for MMIO use */
   hmmio As LongPtr ' /* handle to open file */
End Type

Public Type MMCKINFO
    ckid As Long '  /* chunk ID */
    cksize As Long '  /* chunk size */
    fccType As Long '  /* form type or list type */
    dwDataOffset As Long '  /* offset of data portion of chunk */
    dwFlags As MMIO_INFO_FLAGS '  /* flags used by MMIO functions */
End Type

Public Enum MMIO_MESSAGE
    MMIOM_READ = MMIO_READ  ' /* read */
    MMIOM_WRITE = MMIO_WRITE  ' /* write */
    MMIOM_SEEK = 2  ' /* seek to a new position in file */
    MMIOM_OPEN = 3  ' /* open file */
    MMIOM_CLOSE = 4  ' /* close file */
    MMIOM_WRITEFLUSH = 5  ' /* write and flush */
    MMIOM_RENAME = 6
    MMIOM_USER = &H8000&  ' /* beginning of user-defined messages */
End Enum

Public Enum MMIO_FOURCC_FLAGS
    MMIO_TOUPPER = &H0010
End Enum

Public Enum MMIO_INSTALLIOPROC_FLAGS
    MMIO_INSTALLPROC = &H00010000  ' /* mmioInstallIOProc: install MMIOProc */
    MMIO_GLOBALPROC = &H10000000  ' /* mmioInstallIOProc: install globally */
    MMIO_REMOVEPROC = &H00020000  ' /* mmioInstallIOProc: remove MMIOProc */
    MMIO_UNICODEPROC = &H01000000  ' /* mmioInstallIOProc: Unicode MMIOProc */
    MMIO_FINDPROC = &H00040000  ' /* mmioInstallIOProc: find an MMIOProc */
End Enum

Public Enum MMIO_CLOSE_FLAGS
    MMIO_FHOPEN = &H0010 /* mmioClose: keep file handle open */
End Enum

Public Enum MMIO_SEEK_ORIGIN
    MMIO_SEEK_SET = 0  ' /* seek to an absolute position */
    MMIO_SEEK_CUR = 1  ' /* seek relative to current position */
    MMIO_SEEK_END = 2  ' /* seek relative to end of file */
End Enum

Public Enum MMIO_FLUSH_FLAGS
    MMIO_EMPTYBUF = &H0010
End Enum

Public Enum MMIO_DESCEND_FLAGS
    MMIO_FINDCHUNK = &H0010  ' /* mmioDescend: find a chunk by ID */
    MMIO_FINDRIFF = &H0020  ' /* mmioDescend: find a LIST chunk */
    MMIO_FINDLIST = &H0040  ' /* mmioDescend: find a RIFF chunk */
End Enum

Public Enum MMIO_CHUNK_FLAGS
    MMIO_CREATERIFF = &H0020  ' /* mmioCreateChunk: make a LIST chunk */
    MMIO_CREATELIST = &H0040  ' /* mmioCreateChunk: make a RIFF chunk */
End Enum

Public Const MMIO_DEFAULTBUFFER = 8192 /* default buffer size */

Public Declare PtrSafe Function mmioStringToFOURCCA Lib "winmm" (ByVal sz As String, ByVal uFlags As MMIO_FOURCC_FLAGS) As Long
Public Declare PtrSafe Function mmioStringToFOURCCW Lib "winmm" (ByVal sz As LongPtr, ByVal uFlags As MMIO_FOURCC_FLAGS) As Long
Public DeclareWide PtrSafe Function mmioStringToFOURCC Lib "winmm" Alias "mmioStringToFOURCCW" (ByVal sz As String, ByVal uFlags As MMIO_FOURCC_FLAGS) As Long
Public Declare PtrSafe Function mmioInstallIOProcA Lib "winmm" (ByVal fccIOProc As Long, ByVal pIOProc As LongPtr, ByVal dwFlags As MMIO_INSTALLIOPROC_FLAGS) As LongPtr
Public Declare PtrSafe Function mmioInstallIOProcW Lib "winmm" (ByVal fccIOProc As Long, ByVal pIOProc As LongPtr, ByVal dwFlags As MMIO_INSTALLIOPROC_FLAGS) As LongPtr
Public DeclareWide PtrSafe Function mmioInstallIOProc Lib "winmm" Alias "mmioInstallIOProcW" (ByVal fccIOProc As Long, ByVal pIOProc As LongPtr, ByVal dwFlags As MMIO_INSTALLIOPROC_FLAGS) As LongPtr
Public Declare PtrSafe Function mmioOpenA Lib "winmm" (ByVal szFileName As String, lpmmioinfo As MMIOINFO, [TypeHint(MMIO_INFO_FLAGS, MMIO_SHAREMODE, MMIO_RWMODE)] ByVal fdwOpen As Long) As LongPtr
Public Declare PtrSafe Function mmioOpenW Lib "winmm" (ByVal szFileName As LongPtr, lpmmioinfo As MMIOINFO, [TypeHint(MMIO_INFO_FLAGS, MMIO_SHAREMODE, MMIO_RWMODE)] ByVal fdwOpen As Long) As LongPtr
Public DeclareWide PtrSafe Function mmioOpen Lib "winmm" Alias "mmioOpenW" (ByVal szFileName As String, lpmmioinfo As MMIOINFO, [TypeHint(MMIO_INFO_FLAGS, MMIO_SHAREMODE, MMIO_RWMODE)] ByVal fdwOpen As Long) As LongPtr
Public Declare PtrSafe Function mmioRenameA Lib "winmm" (ByVal szFileName As String, ByVal SzNewFileName As String, lpmmioinfo As MMIOINFO, ByVal dwRenameFlags As Long) As MMIOERR
Public Declare PtrSafe Function mmioRenameW Lib "winmm" (ByVal szFileName As LongPtr, ByVal SzNewFileName As LongPtr, lpmmioinfo As MMIOINFO, ByVal dwRenameFlags As Long) As MMIOERR
Public DeclareWide PtrSafe Function mmioRename Lib "winmm" Alias "mmioRenameW" (ByVal szFileName As String, ByVal SzNewFileName As String, lpmmioinfo As MMIOINFO, ByVal dwRenameFlags As Long) As MMIOERR
Public Declare PtrSafe Function mmioClose Lib "winmm" (ByVal hmmio As LongPtr, ByVal uFlags As MMIO_CLOSE_FLAGS) As MMIOERR
Public Declare PtrSafe Function mmioRead Lib "winmm" (ByVal hmmio As LongPtr, pch As Byte, ByVal cch As Long) As Long
Public Declare PtrSafe Function mmioWrite Lib "winmm" (ByVal hmmio As LongPtr, pch As Byte, ByVal cch As Long) As Long
Public Declare PtrSafe Function mmioSeek Lib "winmm" (ByVal hmmio As LongPtr, ByVal lOffset As Long, ByVal iOrigin As MMIO_SEEK_ORIGIN) As Long
Public Declare PtrSafe Function mmioGetInfo Lib "winmm" (ByVal hmmio As LongPtr, lpmmioinfo As MMIOINFO, ByVal uFlags As Long) As MMIOERR
Public Declare PtrSafe Function mmioSetInfo Lib "winmm" (ByVal hmmio As LongPtr, lpmmioinfo As MMIOINFO, ByVal uFlags As Long) As MMIOERR
Public Declare PtrSafe Function mmioSetBuffer Lib "winmm" (ByVal hmmio As LongPtr, ByVal pchBuffer As String, ByVal cchBuffer As Long, ByVal uFlags As Long) As MMIOERR
Public Declare PtrSafe Function mmioFlush Lib "winmm" (ByVal hmmio As LongPtr, ByVal uFlags As MMIO_FLUSH_FLAGS) As MMIOERR
Public Declare PtrSafe Function mmioAdvance Lib "winmm" (ByVal hmmio As LongPtr, lpmmioinfo As MMIOINFO, ByVal uFlags As MMIO_RWMODE) As MMIOERR
Public Declare PtrSafe Function mmioSendMessage Lib "winmm" (ByVal hmmio As LongPtr, ByVal uMsg As MMIO_MESSAGE, ByVal lParam1 As LongPtr, ByVal lParam2 As LongPtr) As LongPtr
Public Declare PtrSafe Function mmioDescend Lib "winmm" (ByVal hmmio As LongPtr, pmmcki As MMCKINFO, pmmckiParent As MMCKINFO, ByVal fuDescend As MMIO_DESCEND_FLAGS) As MMIOERR
Public Declare PtrSafe Function mmioAscend Lib "winmm" (ByVal hmmio As LongPtr, lpck As MMCKINFO, ByVal uFlags As Long) As MMIOERR
Public Declare PtrSafe Function mmioCreateChunk Lib "winmm" (ByVal hmmio As LongPtr, pmmcki As MMCKINFO, ByVal fuCreate As MMIO_CHUNK_FLAGS) As MMIOERR

Public Function mmioFOURCC(ByVal ch0 As Byte, ByVal ch1 As Byte, ByVal ch2 As Byte, ByVal ch3 As Byte) As Long
    Return MAKEFOURCC(ch0, ch1, ch2, ch3)
End Function
#End Region

'Complete
#Region "winmm_midi"
Public Enum MIDIERR
    MIDIERR_UNPREPARED = (MIDIERR_BASE + 0) /* header not prepared */
    MIDIERR_STILLPLAYING = (MIDIERR_BASE + 1) /* still something playing */
    MIDIERR_NOMAP = (MIDIERR_BASE + 2) /* no configured instruments */
    MIDIERR_NOTREADY = (MIDIERR_BASE + 3) /* hardware is still busy */
    MIDIERR_NODEVICE = (MIDIERR_BASE + 4) /* port no longer connected */
    MIDIERR_INVALIDSETUP = (MIDIERR_BASE + 5) /* invalid MIF */
    MIDIERR_BADOPENMODE = (MIDIERR_BASE + 6) /* operation unsupported w/ open mode */
    MIDIERR_DONT_CONTINUE = (MIDIERR_BASE + 7) /* thru device 'eating' a message */
    MIDIERR_LASTERROR = (MIDIERR_BASE + 7) /* last error in range */
End Enum

Public Const MIDIPATCHSIZE = 128

Public Enum MIDI_CALLBACK_MSG
    MIM_OPEN = MM_MIM_OPEN
    MIM_CLOSE = MM_MIM_CLOSE
    MIM_DATA = MM_MIM_DATA
    MIM_LONGDATA = MM_MIM_LONGDATA
    MIM_ERROR = MM_MIM_ERROR
    MIM_LONGERROR = MM_MIM_LONGERROR
    MOM_OPEN = MM_MOM_OPEN
    MOM_CLOSE = MM_MOM_CLOSE
    MOM_DONE = MM_MOM_DONE
    MIM_MOREDATA = MM_MIM_MOREDATA
    MOM_POSITIONCB = MM_MOM_POSITIONCB
End Enum

Public Const MIDIMAPPER  As Long = (-1)
Public Const MIDI_MAPPER As Long = (-1)

Public Enum MIDI_IN_OPEN_FLAGS
    MIDI_IO_STATUS = &H00000020
End Enum

Public Enum MIDI_OUT_CACHE_FLAGS
    MIDI_CACHE_ALL = 1
    MIDI_CACHE_BESTFIT = 2
    MIDI_CACHE_QUERY = 3
    MIDI_UNCACHE = 4
End Enum

Public Enum MIDI_OUT_CAPS_TECH
    MOD_MIDIPORT = 1 /* output port */
    MOD_SYNTH = 2 /* generic internal synth */
    MOD_SQSYNTH = 3 /* square wave internal synth */
    MOD_FMSYNTH = 4 /* FM internal synth */
    MOD_MAPPER = 5 /* MIDI mapper */
    MOD_WAVETABLE = 6 /* hardware wavetable synth */
    MOD_SWSYNTH = 7 /* software synth */
End Enum

Public Enum MIDI_OUT_CAPS_SUPPORT
    MIDICAPS_VOLUME = &H0001 /* supports volume control */
    MIDICAPS_LRVOLUME = &H0002 /* separate left-right volume control */
    MIDICAPS_CACHE = &H0004
    MIDICAPS_STREAM = &H0008 /* driver supports midiStreamOut directly */
End Enum

Public Type MIDIOUTCAPSA
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte ' /* product name (NULL terminated string) */
    /* [ TypeHint(MIDI_OUT_CAPS_TECH) ] */ wTechnology As Integer ' /* type of device */
    wVoices As Integer ' /* # of voices (internal synth only) */
    wNotes As Integer ' /* max # of notes (internal synth only) */
    wChannelMask As Integer ' /* channels used (internal synth only) */
    dwSupport As MIDI_OUT_CAPS_SUPPORT ' /* functionality supported by driver */
End Type
Public Type MIDIOUTCAPSW
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    /* [ TypeHint(MIDI_OUT_CAPS_TECH) ] */ wTechnology As Integer ' /* type of device */
    wVoices As Integer ' /* # of voices (internal synth only) */
    wNotes As Integer ' /* max # of notes (internal synth only) */
    wChannelMask As Integer ' /* channels used (internal synth only) */
    dwSupport As MIDI_OUT_CAPS_SUPPORT ' /* functionality supported by driver */
End Type
Public Type MIDIOUTCAPS
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    /* [ TypeHint(MIDI_OUT_CAPS_TECH) ] */ wTechnology As Integer ' /* type of device */
    wVoices As Integer ' /* # of voices (internal synth only) */
    wNotes As Integer ' /* max # of notes (internal synth only) */
    wChannelMask As Integer ' /* channels used (internal synth only) */
    dwSupport As MIDI_OUT_CAPS_SUPPORT ' /* functionality supported by driver */
End Type

Public Type MIDIINCAPSA
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte ' /* product name (NULL terminated string) */
    dwSupport As Long ' /* functionality supported by driver */
End Type
Public Type MIDIINCAPSW
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    dwSupport As Long ' /* functionality supported by driver */
End Type
Public Type MIDIINCAPS
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    dwSupport As Long ' /* functionality supported by driver */
End Type

Public Type MIDIINCAPS2W
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    dwSupport As Long ' /* functionality supported by driver */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type

Public Enum MIDI_HDR_FLAGS
    MHDR_DONE = &H00000001 /* done bit */
    MHDR_PREPARED = &H00000002 /* set if header prepared */
    MHDR_INQUEUE = &H00000004 /* reserved for driver */
    MHDR_ISSTRM = &H00000008 /* Buffer is stream buffer */
End Enum

[PackingAlignment(1)]
Public Type MIDIHDR
    lpData As LongPtr ' /* pointer to locked data block */
    dwBufferLength As Long ' /* length of data in data block */
    dwBytesRecorded As Long ' /* used for input only */
    dwUser As LongPtr ' /* for client's use */
    dwFlags As MIDI_HDR_FLAGS ' /* assorted flags (see defines) */
    lpNext As LongPtr ' /* reserved for driver */
    reserved As LongPtr ' /* reserved for driver */
    dwOffset As Long ' /* Callback offset into buffer */
    dwReserved(0 To 7) As LongPtr ' /* Reserved for MMSYSTEM */
End Type

Public Enum MIDI_EVT_TYPE
    MEVT_F_SHORT = &H00000000
    MEVT_F_LONG = &H80000000
    MEVT_F_CALLBACK = &H40000000
End Enum

Public Type MIDIEVENT
    dwDeltaTime As Long ' /* Ticks since last event */
    dwStreamID As Long ' /* Reserved; must be zero */
    dwEvent As MIDI_EVT_TYPE ' /* Event type and parameters */
    dwParms(0 To 0) As Long ' /* Parameters if this is a long event */
End Type

Public Type MIDISTRMBUFFVER
    dwVersion As Long ' /* Stream buffer format version */
    dwMid As Long ' /* Manufacturer ID as defined in MMREG.H */
    dwOEMVersion As Long ' /* Manufacturer version for custom ext */
End Type

Public Const MEVT_SHORTMSG As Byte = (&H00) /* parm = shortmsg for midiOutShortMsg */
Public Const MEVT_TEMPO    As Byte = (&H01) /* parm = new tempo in microsec/qn */
Public Const MEVT_NOP      As Byte = (&H02) /* parm = unused; does nothing */

Public Const MEVT_LONGMSG  As Byte = (&H80) /* parm = bytes to send verbatim */
Public Const MEVT_COMMENT  As Byte = (&H82) /* parm = comment data */
Public Const MEVT_VERSION  As Byte = (&H84) /* parm = MIDISTRMBUFFVER struct */

Public Const MIDISTRM_ERROR = (-2)

Public Enum MIDI_STRMPROP
    MIDIPROP_SET = &H80000000
    MIDIPROP_GET = &H40000000
    MIDIPROP_TIMEDIV = &H00000001
    MIDIPROP_TEMPO = &H00000002
End Enum

Public Type MIDIPROPTIMEDIV
    cbStruct As Long
    dwTimeDiv As Long
End Type
Public Type MIDIPROPTEMPO
    cbStruct As Long
    dwTempo As Long
End Type



Public Declare PtrSafe Function midiOutGetNumDevs Lib "winmm" () As Long
Public Declare PtrSafe Function midiStreamOpen Lib "winmm" (phms As LongPtr, uDeviceID As Long, ByVal cMidi As Long, ByVal dwCallback As LongPtr, ByVal dwInstance As LongPtr, ByVal fdwOpen As MMDriverCallback) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiStreamClose Lib "winmm" (ByVal hms As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiStreamProperty Lib "winmm" (ByVal hms As LongPtr, lppropdata As Byte, ByVal dwProperty As MIDI_STRMPROP) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiStreamPosition Lib "winmm" (ByVal hms As LongPtr, lpmmt As MMTIME, ByVal cbmmt As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiStreamOut Lib "winmm" (ByVal hms As LongPtr, pmh As MIDIHDR, ByVal cbmh As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiStreamPause Lib "winmm" (ByVal hms As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiStreamRestart Lib "winmm" (ByVal hms As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiStreamStop Lib "winmm" (ByVal hms As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiConnect Lib "winmm" (ByVal hmi As LongPtr, ByVal hmo As LongPtr, ByVal pReserved As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiDisconnect Lib "winmm" (ByVal hmi As LongPtr, ByVal hmo As LongPtr, ByVal pReserved As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutGetVolume Lib "winmm" (ByVal hms As LongPtr, pdwVolume As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutSetVolume Lib "winmm" (ByVal hms As LongPtr, ByVal dwVolume As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutOpen Lib "winmm" (phmo As LongPtr, ByVal uDeviceID As Long, ByVal dwCallback As LongPtr, ByVal dwInstance As LongPtr, ByVal fdwOpen As MMDriverCallback) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutClose Lib "winmm" (ByVal hmo As LongPtr) As MIDIERR
Public Declare PtrSafe Function midiOutPrepareHeader Lib "winmm" (ByVal hmo As LongPtr, pmh As MIDIHDR, ByVal cbmh As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutUnprepareHeader Lib "winmm" (ByVal hmo As LongPtr, pmh As MIDIHDR, ByVal cbmh As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutShortMsg Lib "winmm" (ByVal hmo As LongPtr, ByVal dwMsg As Long) As MIDIERR
Public Declare PtrSafe Function midiOutGetDevCapsA Lib "winmm" (ByVal uDeviceID As LongPtr, pmoc As MIDIOUTCAPSA, ByVal cbmoc As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutGetDevCapsW Lib "winmm" (ByVal uDeviceID As LongPtr, pmoc As MIDIOUTCAPSW, ByVal cbmoc As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function midiOutGetDevCaps Lib "winmm" Alias "midiOutGetDevCapsW" (ByVal uDeviceID As LongPtr, pmoc As MIDIOUTCAPS, ByVal cbmoc As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutGetErrorTextA Lib "winmm" ([TypeHint(MMGeneralErrorCodes, MIDIERR)] ByVal mmrError As Long, ByVal pszText As String, ByVal cchText As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutGetErrorTextW Lib "winmm" ([TypeHint(MMGeneralErrorCodes, MIDIERR)] ByVal mmrError As Long, ByVal pszText As LongPtr, ByVal cchText As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function midiOutGetErrorText Lib "winmm" Alias "midiOutGetErrorTextW" ([TypeHint(MMGeneralErrorCodes, MIDIERR)] ByVal mmrError As Long, ByVal pszText As String, ByVal cchText As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutLongMsg Lib "winmm" (ByVal hmo As LongPtr, pmh As MIDIHDR, ByVal cbmh As Long) As MIDIERR
Public Declare PtrSafe Function midiOutReset Lib "winmm" (ByVal hmo As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutCachePatches Lib "winmm" (ByVal hmo As LongPtr, ByVal uBank As Long, pwpa As Integer, ByVal fuCache As MIDI_OUT_CACHE_FLAGS) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutCacheDrumPatches Lib "winmm" (ByVal hmo As LongPtr, ByVal uPatch As Long, pwkya As Integer, ByVal fuCache As MIDI_OUT_CACHE_FLAGS) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutGetID Lib "winmm" (ByVal hmo As LongPtr, puDeviceID As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiOutMessage Lib "winmm" (ByVal hmo As LongPtr, ByVal uMsg As WAV_DRV_MSGS, ByVal dw1 As LongPtr, ByVal dw2 As LongPtr) As MMGeneralErrorCodes

Public Declare PtrSafe Function midiInGetNumDevs Lib "winmm" () As Long
Public Declare PtrSafe Function midiInGetDevCapsA Lib "winmm" (ByVal uDeviceID As LongPtr, pmic As MIDIINCAPSA, ByVal cbmic As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInGetDevCapsW Lib "winmm" (ByVal uDeviceID As LongPtr, pmic As MIDIINCAPSW, ByVal cbmic As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function midiInGetDevCaps Lib "winmm" Alias "midiInGetDevCapsW" (ByVal uDeviceID As LongPtr, pmic As MIDIINCAPS, ByVal cbmic As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInGetErrorTextA Lib "winmm" ([TypeHint(MMGeneralErrorCodes, MIDIERR)] ByVal mmrError As Long, ByVal pszText As String, ByVal cchText As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInGetErrorTextW Lib "winmm" ([TypeHint(MMGeneralErrorCodes, MIDIERR)] ByVal mmrError As Long, ByVal pszText As LongPtr, ByVal cchText As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function midiInGetErrorText Lib "winmm" Alias "midiInGetErrorTextW" ([TypeHint(MMGeneralErrorCodes, MIDIERR)] ByVal mmrError As Long, ByVal pszText As String, ByVal cchText As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInOpen Lib "winmm" (phmi As LongPtr, ByVal uDeviceID As Long, ByVal dwCallback As LongPtr, ByVal dwInstance As LongPtr, ByVal dwFlags As MIDI_IN_OPEN_FLAGS) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInClose Lib "winmm" (ByVal hmi As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInPrepareHeader Lib "winmm" (ByVal hmi As LongPtr, pmh As MIDIHDR, ByVal cbmh As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInUnprepareHeader Lib "winmm" (ByVal hmi As LongPtr, pmh As MIDIHDR, ByVal cbmh As Long) As MIDIERR
Public Declare PtrSafe Function midiInAddBuffer Lib "winmm" (ByVal hmi As LongPtr, pmh As MIDIHDR, ByVal cbmh As Long) As MIDIERR
Public Declare PtrSafe Function midiInStart Lib "winmm" (ByVal hmi As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInStop Lib "winmm" (ByVal hmi As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInReset Lib "winmm" (ByVal hmi As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function midiInGetID Lib "winmm" (ByVal hmi As LongPtr, lpuDeviceID As Long) As Long
Public Declare PtrSafe Function midiInMessage Lib "winmm" (ByVal hmi As LongPtr, ByVal uMsg As WAV_DRV_MSGS, ByVal dw1 As LongPtr, ByVal dw2 As LongPtr) As MMGeneralErrorCodes
#End Region


'Complete
#Region "winmm_joystick"
Public Const MAX_JOYSTICKOEMVXDNAME = 260
Public Enum JOY_ERROR
    JOYERR_NOERROR = (0) /* no error */
    JOYERR_PARMS = (JOYERR_BASE + 5) /* bad parameters */
    JOYERR_NOCANDO = (JOYERR_BASE + 6) /* request not completed */
    JOYERR_UNPLUGGED = (JOYERR_BASE + 7) /* joystick is unplugged */
End Enum

Public Enum JOY_BUTTONS
    JOY_BUTTON1 = &H0001
    JOY_BUTTON2 = &H0002
    JOY_BUTTON3 = &H0004
    JOY_BUTTON4 = &H0008
    JOY_BUTTON1CHG = &H0100
    JOY_BUTTON2CHG = &H0200
    JOY_BUTTON3CHG = &H0400
    JOY_BUTTON4CHG = &H0800
End Enum
Public Enum JOY_BUTTONS_EX
    JOY_BUTTON5 = &H00000010
    JOY_BUTTON6 = &H00000020
    JOY_BUTTON7 = &H00000040
    JOY_BUTTON8 = &H00000080
    JOY_BUTTON9 = &H00000100
    JOY_BUTTON10 = &H00000200
    JOY_BUTTON11 = &H00000400
    JOY_BUTTON12 = &H00000800
    JOY_BUTTON13 = &H00001000
    JOY_BUTTON14 = &H00002000
    JOY_BUTTON15 = &H00004000
    JOY_BUTTON16 = &H00008000&
    JOY_BUTTON17 = &H00010000
    JOY_BUTTON18 = &H00020000
    JOY_BUTTON19 = &H00040000
    JOY_BUTTON20 = &H00080000
    JOY_BUTTON21 = &H00100000
    JOY_BUTTON22 = &H00200000
    JOY_BUTTON23 = &H00400000
    JOY_BUTTON24 = &H00800000
    JOY_BUTTON25 = &H01000000
    JOY_BUTTON26 = &H02000000
    JOY_BUTTON27 = &H04000000
    JOY_BUTTON28 = &H08000000
    JOY_BUTTON29 = &H10000000
    JOY_BUTTON30 = &H20000000
    JOY_BUTTON31 = &H40000000
    JOY_BUTTON32 = &H80000000
End Enum

'[IgnoreWarnings(TB0012) ]
Public Enum JOY_POV
    JOY_POVCENTERED = &HFFFF%
    JOY_POVFORWARD = 0
    JOY_POVRIGHT = 9000
    JOY_POVBACKWARD = 18000
    JOY_POVLEFT = 27000
End Enum

Public Enum JOY_RETURN
    JOY_RETURNX = &H00000001
    JOY_RETURNY = &H00000002
    JOY_RETURNZ = &H00000004
    JOY_RETURNR = &H00000008
    JOY_RETURNU = &H00000010 /* axis 5 */
    JOY_RETURNV = &H00000020 /* axis 6 */
    JOY_RETURNPOV = &H00000040
    JOY_RETURNBUTTONS = &H00000080
    JOY_RETURNRAWDATA = &H00000100
    JOY_RETURNPOVCTS = &H00000200
    JOY_RETURNCENTERED = &H00000400
    JOY_USEDEADZONE = &H00000800
    JOY_RETURNALL = (JOY_RETURNX Or JOY_RETURNY Or JOY_RETURNZ Or JOY_RETURNR Or JOY_RETURNU Or JOY_RETURNV Or JOY_RETURNPOV Or JOY_RETURNBUTTONS)
' End Enum

' Public Enum JOY_CAL
    JOY_CAL_READALWAYS = &H00010000
    JOY_CAL_READXYONLY = &H00020000
    JOY_CAL_READ3 = &H00040000
    JOY_CAL_READ4 = &H00080000
    JOY_CAL_READXONLY = &H00100000
    JOY_CAL_READYONLY = &H00200000
    JOY_CAL_READ5 = &H00400000
    JOY_CAL_READ6 = &H00800000
    JOY_CAL_READZONLY = &H01000000
    JOY_CAL_READRONLY = &H02000000
    JOY_CAL_READUONLY = &H04000000
    JOY_CAL_READVONLY = &H08000000
End Enum

Public Enum JOY_ID_CONST
    JOYSTICKID1 = 0
    JOYSTICKID2 = 1
End Enum

Public Enum JOY_CAPS
    JOYCAPS_HASZ = &H0001
    JOYCAPS_HASR = &H0002
    JOYCAPS_HASU = &H0004
    JOYCAPS_HASV = &H0008
    JOYCAPS_HASPOV = &H0010
    JOYCAPS_POV4DIR = &H0020
    JOYCAPS_POVCTS = &H0040
End Enum

Public Type JOYCAPSA
    wMid As Integer '* manufacturer ID */
    wPid As Integer '* product ID */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte '* product name (NULL terminated string) */
    wXmin As Long '* minimum x position value */
    wXmax As Long '* maximum x position value */
    wYmin As Long '* minimum y position value */
    wYmax As Long '* maximum y position value */
    wZmin As Long '* minimum z position value */
    wZmax As Long '* maximum z position value */
    wNumButtons As Long '* number of buttons */
    wPeriodMin As Long '* minimum message period when captured */
    wPeriodMax As Long '* maximum message period when captured */
    wRmin As Long '* minimum r position value */
    wRmax As Long '* maximum r position value */
    wUmin As Long '* minimum u (5th axis) position value */
    wUmax As Long '* maximum u (5th axis) position value */
    wVmin As Long '* minimum v (6th axis) position value */
    wVmax As Long '* maximum v (6th axis) position value */
    wCaps As JOY_CAPS '* joystick capabilites */
    wMaxAxes As Long '* maximum number of axes supported */
    wNumAxes As Long '* number of axes in use */
    wMaxButtons As Long '* maximum number of buttons supported */
    szRegKey(0 To (MAXPNAMELEN - 1)) As Byte '* registry key */
    szOEMVxD(0 To (MAX_JOYSTICKOEMVXDNAME - 1)) As Byte '* OEM VxD in use */
End Type
Public Type JOYCAPSW
    wMid As Integer '* manufacturer ID */
    wPid As Integer '* product ID */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer '* product name (NULL terminated string) */
    wXmin As Long '* minimum x position value */
    wXmax As Long '* maximum x position value */
    wYmin As Long '* minimum y position value */
    wYmax As Long '* maximum y position value */
    wZmin As Long '* minimum z position value */
    wZmax As Long '* maximum z position value */
    wNumButtons As Long '* number of buttons */
    wPeriodMin As Long '* minimum message period when captured */
    wPeriodMax As Long '* maximum message period when captured */
    wRmin As Long '* minimum r position value */
    wRmax As Long '* maximum r position value */
    wUmin As Long '* minimum u (5th axis) position value */
    wUmax As Long '* maximum u (5th axis) position value */
    wVmin As Long '* minimum v (6th axis) position value */
    wVmax As Long '* maximum v (6th axis) position value */
    wCaps As JOY_CAPS '* joystick capabilites */
    wMaxAxes As Long '* maximum number of axes supported */
    wNumAxes As Long '* number of axes in use */
    wMaxButtons As Long '* maximum number of buttons supported */
    szRegKey(0 To (MAXPNAMELEN - 1)) As Integer '* registry key */
    szOEMVxD(0 To (MAX_JOYSTICKOEMVXDNAME - 1)) As Integer '* OEM VxD in use */
End Type
Public Type JOYCAPS
    wMid As Integer '* manufacturer ID */
    wPid As Integer '* product ID */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer '* product name (NULL terminated string) */
    wXmin As Long '* minimum x position value */
    wXmax As Long '* maximum x position value */
    wYmin As Long '* minimum y position value */
    wYmax As Long '* maximum y position value */
    wZmin As Long '* minimum z position value */
    wZmax As Long '* maximum z position value */
    wNumButtons As Long '* number of buttons */
    wPeriodMin As Long '* minimum message period when captured */
    wPeriodMax As Long '* maximum message period when captured */
    wRmin As Long '* minimum r position value */
    wRmax As Long '* maximum r position value */
    wUmin As Long '* minimum u (5th axis) position value */
    wUmax As Long '* maximum u (5th axis) position value */
    wVmin As Long '* minimum v (6th axis) position value */
    wVmax As Long '* maximum v (6th axis) position value */
    wCaps As JOY_CAPS '* joystick capabilites */
    wMaxAxes As Long '* maximum number of axes supported */
    wNumAxes As Long '* number of axes in use */
    wMaxButtons As Long '* maximum number of buttons supported */
    szRegKey(0 To (MAXPNAMELEN - 1)) As Integer '* registry key */
    szOEMVxD(0 To (MAX_JOYSTICKOEMVXDNAME - 1)) As Integer '* OEM VxD in use */
End Type
Public Type JOYCAPS2A
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte ' /* product name (NULL terminated string) */
    wXmin As Long ' /* minimum x position value */
    wXmax As Long ' /* maximum x position value */
    wYmin As Long ' /* minimum y position value */
    wYmax As Long ' /* maximum y position value */
    wZmin As Long ' /* minimum z position value */
    wZmax As Long ' /* maximum z position value */
    wNumButtons As Long ' /* number of buttons */
    wPeriodMin As Long ' /* minimum message period when captured */
    wPeriodMax As Long ' /* maximum message period when captured */
    wRmin As Long ' /* minimum r position value */
    wRmax As Long ' /* maximum r position value */
    wUmin As Long ' /* minimum u (5th axis) position value */
    wUmax As Long ' /* maximum u (5th axis) position value */
    wVmin As Long ' /* minimum v (6th axis) position value */
    wVmax As Long ' /* maximum v (6th axis) position value */
    wCaps As JOY_CAPS ' /* joystick capabilites */
    wMaxAxes As Long ' /* maximum number of axes supported */
    wNumAxes As Long ' /* number of axes in use */
    wMaxButtons As Long ' /* maximum number of buttons supported */
    szRegKey(0 To (MAXPNAMELEN - 1)) As Byte ' /* registry key */
    szOEMVxD(0 To (MAX_JOYSTICKOEMVXDNAME - 1)) As Byte ' /* OEM VxD in use */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type
Public Type JOYCAPS2W
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    wXmin As Long ' /* minimum x position value */
    wXmax As Long ' /* maximum x position value */
    wYmin As Long ' /* minimum y position value */
    wYmax As Long ' /* maximum y position value */
    wZmin As Long ' /* minimum z position value */
    wZmax As Long ' /* maximum z position value */
    wNumButtons As Long ' /* number of buttons */
    wPeriodMin As Long ' /* minimum message period when captured */
    wPeriodMax As Long ' /* maximum message period when captured */
    wRmin As Long ' /* minimum r position value */
    wRmax As Long ' /* maximum r position value */
    wUmin As Long ' /* minimum u (5th axis) position value */
    wUmax As Long ' /* maximum u (5th axis) position value */
    wVmin As Long ' /* minimum v (6th axis) position value */
    wVmax As Long ' /* maximum v (6th axis) position value */
    wCaps As JOY_CAPS ' /* joystick capabilites */
    wMaxAxes As Long ' /* maximum number of axes supported */
    wNumAxes As Long ' /* number of axes in use */
    wMaxButtons As Long ' /* maximum number of buttons supported */
    szRegKey(0 To (MAXPNAMELEN - 1)) As Integer ' /* registry key */
    szOEMVxD(0 To (MAX_JOYSTICKOEMVXDNAME - 1)) As Integer ' /* OEM VxD in use */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type
Public Type JOYCAPS2
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    wXmin As Long ' /* minimum x position value */
    wXmax As Long ' /* maximum x position value */
    wYmin As Long ' /* minimum y position value */
    wYmax As Long ' /* maximum y position value */
    wZmin As Long ' /* minimum z position value */
    wZmax As Long ' /* maximum z position value */
    wNumButtons As Long ' /* number of buttons */
    wPeriodMin As Long ' /* minimum message period when captured */
    wPeriodMax As Long ' /* maximum message period when captured */
    wRmin As Long ' /* minimum r position value */
    wRmax As Long ' /* maximum r position value */
    wUmin As Long ' /* minimum u (5th axis) position value */
    wUmax As Long ' /* maximum u (5th axis) position value */
    wVmin As Long ' /* minimum v (6th axis) position value */
    wVmax As Long ' /* maximum v (6th axis) position value */
    wCaps As JOY_CAPS ' /* joystick capabilites */
    wMaxAxes As Long ' /* maximum number of axes supported */
    wNumAxes As Long ' /* number of axes in use */
    wMaxButtons As Long ' /* maximum number of buttons supported */
    szRegKey(0 To (MAXPNAMELEN - 1)) As Integer ' /* registry key */
    szOEMVxD(0 To (MAX_JOYSTICKOEMVXDNAME - 1)) As Integer ' /* OEM VxD in use */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type

Public Type JOYINFO
    wXpos As Long '  /* x position */
    wYpos As Long '   /* y position */
    wZpos As Long '    /* z position */
    wButtons As JOY_BUTTONS '     /* button states */
End Type

Public Type JOYINFOEX
    dwSize As Long ' /* size of structure */
    dwFlags As JOY_RETURN '  /* flags to indicate what to return */
    dwXpos As Long '   /* x position */
    dwYpos As Long '   /* y position */
    dwZpos As Long '   /* z position */
    dwRpos As Long '    /* rudder/4th axis position */
    dwUpos As Long '   /* 5th axis position */
    dwVpos As Long '   /* 6th axis position */
    dwButtons As JOY_BUTTONS_EX '  /* button states */
    dwButtonNumber As JOY_BUTTONS_EX '    /* current button number pressed */
    dwPOV As JOY_POV '  /* point of view state */
    dwReserved1 As Long '    /* reserved for communication between winmm & driver */
    dwReserved2 As Long '  /* reserved for future expansion */
End Type

Public Declare PtrSafe Function joyGetDevCapsA Lib "winmm" (ByVal id As LongPtr, lpCaps As JOYCAPSA, ByVal uSize As Long) As JOY_ERROR
Public Declare PtrSafe Function joyGetDevCapsW Lib "winmm" (ByVal id As LongPtr, lpCaps As JOYCAPSW, ByVal uSize As Long) As JOY_ERROR
Public DeclareWide PtrSafe Function joyGetDevCaps Lib "winmm" Alias "joyGetDevCapsW" (ByVal id As LongPtr, lpCaps As JOYCAPS, ByVal uSize As Long) As JOY_ERROR
Public Declare PtrSafe Function joyGetPos Lib "winmm" (ByVal uJoyID As Long, pji As JOYINFO) As JOY_ERROR
Public Declare PtrSafe Function joyGetPosEx Lib "winmm" (ByVal uJoyID As Long, pji As JOYINFOEX) As JOY_ERROR
Public Declare PtrSafe Function joyGetNumDevs Lib "winmm" () As JOY_ERROR
Public Declare PtrSafe Function joyGetThreshold Lib "winmm" (ByVal id As Long, lpuThreshold As Long) As JOY_ERROR
Public Declare PtrSafe Function joyReleaseCapture Lib "winmm" (ByVal id As Long) As JOY_ERROR
Public Declare PtrSafe Function joySetCapture Lib "winmm" (ByVal hwnd As LongPtr, ByVal uID As Long, ByVal uPeriod As Long, ByVal fChanged As BOOL) As JOY_ERROR
Public Declare PtrSafe Function joySetThreshold Lib "winmm" (ByVal id As Long, ByVal uThreshold As Long) As JOY_ERROR
Public Declare PtrSafe Function joyConfigChanged Lib "winmm" (ByVal dwFlags As Long) As JOY_ERROR

#End Region

'Complete
#Region "winmm_aux"
Public Const AUX_MAPPER As Long = -1

Public Enum AUX_TECHNOLOGY
    AUXCAPS_CDAUDIO = 1 /* audio from internal CD-ROM drive */
    AUXCAPS_AUXIN = 2 /* audio from auxiliary input jacks */
End Enum

Public Enum AUX_SUPPORT
    AUXCAPS_VOLUME = &H0001 /* supports volume control */
    AUXCAPS_LRVOLUME = &H0002 /* separate left-right volume control */ '
End Enum


Public Type AUXCAPSA
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte ' /* product name (NULL terminated string) */
    /* [ TypeHint(AUX_TECHNOLOGY) ] */ wTechnology As Integer ' /* type of device */
    wReserved1 As Integer ' /* padding */
    dwSupport As AUX_TECHNOLOGY ' /* functionality supported by driver */
End Type
Public Type AUXCAPSW
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    /* [ TypeHint(AUX_TECHNOLOGY) ] */ wTechnology As Integer ' /* type of device */
    wReserved1 As Integer ' /* padding */
    dwSupport As AUX_TECHNOLOGY ' /* functionality supported by driver */
End Type
Public Type AUXCAPS
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    /* [ TypeHint(AUX_TECHNOLOGY) ] */ wTechnology As Integer ' /* type of device */
    wReserved1 As Integer ' /* padding */
    dwSupport As AUX_TECHNOLOGY ' /* functionality supported by driver */
End Type

Public Type AUXCAPS2A
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte ' /* product name (NULL terminated string) */
    /* [ TypeHint(AUX_TECHNOLOGY) ] */ wTechnology As Integer ' /* type of device */
    wReserved1 As Integer ' /* padding */
    dwSupport As AUX_TECHNOLOGY ' /* functionality supported by driver */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type
Public Type AUXCAPS2W
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    /* [ TypeHint(AUX_TECHNOLOGY) ] */ wTechnology As Integer ' /* type of device */
    wReserved1 As Integer ' /* padding */
    dwSupport As AUX_TECHNOLOGY ' /* functionality supported by driver */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type
Public Type AUXCAPS2
    wMid As Integer ' /* manufacturer ID */
    wPid As Integer ' /* product ID */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name (NULL terminated string) */
    /* [ TypeHint(AUX_TECHNOLOGY) ] */ wTechnology As Integer ' /* type of device */
    wReserved1 As Integer ' /* padding */
    dwSupport As AUX_TECHNOLOGY ' /* functionality supported by driver */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type

Declare PtrSafe Function auxGetNumDevs Lib "winmm" () As Long
Declare PtrSafe Function auxGetDevCapsA Lib "winmm" (ByVal uDeviceID As LongPtr, pac As AUXCAPS, ByVal cbac As Long) As MMGeneralErrorCodes
Declare PtrSafe Function auxGetDevCapsW Lib "winmm" (ByVal uDeviceID As LongPtr, pac As AUXCAPS, ByVal cbac As Long) As MMGeneralErrorCodes
Declare PtrSafe Function auxGetDevCaps Lib "winmm" Alias "auxGetDevCapsW" (ByVal uDeviceID As LongPtr, pac As AUXCAPS, ByVal cbac As Long) As MMGeneralErrorCodes

Declare PtrSafe Function auxSetVolume Lib "winmm" (ByVal uDeviceID As Long, ByVal dwVolume As Long) As MMGeneralErrorCodes
Declare PtrSafe Function auxGetVolume Lib "winmm" (ByVal uDeviceID As Long, pdwVolume As Long) As MMGeneralErrorCodes
Declare PtrSafe Function auxOutMessage Lib "winmm" (ByVal uDeviceID As Long, ByVal uMsg As WAV_DRV_MSGS, ByVal dw1 As LongPtr, ByVal dw2 As LongPtr) As MMGeneralErrorCodes
#End Region

'Complete
#Region "winmm_wave"

'Microsoft Product IDs
[Description("Midi Mapper")] Public Const MM_MIDI_MAPPER  = 1
[Description("Wave Mapper")] Public Const MM_WAVE_MAPPER  = 2
[Description("Sound Blaster MIDI output port")] Public Const MM_SNDBLST_MIDIOUT  = 3
[Description("Sound Blaster MIDI input port")] Public Const MM_SNDBLST_MIDIIN  = 4
[Description("Sound Blaster internal synth")] Public Const MM_SNDBLST_SYNTH  = 5
[Description("Sound Blaster waveform output")] Public Const MM_SNDBLST_WAVEOUT  = 6
[Description("Sound Blaster waveform input")] Public Const MM_SNDBLST_WAVEIN  = 7
[Description("Ad Lib Compatible synth")] Public Const MM_ADLIB  = 9
[Description("MPU 401 compatible MIDI output port")] Public Const MM_MPU401_MIDIOUT  = 10
[Description("MPU 401 compatible MIDI input port")] Public Const MM_MPU401_MIDIIN  = 11
[Description("Joystick adapter")] Public Const MM_PC_JOYSTICK  = 12
[Description("PC speaker waveform output")] Public Const MM_PCSPEAKER_WAVEOUT  = 13
[Description("MS Audio Board waveform input")] Public Const MM_MSFT_WSS_WAVEIN  = 14
[Description("MS Audio Board waveform output")] Public Const MM_MSFT_WSS_WAVEOUT  = 15
[Description("MS Audio Board Stereo FM synth")] Public Const MM_MSFT_WSS_FMSYNTH_STEREO  = 16
[Description("MS Audio Board Mixer Driver")] Public Const MM_MSFT_WSS_MIXER  = 17
[Description("MS OEM Audio Board waveform input")] Public Const MM_MSFT_WSS_OEM_WAVEIN  = 18
[Description("MS OEM Audio Board waveform output")] Public Const MM_MSFT_WSS_OEM_WAVEOUT  = 19
[Description("MS OEM Audio Board Stereo FM Synth")] Public Const MM_MSFT_WSS_OEM_FMSYNTH_STEREO  = 20
[Description("MS Audio Board Aux. Port")] Public Const MM_MSFT_WSS_AUX  = 21
[Description("MS OEM Audio Aux Port")] Public Const MM_MSFT_WSS_OEM_AUX  = 22
[Description("MS Vanilla driver waveform input")] Public Const MM_MSFT_GENERIC_WAVEIN  = 23
[Description("MS Vanilla driver wavefrom output")] Public Const MM_MSFT_GENERIC_WAVEOUT  = 24
[Description("MS Vanilla driver MIDI in")] Public Const MM_MSFT_GENERIC_MIDIIN  = 25
[Description("MS Vanilla driver MIDI external out")] Public Const MM_MSFT_GENERIC_MIDIOUT  = 26
[Description("MS Vanilla driver MIDI synthesizer")] Public Const MM_MSFT_GENERIC_MIDISYNTH  = 27
[Description("MS Vanilla driver aux (line in)")] Public Const MM_MSFT_GENERIC_AUX_LINE  = 28
[Description("MS Vanilla driver aux (mic)")] Public Const MM_MSFT_GENERIC_AUX_MIC  = 29
[Description("MS Vanilla driver aux (CD)")] Public Const MM_MSFT_GENERIC_AUX_CD  = 30
[Description("MS OEM Audio Board Mixer Driver")] Public Const MM_MSFT_WSS_OEM_MIXER  = 31
[Description("MS Audio Compression Manager")] Public Const MM_MSFT_MSACM  = 32
[Description("MS ADPCM Codec")] Public Const MM_MSFT_ACM_MSADPCM  = 33
[Description("IMA ADPCM Codec")] Public Const MM_MSFT_ACM_IMAADPCM  = 34
[Description("MS Filter")] Public Const MM_MSFT_ACM_MSFILTER  = 35
[Description("GSM 610 codec")] Public Const MM_MSFT_ACM_GSM610  = 36
[Description("G.711 codec")] Public Const MM_MSFT_ACM_G711  = 37
[Description("PCM converter")] Public Const MM_MSFT_ACM_PCM  = 38

'  Microsoft Windows Sound System drivers
[Description("Sound Blaster 16 waveform input")] Public Const MM_WSS_SB16_WAVEIN  = 39
[Description("Sound Blaster 16 waveform output")] Public Const MM_WSS_SB16_WAVEOUT  = 40
[Description("Sound Blaster 16 midi-in")] Public Const MM_WSS_SB16_MIDIIN  = 41
 [Description("Sound Blaster 16 midi out")] Public Const MM_WSS_SB16_MIDIOUT  = 42
[Description("Sound Blaster 16 FM Synthesis")] Public Const MM_WSS_SB16_SYNTH  = 43
[Description("Sound Blaster 16 aux (line in)")] Public Const MM_WSS_SB16_AUX_LINE  = 44
[Description("Sound Blaster 16 aux (CD)")] Public Const MM_WSS_SB16_AUX_CD  = 45
[Description("Sound Blaster 16 mixer device")] Public Const MM_WSS_SB16_MIXER  = 46
[Description("Sound Blaster Pro waveform input")] Public Const MM_WSS_SBPRO_WAVEIN  = 47
[Description("Sound Blaster Pro waveform output")] Public Const MM_WSS_SBPRO_WAVEOUT  = 48
[Description("Sound Blaster Pro midi in")] Public Const MM_WSS_SBPRO_MIDIIN  = 49
[Description("Sound Blaster Pro midi out")] Public Const MM_WSS_SBPRO_MIDIOUT  = 50
[Description("Sound Blaster Pro FM synthesis")] Public Const MM_WSS_SBPRO_SYNTH  = 51
[Description("Sound Blaster Pro aux (line in )")] Public Const MM_WSS_SBPRO_AUX_LINE  = 52
[Description("Sound Blaster Pro aux (CD)")] Public Const MM_WSS_SBPRO_AUX_CD  = 53
[Description("Sound Blaster Pro mixer")] Public Const MM_WSS_SBPRO_MIXER  = 54
[Description("WSS NT wave in")] Public Const MM_MSFT_WSS_NT_WAVEIN  = 55
[Description("WSS NT wave out")] Public Const MM_MSFT_WSS_NT_WAVEOUT  = 56
[Description("WSS NT FM synth")] Public Const MM_MSFT_WSS_NT_FMSYNTH_STEREO  = 57
[Description("WSS NT mixer")] Public Const MM_MSFT_WSS_NT_MIXER  = 58
[Description("WSS NT aux")] Public Const MM_MSFT_WSS_NT_AUX  = 59
[Description("Sound Blaster 16 waveform input")] Public Const MM_MSFT_SB16_WAVEIN  = 60
[Description("Sound Blaster 16 waveform output")] Public Const MM_MSFT_SB16_WAVEOUT  = 61
[Description("Sound Blaster 16 midi-in")] Public Const MM_MSFT_SB16_MIDIIN  = 62
[Description("Sound Blaster 16 midi out")] Public Const MM_MSFT_SB16_MIDIOUT  = 63
[Description("Sound Blaster 16 FM Synthesis")] Public Const MM_MSFT_SB16_SYNTH  = 64
[Description("Sound Blaster 16 aux (line in)")] Public Const MM_MSFT_SB16_AUX_LINE  = 65
[Description("Sound Blaster 16 aux (CD)")] Public Const MM_MSFT_SB16_AUX_CD  = 66
[Description("Sound Blaster 16 mixer device")] Public Const MM_MSFT_SB16_MIXER  = 67
[Description("Sound Blaster Pro waveform input")] Public Const MM_MSFT_SBPRO_WAVEIN  = 68
[Description("Sound Blaster Pro waveform output")] Public Const MM_MSFT_SBPRO_WAVEOUT  = 69
[Description("Sound Blaster Pro midi in")] Public Const MM_MSFT_SBPRO_MIDIIN  = 70
[Description("Sound Blaster Pro midi out")] Public Const MM_MSFT_SBPRO_MIDIOUT  = 71
[Description("Sound Blaster Pro FM synthesis")] Public Const MM_MSFT_SBPRO_SYNTH  = 72
[Description("Sound Blaster Pro aux (line in)")] Public Const MM_MSFT_SBPRO_AUX_LINE  = 73
[Description("Sound Blaster Pro aux (CD)")] Public Const MM_MSFT_SBPRO_AUX_CD  = 74
[Description("Sound Blaster Pro mixer")] Public Const MM_MSFT_SBPRO_MIXER  = 75
[Description("Yamaha OPL2/OPL3 compatible FM synthesis")] Public Const MM_MSFT_MSOPL_SYNTH  = 76
[Description("Voice Modem Serial Line Wave Input")] Public Const MM_MSFT_VMDMS_LINE_WAVEIN  = 80
[Description("Voice Modem Serial Line Wave Output")] Public Const MM_MSFT_VMDMS_LINE_WAVEOUT  = 81
[Description("Voice Modem Serial Handset Wave Input")] Public Const MM_MSFT_VMDMS_HANDSET_WAVEIN  = 82
[Description("Voice Modem Serial Handset Wave Output")] Public Const MM_MSFT_VMDMS_HANDSET_WAVEOUT  = 83
[Description("Voice Modem Wrapper Line Wave Input")] Public Const MM_MSFT_VMDMW_LINE_WAVEIN  = 84
[Description("Voice Modem Wrapper Line Wave Output")] Public Const MM_MSFT_VMDMW_LINE_WAVEOUT  = 85
[Description("Voice Modem Wrapper Handset Wave Input")] Public Const MM_MSFT_VMDMW_HANDSET_WAVEIN  = 86
[Description("Voice Modem Wrapper Handset Wave Output")] Public Const MM_MSFT_VMDMW_HANDSET_WAVEOUT  = 87
[Description("Voice Modem Wrapper Mixer")] Public Const MM_MSFT_VMDMW_MIXER  = 88
[Description("Voice Modem Game Compatible Wave Device")] Public Const MM_MSFT_VMDM_GAME_WAVEOUT  = 89
[Description("Voice Modem Game Compatible Wave Device")] Public Const MM_MSFT_VMDM_GAME_WAVEIN  = 90
Public Const MM_MSFT_ACM_MSNAUDIO  = 91
Public Const MM_MSFT_ACM_MSG723  = 92
Public Const MM_MSFT_ACM_MSRT24  = 93
[Description("Generic id for WDM Audio drivers")] Public Const MM_MSFT_WDMAUDIO_WAVEOUT  = 100
[Description("Generic id for WDM Audio drivers")] Public Const MM_MSFT_WDMAUDIO_WAVEIN  = 101
[Description("Generic id for WDM Audio drivers")] Public Const MM_MSFT_WDMAUDIO_MIDIOUT  = 102
[Description("Generic id for WDM Audio drivers")] Public Const MM_MSFT_WDMAUDIO_MIDIIN  = 103
[Description("Generic id for WDM Audio drivers")] Public Const MM_MSFT_WDMAUDIO_MIXER  = 104
[Description("Generic id for WDM Audio drivers")] Public Const MM_MSFT_WDMAUDIO_AUX  = 105

Public Enum WAVECAPS_SUPPORT_FLAGS
    WAVECAPS_PITCH = &H0001 /* supports pitch control */
    WAVECAPS_PLAYBACKRATE = &H0002 /* supports playback rate control */
    WAVECAPS_VOLUME = &H0004 /* supports volume control */
    WAVECAPS_LRVOLUME = &H0008 /* separate left-right volume control */
    WAVECAPS_SYNC = &H0010
    WAVECAPS_SAMPLEACCURATE = &H0020
End Enum
Public Const MAXPNAMELEN = 32
Public Type WAVEOUTCAPSA
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Byte   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  dwSupport  As WAVECAPS_SUPPORT_FLAGS  ' functionality supported by driver
End Type
Public Type WAVEOUTCAPSW
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Integer   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  dwSupport  As WAVECAPS_SUPPORT_FLAGS  ' functionality supported by driver
End Type
Public Type WAVEOUTCAPS
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Integer   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  dwSupport  As WAVECAPS_SUPPORT_FLAGS  ' functionality supported by driver
End Type
Public Type WAVEOUTCAPS2A
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Byte   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  dwSupport  As WAVECAPS_SUPPORT_FLAGS  ' functionality supported by driver
  ManufacturerGuid As UUID /* for extensible MID mapping */
  ProductGuid As UUID /* for extensible PID mapping */
  NameGuid As UUID /* for name lookup in registry */
End Type
Public Type WAVEOUTCAPS2W
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Integer   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  dwSupport  As WAVECAPS_SUPPORT_FLAGS  ' functionality supported by driver
  ManufacturerGuid As UUID /* for extensible MID mapping */
  ProductGuid As UUID /* for extensible PID mapping */
  NameGuid As UUID /* for name lookup in registry */
End Type
Public Type WAVEOUTCAPS2
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Integer   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  dwSupport  As WAVECAPS_SUPPORT_FLAGS  ' functionality supported by driver
  ManufacturerGuid As UUID /* for extensible MID mapping */
  ProductGuid As UUID /* for extensible PID mapping */
  NameGuid As UUID /* for name lookup in registry */
End Type
Public Type WAVEINCAPSA
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Byte   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
End Type
Public Type WAVEINCAPSW
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Integer   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
End Type
Public Type WAVEINCAPS
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Integer   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
End Type
Public Type WAVEINCAPS2A
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Byte   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  ManufacturerGuid As UUID /* for extensible MID mapping */
  ProductGuid As UUID /* for extensible PID mapping */
  NameGuid As UUID /* for name lookup in registry */
End Type
Public Type WAVEINCAPS2W
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Integer   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  ManufacturerGuid As UUID /* for extensible MID mapping */
  ProductGuid As UUID /* for extensible PID mapping */
  NameGuid As UUID /* for name lookup in registry */
End Type
Public Type WAVEINCAPS2
  wMid  As Integer ' manufacturer ID
  wPid  As Integer   ' product ID
  vDriverVersion As Long 'version of the driver
  szPname(0 To (MAXPNAMELEN - 1))  As Integer   '/ product name (NULL terminated string)
  dwFormats  As WAVECAPS_FMT_FLAGS '/ formats supported
  wChannels  As Integer '/ number of sources supported
  wReserved1  As Integer ' packing
  ManufacturerGuid As UUID /* for extensible MID mapping */
  ProductGuid As UUID /* for extensible PID mapping */
  NameGuid As UUID /* for name lookup in registry */
End Type

Public Const WAVERR_BADFORMAT  = (WAVERR_BASE + 0) /* unsupported wave format */
Public Const WAVERR_STILLPLAYING  = (WAVERR_BASE + 1) /* still something playing */
Public Const WAVERR_UNPREPARED  = (WAVERR_BASE + 2) /* header not prepared */
Public Const WAVERR_SYNC  = (WAVERR_BASE + 3) /* device is synchronous */
Public Const WAVERR_LASTERROR  = (WAVERR_BASE + 3) /* last error in range */

Public Const WOM_OPEN  = MM_WOM_OPEN
Public Const WOM_CLOSE  = MM_WOM_CLOSE
Public Const WOM_DONE  = MM_WOM_DONE
Public Const WIM_OPEN  = MM_WIM_OPEN
Public Const WIM_CLOSE  = MM_WIM_CLOSE
Public Const WIM_DATA  = MM_WIM_DATA

Public Enum WAV_OPEN_FLAGS
    WAVE_FORMAT_QUERY = &H0001
    WAVE_ALLOWSYNC = &H0002
    WAVE_MAPPED = &H0004
    WAVE_FORMAT_DIRECT = &H0008
    WAVE_FORMAT_DIRECT_QUERY = (WAVE_FORMAT_QUERY Or WAVE_FORMAT_DIRECT)
    WAVE_MAPPED_DEFAULT_COMMUNICATION_DEVICE = &H0010
End Enum

Public Enum WAV_HDR_FLAGS
    WHDR_DONE = &H00000001 /* done bit */
    WHDR_PREPARED = &H00000002 /* set if this header has been prepared */
    WHDR_BEGINLOOP = &H00000004 /* loop start block */
    WHDR_ENDLOOP = &H00000008 /* loop end block */
    WHDR_INQUEUE = &H00000010 /* reserved for driver */
End Enum
Public Type WAVEHDR
  lpData  As LongPtr '/ poLonger to locked data buffer
  dwBufferLength  As Long  '/ length of data buffer
  dwBytesRecorded  As Long  '/ used for input only
  dwUser  As LongPtr  ' / for client's use
  dwFlags  As WAV_HDR_FLAGS ' / assorted flags (see defines)
  dwLoops As Long '/ loop control counter
  lpNext As LongPtr '/ reserved for driver
  reserved  As LongPtr  ' / reserved for driver
End Type

Public Enum WAV_DRV_MSGS
    DRV_LOAD = &H0001
    DRV_ENABLE = &H0002
    DRV_OPEN = &H0003
    DRV_CLOSE = &H0004
    DRV_DISABLE = &H0005
    DRV_FREE = &H0006
    DRV_CONFIGURE = &H0007
    DRV_QUERYCONFIGURE = &H0008
    DRV_INSTALL = &H0009
    DRV_REMOVE = &H000A
    DRV_RESERVED = &H0800
    DRV_USER = &H4000
    DRV_QUERYDEVNODE = (DRV_RESERVED + 2)
    DRV_QUERYMAPPABLE = (DRV_RESERVED + 5)
    DRV_QUERYMODULE = (DRV_RESERVED + 9)
    DRV_PNPINSTALL = (DRV_RESERVED + 11)
    DRV_QUERYDEVICEINTERFACE = (DRV_RESERVED + 12)
    DRV_QUERYDEVICEINTERFACESIZE = (DRV_RESERVED + 13)
    DRV_QUERYSTRINGID = (DRV_RESERVED + 14)
    DRV_QUERYSTRINGIDSIZE = (DRV_RESERVED + 15)
    DRV_QUERYIDFROMSTRINGID = (DRV_RESERVED + 16)
    DRV_QUERYFUNCTIONINSTANCEID = (DRV_RESERVED + 17)
    DRV_QUERYFUNCTIONINSTANCEIDSIZE = (DRV_RESERVED + 18)
End Enum

Public Declare PtrSafe Function waveInGetNumDevs Lib "winmm" () As Long
Public Declare PtrSafe Function waveOutGetNumDevs Lib "winmm" () As Long
Public Declare PtrSafe Function waveInGetDevCapsA Lib "winmm" (ByVal uDeviceID As LongPtr, lpCaps As WAVEINCAPSA, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutGetDevCapsA Lib "winmm" (ByVal uDeviceID As LongPtr, lpCaps As WAVEOUTCAPSA, ByVal cbwoc As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInGetDevCapsW Lib "winmm" (ByVal uDeviceID As LongPtr, lpCaps As WAVEINCAPSW, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutGetDevCapsW Lib "winmm" (ByVal uDeviceID As LongPtr, lpCaps As WAVEOUTCAPSW, ByVal cbwoc As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function waveInGetDevCaps Lib "winmm" Alias "waveInGetDevCapsW" (ByVal uDeviceID As LongPtr, lpCaps As WAVEINCAPS, ByVal uSize As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function waveOutGetDevCaps Lib "winmm" Alias "waveOutGetDevCapsW" (ByVal uDeviceID As LongPtr, lpCaps As WAVEOUTCAPS, ByVal cbwoc As Long) As MMGeneralErrorCodes

Public Declare PtrSafe Function waveOutGetVolume Lib "winmm" (ByVal hwo As LongPtr, lpdwVolume As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutSetVolume Lib "winmm" (ByVal hwo As LongPtr, ByVal dwVolume As Long) As MMGeneralErrorCodes

Public Declare PtrSafe Function waveInGetErrorTextA Lib "winmm" (ByVal err As MMGeneralErrorCodes, ByVal lpText As String, ByVal uSize As Long) As Long
Public Declare PtrSafe Function waveInGetErrorTextW Lib "winmm" (ByVal err As MMGeneralErrorCodes, ByVal lpText As LongPtr, ByVal uSize As Long) As Long
Public DeclareWide PtrSafe Function waveInGetErrorText Lib "winmm" Alias "waveInGetErrorTextW" (ByVal err As MMGeneralErrorCodes, ByVal lpText As String, ByVal uSize As Long) As Long
Public Declare PtrSafe Function waveOutGetErrorTextA Lib "winmm" (ByVal err As MMGeneralErrorCodes, ByVal lpText As String, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutGetErrorTextW Lib "winmm" (ByVal err As MMGeneralErrorCodes, ByVal lpText As LongPtr, ByVal uSize As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function waveOutGetErrorText Lib "winmm" Alias "waveOutGetErrorTextW" (ByVal err As MMGeneralErrorCodes, ByVal lpText As String, ByVal uSize As Long) As MMGeneralErrorCodes

Public Declare PtrSafe Function waveInOpen Lib "winmm" (lphWaveIn As LongPtr, ByVal uDeviceID As Long, lpFormat As WAVEFORMATEX, ByVal dwCallback As LongPtr, ByVal dwInstance As LongPtr, [TypeHint(MMDriverCallback, WAV_OPEN_FLAGS)] ByVal fdwOpen As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutOpen Lib "winmm" (lphWaveOut As LongPtr, ByVal uDeviceID As Long, lpFormat As WAVEFORMATEX, ByVal dwCallback As LongPtr, ByVal dwInstance As LongPtr, [TypeHint(MMDriverCallback, WAV_OPEN_FLAGS)] ByVal fdwOpen As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInClose Lib "winmm" (ByVal hWaveIn As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutClose Lib "winmm" (ByVal hWaveOut As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInPrepareHeader Lib "winmm" (ByVal hWaveIn As LongPtr, lpWaveInHdr As WAVEHDR, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutPrepareHeader Lib "winmm" (ByVal hWaveOut As LongPtr, lpWaveOutHdr As WAVEHDR, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInUnprepareHeader Lib "winmm" (ByVal hWaveIn As LongPtr, lpWaveInHdr As WAVEHDR, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutUnprepareHeader Lib "winmm" (ByVal hWaveOut As LongPtr, lpWaveOutHdr As WAVEHDR, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutWrite Lib "winmm" (ByVal hWaveOut As LongPtr, lpWaveOutHdr As WAVEHDR, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutPause Lib "winmm" (ByVal hWaveOut As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutRestart Lib "winmm" (ByVal hWaveOut As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutReset Lib "winmm" (ByVal hWaveOut As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutBreakLoop Lib "winmm" (ByVal hWaveOut As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutGetPosition Lib "winmm" (ByVal hWaveOut As LongPtr, lpInfo As MMTIME, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutGetPitch Lib "winmm" (ByVal hWaveOut As LongPtr, lpdwPitch As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutSetPitch Lib "winmm" (ByVal hWaveOut As LongPtr, ByVal dwPitch As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutGetPlaybackRate Lib "winmm" (ByVal hWaveOut As LongPtr, lpdwRate As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutSetPlaybackRate Lib "winmm" (ByVal hWaveOut As LongPtr, ByVal dwRate As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutGetID Lib "winmm" (ByVal hWaveOut As LongPtr, lpuDeviceID As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInMessage Lib "winmm" (ByVal hWaveIn As LongPtr, ByVal msg As WAV_DRV_MSGS, ByVal dw1 As LongPtr, ByVal dw2 As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveOutMessage Lib "winmm" (ByVal hWaveOut As LongPtr, ByVal msg As WAV_DRV_MSGS, ByVal dw1 As LongPtr, ByVal dw2 As LongPtr) As MMGeneralErrorCodes

Public Declare PtrSafe Function waveInAddBuffer Lib "winmm" (ByVal hWaveIn As LongPtr, lpWaveInHdr As WAVEHDR, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInStart Lib "winmm" (ByVal hWaveIn As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInStop Lib "winmm" (ByVal hWaveIn As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInReset Lib "winmm" (ByVal hWaveIn As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInGetPosition Lib "winmm" (ByVal hWaveIn As LongPtr, lpInfo As MMTIME, ByVal uSize As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function waveInGetID Lib "winmm" (ByVal hWaveIn As LongPtr, lpuDeviceID As Long) As MMGeneralErrorCodes
#End Region

'Complete
#Region "winmm_mixer"
Public Const MIXER_SHORT_NAME_CHARS  = 16
Public Const MIXER_LONG_NAME_CHARS  = 64

Public Enum MIXERR
    MIXERR_INVALLINE = (MIXERR_BASE + 0)
    MIXERR_INVALCONTROL = (MIXERR_BASE + 1)
    MIXERR_INVALVALUE = (MIXERR_BASE + 2)
    MIXERR_LASTERROR = (MIXERR_BASE + 2)
End Enum

Public Enum MIXER_OBJECTS
    MIXER_OBJECTF_HANDLE = &H80000000
    MIXER_OBJECTF_MIXER = &H00000000
    MIXER_OBJECTF_HMIXER = (MIXER_OBJECTF_HANDLE Or MIXER_OBJECTF_MIXER)
    MIXER_OBJECTF_WAVEOUT = &H10000000
    MIXER_OBJECTF_HWAVEOUT = (MIXER_OBJECTF_HANDLE Or MIXER_OBJECTF_WAVEOUT)
    MIXER_OBJECTF_WAVEIN = &H20000000
    MIXER_OBJECTF_HWAVEIN = (MIXER_OBJECTF_HANDLE Or MIXER_OBJECTF_WAVEIN)
    MIXER_OBJECTF_MIDIOUT = &H30000000
    MIXER_OBJECTF_HMIDIOUT = (MIXER_OBJECTF_HANDLE Or MIXER_OBJECTF_MIDIOUT)
    MIXER_OBJECTF_MIDIIN = &H40000000
    MIXER_OBJECTF_HMIDIIN = (MIXER_OBJECTF_HANDLE Or MIXER_OBJECTF_MIDIIN)
    MIXER_OBJECTF_AUX = &H50000000
End Enum

Public Type MIXERCAPSA
    wMid As Integer ' /* manufacturer id */
    wPid As Integer ' /* product id */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte ' /* product name */
    fdwSupport As Long ' /* misc. support bits */
    cDestinations As Long ' /* count of destinations */
End Type
Public Type MIXERCAPSW
    wMid As Integer ' /* manufacturer id */
    wPid As Integer ' /* product id */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name */
    fdwSupport As Long ' /* misc. support bits */
    cDestinations As Long ' /* count of destinations */
End Type
Public Type MIXERCAPS
    wMid As Integer ' /* manufacturer id */
    wPid As Integer ' /* product id */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name */
    fdwSupport As Long ' /* misc. support bits */
    cDestinations As Long ' /* count of destinations */
End Type

Public Type MIXERCAPS2A
    wMid As Integer ' /* manufacturer id */
    wPid As Integer ' /* product id */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte ' /* product name */
    fdwSupport As Long ' /* misc. support bits */
    cDestinations As Long ' /* count of destinations */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type
Public Type MIXERCAPS2W
    wMid As Integer ' /* manufacturer id */
    wPid As Integer ' /* product id */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name */
    fdwSupport As Long ' /* misc. support bits */
    cDestinations As Long ' /* count of destinations */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type
Public Type MIXERCAPS2
    wMid As Integer ' /* manufacturer id */
    wPid As Integer ' /* product id */
    vDriverVersion As Long ' /* version of the driver */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer ' /* product name */
    fdwSupport As Long ' /* misc. support bits */
    cDestinations As Long ' /* count of destinations */
    ManufacturerGuid As UUID ' /* for extensible MID mapping */
    ProductGuid As UUID ' /* for extensible PID mapping */
    NameGuid As UUID ' /* for name lookup in registry */
End Type

Public Enum MIXERLINE_LINE
    MIXERLINE_LINEF_ACTIVE = &H00000001
    MIXERLINE_LINEF_DISCONNECTED = &H00008000&
    MIXERLINE_LINEF_SOURCE = &H80000000
End Enum

Public Enum MIXERLINE_TARGETTYPE
    MIXERLINE_TARGETTYPE_UNDEFINED = 0
    MIXERLINE_TARGETTYPE_WAVEOUT = 1
    MIXERLINE_TARGETTYPE_WAVEIN = 2
    MIXERLINE_TARGETTYPE_MIDIOUT = 3
    MIXERLINE_TARGETTYPE_MIDIIN = 4
    MIXERLINE_TARGETTYPE_AUX = 5
End Enum

Public Enum MIXERLINE_COMPONENTTYPE
    MIXERLINE_COMPONENTTYPE_DST_FIRST = &H00000000
    MIXERLINE_COMPONENTTYPE_DST_UNDEFINED = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 0)
    MIXERLINE_COMPONENTTYPE_DST_DIGITAL = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 1)
    MIXERLINE_COMPONENTTYPE_DST_LINE = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 2)
    MIXERLINE_COMPONENTTYPE_DST_MONITOR = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 3)
    MIXERLINE_COMPONENTTYPE_DST_SPEAKERS = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 4)
    MIXERLINE_COMPONENTTYPE_DST_HEADPHONES = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 5)
    MIXERLINE_COMPONENTTYPE_DST_TELEPHONE = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 6)
    MIXERLINE_COMPONENTTYPE_DST_WAVEIN = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 7)
    MIXERLINE_COMPONENTTYPE_DST_VOICEIN = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 8)
    MIXERLINE_COMPONENTTYPE_DST_LAST = (MIXERLINE_COMPONENTTYPE_DST_FIRST + 8)
    MIXERLINE_COMPONENTTYPE_SRC_FIRST = &H00001000
    MIXERLINE_COMPONENTTYPE_SRC_UNDEFINED = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 0)
    MIXERLINE_COMPONENTTYPE_SRC_DIGITAL = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 1)
    MIXERLINE_COMPONENTTYPE_SRC_LINE = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 2)
    MIXERLINE_COMPONENTTYPE_SRC_MICROPHONE = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 3)
    MIXERLINE_COMPONENTTYPE_SRC_SYNTHESIZER = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 4)
    MIXERLINE_COMPONENTTYPE_SRC_COMPACTDISC = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 5)
    MIXERLINE_COMPONENTTYPE_SRC_TELEPHONE = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 6)
    MIXERLINE_COMPONENTTYPE_SRC_PCSPEAKER = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 7)
    MIXERLINE_COMPONENTTYPE_SRC_WAVEOUT = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 8)
    MIXERLINE_COMPONENTTYPE_SRC_AUXILIARY = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 9)
    MIXERLINE_COMPONENTTYPE_SRC_ANALOG = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 10)
    MIXERLINE_COMPONENTTYPE_SRC_LAST = (MIXERLINE_COMPONENTTYPE_SRC_FIRST + 10)
End Enum

Private Type MLTargetA
    dwType As Long '   /* MIXERLINE_TARGETTYPE_xxxx */
    dwDeviceID As Long '      /* target device ID of device type */
    wMid As Integer '  /* of target device */
    wPid As Integer '   /*      " */
    vDriverVersion As Long '  /*      " */
    szPname(0 To (MAXPNAMELEN - 1)) As Byte '  /*      " */
End Type
Private Type MLTargetW
    dwType As MIXERLINE_TARGETTYPE '   /* MIXERLINE_TARGETTYPE_xxxx */
    dwDeviceID As Long '      /* target device ID of device type */
    wMid As Integer '  /* of target device */
    wPid As Integer '   /*      " */
    vDriverVersion As Long '  /*      " */
    szPname(0 To (MAXPNAMELEN - 1)) As Integer '  /*      " */
End Type
[PackingAlignment(1)]
Public Type MIXERLINEA
    cbStruct As Long ' /* size of MIXERLINE structure */
    dwDestination As Long ' /* zero based destination index */
    dwSource As Long ' /* zero based source index (if source) */
    dwLineID As Long ' /* unique line id for mixer device */
    fdwLine As MIXERLINE_LINE ' /* state/information about line */
    dwUser As LongPtr ' /* driver specific information */
    dwComponentType As MIXERLINE_COMPONENTTYPE ' /* component type line connects to */
    cChannels As Long ' /* number of channels line supports */
    cConnections As Long ' /* number of connections [possible] */
    cControls As Long ' /* number of controls at this line */
    szShortName(0 To (MIXER_SHORT_NAME_CHARS - 1)) As Byte
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Byte
    Target As MLTargetA
End Type
[PackingAlignment(1)]
Public Type MIXERLINEW
    cbStruct As Long ' /* size of MIXERLINE structure */
    dwDestination As Long ' /* zero based destination index */
    dwSource As Long ' /* zero based source index (if source) */
    dwLineID As Long ' /* unique line id for mixer device */
    fdwLine As MIXERLINE_LINE ' /* state/information about line */
    dwUser As LongPtr ' /* driver specific information */
    dwComponentType As MIXERLINE_COMPONENTTYPE ' /* component type line connects to */
    cChannels As Long ' /* number of channels line supports */
    cConnections As Long ' /* number of connections [possible] */
    cControls As Long ' /* number of controls at this line */
    szShortName(0 To (MIXER_SHORT_NAME_CHARS - 1)) As Integer
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Integer
    Target As MLTargetW
End Type
[PackingAlignment(1)]
Public Type MIXERLINE
    cbStruct As Long ' /* size of MIXERLINE structure */
    dwDestination As Long ' /* zero based destination index */
    dwSource As Long ' /* zero based source index (if source) */
    dwLineID As Long ' /* unique line id for mixer device */
    fdwLine As MIXERLINE_LINE ' /* state/information about line */
    dwUser As LongPtr ' /* driver specific information */
    dwComponentType As MIXERLINE_COMPONENTTYPE ' /* component type line connects to */
    cChannels As Long ' /* number of channels line supports */
    cConnections As Long ' /* number of connections [possible] */
    cControls As Long ' /* number of controls at this line */
    szShortName(0 To (MIXER_SHORT_NAME_CHARS - 1)) As Integer
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Integer
    Target As MLTargetW
End Type

Public Enum MIXER_GLIO_FLAGS
    MIXER_GETLINEINFOF_DESTINATION = &H00000000
    MIXER_GETLINEINFOF_SOURCE = &H00000001
    MIXER_GETLINEINFOF_LINEID = &H00000002
    MIXER_GETLINEINFOF_COMPONENTTYPE = &H00000003
    MIXER_GETLINEINFOF_TARGETTYPE = &H00000004
    MIXER_GETLINEINFOF_QUERYMASK = &H0000000F
End Enum

Public Enum MIXER_CONTROLF
    MIXERCONTROL_CONTROLF_UNIFORM = &H00000001
    MIXERCONTROL_CONTROLF_MULTIPLE = &H00000002
    MIXERCONTROL_CONTROLF_DISABLED = &H80000000
End Enum

Public Enum MIXER_CT_BLOCKS
    MIXERCONTROL_CT_CLASS_MASK = &HF0000000
    MIXERCONTROL_CT_CLASS_CUSTOM = &H00000000
    MIXERCONTROL_CT_CLASS_METER = &H10000000
    MIXERCONTROL_CT_CLASS_SWITCH = &H20000000
    MIXERCONTROL_CT_CLASS_NUMBER = &H30000000
    MIXERCONTROL_CT_CLASS_SLIDER = &H40000000
    MIXERCONTROL_CT_CLASS_FADER = &H50000000
    MIXERCONTROL_CT_CLASS_TIME = &H60000000
    MIXERCONTROL_CT_CLASS_LIST = &H70000000
    MIXERCONTROL_CT_SUBCLASS_MASK = &H0F000000
    MIXERCONTROL_CT_SC_SWITCH_BOOLEAN = &H00000000
    MIXERCONTROL_CT_SC_SWITCH_BUTTON = &H01000000
    MIXERCONTROL_CT_SC_METER_POLLED = &H00000000
    MIXERCONTROL_CT_SC_TIME_MICROSECS = &H00000000
    MIXERCONTROL_CT_SC_TIME_MILLISECS = &H01000000
    MIXERCONTROL_CT_SC_LIST_SINGLE = &H00000000
    MIXERCONTROL_CT_SC_LIST_MULTIPLE = &H01000000
    MIXERCONTROL_CT_UNITS_MASK = &H00FF0000
    MIXERCONTROL_CT_UNITS_CUSTOM = &H00000000
    MIXERCONTROL_CT_UNITS_BOOLEAN = &H00010000
    MIXERCONTROL_CT_UNITS_SIGNED = &H00020000
    MIXERCONTROL_CT_UNITS_UNSIGNED = &H00030000
    MIXERCONTROL_CT_UNITS_DECIBELS = &H00040000 /* in 10ths */
    MIXERCONTROL_CT_UNITS_PERCENT = &H00050000 /* in 10ths */
End Enum
Public Enum MIXER_CONTROLTYPE
    MIXERCONTROL_CONTROLTYPE_CUSTOM = (MIXERCONTROL_CT_CLASS_CUSTOM Or MIXERCONTROL_CT_UNITS_CUSTOM)
    MIXERCONTROL_CONTROLTYPE_BOOLEANMETER = (MIXERCONTROL_CT_CLASS_METER Or MIXERCONTROL_CT_SC_METER_POLLED Or MIXERCONTROL_CT_UNITS_BOOLEAN)
    MIXERCONTROL_CONTROLTYPE_SIGNEDMETER = (MIXERCONTROL_CT_CLASS_METER Or MIXERCONTROL_CT_SC_METER_POLLED Or MIXERCONTROL_CT_UNITS_SIGNED)
    MIXERCONTROL_CONTROLTYPE_PEAKMETER = (MIXERCONTROL_CONTROLTYPE_SIGNEDMETER + 1)
    MIXERCONTROL_CONTROLTYPE_UNSIGNEDMETER = (MIXERCONTROL_CT_CLASS_METER Or MIXERCONTROL_CT_SC_METER_POLLED Or MIXERCONTROL_CT_UNITS_UNSIGNED)
    MIXERCONTROL_CONTROLTYPE_BOOLEAN = (MIXERCONTROL_CT_CLASS_SWITCH Or MIXERCONTROL_CT_SC_SWITCH_BOOLEAN Or MIXERCONTROL_CT_UNITS_BOOLEAN)
    MIXERCONTROL_CONTROLTYPE_ONOFF = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 1)
    MIXERCONTROL_CONTROLTYPE_MUTE = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 2)
    MIXERCONTROL_CONTROLTYPE_MONO = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 3)
    MIXERCONTROL_CONTROLTYPE_LOUDNESS = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 4)
    MIXERCONTROL_CONTROLTYPE_STEREOENH = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + 5)
    MIXERCONTROL_CONTROLTYPE_BASS_BOOST = (MIXERCONTROL_CONTROLTYPE_BOOLEAN + &H00002277)
    MIXERCONTROL_CONTROLTYPE_BUTTON = (MIXERCONTROL_CT_CLASS_SWITCH Or MIXERCONTROL_CT_SC_SWITCH_BUTTON Or MIXERCONTROL_CT_UNITS_BOOLEAN)
    MIXERCONTROL_CONTROLTYPE_DECIBELS = (MIXERCONTROL_CT_CLASS_NUMBER Or MIXERCONTROL_CT_UNITS_DECIBELS)
    MIXERCONTROL_CONTROLTYPE_SIGNED = (MIXERCONTROL_CT_CLASS_NUMBER Or MIXERCONTROL_CT_UNITS_SIGNED)
    MIXERCONTROL_CONTROLTYPE_UNSIGNED = (MIXERCONTROL_CT_CLASS_NUMBER Or MIXERCONTROL_CT_UNITS_UNSIGNED)
    MIXERCONTROL_CONTROLTYPE_PERCENT = (MIXERCONTROL_CT_CLASS_NUMBER Or MIXERCONTROL_CT_UNITS_PERCENT)
    MIXERCONTROL_CONTROLTYPE_SLIDER = (MIXERCONTROL_CT_CLASS_SLIDER Or MIXERCONTROL_CT_UNITS_SIGNED)
    MIXERCONTROL_CONTROLTYPE_PAN = (MIXERCONTROL_CONTROLTYPE_SLIDER + 1)
    MIXERCONTROL_CONTROLTYPE_QSOUNDPAN = (MIXERCONTROL_CONTROLTYPE_SLIDER + 2)
    MIXERCONTROL_CONTROLTYPE_FADER = (MIXERCONTROL_CT_CLASS_FADER Or MIXERCONTROL_CT_UNITS_UNSIGNED)
    MIXERCONTROL_CONTROLTYPE_VOLUME = (MIXERCONTROL_CONTROLTYPE_FADER + 1)
    MIXERCONTROL_CONTROLTYPE_BASS = (MIXERCONTROL_CONTROLTYPE_FADER + 2)
    MIXERCONTROL_CONTROLTYPE_TREBLE = (MIXERCONTROL_CONTROLTYPE_FADER + 3)
    MIXERCONTROL_CONTROLTYPE_EQUALIZER = (MIXERCONTROL_CONTROLTYPE_FADER + 4)
    MIXERCONTROL_CONTROLTYPE_SINGLESELECT = (MIXERCONTROL_CT_CLASS_LIST Or MIXERCONTROL_CT_SC_LIST_SINGLE Or MIXERCONTROL_CT_UNITS_BOOLEAN)
    MIXERCONTROL_CONTROLTYPE_MUX = (MIXERCONTROL_CONTROLTYPE_SINGLESELECT + 1)
    MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT = (MIXERCONTROL_CT_CLASS_LIST Or MIXERCONTROL_CT_SC_LIST_MULTIPLE Or MIXERCONTROL_CT_UNITS_BOOLEAN)
    MIXERCONTROL_CONTROLTYPE_MIXER = (MIXERCONTROL_CONTROLTYPE_MULTIPLESELECT + 1)
    MIXERCONTROL_CONTROLTYPE_MICROTIME = (MIXERCONTROL_CT_CLASS_TIME Or MIXERCONTROL_CT_SC_TIME_MICROSECS Or MIXERCONTROL_CT_UNITS_UNSIGNED)
    MIXERCONTROL_CONTROLTYPE_MILLITIME = (MIXERCONTROL_CT_CLASS_TIME Or MIXERCONTROL_CT_SC_TIME_MILLISECS Or MIXERCONTROL_CT_UNITS_UNSIGNED)
End Enum


Private Type MLIBounds
	ldwMinimum As Long
    ldwMaximum As Long
    dwReserved(3) As Long
End Type
Private Type MLIMetrics
	cStepsOrCbCustomData As Long
    dwReserved(4) As Long
End Type
Public Type MIXERCONTROLA
    cbStruct As Long ' /* size in bytes of MIXERCONTROL */
    dwControlID As Long ' /* unique control id for mixer device */
    dwControlType As MIXER_CONTROLTYPE ' /* MIXERCONTROL_CONTROLTYPE_xxx */
    fdwControl As MIXER_CONTROLF ' /* MIXERCONTROL_CONTROLF_xxx */
    cMultipleItems As Long ' /* if MIXERCONTROL_CONTROLF_MULTIPLE set */
    szShortName(0 To (MIXER_SHORT_NAME_CHARS - 1)) As Byte
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Byte
    Bounds As MLIBounds
    Metrics As MLIMetrics
End Type
Public Type MIXERCONTROLW
    cbStruct As Long ' /* size in bytes of MIXERCONTROL */
    dwControlID As Long ' /* unique control id for mixer device */
    dwControlType As MIXER_CONTROLTYPE ' /* MIXERCONTROL_CONTROLTYPE_xxx */
    fdwControl As MIXER_CONTROLF ' /* MIXERCONTROL_CONTROLF_xxx */
    cMultipleItems As Long ' /* if MIXERCONTROL_CONTROLF_MULTIPLE set */
    szShortName(0 To (MIXER_SHORT_NAME_CHARS - 1)) As Integer
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Integer
    Bounds As MLIBounds
    Metrics As MLIMetrics
End Type
Public Type MIXERCONTROL
    cbStruct As Long ' /* size in bytes of MIXERCONTROL */
    dwControlID As Long ' /* unique control id for mixer device */
    dwControlType As MIXER_CONTROLTYPE ' /* MIXERCONTROL_CONTROLTYPE_xxx */
    fdwControl As MIXER_CONTROLF ' /* MIXERCONTROL_CONTROLF_xxx */
    cMultipleItems As Long ' /* if MIXERCONTROL_CONTROLF_MULTIPLE set */
    szShortName(0 To (MIXER_SHORT_NAME_CHARS - 1)) As Integer
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Integer
    Bounds As MLIBounds
    Metrics As MLIMetrics
End Type

[PackingAlignment(1)]
Public Type MIXERLINECONTROLSA
    cbStruct As Long ' /* size in bytes of MIXERLINECONTROLS */
    dwLineID As Long ' /* line id (from MIXERLINE.dwLineID) */
    'union {
    '    DWORD       dwControlID;    // /* MIXER_GETLINECONTROLSF_ONEBYID */
    dwControlTypeOrID As MIXER_CONTROLTYPE ' /* MIXER_GETLINECONTROLSF_ONEBYTYPE */
    ' } DUMMYUNIONNAME;
    cControls As Long ' /* count of controls pmxctrl points to */
    cbmxctrl As Long ' /* size in bytes of _one_ MIXERCONTROL */
    pamxctrl As LongPtr ' /* pointer to first MIXERCONTROL array */
End Type
[PackingAlignment(1)]
Public Type MIXERLINECONTROLSW
    cbStruct As Long ' /* size in bytes of MIXERLINECONTROLS */
    dwLineID As Long ' /* line id (from MIXERLINE.dwLineID) */
    'union {
    '    DWORD       dwControlID;    // /* MIXER_GETLINECONTROLSF_ONEBYID */
    dwControlTypeOrID As MIXER_CONTROLTYPE ' /* MIXER_GETLINECONTROLSF_ONEBYTYPE */
    ' } DUMMYUNIONNAME;
    cControls As Long ' /* count of controls pmxctrl points to */
    cbmxctrl As Long ' /* size in bytes of _one_ MIXERCONTROL */
    pamxctrl As LongPtr ' /* pointer to first MIXERCONTROL array */
End Type
[PackingAlignment(1)]
Public Type MIXERLINECONTROLS
    cbStruct As Long ' /* size in bytes of MIXERLINECONTROLS */
    dwLineID As Long ' /* line id (from MIXERLINE.dwLineID) */
    'union {
    '    DWORD       dwControlID;    // /* MIXER_GETLINECONTROLSF_ONEBYID */
    dwControlTypeOrID As MIXER_CONTROLTYPE ' /* MIXER_GETLINECONTROLSF_ONEBYTYPE */
    ' } DUMMYUNIONNAME;
    cControls As Long ' /* count of controls pmxctrl points to */
    cbmxctrl As Long ' /* size in bytes of _one_ MIXERCONTROL */
    pamxctrl As LongPtr ' /* pointer to first MIXERCONTROL array */
End Type


Public Enum MIXER_GLC_FLAGS
    MIXER_GETLINECONTROLSF_ALL = &H00000000
    MIXER_GETLINECONTROLSF_ONEBYID = &H00000001
    MIXER_GETLINECONTROLSF_ONEBYTYPE = &H00000002
    MIXER_GETLINECONTROLSF_QUERYMASK = &H0000000F
End Enum

[PackingAlignment(1)]
Public Type MIXERCONTROLDETAILS
    cbStruct As Long ' /* size in bytes of MIXERCONTROLDETAILS */
    dwControlID As Long ' /* control id to get/set details on */
    cChannels As Long ' /* number of channels in paDetails array */
     ' /* for MIXER_SETCONTROLDETAILSF_CUSTOM */
    cMultipleItemsOrhwndOwner As LongPtr' /* if _MULTIPLE, the number of items per channel */
    cbDetails As Long ' /* size of _one_ details_XX struct */
    paDetails As LongPtr ' /* pointer to array of details_XX structs */
End Type

Public Type MIXERCONTROLDETAILS_LISTTEXTA
    dwParam1 As Long
    dwParam2 As Long
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Byte
End Type
Public Type MIXERCONTROLDETAILS_LISTTEXTW
    dwParam1 As Long
    dwParam2 As Long
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Integer
End Type
Public Type MIXERCONTROLDETAILS_LISTTEXT
    dwParam1 As Long
    dwParam2 As Long
    szName(0 To (MIXER_LONG_NAME_CHARS - 1)) As Integer
End Type

Public Type MIXERCONTROLDETAILS_BOOLEAN
    fValue As Long
End Type
Public Type MIXERCONTROLDETAILS_SIGNED
    lValue As Long
End Type
Public Type MIXERCONTROLDETAILS_UNSIGNED
    dwValue As Long
End Type

Public Enum MIXER_GCD_FLAGS
    MIXER_GETCONTROLDETAILSF_VALUE = &H00000000
    MIXER_GETCONTROLDETAILSF_LISTTEXT = &H00000001
    MIXER_GETCONTROLDETAILSF_QUERYMASK = &H0000000F
End Enum
Public Enum MIXER_SCD_FLAGS
    MIXER_SETCONTROLDETAILSF_VALUE = &H00000000
    MIXER_SETCONTROLDETAILSF_CUSTOM = &H00000001
    MIXER_SETCONTROLDETAILSF_QUERYMASK = &H0000000F
End Enum

Public Declare PtrSafe Function mixerGetNumDevs Lib "winmm.dll" () As Long
Public Declare PtrSafe Function mixerGetDevCapsA Lib "winmm.dll" (ByVal uMxId As LongPtr, pmxcaps As MIXERCAPSA, ByVal cbmxcaps As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetDevCapsW Lib "winmm.dll" (ByVal uMxId As LongPtr, pmxcaps As MIXERCAPSW, ByVal cbmxcaps As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function mixerGetDevCaps Lib "winmm.dll" Alias "mixerGetDevCapsW" (ByVal uMxId As LongPtr, pmxcaps As MIXERCAPS, ByVal cbmxcaps As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerOpen Lib "winmm.dll" (phmx As LongPtr, ByVal uMxId As Long, ByVal dwCallback As LongPtr, ByVal dwInstance As LongPtr, ByVal fdwOpen As MIXER_OBJECTS) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerClose Lib "winmm.dll" (ByVal hmx As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerMessage Lib "winmm.dll" (ByVal hmx As LongPtr, ByVal uMsg As WAV_DRV_MSGS, ByVal dwParam1 As LongPtr, ByVal dwParam2 As LongPtr) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetLineInfoA Lib "winmm.dll" (ByVal hmxobj As LongPtr, pmxl As MIXERLINEA, [TypeHint(MIXER_OBJECTS, MIXER_GLIO_FLAGS)] ByVal fdwInfo As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetLineInfoW Lib "winmm.dll" (ByVal hmxobj As LongPtr, pmxl As MIXERLINEW, [TypeHint(MIXER_OBJECTS, MIXER_GLIO_FLAGS)] ByVal fdwInfo As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function mixerGetLineInfo Lib "winmm.dll" Alias "mixerGetLineInfoW" (ByVal hmxobj As LongPtr, pmxl As MIXERLINE, [TypeHint(MIXER_OBJECTS, MIXER_GLIO_FLAGS)] ByVal fdwInfo As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetID Lib "winmm.dll" (ByVal hmxobj As LongPtr, pumxID As Long, ByVal fdwId As MIXER_OBJECTS) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetLineControlsA Lib "winmm.dll" (ByVal hmxobj As LongPtr, pmxlc As MIXERLINECONTROLSA, ByVal fdwControls As MIXER_GLC_FLAGS) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetLineControlsW Lib "winmm.dll" (ByVal hmxobj As LongPtr, pmxlc As MIXERLINECONTROLSW, ByVal fdwControls As MIXER_GLC_FLAGS) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetLineControls Lib "winmm.dll" Alias "mixerGetLineControlsW" (ByVal hmxobj As LongPtr, pmxlc As MIXERLINECONTROLS, ByVal fdwControls As MIXER_GLC_FLAGS) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetControlDetailsA Lib "winmm.dll" (ByVal hmxobj As LongPtr, pmxcd As MIXERCONTROLDETAILS, [TypeHint(MIXER_GCD_FLAGS, MIXER_OBJECTS)] ByVal fdwDetails As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerGetControlDetailsW Lib "winmm.dll" (ByVal hmxobj As LongPtr, pmxcd As MIXERCONTROLDETAILS, [TypeHint(MIXER_GCD_FLAGS, MIXER_OBJECTS)] ByVal fdwDetails As Long) As MMGeneralErrorCodes
Public DeclareWide PtrSafe Function mixerGetControlDetails Lib "winmm.dll" Alias "mixerGetControlDetailsW" (ByVal hmxobj As LongPtr, pmxcd As MIXERCONTROLDETAILS, [TypeHint(MIXER_GCD_FLAGS, MIXER_OBJECTS)] ByVal fdwDetails As Long) As MMGeneralErrorCodes
Public Declare PtrSafe Function mixerSetControlDetails Lib "winmm.dll" (ByVal hmxobj As LongPtr, pmxcd As MIXERCONTROLDETAILS, [TypeHint(MIXER_SCD_FLAGS, MIXER_OBJECTS)] ByVal fdwDetails As Long) As MMGeneralErrorCodes

#End Region





Public Enum MMTimeType
	TIME_MS = &H0001 /* time in milliseconds */
	TIME_SAMPLES = &H0002 /* number of wave samples */
	TIME_BYTES = &H0004 /* current byte offset */
	TIME_SMPTE = &H0008 /* SMPTE time */
	TIME_MIDI = &H0010 /* MIDI time */
	TIME_TICKS = &H0020 /* Ticks within MIDI stream */
End Enum

[Description("u is an unsupported union")]
[PackingAlignment(1)]
Public Type MMTIME
	wType As Integer
    u(0 To 7) As Byte
End Type

Public Enum MMWindowMessages
	MM_JOY1MOVE = &H3A0 /* joystick */
	MM_JOY2MOVE = &H3A1
	MM_JOY1ZMOVE = &H3A2
	MM_JOY2ZMOVE = &H3A3
	MM_JOY1BUTTONDOWN = &H3B5
	MM_JOY2BUTTONDOWN = &H3B6
	MM_JOY1BUTTONUP = &H3B7
	MM_JOY2BUTTONUP = &H3B8
	MM_MCINOTIFY = &H3B9 /* MCI */
	MM_WOM_OPEN = &H3BB /* waveform output */
	MM_WOM_CLOSE = &H3BC
	MM_WOM_DONE = &H3BD
	MM_WIM_OPEN = &H3BE /* waveform input */
	MM_WIM_CLOSE = &H3BF
	MM_WIM_DATA = &H3C0
	MM_MIM_OPEN = &H3C1 /* MIDI input */
	MM_MIM_CLOSE = &H3C2
	MM_MIM_DATA = &H3C3
	MM_MIM_LONGDATA = &H3C4
	MM_MIM_ERROR = &H3C5
	MM_MIM_LONGERROR = &H3C6
	MM_MOM_OPEN = &H3C7 /* MIDI output */
	MM_MOM_CLOSE = &H3C8
	MM_MOM_DONE = &H3C9
	MM_DRVM_OPEN = &H3D0 /* installable drivers */
	MM_DRVM_CLOSE = &H3D1
	MM_DRVM_DATA = &H3D2
	MM_DRVM_ERROR = &H3D3
	MM_STREAM_OPEN = &H3D4
	MM_STREAM_CLOSE = &H3D5
	MM_STREAM_DONE = &H3D6
	MM_STREAM_ERROR = &H3D7
	MM_MOM_POSITIONCB = &H3CA /* Callback for MEVT_POSITIONCB */
	MM_MCISIGNAL = &H3CB
	MM_MIM_MOREDATA = &H3CC /* MIM_DONE w/ pending events */
	MM_MIXM_LINE_CHANGE = &H3D0 /* mixer line change notify */
	MM_MIXM_CONTROL_CHANGE = &H3D1 /* mixer control change notify */
End Enum

Public Const MMSYSERR_BASE  = 0
Public Const WAVERR_BASE  = 32
Public Const MIDIERR_BASE  = 64
Public Const TIMERR_BASE  = 96
Public Const JOYERR_BASE  = 160
Public Const MCIERR_BASE  = 256
Public Const MIXERR_BASE  = 1024
Public Const MCI_STRING_OFFSET  = 512
Public Const MCI_VD_OFFSET  = 1024
Public Const MCI_CD_OFFSET  = 1088
Public Const MCI_WAVE_OFFSET  = 1152
Public Const MCI_SEQ_OFFSET  = 1216

Public Enum MMGeneralErrorCodes
	MMSYSERR_NOERROR = 0 /* no error */
	MMSYSERR_ERROR = (MMSYSERR_BASE + 1) /* unspecified error */
	MMSYSERR_BADDEVICEID = (MMSYSERR_BASE + 2) /* device ID out of range */
	MMSYSERR_NOTENABLED = (MMSYSERR_BASE + 3) /* driver failed enable */
	MMSYSERR_ALLOCATED = (MMSYSERR_BASE + 4) /* device already allocated */
	MMSYSERR_INVALHANDLE = (MMSYSERR_BASE + 5) /* device handle is invalid */
	MMSYSERR_NODRIVER = (MMSYSERR_BASE + 6) /* no device driver present */
	MMSYSERR_NOMEM = (MMSYSERR_BASE + 7) /* memory allocation error */
	MMSYSERR_NOTSUPPORTED = (MMSYSERR_BASE + 8) /* function isn't supported */
	MMSYSERR_BADERRNUM = (MMSYSERR_BASE + 9) /* error value out of range */
	MMSYSERR_INVALFLAG = (MMSYSERR_BASE + 10) /* invalid flag passed */
	MMSYSERR_INVALPARAM = (MMSYSERR_BASE + 11) /* invalid parameter passed */
	MMSYSERR_HANDLEBUSY = (MMSYSERR_BASE + 12) /* handle being used */
                                                /* simultaneously on another */
                                                /* thread  = (eg callback) */
	MMSYSERR_INVALIDALIAS = (MMSYSERR_BASE + 13) /* specified alias not found */
	MMSYSERR_BADDB = (MMSYSERR_BASE + 14) /* bad registry database */
	MMSYSERR_KEYNOTFOUND = (MMSYSERR_BASE + 15) /* registry key not found */
	MMSYSERR_READERROR = (MMSYSERR_BASE + 16) /* registry read error */
	MMSYSERR_WRITEERROR = (MMSYSERR_BASE + 17) /* registry write error */
	MMSYSERR_DELETEERROR = (MMSYSERR_BASE + 18) /* registry delete error */
	MMSYSERR_VALNOTFOUND = (MMSYSERR_BASE + 19) /* registry value not found */
	MMSYSERR_NODRIVERCB = (MMSYSERR_BASE + 20) /* driver does not call DriverCallback */
	MMSYSERR_MOREDATA = (MMSYSERR_BASE + 21) /* more data to be returned */
	MMSYSERR_LASTERROR = (MMSYSERR_BASE + 21) /* last error in range */
End Enum

Public Enum MMDriverCallback
	CALLBACK_TYPEMASK = &H00070000 /* callback type mask */
	CALLBACK_NULL = &H00000000 /* no callback */
	CALLBACK_WINDOW = &H00010000 /* dwCallback is a HWND */
	CALLBACK_TASK = &H00020000 /* dwCallback is a HTASK */
	CALLBACK_FUNCTION = &H00030000 /* dwCallback is a FARPROC */
	
	CALLBACK_THREAD = (CALLBACK_TASK) /* thread ID replaces 16 bit task */
	CALLBACK_EVENT = &H00050000 /* dwCallback is an EVENT Handle */
End Enum




' #define MCI_MSF_MINUTE(msf)             ((BYTE)(msf))
' #define MCI_MSF_SECOND(msf)             ((BYTE)(((WORD)(msf)) >> 8))
' #define MCI_MSF_FRAME(msf)              ((BYTE)((msf)>>16))

' #define MCI_MAKE_MSF(m, s, f)           ((DWORD)(((BYTE)(m) | \
                                                  ' ((WORD)(s)<<8)) | \
                                                 ' (((DWORD)(BYTE)(f))<<16)))
Public Function MCI_MAKE_MSF(ByVal m As Long, ByVal s As Long, ByVal f As Long) As Long
    Return ((m) Or (s << 8) Or (f << 16))
End Function
' #define MCI_TMSF_TRACK(tmsf)            ((BYTE)(tmsf))
' #define MCI_TMSF_MINUTE(tmsf)           ((BYTE)(((WORD)(tmsf)) >> 8))

' #define MCI_TMSF_SECOND(tmsf)           ((BYTE)((tmsf)>>16))
' #define MCI_TMSF_FRAME(tmsf)            ((BYTE)((tmsf)>>24))

' #define MCI_MAKE_TMSF(t, m, s, f)       ((DWORD)(((BYTE)(t) | \
                                                  ' ((WORD)(m)<<8)) | \
                                                 ' (((DWORD)(BYTE)(s) | \
                                                   ' ((WORD)(f)<<8))<<16)))

' #define MCI_HMS_HOUR(hms)               ((BYTE)(hms))
' #define MCI_HMS_MINUTE(hms)             ((BYTE)(((WORD)(hms)) >> 8))
' #define MCI_HMS_SECOND(hms)             ((BYTE)((hms)>>16))

' #define MCI_MAKE_HMS(h, m, s)           ((DWORD)(((BYTE)(h) | \
                                                  ' ((WORD)(m)<<8)) | \
                                                 ' (((DWORD)(BYTE)(s))<<16)))




#End Region

#Region "winspool"
Public Const SPLREG_DEFAULT_SPOOL_DIRECTORY             = "DefaultSpoolDirectory"
Public Const SPLREG_PORT_THREAD_PRIORITY_DEFAULT        = "PortThreadPriorityDefault"
Public Const SPLREG_PORT_THREAD_PRIORITY                = "PortThreadPriority"
Public Const SPLREG_SCHEDULER_THREAD_PRIORITY_DEFAULT   = "SchedulerThreadPriorityDefault"
Public Const SPLREG_SCHEDULER_THREAD_PRIORITY           = "SchedulerThreadPriority"
Public Const SPLREG_BEEP_ENABLED                        = "BeepEnabled"
Public Const SPLREG_NET_POPUP                           = "NetPopup"
Public Const SPLREG_RETRY_POPUP                         = "RetryPopup"
Public Const SPLREG_NET_POPUP_TO_COMPUTER               = "NetPopupToComputer"
Public Const SPLREG_EVENT_LOG                           = "EventLog"
Public Const SPLREG_MAJOR_VERSION                       = "MajorVersion"
Public Const SPLREG_MINOR_VERSION                       = "MinorVersion"
Public Const SPLREG_ARCHITECTURE                        = "Architecture"
Public Const SPLREG_OS_VERSION                          = "OSVersion"
Public Const SPLREG_OS_VERSIONEX                        = "OSVersionEx"
Public Const SPLREG_DS_PRESENT                          = "DsPresent"
Public Const SPLREG_DS_PRESENT_FOR_USER                 = "DsPresentForUser"
Public Const SPLREG_REMOTE_FAX                          = "RemoteFax"
Public Const SPLREG_RESTART_JOB_ON_POOL_ERROR           = "RestartJobOnPoolError"
Public Const SPLREG_RESTART_JOB_ON_POOL_ENABLED         = "RestartJobOnPoolEnabled"
Public Const SPLREG_DNS_MACHINE_NAME                    = "DNSMachineName"

Public Const SPLDS_SPOOLER_KEY                       = "DsSpooler"
Public Const SPLDS_DRIVER_KEY                        = "DsDriver"
Public Const SPLDS_USER_KEY                          = "DsUser"


' DS Print-Queue properties

Public Const SPLDS_ASSET_NUMBER                      = "assetNumber"
Public Const SPLDS_BYTES_PER_MINUTE                  = "bytesPerMinute"
Public Const SPLDS_DESCRIPTION                       = "description"
Public Const SPLDS_DRIVER_NAME                       = "driverName"
Public Const SPLDS_DRIVER_VERSION                    = "driverVersion"
Public Const SPLDS_LOCATION                          = "location"
Public Const SPLDS_PORT_NAME                         = "portName"
Public Const SPLDS_PRINT_ATTRIBUTES                  = "printAttributes"
Public Const SPLDS_PRINT_BIN_NAMES                   = "printBinNames"
Public Const SPLDS_PRINT_COLLATE                     = "printCollate"
Public Const SPLDS_PRINT_COLOR                       = "printColor"
Public Const SPLDS_PRINT_DUPLEX_SUPPORTED            = "printDuplexSupported"
Public Const SPLDS_PRINT_END_TIME                    = "printEndTime"
Public Const SPLDS_PRINTER_CLASS                     = "printQueue"
Public Const SPLDS_PRINTER_NAME                      = "printerName"
Public Const SPLDS_PRINT_KEEP_PRINTED_JOBS           = "printKeepPrintedJobs"
Public Const SPLDS_PRINT_LANGUAGE                    = "printLanguage"
Public Const SPLDS_PRINT_MAC_ADDRESS                 = "printMACAddress"
Public Const SPLDS_PRINT_MAX_X_EXTENT                = "printMaxXExtent"
Public Const SPLDS_PRINT_MAX_Y_EXTENT                = "printMaxYExtent"
Public Const SPLDS_PRINT_MAX_RESOLUTION_SUPPORTED    = "printMaxResolutionSupported"
Public Const SPLDS_PRINT_MEDIA_READY                 = "printMediaReady"
Public Const SPLDS_PRINT_MEDIA_SUPPORTED             = "printMediaSupported"
Public Const SPLDS_PRINT_MEMORY                      = "printMemory"
Public Const SPLDS_PRINT_MIN_X_EXTENT                = "printMinXExtent"
Public Const SPLDS_PRINT_MIN_Y_EXTENT                = "printMinYExtent"
Public Const SPLDS_PRINT_NETWORK_ADDRESS             = "printNetworkAddress"
Public Const SPLDS_PRINT_NOTIFY                      = "printNotify"
Public Const SPLDS_PRINT_NUMBER_UP                   = "printNumberUp"
Public Const SPLDS_PRINT_ORIENTATIONS_SUPPORTED      = "printOrientationsSupported"
Public Const SPLDS_PRINT_OWNER                       = "printOwner"
Public Const SPLDS_PRINT_PAGES_PER_MINUTE            = "printPagesPerMinute"
Public Const SPLDS_PRINT_RATE                        = "printRate"
Public Const SPLDS_PRINT_RATE_UNIT                   = "printRateUnit"
Public Const SPLDS_PRINT_SEPARATOR_FILE              = "printSeparatorFile"
Public Const SPLDS_PRINT_SHARE_NAME                  = "printShareName"
Public Const SPLDS_PRINT_SPOOLING                    = "printSpooling"
Public Const SPLDS_PRINT_STAPLING_SUPPORTED          = "printStaplingSupported"
Public Const SPLDS_PRINT_START_TIME                  = "printStartTime"
Public Const SPLDS_PRINT_STATUS                      = "printStatus"
Public Const SPLDS_PRIORITY                          = "priority"
Public Const SPLDS_SERVER_NAME                       = "serverName"
Public Const SPLDS_SHORT_SERVER_NAME                 = "shortServerName"
Public Const SPLDS_UNC_NAME                          = "uNCName"
Public Const SPLDS_URL                               = "url"
Public Const SPLDS_FLAGS                             = "flags"
Public Const SPLDS_VERSION_NUMBER                    = "versionNumber"
Public Const SPLDS_PRINT_IPP_COMPRESSION_SUPPORTED   = "ippCompressionSupported"

/*
    -- Additional Print-Queue properties --

    These properties are not defined in the default Directory Services Schema,
    but should be used when extending the Schema so a consistent interface is maintained.

*/

Public Const SPLDS_PRINTER_NAME_ALIASES              = "printerNameAliases"      '// MULTI_SZ
Public Const SPLDS_PRINTER_LOCATIONS                 = "printerLocations"        '// MULTI_SZ
Public Const SPLDS_PRINTER_MODEL                     = "printerModel"            '/ / SZ



Public Enum PrinterChangeEvents
    PRINTER_CHANGE_ADD_PRINTER = &H00000001
    PRINTER_CHANGE_SET_PRINTER = &H00000002
    PRINTER_CHANGE_DELETE_PRINTER = &H00000004
    PRINTER_CHANGE_FAILED_CONNECTION_PRINTER = &H00000008
    PRINTER_CHANGE_PRINTER = &H000000FF
    PRINTER_CHANGE_ADD_JOB = &H00000100
    PRINTER_CHANGE_SET_JOB = &H00000200
    PRINTER_CHANGE_DELETE_JOB = &H00000400
    PRINTER_CHANGE_WRITE_JOB = &H00000800
    PRINTER_CHANGE_JOB = &H0000FF00&
    PRINTER_CHANGE_ADD_FORM = &H00010000
    PRINTER_CHANGE_SET_FORM = &H00020000
    PRINTER_CHANGE_DELETE_FORM = &H00040000
    PRINTER_CHANGE_FORM = &H00070000
    PRINTER_CHANGE_ADD_PORT = &H00100000
    PRINTER_CHANGE_CONFIGURE_PORT = &H00200000
    PRINTER_CHANGE_DELETE_PORT = &H00400000
    PRINTER_CHANGE_PORT = &H00700000
    PRINTER_CHANGE_ADD_PRINT_PROCESSOR = &H01000000
    PRINTER_CHANGE_DELETE_PRINT_PROCESSOR = &H04000000
    PRINTER_CHANGE_PRINT_PROCESSOR = &H07000000
' #if (NTDDI_VERSION >= NTDDI_WIN7)
    PRINTER_CHANGE_SERVER = &H08000000
' #endif
    PRINTER_CHANGE_ADD_PRINTER_DRIVER = &H10000000
    PRINTER_CHANGE_SET_PRINTER_DRIVER = &H20000000
    PRINTER_CHANGE_DELETE_PRINTER_DRIVER = &H40000000
    PRINTER_CHANGE_PRINTER_DRIVER = &H70000000
    PRINTER_CHANGE_TIMEOUT = &H80000000
' #if (NTDDI_VERSION >= NTDDI_WIN7)
    PRINTER_CHANGE_ALL = &H7F77FFFF
End Enum

Public Enum PrinterChangeNotifyType
    PRINTER_NOTIFY_TYPE = &H00
    JOB_NOTIFY_TYPE = &H01
    SERVER_NOTIFY_TYPE = &H02
End Enum
Public Enum PrinterNotifyFieldsPrinter
    PRINTER_NOTIFY_FIELD_SERVER_NAME = &H00
    PRINTER_NOTIFY_FIELD_PRINTER_NAME = &H01
    PRINTER_NOTIFY_FIELD_SHARE_NAME = &H02
    PRINTER_NOTIFY_FIELD_PORT_NAME = &H03
    PRINTER_NOTIFY_FIELD_DRIVER_NAME = &H04
    PRINTER_NOTIFY_FIELD_COMMENT = &H05
    PRINTER_NOTIFY_FIELD_LOCATION = &H06
    PRINTER_NOTIFY_FIELD_DEVMODE = &H07
    PRINTER_NOTIFY_FIELD_SEPFILE = &H08
    PRINTER_NOTIFY_FIELD_PRINT_PROCESSOR = &H09
    PRINTER_NOTIFY_FIELD_PARAMETERS = &H0A
    PRINTER_NOTIFY_FIELD_DATATYPE = &H0B
    PRINTER_NOTIFY_FIELD_SECURITY_DESCRIPTOR = &H0C
    PRINTER_NOTIFY_FIELD_ATTRIBUTES = &H0D
    PRINTER_NOTIFY_FIELD_PRIORITY = &H0E
    PRINTER_NOTIFY_FIELD_DEFAULT_PRIORITY = &H0F
    PRINTER_NOTIFY_FIELD_START_TIME = &H10
    PRINTER_NOTIFY_FIELD_UNTIL_TIME = &H11
    PRINTER_NOTIFY_FIELD_STATUS = &H12
    PRINTER_NOTIFY_FIELD_STATUS_STRING = &H13
    PRINTER_NOTIFY_FIELD_CJOBS = &H14
    PRINTER_NOTIFY_FIELD_AVERAGE_PPM = &H15
    PRINTER_NOTIFY_FIELD_TOTAL_PAGES = &H16
    PRINTER_NOTIFY_FIELD_PAGES_PRINTED = &H17
    PRINTER_NOTIFY_FIELD_TOTAL_BYTES = &H18
    PRINTER_NOTIFY_FIELD_BYTES_PRINTED = &H19
    PRINTER_NOTIFY_FIELD_OBJECT_GUID = &H1A
    '(NTDDI_VERSION  = >= NTDDI_VISTA)
    PRINTER_NOTIFY_FIELD_FRIENDLY_NAME = &H1B
    '(NTDDI_VERSION  = >= NTDDI_WIN8)
    PRINTER_NOTIFY_FIELD_BRANCH_OFFICE_PRINTING = &H1C
End Enum
Public Enum PrinterNotifyFieldsJob
    JOB_NOTIFY_FIELD_PRINTER_NAME = &H00
    JOB_NOTIFY_FIELD_MACHINE_NAME = &H01
    JOB_NOTIFY_FIELD_PORT_NAME = &H02
    JOB_NOTIFY_FIELD_USER_NAME = &H03
    JOB_NOTIFY_FIELD_NOTIFY_NAME = &H04
    JOB_NOTIFY_FIELD_DATATYPE = &H05
    JOB_NOTIFY_FIELD_PRINT_PROCESSOR = &H06
    JOB_NOTIFY_FIELD_PARAMETERS = &H07
    JOB_NOTIFY_FIELD_DRIVER_NAME = &H08
    JOB_NOTIFY_FIELD_DEVMODE = &H09
    JOB_NOTIFY_FIELD_STATUS = &H0A
    JOB_NOTIFY_FIELD_STATUS_STRING = &H0B
    JOB_NOTIFY_FIELD_SECURITY_DESCRIPTOR = &H0C
    JOB_NOTIFY_FIELD_DOCUMENT = &H0D
    JOB_NOTIFY_FIELD_PRIORITY = &H0E
    JOB_NOTIFY_FIELD_POSITION = &H0F
    JOB_NOTIFY_FIELD_SUBMITTED = &H10
    JOB_NOTIFY_FIELD_START_TIME = &H11
    JOB_NOTIFY_FIELD_UNTIL_TIME = &H12
    JOB_NOTIFY_FIELD_TIME = &H13
    JOB_NOTIFY_FIELD_TOTAL_PAGES = &H14
    JOB_NOTIFY_FIELD_PAGES_PRINTED = &H15
    JOB_NOTIFY_FIELD_TOTAL_BYTES = &H16
    JOB_NOTIFY_FIELD_BYTES_PRINTED = &H17
    JOB_NOTIFY_FIELD_REMOTE_JOB_ID = &H18
End Enum
Public Enum PrinterNotifyFieldsServer
    SERVER_NOTIFY_FIELD_PRINT_DRIVER_ISOLATION_GROUP = &H00
End Enum
Public Type PRINTER_NOTIFY_OPTIONS_TYPE
    /* [TypeHint(PrinterChangeNotifyType)] */ Type As Integer
    Reserved0 As Integer
    Reserved1 As Long
    Reserved2 As Long
    Count As Long
    pFields As LongPtr
End Type
Public Enum PrinterNotifyOptionsFlags
    PRINTER_NOTIFY_OPTIONS_REFRESH = &h01
End Enum

[Description("pTypes points to a PRINTER_NOTIFY_OPTIONS_TYPE")]
Public Type PRINTER_NOTIFY_OPTIONS
    Version As Long
    Flags As PrinterNotifyOptionsFlags
    Count As Long
    pTypes As LongPtr 'PPRINTER_NOTIFY_OPTIONS_TYPE
End Type

Public Enum PrinterChangeNotifyOptions
    PRINTER_NOTIFY_CATEGORY_ALL = &H001000
    PRINTER_NOTIFY_CATEGORY_3D = &H002000
End Enum

Public Enum PrinterNotifyInfoFlags
    PRINTER_NOTIFY_INFO_DISCARDED = &H1
End Enum

Public Type PRINTER_NOTIFY_INFO_DATA
    /* [TypeHint(PrinterChangeNotifyType)] */ Type As Integer
    /* [TypeHint(PrinterNotifyFieldsPrinter, PrinterNotifyFieldsJob)] */ Field As Integer
    Reserved As Long
    Id As Long
    #If Win64 Then
    NotifyData(11) As Byte
    #Else
    NotifyData(7) As Byte
    #End If
End Type

[Description("**WARNING** DO NOT USE DIRECTLY WITH API. You must obtain a pointer to this type, fill in the first 12 bytes, redim aData(Count), then fill in VarPtr(aData(0)) with the remaining Count * LenB(Of PRINTER_NOTIFY_INFO_DATA) bytes.")]
Public Type PRINTER_NOTIFY_INFO
    Version As Long
    Flags As PrinterNotifyInfoFlags
    Count As Long
    aData() As PRINTER_NOTIFY_INFO_DATA
End Type

Public Enum PrinterInfoFlags
    PRINTER_ENUM_DEFAULT = &H00000001
    PRINTER_ENUM_LOCAL = &H00000002
    PRINTER_ENUM_CONNECTIONS = &H00000004
    PRINTER_ENUM_FAVORITE = &H00000004
    PRINTER_ENUM_NAME = &H00000008
    PRINTER_ENUM_REMOTE = &H00000010
    PRINTER_ENUM_SHARED = &H00000020
    PRINTER_ENUM_NETWORK = &H00000040
    PRINTER_ENUM_EXPAND = &H00004000
    PRINTER_ENUM_CONTAINER = &H00008000&
    PRINTER_ENUM_ICONMASK = &H00ff0000
    PRINTER_ENUM_ICON1 = &H00010000
    PRINTER_ENUM_ICON2 = &H00020000
    PRINTER_ENUM_ICON3 = &H00040000
    PRINTER_ENUM_ICON4 = &H00080000
    PRINTER_ENUM_ICON5 = &H00100000
    PRINTER_ENUM_ICON6 = &H00200000
    PRINTER_ENUM_ICON7 = &H00400000
    PRINTER_ENUM_ICON8 = &H00800000
    PRINTER_ENUM_HIDE = &H01000000
    PRINTER_ENUM_CATEGORY_ALL = &H02000000
    PRINTER_ENUM_CATEGORY_3D = &H04000000
End Enum
Public Type PRINTER_INFO_1A
    Flags As PrinterInfoFlags
    pDescription As String
    pName As String
    pComment As String
End Type
Public Type PRINTER_INFO_1W
    Flags As PrinterInfoFlags
    pDescription As LongPtr
    pName As LongPtr
    pComment As LongPtr
End Type
'Alias PRINTER_INFO_1 As PRINTER_INFO_1W
Public Type PRINTER_INFO_1
    Flags As PrinterInfoFlags
    pDescription As LongPtr
    pName As LongPtr
    pComment As LongPtr
End Type

Public Enum PrinterAttributes
    PRINTER_ATTRIBUTE_QUEUED = &H00000001
    PRINTER_ATTRIBUTE_DIRECT = &H00000002
    PRINTER_ATTRIBUTE_DEFAULT = &H00000004
    PRINTER_ATTRIBUTE_SHARED = &H00000008
    PRINTER_ATTRIBUTE_NETWORK = &H00000010
    PRINTER_ATTRIBUTE_HIDDEN = &H00000020
    PRINTER_ATTRIBUTE_LOCAL = &H00000040
    PRINTER_ATTRIBUTE_ENABLE_DEVQ = &H00000080
    PRINTER_ATTRIBUTE_KEEPPRINTEDJOBS = &H00000100
    PRINTER_ATTRIBUTE_DO_COMPLETE_FIRST = &H00000200
    PRINTER_ATTRIBUTE_WORK_OFFLINE = &H00000400
    PRINTER_ATTRIBUTE_ENABLE_BIDI = &H00000800
    PRINTER_ATTRIBUTE_RAW_ONLY = &H00001000
    PRINTER_ATTRIBUTE_PUBLISHED = &H00002000
    PRINTER_ATTRIBUTE_FAX = &H00004000
'  The printer attribute pushed xxx bits below are used by the
'  pushing printer connection code to keep track of the type
'  of printer connection.  These bits are per user resources
'  hence the local print provider has no knowledge about these
'  bit and will not accepts them.  The remote print provider
'  is responsible for storeing and persisting these bits.
    PRINTER_ATTRIBUTE_PUSHED_USER = &H00020000
    PRINTER_ATTRIBUTE_PUSHED_MACHINE = &H00040000
    PRINTER_ATTRIBUTE_MACHINE = &H00080000
    PRINTER_ATTRIBUTE_FRIENDLY_NAME = &H00100000
'  If the redirected TS printer is installed with generic
'  TS printer driver (TSPRINT.dll) then this attribute is set
'  by the UMRDP service and passed on to the spooler
    PRINTER_ATTRIBUTE_TS_GENERIC_DRIVER = &H00200000
' #if (NTDDI_VERSION >= NTDDI_WINBLUE) // NTDDI_WINTHRESHOLD)
'  Defines a bit allowing a local queue to be installed as a
'  "per-user" queue that is only usable/enumerable by that user.
    PRINTER_ATTRIBUTE_PER_USER = &H00400000
'  Defines a bit indicating that a queue is an enterprise
'  cloud print queue.
    PRINTER_ATTRIBUTE_ENTERPRISE_CLOUD = &H00800000
End Enum
Public Enum PRINTER_STATUS_FLAGS
    PRINTER_STATUS_PAUSED = &H00000001
    PRINTER_STATUS_ERROR = &H00000002
    PRINTER_STATUS_PENDING_DELETION = &H00000004
    PRINTER_STATUS_PAPER_JAM = &H00000008
    PRINTER_STATUS_PAPER_OUT = &H00000010
    PRINTER_STATUS_MANUAL_FEED = &H00000020
    PRINTER_STATUS_PAPER_PROBLEM = &H00000040
    PRINTER_STATUS_OFFLINE = &H00000080
    PRINTER_STATUS_IO_ACTIVE = &H00000100
    PRINTER_STATUS_BUSY = &H00000200
    PRINTER_STATUS_PRINTING = &H00000400
    PRINTER_STATUS_OUTPUT_BIN_FULL = &H00000800
    PRINTER_STATUS_NOT_AVAILABLE = &H00001000
    PRINTER_STATUS_WAITING = &H00002000
    PRINTER_STATUS_PROCESSING = &H00004000
    PRINTER_STATUS_INITIALIZING = &H00008000&
    PRINTER_STATUS_WARMING_UP = &H00010000
    PRINTER_STATUS_TONER_LOW = &H00020000
    PRINTER_STATUS_NO_TONER = &H00040000
    PRINTER_STATUS_PAGE_PUNT = &H00080000
    PRINTER_STATUS_USER_INTERVENTION = &H00100000
    PRINTER_STATUS_OUT_OF_MEMORY = &H00200000
    PRINTER_STATUS_DOOR_OPEN = &H00400000
    PRINTER_STATUS_SERVER_UNKNOWN = &H00800000
    PRINTER_STATUS_POWER_SAVE = &H01000000
    PRINTER_STATUS_SERVER_OFFLINE = &H02000000
    PRINTER_STATUS_DRIVER_UPDATE_NEEDED = &H04000000
End Enum
Public Type PRINTER_INFO_2A
    pServerName As String
    pPrinterName As String
    pShareName As String
    pPortName As String
    pDriverName As String
    pComment As String
    pLocation As String
    pDevMode As LongPtr 'LPDEVMODEA
    pSepFile As String
    pPrintProcessor As String
    pDatatype As String
    pParameters As String
    pSecurityDescriptor As LongPtr 'PSECURITY_DESCRIPTOR
    Attributes As PrinterAttributes
    Priority As Long
    DefaultPriority As Long
    StartTime As Long
    UntilTime As Long
    Status As PRINTER_STATUS_FLAGS
    cJobs As Long
    AveragePPM As Long
End Type
Public Type PRINTER_INFO_2W
    pServerName As LongPtr
    pPrinterName As LongPtr
    pShareName As LongPtr
    pPortName As LongPtr
    pDriverName As LongPtr
    pComment As LongPtr
    pLocation As LongPtr
    pDevMode As LongPtr 'LPDEVMODEW
    pSepFile As LongPtr
    pPrintProcessor As LongPtr
    pDatatype As LongPtr
    pParameters As LongPtr
    pSecurityDescriptor As LongPtr 'PSECURITY_DESCRIPTOR
    Attributes As PrinterAttributes
    Priority As Long
    DefaultPriority As Long
    StartTime As Long
    UntilTime As Long
    Status As PRINTER_STATUS_FLAGS
    cJobs As Long
    AveragePPM As Long
End Type
'Alias PRINTER_INFO_2 As PRINTER_INFO_2W
Public Type PRINTER_INFO_2
    pServerName As LongPtr
    pPrinterName As LongPtr
    pShareName As LongPtr
    pPortName As LongPtr
    pDriverName As LongPtr
    pComment As LongPtr
    pLocation As LongPtr
    pDevMode As LongPtr 'LPDEVMODEW
    pSepFile As LongPtr
    pPrintProcessor As LongPtr
    pDatatype As LongPtr
    pParameters As LongPtr
    pSecurityDescriptor As LongPtr 'PSECURITY_DESCRIPTOR
    Attributes As PrinterAttributes
    Priority As Long
    DefaultPriority As Long
    StartTime As Long
    UntilTime As Long
    Status As PRINTER_STATUS_FLAGS
    cJobs As Long
    AveragePPM As Long
End Type

Public Type PRINTER_INFO_3
    pSecurityDescriptor As LongPtr ' PSECURITY_DESCRIPTOR
End Type

Public Type PRINTER_INFO_4A
    pPrinterName As String
    pServerName As String
    Attributes As PrinterAttributes
End Type
Public Type PRINTER_INFO_4W
    pPrinterName As LongPtr
    pServerName As LongPtr
    Attributes As PrinterAttributes
End Type
Public Type PRINTER_INFO_4
    pPrinterName As LongPtr
    pServerName As LongPtr
    Attributes As PrinterAttributes
End Type

Public Type PRINTER_INFO_5W
    pPrinterName As LongPtr
    pPortName As LongPtr
    Attributes As PrinterAttributes
    DeviceNotSelectedTimeout As Long
    TransmissionRetryTimeout As Long
End Type
Public Type PRINTER_INFO_5A
    pPrinterName As String
    pPortName As String
    Attributes As PrinterAttributes
    DeviceNotSelectedTimeout As Long
    TransmissionRetryTimeout As Long
End Type
Public Type PRINTER_INFO_5
    pPrinterName As LongPtr
    pPortName As LongPtr
    Attributes As PrinterAttributes
    DeviceNotSelectedTimeout As Long
    TransmissionRetryTimeout As Long
End Type

Public Type PRINTER_INFO_6
    dwStatus As PRINTER_STATUS_FLAGS
End Type

Public Enum PRINTER_DSPRINT_ACTIONS
    DSPRINT_PUBLISH = &H00000001
    DSPRINT_UPDATE = &H00000002
    DSPRINT_UNPUBLISH = &H00000004
    DSPRINT_REPUBLISH = &H00000008
    DSPRINT_PENDING = &H80000000
End Enum
Public Type PRINTER_INFO_7A
    pszObjectGUID As String
    dwAction As PRINTER_DSPRINT_ACTIONS
End Type
Public Type PRINTER_INFO_7W
    pszObjectGUID As LongPtr
    dwAction As PRINTER_DSPRINT_ACTIONS
End Type
Public Type PRINTER_INFO_7
    pszObjectGUID As LongPtr
    dwAction As PRINTER_DSPRINT_ACTIONS
End Type

[Description("This will point to either DEVMODEA or DEVMODE[W] depending on whether you use it in an A or W API.")]
Public Type PRINTER_INFO_8
    pDevMode As LongPtr 'PDEVMODEA or W
End Type
[Description("This will point to either DEVMODEA or DEVMODE[W] depending on whether you use it in an A or W API.")]
Public Type PRINTER_INFO_9
    pDevMode As LongPtr 'PDEVMODEA or W
End Type

Public Enum PRINT_JOB_STATUS
    JOB_STATUS_PAUSED = &H00000001
    JOB_STATUS_ERROR = &H00000002
    JOB_STATUS_DELETING = &H00000004
    JOB_STATUS_SPOOLING = &H00000008
    JOB_STATUS_PRINTING = &H00000010
    JOB_STATUS_OFFLINE = &H00000020
    JOB_STATUS_PAPEROUT = &H00000040
    JOB_STATUS_PRINTED = &H00000080
    JOB_STATUS_DELETED = &H00000100
    JOB_STATUS_BLOCKED_DEVQ = &H00000200
    JOB_STATUS_USER_INTERVENTION = &H00000400
    JOB_STATUS_RESTART = &H00000800
    JOB_STATUS_COMPLETE = &H00001000
' #if (NTDDI_VERSION >= NTDDI_VISTA)
    JOB_STATUS_RETAINED = &H00002000
    JOB_STATUS_RENDERING_LOCALLY = &H00004000
End Enum

Public Enum PRINT_JOB_CONTROL
    JOB_CONTROL_PAUSE = 1
    JOB_CONTROL_RESUME = 2
    JOB_CONTROL_CANCEL = 3
    JOB_CONTROL_RESTART = 4
    JOB_CONTROL_DELETE = 5
    JOB_CONTROL_SENT_TO_PRINTER = 6
    JOB_CONTROL_LAST_PAGE_EJECTED = 7
' #if (NTDDI_VERSION >= NTDDI_VISTA)
    JOB_CONTROL_RETAIN = 8
    JOB_CONTROL_RELEASE = 9
' #if (NTDDI_VERSION >= NTDDI_WIN10)
    JOB_CONTROL_SEND_TOAST = 10
End Enum

Public Enum PRINT_JOB_PRIORITY
    PRINT_JOB_NO_PRIORITY = 0
    PRINT_JOB_MAX_PRIORITY = 99
    PRINT_JOB_MIN_PRIORITY = 1
    PRINT_JOB_DEF_PRIORITY = 1
End Enum

Public Type JOB_INFO_1A
    JobId As Long
    pPrinterName As String
    pMachineName As String
    pUserName As String
    pDocument As String
    pDatatype As String
    pStatus As String
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    TotalPages As Long
    PagesPrinted As Long
    Submitted As SYSTEMTIME
End Type
Public Type JOB_INFO_1W
    JobId As Long
    pPrinterName As LongPtr
    pMachineName As LongPtr
    pUserName As LongPtr
    pDocument As LongPtr
    pDatatype As LongPtr
    pStatus As LongPtr
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    TotalPages As Long
    PagesPrinted As Long
    Submitted As SYSTEMTIME
End Type
Public Type JOB_INFO_1
    JobId As Long
    pPrinterName As LongPtr
    pMachineName As LongPtr
    pUserName As LongPtr
    pDocument As LongPtr
    pDatatype As LongPtr
    pStatus As LongPtr
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    TotalPages As Long
    PagesPrinted As Long
    Submitted As SYSTEMTIME
End Type

Public Type JOB_INFO_2A
    JobId As Long
    pPrinterName As String
    pMachineName As String
    pUserName As String
    pDocument As String
    pNotifyName As String
    pDatatype As String
    pPrintProcessor As String
    pParameters As String
    pDriverName As String
    pDevMode As LongPtr
    pStatus As String
    pSecurityDescriptor As LongPtr
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    StartTime As Long
    UntilTime As Long
    TotalPages As Long
    Size As Long
    Submitted As SYSTEMTIME ' Time the job was spooled
    Time As Long ' How many miliseconds the job has been printing
    PagesPrinted As Long
End Type
Public Type JOB_INFO_2W
    JobId As Long
    pPrinterName As LongPtr
    pMachineName As LongPtr
    pUserName As LongPtr
    pDocument As LongPtr
    pNotifyName As LongPtr
    pDatatype As LongPtr
    pPrintProcessor As LongPtr
    pParameters As LongPtr
    pDriverName As LongPtr
    pDevMode As LongPtr
    pStatus As LongPtr
    pSecurityDescriptor As LongPtr
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    StartTime As Long
    UntilTime As Long
    TotalPages As Long
    Size As Long
    Submitted As SYSTEMTIME ' Time the job was spooled
    Time As Long ' How many miliseconds the job has been printing
    PagesPrinted As Long
End Type
Public Type JOB_INFO_2
    JobId As Long
    pPrinterName As LongPtr
    pMachineName As LongPtr
    pUserName As LongPtr
    pDocument As LongPtr
    pNotifyName As LongPtr
    pDatatype As LongPtr
    pPrintProcessor As LongPtr
    pParameters As LongPtr
    pDriverName As LongPtr
    pDevMode As LongPtr
    pStatus As LongPtr
    pSecurityDescriptor As LongPtr
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    StartTime As Long
    UntilTime As Long
    TotalPages As Long
    Size As Long
    Submitted As SYSTEMTIME ' Time the job was spooled
    Time As Long ' How many miliseconds the job has been printing
    PagesPrinted As Long
End Type

Public Type JOB_INFO_3
    JobId As Long
    NextJobId As Long
    Reserved As Long
End Type

Public Type JOB_INFO_4A
    JobId As Long
    pPrinterName As String
    pMachineName As String
    pUserName As String
    pDocument As String
    pNotifyName As String
    pDatatype As String
    pPrintProcessor As String
    pParameters As String
    pDriverName As String
    pDevMode As LongPtr
    pStatus As String
    pSecurityDescriptor As LongPtr
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    StartTime As Long
    UntilTime As Long
    TotalPages As Long
    Size As Long
    Submitted As SYSTEMTIME
    Time As Long
    PagesPrinted As Long
    SizeHigh As Long
End Type
Public Type JOB_INFO_4W
    JobId As Long
    pPrinterName As LongPtr
    pMachineName As LongPtr
    pUserName As LongPtr
    pDocument As LongPtr
    pNotifyName As LongPtr
    pDatatype As LongPtr
    pPrintProcessor As LongPtr
    pParameters As LongPtr
    pDriverName As LongPtr
    pDevMode As LongPtr
    pStatus As LongPtr
    pSecurityDescriptor As LongPtr
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    StartTime As Long
    UntilTime As Long
    TotalPages As Long
    Size As Long
    Submitted As SYSTEMTIME
    Time As Long
    PagesPrinted As Long
    SizeHigh As Long
End Type
Public Type JOB_INFO_4
    JobId As Long
    pPrinterName As LongPtr
    pMachineName As LongPtr
    pUserName As LongPtr
    pDocument As LongPtr
    pNotifyName As LongPtr
    pDatatype As LongPtr
    pPrintProcessor As LongPtr
    pParameters As LongPtr
    pDriverName As LongPtr
    pDevMode As LongPtr
    pStatus As LongPtr
    pSecurityDescriptor As LongPtr
    Status As PRINT_JOB_STATUS
    Priority As PRINT_JOB_PRIORITY
    Position As Long
    StartTime As Long
    UntilTime As Long
    TotalPages As Long
    Size As Long
    Submitted As SYSTEMTIME
    Time As Long
    PagesPrinted As Long
    SizeHigh As Long
End Type

Public Enum PRINT_JOB_POSITION
    JOB_POSITION_UNSPECIFIED = 0
End Enum

Public Enum PRINTER_CONTROL_COMMANDS
    PRINTER_CONTROL_PAUSE = 1
    PRINTER_CONTROL_RESUME = 2
    PRINTER_CONTROL_PURGE = 3
    PRINTER_CONTROL_SET_STATUS = 4
End Enum

Public Enum DEVCAP_INDEX
    DC_FIELDS = 1
    DC_PAPERS = 2
    DC_PAPERSIZE = 3
    DC_MINEXTENT = 4
    DC_MAXEXTENT = 5
    DC_BINS = 6
    DC_DUPLEX = 7
    DC_SIZE = 8
    DC_EXTRA = 9
    DC_VERSION = 10
    DC_DRIVER = 11
    DC_BINNAMES = 12
    DC_ENUMRESOLUTIONS = 13
    DC_FILEDEPENDENCIES = 14
    DC_TRUETYPE = 15
    DC_PAPERNAMES = 16
    DC_ORIENTATION = 17
    DC_COPIES = 18
    DC_BINADJUST = 19
    DC_EMF_COMPLIANT = 20
    DC_DATATYPE_PRODUCED = 21
    DC_COLLATE = 22
    DC_MANUFACTURER = 23
    DC_MODEL = 24
    DC_PERSONALITY = 25
    DC_PRINTRATE = 26
    DC_PRINTRATEUNIT = 27
    DC_PRINTERMEM = 28
    DC_MEDIAREADY = 29
    DC_STAPLE = 30
    DC_PRINTRATEPPM = 31
    DC_COLORDEVICE = 32
    DC_NUP = 33
    DC_MEDIATYPENAMES = 34
    DC_MEDIATYPES = 35
End Enum
Public Enum DEVCAP_PRINTRATEUNIT
    PRINTRATEUNIT_PPM = 1
    PRINTRATEUNIT_CPS = 2
    PRINTRATEUNIT_LPM = 3
    PRINTRATEUNIT_IPM = 4
End Enum
Public Enum DEVCAP_TRUETYPE
    DCTT_BITMAP = &H0000001
    DCTT_DOWNLOAD = &H0000002
    DCTT_SUBDEV = &H0000004
    DCTT_DOWNLOAD_OUTLINE = &H0000008
End Enum
Public Enum DEVCAP_BINADJUST
    DCBA_FACEUPNONE = &H0000
    DCBA_FACEUPCENTER = &H0001
    DCBA_FACEUPLEFT = &H0002
    DCBA_FACEUPRIGHT = &H0003
    DCBA_FACEDOWNNONE = &H0100
    DCBA_FACEDOWNCENTER = &H0101
    DCBA_FACEDOWNLEFT = &H0102
    DCBA_FACEDOWNRIGHT = &H0103
End Enum

Public Enum PrinterAccessRights
    SERVER_ACCESS_ADMINISTER = &H00000001
    SERVER_ACCESS_ENUMERATE = &H00000002
    PRINTER_ACCESS_ADMINISTER = &H00000004
    PRINTER_ACCESS_USE = &H00000008
    JOB_ACCESS_ADMINISTER = &H00000010
    JOB_ACCESS_READ = &H00000020
    PRINTER_ACCESS_MANAGE_LIMITED = &H00000040
End Enum

Public Type PRINTER_DEFAULTSA
    pDataType As String
    pDevMode As LongPtr
    /* [ TypeHint(PrinterAccessRights, StandardAccessTypes)] */ DesiredAccess As PrinterAccessRights
End Type
Public Type PRINTER_DEFAULTSW
    pDataType As LongPtr
    pDevMode As LongPtr
    /* [ TypeHint(PrinterAccessRights, StandardAccessTypes)] */ DesiredAccess As PrinterAccessRights
End Type
Public Type PRINTER_DEFAULTS
    pDataType As LongPtr
    pDevMode As LongPtr
    /* [ TypeHint(PrinterAccessRights, StandardAccessTypes)] */ DesiredAccess As PrinterAccessRights
End Type

Public Enum PRINTER_OPTION_FLAGS
    PRINTER_OPTION_NO_CACHE
    PRINTER_OPTION_CACHE
    PRINTER_OPTION_CLIENT_CHANGE
End Enum
Public Type PRINTER_OPTIONS
    cbSize As Long
    dwFlags As PRINTER_OPTION_FLAGS
End Type

Public Enum EPrintPropertyType
    kPropertyTypeString = 1
    kPropertyTypeInt32
    kPropertyTypeInt64
    kPropertyTypeByte
    kPropertyTypeTime
    kPropertyTypeDevMode
    kPropertyTypeSD
    kPropertyTypeNotificationReply
    kPropertyTypeNotificationOptions
    kPropertyTypeBuffer
End Enum
Public Enum EPrintXPSJobProgress
    kAddingDocumentSequence
    kDocumentSequenceAdded
    kAddingFixedDocument
    kFixedDocumentAdded
    kAddingFixedPage
    kFixedPageAdded
    kResourceAdded
    kFontAdded
    kImageAdded
    kXpsDocumentCommitted
End Enum
Public Enum EPrintXPSJobOperation
    kJobProduction
    kJobConsumption
End Enum
Public Type PrintPropertyValue
    ePropertyType As EPrintPropertyType
    ' union
    ' {
        ' BYTE                 propertyByte;
        ' PWSTR                propertyString;
        ' LONG                 propertyInt32;
        ' LONGLONG             propertyInt64;
        ' struct {
            ' DWORD  cbBuf;
            ' LPVOID pBuf;
        ' }                    propertyBlob;
    ' } value;
    pad As Long
    #If Win64 Then
        value(11) As Byte
        pad2 As Long
    #Else
        value As LongLong
    #End If
End Type

Public Type PrintNamedProperty
    propertyName As LongPtr
    propertyValue As PrintPropertyValue
End Type

Public Type PrintPropertiesCollection
    numberOfProperties As Long
    propertiesCollection As LongPtr 'PrintNamedProperty*
End Type

Public Type ADDJOB_INFO_1A
    Path As String
    JobId As Long
End Type
Public Type ADDJOB_INFO_1W
    Path As LongPtr
    JobId As Long
End Type
Public Type ADDJOB_INFO_1
    Path As LongPtr
    JobId As Long
End Type

Public Type DRIVER_INFO_1A
    pName As String ' QMS 810
End Type
Public Type DRIVER_INFO_1W
    pName As LongPtr ' QMS 810
End Type
Public Type DRIVER_INFO_1
    pName As LongPtr ' QMS 810
End Type
Public Type DRIVER_INFO_2A
    cVersion As Long
    pName As String ' QMS 810
    pEnvironment As String ' Win32 x86
    pDriverPath As String ' c:\drivers\pscript.dll
    pDataFile As String ' c:\drivers\QMS810.PPD
    pConfigFile As String ' c:\drivers\PSCRPTUI.DLL
End Type
Public Type DRIVER_INFO_2W
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
End Type
Public Type DRIVER_INFO_2
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
End Type

Public Type DRIVER_INFO_3A
    cVersion As Long
    pName As String ' QMS 810
    pEnvironment As String ' Win32 x86
    pDriverPath As String ' c:\drivers\pscript.dll
    pDataFile As String ' c:\drivers\QMS810.PPD
    pConfigFile As String ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As String ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As String ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As String ' "PJL monitor"
    pDefaultDataType As String ' "EMF"
End Type
Public Type DRIVER_INFO_3W
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As LongPtr ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As LongPtr ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As LongPtr ' "PJL monitor"
    pDefaultDataType As LongPtr ' "EMF"
End Type
Public Type DRIVER_INFO_3
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As LongPtr ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As LongPtr ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As LongPtr ' "PJL monitor"
    pDefaultDataType As LongPtr ' "EMF"
End Type

Public Type DRIVER_INFO_4A
    cVersion As Long
    pName As String ' QMS 810
    pEnvironment As String ' Win32 x86
    pDriverPath As String ' c:\drivers\pscript.dll
    pDataFile As String ' c:\drivers\QMS810.PPD
    pConfigFile As String ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As String ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As String ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As String ' "PJL monitor"
    pDefaultDataType As String ' "EMF"
    pszzPreviousNames As String ' "OldName1\0OldName2\0\0
End Type
Public Type DRIVER_INFO_4W
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As LongPtr ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As LongPtr ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As LongPtr ' "PJL monitor"
    pDefaultDataType As LongPtr ' "EMF"
    pszzPreviousNames As LongPtr ' "OldName1\0OldName2\0\0
End Type
Public Type DRIVER_INFO_4
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As LongPtr ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As LongPtr ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As LongPtr ' "PJL monitor"
    pDefaultDataType As LongPtr ' "EMF"
    pszzPreviousNames As LongPtr ' "OldName1\0OldName2\0\0
End Type

Public Enum PRINT_DRIVER_ATTR_FLAGS
    DRIVER_KERNELMODE = &H00000001
    DRIVER_USERMODE = &H00000002
End Enum

Public Type DRIVER_INFO_5A
    cVersion As Long
    pName As String ' QMS 810
    pEnvironment As String ' Win32 x86
    pDriverPath As String ' c:\drivers\pscript.dll
    pDataFile As String ' c:\drivers\QMS810.PPD
    pConfigFile As String ' c:\drivers\PSCRPTUI.DLL
    dwDriverAttributes As PRINT_DRIVER_ATTR_FLAGS ' driver attributes (like UMPD/KMPD)
    dwConfigVersion As Long ' version number of the config file since reboot
    dwDriverVersion As Long ' version number of the driver file since reboot
End Type
Public Type DRIVER_INFO_5W
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    dwDriverAttributes As PRINT_DRIVER_ATTR_FLAGS ' driver attributes (like UMPD/KMPD)
    dwConfigVersion As Long ' version number of the config file since reboot
    dwDriverVersion As Long ' version number of the driver file since reboot
End Type
Public Type DRIVER_INFO_5
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    dwDriverAttributes As PRINT_DRIVER_ATTR_FLAGS ' driver attributes (like UMPD/KMPD)
    dwConfigVersion As Long ' version number of the config file since reboot
    dwDriverVersion As Long ' version number of the driver file since reboot
End Type

Public Enum PRINT_DRIVER_ATTRS
    PRINTER_DRIVER_PACKAGE_AWARE = &H00000001
    PRINTER_DRIVER_XPS = &H00000002
    PRINTER_DRIVER_SANDBOX_ENABLED = &H00000004
    PRINTER_DRIVER_CLASS = &H00000008
    PRINTER_DRIVER_DERIVED = &H00000010
    PRINTER_DRIVER_NOT_SHAREABLE = &H00000020
    PRINTER_DRIVER_CATEGORY_FAX = &H00000040
    PRINTER_DRIVER_CATEGORY_FILE = &H00000080
    PRINTER_DRIVER_CATEGORY_VIRTUAL = &H00000100
    PRINTER_DRIVER_CATEGORY_SERVICE = &H00000200
    PRINTER_DRIVER_SOFT_RESET_REQUIRED = &H00000400
    PRINTER_DRIVER_SANDBOX_DISABLED = &H00000800
    PRINTER_DRIVER_CATEGORY_3D = &H00001000
    PRINTER_DRIVER_CATEGORY_CLOUD = &H00002000
End Enum

Public Type DRIVER_INFO_6A
    cVersion As Long
    pName As String ' QMS 810
    pEnvironment As String ' Win32 x86
    pDriverPath As String ' c:\drivers\pscript.dll
    pDataFile As String ' c:\drivers\QMS810.PPD
    pConfigFile As String ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As String ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As String ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As String ' "PJL monitor"
    pDefaultDataType As String ' "EMF"
    pszzPreviousNames As String ' "OldName1\0OldName2\0\0
    ftDriverDate As FILETIME
    dwlDriverVersion As LongLong
    pszMfgName As String
    pszOEMUrl As String
    pszHardwareID As String
    pszProvider As String
End Type
Public Type DRIVER_INFO_6W
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As LongPtr ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As LongPtr ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As LongPtr ' "PJL monitor"
    pDefaultDataType As LongPtr ' "EMF"
    pszzPreviousNames As LongPtr ' "OldName1\0OldName2\0\0
    ftDriverDate As FILETIME
    dwlDriverVersion As LongLong
    pszMfgName As LongPtr
    pszOEMUrl As LongPtr
    pszHardwareID As LongPtr
    pszProvider As LongPtr
End Type
Public Type DRIVER_INFO_6
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As LongPtr ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As LongPtr ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As LongPtr ' "PJL monitor"
    pDefaultDataType As LongPtr ' "EMF"
    pszzPreviousNames As LongPtr ' "OldName1\0OldName2\0\0
    ftDriverDate As FILETIME
    dwlDriverVersion As LongLong
    pszMfgName As LongPtr
    pszOEMUrl As LongPtr
    pszHardwareID As LongPtr
    pszProvider As LongPtr
End Type

Public Type DRIVER_INFO_8A
    cVersion As Long
    pName As String ' QMS 810
    pEnvironment As String ' Win32 x86
    pDriverPath As String ' c:\drivers\pscript.dll
    pDataFile As String ' c:\drivers\QMS810.PPD
    pConfigFile As String ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As String ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As String ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As String ' "PJL monitor"
    pDefaultDataType As String ' "EMF"
    pszzPreviousNames As String ' "OldName1\0OldName2\0\0
    ftDriverDate As FILETIME
    dwlDriverVersion As LongLong
    pszMfgName As String
    pszOEMUrl As String
    pszHardwareID As String
    pszProvider As String
    pszPrintProcessor As String
    pszVendorSetup As String
    pszzColorProfiles As String
    pszInfPath As String
    dwPrinterDriverAttributes As PRINT_DRIVER_ATTRS
    pszzCoreDriverDependencies As String
    ftMinInboxDriverVerDate As FILETIME
    dwlMinInboxDriverVerVersion As LongLong
End Type
Public Type DRIVER_INFO_8W
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As LongPtr ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As LongPtr ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As LongPtr ' "PJL monitor"
    pDefaultDataType As LongPtr ' "EMF"
    pszzPreviousNames As LongPtr ' "OldName1\0OldName2\0\0
    ftDriverDate As FILETIME
    dwlDriverVersion As LongLong
    pszMfgName As LongPtr
    pszOEMUrl As LongPtr
    pszHardwareID As LongPtr
    pszProvider As LongPtr
    pszPrintProcessor As LongPtr
    pszVendorSetup As LongPtr
    pszzColorProfiles As LongPtr
    pszInfPath As LongPtr
    dwPrinterDriverAttributes As PRINT_DRIVER_ATTRS
    pszzCoreDriverDependencies As LongPtr
    ftMinInboxDriverVerDate As FILETIME
    dwlMinInboxDriverVerVersion As LongLong
End Type
Public Type DRIVER_INFO_8
    cVersion As Long
    pName As LongPtr ' QMS 810
    pEnvironment As LongPtr ' Win32 x86
    pDriverPath As LongPtr ' c:\drivers\pscript.dll
    pDataFile As LongPtr ' c:\drivers\QMS810.PPD
    pConfigFile As LongPtr ' c:\drivers\PSCRPTUI.DLL
    pHelpFile As LongPtr ' c:\drivers\PSCRPTUI.HLP
    pDependentFiles As LongPtr ' PSCRIPT.DLL\0QMS810.PPD\0PSCRIPTUI.DLL\0PSCRIPTUI.HLP\0PSTEST.TXT\0\0
    pMonitorName As LongPtr ' "PJL monitor"
    pDefaultDataType As LongPtr ' "EMF"
    pszzPreviousNames As LongPtr ' "OldName1\0OldName2\0\0
    ftDriverDate As FILETIME
    dwlDriverVersion As LongLong
    pszMfgName As LongPtr
    pszOEMUrl As LongPtr
    pszHardwareID As LongPtr
    pszProvider As LongPtr
    pszPrintProcessor As LongPtr
    pszVendorSetup As LongPtr
    pszzColorProfiles As LongPtr
    pszInfPath As LongPtr
    dwPrinterDriverAttributes As PRINT_DRIVER_ATTRS
    pszzCoreDriverDependencies As LongPtr
    ftMinInboxDriverVerDate As FILETIME
    dwlMinInboxDriverVerVersion As LongLong
End Type

Public Enum PRINT_DRIVER_APD_FLAGS
    APD_STRICT_UPGRADE = &H00000001
    APD_STRICT_DOWNGRADE = &H00000002
    APD_COPY_ALL_FILES = &H00000004
    APD_COPY_NEW_FILES = &H00000008
    APD_COPY_FROM_DIRECTORY = &H00000010
End Enum
Public Enum PRINT_DRIVER_DPD_FLAGS
    DPD_DELETE_UNUSED_FILES = &H00000001
    DPD_DELETE_SPECIFIC_VERSION = &H00000002
    DPD_DELETE_ALL_FILES = &H00000004
End Enum

Public Type PRINTPROCESSOR_INFO_1A
    pName As String
End Type
Public Type PRINTPROCESSOR_INFO_1W
    pName As LongPtr
End Type
Public Type PRINTPROCESSOR_INFO_1
    pName As LongPtr
End Type

Public Type DATATYPES_INFO_1A
    pName As String
End Type
Public Type DATATYPES_INFO_1W
    pName As LongPtr
End Type
Public Type DATATYPES_INFO_1
    pName As LongPtr
End Type

Public Type DOC_INFO_1A
    pDocName As String
    pOutputFile As String
    pDatatype As String
End Type
Public Type DOC_INFO_1W
    pDocName As LongPtr
    pOutputFile As LongPtr
    pDatatype As LongPtr
End Type
Public Type DOC_INFO_1
    pDocName As LongPtr
    pOutputFile As LongPtr
    pDatatype As LongPtr
End Type

Public Enum DOC_INFO_MODE
    DI_CHANNEL = 1    ' start direct read/write channel,
End Enum

Public Type DOC_INFO_2W
    pDocName As LongPtr
    pOutputFile As LongPtr
    pDatatype As LongPtr
    dwMode As DOC_INFO_MODE
    JobId As Long
End Type

Public Enum DOC_INFO_FLAGS
    DI_MEMORYMAP_WRITE = &H1
End Enum
Public Type DOC_INFO_3A
    pDocName As String
    pOutputFile As String
    pDatatype As String
    dwFlags As DOC_INFO_FLAGS
End Type
Public Type DOC_INFO_3W
    pDocName As LongPtr
    pOutputFile As LongPtr
    pDatatype As LongPtr
    dwFlags As DOC_INFO_FLAGS
End Type
Public Type DOC_INFO_3
    pDocName As LongPtr
    pOutputFile As LongPtr
    pDatatype As LongPtr
    dwFlags As DOC_INFO_FLAGS
End Type



Public Enum DM_MODES
    DM_UPDATE = 1
    DM_COPY = 2
    DM_PROMPT = 4
    DM_MODIFY = 8
    DM_IN_BUFFER = DM_MODIFY
    DM_IN_PROMPT = DM_PROMPT
    DM_OUT_BUFFER = DM_COPY
    DM_OUT_DEFAULT = DM_UPDATE
End Enum

Public Type PRINTER_ENUM_VALUES
    pValueName As LongPtr
    cbValueName As Long
    dwType As REGTYPES
    pData As LongPtr
    cbData As Long
End Type

Public Enum PRINTER_ERROR_TYPES
    PRINTER_ERROR_OUTOFPAPER = &H00000001
    PRINTER_ERROR_JAM = &H00000002
    PRINTER_ERROR_OUTOFTONER = &H00000004
End Enum

Public Enum PRINTER_ERROR_LEVELS
    PRINTER_ERROR_INFORMATION = &H80000000
    PRINTER_ERROR_WARNING = &H40000000
    PRINTER_ERROR_SEVERE = &H20000000
End Enum

Public Enum PRINTER_FORM_FLAGS
    FORM_USER = &H00000000
    FORM_BUILTIN = &H00000001
    FORM_PRINTER = &H00000002
End Enum
Public Type FORM_INFO_1A
    Flags As PRINTER_FORM_FLAGS
    pName As String
    Size As SIZEL
    ImageableArea As RECTL
End Type
Public Type FORM_INFO_1W
    Flags As PRINTER_FORM_FLAGS
    pName As LongPtr
    Size As SIZEL
    ImageableArea As RECTL
End Type
'Alias FORM_INFO_1 As FORM_INFO_1W
Public Type FORM_INFO_1
    Flags As PRINTER_FORM_FLAGS
    pName As LongPtr
    Size As SIZEL
    ImageableArea As RECTL
End Type
Public Enum PRINTER_FORM_STRINGTYPE
    STRING_NONE = &H00000001
    STRING_MUIDLL = &H00000002
    STRING_LANGPAIR = &H00000004
End Enum

Public Const MAX_FORM_KEYWORD_LENGTH = 63 + 1
Public Type FORM_INFO_2A
    Flags As PRINTER_FORM_FLAGS
    pName As String
    Size As SIZEL
    ImageableArea As RECTL
    pKeyword As String
    StringType As PRINTER_FORM_STRINGTYPE
    pMuiDll As String
    dwResourceId As Long
    pDisplayName As String
    wLangId As Integer
End Type
Public Type FORM_INFO_2W
    Flags As PRINTER_FORM_FLAGS
    pName As LongPtr
    Size As SIZEL
    ImageableArea As RECTL
    pKeyword As LongPtr
    StringType As PRINTER_FORM_STRINGTYPE
    pMuiDll As LongPtr
    dwResourceId As Long
    pDisplayName As LongPtr
    wLangId As Integer
End Type
Public Type FORM_INFO_2
    Flags As PRINTER_FORM_FLAGS
    pName As LongPtr
    Size As SIZEL
    ImageableArea As RECTL
    pKeyword As LongPtr
    StringType As PRINTER_FORM_STRINGTYPE
    pMuiDll As LongPtr
    dwResourceId As Long
    pDisplayName As LongPtr
    wLangId As Integer
End Type

Public Type MONITOR_INFO_1A
    pName As String
End Type
Public Type MONITOR_INFO_1W
    pName As LongPtr
End Type
Public Type MONITOR_INFO_1
    pName As LongPtr
End Type

Public Type MONITOR_INFO_2A
    pName As String
    pEnvironment As String
    pDLLName As String
End Type
Public Type MONITOR_INFO_2W
    pName As LongPtr
    pEnvironment As LongPtr
    pDLLName As LongPtr
End Type
Public Type MONITOR_INFO_2
    pName As LongPtr
    pEnvironment As LongPtr
    pDLLName As LongPtr
End Type

Public Type PORT_INFO_1A
    pName As String
End Type
Public Type PORT_INFO_1W
    pName As LongPtr
End Type
Public Type PORT_INFO_1
    pName As LongPtr
End Type

Public Enum PRINTER_PORT_TYPE
    PORT_TYPE_WRITE = &H0001
    PORT_TYPE_READ = &H0002
    PORT_TYPE_REDIRECTED = &H0004
    PORT_TYPE_NET_ATTACHED = &H0008
End Enum
Public Type PORT_INFO_2A
    pPortName As String
    pMonitorName As String
    pDescription As String
    fPortType As PRINTER_PORT_TYPE
    Reserved As Long
End Type
Public Type PORT_INFO_2W
    pPortName As LongPtr
    pMonitorName As LongPtr
    pDescription As LongPtr
    fPortType As PRINTER_PORT_TYPE
    Reserved As Long
End Type
Public Type PORT_INFO_2
    pPortName As LongPtr
    pMonitorName As LongPtr
    pDescription As LongPtr
    fPortType As PRINTER_PORT_TYPE
    Reserved As Long
End Type

Public Enum PRINTER_PORT_STATUS_TYPE
    PORT_STATUS_TYPE_ERROR = 1
    PORT_STATUS_TYPE_WARNING = 2
    PORT_STATUS_TYPE_INFO = 3
End Enum
Public Enum PRINTER_PORT_STATUS
    PORT_STATUS_OFFLINE = 1
    PORT_STATUS_PAPER_JAM = 2
    PORT_STATUS_PAPER_OUT = 3
    PORT_STATUS_OUTPUT_BIN_FULL = 4
    PORT_STATUS_PAPER_PROBLEM = 5
    PORT_STATUS_NO_TONER = 6
    PORT_STATUS_DOOR_OPEN = 7
    PORT_STATUS_USER_INTERVENTION = 8
    PORT_STATUS_OUT_OF_MEMORY = 9
    PORT_STATUS_TONER_LOW = 10
    PORT_STATUS_WARMING_UP = 11
    PORT_STATUS_POWER_SAVE = 12
End Enum
Public Type PORT_INFO_3A
    dwStatus As PRINTER_PORT_STATUS
    pszStatus As String
    dwSeverity As PRINTER_PORT_STATUS_TYPE
End Type
Public Type PORT_INFO_3W
    dwStatus As PRINTER_PORT_STATUS
    pszStatus As LongPtr
    dwSeverity As PRINTER_PORT_STATUS_TYPE
End Type
Public Type PORT_INFO_3
    dwStatus As PRINTER_PORT_STATUS
    pszStatus As LongPtr
    dwSeverity As PRINTER_PORT_STATUS_TYPE
End Type

Public Type PROVIDOR_INFO_1A
    pName As String
    pEnvironment As String
    pDLLName As String
End Type
Public Type PROVIDOR_INFO_1W
    pName As LongPtr
    pEnvironment As LongPtr
    pDLLName As LongPtr
End Type
Public Type PROVIDOR_INFO_1
    pName As LongPtr
    pEnvironment As LongPtr
    pDLLName As LongPtr
End Type

Public Type PROVIDOR_INFO_2A
    pOrder As String
End Type
Public Type PROVIDOR_INFO_2W
    pOrder As LongPtr
End Type
Public Type PROVIDOR_INFO_2
    pOrder As LongPtr
End Type

Public Enum PRINTER_CONNECTION_FLAGS
    PRINTER_CONNECTION_MISMATCH = &H00000020  ' printer should be mismatched
    PRINTER_CONNECTION_NO_UI = &H00000040  ' Fail call if UI is needed in order to install printer driver
End Enum
Public Type PRINTER_CONNECTION_INFO_1A
    dwFlags As PRINTER_CONNECTION_FLAGS
    pszDriverName As LongPtr
End Type
Public Type PRINTER_CONNECTION_INFO_1W
    dwFlags As PRINTER_CONNECTION_FLAGS
    pszDriverName As LongPtr
End Type
Public Type PRINTER_CONNECTION_INFO_1
    dwFlags As PRINTER_CONNECTION_FLAGS
    pszDriverName As LongPtr
End Type

Public Const MS_PRINT_JOB_OUTPUT_FILE = "MsPrintJobOutputFile"

Public Enum PRINT_EXECUTION_CONTEXT
    PRINT_EXECUTION_CONTEXT_APPLICATION = 0
    PRINT_EXECUTION_CONTEXT_SPOOLER_SERVICE = 1
    PRINT_EXECUTION_CONTEXT_SPOOLER_ISOLATION_HOST = 2
    PRINT_EXECUTION_CONTEXT_FILTER_PIPELINE = 3
    PRINT_EXECUTION_CONTEXT_WOW64 = 4
End Enum
Public Type PRINT_EXECUTION_DATA
    context As PRINT_EXECUTION_CONTEXT
    clientAppPID As Long
End Type



Public Declare PtrSafe Function FindFirstPrinterChangeNotification Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal fdwFilter As PrinterChangeEvents, ByVal fdwOptions As PrinterChangeNotifyOptions, pPrinterNotifyOptions As PRINTER_NOTIFY_OPTIONS) As LongPtr
Public Declare PtrSafe Function FindClosePrinterChangeNotification Lib "winspool.drv" (ByVal hChange As LongPtr) As Long
Public Declare PtrSafe Function FindNextPrinterChangeNotification Lib "winspool.drv" (ByVal hChange As LongPtr, pdwChange As PrinterChangeEvents, pPrinterNotifyOptions As PRINTER_NOTIFY_OPTIONS, ppPrinterNotifyInfo As LongPtr) As Long
Public Declare PtrSafe Function FreePrinterNotifyInfo Lib "winspool.drv" (pPrinterNotifyInfo As PRINTER_NOTIFY_INFO) As BOOL

Public Declare PtrSafe Function GetPrinterA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pPrinter As Any, ByVal cbBuf As Long, pcbNeeded As Long) As Long
Public Declare PtrSafe Function SetPrinterA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pPrinter As Any, ByVal Command As PRINTER_CONTROL_COMMANDS) As Long
Public Declare PtrSafe Function GetPrinterW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pPrinter As Any, ByVal cbBuf As Long, pcbNeeded As Long) As Long
Public Declare PtrSafe Function SetPrinterW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pPrinter As Any, ByVal Command As PRINTER_CONTROL_COMMANDS) As Long
Public DeclareWide PtrSafe Function GetPrinter Lib "winspool.drv" Alias "GetPrinterW" (ByVal hPrinter As LongPtr, ByVal Level As Long, pPrinter As Any, ByVal cbBuf As Long, pcbNeeded As Long) As Long
Public DeclareWide PtrSafe Function SetPrinter Lib "winspool.drv" Alias "SetPrinterW" (ByVal hPrinter As LongPtr, ByVal Level As Long, pPrinter As Any, ByVal Command As PRINTER_CONTROL_COMMANDS) As Long
Public Declare PtrSafe Function DeviceCapabilitiesA Lib "winspool.drv" (ByVal pDevice As String, ByVal pPort As String, [TypeHint(DEVCAP_INDEX)] ByVal fwCapability As Integer, ByVal pOutput As String, pDevMode As DEVMODEA) As Long
Public Declare PtrSafe Function DeviceCapabilitiesW Lib "winspool.drv" (ByVal pDevice As LongPtr, ByVal pPort As LongPtr, [TypeHint(DEVCAP_INDEX)] ByVal fwCapability As Integer, ByVal pOutput As LongPtr, pDevMode As DEVMODEW) As Long
Public DeclareWide PtrSafe Function DeviceCapabilities Lib "winspool.drv" Alias "DeviceCapabilitiesW" (ByVal pDevice As String, ByVal pPort As String, [TypeHint(DEVCAP_INDEX)] ByVal fwCapability As Integer, ByVal pOutput As String, pDevMode As DEVMODE) As Long

Public Declare PtrSafe Function EnumPrintersW Lib "winspool.drv" (ByVal flags As PrinterInfoFlags, ByVal name As LongPtr, ByVal Level As Long, pPrinterEnum As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As Long
Public Declare PtrSafe Function EnumPrintersA Lib "winspool.drv" (ByVal flags As PrinterInfoFlags, ByVal name As String, ByVal Level As Long, pPrinterEnum As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As Long
Public DeclareWide PtrSafe Function EnumPrinters Lib "winspool.drv" Alias "EnumPrintersW" (ByVal flags As PrinterInfoFlags, ByVal name As String, ByVal Level As Long, pPrinterEnum As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As Long
Public Declare PtrSafe Function OpenPrinterA Lib "winspool.drv" (ByVal pPrinterName As String, phPrinter As LongPtr, pDefault As PRINTER_DEFAULTSA) As BOOL
Public Declare PtrSafe Function OpenPrinterW Lib "winspool.drv" (ByVal pPrinterName As LongPtr, phPrinter As LongPtr, pDefault As PRINTER_DEFAULTSW) As BOOL
Public DeclareWide PtrSafe Function OpenPrinter Lib "winspool.drv" Alias "OpenPrinterW" (ByVal pPrinterName As String, phPrinter As LongPtr, pDefault As PRINTER_DEFAULTS) As BOOL
Public Declare PtrSafe Function OpenPrinter2A Lib "winspool.drv" (ByVal pPrinterName As String, phPrinter As LongPtr, pDefault As PRINTER_DEFAULTSA, pOptions As PRINTER_OPTIONS) As BOOL
Public Declare PtrSafe Function OpenPrinter2W Lib "winspool.drv" (ByVal pPrinterName As LongPtr, phPrinter As LongPtr, pDefault As PRINTER_DEFAULTSW, pOptions As PRINTER_OPTIONS) As BOOL
Public DeclareWide PtrSafe Function OpenPrinter2 Lib "winspool.drv" Alias "OpenPrinter2W" (ByVal pPrinterName As String, phPrinter As LongPtr, pDefault As PRINTER_DEFAULTS, pOptions As PRINTER_OPTIONS) As BOOL
Public Declare PtrSafe Function ResetPrinterA Lib "winspool.drv" (ByVal hPrinter As LongPtr, pDefault As PRINTER_DEFAULTSA) As BOOL
Public Declare PtrSafe Function ResetPrinterW Lib "winspool.drv" (ByVal hPrinter As LongPtr, pDefault As PRINTER_DEFAULTSW) As BOOL
Public DeclareWide PtrSafe Function ResetPrinter Lib "winspool.drv" Alias "ResetPrinterW" (ByVal hPrinter As LongPtr, pDefault As PRINTER_DEFAULTS) As BOOL
Public Declare PtrSafe Function AddPrinterA Lib "winspool.drv" (ByVal pName As String, ByVal Level As Long, pPrinter As Any) As LongPtr
Public Declare PtrSafe Function AddPrinterW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal Level As Long, pPrinter As Any) As LongPtr
Public DeclareWide PtrSafe Function AddPrinter Lib "winspool.drv" Alias "AddPrinterW" (ByVal pName As String, ByVal Level As Long, pPrinter As Any) As LongPtr
Public Declare PtrSafe Function DeletePrinter Lib "winspool.drv" (ByVal hPrinter As LongPtr) As BOOL
Public Declare PtrSafe Function ClosePrinter Lib "winspool.drv" (ByVal hPrinter As LongPtr) As BOOL
Public Declare PtrSafe Function AbortPrinter Lib "winspool.drv" (ByVal hPrinter As LongPtr) As BOOL
Public Declare PtrSafe Function GetDefaultPrinterA Lib "winspool.drv" (ByVal pszBuffer As String, pcchBuffer As Long) As BOOL
Public Declare PtrSafe Function GetDefaultPrinterW Lib "winspool.drv" (ByVal pszBuffer As LongPtr, pcchBuffer As Long) As BOOL
Public DeclareWide PtrSafe Function GetDefaultPrinter Lib "winspool.drv" Alias "GetDefaultPrinterW" (ByVal pszBuffer As String, pcchBuffer As Long) As BOOL
Public Declare PtrSafe Function SetDefaultPrinterA Lib "winspool.drv" (ByVal pszPrinter As String) As BOOL
Public Declare PtrSafe Function SetDefaultPrinterW Lib "winspool.drv" (ByVal pszPrinter As LongPtr) As BOOL
Public DeclareWide PtrSafe Function SetDefaultPrinter Lib "winspool.drv" Alias "SetDefaultPrinterW" (ByVal pszPrinter As String) As BOOL

Public Declare PtrSafe Function SetJobA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal JobId As Long, ByVal Level As Long, pJob As Any, ByVal Command As PRINT_JOB_CONTROL) As BOOL
Public Declare PtrSafe Function SetJobW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal JobId As Long, ByVal Level As Long, pJob As Any, ByVal Command As PRINT_JOB_CONTROL) As BOOL
Public DeclareWide PtrSafe Function SetJob Lib "winspool.drv" Alias "SetJobW" (ByVal hPrinter As LongPtr, ByVal JobId As Long, ByVal Level As Long, pJob As Any, ByVal Command As PRINT_JOB_CONTROL) As BOOL
Public Declare PtrSafe Function GetJobA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal JobId As Long, ByVal Level As Long, pJob As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetJobW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal JobId As Long, ByVal Level As Long, pJob As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function GetJob Lib "winspool.drv" Alias "GetJobW" (ByVal hPrinter As LongPtr, ByVal JobId As Long, ByVal Level As Long, pJob As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function EnumJobsA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal FirstJob As Long, ByVal NoJobs As Long, ByVal Level As Long, pJob As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function EnumJobsW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal FirstJob As Long, ByVal NoJobs As Long, ByVal Level As Long, pJob As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public DeclareWide PtrSafe Function EnumJobs Lib "winspool.drv" Alias "EnumJobsW" (ByVal hPrinter As LongPtr, ByVal FirstJob As Long, ByVal NoJobs As Long, ByVal Level As Long, pJob As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function AddJobA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pData As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function AddJobW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pData As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function AddJob Lib "winspool.drv" Alias "AddJobW" (ByVal hPrinter As LongPtr, ByVal Level As Long, pData As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function ScheduleJob Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal JobId As Long) As BOOL

Public Declare PtrSafe Function AddPrinterDriverA Lib "winspool.drv" (ByVal pName As String, ByVal Level As Long, pDriverInfo As Any) As BOOL
Public Declare PtrSafe Function AddPrinterDriverW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal Level As Long, pDriverInfo As Any) As BOOL
Public DeclareWide PtrSafe Function AddPrinterDriver Lib "winspool.drv" Alias "AddPrinterDriverW" (ByVal pName As String, ByVal Level As Long, pDriverInfo As Any) As BOOL
Public Declare PtrSafe Function AddPrinterDriverExA Lib "winspool.drv" (ByVal pName As String, ByVal Level As Long, pDriverInfo As Any, ByVal dwFileCopyFlags As PRINT_DRIVER_APD_FLAGS) As BOOL
Public Declare PtrSafe Function AddPrinterDriverExW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal Level As Long, pDriverInfo As Any, ByVal dwFileCopyFlags As PRINT_DRIVER_APD_FLAGS) As BOOL
Public DeclareWide PtrSafe Function AddPrinterDriverEx Lib "winspool.drv" Alias "AddPrinterDriverExW" (ByVal pName As String, ByVal Level As Long, pDriverInfo As Any, ByVal dwFileCopyFlags As PRINT_DRIVER_APD_FLAGS) As BOOL
Public Declare PtrSafe Function EnumPrinterDriversA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal Level As Long, pDriverInfo As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcRetruned As Long) As BOOL
Public Declare PtrSafe Function EnumPrinterDriversW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal Level As Long, pDriverInfo As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcRetruned As Long) As BOOL
Public DeclareWide PtrSafe Function EnumPrinterDrivers Lib "winspool.drv" Alias "EnumPrinterDriversW" (ByVal pName As String, ByVal pEnvironment As String, ByVal Level As Long, pDriverInfo As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcRetruned As Long) As BOOL
Public Declare PtrSafe Function GetPrinterDriverA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pEnvironment As String, ByVal Level As Long, pDriverInfo As Byte, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetPrinterDriverW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pEnvironment As LongPtr, ByVal Level As Long, pDriverInfo As Byte, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function GetPrinterDriver Lib "winspool.drv" Alias "GetPrinterDriverW" (ByVal hPrinter As LongPtr, ByVal pEnvironment As String, ByVal Level As Long, pDriverInfo As Byte, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL

Public Declare PtrSafe Function GetPrinterDriverDirectoryA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal Level As Long, pDriverDirectory As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetPrinterDriverDirectoryW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal Level As Long, pDriverDirectory As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function GetPrinterDriverDirectory Lib "winspool.drv" Alias "GetPrinterDriverDirectoryW" (ByVal pName As String, ByVal pEnvironment As String, ByVal Level As Long, pDriverDirectory As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function DeletePrinterDriverA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal pDriverName As String) As BOOL
Public Declare PtrSafe Function DeletePrinterDriverW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal pDriverName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeletePrinterDriver Lib "winspool.drv" Alias "DeletePrinterDriverW" (ByVal pName As String, ByVal pEnvironment As String, ByVal pDriverName As String) As BOOL
Public Declare PtrSafe Function DeletePrinterDriverExA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal pDriverName As String, ByVal dwDeleteFlag As PRINT_DRIVER_DPD_FLAGS, ByVal dwVersionFlag As Long) As BOOL
Public Declare PtrSafe Function DeletePrinterDriverExW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal pDriverName As LongPtr, ByVal dwDeleteFlag As PRINT_DRIVER_DPD_FLAGS, ByVal dwVersionFlag As Long) As BOOL
Public DeclareWide PtrSafe Function DeletePrinterDriverEx Lib "winspool.drv" Alias "DeletePrinterDriverExW" (ByVal pName As String, ByVal pEnvironment As String, ByVal pDriverName As String, ByVal dwDeleteFlag As PRINT_DRIVER_DPD_FLAGS, ByVal dwVersionFlag As Long) As BOOL

Public Declare PtrSafe Function AddPrintProcessorA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal pPathName As String, ByVal pPrintProcessorName As String) As BOOL
Public Declare PtrSafe Function AddPrintProcessorW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal pPathName As LongPtr, ByVal pPrintProcessorName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AddPrintProcessor Lib "winspool.drv" Alias "AddPrintProcessorW" (ByVal pName As String, ByVal pEnvironment As String, ByVal pPathName As String, ByVal pPrintProcessorName As String) As BOOL
Public Declare PtrSafe Function EnumPrintProcessorsA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal Level As Long, pPrintProcessorInfo As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function EnumPrintProcessorsW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal Level As Long, pPrintProcessorInfo As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public DeclareWide PtrSafe Function EnumPrintProcessors Lib "winspool.drv" Alias "EnumPrintProcessorsW" (ByVal pName As String, ByVal pEnvironment As String, ByVal Level As Long, pPrintProcessorInfo As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function GetPrintProcessorDirectoryA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal Level As Long, ByVal pPrintProcessorInfo As String, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetPrintProcessorDirectoryW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal Level As Long, ByVal pPrintProcessorInfo As LongPtr, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function GetPrintProcessorDirectory Lib "winspool.drv" Alias "GetPrintProcessorDirectoryW" (ByVal pName As String, ByVal pEnvironment As String, ByVal Level As Long, ByVal pPrintProcessorInfo As String, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function EnumPrintProcessorDatatypesA Lib "winspool.drv" (ByVal pName As String, ByVal pPrintProcessorName As String, ByVal Level As Long, pDatatypes As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcRetruned As Long) As BOOL
Public Declare PtrSafe Function EnumPrintProcessorDatatypesW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pPrintProcessorName As LongPtr, ByVal Level As Long, pDatatypes As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcRetruned As Long) As BOOL
Public DeclareWide PtrSafe Function EnumPrintProcessorDatatypes Lib "winspool.drv" Alias "EnumPrintProcessorDatatypesW" (ByVal pName As String, ByVal pPrintProcessorName As String, ByVal Level As Long, pDatatypes As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcRetruned As Long) As BOOL
Public Declare PtrSafe Function DeletePrintProcessorA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal pPrintProcessorName As String) As BOOL
Public Declare PtrSafe Function DeletePrintProcessorW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal pPrintProcessorName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeletePrintProcessor Lib "winspool.drv" Alias "DeletePrintProcessorW" (ByVal pName As String, ByVal pEnvironment As String, ByVal pPrintProcessorName As String) As BOOL

Public Declare PtrSafe Function StartDocPrinterA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pDocInfo As Any) As Long
Public Declare PtrSafe Function StartDocPrinterW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pDocInfo As Any) As Long
Public DeclareWide PtrSafe Function StartDocPrinter Lib "winspool.drv" Alias "StartDocPrinterW" (ByVal hPrinter As LongPtr, ByVal Level As Long, pDocInfo As Any) As Long
Public Declare PtrSafe Function StartPagePrinter Lib "winspool.drv" (ByVal hPrinter As LongPtr) As BOOL
Public Declare PtrSafe Function WritePrinter Lib "winspool.drv" (ByVal hPrinter As LongPtr, pBuf As Any, ByVal cbBuf As Long, pcWritten As Long) As BOOL
Public Declare PtrSafe Function EndPagePrinter Lib "winspool.drv" (ByVal hPrinter As LongPtr) As BOOL
Public Declare PtrSafe Function ReadPrinter Lib "winspool.drv" (ByVal hPrinter As LongPtr, pBuf As Any, ByVal cbBuf As Long, pNoBytesRead As Long) As BOOL
Public Declare PtrSafe Function EndDocPrinter Lib "winspool.drv" (ByVal hPrinter As LongPtr) As BOOL
Public Declare PtrSafe Function PrinterProperties Lib "winspool.drv" (ByVal hwnd As LongPtr, ByVal hPrinter As LongPtr) As Long
Public Declare PtrSafe Function DocumentPropertiesA Lib "winspool.drv" (ByVal hwnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pDeviceName As String, pDevModeOutput As DEVMODEA, pDevModeInput As DEVMODEA, ByVal fMode As DM_MODES) As Long
Public Declare PtrSafe Function DocumentPropertiesW Lib "winspool.drv" (ByVal hwnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pDeviceName As LongPtr, pDevModeOutput As DEVMODEW, pDevModeInput As DEVMODEW, ByVal fMode As DM_MODES) As Long
Public DeclareWide PtrSafe Function DocumentProperties Lib "winspool.drv" Alias "DocumentPropertiesW" (ByVal hwnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pDeviceName As String, pDevModeOutput As DEVMODE, pDevModeInput As DEVMODE, ByVal fMode As DM_MODES) As Long
Public Declare PtrSafe Function AdvancedDocumentPropertiesA Lib "winspool.drv" (ByVal hwnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pDeviceName As String, pDevModeOutput As DEVMODEA, pDevModeInput As DEVMODEA) As Long
Public Declare PtrSafe Function AdvancedDocumentPropertiesW Lib "winspool.drv" (ByVal hwnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pDeviceName As LongPtr, pDevModeOutput As DEVMODEW, pDevModeInput As DEVMODEW) As Long
Public DeclareWide PtrSafe Function AdvancedDocumentProperties Lib "winspool.drv" Alias "AdvancedDocumentPropertiesW" (ByVal hwnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pDeviceName As String, pDevModeOutput As DEVMODE, pDevModeInput As DEVMODE) As Long

Public Declare PtrSafe Function ExtDeviceMode Lib "winspool.drv" (ByVal hwnd As LongPtr, ByVal hInst As LongPtr, pDevModeOutput As DEVMODEA, ByVal pDeviceName As String, ByVal pPort As String, pDevModeInput As DEVMODEA, ByVal pProfile As String, ByVal fMode As DM_MODES) As Long

Public Declare PtrSafe Function GetPrinterDataA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pValueName As String, pType As REGTYPES, pData As Any, ByVal nSize As Long, pcbNeeded As Long) As Long
Public Declare PtrSafe Function GetPrinterDataW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pValueName As LongPtr, pType As REGTYPES, pData As Any, ByVal nSize As Long, pcbNeeded As Long) As Long
Public DeclareWide PtrSafe Function GetPrinterData Lib "winspool.drv" Alias "GetPrinterDataW" (ByVal hPrinter As LongPtr, ByVal pValueName As String, pType As REGTYPES, pData As Any, ByVal nSize As Long, pcbNeeded As Long) As Long
Public Declare PtrSafe Function GetPrinterDataExA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As String, ByVal pValueName As String, pType As REGTYPES, pData As Any, ByVal nSize As Long, pcbNeeded As Long) As Long
Public Declare PtrSafe Function GetPrinterDataExW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As LongPtr, ByVal pValueName As LongPtr, pType As REGTYPES, pData As Any, ByVal nSize As Long, pcbNeeded As Long) As Long
Public DeclareWide PtrSafe Function GetPrinterDataEx Lib "winspool.drv" Alias "GetPrinterDataExW" (ByVal hPrinter As LongPtr, ByVal pKeyName As String, ByVal pValueName As String, pType As REGTYPES, pData As Any, ByVal nSize As Long, pcbNeeded As Long) As Long
Public Declare PtrSafe Function SetPrinterDataA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pValueName As String, ByVal dwType As REGTYPES, pData As Any, ByVal cbData As Long) As Long
Public Declare PtrSafe Function SetPrinterDataW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pValueName As LongPtr, ByVal dwType As REGTYPES, pData As Any, ByVal cbData As Long) As Long
Public DeclareWide PtrSafe Function SetPrinterData Lib "winspool.drv" Alias "SetPrinterDataW" (ByVal hPrinter As LongPtr, ByVal pValueName As String, ByVal dwType As REGTYPES, pData As Any, ByVal cbData As Long) As Long
Public Declare PtrSafe Function SetPrinterDataExA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As String, ByVal pValueName As String, ByVal dwType As REGTYPES, pData As Any, ByVal cbData As Long) As Long
Public Declare PtrSafe Function SetPrinterDataExW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As LongPtr, ByVal pValueName As LongPtr, ByVal dwType As REGTYPES, pData As Any, ByVal cbData As Long) As Long
Public DeclareWide PtrSafe Function SetPrinterDataEx Lib "winspool.drv" Alias "SetPrinterDataExW" (ByVal hPrinter As LongPtr, ByVal pKeyName As String, ByVal pValueName As String, ByVal dwType As REGTYPES, pData As Any, ByVal cbData As Long) As Long
Public Declare PtrSafe Function EnumPrinterDataA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal dwIndex As Long, ByVal pValueName As String, ByVal cbValueName As Long, pType As REGTYPES, pData As Any, ByVal cbData As Long, pcbData As Long) As Long
Public DeclareWide PtrSafe Function EnumPrinterDataW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal dwIndex As Long, ByVal pValueName As LongPtr, ByVal cbValueName As Long, pType As REGTYPES, pData As Any, ByVal cbData As Long, pcbData As Long) As Long
Public DeclareWide PtrSafe Function EnumPrinterData Lib "winspool.drv" Alias "EnumPrinterDataW" (ByVal hPrinter As LongPtr, ByVal dwIndex As Long, ByVal pValueName As String, ByVal cbValueName As Long, pType As REGTYPES, pData As Any, ByVal cbData As Long, pcbData As Long) As Long
Public Declare PtrSafe Function EnumPrinterDataExA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As String, pEnumValues As PRINTER_ENUM_VALUES, ByVal cbEnunValues As Long, pcbEnumValues As Long, pnEnumValues As Long) As Long
Public Declare PtrSafe Function EnumPrinterDataExW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As LongPtr, pEnumValues As PRINTER_ENUM_VALUES, ByVal cbEnunValues As Long, pcbEnumValues As Long, pnEnumValues As Long) As Long
Public DeclareWide PtrSafe Function EnumPrinterDataEx Lib "winspool.drv" Alias "EnumPrinterDataExW" (ByVal hPrinter As LongPtr, ByVal pKeyName As String, pEnumValues As PRINTER_ENUM_VALUES, ByVal cbEnunValues As Long, pcbEnumValues As Long, pnEnumValues As Long) As Long
Public Declare PtrSafe Function EnumPrinterKeyA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As String, ByVal pSubkey As String, ByVal cbSubkey As Long, pcbSubkey As Long) As Long
Public Declare PtrSafe Function EnumPrinterKeyW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As LongPtr, ByVal pSubkey As LongPtr, ByVal cbSubkey As Long, pcbSubkey As Long) As Long
Public DeclareWide PtrSafe Function EnumPrinterKey Lib "winspool.drv" Alias "EnumPrinterKeyW" (ByVal hPrinter As LongPtr, ByVal pKeyName As String, ByVal pSubkey As String, ByVal cbSubkey As Long, pcbSubkey As Long) As Long
Public Declare PtrSafe Function DeletePrinterDataA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pValueName As String) As Long
Public Declare PtrSafe Function DeletePrinterDataW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pValueName As LongPtr) As Long
Public DeclareWide PtrSafe Function DeletePrinterData Lib "winspool.drv" Alias "DeletePrinterDataW" (ByVal hPrinter As LongPtr, ByVal pValueName As String) As Long
Public Declare PtrSafe Function DeletePrinterKeyA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As String) As Long
Public Declare PtrSafe Function DeletePrinterKeyW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pKeyName As LongPtr) As Long
Public DeclareWide PtrSafe Function DeletePrinterKey Lib "winspool.drv" Alias "DeletePrinterKeyW" (ByVal hPrinter As LongPtr, ByVal pKeyName As String) As Long

[Description("If anyone ever uses this, I hope you appreciate how difficult it was to track down the meaning of Flags.")]
Public Declare PtrSafe Function WaitForPrinterChange Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal flags As PrinterChangeEvents) As LongPtr
Public Declare PtrSafe Function PrinterMessageBoxA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal error As PRINTER_ERROR_TYPES, ByVal hwnd As LongPtr, ByVal pText As String, ByVal pCaption As String, [TypeHint(MessageBoxFlags, PRINTER_ERROR_LEVELS)] ByVal dwType As Long) As MessageBoxResults
Public Declare PtrSafe Function PrinterMessageBoxW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal error As PRINTER_ERROR_TYPES, ByVal hwnd As LongPtr, ByVal pText As LongPtr, ByVal pCaption As LongPtr, [TypeHint(MessageBoxFlags, PRINTER_ERROR_LEVELS)] ByVal dwType As Long) As MessageBoxResults
Public DeclareWide PtrSafe Function PrinterMessageBox Lib "winspool.drv" Alias "PrinterMessageBoxW" (ByVal hPrinter As LongPtr, ByVal error As PRINTER_ERROR_TYPES, ByVal hwnd As LongPtr, ByVal pText As String, ByVal pCaption As String, [TypeHint(MessageBoxFlags, PRINTER_ERROR_LEVELS)] ByVal dwType As Long) As MessageBoxResults

Public Declare PtrSafe Function AddFormA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pForm As Any) As BOOL
Public Declare PtrSafe Function AddFormW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pForm As Any) As BOOL
Public DeclareWide PtrSafe Function AddForm Lib "winspool.drv" Alias "AddFormW" (ByVal hPrinter As LongPtr, ByVal Level As Long, pForm As Any) As BOOL
Public Declare PtrSafe Function DeleteFormA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pFormName As String) As BOOL
Public Declare PtrSafe Function DeleteFormW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pFormName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeleteForm Lib "winspool.drv" Alias "DeleteFormW" (ByVal hPrinter As LongPtr, ByVal pFormName As String) As BOOL
Public Declare PtrSafe Function GetFormA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pFormName As String, ByVal Level As Long, pForm As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetFormW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pFormName As LongPtr, ByVal Level As Long, pForm As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function GetForm Lib "winspool.drv" Alias "GetFormW" (ByVal hPrinter As LongPtr, ByVal pFormName As String, ByVal Level As Long, pForm As Any, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function SetFormA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pFormName As String, ByVal Level As Long, pForm As Any) As BOOL
Public DeclareWide PtrSafe Function SetFormW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal pFormName As LongPtr, ByVal Level As Long, pForm As Any) As BOOL
Public DeclareWide PtrSafe Function SetForm Lib "winspool.drv" Alias "SetFormW" (ByVal hPrinter As LongPtr, ByVal pFormName As String, ByVal Level As Long, pForm As Any) As BOOL
Public Declare PtrSafe Function EnumFormsA Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pForm As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function EnumFormsW Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal Level As Long, pForm As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public DeclareWide PtrSafe Function EnumForms Lib "winspool.drv" Alias "EnumFormsW" (ByVal hPrinter As LongPtr, ByVal Level As Long, pForm As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL

Public Declare PtrSafe Function EnumMonitorsA Lib "winspool.drv" (ByVal pName As String, ByVal Level As Long, pMonitors As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function EnumMonitorsW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal Level As Long, pMonitors As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public DeclareWide PtrSafe Function EnumMonitors Lib "winspool.drv" Alias "EnumMonitorsW" (ByVal pName As String, ByVal Level As Long, pMonitors As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function AddMonitorA Lib "winspool.drv" (ByVal pName As String, ByVal Level As Long, pMonitors As Any) As BOOL
Public Declare PtrSafe Function AddMonitorW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal Level As Long, pMonitors As Any) As BOOL
Public DeclareWide PtrSafe Function AddMonitor Lib "winspool.drv" Alias "AddMonitorW" (ByVal pName As String, ByVal Level As Long, pMonitors As Any) As BOOL
Public Declare PtrSafe Function DeleteMonitorA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal pMonitorName As String) As BOOL
Public Declare PtrSafe Function DeleteMonitorW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal pMonitorName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeleteMonitor Lib "winspool.drv" Alias "DeleteMonitorW" (ByVal pName As String, ByVal pEnvironment As String, ByVal pMonitorName As String) As BOOL

Public Declare PtrSafe Function EnumPortsA Lib "winspool.drv" (ByVal pName As String, ByVal Level As Long, pPort As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function EnumPortsW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal Level As Long, pPort As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public DeclareWide PtrSafe Function EnumPorts Lib "winspool.drv" Alias "EnumPortsW" (ByVal pName As String, ByVal Level As Long, pPort As Any, ByVal cbBuf As Long, pcbNeeded As Long, pcReturned As Long) As BOOL
Public Declare PtrSafe Function AddPortA Lib "winspool.drv" (ByVal pName As String, ByVal hwnd As LongPtr, ByVal pMonitorName As String) As BOOL
Public Declare PtrSafe Function AddPortW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal hwnd As LongPtr, ByVal pMonitorName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AddPort Lib "winspool.drv" Alias "AddPortW" (ByVal pName As String, ByVal hwnd As LongPtr, ByVal pMonitorName As String) As BOOL
Public Declare PtrSafe Function ConfigurePortA Lib "winspool.drv" (ByVal pName As String, ByVal hwnd As LongPtr, ByVal pPortName As String) As BOOL
Public Declare PtrSafe Function ConfigurePortW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal hwnd As LongPtr, ByVal pPortName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ConfigurePort Lib "winspool.drv" Alias "ConfigurePortW" (ByVal pName As String, ByVal hwnd As LongPtr, ByVal pPortName As String) As BOOL
Public Declare PtrSafe Function DeletePortA Lib "winspool.drv" (ByVal pName As String, ByVal hwnd As LongPtr, ByVal pPortName As String) As BOOL
Public Declare PtrSafe Function DeletePortW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal hwnd As LongPtr, ByVal pPortName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeletePort Lib "winspool.drv" Alias "DeletePortW" (ByVal pName As String, ByVal hwnd As LongPtr, ByVal pPortName As String) As BOOL
Public Declare PtrSafe Function SetPortA Lib "winspool.drv" (ByVal pName As String, ByVal pPortName As String, ByVal Level As Long, pPort As Any) As BOOL
Public Declare PtrSafe Function SetPortW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pPortName As LongPtr, ByVal Level As Long, pPort As Any) As BOOL
Public DeclareWide PtrSafe Function SetPort Lib "winspool.drv" Alias "SetPortW" (ByVal pName As String, ByVal pPortName As String, ByVal Level As Long, pPort As Any) As BOOL

Public Declare PtrSafe Function AddPrinterConnectionA Lib "winspool.drv" (ByVal pName As String) As BOOL
Public Declare PtrSafe Function AddPrinterConnectionW Lib "winspool.drv" (ByVal pName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function AddPrinterConnection Lib "winspool.drv" Alias "AddPrinterConnectionW" (ByVal pName As String) As BOOL
Public Declare PtrSafe Function AddPrinterConnection2A Lib "winspool.drv" (ByVal hwnd As LongPtr, ByVal pszName As String, ByVal dwLevel As Long, pConnectionInfo As Any) As BOOL
Public Declare PtrSafe Function AddPrinterConnection2W Lib "winspool.drv" (ByVal hwnd As LongPtr, ByVal pszName As LongPtr, ByVal dwLevel As Long, pConnectionInfo As Any) As BOOL
Public DeclareWide PtrSafe Function AddPrinterConnection2 Lib "winspool.drv" Alias "AddPrinterConnection2W" (ByVal hwnd As LongPtr, ByVal pszName As String, ByVal dwLevel As Long, pConnectionInfo As Any) As BOOL
Public Declare PtrSafe Function DeletePrinterConnectionA Lib "winspool.drv" (ByVal pName As String) As BOOL
Public Declare PtrSafe Function DeletePrinterConnectionW Lib "winspool.drv" (ByVal pName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeletePrinterConnection Lib "winspool.drv" Alias "DeletePrinterConnectionW" (ByVal pName As String) As BOOL
Public Declare PtrSafe Function ConnectToPrinterDlg Lib "winspool.drv" (ByVal hwnd As LongPtr, ByVal flags As Long) As LongPtr

Public Declare PtrSafe Function AddPrintProvidorA Lib "winspool.drv" (ByVal pName As String, ByVal Level As Long, pProvidorInfo As Any) As BOOL
Public Declare PtrSafe Function AddPrintProvidorW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal Level As Long, pProvidorInfo As Any) As BOOL
Public DeclareWide PtrSafe Function AddPrintProvidor Lib "winspool.drv" Alias "AddPrintProvidorW" (ByVal pName As String, ByVal Level As Long, pProvidorInfo As Any) As BOOL
Public Declare PtrSafe Function DeletePrintProvidorA Lib "winspool.drv" (ByVal pName As String, ByVal pEnvironment As String, ByVal pPrintProvidorName As String) As BOOL
Public Declare PtrSafe Function DeletePrintProvidorW Lib "winspool.drv" (ByVal pName As LongPtr, ByVal pEnvironment As LongPtr, ByVal pPrintProvidorName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeletePrintProvidor Lib "winspool.drv" Alias "DeletePrintProvidorW" (ByVal pName As String, ByVal pEnvironment As String, ByVal pPrintProvidorName As String) As BOOL

Public Declare PtrSafe Function IsValidDevmodeA Lib "winspool.drv" (pDevMode As DEVMODEA, ByVal DevmodeSize As LongPtr) As BOOL
Public Declare PtrSafe Function IsValidDevmodeW Lib "winspool.drv" (pDevMode As DEVMODEW, ByVal DevmodeSize As LongPtr) As BOOL
Public Declare PtrSafe Function IsValidDevmode Lib "winspool.drv" (pDevMode As DEVMODE, ByVal DevmodeSize As LongPtr) As BOOL



Public Declare PtrSafe Function GetPrinterDriverPackagePathA Lib "winspool.drv" (ByVal pszServer As String, ByVal pszEnvironment As String, ByVal pszLanguage As String, ByVal pszPackageID As String, ByVal pszDriverPackageCab As String, ByVal cchDriverPackageCab As Long, pcchRequiredSize As Long) As Long
Public Declare PtrSafe Function GetPrinterDriverPackagePathW Lib "winspool.drv" (ByVal pszServer As LongPtr, ByVal pszEnvironment As LongPtr, ByVal pszLanguage As LongPtr, ByVal pszPackageID As LongPtr, ByVal pszDriverPackageCab As LongPtr, ByVal cchDriverPackageCab As Long, pcchRequiredSize As Long) As Long
Public DeclareWide PtrSafe Function GetPrinterDriverPackagePath Lib "winspool.drv" Alias "GetPrinterDriverPackagePathW" (ByVal pszServer As String, ByVal pszEnvironment As String, ByVal pszLanguage As String, ByVal pszPackageID As String, ByVal pszDriverPackageCab As String, ByVal cchDriverPackageCab As Long, pcchRequiredSize As Long) As Long

 
Public Declare PtrSafe Function DeletePrinterDriverPackageA Lib "winspool.drv" (ByVal pszServer As String, ByVal pszInfPath As String, Optional ByVal pszEnvironment As String) As Long
Public Declare PtrSafe Function DeletePrinterDriverPackageW Lib "winspool.drv" (ByVal pszServer As LongPtr, ByVal pszInfPath As LongPtr, Optional ByVal pszEnvironment As LongPtr) As Long
Public DeclareWide PtrSafe Function DeletePrinterDriverPackage Lib "winspool.drv" Alias "DeletePrinterDriverPackageW" (ByVal pszServer As String, ByVal pszInfPath As String, Optional ByVal pszEnvironment As String) As Long

Public Declare PtrSafe Function ReportJobProcessingProgress Lib "winspool.drv" (ByVal printerHandle As LongPtr, ByVal JobId As Long, ByVal jobOperation As EPrintXPSJobOperation, ByVal jobProgrss As EPrintXPSJobProgress) As Long
Public Declare PtrSafe Function GetPrinterDriver2A Lib "winspool.drv" (ByVal hWnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pEnvironment As String, ByVal Level As Long, pDriverInfo As Byte, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetPrinterDriver2W Lib "winspool.drv" (ByVal hWnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pEnvironment As LongPtr, ByVal Level As Long, pDriverInfo As Byte, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public DeclareWide PtrSafe Function GetPrinterDriver2 Lib "winspool.drv" Alias "GetPrinterDriver2W" (ByVal hWnd As LongPtr, ByVal hPrinter As LongPtr, ByVal pEnvironment As String, ByVal Level As Long, pDriverInfo As Byte, ByVal cbBuf As Long, pcbNeeded As Long) As BOOL
Public Declare PtrSafe Function GetPrintExecutionData Lib "winspool.drv" (pData As PRINT_EXECUTION_DATA) As BOOL
Public Declare PtrSafe Function GetJobNamedPropertyValue Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal JobId As Long, ByVal pszName As LongPtr, pValue As PrintPropertyValue) As Long
Public Declare PtrSafe Sub FreePrintPropertyValue Lib "spoolss.dll" (pValue As PrintPropertyValue)
Public Declare PtrSafe Sub FreePrintNamedPropertyArray Lib "winspool.drv" (ByVal cProperties As Long, ppProperties As LongPtr)
Public Declare PtrSafe Function SetJobNamedProperty Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal JobId As Long, pProperty As PrintNamedProperty) As Long
Public Declare PtrSafe Function DeleteJobNamedProperty Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal JobId As Long, ByVal pszName As LongPtr) As Long
Public Declare PtrSafe Function EnumJobNamedProperties Lib "winspool.drv" (ByVal hPrinter As LongPtr, ByVal JobId As Long, pcProperties As Long, ppProperties As LongPtr) As Long
Public Declare PtrSafe Function GetPrintOutputInfo Lib "winspool.drv" (ByVal hWnd As LongPtr, ByVal pszPrinter As LongPtr, phFile As LongPtr, ppszOutputFile As LongPtr) As Long


#End Region


#Region "imm32"
'imm.h
Public Enum IMM_CF_STYLES
    CFS_DEFAULT = &H0000
    CFS_RECT = &H0001
    CFS_POINT = &H0002
    CFS_FORCE_POSITION = &H0020
    CFS_CANDIDATEPOS = &H0040
    CFS_EXCLUDE = &H0080
End Enum
Public Type COMPOSITIONFORM
    dwStyle As IMM_CF_STYLES
    ptCurrentPos As POINT
    rcArea As RECT
End Type
Public Type CANDIDATEFORM
    dwIndex As Long
    dwStyle As IMM_CF_STYLES
    ptCurrentPos As POINT
    rcArea As RECT
End Type

Public Enum IMM_CAND_STYLES
    IME_CAND_UNKNOWN = &H0000
    IME_CAND_READ = &H0001
    IME_CAND_CODE = &H0002
    IME_CAND_MEANING = &H0003
    IME_CAND_RADICAL = &H0004
    IME_CAND_STROKE = &H0005
End Enum
Public Type CANDIDATELIST
    dwSize As Long
    dwStyle As IMM_CAND_STYLES
    dwCount As Long
    dwSelection As Long
    dwPageStart As Long
    dwPageSize As Long
    dwOffset(0) As Long
End Type

Public Type REGISTERWORDA
    lpReading As String
    lpWord As String
End Type
Public Type REGISTERWORDW
    lpReading As LongPtr
    lpWord As LongPtr
End Type
Public Type REGISTERWORD
    lpReading As LongPtr
    lpWord As LongPtr
End Type

Public Type RECONVERTSTRING
    dwSize As Long
    dwVersion As Long
    dwStrLen As Long
    dwStrOffset As Long
    dwCompStrLen As Long
    dwCompStrOffset As Long
    dwTargetStrLen As Long
    dwTargetStrOffset As Long
End Type

Public Enum IMM_WORDREG_STYLES
    IME_REGWORD_STYLE_EUDC = &H00000001
    IME_REGWORD_STYLE_USER_FIRST = &H80000000
    IME_REGWORD_STYLE_USER_LAST = &HFFFFFFFF
End Enum
Public Const STYLE_DESCRIPTION_SIZE = 32
Public Type STYLEBUFA
    dwStyle As IMM_WORDREG_STYLES
    szDescription(0 To (STYLE_DESCRIPTION_SIZE - 1)) As Byte
End Type
Public Type STYLEBUFW
    dwStyle As IMM_WORDREG_STYLES
    szDescription(0 To (STYLE_DESCRIPTION_SIZE - 1)) As Integer
End Type
Public Type STYLEBUF
    dwStyle As IMM_WORDREG_STYLES
    szDescription(0 To (STYLE_DESCRIPTION_SIZE - 1)) As Integer
End Type

Public Enum IMM_MENU_TYPES
    IMFT_RADIOCHECK = &H00001
    IMFT_SEPARATOR = &H00002
    IMFT_SUBMENU = &H00004
End Enum
Public Enum IMM_MENU_STATES
    IMFS_GRAYED = MFS_GRAYED
    IMFS_DISABLED = MFS_DISABLED
    IMFS_CHECKED = MFS_CHECKED
    IMFS_HILITE = MFS_HILITE
    IMFS_ENABLED = MFS_ENABLED
    IMFS_UNCHECKED = MFS_UNCHECKED
    IMFS_UNHILITE = MFS_UNHILITE
    IMFS_DEFAULT = MFS_DEFAULT
End Enum
Public Const IMEMENUITEM_STRING_SIZE = 80
Public Type IMEMENUITEMINFOA
    cbSize As Long
    fType As IMM_MENU_TYPES
    fState As IMM_MENU_STATES
    wID As Long
    hbmpChecked As LongPtr
    hbmpUnchecked As LongPtr
    dwItemData As Long
    szString(0 To (IMEMENUITEM_STRING_SIZE - 1)) As Byte
    hbmpItem As LongPtr
End Type
Public Type IMEMENUITEMINFOW
    cbSize As Long
    fType As IMM_MENU_TYPES
    fState As IMM_MENU_STATES
    wID As Long
    hbmpChecked As LongPtr
    hbmpUnchecked As LongPtr
    dwItemData As Long
    szString(0 To (IMEMENUITEM_STRING_SIZE - 1)) As Integer
    hbmpItem As LongPtr
End Type
'Alias IMEMENUITEMINFO As IMEMENUITEMINFOW
Public Type IMEMENUITEMINFO
    cbSize As Long
    fType As IMM_MENU_TYPES
    fState As IMM_MENU_STATES
    wID As Long
    hbmpChecked As LongPtr
    hbmpUnchecked As LongPtr
    dwItemData As Long
    szString(0 To (IMEMENUITEM_STRING_SIZE - 1)) As Integer
    hbmpItem As LongPtr
End Type

Public Type IMECHARPOSITION
    dwSize As Long
    dwCharPos As Long
    pt As POINT
    cLineHeight As Long
    rcDocument As RECT
End Type

Public Enum IMM_PROPERTIES
    IME_PROP_AT_CARET = &H00010000
    IME_PROP_SPECIAL_UI = &H00020000
    IME_PROP_CANDLIST_START_FROM_1 = &H00040000
    IME_PROP_UNICODE = &H00080000
    IME_PROP_COMPLETE_ON_UNSELECT = &H00100000
    UI_CAP_2700 = &H00000001
    UI_CAP_ROT90 = &H00000002
    UI_CAP_ROTANY = &H00000004
    SCS_CAP_COMPSTR = &H00000001
    SCS_CAP_MAKEREAD = &H00000002
    SCS_CAP_SETRECONVERTSTRING = &H00000004
    SELECT_CAP_CONVERSION = &H00000001
    SELECT_CAP_SENTENCE = &H00000002
End Enum

Public Enum IMM_VERSIONS
    IMEVER_0310 = &H0003000A
    IMEVER_0400 = &H00040000
End Enum



Public Enum IMM_CONTROL
    IMC_SETCONVERSIONMODE = &H0002
    IMC_SETSENTENCEMODE = &H0004
    IMC_SETOPENSTATUS = &H0006
    IMC_GETCANDIDATEPOS = &H0007
    IMC_SETCANDIDATEPOS = &H0008
    IMC_GETCOMPOSITIONFONT = &H0009
    IMC_SETCOMPOSITIONFONT = &H000A
    IMC_GETCOMPOSITIONWINDOW = &H000B
    IMC_SETCOMPOSITIONWINDOW = &H000C
    IMC_GETSTATUSWINDOWPOS = &H000F
    IMC_SETSTATUSWINDOWPOS = &H0010
    IMC_GETSOFTKBDFONT = &H0011
    IMC_SETSOFTKBDFONT = &H0012
    IMC_GETSOFTKBDPOS = &H0013
    IMC_SETSOFTKBDPOS = &H0014
    IMC_GETSOFTKBDSUBTYPE = &H0015
    IMC_SETSOFTKBDSUBTYPE = &H0016
    IMC_SETSOFTKBDDATA = &H0018
    IMC_CLOSESTATUSWINDOW = &H0021
    IMC_OPENSTATUSWINDOW = &H0022
End Enum

Public Enum IMM_NOTIFY_IME
    NI_CONTEXTUPDATED = &H0003
    NI_OPENCANDIDATE = &H0010
    NI_CLOSECANDIDATE = &H0011
    NI_SELECTCANDIDATESTR = &H0012
    NI_CHANGECANDIDATELIST = &H0013
    NI_FINALIZECONVERSIONRESULT = &H0014
    NI_COMPOSITIONSTR = &H0015
    NI_SETCANDIDATE_PAGESTART = &H0016
    NI_SETCANDIDATE_PAGESIZE = &H0017
    NI_IMEMENUSELECTED = &H0018
End Enum

Public Enum IMM_CONTEXT
    ISC_SHOWUICANDIDATEWINDOW = &H00000001
    ISC_SHOWUICOMPOSITIONWINDOW = &H80000000
    ISC_SHOWUIGUIDELINE = &H40000000
    ISC_SHOWUIALLCANDIDATEWINDOW = &H0000000F
    ISC_SHOWUIALL = &HC000000F
End Enum

Public Enum IMM_CMPSTR_ACTIONS
    CPS_COMPLETE = &H0001
    CPS_CONVERT = &H0002
    CPS_REVERT = &H0003
    CPS_CANCEL = &H0004
End Enum



Public Enum IMM_HOTKEYS
    IME_CHOTKEY_IME_NONIME_TOGGLE = &H10
    IME_CHOTKEY_SHAPE_TOGGLE = &H11
    IME_CHOTKEY_SYMBOL_TOGGLE = &H12
'  Windows for Japanese Edition hot key ID from 0x30 - 0x4F
    IME_JHOTKEY_CLOSE_OPEN = &H30
'  Windows for Korean Edition hot key ID from 0x50 - 0x6F
    IME_KHOTKEY_SHAPE_TOGGLE = &H50
    IME_KHOTKEY_HANJACONVERT = &H51
    IME_KHOTKEY_ENGLISH = &H52
'  Windows for Traditional Chinese Edition hot key ID from 0x70 - 0x8F
    IME_THOTKEY_IME_NONIME_TOGGLE = &H70
    IME_THOTKEY_SHAPE_TOGGLE = &H71
    IME_THOTKEY_SYMBOL_TOGGLE = &H72
'  direct switch hot key ID from 0x100 - 0x11F
    IME_HOTKEY_DSWITCH_FIRST = &H100
    IME_HOTKEY_DSWITCH_LAST = &H11F
'  IME private hot key from 0x200 - 0x21F
    IME_HOTKEY_PRIVATE_FIRST = &H200
    IME_ITHOTKEY_RESEND_RESULTSTR = &H200
    IME_ITHOTKEY_PREVIOUS_COMPOSITION = &H201
    IME_ITHOTKEY_UISTYLE_TOGGLE = &H202
    IME_ITHOTKEY_RECONVERTSTRING = &H203
    IME_HOTKEY_PRIVATE_LAST = &H21F
End Enum

Public Enum IMM_COMPSTR_FLAGS
    GCS_COMPREADSTR = &H0001
    GCS_COMPREADATTR = &H0002
    GCS_COMPREADCLAUSE = &H0004
    GCS_COMPSTR = &H0008
    GCS_COMPATTR = &H0010
    GCS_COMPCLAUSE = &H0020
    GCS_CURSORPOS = &H0080
    GCS_DELTASTART = &H0100
    GCS_RESULTREADSTR = &H0200
    GCS_RESULTREADCLAUSE = &H0400
    GCS_RESULTSTR = &H0800
    GCS_RESULTCLAUSE = &H1000
    GCS_COMP = (GCS_COMPSTR Or GCS_COMPATTR Or GCS_COMPCLAUSE)
    GCS_COMPREAD = (GCS_COMPREADSTR Or GCS_COMPREADATTR Or GCS_COMPREADCLAUSE)
    GCS_RESULT = (GCS_RESULTSTR Or GCS_RESULTCLAUSE)
    GCS_RESULTREAD = (GCS_RESULTREADSTR Or GCS_RESULTREADCLAUSE)
End Enum

Public Enum IMM_COMPOSITION_STYLES
    CS_INSERTCHAR = &H2000
    CS_NOMOVECARET = &H4000
End Enum

Public Enum IMM_GGL_INDEX
    GGL_LEVEL = &H00000001
    GGL_INDEX = &H00000002
    GGL_STRING = &H00000003
    GGL_PRIVATE = &H00000004
End Enum

Public Enum IMM_GGL_RETURNS
    GL_LEVEL_NOGUIDELINE = &H00000000
    GL_LEVEL_FATAL = &H00000001
    GL_LEVEL_ERROR = &H00000002
    GL_LEVEL_WARNING = &H00000003
    GL_LEVEL_INFORMATION = &H00000004

    GL_ID_UNKNOWN = &H00000000
    GL_ID_NOMODULE = &H00000001
    GL_ID_NODICTIONARY = &H00000010
    GL_ID_CANNOTSAVE = &H00000011
    GL_ID_NOCONVERT = &H00000020
    GL_ID_TYPINGERROR = &H00000021
    GL_ID_TOOMANYSTROKE = &H00000022
    GL_ID_READINGCONFLICT = &H00000023
    GL_ID_INPUTREADING = &H00000024
    GL_ID_INPUTRADICAL = &H00000025
    GL_ID_INPUTCODE = &H00000026
    GL_ID_INPUTSYMBOL = &H00000027
    GL_ID_CHOOSECANDIDATE = &H00000028
    GL_ID_REVERSECONVERSION = &H00000029
    GL_ID_PRIVATE_FIRST = &H00008000&
    GL_ID_PRIVATE_LAST = &H0000FFFF&
End Enum

Public Enum IMM_GP_INDEX
    IGP_GETIMEVERSION = (-4)
    IGP_PROPERTY = &H00000004
    IGP_CONVERSION = &H00000008
    IGP_SENTENCE = &H0000000c
    IGP_UI = &H00000010
    IGP_SETCOMPSTR = &H00000014
    IGP_SELECT = &H00000018
End Enum

Public Enum IMM_SCS_FLAGS
    SCS_SETSTR = (GCS_COMPREADSTR Or GCS_COMPSTR)
    SCS_CHANGEATTR = (GCS_COMPREADATTR Or GCS_COMPATTR)
    SCS_CHANGECLAUSE = (GCS_COMPREADCLAUSE Or GCS_COMPCLAUSE)
    SCS_SETRECONVERTSTRING = &H00010000
    SCS_QUERYRECONVERTSTRING = &H00020000
End Enum

Public Enum IMM_CS_ATTR
    ATTR_INPUT = &H00
    ATTR_TARGET_CONVERTED = &H01
    ATTR_CONVERTED = &H02
    ATTR_TARGET_NOTCONVERTED = &H03
    ATTR_INPUT_ERROR = &H04
    ATTR_FIXEDCONVERTED = &H05
End Enum

Public Enum IMM_GCL_DIRECTION
    GCL_CONVERSION = &H0001
    GCL_REVERSECONVERSION = &H0002
    GCL_REVERSE_LENGTH = &H0003
End Enum

Public Enum IMM_CONV_MODE
    IME_CMODE_ALPHANUMERIC = &H0000
    IME_CMODE_NATIVE = &H0001
    IME_CMODE_CHINESE = IME_CMODE_NATIVE
    IME_CMODE_HANGUL = IME_CMODE_NATIVE
    IME_CMODE_JAPANESE = IME_CMODE_NATIVE
    IME_CMODE_KATAKANA = &H0002  ' only effect under IME_CMODE_NATIVE
    IME_CMODE_LANGUAGE = &H0003
    IME_CMODE_FULLSHAPE = &H0008
    IME_CMODE_ROMAN = &H0010
    IME_CMODE_CHARCODE = &H0020
    IME_CMODE_HANJACONVERT = &H0040
    IME_CMODE_NATIVESYMBOL = &H0080
 
    IME_CMODE_HANGEUL = IME_CMODE_NATIVE
    IME_CMODE_SOFTKBD = &H0080
    IME_CMODE_NOCONVERSION = &H0100
    IME_CMODE_EUDC = &H0200
    IME_CMODE_SYMBOL = &H0400
    IME_CMODE_FIXED = &H0800
    IME_CMODE_RESERVED = &HF0000000
End Enum

Public Enum IMM_SENTC_MODE
    IME_SMODE_NONE = &H0000
    IME_SMODE_PLAURALCLAUSE = &H0001
    IME_SMODE_SINGLECONVERT = &H0002
    IME_SMODE_AUTOMATIC = &H0004
    IME_SMODE_PHRASEPREDICT = &H0008
    IME_SMODE_CONVERSATION = &H0010
    IME_SMODE_RESERVED = &H0000F000&
End Enum

Public Enum IMM_WM_NOTIFY
    IMN_CLOSESTATUSWINDOW = &H0001
    IMN_OPENSTATUSWINDOW = &H0002
    IMN_CHANGECANDIDATE = &H0003
    IMN_CLOSECANDIDATE = &H0004
    IMN_OPENCANDIDATE = &H0005
    IMN_SETCONVERSIONMODE = &H0006
    IMN_SETSENTENCEMODE = &H0007
    IMN_SETOPENSTATUS = &H0008
    IMN_SETCANDIDATEPOS = &H0009
    IMN_SETCOMPOSITIONFONT = &H000A
    IMN_SETCOMPOSITIONWINDOW = &H000B
    IMN_SETSTATUSWINDOWPOS = &H000C
    IMN_GUIDELINE = &H000D
    IMN_PRIVATE = &H000E
End Enum

Public Enum IMM_WM_REQUEST
    IMR_COMPOSITIONWINDOW = &H0001
    IMR_CANDIDATEWINDOW = &H0002
    IMR_COMPOSITIONFONT = &H0003
    IMR_RECONVERTSTRING = &H0004
    IMR_CONFIRMRECONVERTSTRING = &H0005
    IMR_QUERYCHARPOSITION = &H0006
    IMR_DOCUMENTFEED = &H0007
End Enum

Public Const IMM_ERROR_NODATA  = (-1)
Public Const IMM_ERROR_GENERAL  = (-2)

Public Enum IMM_DLG_MODE
    IME_CONFIG_GENERAL = 1
    IME_CONFIG_REGISTERWORD = 2
    IME_CONFIG_SELECTDICTIONARY = 3
End Enum

Public Enum IMM_ESCAPE
    IME_ESC_QUERY_SUPPORT = &H0003
    IME_ESC_RESERVED_FIRST = &H0004
    IME_ESC_RESERVED_LAST = &H07FF
    IME_ESC_PRIVATE_FIRST = &H0800
    IME_ESC_PRIVATE_LAST = &H0FFF
    IME_ESC_SEQUENCE_TO_INTERNAL = &H1001
    IME_ESC_GET_EUDC_DICTIONARY = &H1003
    IME_ESC_SET_EUDC_DICTIONARY = &H1004
    IME_ESC_MAX_KEY = &H1005
    IME_ESC_IME_NAME = &H1006
    IME_ESC_SYNC_HOTKEY = &H1007
    IME_ESC_HANJA_MODE = &H1008
    IME_ESC_AUTOMATA = &H1009
    IME_ESC_PRIVATE_HOTKEY = &H100a
    IME_ESC_GETHELPFILENAME = &H100b
End Enum

Public Enum IMM_CTXEX_FLAGS
    IACE_CHILDREN = &H0001
    IACE_DEFAULT = &H0010
    IACE_IGNORENOCONTEXT = &H0020
End Enum

Public Enum IMM_GMI_FLAGS
    IGIMIF_RIGHTMENU = 1
End Enum
Public Enum IMM_GMI_TYPES
    IGIMII_CMODE = &H0001
    IGIMII_SMODE = &H0002
    IGIMII_CONFIGURE = &H0004
    IGIMII_TOOLS = &H0008
    IGIMII_HELP = &H0010
    IGIMII_OTHER = &H0020
    IGIMII_INPUTTOOLS = &H0040
End Enum

Public Enum IMM_SK_TYPES
    SOFTKEYBOARD_TYPE_T1 = &H0001
'  for Windows Simplified Chinese Edition
    SOFTKEYBOARD_TYPE_C1 = &H0002
End Enum

Public Type COMPOSITIONSTRING
    dwSize As Long
    dwCompReadAttrLen As Long
    dwCompReadAttrOffset As Long
    dwCompReadClauseLen As Long
    dwCompReadClauseOffset As Long
    dwCompReadStrLen As Long
    dwCompReadStrOffset As Long
    dwCompAttrLen As Long
    dwCompAttrOffset As Long
    dwCompClauseLen As Long
    dwCompClauseOffset As Long
    dwCompStrLen As Long
    dwCompStrOffset As Long
    dwCursorPos As Long
    dwDeltaStart As Long
    dwResultReadClauseLen As Long
    dwResultReadClauseOffset As Long
    dwResultReadStrLen As Long
    dwResultReadStrOffset As Long
    dwResultClauseLen As Long
    dwResultClauseOffset As Long
    dwResultStrLen As Long
    dwResultStrOffset As Long
    dwPrivateSize As Long
    dwPrivateOffset As Long
End Type

Public Type GUIDELINE
    dwSize As Long
    dwLevel As Long
    dwIndex As Long
    dwStrLen As Long
    dwStrOffset As Long
    dwPrivateSize As Long
    dwPrivateOffset As Long
End Type

Public Type TRANSMSG
    message As Long
    wParam As LongPtr
    lParam As LongPtr
End Type
[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type TRANSMSGLIST
    uMsgCount As Long
    TransMsg() As TRANSMSG
End Type

Public Type CANDIDATEINFO
    dwSize As Long
    dwCount As Long
    dwOffset(0 To 31) As Long
    dwPrivateSize As Long
    dwPrivateOffset As Long
End Type

Public Enum IMM_ICTX_INIT
    INIT_STATUSWNDPOS = &H00000001
    INIT_CONVERSION = &H00000002
    INIT_SENTENCE = &H00000004
    INIT_LOGFONT = &H00000008
    INIT_COMPFORM = &H00000010
    INIT_SOFTKBDPOS = &H00000020
End Enum
Public Type INPUTCONTEXT
    hWnd As LongPtr
    fOpen As BOOL
    ptStatusWndPos As POINT
    ptSoftKbdPos As POINT
    fdwConversion As IMM_CONV_MODE
    fdwSentence As IMM_SENTC_MODE
    lfFont As LOGFONTW
    cfCompForm As COMPOSITIONFORM
    cfCandForm(0 To 3) As CANDIDATEFORM
    hCompStr As LongPtr
    hCandInfo As LongPtr
    hGuideLine As LongPtr
    hPrivate As LongPtr
    dwNumMsgBuf As Long
    hMsgBuf As LongPtr
    fdwInit As IMM_ICTX_INIT
    dwReserve(0 To 2) As Long
End Type

Public Enum IME_UI_CAPS
    UI_CAP_SOFTKBD = &H00010000
End Enum
Public Type IMEINFO
    dwPrivateDataSize As Long
    fdwProperty As Long
    fdwConversionCaps As Long
    fdwSentenceCaps As Long
    fdwUICaps As IME_UI_CAPS
    fdwSCSCaps As Long
    fdwSelectCaps As Long
End Type

Public Type SOFTKBDDATA
    uCount As Long
    wCode(0 To 255) As Integer
End Type

Public Enum IMM_GWL
    IMMGWL_IMC = 0
    IMMGWL_PRIVATE = 4  '   (sizeof(LONG))
End Enum

Public Enum IMM_GWLP
    IMMGWLP_IMC = 0
    IMMGWLP_PRIVATE = LenB(Of LongPtr)
End Enum

Public Enum IMM_SYSINFO_FLAGS
    IME_SYSINFO_WINLOGON = &H0001
End Enum

Public Enum IMM_IME_PROP_BITS
    IME_PROP_END_UNLOAD = &H00000001
    IME_PROP_KBD_CHAR_FIRST = &H00000002
    IME_PROP_IGNORE_UPKEYS = &H00000004
    IME_PROP_NEED_ALTKEY = &H00000008
    IME_PROP_NO_KEYS_ON_CLOSE = &H00000010
    IME_PROP_ACCEPT_WIDE_VKEY = &H00000020
End Enum

Public Const IMN_SOFTKBDDESTROYED = &H0011

Public Const IME_UI_CLASS_NAME_SIZE  = 16
'  String buffer length of ImeEscape
Public Const IME_ESC_STRING_BUFFER_SIZE  = 80


Public Declare PtrSafe Function ImmInstallIMEA Lib "imm32" (ByVal lpszIMEFileName As String, ByVal lpszLayoutText As String) As LongPtr
Public Declare PtrSafe Function ImmInstallIMEW Lib "imm32" (ByVal lpszIMEFileName As LongPtr, ByVal lpszLayoutText As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function ImmInstallIME Lib "imm32" Alias "ImmInstallIMEW" (ByVal lpszIMEFileName As String, ByVal lpszLayoutText As String) As LongPtr
Public Declare PtrSafe Function ImmGetDefaultIMEWnd Lib "imm32" (ByVal hWnd As LongPtr) As LongPtr
Public Declare PtrSafe Function ImmGetDescriptionA Lib "imm32" (ByVal hKL As LongPtr, ByVal lpszDescription As String, ByVal uBufLen As Long) As Long
Public Declare PtrSafe Function ImmGetDescriptionW Lib "imm32" (ByVal hKL As LongPtr, ByVal lpszDescription As LongPtr, ByVal uBufLen As Long) As Long
Public DeclareWide PtrSafe Function ImmGetDescription Lib "imm32" Alias "ImmGetDescriptionW" (ByVal hKL As LongPtr, ByVal lpszDescription As String, ByVal uBufLen As Long) As Long
Public Declare PtrSafe Function ImmGetIMEFileNameA Lib "imm32" (ByVal hKL As LongPtr, ByVal lpszFileName As String, ByVal uBufLen As Long) As Long
Public Declare PtrSafe Function ImmGetIMEFileNameW Lib "imm32" (ByVal hKL As LongPtr, ByVal lpszFileName As LongPtr, ByVal uBufLen As Long) As Long
Public DeclareWide PtrSafe Function ImmGetIMEFileName Lib "imm32" Alias "ImmGetIMEFileNameW" (ByVal hKL As LongPtr, ByVal lpszFileName As String, ByVal uBufLen As Long) As Long
Public Declare PtrSafe Function ImmGetProperty Lib "imm32" (ByVal hKL As LongPtr, ByVal dwIndex As IMM_GP_INDEX) As IMM_PROPERTIES
Public Declare PtrSafe Function ImmIsIME Lib "imm32" (ByVal hKL As LongPtr) As BOOL
Public Declare PtrSafe Function ImmSimulateHotKey Lib "imm32" (ByVal hWnd As LongPtr, ByVal dwKey As IMM_HOTKEYS) As BOOL
Public Declare PtrSafe Function ImmCreateContext Lib "imm32" () As LongPtr
Public Declare PtrSafe Function ImmDestroyContext Lib "imm32" (ByVal hIMC As LongPtr) As BOOL
Public Declare PtrSafe Function ImmGetContext Lib "imm32" (ByVal hWnd As LongPtr) As LongPtr
Public Declare PtrSafe Function ImmReleaseContext Lib "imm32" (ByVal hWnd As LongPtr, ByVal hIMC As LongPtr) As BOOL
Public Declare PtrSafe Function ImmAssociateContext Lib "imm32" (ByVal hWnd As LongPtr, ByVal hIMC As LongPtr) As LongPtr
Public Declare PtrSafe Function ImmAssociateContextEx Lib "imm32" (ByVal hWnd As LongPtr, ByVal hIMC As LongPtr, ByVal dwFlags As IMM_CTXEX_FLAGS) As BOOL
Public Declare PtrSafe Function ImmGetCompositionStringA Lib "imm32" (ByVal hIMC As LongPtr, ByVal dwIndex As IMM_COMPSTR_FLAGS, lpBuf As Any, ByVal dwBufLen As Long) As Long
Public Declare PtrSafe Function ImmGetCompositionStringW Lib "imm32" (ByVal hIMC As LongPtr, ByVal dwIndex As IMM_COMPSTR_FLAGS, lpBuf As Any, ByVal dwBufLen As Long) As Long
Public DeclareWide PtrSafe Function ImmGetCompositionString Lib "imm32" Alias "ImmGetCompositionStringW" (ByVal hIMC As LongPtr, ByVal dwIndex As IMM_COMPSTR_FLAGS, lpBuf As Any, ByVal dwBufLen As Long) As Long
Public Declare PtrSafe Function ImmSetCompositionStringA Lib "imm32" (ByVal hIMC As LongPtr, ByVal dwIndex As IMM_SCS_FLAGS, lpComp As Any, ByVal dwCompLen As Long, lpRead As Any, ByVal dwReadLen As Long) As BOOL
Public Declare PtrSafe Function ImmSetCompositionStringW Lib "imm32" (ByVal hIMC As LongPtr, ByVal dwIndex As IMM_SCS_FLAGS, lpComp As Any, ByVal dwCompLen As Long, lpRead As Any, ByVal dwReadLen As Long) As BOOL
Public DeclareWide PtrSafe Function ImmSetCompositionString Lib "imm32" Alias "ImmSetCompositionStringW" (ByVal hIMC As LongPtr, ByVal dwIndex As IMM_SCS_FLAGS, lpComp As Any, ByVal dwCompLen As Long, lpRead As Any, ByVal dwReadLen As Long) As BOOL
Public Declare PtrSafe Function ImmGetCandidateListCountA Lib "imm32" (ByVal hIMC As LongPtr, lpdwListCount As Long) As Long
Public Declare PtrSafe Function ImmGetCandidateListCountW Lib "imm32" (ByVal hIMC As LongPtr, lpdwListCount As Long) As Long
Public DeclareWide PtrSafe Function ImmGetCandidateListCount Lib "imm32" Alias "ImmGetCandidateListCountW" (ByVal hIMC As LongPtr, lpdwListCount As Long) As Long
Public Declare PtrSafe Function ImmGetCandidateListA Lib "imm32" (ByVal hIMC As LongPtr, ByVal deIndex As Long, lpCandList As Any /* CANDIDATELIST */, ByVal dwBufLen As Long) As Long
Public Declare PtrSafe Function ImmGetCandidateListW Lib "imm32" (ByVal hIMC As LongPtr, ByVal deIndex As Long, lpCandList As Any /* CANDIDATELIST */, ByVal dwBufLen As Long) As Long
Public DeclareWide PtrSafe Function ImmGetCandidateList Lib "imm32" Alias "ImmGetCandidateListW" (ByVal hIMC As LongPtr, ByVal deIndex As Long, lpCandList As Any /* CANDIDATELIST */, ByVal dwBufLen As Long) As Long
Public Declare PtrSafe Function ImmGetGuideLineA Lib "imm32" (ByVal hIMC As LongPtr, ByVal dwIndex As IMM_GGL_INDEX, ByVal lpBuf As String, ByVal dwBufLen As Long) As IMM_GGL_RETURNS
Public Declare PtrSafe Function ImmGetGuideLineW Lib "imm32" (ByVal hIMC As LongPtr, ByVal dwIndex As IMM_GGL_INDEX, ByVal lpBuf As LongPtr, ByVal dwBufLen As Long) As IMM_GGL_RETURNS
Public DeclareWide PtrSafe Function ImmGetGuideLine Lib "imm32" Alias "ImmGetGuideLineW" (ByVal hIMC As LongPtr, ByVal dwIndex As IMM_GGL_INDEX, ByVal lpBuf As String, ByVal dwBufLen As Long) As IMM_GGL_RETURNS
Public Declare PtrSafe Function ImmGetConversionStatus Lib "imm32" (ByVal hIMC As LongPtr, lpfdwConversion As IMM_CONV_MODE, lpfdwSentence As IMM_SENTC_MODE) As BOOL
Public Declare PtrSafe Function ImmSetConversionStatus Lib "imm32" (ByVal hIMC As LongPtr, ByVal dwConversion As IMM_CONV_MODE, ByVal dwSentence As IMM_SENTC_MODE) As BOOL
Public Declare PtrSafe Function ImmGetOpenStatus Lib "imm32" (ByVal hIMC As LongPtr) As BOOL
Public Declare PtrSafe Function ImmSetOpenStatus Lib "imm32" (ByVal hIMC As LongPtr, ByVal fOpen As BOOL) As BOOL
Public Declare PtrSafe Function ImmGetCompositionFontA Lib "imm32" (ByVal hIMC As LongPtr, lplf As LOGFONTA) As BOOL
Public Declare PtrSafe Function ImmGetCompositionFontW Lib "imm32" (ByVal hIMC As LongPtr, lplf As LOGFONTW) As BOOL
Public DeclareWide PtrSafe Function ImmGetCompositionFont Lib "imm32" Alias "ImmGetCompositionFontW" (ByVal hIMC As LongPtr, lplf As LOGFONT) As BOOL
Public Declare PtrSafe Function ImmSetCompositionFontA Lib "imm32" (ByVal hIMC As LongPtr, lplf As LOGFONTA) As BOOL
Public Declare PtrSafe Function ImmSetCompositionFontW Lib "imm32" (ByVal hIMC As LongPtr, lplf As LOGFONTW) As BOOL
Public DeclareWide PtrSafe Function ImmSetCompositionFont Lib "imm32" Alias "ImmSetCompositionFontW" (ByVal hIMC As LongPtr, lplf As LOGFONT) As BOOL
Public Declare PtrSafe Function ImmConfigureIMEA Lib "imm32" (ByVal hKL As LongPtr, ByVal hWnd As LongPtr, ByVal dwMode As IMM_DLG_MODE, lpData As REGISTERWORDA) As BOOL
Public Declare PtrSafe Function ImmConfigureIMEW Lib "imm32" (ByVal hKL As LongPtr, ByVal hWnd As LongPtr, ByVal dwMode As IMM_DLG_MODE, lpData As REGISTERWORDW) As BOOL
Public DeclareWide PtrSafe Function ImmConfigureIME Lib "imm32" Alias "ImmConfigureIMEW" (ByVal hKL As LongPtr, ByVal hWnd As LongPtr, ByVal dwMode As IMM_DLG_MODE, lpData As REGISTERWORD) As BOOL
Public Declare PtrSafe Function ImmEscapeA Lib "imm32" (ByVal hKL As LongPtr, ByVal hIMC As LongPtr, ByVal uEscape As IMM_ESCAPE, lpData As Any) As LongPtr
Public Declare PtrSafe Function ImmEscapeW Lib "imm32" (ByVal hKL As LongPtr, ByVal hIMC As LongPtr, ByVal uEscape As IMM_ESCAPE, lpData As Any) As LongPtr
Public DeclareWide PtrSafe Function ImmEscape Lib "imm32" Alias "ImmEscapeW" (ByVal hKL As LongPtr, ByVal hIMC As LongPtr, ByVal uEscape As IMM_ESCAPE, lpData As Any) As LongPtr
Public Declare PtrSafe Function ImmGetConversionListA Lib "imm32" (ByVal hKL As LongPtr, ByVal hIMC As LongPtr, ByVal lpSrc As String, lpDst As Any /* CANDIDATELIST */, ByVal dwBufLen As Long, ByVal uFlag As IMM_GCL_DIRECTION) As Long
Public Declare PtrSafe Function ImmGetConversionListW Lib "imm32" (ByVal hKL As LongPtr, ByVal hIMC As LongPtr, ByVal lpSrc As LongPtr, lpDst As Any /* CANDIDATELIST */, ByVal dwBufLen As Long, ByVal uFlag As IMM_GCL_DIRECTION) As Long
Public DeclareWide PtrSafe Function ImmGetConversionList Lib "imm32" Alias "ImmGetConversionListW" (ByVal hKL As LongPtr, ByVal hIMC As LongPtr, ByVal lpSrc As String, lpDst As Any /* CANDIDATELIST */, ByVal dwBufLen As Long, ByVal uFlag As IMM_GCL_DIRECTION) As Long
Public Declare PtrSafe Function ImmNotifyIME Lib "imm32" (ByVal hIMC As LongPtr, ByVal dwAction As IMM_NOTIFY_IME, ByVal dwIndex As IMM_CMPSTR_ACTIONS, ByVal dwValue As Long) As BOOL
Public Declare PtrSafe Function ImmGetStatusWindowPos Lib "imm32" (ByVal hIMC As LongPtr, lpptPos As POINT) As BOOL
Public Declare PtrSafe Function ImmSetStatusWindowPos Lib "imm32" (ByVal hIMC As LongPtr, lpptPos As POINT) As BOOL
Public Declare PtrSafe Function ImmGetCompositionWindow Lib "imm32" (ByVal hIMC As LongPtr, lpCompForm As COMPOSITIONFORM) As BOOL
Public Declare PtrSafe Function ImmSetCompositionWindow Lib "imm32" (ByVal hIMC As LongPtr, lpCompForm As COMPOSITIONFORM) As BOOL
Public Declare PtrSafe Function ImmGetCandidateWindow Lib "imm32" (ByVal hIMC As LongPtr, lpCandidate As CANDIDATEFORM) As BOOL
Public Declare PtrSafe Function ImmSetCandidateWindow Lib "imm32" (ByVal hIMC As LongPtr, lpCandidate As CANDIDATEFORM) As BOOL
Public Declare PtrSafe Function ImmIsUIMessageA Lib "imm32" (ByVal hWnd As LongPtr, ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function ImmIsUIMessageW Lib "imm32" (ByVal hWnd As LongPtr, ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ImmIsUIMessage Lib "imm32" Alias "ImmIsUIMessageW" (ByVal hWnd As LongPtr, ByVal uMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr) As BOOL
Public Declare PtrSafe Function ImmGetVirtualKey Lib "imm32" (ByVal hWnd As LongPtr) As VirtualKeyCodes
Public Declare PtrSafe Function ImmRegisterWordA Lib "imm32" (ByVal hKL As LongPtr, ByVal lpszReading As String, ByVal dwStyle As IMM_WORDREG_STYLES, ByVal lpszRegister As String) As BOOL
Public Declare PtrSafe Function ImmRegisterWordW Lib "imm32" (ByVal hKL As LongPtr, ByVal lpszReading As LongPtr, ByVal dwStyle As IMM_WORDREG_STYLES, ByVal lpszRegister As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ImmRegisterWord Lib "imm32" Alias "ImmRegisterWordW" (ByVal hKL As LongPtr, ByVal lpszReading As String, ByVal dwStyle As IMM_WORDREG_STYLES, ByVal lpszRegister As String) As BOOL
Public Declare PtrSafe Function ImmUnregisterWordA Lib "imm32" (ByVal hKL As LongPtr, ByVal lpszReading As String, ByVal dwStyle As IMM_WORDREG_STYLES, ByVal lpszUnregister As String) As BOOL
Public Declare PtrSafe Function ImmUnregisterWordW Lib "imm32" (ByVal hKL As LongPtr, ByVal lpszReading As LongPtr, ByVal dwStyle As IMM_WORDREG_STYLES, ByVal lpszUnregister As LongPtr) As BOOL
Public DeclareWide PtrSafe Function ImmUnregisterWord Lib "imm32" Alias "ImmUnregisterWordW" (ByVal hKL As LongPtr, ByVal lpszReading As String, ByVal dwStyle As IMM_WORDREG_STYLES, ByVal lpszUnregister As String) As BOOL
Public Declare PtrSafe Function ImmGetRegisterWordStyleA Lib "imm32" (ByVal hKL As LongPtr, ByVal nItem As Long, lpStyleBuf As STYLEBUFA) As Long
Public Declare PtrSafe Function ImmGetRegisterWordStyleW Lib "imm32" (ByVal hKL As LongPtr, ByVal nItem As Long, lpStyleBuf As STYLEBUFW) As Long
Public DeclareWide PtrSafe Function ImmGetRegisterWordStyle Lib "imm32" Alias "ImmGetRegisterWordStyleW" (ByVal hKL As LongPtr, ByVal nItem As Long, lpStyleBuf As STYLEBUF) As Long
Public Declare PtrSafe Function ImmEnumRegisterWordA Lib "imm32" (ByVal hKL As LongPtr, ByVal lpfnEnumProc As LongPtr, ByVal lpszReading As String, ByVal dwStyle As IMM_WORDREG_STYLES, ByVal lpszRegister As String, lpData As Any) As Long
Public Declare PtrSafe Function ImmEnumRegisterWordW Lib "imm32" (ByVal hKL As LongPtr, ByVal lpfnEnumProc As LongPtr, ByVal lpszReading As LongPtr, ByVal dwStyle As IMM_WORDREG_STYLES, ByVal lpszRegister As LongPtr, lpData As Any) As Long
Public DeclareWide PtrSafe Function ImmEnumRegisterWord Lib "imm32" Alias "ImmEnumRegisterWordW" (ByVal hKL As LongPtr, ByVal lpfnEnumProc As LongPtr, ByVal lpszReading As String, ByVal dwStyle As IMM_WORDREG_STYLES, ByVal lpszRegister As String, lpData As Any) As Long
Public Declare PtrSafe Function ImmDisableIME Lib "imm32" (ByVal idThread As Long) As BOOL
Public DeclareWide PtrSafe Function ImmEnumInputContext Lib "imm32" (ByVal idThread As Long, ByVal lpfn As LongPtr, lParam As Any) As BOOL
Public Declare PtrSafe Function ImmGetImeMenuItemsA Lib "imm32" (ByVal hIMC As LongPtr, ByVal dwFlags As IMM_GMI_FLAGS, ByVal dwType As IMM_GMI_TYPES, lpImeParentMenu As IMEMENUITEMINFOA, lpImeMenu As IMEMENUITEMINFOA, ByVal dwSize As Long) As Long
Public Declare PtrSafe Function ImmGetImeMenuItemsW Lib "imm32" (ByVal hIMC As LongPtr, ByVal dwFlags As IMM_GMI_FLAGS, ByVal dwType As IMM_GMI_TYPES, lpImeParentMenu As IMEMENUITEMINFOW, lpImeMenu As IMEMENUITEMINFOW, ByVal dwSize As Long) As Long
Public DeclareWide PtrSafe Function ImmGetImeMenuItems Lib "imm32" Alias "ImmGetImeMenuItemsW" (ByVal hIMC As LongPtr, ByVal dwFlags As IMM_GMI_FLAGS, ByVal dwType As IMM_GMI_TYPES, lpImeParentMenu As IMEMENUITEMINFO, lpImeMenu As IMEMENUITEMINFO, ByVal dwSize As Long) As Long
Public Declare PtrSafe Function ImmDisableTextFrameService Lib "imm32" (ByVal idThread As Long) As BOOL
Public Declare PtrSafe Function ImmDisableLegacyIME Lib "imm32" () As BOOL
Public Declare PtrSafe Function ImmGetHotKey Lib "imm32" (ByVal dwHotKeyID As Long, lpuModifiers As HotKeyModifiers, lpuVKey As VirtualKeyCodes, phKL As LongPtr) As BOOL
Public Declare PtrSafe Function ImmSetHotKey Lib "imm32" (ByVal dwHotKeyID As Long, ByVal uModifiers As HotKeyModifiers, ByVal uVKey As VirtualKeyCodes, ByVal hKL As LongPtr) As BOOL
Public Declare PtrSafe Function ImmGenerateMessage Lib "imm32" (ByVal hIMC As LongPtr) As BOOL
Public Declare PtrSafe Function ImmRequestMessageA Lib "imm32" (ByVal hIMC As LongPtr, ByVal wParam As LongPtr, lParam As Any) As LongPtr
Public Declare PtrSafe Function ImmRequestMessageW Lib "imm32" (ByVal hIMC As LongPtr, ByVal wParam As LongPtr, lParam As Any) As LongPtr
Public DeclareWide PtrSafe Function ImmRequestMessage Lib "imm32" Alias "ImmRequestMessageW" (ByVal hIMC As LongPtr, ByVal wParam As LongPtr, lParam As Any) As LongPtr
Public Declare PtrSafe Function ImmCreateSoftKeyboard Lib "imm32" (ByVal uType As IMM_SK_TYPES, ByVal hOwner As LongPtr, ByVal x As Long, ByVal y As Long) As LongPtr
Public Declare PtrSafe Function ImmDestroySoftKeyboard Lib "imm32" (ByVal hWnd As LongPtr) As BOOL
Public Declare PtrSafe Function ImmShowSoftKeyboard Lib "imm32" (ByVal hSoftKbdWnd As LongPtr, ByVal nCmdShow As SHOWWINDOW) As BOOL
Public Declare PtrSafe Function ImmLockIMC Lib "imm32" (ByVal hIMC As LongPtr) As LongPtr
Public Declare PtrSafe Function ImmUnlockIMC Lib "imm32" (ByVal hIMC As LongPtr) As BOOL
Public Declare PtrSafe Function ImmGetIMCLockCount Lib "imm32" (ByVal hIMC As LongPtr) As Long
Public Declare PtrSafe Function ImmCreateIMCC Lib "imm32" (ByVal dwSize As Long) As LongPtr
Public Declare PtrSafe Function ImmDestroyIMCC Lib "imm32" (ByVal hIMC As LongPtr) As LongPtr
Public Declare PtrSafe Function ImmLockIMCC Lib "imm32" (ByVal hIMCC As LongPtr) As LongPtr
Public Declare PtrSafe Function ImmUnlockIMCC Lib "imm32" (ByVal hIMCC As LongPtr) As BOOL
Public Declare PtrSafe Function ImmGetIMCCLockCount Lib "imm32" (ByVal hIMCC As LongPtr) As Long
Public Declare PtrSafe Function ImmReSizeIMCC Lib "imm32" (ByVal hIMCC As LongPtr, ByVal dwSize As Long) As LongPtr
Public Declare PtrSafe Function ImmGetIMCCSize Lib "imm32" (ByVal hIMCC As LongPtr) As Long


'I can't find enough documentation on the Ime* APIs to know what module they're from...
'They may just be prototypes for user implementation. 
'If you know, let me know. Create an issue in the repo, msg me on tB discord, or email me.

	
#End Region

#Region "powrprof"
/*
Powerbase.h

*/

Public Enum POWER_USER_PRESENCE_TYPE
    UserNotPresent = 0
    UserPresent = 1
    UserUnknown = &Hff
End Enum
Public Type POWER_USER_PRESENCE
    UserPresence As POWER_USER_PRESENCE_TYPE
End Type

Public Type POWER_SESSION_CONNECT
    Connected As Byte ' TRUE - connected, FALSE - disconnected
    Console As Byte ' TRUE - console, FALSE - TS (not used for Connected = FALSE)
End Type

Public Type POWER_SESSION_TIMEOUTS
    InputTimeout As Long
    DisplayTimeout As Long
End Type

Public Type POWER_SESSION_RIT_STATE
    Active As Byte ' TRUE - RIT input received, FALSE - RIT timeout
    LastInputTime As LongLong ' last input time held for this session
End Type

Public Type POWER_SESSION_WINLOGON
    SessionId As Long ' the Win32k session identifier
    Console As Byte ' TRUE - for console session, FALSE - for remote session
    Locked As Byte ' TRUE - lock, FALSE - unlock
End Type

Public Type POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES
    IsAllowed As Byte
End Type

Public Type POWER_IDLE_RESILIENCY
    CoalescingTimeout As Long
    IdleResiliencyPeriod As Long
End Type

Public Enum POWER_MONITOR_REQUEST_REASON
    MonitorRequestReasonUnknown = 0
    MonitorRequestReasonPowerButton = 1
    MonitorRequestReasonRemoteConnection = 2
    MonitorRequestReasonScMonitorpower = 3
    MonitorRequestReasonUserInput = 4
    MonitorRequestReasonAcDcDisplayBurst = 5
    MonitorRequestReasonUserDisplayBurst = 6
    MonitorRequestReasonPoSetSystemState = 7
    MonitorRequestReasonSetThreadExecutionState = 8
    MonitorRequestReasonFullWake = 9
    MonitorRequestReasonSessionUnlock = 10
    MonitorRequestReasonScreenOffRequest = 11
    MonitorRequestReasonIdleTimeout = 12
    MonitorRequestReasonPolicyChange = 13
    MonitorRequestReasonSleepButton = 14
    MonitorRequestReasonLid = 15
    MonitorRequestReasonBatteryCountChange = 16
    MonitorRequestReasonGracePeriod = 17
    MonitorRequestReasonPnP = 18
    MonitorRequestReasonDP = 19
    MonitorRequestReasonSxTransition = 20
    MonitorRequestReasonSystemIdle = 21
    MonitorRequestReasonNearProximity = 22
    MonitorRequestReasonThermalStandby = 23
    MonitorRequestReasonResumePdc = 24
    MonitorRequestReasonResumeS4 = 25
    MonitorRequestReasonTerminal = 26
    MonitorRequestReasonPdcSignal = 27
    MonitorRequestReasonAcDcDisplayBurstSuppressed = 28
    MonitorRequestReasonSystemStateEntered = 29 ' When CS exit happens because system
    '  transition to S4/S5, please note this
    '  reason is different than ReasonSxTransition.
    MonitorRequestReasonWinrt = 30
    MonitorRequestReasonUserInputKeyboard = 31
    MonitorRequestReasonUserInputMouse = 32
    MonitorRequestReasonUserInputTouchpad = 33
    MonitorRequestReasonUserInputPen = 34
    MonitorRequestReasonUserInputAccelerometer = 35
    MonitorRequestReasonUserInputHid = 36
    MonitorRequestReasonUserInputPoUserPresent = 37
    MonitorRequestReasonUserInputSessionSwitch = 38
    MonitorRequestReasonUserInputInitialization = 39
    MonitorRequestReasonPdcSignalWindowsMobilePwrNotif = 40 ' PDC_SIGNAL_PROVIDER_PWRNOTIF_SVC
    MonitorRequestReasonPdcSignalWindowsMobileShell = 41 ' PDC_SIGNAL_PROVIDER_UM_CS_CONTROL
    MonitorRequestReasonPdcSignalHeyCortana = 42 ' PDC_SIGNAL_PROVIDER_HEY_CORTANA
    MonitorRequestReasonPdcSignalHolographicShell = 43 ' PDC_SIGNAL_PROVIDER_HOLOSI_CRITICAL_BATTERY_WAKE
    MonitorRequestReasonPdcSignalFingerprint = 44 ' PDC_SIGNAL_PROVIDER_WINBIO
    MonitorRequestReasonDirectedDrips = 45
    MonitorRequestReasonDim = 46
    MonitorRequestReasonBuiltinPanel = 47
    MonitorRequestReasonDisplayRequiredUnDim = 48
    MonitorRequestReasonBatteryCountChangeSuppressed = 49
    MonitorRequestReasonResumeModernStandby = 50
    MonitorRequestReasonTerminalInit = 51
    MonitorRequestReasonPdcSignalSensorsHumanPresence = 52 ' PDC_SIGNAL_PROVIDER_SENSORS_HUMAN_PRESENCE_MONITOR
    MonitorRequestReasonBatteryPreCritical = 53
    MonitorRequestReasonUserInputTouch = 54
    MonitorRequestReasonAusterityBatteryDrain = 55
    MonitorRequestReasonDozeRestrictedStandby
    MonitorRequestReasonSmartRestrictedStandby
    MonitorRequestReasonMax
End Enum
Public Enum POWER_MONITOR_REQUEST_TYPE
    MonitorRequestTypeOff
    MonitorRequestTypeOnAndPresent
    MonitorRequestTypeToggleOn
End Enum
Public Type POWER_MONITOR_INVOCATION
    Console As Byte
    RequestReason As POWER_MONITOR_REQUEST_REASON
End Type

Public Enum POWER_LIMIT_TYPES
    PowerLimitContinuous = 0
    PowerLimitBurst
    PowerLimitRapid
    PowerLimitPreemptive
    PowerLimitPreemptiveOffset
    PowerLimitTypeMax
End Enum
Public Type POWER_LIMIT_ATTRIBUTES
    ' IDs of this power limit.
    Type As POWER_LIMIT_TYPES
    DomainId As Long
    ' Attributes of this power limit.
    MaxValue As Long
    MinValue As Long
    MinTimeParameter As Long
    MaxTimeParameter As Long
    DefaultACValue As Long
    DefaultDCValue As Long
    ' union {
        ' struct {
            ' DWORD       SupportTimeParameter : 1;
            ' DWORD       Reserved : 31;
        ' };

        ' DWORD           AsUlong;
    ' } Flags;
    Flags As Long
End Type

Public Type POWER_LIMIT_VALUE
    Type As POWER_LIMIT_TYPES
    DomainId As Long
    TargetValue As Long
    TimeParameter As Long
End Type

Public Const POWER_LIMIT_VALUE_NO_CONTROL           = DWORD_MAX



Public Type RESUME_PERFORMANCE
    PostTimeMs As Long
    TotalResumeTimeMs As LongLong
    ResumeCompleteTimestamp As LongLong
End Type

Public Type BATTERY_REPORTING_SCALE
    Granularity As Long
    Capacity As Long
End Type

Public Type SET_POWER_SETTING_VALUE
    ' Version of this structure.  Currently should be set to
    ' POWER_SETTING_VALUE_VERSION.
    Version As Long
    ' GUID representing the power setting being applied.
    Guid As UUID
    ' What power state should this setting be applied to?  E.g.
    ' AC, DC, thermal, ...
    PowerCondition As SYSTEM_POWER_CONDITION
    ' Length (in bytes) of the 'Data' member.
    DataLength As Long
    ' Data which contains the actual setting value.
    Data(1023) As Byte
End Type

Public Type NOTIFY_USER_POWER_SETTING
    Guid As UUID
End Type

Public Type SYSTEM_POWER_LEVEL
    Enable As Byte
    Spare(0 To 2) As Byte
    BatteryLevel As Long
    PowerPolicy As POWER_ACTION_POLICY
    MinSystemState As SYSTEM_POWER_STATE
End Type

Public Type SYSTEM_POWER_CAPABILITIES
    ' Misc supported system features
    PowerButtonPresent As Byte
    SleepButtonPresent As Byte
    LidPresent As Byte
    SystemS1 As Byte
    SystemS2 As Byte
    SystemS3 As Byte
    SystemS4 As Byte ' hibernate
    SystemS5 As Byte ' off
    HiberFilePresent As Byte
    FullWake As Byte
    VideoDimPresent As Byte
    ApmPresent As Byte
    UpsPresent As Byte
    ' Processors
    ThermalControl As Byte
    ProcessorThrottle As Byte
    ProcessorMinThrottle As Byte
    '#if (NTDDI_VERSION < NTDDI_WINXP)
    '    BYTE                ProcessorThrottleScale;
    '    BYTE                spare2[4];
    '#else
    ProcessorMaxThrottle As Byte
    FastSystemS4 As Byte
    Hiberboot As Byte
    WakeAlarmPresent As Byte
    AoAc As Byte
    '#endif // (NTDDI_VERSION < NTDDI_WINXP)
    ' Disk
    DiskSpinDown As Byte
    '#if (NTDDI_VERSION < NTDDI_WINTHRESHOLD)
    '    BYTE                spare3[8];
    '# else
    ' HiberFile
    HiberFileType As Byte
    AoAcConnectivitySupported As Byte
    spare3(0 To 5) As Byte
    '#endif // (NTDDI_VERSION < NTDDI_WINTHRESHOLD)
    ' System Battery
    SystemBatteriesPresent As Byte
    BatteriesAreShortTerm As Byte
    BatteryScale(0 To 2) As BATTERY_REPORTING_SCALE
    ' Wake
    AcOnLineWake As SYSTEM_POWER_STATE
    SoftLidWake As SYSTEM_POWER_STATE
    RtcWake As SYSTEM_POWER_STATE
    MinDeviceWakeState As SYSTEM_POWER_STATE ' note this may change on driver load
    DefaultLowLatencyWake As SYSTEM_POWER_STATE
End Type

Public Type SYSTEM_BATTERY_STATE
    AcOnLine As Byte
    BatteryPresent As Byte
    Charging As Byte
    Discharging As Byte
    Spare1(0 To 2) As Byte
    Tag As Byte
    MaxCapacity As Long
    RemainingCapacity As Long
    Rate As Long
    EstimatedTime As Long
    DefaultAlert1 As Long
    DefaultAlert2 As Long
End Type

Public Const NUM_DISCHARGE_POLICIES = 4

Public Enum PowerActionPolicyFlags
    POWER_ACTION_QUERY_ALLOWED = &H00000001
    POWER_ACTION_UI_ALLOWED = &H00000002
    POWER_ACTION_OVERRIDE_APPS = &H00000004
    POWER_ACTION_HIBERBOOT = &H00000008
    POWER_ACTION_USER_NOTIFY = &H00000010  ' Indicate User-mode of an impending action.
    POWER_ACTION_DOZE_TO_HIBERNATE = &H00000020
    POWER_ACTION_ACPI_CRITICAL = &H01000000
    POWER_ACTION_ACPI_USER_NOTIFY = &H02000000
    POWER_ACTION_DIRECTED_DRIPS = &H04000000
    POWER_ACTION_PSEUDO_TRANSITION = &H08000000
    POWER_ACTION_LIGHTEST_FIRST = &H10000000
    POWER_ACTION_LOCK_CONSOLE = &H20000000
    POWER_ACTION_DISABLE_WAKES = &H40000000
    POWER_ACTION_CRITICAL = &H80000000
End Enum
Public Enum PowerActionPolicyEvents
    POWER_LEVEL_USER_NOTIFY_TEXT = &H00000001
    POWER_LEVEL_USER_NOTIFY_SOUND = &H00000002
    POWER_LEVEL_USER_NOTIFY_EXEC = &H00000004
    POWER_USER_NOTIFY_BUTTON = &H00000008
    POWER_USER_NOTIFY_SHUTDOWN = &H00000010  ' Application and Services are intimated of shutdown.
    POWER_USER_NOTIFY_FORCED_SHUTDOWN = &H00000020  ' Immediate shutdown - Application and Services are not intimated.
    POWER_FORCE_TRIGGER_RESET = &H80000000
End Enum
Public Type POWER_ACTION_POLICY
    Action As POWER_ACTION
    Flags As PowerActionPolicyFlags
    EventCode As PowerActionPolicyEvents
End Type

Public Enum PO_THROTTLE_POLICY
    PO_THROTTLE_NONE = 0
    PO_THROTTLE_CONSTANT = 1
    PO_THROTTLE_DEGRADE = 2
    PO_THROTTLE_ADAPTIVE = 3
    PO_THROTTLE_MAXIMUM = 4  ' not a policy, just a limit
End Enum
Public Enum PowerWinlogonFlags
    WINLOGON_LOCK_ON_SLEEP = &H1
End Enum

Public Type SYSTEM_POWER_POLICY
    Revision As Long ' 1
    ' events
    PowerButton As POWER_ACTION_POLICY
    SleepButton As POWER_ACTION_POLICY
    LidClose As POWER_ACTION_POLICY
    LidOpenWake As SYSTEM_POWER_STATE
    Reserved As Long
    ' "system idle" detection
    Idle As POWER_ACTION_POLICY
    IdleTimeout As Long
    IdleSensitivity As Byte
    DynamicThrottle As Byte
    Spare2(0 To 1) As Byte
    ' meaning of power action "sleep"
    MinSleep As SYSTEM_POWER_STATE
    MaxSleep As SYSTEM_POWER_STATE
    ReducedLatencySleep As SYSTEM_POWER_STATE
    WinLogonFlags As PowerWinlogonFlags
    Spare3 As Long
    ' parameters for dozing
    DozeS4Timeout As Long
    ' battery policies
    BroadcastCapacityResolution As Long
    DischargePolicy(0 To (NUM_DISCHARGE_POLICIES - 1)) As SYSTEM_POWER_LEVEL
    ' video policies
    VideoTimeout As Long
    VideoDimDisplay As Byte
    VideoReserved(0 To 2) As Long
    ' hard disk policies
    SpindownTimeout As Long
    ' processor policies
    OptimizeForPower As Byte
    FanThrottleTolerance As Byte
    ForcedThrottle As Byte
    MinThrottle As Byte
    OverThrottled As POWER_ACTION_POLICY
End Type

Public Type PROCESSOR_POWER_POLICY_INFO
    ' Time based information (will be converted to kernel units)
    TimeCheck As Long ' in US
    DemoteLimit As Long ' in US
    PromoteLimit As Long ' in US
    ' Percentage based information
    DemotePercent As Byte
    PromotePercent As Byte
    Spare(0 To 1) As Byte
    ' Flags
    ' AllowDemotion:1 As Long
    ' AllowPromotion:1 As Long
    ' Reserved:30 As Long
    DemotionPromotion As Long
End Type
Public Type PROCESSOR_POWER_POLICY
    Revision As Long
    DynamicThrottle As Byte
    Spare(0 To 2) As Byte
    DisableCStates As Long
    PolicyCount As Long
    Policy(0 To 2) As PROCESSOR_POWER_POLICY_INFO
End Type



'powrprof.h
Public Type GLOBAL_MACHINE_POWER_POLICY
    Revision As Long
    LidOpenWakeAc As SYSTEM_POWER_STATE
    LidOpenWakeDc As SYSTEM_POWER_STATE
    BroadcastCapacityResolution As Long
End Type
Public Enum PowerGlobalFlags
    EnableSysTrayBatteryMeter = &H01
    EnableMultiBatteryDisplay = &H02
    EnablePasswordLogon = &H04
    EnableWakeOnRing = &H08
    EnableVideoDimDisplay = &H10
End Enum
Public Type GLOBAL_USER_POWER_POLICY
    Revision As Long
    PowerButtonAc As POWER_ACTION_POLICY
    PowerButtonDc As POWER_ACTION_POLICY
    SleepButtonAc As POWER_ACTION_POLICY
    SleepButtonDc As POWER_ACTION_POLICY
    LidCloseAc As POWER_ACTION_POLICY
    LidCloseDc As POWER_ACTION_POLICY
    DischargePolicy(0 To (NUM_DISCHARGE_POLICIES - 1)) As SYSTEM_POWER_LEVEL
    GlobalFlags As PowerGlobalFlags
End Type

Public Enum PowerSettingAttribFlags
    POWER_ATTRIBUTE_HIDE = &H00000001
    POWER_ATTRIBUTE_SHOW_AOAC = &H00000002
End Enum

Public Const NEWSCHEME = -1

Public Type GLOBAL_POWER_POLICY
    user As GLOBAL_USER_POWER_POLICY
    mach As GLOBAL_MACHINE_POWER_POLICY
End Type

Public Type MACHINE_POWER_POLICY
    Revision As Long ' 1
    ' meaning of power action "sleep"
    MinSleepAc As SYSTEM_POWER_STATE
    MinSleepDc As SYSTEM_POWER_STATE
    ReducedLatencySleepAc As SYSTEM_POWER_STATE
    ReducedLatencySleepDc As SYSTEM_POWER_STATE
    ' parameters for dozing
    DozeTimeoutAc As Long
    DozeTimeoutDc As Long
    DozeS4TimeoutAc As Long
    DozeS4TimeoutDc As Long
    ' processor policies
    MinThrottleAc As Byte
    MinThrottleDc As Byte
    pad1(0 To 1) As Byte
    OverThrottledAc As POWER_ACTION_POLICY
    OverThrottledDc As POWER_ACTION_POLICY
End Type
Public Type MACHINE_PROCESSOR_POWER_POLICY
    Revision As Long ' 1
    ProcessorPolicyAc As PROCESSOR_POWER_POLICY
    ProcessorPolicyDc As PROCESSOR_POWER_POLICY
End Type
Public Type USER_POWER_POLICY
    Revision As Long ' 1
    ' "system idle" detection
    IdleAc As POWER_ACTION_POLICY
    IdleDc As POWER_ACTION_POLICY
    IdleTimeoutAc As Long
    IdleTimeoutDc As Long
    IdleSensitivityAc As Byte
    IdleSensitivityDc As Byte
    ' Throttling Policy
    ThrottlePolicyAc As Byte
    ThrottlePolicyDc As Byte
    ' meaning of power action "sleep"
    MaxSleepAc As SYSTEM_POWER_STATE
    MaxSleepDc As SYSTEM_POWER_STATE
    ' For future use
    Reserved(0 To 1) As Long
    ' video policies
    VideoTimeoutAc As Long
    VideoTimeoutDc As Long
    ' hard disk policies
    SpindownTimeoutAc As Long
    SpindownTimeoutDc As Long
    ' processor policies
    OptimizeForPowerAc As Byte
    OptimizeForPowerDc As Byte
    FanThrottleToleranceAc As Byte
    FanThrottleToleranceDc As Byte
    ForcedThrottleAc As Byte
    ForcedThrottleDc As Byte
End Type

Public Type POWER_POLICY
    user As USER_POWER_POLICY
    mach As MACHINE_POWER_POLICY
End Type

Public Type ADMINISTRATOR_POWER_POLICY
    MinSleep As SYSTEM_POWER_STATE
    MaxSleep As SYSTEM_POWER_STATE
    MinVideoTimeout As Long
    MaxVideoTimeout As Long
    MinSpindownTimeout As Long
    MaxSpindownTimeout As Long
End Type

Public Enum POWER_PLATFORM_ROLE
    PlatformRoleUnspecified = 0
    PlatformRoleDesktop = 1
    PlatformRoleMobile = 2
    PlatformRoleWorkstation = 3
    PlatformRoleEnterpriseServer = 4
    PlatformRoleSOHOServer = 5
    PlatformRoleAppliancePC = 6
    PlatformRolePerformanceServer = 7
    PlatformRoleSlate = 8
    PlatformRoleMaximum = 9
End Enum

Public Const POWER_PLATFORM_ROLE_V1_MAX  = (PlatformRolePerformanceServer + 1)
Public Const POWER_PLATFORM_ROLE_V2_MAX  = (PlatformRoleSlate + 1)
' #if (NTDDI_VERSION >= NTDDI_WIN8)
Public Const POWER_PLATFORM_ROLE_VERSION_MAX  = (PlatformRoleSlate + 1) 'POWER_PLATFORM_ROLE_V2_MAX

[Description("Use POWER_PLATFORM_ROLE_VERSION (POWER_PLATFORM_ROLE_V2) for Windows 8 and up. Use POWER_PLATFORM_ROLE_V1 for Windows 7.")]
Public Enum POWER_PLATFORM_ROLE_VERSIONS
    POWER_PLATFORM_ROLE_V1 = (&H00000001)
    POWER_PLATFORM_ROLE_V2 = (&H00000002)
    POWER_PLATFORM_ROLE_VERSION = POWER_PLATFORM_ROLE_V2
End Enum

Public Enum EFFECTIVE_POWER_MODE
    EffectivePowerModeBatterySaver = 0
    EffectivePowerModeBetterBattery = 1
    EffectivePowerModeBalanced = 2
    EffectivePowerModeHighPerformance = 3
    EffectivePowerModeMaxPerformance = 4 ' v1 last supported
    EffectivePowerModeGameMode = 5
    EffectivePowerModeMixedReality = 6 ' v2 last supported
End Enum
Public Enum EffectivePowerModesVersions
    EFFECTIVE_POWER_MODE_V1 = (&H00000001)
    EFFECTIVE_POWER_MODE_V2 = (&H00000002)
End Enum

'Byte returns are BOOLEAN
Public Declare PtrSafe Function CallNtPowerInformation Lib "PowrProf.dll" (ByVal InformationLevel As POWER_INFORMATION_LEVEL, InputBuffer As Any, ByVal InputBufferLength As Long, OutputBuffer As Any, ByVal OutputBufferLength As Long) As Long
Public Declare PtrSafe Function GetPwrCapabilities Lib "PowrProf.dll" (lpspc As SYSTEM_POWER_CAPABILITIES) As Byte
[Description("Use PowerDeterminePlatformRole on Windows 7. POWER_PLATFORM_ROLE_VERSION (POWER_PLATFORM_ROLE_V2) for Windows 8 and up. Use POWER_PLATFORM_ROLE_V1 for Windows 7.")]
Public Declare PtrSafe Function PowerDeterminePlatformRoleEx Lib "PowrProf.dll" (ByVal Version As POWER_PLATFORM_ROLE_VERSIONS) As POWER_PLATFORM_ROLE
[Description("Use PowerDeterminePlatformRoleEx for Windows 8+.")]
Public Declare PtrSafe Function PowerDeterminePlatformRole Lib "PowrProf.dll" () As POWER_PLATFORM_ROLE

Public Declare PtrSafe Function PowerReadACValue Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SchemeGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, pType As REGTYPES, Buffer As Any, BufferSize As Long) As Long
Public Declare PtrSafe Function PowerReadDCValue Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SchemeGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, pType As REGTYPES, Buffer As Any, BufferSize As Long) As Long
Public Declare PtrSafe Function PowerWriteACValueIndex Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SchemeGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, ByVal AcValueIndex As Long) As Long
Public Declare PtrSafe Function PowerWriteDCValueIndex Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SchemeGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, ByVal DcValueIndex As Long) As Long
Public Declare PtrSafe Function PowerGetActiveScheme Lib "PowrProf.dll" (ByVal UserRootPowerKey As LongPtr, ActivePolicyGuid As UUID) As Long
Public Declare PtrSafe Function PowerSetActiveScheme Lib "PowrProf.dll" (ByVal UserRootPowerKey As LongPtr, ActivePolicyGuid As UUID) As Long
Public Declare PtrSafe Function PowerSettingRegisterNotification Lib "PowrProf.dll" (SettingGuid As UUID, ByVal Flags As DEVICE_NOTIFY_FLAGS, ByVal Recipient As LongPtr, RegistrationHandle As LongPtr) As Long
Public Declare PtrSafe Function PowerSettingUnregisterNotification Lib "PowrProf.dll" (ByVal RegistrationHandle As LongPtr) As Long
Public Declare PtrSafe Function PowerRegisterForEffectivePowerModeNotifications Lib "PowrProf.dll" (ByVal Version As EffectivePowerModesVersions, ByVal Callback As LongPtr, ByVal Context As LongPtr, RegistrationHandle As LongPtr) As Long
Public Declare PtrSafe Function PowerUnregisterFromEffectivePowerModeNotifications Lib "PowrProf.dll" (ByVal RegistrationHandle As LongPtr) As Long

Public Declare PtrSafe Function SetSuspendState Lib "PowrProf.dll" (ByVal bHibernate As Byte, ByVal bForce As Byte, ByVal bWakeupEventsDisabled As Byte) As Byte
Public Declare PtrSafe Function PowerRegisterSuspendResumeNotification Lib "PowrProf.dll" (ByVal Flags As DEVICE_NOTIFY_FLAGS, ByVal Recipient As LongPtr, RegistrationHandle As LongPtr) As Long
Public Declare PtrSafe Function PowerUnregisterSuspendResumeNotification Lib "PowrProf.dll" (ByVal RegistrationHandle As LongPtr) As Long
Public Declare PtrSafe Function GetPwrDiskSpindownRange Lib "PowrProf.dll" (puiMax As Long, puiMin As Long) As Byte
Public Declare PtrSafe Function EnumPwrSchemes Lib "PowrProf.dll" (ByVal lpfn As LongPtr, ByVal lParam As LongPtr) As Byte
Public Declare PtrSafe Function ReadGlobalPwrPolicy Lib "PowrProf.dll" (pGlobalPowerPolicy As GLOBAL_POWER_POLICY) As Byte
Public Declare PtrSafe Function ReadPwrScheme Lib "PowrProf.dll" (ByVal uiID As Long, pPowerPolicy As POWER_POLICY) As Byte
Public Declare PtrSafe Function WritePwrScheme Lib "PowrProf.dll" (puiID As Long, ByVal lpszSchemeName As LongPtr, ByVal lpszDescription As LongPtr, pPowerPolicy As POWER_POLICY) As Byte
Public Declare PtrSafe Function WriteGlobalPwrPolicy Lib "PowrProf.dll" (pGlobalPowerPolicy As GLOBAL_POWER_POLICY) As Byte
Public Declare PtrSafe Function DeletePwrScheme Lib "PowrProf.dll" (ByVal uiID As Long) As Byte
Public Declare PtrSafe Function GetActivePwrScheme Lib "PowrProf.dll" (puiID As Long) As Byte
Public Declare PtrSafe Function SetActivePwrScheme Lib "PowrProf.dll" (ByVal uiID As Long, pGlobalPowerPolicy As GLOBAL_POWER_POLICY, pPowerPolicy As POWER_POLICY) As Byte
Public Declare PtrSafe Function IsPwrSuspendAllowed Lib "PowrProf.dll" () As Byte
Public Declare PtrSafe Function IsPwrHibernateAllowed Lib "PowrProf.dll" () As Byte
Public Declare PtrSafe Function IsPwrShutdownAllowed Lib "PowrProf.dll" () As Byte
Public Declare PtrSafe Function IsAdminOverrideActive Lib "PowrProf.dll" (papp As ADMINISTRATOR_POWER_POLICY) As Byte
Public Declare PtrSafe Function GetCurrentPowerPolicies Lib "PowrProf.dll" (pGlobalPowerPolicy As GLOBAL_POWER_POLICY, pPowerPolicy As POWER_POLICY) As Byte
Public Declare PtrSafe Function CanUserWritePwrScheme Lib "PowrProf.dll" () As Byte
Public Declare PtrSafe Function ReadProcessorPwrScheme Lib "PowrProf.dll" (ByVal uiID As Long, pMachineProcessorPowerPolicy As MACHINE_PROCESSOR_POWER_POLICY) As Byte
Public Declare PtrSafe Function WriteProcessorPwrScheme Lib "PowrProf.dll" (ByVal uiID As Long, pMachineProcessorPowerPolicy As MACHINE_PROCESSOR_POWER_POLICY) As Byte
Public Declare PtrSafe Function ValidatePowerPolicies Lib "PowrProf.dll" (pGlobalPowerPolicy As GLOBAL_POWER_POLICY, pPowerPolicy As POWER_POLICY) As Byte

Public Enum POWER_DATA_ACCESSOR

    /*
    // Used by read/write and enumeration engines
    */
    ACCESS_AC_POWER_SETTING_INDEX = 0
    ACCESS_DC_POWER_SETTING_INDEX
    ACCESS_FRIENDLY_NAME
    ACCESS_DESCRIPTION
    ACCESS_POSSIBLE_POWER_SETTING
    ACCESS_POSSIBLE_POWER_SETTING_FRIENDLY_NAME
    ACCESS_POSSIBLE_POWER_SETTING_DESCRIPTION
    ACCESS_DEFAULT_AC_POWER_SETTING
    ACCESS_DEFAULT_DC_POWER_SETTING
    ACCESS_POSSIBLE_VALUE_MIN
    ACCESS_POSSIBLE_VALUE_MAX
    ACCESS_POSSIBLE_VALUE_INCREMENT
    ACCESS_POSSIBLE_VALUE_UNITS
    ACCESS_ICON_RESOURCE
    ACCESS_DEFAULT_SECURITY_DESCRIPTOR
    ACCESS_ATTRIBUTES

    /*
    // Used by enumeration engine.
    */
    ACCESS_SCHEME
    ACCESS_SUBGROUP
    ACCESS_INDIVIDUAL_SETTING

    /*
    // Used by access check
    */
    ACCESS_ACTIVE_SCHEME
    ACCESS_CREATE_SCHEME

    /*
    // Used by override ranges.
    */

    ACCESS_AC_POWER_SETTING_MAX
    ACCESS_DC_POWER_SETTING_MAX
    ACCESS_AC_POWER_SETTING_MIN
    ACCESS_DC_POWER_SETTING_MIN

    /*
    // Used by enumeration engine.
    */

    ACCESS_PROFILE
    ACCESS_OVERLAY_SCHEME
    ACCESS_ACTIVE_OVERLAY_SCHEME
End Enum

' typedef
' ULONG
' CALLBACK
' DEVICE_NOTIFY_CALLBACK_ROUTINE (
    ' _In_opt_ PVOID Context,
    ' _In_ ULONG Type,
    ' _In_ PVOID Setting
    ' );
Public Type DEVICE_NOTIFY_SUBSCRIBE_PARAMETERS
    Callback As LongPtr 'PDEVICE_NOTIFY_CALLBACK_ROUTINE
    Context As LongPtr
End Type

Public Declare PtrSafe Function PowerIsSettingRangeDefined Lib "PowrProf.dll" (SubKeyGuid As UUID, SettingGuid As UUID) As Byte
Public Declare PtrSafe Function PowerSettingAccessCheckEx Lib "PowrProf.dll" (ByVal AccessFlags As POWER_DATA_ACCESSOR, PowerGuid As UUID, ByVal AccessType As REGSAM) As Long
Public Declare PtrSafe Function PowerSettingAccessCheck Lib "PowrProf.dll" (ByVal AccessFlags As POWER_DATA_ACCESSOR, PowerGuid As UUID) As Long
Public Declare PtrSafe Function PowerReadACValueIndex Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SchemeGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, AcValueIndex As Long) As Long
Public Declare PtrSafe Function PowerReadDCValueIndex Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SchemeGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, DcValueIndex As Long) As Long
Public Declare PtrSafe Function PowerReadFriendlyName Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SchemeGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, Buffer As Any, BufferSize As Long) As Long
Public Declare PtrSafe Function PowerReadDescription Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SchemeGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, Buffer As Any, BufferSize As Long) As Long
Public Declare PtrSafe Function PowerReadPossibleValue Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, pType As REGTYPES, ByVal PossibleSettingIndex As Long, Buffer As Any, BufferSize As Long) As Long
Public Declare PtrSafe Function PowerReadPossibleFriendlyName Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, ByVal PossibleSettingIndex As Long, Buffer As Any, BufferSize As Long) As Long
Public Declare PtrSafe Function PowerReadPossibleDescription Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, ByVal PossibleSettingIndex As Long, Buffer As Any, BufferSize As Long) As Long
Public Declare PtrSafe Function PowerReadValueMin Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, ValueMinimum As Long) As Long
Public Declare PtrSafe Function PowerReadValueMax Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, ValueMaximum As Long) As Long
Public Declare PtrSafe Function PowerReadValueIncrement Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, ValueIncrement As Long) As Long
Public Declare PtrSafe Function PowerReadValueUnitsSpecifier Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, Buffer As Any, BufferSize As Long) As Long
Public Declare PtrSafe Function PowerReadACDefaultIndex Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SchemePersonalityGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, AcDefaultIndex As Long) As Long
Public Declare PtrSafe Function PowerReadDCDefaultIndex Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SchemePersonalityGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, DcDefaultIndex As Long) As Long
Public Declare PtrSafe Function PowerReadIconResourceSpecifier Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SchemeGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, Buffer As Any, BufferSize As Long) As Long
Public Declare PtrSafe Function PowerReadSettingAttributes Lib "PowrProf.dll" (SubGroupGuid As UUID, PowerSettingGuid As UUID) As PowerSettingAttribFlags
Public Declare PtrSafe Function PowerWriteFriendlyName Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SchemeGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, Buffer As Any, ByVal BufferSize As Long) As Long
Public Declare PtrSafe Function PowerWriteDescription Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SchemeGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, Buffer As Any, ByVal BufferSize As Long) As Long
Public Declare PtrSafe Function PowerWritePossibleValue Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, ByVal nType As REGTYPES, ByVal PossibleSettingIndex As Long, Buffer As Any, ByVal BufferSize As Long) As Long
Public Declare PtrSafe Function PowerWritePossibleFriendlyName Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, ByVal PossibleSettingIndex As Long, Buffer As Any, ByVal BufferSize As Long) As Long
Public Declare PtrSafe Function PowerWritePossibleDescription Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, ByVal PossibleSettingIndex As Long, Buffer As Any, ByVal BufferSize As Long) As Long
Public Declare PtrSafe Function PowerWriteValueMin Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, ByVal ValueMinimum As Long) As Long
Public Declare PtrSafe Function PowerWriteValueMax Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, ByVal ValueMaximum As Long) As Long
Public Declare PtrSafe Function PowerWriteValueIncrement Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, ByVal ValueIncrement As Long) As Long
Public Declare PtrSafe Function PowerWriteValueUnitsSpecifier Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, Buffer As Any, ByVal BufferSize As Long) As Long
Public Declare PtrSafe Function PowerWriteACDefaultIndex Lib "PowrProf.dll" (ByVal RootSystemPowerKey As LongPtr, SchemePersonalityGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, ByVal AcDefaultIndex As Long) As Long
Public Declare PtrSafe Function PowerWriteDCDefaultIndex Lib "PowrProf.dll" (ByVal RootSystemPowerKey As LongPtr, SchemePersonalityGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, ByVal DcDefaultIndex As Long) As Long
Public Declare PtrSafe Function PowerWriteIconResourceSpecifier Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SchemeGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, Buffer As Any, BufferSize As Long) As Long
Public Declare PtrSafe Function PowerWriteSettingAttributes Lib "PowrProf.dll" (SubGroupGuid As UUID, PowerSettingGuid As UUID, ByVal Attributes As PowerSettingAttribFlags) As Long

Public Declare PtrSafe Function PowerDuplicateScheme Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SourceSchemeGuid As UUID, DestinationSchemeGuid As LongPtr) As Long
Public Declare PtrSafe Function PowerImportPowerScheme Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, ByVal ImportFileNamePath As LongPtr, DestinationSchemeGuid As LongPtr) As Long
Public Declare PtrSafe Function PowerDeleteScheme Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SchemeGuid As UUID) As Long
Public Declare PtrSafe Function PowerRemovePowerSetting Lib "PowrProf.dll" (SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID) As Long
Public Declare PtrSafe Function PowerCreateSetting Lib "PowrProf.dll" (ByVal RootSystemPowerKey As LongPtr, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID) As Long
Public Declare PtrSafe Function PowerCreatePossibleSetting Lib "PowrProf.dll" (ByVal RootSystemPowerKey As LongPtr, SubGroupOfPowerSettingsGuid As UUID, PowerSettingGuid As UUID, ByVal PossibleSettingIndex As Long) As Long

Public Declare PtrSafe Function PowerEnumerate Lib "PowrProf.dll" (ByVal RootPowerKey As LongPtr, SchemeGuid As UUID, SubGroupOfPowerSettingsGuid As UUID, ByVal AccessFlags As POWER_DATA_ACCESSOR, ByVal Index As Long, Buffer As Any, BufferSize As Long) As Long
Public Declare PtrSafe Function PowerOpenUserPowerKey Lib "PowrProf.dll" (phUserPowerKey As LongPtr, ByVal Access As REGSAM, ByVal OpenExisting As BOOL) As Long
Public Declare PtrSafe Function PowerOpenSystemPowerKey Lib "PowrProf.dll" (phSystemPowerKey As LongPtr, ByVal Access As REGSAM, ByVal OpenExisting As BOOL) As Long
Public Declare PtrSafe Function PowerCanRestoreIndividualDefaultPowerScheme Lib "PowrProf.dll" (SchemeGuid As UUID) As Long
Public Declare PtrSafe Function PowerRestoreIndividualDefaultPowerScheme Lib "PowrProf.dll" (SchemeGuid As UUID) As Long
Public Declare PtrSafe Function PowerRestoreDefaultPowerSchemes Lib "PowrProf.dll" () As Long
Public Declare PtrSafe Function PowerReplaceDefaultPowerSchemes Lib "PowrProf.dll" () As Long

Public Enum PowerDeviceFlags
    DEVICEPOWER_HARDWAREID = (&H80000000)
'  'and' the requested power states.  I.e. if the user requested
'  that we query devices supporting D1 and D3, this flag says
'  "give me devices that support D1 *and* D3".  Without this
'  flag, the query would be interpreted as "give me devices
'  that support D1 *or* D3".
    DEVICEPOWER_AND_OPERATION = (&H40000000)
'  Only preform the query on devices that are present in the system.
    DEVICEPOWER_FILTER_DEVICES_PRESENT = (&H20000000)
'  Only preform the query on devices that are actual hardware.
    DEVICEPOWER_FILTER_HARDWARE = (&H10000000)
'  Only preform the query on devices that are armed to wake the
'  system from a sleep state.
    DEVICEPOWER_FILTER_WAKEENABLED = (&H08000000)
'  Only preform the query on devices that are capable of being programmed
'  to wake the system from a sleep state.
    DEVICEPOWER_FILTER_WAKEPROGRAMMABLE = (&H04000000)
'  Go find the device who's name is specifed by an input
'  parameter, then see if it's got the capabilities specified
'  in QueryFlags.
    DEVICEPOWER_FILTER_ON_NAME = (&H02000000)
End Enum
Public Enum DevicePowerSetFlags
'  Define flags to set/clear capabilities in the devices.
'  Enable the device to wake the system from a sleep state.
    DEVICEPOWER_SET_WAKEENABLED = (&H00000001)
'  Disable the device from waking the system from a sleep
'  state.
    DEVICEPOWER_CLEAR_WAKEENABLED = (&H00000002)
End Enum

Public Enum PowerSupportedCapabilities
    PDCAP_S0_SUPPORTED = &H00010000
    PDCAP_S1_SUPPORTED = &H00020000
    PDCAP_S2_SUPPORTED = &H00040000
    PDCAP_S3_SUPPORTED = &H00080000
    PDCAP_WAKE_FROM_S0_SUPPORTED = &H00100000
    PDCAP_WAKE_FROM_S1_SUPPORTED = &H00200000
    PDCAP_WAKE_FROM_S2_SUPPORTED = &H00400000
    PDCAP_WAKE_FROM_S3_SUPPORTED = &H00800000
    PDCAP_S4_SUPPORTED = &H01000000
    PDCAP_S5_SUPPORTED = &H02000000
End Enum

Public Declare PtrSafe Function DevicePowerEnumDevices Lib "PowrProf.dll" (ByVal QueryIndex As Long, ByVal QueryInterpretationFlags As PowerDeviceFlags, [TypeHint(PowerSupportedCapabilities, ConfigMgrPowerCaps)] ByVal QueryFlags As Long, pReturnBuffer As Any, pBufferSize As Long) As Byte
Public Declare PtrSafe Function DevicePowerSetDeviceState Lib "PowrProf.dll" (ByVal DeviceDescription As LongPtr, ByVal SetFlags As DevicePowerSetFlags, SetData As Any) As Long
Public Declare PtrSafe Function DevicePowerOpen Lib "PowrProf.dll" (Optional ByVal DebugMask As Long = 0) As Byte
Public Declare PtrSafe Function DevicePowerClose Lib "PowrProf.dll" () As Byte

Public Enum ThermalEventVersions
    THERMAL_EVENT_VERSION = 1
End Enum
Public Enum ThermalEventTypes
    THERMAL_EVENT_SHUTDOWN = 0
    THERMAL_EVENT_HIBERNATE = 1
    THERMAL_EVENT_UNSPECIFIED = &Hffffffff
End Enum
Public Type THERMAL_EVENT
    Version As ThermalEventVersions
    Size As Long
    Type As ThermalEventTypes
    Temperature As Long
    TripPointTemperature As Long
    Initiator As LongPtr
End Type

Public Declare PtrSafe Function PowerReportThermalEvent Lib "PowrProf.dll" (Event As THERMAL_EVENT) As Byte


#End Region

#Region "rstrtmgr"

'restartmanager.h, 100%

Public Const RM_SESSION_KEY_LEN  = 16 'sizeof(GUID)
Public Const CCH_RM_SESSION_KEY  = RM_SESSION_KEY_LEN * 2
Public Const CCH_RM_MAX_APP_NAME  = 255
Public Const CCH_RM_MAX_SVC_NAME  = 63
Public Const RM_INVALID_TS_SESSION  = -1
Public Const RM_INVALID_PROCESS  = -1

Public Enum RM_APP_TYPE
    RmUnknownApp = 0  ' Application type cannot be classified in
                      '  known categories
    RmMainWindow = 1  ' Application is a windows application that
                      '  displays a top-level window
    RmOtherWindow = 2 ' Application is a windows app but does not
                      '  display a top-level window
    RmService = 3     ' Application is an NT service
    RmExplorer = 4    ' Application is Explorer
    RmConsole = 5     ' Application is Console application
    RmCritical = 1000 ' Application is critical system process
                      '  where a reboot is required to restart
End Enum

Public Enum RM_SHUTDOWN_TYPE
    RmForceShutdown = &H1 ' Force app shutdown
    RmShutdownOnlyRegistered = &H10 ' Only shudown apps if all apps
                                    '  registered for restart
End Enum

Public Enum RM_APP_STATUS
    RmStatusUnknown = &H0         ' Application in unknown state
                                  '  or state not important
    RmStatusRunning = &H1         ' Application is currently running
    RmStatusStopped = &H2         ' Application stopped by Restart Manager
    RmStatusStoppedOther = &H4    ' Application detected stopped
                                  '  by outside action
    RmStatusRestarted = &H8       ' Application restarted by Restart Manager
    RmStatusErrorOnStop = &H10    ' An error occurred when stopping
                                  '  this application
    RmStatusErrorOnRestart = &H20 ' An error occurred when restarting
                                  '  this application
    RmStatusShutdownMasked = &H40 ' Shutdown action masked by filer
    RmStatusRestartMasked = &H80  ' Restart action masked by filter
End Enum

Public Enum RM_REBOOT_REASON
    RmRebootReasonNone = &H0 ' Reboot not required
    RmRebootReasonPermissionDenied = &H1 ' Current user does not have permission to shut
                                         ' down one or more detected processes
    RmRebootReasonSessionMismatch = &H2 ' One or more processes are
                                        '  running in another TS session.
    RmRebootReasonCriticalProcess = &H4 ' A critical process has been detected
    RmRebootReasonCriticalService = &H8 ' A critical service has been detected
    RmRebootReasonDetectedSelf = &H10 ' The current process has been detected
End Enum

Public Type RM_UNIQUE_PROCESS
    dwProcessId As Long ' PID
    ProcessStartTime As FILETIME ' Process creation time
End Type

Public Type RM_PROCESS_INFO
    Process As RM_UNIQUE_PROCESS ' Unique process identification
    strAppName(0 To (CCH_RM_MAX_APP_NAME)) As Integer ' Application friendly name
    strServiceShortName(0 To (CCH_RM_MAX_SVC_NAME)) As Integer ' Service short name,
    ' if applicable
    ApplicationType As RM_APP_TYPE ' Application type
    AppStatus As RM_APP_STATUS ' Bit mask of application status
    TSSessionId As Long ' Terminal Service session ID of 
    ' process (-1 if n/a)
    bRestartable As BOOL ' Is application restartable?
End Type

Public Enum RM_FILTER_TRIGGER
    RmFilterTriggerInvalid = 0 ' Invalid value
    RmFilterTriggerFile = 1 ' Filter is triggered by EXE name
    RmFilterTriggerProcess = 2 ' Filter is triggered by PID/create time
    RmFilterTriggerService = 3 ' Filter is triggered by service short name
End Enum

Public Enum RM_FILTER_ACTION
    RmInvalidFilterAction = 0 ' Invalid value
    RmNoRestart = 1 ' Prevent restart of application
    RmNoShutdown = 2 ' Prevent shutdown and restart of
    '  application
End Enum

Public Type RM_FILTER_INFO
    FilterAction As RM_FILTER_ACTION ' Filter action
    FilterTrigger As RM_FILTER_TRIGGER ' Filter trigger
    cbNextOffset As Long
    ' union
    ' {
        ' LPWSTR strFilename;             // When RmFilterTrigger == RmFilterTriggerFile,
                                        ' // this contains the filename this filter applies to
        ' RM_UNIQUE_PROCESS Process;      // When RmFilterTrigger == RmFilterTriggerProcess,
                                        ' // this contains the process this filter applies to
        ' LPWSTR strServiceShortName;     // When RmFilterTrigger == RmFilterTriggerService,
                                        ' // this contians the service name this filter applies to
    ' };
    NameOrProces(11) As Byte
End Type

' typedef void (*RM_WRITE_STATUS_CALLBACK)( _In_ UINT nPercentComplete );

Public Declare PtrSafe Function RmStartSession Lib "rstrtmgr.dll" (pSessionHandle As Long, ByVal dwSessionFlags As Long, ByVal strSessionKey As LongPtr) As Long
Public Declare PtrSafe Function RmJoinSession Lib "rstrtmgr.dll" (pSessionHandle As Long, ByVal strSessionKey As LongPtr) As Long
Public Declare PtrSafe Function RmEndSession Lib "rstrtmgr.dll" (ByVal dwSessionHandle As Long) As Long
Public Declare PtrSafe Function RmRegisterResources Lib "rstrtmgr.dll" (ByVal dwSessionHandle As Long, ByVal nFiles As Long, rgsFileNames As LongPtr, ByVal nApplications As Long, rgApplications As RM_UNIQUE_PROCESS, ByVal nServices As Long, rgsServiceNames As LongPtr) As Long
Public Declare PtrSafe Function RmGetList Lib "rstrtmgr.dll" (ByVal dwSessionHandle As Long, pnProcInfoNeeded As Long, pnProcInfo As Long, rgAffectedApps As RM_PROCESS_INFO, lpdwRebootReasons As RM_REBOOT_REASON) As Long
Public Declare PtrSafe Function RmShutdown Lib "rstrtmgr.dll" (ByVal dwSessionHandle As Long, ByVal lActionFlags As RM_SHUTDOWN_TYPE, Optional ByVal fnStatus As LongPtr) As Long
Public Declare PtrSafe Function RmRestart Lib "rstrtmgr.dll" (ByVal dwSessionHandle As Long, ByVal dwRestartFlags As Long, Optional ByVal fnStatus As LongPtr) As Long
Public Declare PtrSafe Function RmCancelCurrentTask Lib "rstrtmgr.dll" (ByVal dwSessionHandle As Long) As Long
Public DeclareWide PtrSafe Function RmAddFilter Lib "rstrtmgr.dll" (ByVal dwSessionHandle As Long, ByVal strModuleName As String, pProcess As RM_UNIQUE_PROCESS, ByVal strServiceShortName As String, ByVal FilterAction As RM_FILTER_ACTION) As Long
Public Declare PtrSafe Function RmAddFilter Lib "rstrtmgr.dll" (ByVal dwSessionHandle As Long, ByVal strModuleName As LongPtr, pProcess As RM_UNIQUE_PROCESS, ByVal strServiceShortName As LongPtr, ByVal FilterAction As RM_FILTER_ACTION) As Long
Public DeclareWide PtrSafe Function RmRemoveFilter Lib "rstrtmgr.dll" (ByVal dwSessionHandle As Long, ByVal strModuleName As String, pProcess As RM_UNIQUE_PROCESS, ByVal strServiceShortName As String) As Long
Public Declare PtrSafe Function RmRemoveFilter Lib "rstrtmgr.dll" (ByVal dwSessionHandle As Long, ByVal strModuleName As LongPtr, pProcess As RM_UNIQUE_PROCESS, ByVal strServiceShortName As LongPtr) As Long
Public Declare PtrSafe Function RmGetFilterList Lib "rstrtmgr.dll" (ByVal dwSessionHandle As Long, pbFilterBuf As Any, ByVal cbFilterBuf As Long, cbFilterBufNeeded As Long) As Long



#End Region


#Region "Misc"

[Description("⛔ This function is not available on Windows XP or newer.")]
Public Declare PtrSafe Function GetEncSChannel CDecl Lib "Instrsa5.dll" (pData As LongPtr, dwDecSize As Long) As BOOL

Public Declare PtrSafe Function IsNTAdmin Lib "advpack.dll" (ByVal dwReserved As Long, ByRef lpdwReserved As Long) As Long


'advpub.h
Public Declare PtrSafe Function ExtractFilesA Lib "advpack.dll" (ByVal pszCabName As String, ByVal pszExpandDir As String, ByVal dwFlags As Long, ByVal pszFileList As String, ByVal lpReserved As LongPtr, ByVal dwReserved As Long) As Long
Public Declare PtrSafe Function ExtractFilesW Lib "advpack.dll" (ByVal pszCabName As LongPtr, ByVal pszExpandDir As LongPtr, ByVal dwFlags As Long, ByVal pszFileList As LongPtr, ByVal lpReserved As LongPtr, ByVal dwReserved As Long) As Long
Public DeclareWide PtrSafe Function ExtractFiles Lib "advpack.dll" Alias "ExtractFilesW" (ByVal pszCabName As String, ByVal pszExpandDir As String, ByVal dwFlags As Long, ByVal pszFileList As String, ByVal lpReserved As LongPtr, ByVal dwReserved As Long) As Long



/*
magnification.h, 100%
*/

Public Const WC_MAGNIFIERA  = "Magnifier"
Public Const WC_MAGNIFIERW  = "Magnifier"
Public Const WC_MAGNIFIER  = WC_MAGNIFIERW

Public Enum MagnifierWindowStyles
    MS_SHOWMAGNIFIEDCURSOR = &H0001
    MS_CLIPAROUNDCURSOR = &H0002
    MS_INVERTCOLORS = &H0004
End Enum

Public Enum MagnifierFilterModes
    MW_FILTERMODE_EXCLUDE = 0
    MW_FILTERMODE_INCLUDE = 1
End Enum

[Description("Reminder: Dimensions inverted compared to C def (`float v[3][3];`)")]
Public Type MAGTRANSFORM
    v(0 To 2, 0 To 2) As Single
End Type

Public Type MAGIMAGEHEADER
    width As Long
    height As Long
    format As UUID
    stride As Long
    offset As Long
    cbSize As LongPtr
End Type

[Description("Reminder: Dimensions inverted compared to C def (`float transform[5][5];`)")]
Public Type MAGCOLOREFFECT
    transform(0 To 4, 0 To 4) As Single
End Type

' typedef BOOL (CALLBACK* MagImageScalingCallback)(HWND hwnd, void * srcdata, MAGIMAGEHEADER srcheader, void * destdata, MAGIMAGEHEADER destheader, RECT unclipped, RECT clipped, HRGN dirty );
#If Win64 Then
Public Delegate Function MagImageScalingCallback (ByVal hwnd As LongPtr, ByVal srcdata As LongPtr, srcheader As MAGIMAGEHEADER, ByVal destdata As LongPtr, destheader As MAGIMAGEHEADER, unclipped As RECT, clipped As RECT, ByVal dirty As LongPtr) As BOOL
#End If
Public Declare PtrSafe Function MagInitialize Lib "magnification.dll" () As BOOL
Public Declare PtrSafe Function MagUninitialize Lib "magnification.dll" () As BOOL
#If Win64 Then
Public Declare PtrSafe Function MagSetWindowSource Lib "magnification.dll" (ByVal hwnd As LongPtr, rect As RECT) As BOOL
#Else
Public Declare PtrSafe Function MagSetWindowSource Lib "magnification.dll" (ByVal hwnd As LongPtr, ByVal rectLeft As Long, ByVal rectTop As Long, ByVal rectRight As Long, ByVal rectBottom As Long) As BOOL
#End If
Public Declare PtrSafe Function MagGetWindowSource Lib "magnification.dll" (ByVal hwnd As LongPtr, prect As RECT) As BOOL
Public Declare PtrSafe Function MagSetWindowTransform Lib "magnification.dll" (ByVal hwnd As LongPtr, pTransform As MAGTRANSFORM) As BOOL
Public Declare PtrSafe Function MagGetWindowTransform Lib "magnification.dll" (ByVal hwnd As LongPtr, pTransform As MAGTRANSFORM) As BOOL
Public Declare PtrSafe Function MagSetWindowFilterList Lib "magnification.dll" (ByVal hwnd As LongPtr, ByVal dwFilterMode As MagnifierFilterModes, ByVal count As Long, pHWND As LongPtr) As BOOL
Public Declare PtrSafe Function MagGetWindowFilterList Lib "magnification.dll" (ByVal hwnd As LongPtr, pdwFilterMode As MagnifierFilterModes, ByVal count As Long, pHWND As LongPtr) As Long
Public Declare PtrSafe Function MagSetImageScalingCallback Lib "magnification.dll" (ByVal hwnd As LongPtr, ByVal callback As LongPtr) As BOOL
Public Declare PtrSafe Function MagGetImageScalingCallback Lib "magnification.dll" (ByVal hwnd As LongPtr) As LongPtr
Public Declare PtrSafe Function MagSetColorEffect Lib "magnification.dll" (ByVal hwnd As LongPtr, pEffect As MAGCOLOREFFECT) As BOOL
Public Declare PtrSafe Function MagGetColorEffect Lib "magnification.dll" (ByVal hwnd As LongPtr, pEffect As MAGCOLOREFFECT) As BOOL
Public Declare PtrSafe Function MagSetFullscreenTransform Lib "magnification.dll" (ByVal magLevel As Single, ByVal xOffset As Long, ByVal yOffset As Long) As BOOL
Public Declare PtrSafe Function MagGetFullscreenTransform Lib "magnification.dll" (pMagLevel As Single, pxOffset As Long, pyOffset As Long) As BOOL
Public Declare PtrSafe Function MagSetFullscreenColorEffect Lib "magnification.dll" (pEffect As MAGCOLOREFFECT) As BOOL
Public Declare PtrSafe Function MagGetFullscreenColorEffect Lib "magnification.dll" (pEffect As MAGCOLOREFFECT) As BOOL
Public Declare PtrSafe Function MagSetInputTransform Lib "magnification.dll" (ByVal fEnabled As BOOL, pRectSource As RECT, pRectDest As RECT) As BOOL
Public Declare PtrSafe Function MagGetInputTransform Lib "magnification.dll" (pfEnabled As BOOL, pRectSource As RECT, pRectDest As RECT) As BOOL
Public Declare PtrSafe Function MagShowSystemCursor Lib "magnification.dll" (ByVal fShowCursor As BOOL) As BOOL
'Undocumented:
Public Declare PtrSafe Function MagSetLensUseBitmapSmoothing Lib "magnification.dll" (ByVal hwnd As LongPtr, ByVal isSmoothing As BOOL) As BOOL
Public Declare PtrSafe Function MagSetFullscreenUseBitmapSmoothing Lib "magnification.dll" (ByVal useSmoothing As BOOL) As BOOL



'CimFs.h

Public Enum CIM_MOUNT_IMAGE_FLAGS
    CIM_MOUNT_IMAGE_NONE = &H00000000
    CIM_MOUNT_CHILD_ONLY = &H00000001
    CIM_MOUNT_ENABLE_DAX = &H00000002
    CIM_MOUNT_CACHE_FILES = &H00000004
    CIM_MOUNT_CACHE_REGIONS = &H00000008
End Enum

Public Type CIMFS_FILE_METADATA
    Attributes As Long
    FileSize As LongLong
    CreationTime As LARGE_INTEGER
    LastWriteTime As LARGE_INTEGER
    ChangeTime As LARGE_INTEGER
    LastAccessTime As LARGE_INTEGER
    SecurityDescriptorBuffer As LongPtr 'const void
    SecurityDescriptorSize As Long
    ReparseDataBuffer As LongPtr 'const void
    ReparseDataSize As Long
    EaBuffer As LongPtr 'const void
    EaBufferSize As Long
End Type

Public DeclareWide PtrSafe Function CimCreateImage Lib "cimfs.dll" (ByVal imageContainingPath As String, ByVal existingImageName As String, ByVal newImageName As String, cimImageHandle As LongPtr) As Long
Public DeclareWide PtrSafe Function CimCreateFile Lib "cimfs.dll" (ByVal cimImageHandle As LongPtr, ByVal imageRelativePath As String, fileMetadata As CIMFS_FILE_METADATA, cimStreamHandle As LongPtr) As Long
Public DeclareWide PtrSafe Function CimCreateAlternateStream Lib "cimfs.dll" (ByVal cimImageHandle As LongPtr, ByVal imageRelativePath As String, ByVal streamSize As LongLong, cimStreamHandle As LongPtr) As Long
Public DeclareWide PtrSafe Function CimCreateHardLink Lib "cimfs.dll" (ByVal cimImageHandle As LongPtr, ByVal imageRelativePath As String, ByVal existingImageRelativePath As String) As Long
Public Declare PtrSafe Function CimWriteStream Lib "cimfs.dll" (ByVal cimStreamHandle As LongPtr, buffer As Any, ByVal bufferSize As Long) As Long
Public Declare PtrSafe Sub CimCloseStream Lib "cimfs.dll" (ByVal cimStreamHandle As LongPtr)
Public DeclareWide PtrSafe Function CimDeletePath Lib "cimfs.dll" (ByVal cimImageHandle As LongPtr, ByVal imageRelativePath As String) As Long
Public Declare PtrSafe Function CimCommitImage Lib "cimfs.dll" (ByVal cimImageHandle As LongPtr) As Long
Public Declare PtrSafe Sub CimCloseImage Lib "cimfs.dll" (ByVal cimImageHandle As LongPtr)
Public DeclareWide PtrSafe Function CimMountImage Lib "cimfs.dll" (ByVal imageContainingPath As String, ByVal imageName As String, ByVal mountImageFlags As CIM_MOUNT_IMAGE_FLAGS, volumeId As UUID) As Long
Public Declare PtrSafe Function CimDismountImage Lib "cimfs.dll" (volumeId As UUID) As Long

/*
sfc.h, 100%
*/

Public Type PROTECTED_FILE_DATA
    FileName(0 To (MAX_PATH - 1)) As Integer
    FileNumber As Long
End Type

[Description("WARNING: Unsupported on Windows Vista+. Use undocumented functions BeginFileMapEnumeration/GetNextFileMapContent/CloseFileMapEnumeration.")]
Public Declare PtrSafe Function SfcGetNextProtectedFile Lib "sfc.dll" (ByVal RpcHandle As LongPtr, ProtFileData As PROTECTED_FILE_DATA) As BOOL
Public DeclareWide PtrSafe Function SfcIsFileProtected Lib "sfc.dll" (ByVal RpcHandle As LongPtr, ByVal ProtFileName As String) As BOOL
Public DeclareWide PtrSafe Function SfcIsKeyProtected Lib "sfc.dll" ([TypeHint(RegKeyspace)] ByVal KeyHandle As LongPtr, ByVal SubKeyName As String, ByVal KeySam As REGSAM) As BOOL
Public DeclareWide PtrSafe Function SfpVerifyFile Lib "sfc.dll" (ByVal pszFileName As String, ByVal pszError As String, ByVal dwErrSize As Long) As BOOL

'UNDOCUMENTED:
Public Type PPROTECTED_FILE_INFO
    Length As Long
    FileName(0 To (MAX_PATH - 1)) As Integer
End Type
Public Declare PtrSafe Function BeginFileMapEnumeration Lib "sfc_os.dll" (ByVal Reserved0 As Long, ByVal Reserved1 As LongPtr, Handle As LongPtr) As Long
Public Declare PtrSafe Function CloseFileMapEnumeration Lib "sfc_os.dll" (ByVal Handle As LongPtr) As Long
Public Declare PtrSafe Function GetNextFileMapContent Lib "sfc_os.dll" (ByVal Reserved As Long, ByVal SfcHandle As LongPtr, ByVal Size As LongPtr, ProtectedInfo As PPROTECTED_FILE_INFO, dwNeeded As LongPtr) As Long



/*
sfcfiles.h, 
*/

Public Type PROTECT_FILE_ENTRY
    SourceFileName As LongPtr ' will be NULL if file is not renamed on installation
    FileName As LongPtr ' destination filename plus full path to file
    InfName As LongPtr ' inf file which provides layout information
    ' may be NULL if we use the default layout file
End Type
[Description("WARNING: Unsupported on Windows Vista+. Use undocumented functions BeginFileMapEnumeration/GetNextFileMapContent/CloseFileMapEnumeration.")]
Public DeclareWide PtrSafe Function SfcGetFiles Lib "sfcfiles.dll" (ProtFileData As PROTECT_FILE_ENTRY, FileCount As Long) As Long





/*
SrRestorePtApi.h, 100%
System Restore Point API
*/

Public Enum SysRestoreEventTypes
    MIN_EVENT = 100
    BEGIN_SYSTEM_CHANGE = 100
    END_SYSTEM_CHANGE = 101
    BEGIN_NESTED_SYSTEM_CHANGE = 102  ' for Whistler only - use this to prevent nested restore pts
    END_NESTED_SYSTEM_CHANGE = 103  ' for Whistler only - use this to prevent nested restore pts
    BEGIN_NESTED_SYSTEM_CHANGE_NORP = 104
    END_NESTED_SYSTEM_CHANGE_NORP = END_NESTED_SYSTEM_CHANGE
    MAX_EVENT = 104
End Enum
Public Enum SysRestorePointTypes
    SRPT_MIN_RPT = 0
    SRPT_APPLICATION_INSTALL = 0
    SRPT_APPLICATION_UNINSTALL = 1
    SRPT_DESKTOP_SETTING = 2 /* Not implemented */
    SRPT_ACCESSIBILITY_SETTING = 3 /* Not implemented */
    SRPT_OE_SETTING = 4 /* Not implemented */
    SRPT_APPLICATION_RUN = 5 /* Not implemented */
    SRPT_RESTORE = 6
    SRPT_CHECKPOINT = 7
    SRPT_WINDOWS_SHUTDOWN = 8 /* Not implemented */
    SRPT_WINDOWS_BOOT = 9 /* Not implemented */
    SRPT_DEVICE_DRIVER_INSTALL = 10
    SRPT_FIRSTRUN = 11
    SRPT_MODIFY_SETTINGS = 12
    SRPT_CANCELLED_OPERATION = 13 /* Only valid for END_SYSTEM_CHANGE */
    SRPT_BACKUP_RECOVERY = 14
    SRPT_BACKUP = 15
    SRPT_MANUAL_CHECKPOINT = 16
    SRPT_WINDOWS_UPDATE = 17
    SRPT_CRITICAL_UPDATE = 18
    SRPT_MAX_RPT = 18
End Enum
Private Const MAX_DESC  = 64
Private Const MAX_DESC_W  = 256  ' longer for Whistler

Public Type RESTOREPOINTINFOA
    dwEventType As SysRestoreEventTypes ' Type of Event - Begin or End
    dwRestorePtType As SysRestorePointTypes ' Type of Restore Point - App install/uninstall
    llSequenceNumber As LongLong ' Sequence Number - 0 for begin
    szDescription(0 To (MAX_DESC - 1)) As Byte ' Description - Name of Application / Operation
End Type
Public Type RESTOREPOINTINFOW
    dwEventType As SysRestoreEventTypes ' Type of Event - Begin or End
    dwRestorePtType As SysRestorePointTypes ' Type of Restore Point - App install/uninstall
    llSequenceNumber As LongLong ' Sequence Number - 0 for begin
    szDescription(0 To (MAX_DESC - 1)) As Integer ' Description - Name of Application / Operation
End Type
'Alias RESTOREPOINTINFO As RESTOREPOINTINFOW
Public Type RESTOREPOINTINFO
    dwEventType As SysRestoreEventTypes ' Type of Event - Begin or End
    dwRestorePtType As SysRestorePointTypes ' Type of Restore Point - App install/uninstall
    llSequenceNumber As LongLong ' Sequence Number - 0 for begin
    szDescription(0 To (MAX_DESC - 1)) As Integer ' Description - Name of Application / Operation
End Type

Public Type RESTOREPOINTINFOEX
    ftCreation As FILETIME
    dwEventType As SysRestoreEventTypes
    dwRestorePtType As SysRestorePointTypes
    dwRPNum As Long
    szDescription(0 To (MAX_DESC_W - 1)) As Integer
End Type

[PackingAlignment(1)]
Public Type SMGRSTATUS
    nStatus As Long ' Status returned by State Manager Process
    llSequenceNumber As LongLong ' Sequence Number for the restore point
End Type

Public Declare PtrSafe Function SRSetRestorePointA Lib "srclient.dll" (pRestorePtSpec As RESTOREPOINTINFOA, pSMgrStatus As SMGRSTATUS) As BOOL
Public Declare PtrSafe Function SRSetRestorePointW Lib "srclient.dll" (pRestorePtSpec As RESTOREPOINTINFOW, pSMgrStatus As SMGRSTATUS) As BOOL
Public DeclareWide PtrSafe Function SRSetRestorePoint Lib "srclient.dll" Alias "SRSetRestorePointW" (pRestorePtSpec As RESTOREPOINTINFO, pSMgrStatus As SMGRSTATUS) As BOOL
Public Declare PtrSafe Function SRSetRestorePointInternal Lib "srclient.dll" (pRestorePtSpec As RESTOREPOINTINFOW, pSMgrStatus As SMGRSTATUS, ByVal fForceSurrogate As BOOL) As BOOL
Public Declare PtrSafe Function SRRemoveRestorePoint Lib "srclient.dll" (ByVal dwRPNum As Long) As Long


'Cabinet API
'fdi_fcitypes.h - 100%
'fci.h - 100%
'fdi.h - 100%

Public Type ERF
    erfOper As Long ' FCI/FDI error code -- see FDIERROR_XXX
    '  and FCIERR_XXX equates for details.
    erfType As Long ' Optional error value filled in by FCI/FDI.
    ' For FCI, this is usually the C run-time
    ' *errno* value.
    fError As BOOL ' TRUE => error present
End Type

Public Const CB_MAX_CHUNK  = 32768
Public Const CB_MAX_DISK  = &H7fffffff
Public Const CB_MAX_FILENAME  = 256
Public Const CB_MAX_CABINET_NAME  = 256
Public Const CB_MAX_CAB_PATH  = 256
Public Const CB_MAX_DISK_NAME  = 256

Public Enum FdiFciTcompValues
    tcompMASK_TYPE = &H000F  ' Mask for compression type
    tcompTYPE_NONE = &H0000  ' No compression
    tcompTYPE_MSZIP = &H0001  ' MSZIP
    tcompTYPE_QUANTUM = &H0002  ' Quantum
    tcompTYPE_LZX = &H0003  ' LZX
    tcompBAD = &H000F  ' Unspecified compression type
    tcompMASK_LZX_WINDOW = &H1F00  ' Mask for LZX Compression Memory
    tcompLZX_WINDOW_LO = &H0F00  ' Lowest LZX Memory (15)
    tcompLZX_WINDOW_HI = &H1500  ' Highest LZX Memory (21)
    tcompSHIFT_LZX_WINDOW = 8  ' Amount to shift over to get int
    tcompMASK_QUANTUM_LEVEL = &H00F0  ' Mask for Quantum Compression Level
    tcompQUANTUM_LEVEL_LO = &H0010  ' Lowest Quantum Level (1)
    tcompQUANTUM_LEVEL_HI = &H0070  ' Highest Quantum Level (7)
    tcompSHIFT_QUANTUM_LEVEL = 4  ' Amount to shift over to get int
    tcompMASK_QUANTUM_MEM = &H1F00  ' Mask for Quantum Compression Memory
    tcompQUANTUM_MEM_LO = &H0A00  ' Lowest Quantum Memory (10)
    tcompQUANTUM_MEM_HI = &H1500  ' Highest Quantum Memory (21)
    tcompSHIFT_QUANTUM_MEM = 8  ' Amount to shift over to get int
    tcompMASK_RESERVED = &HE000&  ' Reserved bits (high 3 bits)
End Enum

' #define CompressionTypeFromTCOMP(tc) \
' ((tc) & tcompMASK_TYPE)
Public Function CompressionTypeFromTCOMP([TypeHint(FdiFciTcompValues)] ByVal tc As Integer) As Integer
    Return (tc) And CInt(tcompMASK_TYPE)
End Function
    

' #define CompressionLevelFromTCOMP(tc) \
' (((tc) & tcompMASK_QUANTUM_LEVEL) >> tcompSHIFT_QUANTUM_LEVEL)
Public Function CompressionLevelFromTCOMP([TypeHint(FdiFciTcompValues)] ByVal tc As Integer) As Integer
    Return (((tc) And CInt(tcompMASK_QUANTUM_LEVEL)) >> CInt(tcompSHIFT_QUANTUM_LEVEL))
End Function
    
' #define CompressionMemoryFromTCOMP(tc) \
' (((tc) & tcompMASK_QUANTUM_MEM) >> tcompSHIFT_QUANTUM_MEM)
Public Function CompressionMemoryFromTCOMP([TypeHint(FdiFciTcompValues)] ByVal tc As Integer) As Integer
   Return (((tc) And CInt(tcompMASK_QUANTUM_MEM)) >> CInt(tcompSHIFT_QUANTUM_MEM))
End Function

' #define TCOMPfromTypeLevelMemory(t,l,m)           \
' (((m) << tcompSHIFT_QUANTUM_MEM  ) |  \
 ' ((l) << tcompSHIFT_QUANTUM_LEVEL) |  \
 ' ( t                             ))
 Public Function TCOMPfromTypeLevelMemory(ByVal t As Integer, ByVal l As Integer, ByVal m As Integer) As Integer
    Return (((m) << CInt(tcompSHIFT_QUANTUM_MEM)) Or ((l) << CInt(tcompSHIFT_QUANTUM_LEVEL)) Or (t))
 End Function

' #define LZXCompressionWindowFromTCOMP(tc) \
' (((tc) & tcompMASK_LZX_WINDOW) >> tcompSHIFT_LZX_WINDOW)
Public Function LZXCompressionWindowFromTCOMP([TypeHint(FdiFciTcompValues)] ByVal tc As Integer) As Integer
    Return (((tc) And CInt(tcompMASK_LZX_WINDOW)) >> CInt(tcompSHIFT_LZX_WINDOW))
End Function
' #define TCOMPfromLZXWindow(w)      \
' (((w) << tcompSHIFT_LZX_WINDOW ) |  \
 ' ( tcompTYPE_LZX ))
Public Function TCOMPfromLZXWindow(ByVal w As Integer) As Integer
    Return (((w) << CInt(tcompSHIFT_LZX_WINDOW)) Or (CInt(tcompTYPE_LZX)))
End Function


Public Enum FCIERROR
    FCIERR_NONE ' No error
    FCIERR_OPEN_SRC ' Failure opening file to be stored in cabinet
    '   erf.erfTyp has C run-time *errno* value
    FCIERR_READ_SRC   ' Failure reading file to be stored in cabinet
    '   erf.erfTyp has C run-time *errno* value
    FCIERR_ALLOC_FAIL  ' Out of memory in FCI
    FCIERR_TEMP_FILE   ' Could not create a temporary file
    '   erf.erfTyp has C run-time *errno* value
    FCIERR_BAD_COMPR_TYPE  ' Unknown compression type
    FCIERR_CAB_FILE  ' Could not create cabinet file
    '   erf.erfTyp has C run-time *errno* value
    FCIERR_USER_ABORT  ' Client requested abort
    FCIERR_MCI_FAIL  ' Failure compressing data
    FCIERR_CAB_FORMAT_LIMIT   ' Data-size or file-count exceeded CAB format limits
    '  i.e. Total-bytes (uncompressed) in a CAB-folder exceeded 0x7FFF8000 (~ 2GB)
    '   or, CAB size (compressed) exceeded 0x7FFFFFFF
    '   or, File-count in CAB exceeded 0xFFFF
End Enum

Public Const _A_NAME_IS_UTF = &H80
Public Const _A_EXEC = &H40

Public Type CCAB
    ' longs first
    cb As Long ' size available for cabinet on this media
    cbFolderThresh As Long ' Thresshold for forcing a new Folder
    ' then ints
    cbReserveCFHeader As Long ' Space to reserve in CFHEADER
    cbReserveCFFolder As Long ' Space to reserve in CFFOLDER
    cbReserveCFData As Long ' Space to reserve in CFDATA
    iCab As Long ' sequential numbers for cabinets
    iDisk As Long ' Disk number
    '#ifndef REMOVE_CHICAGO_M6_HACK
    fFailOnIncompressible As Long ' TRUE => Fail if a block is incompressible
    '#endif
    '  then shorts
    setID As Integer ' Cabinet set ID
    ' then chars
    szDisk(0 To (CB_MAX_DISK_NAME - 1)) As Byte ' current disk name
    szCab(0 To (CB_MAX_CABINET_NAME - 1)) As Byte ' current cabinet name
    szCabPath(0 To (CB_MAX_CAB_PATH - 1)) As Byte ' path for creating cabinet
End Type

' typedef void HUGE * (FAR DIAMONDAPI *PFNFCIALLOC)(ULONG cb); /* pfna */
' #define FNFCIALLOC(fn) void HUGE * FAR DIAMONDAPI fn(ULONG cb)
Public Delegate Function FciAlloc CDecl (ByVal cb As Long) As LongPtr
' typedef void (FAR DIAMONDAPI *PFNFCIFREE)(void HUGE *memory); /* pfnf */
' #define FNFCIFREE(fn) void FAR DIAMONDAPI fn(void HUGE *memory)
Public Delegate Sub FciFree CDecl (ByVal memory As LongPtr)

' typedef INT_PTR (FAR DIAMONDAPI *PFNFCIOPEN) (_In_ LPSTR pszFile, int oflag, int pmode, int FAR *err, void FAR *pv);
Public Delegate Function FciOpen CDecl (ByVal pszFile As LongPtr, ByVal oflag As Long, ByVal pmode As Long, ByVal errptr As LongPtr, ByVal pv As LongPtr) As LongPtr
' typedef UINT (FAR DIAMONDAPI *PFNFCIREAD) (INT_PTR hf, void FAR *memory, UINT cb, int FAR *err, void FAR *pv);
Public Delegate Function FciRead CDecl (ByVal hf As LongPtr, ByVal memory As LongPtr, ByVal cb As Long, ByVal errptr As LongPtr, ByVal pv As LongPtr) As Long
' typedef UINT (FAR DIAMONDAPI *PFNFCIWRITE)(INT_PTR hf, void FAR *memory, UINT cb, int FAR *err, void FAR *pv);
Public Delegate Function FciWrite CDecl (ByVal hf As LongPtr, ByVal memory As LongPtr, ByVal cb As Long, ByVal errptr As LongPtr, ByVal pv As LongPtr) As Long
' typedef int  (FAR DIAMONDAPI *PFNFCICLOSE)(INT_PTR hf, int FAR *err, void FAR *pv);
Public Delegate Function FciClose CDecl (ByVal hf As LongPtr, ByVal errptr As LongPtr, ByVal pv As LongPtr) As Long
' typedef long (FAR DIAMONDAPI *PFNFCISEEK) (INT_PTR hf, long dist, int seektype, int FAR *err, void FAR *pv);
Public Delegate Function FciSeek CDecl (ByVal hf As LongPtr, ByVal dist As Long, ByVal seektype As Long, ByVal errptr As LongPtr, ByVal pv As LongPtr) As Long
' typedef int  (FAR DIAMONDAPI *PFNFCIDELETE) (_In_ LPSTR pszFile, int FAR *err, void FAR *pv);
Public Delegate Function FciDelete CDecl (ByVal pszFile As LongPtr, ByVal errptr As LongPtr, ByVal pv As LongPtr) As Long

' #define FNFCIOPEN(fn) INT_PTR FAR DIAMONDAPI fn(_In_ LPSTR pszFile, int oflag, int pmode, int FAR *err, void FAR *pv)
' #define FNFCIREAD(fn) UINT FAR DIAMONDAPI fn(INT_PTR hf, void FAR *memory, UINT cb, int FAR *err, void FAR *pv)
' #define FNFCIWRITE(fn) UINT FAR DIAMONDAPI fn(INT_PTR hf, void FAR *memory, UINT cb, int FAR *err, void FAR *pv)
' #define FNFCICLOSE(fn) int FAR DIAMONDAPI fn(INT_PTR hf, int FAR *err, void FAR *pv)
' #define FNFCISEEK(fn) long FAR DIAMONDAPI fn(INT_PTR hf, long dist, int seektype, int FAR *err, void FAR *pv)
' #define FNFCIDELETE(fn) int FAR DIAMONDAPI fn(_In_ LPSTR pszFile, int FAR *err, void FAR *pv)

' typedef BOOL (DIAMONDAPI *PFNFCIGETNEXTCABINET)(PCCAB  pccab,
' ULONG  cbPrevCab,
' void FAR *pv); /* pfnfcignc */
Public Delegate Function FciGetNextCabinet CDecl (pccab As CCAB, ByVal cbPrevCab As Long, ByVal pv As LongPtr) As BOOL
' #define FNFCIGETNEXTCABINET(fn) BOOL DIAMONDAPI fn(PCCAB  pccab,     \
   ' ULONG  cbPrevCab, \
   ' void FAR *pv)
   
' typedef int (DIAMONDAPI *PFNFCIFILEPLACED)(PCCAB pccab,
' _In_ LPSTR pszFile,
' long  cbFile,
' BOOL  fContinuation,
' void FAR *pv); /* pfnfcifp */
Public Delegate Function FciFilePlaced CDecl (ByVal pccab As LongPtr, ByVal pszFile As LongPtr, ByVal cbFile As Long, ByVal fContinuation As BOOL, ByVal pv As LongPtr) As Long

' #define FNFCIFILEPLACED(fn) int DIAMONDAPI fn(PCCAB pccab,              \
   ' _In_ LPSTR pszFile,   \
   ' long  cbFile,             \
   ' BOOL  fContinuation,      \
   ' void FAR *pv)
   
   ' typedef INT_PTR (DIAMONDAPI *PFNFCIGETOPENINFO)(_In_ LPSTR pszName,
   ' USHORT *pdate,
   ' USHORT *ptime,
   ' USHORT *pattribs,
   ' int FAR *err,
   ' void FAR *pv); /* pfnfcigoi */
   Public Delegate Function FciGetOpenInfo CDecl (ByVal pszName As LongPtr, pdate As Integer, ptime As Integer, pattribs As Integer, ByVal errptr As LongPtr, ByVal pv As LongPtr) As LongPtr
' #define FNFCIGETOPENINFO(fn) INT_PTR DIAMONDAPI fn(_In_ LPSTR pszName,  \
      ' USHORT *pdate,    \
      ' USHORT *ptime,    \
      ' USHORT *pattribs, \
      ' int FAR *err, \
      ' void FAR *pv)

    Public Enum FciCabStatus
        statusFile = 0  ' Add File to Folder callback
        statusFolder = 1  ' Add Folder to Cabinet callback
        statusCabinet = 2  ' Write out a completed cabinet callback
    End Enum
    ' typedef long (DIAMONDAPI *PFNFCISTATUS)(UINT   typeStatus,
    ' ULONG  cb1,
    ' ULONG  cb2,
    ' void FAR *pv); /* pfnfcis */
    Public Delegate Function FciStatus CDecl (ByVal typeStatus As FciCabStatus, ByVal cb1 As Long, ByVal cb2 As Long, ByVal pv As LongPtr) As Long
' #define FNFCISTATUS(fn) long DIAMONDAPI fn(UINT   typeStatus, \
       ' ULONG  cb1,        \
       ' ULONG  cb2,        \
       ' void FAR *pv)     
       ' typedef BOOL (DIAMONDAPI *PFNFCIGETTEMPFILE)(_Out_writes_bytes_(cbTempName) char *pszTempName,
       ' _In_range_(<=, 260) int   cbTempName,
       ' void FAR *pv); /* pfnfcigtf */
    Public Delegate Function FciGetTempFile CDecl (ByVal pszTempName As LongPtr, ByVal cbTempName As Long, ByVal pv As LongPtr) As Long
' #define FNFCIGETTEMPFILE(fn) BOOL DIAMONDAPI fn(_Out_writes_bytes_(cbTempName) char *pszTempName, \
          ' _In_range_(<=, 260) int   cbTempName, \
          ' void FAR *pv)
          
    
'    Public Declare PtrSafe Function FCICreate Lib "cabinet.dll" (perf As ERF, ByVal pfnfcifp As FciFilePlaced, ByVal pfna As FciAlloc, ByVal pfnf As FciFree, ByVal pfnopen As FciOpen, ByVal pfnread As FciRead, ByVal pfnwrite As FciWrite, ByVal pfnclose As FciClose, ByVal pfnseek As FciSeek, ByVal pfndelete As FciDelete, ByVal pfnfcigtf As FciGetTempFile, pccab As CCAB, Optional ByVal pv As LongPtr) As LongPtr
'    Public Declare PtrSafe Function FCIAddFile Lib "cabinet.dll" (ByVal hfci As LongPtr, ByVal pszSourceFile As String, ByVal pszFileName As String, ByVal fExecute As BOOL, ByVal pfnfcignc As FciGetNextCabinet, ByVal pfnfcis As FciStatus, ByVal pfnfcigoi As FciGetOpenInfo, [TypeHint(FdiFciTcompValues)] ByVal typeCompress As Integer) As BOOL
'    Public Declare PtrSafe Function FCIFlushCabinet Lib "cabinet.dll" (ByVal hfci As LongPtr, ByVal fGetNextCab As BOOL, ByVal pfnfcignc As FciGetNextCabinet, ByVal pfnfcis As FciStatus) As BOOL
'    Public Declare PtrSafe Function FCIFlushFolder Lib "cabinet.dll" (ByVal hfci As LongPtr, ByVal pfnfcignc As FciGetNextCabinet, ByVal pfnfcis As FciStatus) As BOOL
Public Declare PtrSafe Function FCICreate CDecl Lib "cabinet.dll" (perf As ERF, ByVal pfnfcifp As LongPtr, ByVal pfna As LongPtr, ByVal pfnf As LongPtr, ByVal pfnopen As LongPtr, ByVal pfnread As LongPtr, ByVal pfnwrite As LongPtr, ByVal pfnclose As LongPtr, ByVal pfnseek As LongPtr, ByVal pfndelete As LongPtr, ByVal pfnfcigtf As LongPtr, pccab As CCAB, Optional ByVal pv As LongPtr) As LongPtr
Public Declare PtrSafe Function FCIAddFile CDecl Lib "cabinet.dll" (ByVal hfci As LongPtr, ByVal pszSourceFile As String, ByVal pszFileName As String, ByVal fExecute As BOOL, ByVal pfnfcignc As LongPtr, ByVal pfnfcis As LongPtr, ByVal pfnfcigoi As LongPtr, [TypeHint(FdiFciTcompValues)] ByVal typeCompress As Integer) As BOOL
Public Declare PtrSafe Function FCIFlushCabinet CDecl Lib "cabinet.dll" (ByVal hfci As LongPtr, ByVal fGetNextCab As BOOL, ByVal pfnfcignc As LongPtr, ByVal pfnfcis As LongPtr) As BOOL
Public Declare PtrSafe Function FCIFlushFolder CDecl Lib "cabinet.dll" (ByVal hfci As LongPtr, ByVal pfnfcignc As LongPtr, ByVal pfnfcis As LongPtr) As BOOL
Public Declare PtrSafe Function FCIDestroy CDecl Lib "cabinet.dll" (ByVal hfci As LongPtr) As BOOL
   
   Public Enum FDIERROR
       FDIERROR_NONE = 0
       '  Description: No error
       '  Cause:       Function was successfull.
       '  Response:    Keep going!
       FDIERROR_CABINET_NOT_FOUND = 1
       '  Description: Cabinet not found
       '  Cause:       Bad file name or path passed to FDICopy(), or returned
       '               to fdintNEXT_CABINET.
       '  Response:    To prevent this error, validate the existence of the
       '               the cabinet *before* passing the path to FDI.
       FDIERROR_NOT_A_CABINET = 2
       '  Description: Cabinet file does not have the correct format
       '  Cause:       File passed to to FDICopy(), or returned to
       '               fdintNEXT_CABINET, is too small to be a cabinet file,
       '               or does not have the cabinet signature in its first
       '               four bytes.
       '  Response:    To prevent this error, call FDIIsCabinet() to check a
       '               cabinet before calling FDICopy() or returning the
       '               cabinet path to fdintNEXT_CABINET.
       FDIERROR_UNKNOWN_CABINET_VERSION = 3
       '  Description: Cabinet file has an unknown version number.
       '  Cause:       File passed to to FDICopy(), or returned to
       '               fdintNEXT_CABINET, has what looks like a cabinet file
       '               header, but the version of the cabinet file format
       '               is not one understood by this version of FDI.  The
       '               erf.erfType field is filled in with the version number
       '               found in the cabinet file.
       '  Response:    To prevent this error, call FDIIsCabinet() to check a
       '               cabinet before calling FDICopy() or returning the
       '               cabinet path to fdintNEXT_CABINET.
       FDIERROR_CORRUPT_CABINET = 4
       '  Description: Cabinet file is corrupt
       '  Cause:       FDI returns this error any time it finds a problem
       '               with the logical format of a cabinet file, and any
       '               time one of the passed-in file I/O calls fails when
       '               operating on a cabinet (PFNOPEN, PFNSEEK, PFNREAD,
       '               or PFNCLOSE).  The client can distinguish these two
       '               cases based upon whether the last file I/O call
       '               failed or not.
       '  Response:    Assuming this is not a real corruption problem in
       '               a cabinet file, the file I/O functions could attempt
       '               to do retries on failure (for example, if there is a
       '               temporary network connection problem).  If this does
       '               not work, and the file I/O call has to fail, then the
       '               FDI client will have to clean up and call the
       '               FDICopy() function again.
       FDIERROR_ALLOC_FAIL = 5
       '  Description: Could not allocate enough memory
       '  Cause:       FDI tried to allocate memory with the PFNALLOC
       '               function, but it failed.
       '  Response:    If possible, PFNALLOC should take whatever steps
       '               are possible to allocate the memory requested.  If
       '               memory is not immediately available, it might post a
       '               dialog asking the user to free memory, for example.
       '               Note that the bulk of FDI's memory allocations are
       '               made at FDICreate() time and when the first cabinet
       '               file is opened during FDICopy().
       FDIERROR_BAD_COMPR_TYPE = 6
       '  Description: Unknown compression type in a cabinet folder
       '  Cause:       [Should never happen.]  A folder in a cabinet has an
       '               unknown compression type.  This is probably caused by
       '               a mismatch between the version of Diamond used to
       '               create the cabinet and the FDI. LIB used to read the
       '               cabinet.
       '  Response:    Abort.
       FDIERROR_MDI_FAIL = 7
       '  Description: Failure decompressing data from a cabinet file
       '  Cause:       The decompressor found an error in the data coming
       '               from the file cabinet.  The cabinet file was corrupted.
       '               [11-Apr-1994 bens When checksuming is turned on, this
       '               error should never occur.]
       '  Response:    Probably should abort; only other choice is to cleanup
       '               and call FDICopy() again, and hope there was some
       '               intermittent data error that will not reoccur.
       FDIERROR_TARGET_FILE = 8
       '  Description: Failure writing to target file
       '  Cause:       FDI returns this error any time it gets an error back
       '               from one of the passed-in file I/O calls fails when
       '               writing to a file being extracted from a cabinet.
       '  Response:    To avoid or minimize this error, the file I/O functions
       '               could attempt to avoid failing.  A common cause might
       '               be disk full -- in this case, the PFNWRITE function
       '               could have a check for free space, and put up a dialog
       '               asking the user to free some disk space.
       FDIERROR_RESERVE_MISMATCH = 9
       '  Description: Cabinets in a set do not have the same RESERVE sizes
       '  Cause:       [Should never happen]. FDI requires that the sizes of
       '               the per-cabinet, per-folder, and per-data block
       '               RESERVE sections be consistent across all the cabinet
       '               in a set.  Diamond will only generate cabinet sets
       '               with these properties.
       '  Response:    Abort.
       FDIERROR_WRONG_CABINET = 10
       '  Description: Cabinet returned on fdintNEXT_CABINET is incorrect
       '  Cause:       NOTE: THIS ERROR IS NEVER RETURNED BY FDICopy()!
       '               Rather, FDICopy() keeps calling the fdintNEXT_CABINET
       '               callback until either the correct cabinet is specified,
       '               or you return ABORT.
       '               When FDICopy() is extracting a file that crosses a
       '               cabinet boundary, it calls fdintNEXT_CABINET to ask
       '               for the path to the next cabinet.  Not being very
       '               trusting, FDI then checks to make sure that the
       '               correct continuation cabinet was supplied!  It does
       '               this by checking the "setID" and "iCabinet" fields
       '               in the cabinet.  When DIAMOND.EXE creates a set of
       '               cabinets, it constructs the "setID" using the sum
       '               of the bytes of all the destination file names in
       '               the cabinet set.  FDI makes sure that the 16-bit
       '               setID of the continuation cabinet matches the
       '               cabinet file just processed.  FDI then checks that
       '               the cabinet number (iCabinet) is one more than the
       '               cabinet number for the cabinet just processed.
       '  Response:    You need code in your fdintNEXT_CABINET (see below)
       '               handler to do retries if you get recalled with this
       '               error.  See the sample code (EXTRACT.C) to see how
       '               this should be handled.
       FDIERROR_USER_ABORT = 11
       '  Description: FDI aborted.
       '  Cause:       An FDI callback returned -1 (usually).
       '  Response:    Up to client.
       FDIERROR_EOF = 12
       '  Description: Unexpected end of file.
       '  Cause:       This error may be returned instead of
       '               FDIERROR_CORRUPT_CABINET if PFNREAD returned 0.
       '  Response:    See FDIERROR_CORRUPT_CABINET above.
   End Enum
   
   Public Type FDICABINETINFO
       cbCabinet As Long ' Total length of cabinet file
       cFolders As Integer ' Count of folders in cabinet
       cFiles As Integer ' Count of files in cabinet
       setID As Integer ' Cabinet set ID
       iCabinet As Integer ' Cabinet number in set (0 based)
       fReserve As BOOL ' TRUE => RESERVE present in cabinet
       hasprev As BOOL ' TRUE => Cabinet is chained prev
       hasnext As BOOL ' TRUE => Cabinet is chained next
   End Type
   
   Public Enum FDIDECRYPTTYPE
       fdidtNEW_CABINET = 0 ' New cabinet
       fdidtNEW_FOLDER = 1 ' New folder
       fdidtDECRYPT = 2 ' Decrypt a data block
   End Enum
   
   Public Type FDIDECRYPT
       fdidt As FDIDECRYPTTYPE ' Command type (selects union below)
       pvUser As LongPtr 'void FAR ' Decryption context
       ' union {
           ' struct {                        // fdidtNEW_CABINET
               ' void FAR *pHeaderReserve;   // RESERVE section from CFHEADER
               ' USHORT    cbHeaderReserve;  // Size of pHeaderReserve
               ' USHORT    setID;            // Cabinet set ID
               ' int       iCabinet;         // Cabinet number in set (0 based)
           ' } cabinet;

           ' struct {                        // fdidtNEW_FOLDER
               ' void FAR *pFolderReserve;   // RESERVE section from CFFOLDER
               ' USHORT    cbFolderReserve;  // Size of pFolderReserve
               ' USHORT    iFolder;          // Folder number in cabinet (0 based)
           ' } folder;

           ' struct {                        // fdidtDECRYPT
               ' void FAR *pDataReserve;     // RESERVE section from CFDATA
               ' USHORT    cbDataReserve;    // Size of pDataReserve
               ' void FAR *pbData;           // Data buffer
               ' USHORT    cbData;           // Size of data buffer
               ' BOOL      fSplit;           // TRUE if this is a split data block
               ' USHORT    cbPartial;        // 0 if this is not a split block, or
                                           ' //  the first piece of a split block;
                                           ' // Greater than 0 if this is the
                                           ' //  second piece of a split block.
           ' } decrypt;
        ' pDataReserve As LongPtr
        ' cbDataReserve As Integer
        ' pbData As LongPtr
        ' cbData As Integer
        ' fSPlit As BOOL
        ' cbPartial As Integer
        #If Win64 Then
            u(39) As Byte
        #Else
            u(23) As Byte
        #End If
   End Type
   
   ' typedef void HUGE * (FAR DIAMONDAPI *PFNALLOC)(ULONG cb); /* pfna */
    Public Delegate Function FdiAlloc (ByVal cb As Long) As LongPtr
   ' #define FNALLOC(fn) void HUGE * FAR DIAMONDAPI fn(ULONG cb)

   ' typedef void (FAR DIAMONDAPI *PFNFREE)(_In_opt_ void HUGE *pv); /* pfnf */
    Public Delegate Sub FdiFree (ByVal pv As LongPtr)
   ' #define FNFREE(fn) void FAR DIAMONDAPI fn(_In_opt_ void HUGE *pv)


   ' //** File I/O functions for FDI
   ' typedef INT_PTR (FAR DIAMONDAPI *PFNOPEN) (_In_ LPSTR pszFile, int oflag, int pmode);
    Public Delegate Function FdiOpen CDecl (ByVal pszFile As LongPtr, ByVal oflag As Long, ByVal pmode As Long) As LongPtr
   ' typedef UINT (FAR DIAMONDAPI *PFNREAD) (_In_ INT_PTR hf, _Out_writes_bytes_(cb) void FAR *pv, UINT cb);
    Public Delegate Function FdiRead CDecl (ByVal hf As LongPtr, ByVal pv As LongPtr, ByVal cb As Long) As Long
   ' typedef UINT (FAR DIAMONDAPI *PFNWRITE)(_In_ INT_PTR hf, _In_reads_bytes_(cb) void FAR *pv, UINT cb);
   Public Delegate Function FdiWrite CDecl (ByVal hf As LongPtr, ByVal pv As LongPtr, ByVal cb As Long) As Long
   ' typedef int  (FAR DIAMONDAPI *PFNCLOSE)(_In_ INT_PTR hf);
   Public Delegate Function FdiClose CDecl (ByVal hf As LongPtr) As Long
   ' typedef long (FAR DIAMONDAPI *PFNSEEK) (_In_ INT_PTR hf, long dist, int seektype);
   Public Delegate Function FdiSeek CDecl (ByVal hf As LongPtr, ByVal dist As Long, ByVal seektype As Long) As Long

   ' #define FNOPEN(fn) INT_PTR FAR DIAMONDAPI fn(_In_ LPSTR pszFile, int oflag, int pmode)
   ' #define FNREAD(fn) UINT FAR DIAMONDAPI fn(_In_ INT_PTR hf, _Out_writes_bytes_(cb) void FAR *pv, UINT cb)
   ' #define FNWRITE(fn) UINT FAR DIAMONDAPI fn(_In_ INT_PTR hf, _In_reads_bytes_(cb) void FAR *pv, UINT cb)
   ' #define FNCLOSE(fn) int FAR DIAMONDAPI fn(_In_ INT_PTR hf)
   ' #define FNSEEK(fn) long FAR DIAMONDAPI fn(_In_ INT_PTR hf, long dist, int seektype)
   
   ' typedef int (FAR DIAMONDAPI *PFNFDIDECRYPT)(PFDIDECRYPT pfdid); /* pfnfdid */
   Public Delegate Function pfnFdiDecrypt CDecl (pfdid As FDIDECRYPT) As Long
   ' #define FNFDIDECRYPT(fn) int FAR DIAMONDAPI fn(PFDIDECRYPT pfdid)
   
   Public Type FDINOTIFICATION
       ' long fields
       cb As Long
       psz1 As LongPtr 'char FAR*
       psz2 As LongPtr 'char FAR
       psz3 As LongPtr 'char FAR ' Points to a 256 character buffer
       pv As LongPtr 'void FAR ' Value for client
       ' int fields
       hf As LongPtr
       ' short fields
       date As Integer
       time As Integer
       attribs As Integer
       setID As Integer ' Cabinet set ID
       iCabinet As Integer ' Cabinet number (0-based)
       iFolder As Integer ' Folder number (0-based)
       fdie As FDIERROR
   End Type
   
   Public Enum FDINOTIFICATIONTYPE
       fdintCABINET_INFO = 0 ' General information about cabinet
       fdintPARTIAL_FILE = 1 ' First file in cabinet is continuation
       fdintCOPY_FILE = 2 ' File to be copied
       fdintCLOSE_FILE_INFO = 3 ' close the file, set relevant info
       fdintNEXT_CABINET = 4 ' File continued to next cabinet
       fdintENUMERATE = 5 ' Enumeration status
   End Enum
   
   ' typedef INT_PTR (FAR DIAMONDAPI *PFNFDINOTIFY)(FDINOTIFICATIONTYPE fdint,
   ' PFDINOTIFICATION    pfdin); /* pfnfdin */
   Public Delegate Function FdiNotify CDecl (ByVal fdint As FDINOTIFICATIONTYPE, pfdin As FDINOTIFICATION) As LongPtr
' #define FNFDINOTIFY(fn) INT_PTR FAR DIAMONDAPI fn(FDINOTIFICATIONTYPE fdint, \
      ' PFDINOTIFICATION    pfdin)
 #If TWINBASIC Then
    #If Win64 = 0 Then
    [PackingAlignment(1)]
    #End If
    Public Type FDISPILLFILE
        ach(0 To 1) As Byte 'char ' Set to { '*', '\0' }
        cbFile As Long ' Required spill file size
    End Type
 #Else
    #If Win64 = 0 Then 'VB6 or VBA 32bit
    Public Type FDISPILLFILE
        ach(0 To 1) As Byte 'char ' Set to { '*', '\0' }
        cbFile1 As Integer ' Required spill file size
        cbFile2 As Integer '***cbFile is a single Long, this non-twinBASIC def splits them
                            'to preserve 1-byte alignment, preventing a padding insert
    End Type
    #Else 'VBA 64bit
    Public Type FDISPILLFILE
        ach(0 To 1) As Byte 'char ' Set to { '*', '\0' }
        cbFile As Long ' Required spill file size
    End Type
    #End If
 #End If
    Public Enum FdiCreateFlags
        cpuUNKNOWN = (-1) /* FDI does detection */
        cpu80286 = (0) /* '286 opcodes only */
        cpu80386 = (1) /* '386 opcodes used */
    End Enum
    
    ' Public Declare PtrSafe Function FDICreate Lib "cabinet.dll" (ByVal pfnalloc As FdiAlloc, ByVal pfnfree As FdiFree, ByVal pfnopen As FdiOpen, ByVal pfnread As FdiRead, ByVal pfnwrite As FdiWrite, ByVal pfnclose As FdiClose, ByVal pfnseek As FdiSeek, ByVal cpuType As FdiCreateFlags, perf As ERF) As LongPtr
    ' Public Declare PtrSafe Function FDIIsCabinet Lib "cabinet.dll" (ByVal hfdi As LongPtr, ByVal hf As LongPtr, pfdici As FDICABINETINFO) As BOOL
    ' Public Declare PtrSafe Function FDICopy Lib "cabinet.dll" (ByVal hfdi As LongPtr, ByVal pszCabinet As String, ByVal pszCabPath As String, ByVal flags As Long, ByVal pfnfdin As FdiNotify, ByVal pfnfdid As pfnFdiDecrypt, Optional ByVal pvUser As LongPtr) As BOOL
    Public Declare PtrSafe Function FDICreate CDecl Lib "cabinet.dll" (ByVal pfnalloc As LongPtr, ByVal pfnfree As LongPtr, ByVal pfnopen As LongPtr, ByVal pfnread As LongPtr, ByVal pfnwrite As LongPtr, ByVal pfnclose As LongPtr, ByVal pfnseek As LongPtr, ByVal cpuType As FdiCreateFlags, perf As ERF) As LongPtr
    Public Declare PtrSafe Function FDIIsCabinet CDecl Lib "cabinet.dll" (ByVal hfdi As LongPtr, ByVal hf As LongPtr, pfdici As FDICABINETINFO) As BOOL
    Public Declare PtrSafe Function FDICopy CDecl Lib "cabinet.dll" (ByVal hfdi As LongPtr, ByVal pszCabinet As String, ByVal pszCabPath As String, ByVal flags As Long, ByVal pfnfdin As LongPtr, ByVal pfnfdid As LongPtr, Optional ByVal pvUser As LongPtr) As BOOL
    Public Declare PtrSafe Function FDIDestroy CDecl Lib "cabinet.dll" (ByVal hfdi As LongPtr) As BOOL
    Public Declare PtrSafe Function FDITruncateCabinet CDecl Lib "cabinet.dll" (ByVal hfdi As LongPtr, ByVal pszCabinetName As String, ByVal iFolderToDelete As Integer) As BOOL
    
    
    
    
    
/*
compressapi.h, 100%
Compressor API
*/

Public Enum CompressorAlgorithms
    COMPRESS_ALGORITHM_INVALID = 0
    COMPRESS_ALGORITHM_NULL = 1
    COMPRESS_ALGORITHM_MSZIP = 2
    COMPRESS_ALGORITHM_XPRESS = 3
    COMPRESS_ALGORITHM_XPRESS_HUFF = 4
    COMPRESS_ALGORITHM_LZMS = 5
    COMPRESS_ALGORITHM_MAX = 6
    COMPRESS_RAW = (1& << 29)
End Enum

Public Type COMPRESS_ALLOCATION_ROUTINES
    Allocate As LongPtr 'PFN_COMPRESS_ALLOCATE
    Free As LongPtr 'PFN_COMPRESS_FREE
    UserContext As LongPtr
End Type

Public Enum COMPRESS_INFORMATION_CLASS
    COMPRESS_INFORMATION_CLASS_INVALID = 0
    COMPRESS_INFORMATION_CLASS_BLOCK_SIZE
    COMPRESS_INFORMATION_CLASS_LEVEL
End Enum

Public Declare PtrSafe Function CreateCompressor Lib "Cabinet.dll" (ByVal Algorithm As CompressorAlgorithms, AllocationRoutines As COMPRESS_ALLOCATION_ROUTINES, CompressorHandle As LongPtr) As BOOL
Public Declare PtrSafe Function SetCompressorInformation Lib "Cabinet.dll" (ByVal CompressorHandle As LongPtr, ByVal CompressInformationClass As COMPRESS_INFORMATION_CLASS, CompressInformation As Any, ByVal CompressInformationSize As LongPtr) As BOOL
Public Declare PtrSafe Function QueryCompressorInformation Lib "Cabinet.dll" (ByVal CompressorHandle As LongPtr, ByVal CompressInformationClass As COMPRESS_INFORMATION_CLASS, CompressInformation As Any, ByVal CompressInformationSize As LongPtr) As BOOL
Public Declare PtrSafe Function CompressorCompress Lib "Cabinet.dll" Alias "Compress" (ByVal CompressorHandle As LongPtr, UncompressedData As Any, ByVal UncompressedDataSize As LongPtr, CompressedBuffer As Any, CompressedDataSize As LongPtr) As BOOL
Public Declare PtrSafe Function ResetCompressor Lib "Cabinet.dll" (ByVal CompressorHandle As LongPtr) As BOOL
Public Declare PtrSafe Function CloseCompressor Lib "Cabinet.dll" (ByVal CompressorHandle As LongPtr) As BOOL
Public Declare PtrSafe Function CreateDecompressor Lib "Cabinet.dll" (ByVal Algorithm As CompressorAlgorithms, AllocationRoutines As COMPRESS_ALLOCATION_ROUTINES, DecompressorHandle As LongPtr) As BOOL
Public Declare PtrSafe Function SetDecompressorInformation Lib "Cabinet.dll" (ByVal DecompressorHandle As LongPtr, ByVal CompressInformationClass As COMPRESS_INFORMATION_CLASS, CompressInformation As Any, ByVal CompressInformationSize As LongPtr) As BOOL
Public Declare PtrSafe Function QueryDecompressorInformation Lib "Cabinet.dll" (ByVal DecompressorHandle As LongPtr, ByVal CompressInformationClass As COMPRESS_INFORMATION_CLASS, CompressInformation As Any, ByVal CompressInformationSize As LongPtr) As BOOL
Public Declare PtrSafe Function CompressorDecompress Lib "Cabinet.dll" Alias "Decompress" (ByVal DecompressorHandle As LongPtr, CompressedData As Any, ByVal CompressedDataSize As LongPtr, UncompressedBuffer As Any, UncompressedDataSize As LongPtr) As BOOL
Public Declare PtrSafe Function ResetDecompressor Lib "Cabinet.dll" (ByVal DecompressorHandle As LongPtr) As BOOL
Public Declare PtrSafe Function CloseDecompressor Lib "Cabinet.dll" (ByVal DecompressorHandle As LongPtr) As BOOL



/*
wcmapi.h
*/

Public Const WCM_API_VERSION_1_0  = &H00000001
Public Const WCM_API_VERSION  = WCM_API_VERSION_1_0
Public Const WCM_UNKNOWN_DATAPLAN_STATUS  = &HFFFFFFFF
Public Const WCM_MAX_PROFILE_NAME  = 256

Public Enum WCM_PROPERTY
    wcm_global_property_domain_policy
    wcm_global_property_minimize_policy
    wcm_global_property_roaming_policy = 2
    wcm_global_property_powermanagement_policy
    wcm_intf_property_connection_cost   ' used to set/get cost level and flags for the connection
    wcm_intf_property_dataplan_status   ' used by MNO to indicate plan data associated with new cost
    wcm_intf_property_hotspot_profile   ' used to store hotspot profile (WISPr credentials)
End Enum

Public Enum WCM_MEDIA_TYPE
    wcm_media_unknown
    wcm_media_ethernet
    wcm_media_wlan
    wcm_media_mbn
    wcm_media_invalid
    wcm_media_max
End Enum

Public Type WCM_POLICY_VALUE
    fValue As BOOL
    fIsGroupPolicy As BOOL
End Type

Public Type WCM_PROFILE_INFO
    strProfileName(0 To (WCM_MAX_PROFILE_NAME - 1)) As Integer
    AdapterGUID As UUID
    Media As WCM_MEDIA_TYPE
End Type

[Description("WARNING: ProfileInfo is a variable C-style array. Len/LenB is invalid.")]
Public Type WCM_PROFILE_INFO_LIST
    dwNumberOfItems As Long
    ProfileInfo(127) As WCM_PROFILE_INFO
End Type

Public Enum WCM_CONNECTION_COST
    '  cost level
    WCM_CONNECTION_COST_UNKNOWN = &H0
    WCM_CONNECTION_COST_UNRESTRICTED = &H1
    WCM_CONNECTION_COST_FIXED = &H2
    WCM_CONNECTION_COST_VARIABLE = &H4
    '  cost flags
    WCM_CONNECTION_COST_OVERDATALIMIT = &H10000
    WCM_CONNECTION_COST_CONGESTED = &H20000
    WCM_CONNECTION_COST_ROAMING = &H40000
    WCM_CONNECTION_COST_APPROACHINGDATALIMIT = &H80000
End Enum

Public Enum WCM_CONNECTION_COST_SOURCE
    WCM_CONNECTION_COST_SOURCE_DEFAULT = 0
    WCM_CONNECTION_COST_SOURCE_GP = 1
    WCM_CONNECTION_COST_SOURCE_USER = 2
    WCM_CONNECTION_COST_SOURCE_OPERATOR = 3
End Enum

Public Type WCM_CONNECTION_COST_DATA
    ConnectionCost As Long ' a bit-or of WCM_CONNECTION_COST
    CostSource As WCM_CONNECTION_COST_SOURCE
    ' other fields will be added later
End Type

Public Type WCM_TIME_INTERVAL
    wYear As Integer ' [0, 30827]
    wMonth As Integer ' [0,12]
    wDay As Integer ' [0,31]
    wHour As Integer ' [0,23]
    wMinute As Integer ' [0,59]
    wSecond As Integer ' [0,59]
    wMilliseconds As Integer ' [0,999]
End Type

Public Type WCM_USAGE_DATA
    UsageInMegabytes As Long
    LastSyncTime As FILETIME
End Type

Public Type WCM_BILLING_CYCLE_INFO
    StartDate As FILETIME
    Duration As WCM_TIME_INTERVAL
    Reset As BOOL
End Type

Public Type WCM_DATAPLAN_STATUS
    UsageData As WCM_USAGE_DATA
    DataLimitInMegabytes As Long
    InboundBandwidthInKbps As Long
    OutboundBandwidthInKbps As Long
    BillingCycle As WCM_BILLING_CYCLE_INFO
    MaxTransferSizeInMegabytes As Long
    Reserved As Long
End Type

Public Declare PtrSafe Function WcmQueryProperty Lib "wcmapi.dll" (pInterface As UUID, ByVal strProfileName As LongPtr, ByVal Property As WCM_PROPERTY, ByVal pReserved As LongPtr, pdwDataSize As Long, ppData As LongPtr) As Long
Public Declare PtrSafe Function WcmSetProperty Lib "wcmapi.dll" (pInterface As UUID, ByVal strProfileName As LongPtr, ByVal Property As WCM_PROPERTY, ByVal pReserved As LongPtr, ByVal dwDataSize As Long, pbData As Any) As Long
Public Declare PtrSafe Function WcmGetProfileList Lib "wcmapi.dll" (ByVal pReserved As LongPtr, ppProfileList As LongPtr) As Long
Public Declare PtrSafe Function WcmSetProfileList Lib "wcmapi.dll" (pProfileList As WCM_PROFILE_INFO_LIST, ByVal dwPosition As Long, ByVal fIgnoreUnknownProfiles As BOOL, ByVal pReserved As LongPtr) As Long
Public Declare PtrSafe Sub WcmFreeMemory Lib "wcmapi.dll" (ByVal pMemory As LongPtr)



/*
pdh.h
*/

Public Type PDH_FMT_COUNTERVALUE
	CStatus As PDH_STATUS
    pad As Long
    data(7) As Byte
    ' union {
        ' LONG        longValue;
        ' double      doubleValue;
        ' LONGLONG    largeValue;
        ' LPCSTR      AnsiStringValue;
        ' LPCWSTR     WideStringValue;
    ' };
End Type

Public Enum PDH_STATUS
    PDH_CSTATUS_VALID_DATA = &H00000000
    PDH_CSTATUS_NEW_DATA = &H00000001
    PDH_CSTATUS_NO_MACHINE = &H800007D0
    PDH_CSTATUS_NO_INSTANCE = &H800007D1
    PDH_MORE_DATA = &H800007D2
    PDH_CSTATUS_ITEM_NOT_VALIDATED = &H800007D3
    PDH_RETRY = &H800007D4
    PDH_NO_DATA = &H800007D5
    PDH_CALC_NEGATIVE_DENOMINATOR = &H800007D6
    PDH_CALC_NEGATIVE_TIMEBASE = &H800007D7
    PDH_CALC_NEGATIVE_VALUE = &H800007D8
    PDH_DIALOG_CANCELLED = &H800007D9
    PDH_END_OF_LOG_FILE = &H800007DA
    PDH_ASYNC_QUERY_TIMEOUT = &H800007DB
    PDH_CANNOT_SET_DEFAULT_REALTIME_DATASOURCE = &H800007DC
    PDH_UNABLE_MAP_NAME_FILES = &H80000BD5
    PDH_PLA_VALIDATION_WARNING = &H80000BF3
    MSG_Publisher_Name = &H90000001
    PDH_CSTATUS_NO_OBJECT = &HC0000BB8
    PDH_CSTATUS_NO_COUNTER = &HC0000BB9
    PDH_CSTATUS_INVALID_DATA = &HC0000BBA
    PDH_MEMORY_ALLOCATION_FAILURE = &HC0000BBB
    PDH_INVALID_HANDLE = &HC0000BBC
    PDH_INVALID_ARGUMENT = &HC0000BBD
    PDH_FUNCTION_NOT_FOUND = &HC0000BBE
    PDH_CSTATUS_NO_COUNTERNAME = &HC0000BBF
    PDH_CSTATUS_BAD_COUNTERNAME = &HC0000BC0
    PDH_INVALID_BUFFER = &HC0000BC1
    PDH_INSUFFICIENT_BUFFER = &HC0000BC2
    PDH_CANNOT_CONNECT_MACHINE = &HC0000BC3
    PDH_INVALID_PATH = &HC0000BC4
    PDH_INVALID_INSTANCE = &HC0000BC5
    PDH_INVALID_DATA = &HC0000BC6
    PDH_NO_DIALOG_DATA = &HC0000BC7
    PDH_CANNOT_READ_NAME_STRINGS = &HC0000BC8
    PDH_LOG_FILE_CREATE_ERROR = &HC0000BC9
    PDH_LOG_FILE_OPEN_ERROR = &HC0000BCA
    PDH_LOG_TYPE_NOT_FOUND = &HC0000BCB
    PDH_NO_MORE_DATA = &HC0000BCC
    PDH_ENTRY_NOT_IN_LOG_FILE = &HC0000BCD
    PDH_DATA_SOURCE_IS_LOG_FILE = &HC0000BCE
    PDH_DATA_SOURCE_IS_REAL_TIME = &HC0000BCF
    PDH_UNABLE_READ_LOG_HEADER = &HC0000BD0
    PDH_FILE_NOT_FOUND = &HC0000BD1
    PDH_FILE_ALREADY_EXISTS = &HC0000BD2
    PDH_NOT_IMPLEMENTED = &HC0000BD3
    PDH_STRING_NOT_FOUND = &HC0000BD4
    PDH_UNKNOWN_LOG_FORMAT = &HC0000BD6
    PDH_UNKNOWN_LOGSVC_COMMAND = &HC0000BD7
    PDH_LOGSVC_QUERY_NOT_FOUND = &HC0000BD8
    PDH_LOGSVC_NOT_OPENED = &HC0000BD9
    PDH_WBEM_ERROR = &HC0000BDA
    PDH_ACCESS_DENIED = &HC0000BDB
    PDH_LOG_FILE_TOO_SMALL = &HC0000BDC
    PDH_INVALID_DATASOURCE = &HC0000BDD
    PDH_INVALID_SQLDB = &HC0000BDE
    PDH_NO_COUNTERS = &HC0000BDF
    PDH_SQL_ALLOC_FAILED = &HC0000BE0
    PDH_SQL_ALLOCCON_FAILED = &HC0000BE1
    PDH_SQL_EXEC_DIRECT_FAILED = &HC0000BE2
    PDH_SQL_FETCH_FAILED = &HC0000BE3
    PDH_SQL_ROWCOUNT_FAILED = &HC0000BE4
    PDH_SQL_MORE_RESULTS_FAILED = &HC0000BE5
    PDH_SQL_CONNECT_FAILED = &HC0000BE6
    PDH_SQL_BIND_FAILED = &HC0000BE7
    PDH_CANNOT_CONNECT_WMI_SERVER = &HC0000BE8
    PDH_PLA_COLLECTION_ALREADY_RUNNING = &HC0000BE9
    PDH_PLA_ERROR_SCHEDULE_OVERLAP = &HC0000BEA
    PDH_PLA_COLLECTION_NOT_FOUND = &HC0000BEB
    PDH_PLA_ERROR_SCHEDULE_ELAPSED = &HC0000BEC
    PDH_PLA_ERROR_NOSTART = &HC0000BED
    PDH_PLA_ERROR_ALREADY_EXISTS = &HC0000BEE
    PDH_PLA_ERROR_TYPE_MISMATCH = &HC0000BEF
    PDH_PLA_ERROR_FILEPATH = &HC0000BF0
    PDH_PLA_SERVICE_ERROR = &HC0000BF1
    PDH_PLA_VALIDATION_ERROR = &HC0000BF2
    PDH_PLA_ERROR_NAME_TOO_LONG = &HC0000BF4
    PDH_INVALID_SQL_LOG_FORMAT = &HC0000BF5
    PDH_COUNTER_ALREADY_IN_QUERY = &HC0000BF6
    PDH_BINARY_LOG_CORRUPT = &HC0000BF7
    PDH_LOG_SAMPLE_TOO_SMALL = &HC0000BF8
    PDH_OS_LATER_VERSION = &HC0000BF9
    PDH_OS_EARLIER_VERSION = &HC0000BFA
    PDH_INCORRECT_APPEND_TIME = &HC0000BFB
    PDH_UNMATCHED_APPEND_COUNTER = &HC0000BFC
    PDH_SQL_ALTER_DETAIL_FAILED = &HC0000BFD
    PDH_QUERY_PERF_DATA_TIMEOUT = &HC0000BFE
End Enum

Public Enum PDH_DATATYPE
    PDH_FMT_RAW = (&H00000010)
    PDH_FMT_ANSI = (&H00000020)
    PDH_FMT_UNICODE = (&H00000040)
    PDH_FMT_LONG = (&H00000100)
    PDH_FMT_DOUBLE = (&H00000200)
    PDH_FMT_LARGE = (&H00000400)
    PDH_FMT_NOSCALE = (&H00001000)
    PDH_FMT_1000 = (&H00002000)
    PDH_FMT_NODATA = (&H00004000)
    PDH_FMT_NOCAP100 = (&H00008000&)
    PERF_DETAIL_COSTLY = (&H00010000)
    PERF_DETAIL_STANDARD = (&H0000FFFF&)
End Enum

Public Enum PERF_COUNTER_TYPES
    PERF_COUNTER_LARGE_RAWCOUNT_HEX = 256
    PERF_COUNTER_TEXT = 2816
    PERF_COUNTER_RAWCOUNT = 65536
    PERF_COUNTER_LARGE_RAWCOUNT = 65792
    PERF_DOUBLE_RAW = 73728
    PERF_COUNTER_DELTA = 4195328
    PERF_COUNTER_LARGE_DELTA = 4195584
    PERF_SAMPLE_COUNTER = 4260864
    PERF_COUNTER_QUEUELEN_TYPE = 4523008
    PERF_COUNTER_LARGE_QUEUELEN_TYPE = 4523264
    PERF_COUNTER_100NS_QUEUELEN_TYPE = 5571840
    PERF_COUNTER_OBJ_TIME_QUEUELEN_TYPE = 6620416
    PERF_COUNTER_COUNTER = 272696320
    PERF_COUNTER_BULK_COUNT = 272696576
    PERF_RAW_FRACTION = 537003008
    PERF_COUNTER_TIMER = 541132032
    PERF_PRECISION_SYSTEM_TIMER = 541525248
    PERF_100NSEC_TIMER = 542180608
    PERF_PRECISION_100NS_TIMER = 542573824
    PERF_OBJ_TIME_TIMER = 543229184
    PERF_PRECISION_OBJECT_TIMER = 543622400
    PERF_SAMPLE_FRACTION = 549585920
    PERF_COUNTER_TIMER_INV = 557909248
    PERF_100NSEC_TIMER_INV = 558957824
    PERF_COUNTER_MULTI_TIMER = 574686464
    PERF_100NSEC_MULTI_TIMER = 575735040
    PERF_COUNTER_MULTI_TIMER_INV = 591463680
    PERF_100NSEC_MULTI_TIMER_INV = 592512256
    PERF_AVERAGE_TIMER = 805438464
    PERF_ELAPSED_TIME = 807666944
    PERF_COUNTER_NODATA = 1073742336
    PERF_AVERAGE_BULK = 1073874176
    PERF_SAMPLE_BASE = 1073939457
    PERF_AVERAGE_BASE = 1073939458
    PERF_RAW_BASE = 1073939459
    PERF_PRECISION_TIMESTAMP = 1073939712
    PERF_LARGE_RAW_BASE = 1073939715
    PERF_COUNTER_MULTI_BASE = 1107494144
End Enum

Public Declare PtrSafe Function PdhOpenQueryW Lib "Pdh.dll" (ByVal szDataSource As LongPtr, ByVal dwUserData As LongPtr, phQuery As LongPtr) As PDH_STATUS
Public Declare PtrSafe Function PdhOpenQueryA Lib "Pdh.dll" (ByVal szDataSource As String, ByVal dwUserData As LongPtr, phQuery As LongPtr) As PDH_STATUS
Public DeclareWide PtrSafe Function PdhOpenQuery Lib "Pdh.dll" Alias "PdhOpenQueryW" (ByVal szDataSource As String, ByVal dwUserData As LongPtr, phQuery As LongPtr) As PDH_STATUS

Public Declare PtrSafe Function PdhAddEnglishCounterA Lib "Pdh.dll" (ByVal hQuery As LongPtr, ByVal szFullCounterPath As String, ByVal dwUserData As LongPtr, phCounter As LongPtr) As PDH_STATUS
Public Declare PtrSafe Function PdhAddEnglishCounterW Lib "Pdh.dll" (ByVal hQuery As LongPtr, ByVal szFullCounterPath As LongPtr, ByVal dwUserData As LongPtr, phCounter As LongPtr) As PDH_STATUS
Public DeclareWide PtrSafe Function PdhAddEnglishCounter Lib "Pdh.dll" Alias "PdhAddEnglishCounterW" (ByVal hQuery As LongPtr, ByVal szFullCounterPath As String, ByVal dwUserData As LongPtr, phCounter As LongPtr) As PDH_STATUS
Public Declare PtrSafe Function PdhCollectQueryData Lib "Pdh.dll" (ByVal hQuery As LongPtr) As PDH_STATUS
Public Declare PtrSafe Function PdhGetFormattedCounterValue Lib "Pdh.dll" (ByVal hCounter As LongPtr, ByVal dwFormat As PDH_DATATYPE, lpdwType As PERF_COUNTER_TYPES, pValue As PDH_FMT_COUNTERVALUE) As PDH_STATUS






Public Enum SOFTDIST_FLAGS
    SOFTDIST_FLAG_USAGE_EMAIL = &H00000001
    SOFTDIST_FLAG_USAGE_PRECACHE = &H00000002
    SOFTDIST_FLAG_USAGE_AUTOINSTALL = &H00000004
    SOFTDIST_FLAG_DELETE_SUBSCRIPTION = &H00000008
End Enum
Public Enum SOFTDIST_STATE
    SOFTDIST_ADSTATE_NONE = &H00000000
    SOFTDIST_ADSTATE_AVAILABLE = &H00000001
    SOFTDIST_ADSTATE_DOWNLOADED = &H00000002
    SOFTDIST_ADSTATE_INSTALLED = &H00000003
End Enum
Public Type SOFTDISTINFO
    cbSize As Long
    dwFlags As SOFTDIST_FLAGS
    dwAdState As SOFTDIST_STATE
    szTitle As LongPtr
    szAbstract As LongPtr
    szHREF As LongPtr
    dwInstalledVersionMS As Long
    dwInstalledVersionLS As Long
    dwUpdateVersionMS As Long
    dwUpdateVersionLS As Long
    dwAdvertisedVersionMS As Long
    dwAdvertisedVersionLS As Long
    dwReserved As Long
End Type

Public Declare PtrSafe Function SoftwareUpdateMessageBox Lib "shdocvw" (ByVal hwnd As LongPtr, ByVal pszDistUnit As LongPtr, ByVal dwFlags As Long, psdi As SOFTDISTINFO) As MessageBoxResults


Public Type TRIVERTEX
	x As Long
	y As Long
	Red As Integer
	Green As Integer
	Blue As Integer
	Alpha As Integer
End Type

Public Enum GradientDrawingMode
	GRADIENT_FILL_RECT_H = &H00000000
	GRADIENT_FILL_RECT_V = &H00000001
	GRADIENT_FILL_TRIANGLE = &H00000002
	GRADIENT_FILL_OP_FLAG = &H000000ff
End Enum

Public Enum VersionGetExFlags
	FILE_VER_GET_LOCALISED = &H01
	FILE_VER_GET_NEUTRAL = &H02
	FILE_VER_GET_PREFETCHED = &H04
End Enum

Public Enum VersionFindFileFlags
    VFFF_ISSHAREDFILE = &H0001
End Enum
Public Enum VersionFindFIleErrors
	VFF_CURNEDEST = &H0001
	VFF_FILEINUSE = &H0002
	VFF_BUFFTOOSMALL = &H0004
End Enum


Public Enum VersionInstallFileFlags
	VIFF_FORCEINSTALL = &H0001
	VIFF_DONTDELETEOLD = &H0002
End Enum
Public Enum VersionInstallFileErrors
	VIF_TEMPFILE = &H00000001
	VIF_MISMATCH = &H00000002
	VIF_SRCOLD = &H00000004
	VIF_DIFFLANG = &H00000008
	VIF_DIFFCODEPG = &H00000010
	VIF_DIFFTYPE = &H00000020
	VIF_WRITEPROT = &H00000040
	VIF_FILEINUSE = &H00000080
	VIF_OUTOFSPACE = &H00000100
	VIF_ACCESSVIOLATION = &H00000200
	VIF_SHARINGVIOLATION = &H00000400
	VIF_CANNOTCREATE = &H00000800
	VIF_CANNOTDELETE = &H00001000
	VIF_CANNOTRENAME = &H00002000
	VIF_CANNOTDELETECUR = &H00004000
	VIF_OUTOFMEMORY = &H00008000&
	VIF_CANNOTREADSRC = &H00010000
	VIF_CANNOTREADDST = &H00020000
	VIF_BUFFTOOSMALL = &H00040000
	VIF_CANNOTLOADLZ32 = &H00080000
	VIF_CANNOTLOADCABINET = &H00100000
End Enum


[Description("📝**NOTE:** The last param of this API is ByVal BLENDFUNCTION; copy that 4-byte UDT to a Long, then pass that long. Do not pass a pointer.")]
Public Declare PtrSafe Function AlphaBlend Lib "Msimg32.dll" (ByVal hdcDest As LongPtr, ByVal xoriginDest As Long, ByVal yoriginDest As Long, ByVal wDest As Long, ByVal hDest As Long, ByVal hdcSrc As LongPtr, ByVal xoriginSrc As Long, ByVal yoriginSrc As Long, ByVal wSrc As Long, ByVal hSrc As Long, ByVal ftn As Long) As BOOL
Public Declare PtrSafe Function TransparentBlt Lib "Msimg32.dll" (ByVal hdcDest As LongPtr, ByVal xoriginDest As Long, ByVal yoriginDest As Long, ByVal wDest As Long, ByVal hDest As Long, ByVal hdcSrc As LongPtr, ByVal xoriginSrc As Long, ByVal yoriginSrc As Long, ByVal wSrc As Long, ByVal hSrc As Long, ByVal crTransparent As Long) As BOOL
Public Declare PtrSafe Function GradientFill Lib "Msimg32.dll" (ByVal hdc As LongPtr, pVertex As TRIVERTEX, ByVal nVertex As Long, pMesh As Any, ByVal nMesh As Long, ByVal ulMode As GradientDrawingMode) As BOOL





Public Enum CREATE_ASM_NAME_OBJ_FLAGS
    CANOF_PARSE_DISPLAY_NAME = &H1
    CANOF_SET_DEFAULT_VALUES = &H2
End Enum

Public Declare PtrSafe Function CreateAssemblyNameObject Lib "sxs.dll" (ppAssemblyNameObj As IAssemblyName, ByVal szAssemblyName As LongPtr, ByVal dwFlags As CREATE_ASM_NAME_OBJ_FLAGS, ByVal pvReserved As LongPtr) As Long
Public Declare PtrSafe Function CreateAssemblyCache Lib "sxs.dll" (ppAsmCache As IAssemblyCache, ByVal dwReserved As Long) As Long


Public Declare PtrSafe Function GetFileVersionInfoSizeA Lib "version.dll" (ByVal lptstrFilename As String, lpdwHandle As Long) As Long
Public Declare PtrSafe Function GetFileVersionInfoA Lib "version.dll" (ByVal lptstrFilename As String, ByVal dwhandle As Long, ByVal dwLen As Long, lpData As Any) As BOOL
Public Declare PtrSafe Function GetFileVersionInfoSizeW Lib "version.dll" (ByVal lptstrFilename As LongPtr, lpdwHandle As Long) As Long
Public DeclareWide PtrSafe Function GetFileVersionInfoW Lib "version.dll" (ByVal lptstrFilename As LongPtr, ByVal dwhandle As Long, ByVal dwLen As Long, lpData As Any) As BOOL
Public DeclareWide PtrSafe Function GetFileVersionInfoSize Lib "version.dll" Alias "GetFileVersionInfoSizeW" (ByVal lptstrFilename As String, lpdwHandle As Long) As Long
Public DeclareWide PtrSafe Function GetFileVersionInfo Lib "version.dll" Alias "GetFileVersionInfoW" (ByVal lptstrFilename As String, ByVal dwhandle As Long, ByVal dwLen As Long, lpData As Any) As BOOL
Public Declare PtrSafe Function GetFileVersionInfoSizeExA Lib "version.dll" (ByVal dwFlags As VersionGetExFlags, ByVal lptstrFilename As String, lpdwHandle As Long) As Long
Public Declare PtrSafe Function GetFileVersionInfoExA Lib "version.dll" (ByVal dwFlags As VersionGetExFlags, ByVal lptstrFilename As String, ByVal dwhandle As Long, ByVal dwLen As Long, lpData As Any) As BOOL
Public Declare PtrSafe Function GetFileVersionInfoSizeExW Lib "version.dll" (ByVal dwFlags As VersionGetExFlags, ByVal lptstrFilename As LongPtr, lpdwHandle As Long) As Long
Public DeclareWide PtrSafe Function GetFileVersionInfoExW Lib "version.dll" (ByVal dwFlags As VersionGetExFlags, ByVal lptstrFilename As LongPtr, ByVal dwhandle As Long, ByVal dwLen As Long, lpData As Any) As BOOL
Public DeclareWide PtrSafe Function GetFileVersionInfoSizeEx Lib "version.dll" Alias "GetFileVersionInfoSizeExW" (ByVal dwFlags As VersionGetExFlags, ByVal lptstrFilename As String, lpdwHandle As Long) As Long
Public DeclareWide PtrSafe Function GetFileVersionInfoEx Lib "version.dll" Alias "GetFileVersionInfoExW" (ByVal dwFlags As VersionGetExFlags, ByVal lptstrFilename As String, ByVal dwhandle As Long, ByVal dwLen As Long, lpData As Any) As BOOL
Public Declare PtrSafe Function GetFileVersionInfoByHandle Lib "version.dll" (ByVal dwFlags As VersionGetExFlags, ByVal hFile As LongPtr, lplpData As LongPtr, pdwLen As Long) As BOOL
Public Declare PtrSafe Function VerQueryValueA Lib "version.dll" (pBlock As Any, lpSubBlock As Any, lplpBuffer As LongPtr, puLen As Long) As BOOL
Public DeclareWide PtrSafe Function VerQueryValue Lib "version.dll" Alias "VerQueryValueW" (pBlock As Any, lpSubBlock As Any, lplpBuffer As LongPtr, puLen As Long) As BOOL
Public DeclareWide PtrSafe Function VerQueryValueW Lib "version.dll" (ByRef pBlock As Any, ByVal lpSubBlock As LongPtr, ByRef lplpBuffer As LongPtr, ByRef puLen As Long) As BOOL
Public Declare PtrSafe Function VerFindFileA Lib "version.dll" (ByVal uFlags As VersionFindFileFlags, ByVal szFileName As String, ByVal szWinDir As String, ByVal szAppDir As String, ByVal szCurDir As String, ByVal puCurDirLen As Long, ByVal szDestDir As String, puDestDirLen As Long) As VersionFindFIleErrors
Public Declare PtrSafe Function VerFindFileW Lib "version.dll" (ByVal uFlags As VersionFindFileFlags, ByVal szFileName As LongPtr, ByVal szWinDir As LongPtr, ByVal szAppDir As LongPtr, ByVal szCurDir As LongPtr, ByVal puCurDirLen As Long, ByVal szDestDir As LongPtr, puDestDirLen As Long) As VersionFindFIleErrors
Public DeclareWide PtrSafe Function VerFindFile Lib "version.dll" Alias "VerFindFileW" (ByVal uFlags As VersionFindFileFlags, ByVal szFileName As String, ByVal szWinDir As String, ByVal szAppDir As String, ByVal szCurDir As String, ByVal puCurDirLen As Long, ByVal szDestDir As String, puDestDirLen As Long) As VersionFindFIleErrors
Public Declare PtrSafe Function VerInstallFileA Lib "version.dll" (ByVal uFlags As VersionInstallFileFlags, ByVal szSrcFileName As String, ByVal szDestFileName As String, ByVal szSrcDir As String, ByVal szDestDir As String, ByVal szCurDir As String, ByVal szTmpFile As String, puTmpFileLen As Long) As VersionInstallFileErrors
Public Declare PtrSafe Function VerInstallFileW Lib "version.dll" (ByVal uFlags As VersionInstallFileFlags, ByVal szSrcFileName As LongPtr, ByVal szDestFileName As LongPtr, ByVal szSrcDir As LongPtr, ByVal szDestDir As LongPtr, ByVal szCurDir As LongPtr, ByVal szTmpFile As LongPtr, puTmpFileLen As Long) As VersionInstallFileErrors
Public DeclareWide PtrSafe Function VerInstallFile Lib "version.dll" Alias "VerInstallFileW" (ByVal uFlags As VersionInstallFileFlags, ByVal szSrcFileName As String, ByVal szDestFileName As String, ByVal szSrcDir As String, ByVal szDestDir As String, ByVal szCurDir As String, ByVal szTmpFile As String, puTmpFileLen As Long) As VersionInstallFileErrors
Public Declare PtrSafe Function VerLanguageNameA Lib "version.dll" (ByVal wLang As Long, ByVal szLang As String, ByVal cchLang As Long) As Long
Public Declare PtrSafe Function VerLanguageNameW Lib "version.dll" (ByVal wLang As Long, ByVal szLang As LongPtr, ByVal cchLang As Long) As Long
Public DeclareWide PtrSafe Function VerLanguageName Lib "version.dll" Alias "VerLanguageNameW" (ByVal wLang As Long, ByVal szLang As String, ByVal cchLang As Long) As Long


'Virtual Disk API
'virtdisk.h, 100% coverage
Public Type VIRTUAL_STORAGE_TYPE
    DeviceId As VirtualDiskType
    VendorId As UUID
End Type

Public Enum VIRTUAL_DISK_ACCESS_MASK
    VIRTUAL_DISK_ACCESS_NONE = &H00000000
    VIRTUAL_DISK_ACCESS_ATTACH_RO = &H00010000
    VIRTUAL_DISK_ACCESS_ATTACH_RW = &H00020000
    VIRTUAL_DISK_ACCESS_DETACH = &H00040000
    VIRTUAL_DISK_ACCESS_GET_INFO = &H00080000
    VIRTUAL_DISK_ACCESS_CREATE = &H00100000
    VIRTUAL_DISK_ACCESS_METAOPS = &H00200000
    VIRTUAL_DISK_ACCESS_READ = &H000d0000
    VIRTUAL_DISK_ACCESS_ALL = &H003f0000
    VIRTUAL_DISK_ACCESS_WRITABLE = &H00320000
End Enum

Public Enum OPEN_VIRTUAL_DISK_FLAG
    OPEN_VIRTUAL_DISK_FLAG_NONE = &H00000000
    '[ Description("Open the backing store without opening any differencing chain parents. This allows one to fixup broken parent links.") ]
    OPEN_VIRTUAL_DISK_FLAG_NO_PARENTS = &H00000001
    '[ Description("The backing store being opened is an empty file. Do not perform virtual disk verification.") ]
    OPEN_VIRTUAL_DISK_FLAG_BLANK_FILE = &H00000002
    '[ Description("This flag is only specified at boot time to load the system disk during virtual disk boot.  Must be kernel mode to specify this flag") ]
    OPEN_VIRTUAL_DISK_FLAG_BOOT_DRIVE = &H00000004
    '[ Description("This flag causes the backing file to be opened in cached mode.") ]
    OPEN_VIRTUAL_DISK_FLAG_CACHED_IO = &H00000008
    '[ Description("Open the backing store without opening any differencing chain parents. This allows one to fixup broken parent links temporarily without updating the parent locator.") ]
    OPEN_VIRTUAL_DISK_FLAG_CUSTOM_DIFF_CHAIN = &H00000010
    '[ Description("This flag causes all backing stores except the leaf backing store to be opened in cached mode.") ]
    OPEN_VIRTUAL_DISK_FLAG_PARENT_CACHED_IO = &H00000020
    '[ Description("This flag causes a Vhd Set file to be opened without any virtual disk.") ]
    OPEN_VIRTUAL_DISK_FLAG_VHDSET_FILE_ONLY = &H00000040
    '[ Description("For differencing disks, relative parent locators are not used when determining the path of a parent VHD.") ]
    OPEN_VIRTUAL_DISK_FLAG_IGNORE_RELATIVE_PARENT_LOCATOR = &H00000080
    '[ Description("Disable flushing and FUA (both for payload data and for metadata for backing files associated with this virtual disk.") ]
    OPEN_VIRTUAL_DISK_FLAG_NO_WRITE_HARDENING = &H00000100
    '[ Description("Open the backing store even if it is a compressed file.") ]
    OPEN_VIRTUAL_DISK_FLAG_SUPPORT_COMPRESSED_VOLUMES = &H00000200
    '[ Description("Open the backing store even if it is a sparse file, on any file system.") ]
    OPEN_VIRTUAL_DISK_FLAG_SUPPORT_SPARSE_FILES_ANY_FS = &H00000400
    '[ Description("Open the backing store even if it is an encrypted file.") ]
    OPEN_VIRTUAL_DISK_FLAG_SUPPORT_ENCRYPTED_FILES = &H00000800
End Enum

Public Enum OPEN_VIRTUAL_DISK_VERSION
    OPEN_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0
    OPEN_VIRTUAL_DISK_VERSION_1 = 1
    OPEN_VIRTUAL_DISK_VERSION_2 = 2
    OPEN_VIRTUAL_DISK_VERSION_3 = 3
End Enum
[Description("THIS TYPE IS FOR V2 ONLY: Use OPEN_VIRTUAL_DISK_PARAMETERS_V1 for Version 1.")]
Public Type OPEN_VIRTUAL_DISK_PARAMETERS
	Version As OPEN_VIRTUAL_DISK_VERSION
    GetInfoOnly As BOOL
    ReadOnly As BOOL
    ResiliencyGuid As UUID
End Type
[Description("THIS TYPE IS FOR V1 ONLY")]
Public Type OPEN_VIRTUAL_DISK_PARAMETERS_V1
    Version As OPEN_VIRTUAL_DISK_VERSION
    RWDepth As Long
End Type
[Description("THIS TYPE IS FOR V3 ONLY")]
Public Type OPEN_VIRTUAL_DISK_PARAMETERS_V3
    Version As OPEN_VIRTUAL_DISK_VERSION
    GetInfoOnly As BOOL
    ReadOnly As BOOL
    ResiliencyGuid As UUID
    SnapshotId As UUID
End Type

Public Enum VirtualDiskType
    VIRTUAL_STORAGE_TYPE_DEVICE_UNKNOWN = 0
    VIRTUAL_STORAGE_TYPE_DEVICE_ISO = 1
    VIRTUAL_STORAGE_TYPE_DEVICE_VHD = 2
    VIRTUAL_STORAGE_TYPE_DEVICE_VHDX = 3
    VIRTUAL_STORAGE_TYPE_DEVICE_VHDSET = 4
End Enum

Public Const OPEN_VIRTUAL_DISK_RW_DEPTH_DEFAULT = 1

Public Enum CREATE_VIRTUAL_DISK_FLAG
    CREATE_VIRTUAL_DISK_FLAG_NONE = &H0
    '  Pre-allocate all physical space necessary for the virtual
    '  size of the disk (e.g. a fixed VHD).
    CREATE_VIRTUAL_DISK_FLAG_FULL_PHYSICAL_ALLOCATION = &H1
    '  Take ownership of the source disk during create from source disk, to
    '  insure the source disk does not change during the create operation.  The
    '  source disk must also already be offline or read-only (or both).
    '  Ownership is released when create is done.  This also has a side-effect
    '  of disallowing concurrent create from same source disk.  Create will fail
    '  if ownership cannot be obtained or if the source disk is not already
    '  offline or read-only.  This flag is optional, but highly recommended for
    '  creates from source disk.  No effect for other types of create (no effect
    '  for create from source VHD; no effect for create without SourcePath).
    CREATE_VIRTUAL_DISK_FLAG_PREVENT_WRITES_TO_SOURCE_DISK = &H2
    '  Do not copy initial virtual disk metadata or block states from the
    '  parent VHD; this is useful if the parent VHD is a stand-in file and the
    '  real parent will be explicitly set later.
    CREATE_VIRTUAL_DISK_FLAG_DO_NOT_COPY_METADATA_FROM_PARENT = &H4
    '  Create the backing storage disk.
    CREATE_VIRTUAL_DISK_FLAG_CREATE_BACKING_STORAGE = &H8
    '  If set, the SourceLimitPath is an change tracking ID, and all data that has changed
    '  since that change tracking ID will be copied from the source. If clear, the
    '  SourceLimitPath is a VHD file path in the source VHD's chain, and
    '  all data that is present in the children of that VHD in the chain
    '  will be copied from the source.
    CREATE_VIRTUAL_DISK_FLAG_USE_CHANGE_TRACKING_SOURCE_LIMIT = &H10
    '  If set and the parent VHD has change tracking enabled, the child will
    '  have change tracking enabled and will recognize all change tracking
    '  IDs that currently exist in the parent. If clear or if the parent VHD
    '  does not have change tracking available, then change tracking will
    '  not be enabled in the new VHD.
    CREATE_VIRTUAL_DISK_FLAG_PRESERVE_PARENT_CHANGE_TRACKING_STATE = &H20
    '  When creating a VHD Set from source, don't copy the data in the original
    '  backing store, but intsead use the file as is. If this flag is not specified
    '  and a source file is passed to CreateVirtualDisk for a VHDSet file, the data
    '  in the source file is copied. If this flag is set the data is moved. The
    '  name of the file may change.
    CREATE_VIRTUAL_DISK_FLAG_VHD_SET_USE_ORIGINAL_BACKING_STORAGE = &H40
    ' 
    '  When creating a fixed virtual disk, take advantage of an underlying sparse file.
    '  Only supported on file systems that support sparse VDLs.
    ' 
    CREATE_VIRTUAL_DISK_FLAG_SPARSE_FILE = &H80
    ' 
    '  Creates a VHD suitable as the backing store for a virtual persistent memory device.
    ' 
    CREATE_VIRTUAL_DISK_FLAG_PMEM_COMPATIBLE = &H100
    ' 
    '  Allow a VHD to be created on a compressed volume.
    ' 
    CREATE_VIRTUAL_DISK_FLAG_SUPPORT_COMPRESSED_VOLUMES = &H200
    ' 
    '  Allow a VHD to be created when it may be marked as a sparse file. This flag is a companion
    '  to CREATE_VIRTUAL_DISK_FLAG_SPARSE_FILE, and overrides the behavior that only
    '  allows sparse files on file systems that support sparse VDLs.
    ' 
    CREATE_VIRTUAL_DISK_FLAG_SUPPORT_SPARSE_FILES_ANY_FS = &H400
End Enum

Public Const CREATE_VIRTUAL_DISK_PARAMETERS_DEFAULT_BLOCK_SIZE = 0
Public Enum CREATE_VIRTUAL_DISK_VERSION
    CREATE_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0
    CREATE_VIRTUAL_DISK_VERSION_1 = 1
    CREATE_VIRTUAL_DISK_VERSION_2 = 2
    CREATE_VIRTUAL_DISK_VERSION_3 = 3
    CREATE_VIRTUAL_DISK_VERSION_4 = 4
End Enum

[Description("This is the V2 version of the type. Use CREATE_VIRTUAL_DISK_PARAMETERS_V1 for version 1. 3 and 4 are similarly defined but for internal use.")]
Public Type CREATE_VIRTUAL_DISK_PARAMETERS
    Version As CREATE_VIRTUAL_DISK_VERSION
	UniqueId As UUID
    MaximumSize As LongLong
    BlockSizeInBytes As Long
    SectorSizeInBytes As Long
    PhysicalSectorSizeInBytes As Long
    ParentPath As LongPtr
    SourcePath As LongPtr
    OpenFlags As OPEN_VIRTUAL_DISK_FLAG
    ParentVirtualStorageType As VIRTUAL_STORAGE_TYPE
    SourceVirtualStorageType As VIRTUAL_STORAGE_TYPE
    ResiliencyGuid As UUID
End Type

Public Type CREATE_VIRTUAL_DISK_PARAMETERS_V1
    Version As CREATE_VIRTUAL_DISK_VERSION
    UniqueId As UUID
    MaximumSize As LongLong
    BlockSizeInBytes As Long
    SectorSizeInBytes As Long
    PhysicalSectorSizeInBytes As Long
    ParentPath As LongPtr
    SourcePath As LongPtr
End Type
Public Type CREATE_VIRTUAL_DISK_PARAMETERS_V3
    Version As CREATE_VIRTUAL_DISK_VERSION
    UniqueId As UUID
    MaximumSize As LongLong
    BlockSizeInBytes As Long
    SectorSizeInBytes As Long
    PhysicalSectorSizeInBytes As Long
    ParentPath As LongPtr
    SourcePath As LongPtr
    OpenFlags As OPEN_VIRTUAL_DISK_FLAG
    ParentVirtualStorageType As VIRTUAL_STORAGE_TYPE
    SourceVirtualStorageType As VIRTUAL_STORAGE_TYPE
    ResiliencyGuid As UUID
    SourceLimitPath As LongPtr
    BackingStorageType As VIRTUAL_STORAGE_TYPE
End Type
Public Type CREATE_VIRTUAL_DISK_PARAMETERS_V4
    Version As CREATE_VIRTUAL_DISK_VERSION
    UniqueId As UUID
    MaximumSize As LongLong
    BlockSizeInBytes As Long
    SectorSizeInBytes As Long
    PhysicalSectorSizeInBytes As Long
    ParentPath As LongPtr
    SourcePath As LongPtr
    OpenFlags As OPEN_VIRTUAL_DISK_FLAG
    ParentVirtualStorageType As VIRTUAL_STORAGE_TYPE
    SourceVirtualStorageType As VIRTUAL_STORAGE_TYPE
    ResiliencyGuid As UUID
    SourceLimitPath As LongPtr
    BackingStorageType As VIRTUAL_STORAGE_TYPE
    PmemAddressAbstractionType As UUID
    DataAlignment As LongLong
End Type

Public Enum ATTACH_VIRTUAL_DISK_VERSION
    ATTACH_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0
    ATTACH_VIRTUAL_DISK_VERSION_1 = 1
    ATTACH_VIRTUAL_DISK_VERSION_2 = 2
End Enum

[Description("This is V2 of the type, for V1 use ATTACH_VIRTUAL_DISK_PARAMETERS_V1 ")]
Public Type ATTACH_VIRTUAL_DISK_PARAMETERS
	Version As ATTACH_VIRTUAL_DISK_VERSION
    RestrictedOffset As LongLong
    RestrictedLength As LongLong
End Type
Public Type ATTACH_VIRTUAL_DISK_PARAMETERS_V1
    Version As ATTACH_VIRTUAL_DISK_VERSION
    Reserved As Long
End Type

Public Enum ATTACH_VIRTUAL_DISK_FLAG
    ATTACH_VIRTUAL_DISK_FLAG_NONE = &H00000000
    '  Attach the disk as read only
    ATTACH_VIRTUAL_DISK_FLAG_READ_ONLY = &H00000001
    '  Will cause all volumes on the disk to be mounted
    '  without drive letters.
    ATTACH_VIRTUAL_DISK_FLAG_NO_DRIVE_LETTER = &H00000002
    '  Will decouple the disk lifetime from that of the VirtualDiskHandle.
    '  The disk will be attached until an explicit call is made to
    '  DetachVirtualDisk, even if all handles are closed.
    ATTACH_VIRTUAL_DISK_FLAG_PERMANENT_LIFETIME = &H00000004
    '  Indicates that the drive will not be attached to
    '  the local system (but rather to a VM).
    ATTACH_VIRTUAL_DISK_FLAG_NO_LOCAL_HOST = &H00000008
    '  Do not assign a custom security descriptor to the disk; use the
    '  system default.
    ATTACH_VIRTUAL_DISK_FLAG_NO_SECURITY_DESCRIPTOR = &H00000010
    '  Default volume encryption policies should not be applied to the
    '  disk when attached to the local system.
    ATTACH_VIRTUAL_DISK_FLAG_BYPASS_DEFAULT_ENCRYPTION_POLICY = &H00000020
    '  Attach the disk as a non-PnP device.
    ATTACH_VIRTUAL_DISK_FLAG_NON_PNP = &H00000040
    '  Restrict the disk's view to the specified offset and length.
    ATTACH_VIRTUAL_DISK_FLAG_RESTRICTED_RANGE = &H00000080
    '  Restrict the disk's view to the unique data partition.
    ATTACH_VIRTUAL_DISK_FLAG_SINGLE_PARTITION = &H00000100
    '  Register the non-PnP disk as a volume with mount manager.
    ATTACH_VIRTUAL_DISK_FLAG_REGISTER_VOLUME = &H00000200
End Enum

Public Enum DETACH_VIRTUAL_DISK_FLAG
    DETACH_VIRTUAL_DISK_FLAG_NONE = &H00000000
End Enum

Public Enum DEPENDENT_DISK_FLAG
    DEPENDENT_DISK_FLAG_NONE = &H00000000
    ' 
    '  Multiple files backing the virtual storage device
    ' 
    DEPENDENT_DISK_FLAG_MULT_BACKING_FILES = &H00000001
    DEPENDENT_DISK_FLAG_FULLY_ALLOCATED = &H00000002
    DEPENDENT_DISK_FLAG_READ_ONLY = &H00000004
    ' 
    '  Backing file of the virtual storage device is not local to the machine
    ' 
    DEPENDENT_DISK_FLAG_REMOTE = &H00000008
    ' 
    '  Volume is the system volume
    ' 
    DEPENDENT_DISK_FLAG_SYSTEM_VOLUME = &H00000010
    ' 
    '  Volume backing the virtual storage device file is the system volume
    ' 
    DEPENDENT_DISK_FLAG_SYSTEM_VOLUME_PARENT = &H00000020
    DEPENDENT_DISK_FLAG_REMOVABLE = &H00000040
    ' 
    '  Drive letters are not assigned to the volumes
    '  on the virtual disk automatically.
    ' 
    DEPENDENT_DISK_FLAG_NO_DRIVE_LETTER = &H00000080
    DEPENDENT_DISK_FLAG_PARENT = &H00000100
    ' 
    '  Virtual disk is not attached on the local host
    '  (instead attached on a guest VM for instance)
    ' 
    DEPENDENT_DISK_FLAG_NO_HOST_DISK = &H00000200
    ' 
    '  Indicates the lifetime of the disk is not tied
    '  to any system handles
    ' 
    DEPENDENT_DISK_FLAG_PERMANENT_LIFETIME = &H00000400
    ' 
    '  Volume backing the virtual storage device file
    '  can be a compressed volume.
    ' 
    DEPENDENT_DISK_FLAG_SUPPORT_COMPRESSED_VOLUMES = &H00000800
    ' 
    '  Allow the file to be mounted, even if it is sparse and the
    '  volume on which it sits does not support a sparse VDL.
    ' 
    DEPENDENT_DISK_FLAG_ALWAYS_ALLOW_SPARSE = &H00001000
    ' 
    '  Allow the file to be mounted, even if it is encrypted.
    ' 
    DEPENDENT_DISK_FLAG_SUPPORT_ENCRYPTED_FILES = &H00002000
End Enum

Public Enum STORAGE_DEPENDENCY_INFO_VERSION
    STORAGE_DEPENDENCY_INFO_VERSION_UNSPECIFIED = 0
    STORAGE_DEPENDENCY_INFO_VERSION_1 = 1
    STORAGE_DEPENDENCY_INFO_VERSION_2 = 2
End Enum
Public Type STORAGE_DEPENDENCY_INFO_TYPE_1
    DependencyTypeFlags As DEPENDENT_DISK_FLAG
    ProviderSpecificFlags As Long
    VirtualStorageType As VIRTUAL_STORAGE_TYPE
End Type
Public Type STORAGE_DEPENDENCY_INFO_TYPE_2
    DependencyTypeFlags As DEPENDENT_DISK_FLAG
    ProviderSpecificFlags As Long
    VirtualStorageType As VIRTUAL_STORAGE_TYPE
    AncestorLevel As Long
    DependencyDeviceName As LongPtr
    HostVolumeName As LongPtr
    DependentVolumeName As LongPtr
    DependentVolumeRelativePath As LongPtr
End Type

[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type STORAGE_DEPENDENCY_INFO
    Version As STORAGE_DEPENDENCY_INFO_VERSION
    NumberEntries As Long
    'union
    '{
    '    STORAGE_DEPENDENCY_INFO_TYPE_1 Version1Entries[];
    Version2Entries() As STORAGE_DEPENDENCY_INFO_TYPE_2
    '};
End Type
[Description("⚠️ **WARNING:** This structure cannot be used as-is directly due to SAFEARRAY considerations. Copy count and array separately.")]
Public Type STORAGE_DEPENDENCY_INFO_V1
    Version As STORAGE_DEPENDENCY_INFO_VERSION
    NumberEntries As Long
    'union
    '{
    Version1Entries() As STORAGE_DEPENDENCY_INFO_TYPE_1
    '    STORAGE_DEPENDENCY_INFO_TYPE_2 Version2Entries[];
    '};
End Type

Public Enum GET_STORAGE_DEPENDENCY_FLAG
    GET_STORAGE_DEPENDENCY_FLAG_NONE = &H00000000
    '  Return information for volumes or disks hosting the volume specified
    '  If not set, returns info about volumes or disks being hosted by
    '  the volume or disk specified
    GET_STORAGE_DEPENDENCY_FLAG_HOST_VOLUMES = &H00000001
    '   The handle provided is to a disk, not volume or file
    GET_STORAGE_DEPENDENCY_FLAG_DISK_HANDLE = &H00000002
    GET_STORAGE_DEPENDENCY_FLAG_PARENTS = GET_STORAGE_DEPENDENCY_FLAG_HOST_VOLUMES
End Enum

Public Enum GET_VIRTUAL_DISK_INFO_VERSION
    GET_VIRTUAL_DISK_INFO_UNSPECIFIED = 0
    GET_VIRTUAL_DISK_INFO_SIZE = 1
    GET_VIRTUAL_DISK_INFO_IDENTIFIER = 2
    GET_VIRTUAL_DISK_INFO_PARENT_LOCATION = 3
    GET_VIRTUAL_DISK_INFO_PARENT_IDENTIFIER = 4
    GET_VIRTUAL_DISK_INFO_PARENT_TIMESTAMP = 5
    GET_VIRTUAL_DISK_INFO_VIRTUAL_STORAGE_TYPE = 6
    GET_VIRTUAL_DISK_INFO_PROVIDER_SUBTYPE = 7
    GET_VIRTUAL_DISK_INFO_IS_4K_ALIGNED = 8
    GET_VIRTUAL_DISK_INFO_PHYSICAL_DISK = 9
    GET_VIRTUAL_DISK_INFO_VHD_PHYSICAL_SECTOR_SIZE = 10
    GET_VIRTUAL_DISK_INFO_SMALLEST_SAFE_VIRTUAL_SIZE = 11
    GET_VIRTUAL_DISK_INFO_FRAGMENTATION = 12
    GET_VIRTUAL_DISK_INFO_IS_LOADED = 13
    GET_VIRTUAL_DISK_INFO_VIRTUAL_DISK_ID = 14
    GET_VIRTUAL_DISK_INFO_CHANGE_TRACKING_STATE = 15
End Enum

/*
typedef struct _GET_VIRTUAL_DISK_INFO
{
    GET_VIRTUAL_DISK_INFO_VERSION Version;

    union
    {
        struct
        {
            ULONGLONG VirtualSize;
            ULONGLONG PhysicalSize;
            ULONG     BlockSize;
            ULONG     SectorSize;
        } Size;

        GUID Identifier;

        struct
        {
            BOOL  ParentResolved;
            WCHAR ParentLocationBuffer[1];  // MultiSz string
        } ParentLocation;

        GUID ParentIdentifier;

        ULONG ParentTimestamp;

        VIRTUAL_STORAGE_TYPE VirtualStorageType;

        ULONG ProviderSubtype;

        BOOL Is4kAligned;

        BOOL IsLoaded;

        struct
        {
            ULONG LogicalSectorSize;
            ULONG PhysicalSectorSize;
            BOOL IsRemote;
        } PhysicalDisk;

        ULONG VhdPhysicalSectorSize;

        ULONGLONG SmallestSafeVirtualSize;

        // GET_VIRTUAL_DISK_INFO_FRAGMENTATION
        ULONG FragmentationPercentage;

        // GET_VIRTUAL_DISK_INFO_VIRTUAL_DISK_ID
        GUID VirtualDiskId;

        struct
        {
            BOOL Enabled;
            BOOL NewerChanges;
            WCHAR MostRecentId[1];
        } ChangeTrackingState;
    };
} GET_VIRTUAL_DISK_INFO, *PGET_VIRTUAL_DISK_INFO;
*/
Public Type GET_VIRTUAL_DISK_INFO
    Version As GET_VIRTUAL_DISK_INFO_VERSION
    union(23) As Byte
End Type

Public Const VIRTUAL_DISK_MAXIMUM_CHANGE_TRACKING_ID_LENGTH = 256

Public Enum SET_VIRTUAL_DISK_INFO_VERSION
    SET_VIRTUAL_DISK_INFO_UNSPECIFIED = 0
    SET_VIRTUAL_DISK_INFO_PARENT_PATH = 1
    SET_VIRTUAL_DISK_INFO_IDENTIFIER = 2
    SET_VIRTUAL_DISK_INFO_PARENT_PATH_WITH_DEPTH = 3
    SET_VIRTUAL_DISK_INFO_PHYSICAL_SECTOR_SIZE = 4
    SET_VIRTUAL_DISK_INFO_VIRTUAL_DISK_ID = 5
    SET_VIRTUAL_DISK_INFO_CHANGE_TRACKING_STATE = 6
    SET_VIRTUAL_DISK_INFO_PARENT_LOCATOR = 7
End Enum

/*
typedef struct _SET_VIRTUAL_DISK_INFO
{
    SET_VIRTUAL_DISK_INFO_VERSION Version;

    union
    {
        PCWSTR ParentFilePath;

        GUID UniqueIdentifier;

        struct
        {
            ULONG  ChildDepth;
            PCWSTR ParentFilePath;
        } ParentPathWithDepthInfo;

        ULONG VhdPhysicalSectorSize;

        // SET_VIRTUAL_DISK_INFO_VIRTUAL_DISK_ID
        GUID VirtualDiskId;

        BOOL ChangeTrackingEnabled;

        struct
        {
            GUID   LinkageId;
            PCWSTR ParentFilePath;
        } ParentLocator;
    };
} SET_VIRTUAL_DISK_INFO, *PSET_VIRTUAL_DISK_INFO;
*/
Public Type SET_VIRTUAL_DISK_INFO
	Version As SET_VIRTUAL_DISK_INFO_VERSION
    #If Win64 Then
    	union(23) As Byte
    #Else
        union(19) As Byte
    #End If
End Type

Public Type VIRTUAL_DISK_PROGRESS
    OperationStatus As Long
    CurrentValue As LongLong
    CompletionValue As LongLong
End Type

Public Enum COMPACT_VIRTUAL_DISK_VERSION
    COMPACT_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0
    COMPACT_VIRTUAL_DISK_VERSION_1 = 1
End Enum
Public Type COMPACT_VIRTUAL_DISK_PARAMETERS
    Version As COMPACT_VIRTUAL_DISK_VERSION
    'union
    '{
    '   struct
    '  {
    Reserved As Long
    '    } Version1;
    '};
End Type
Public Enum COMPACT_VIRTUAL_DISK_FLAG
    COMPACT_VIRTUAL_DISK_FLAG_NONE = &H00000000
    COMPACT_VIRTUAL_DISK_FLAG_NO_ZERO_SCAN = &H00000001
    COMPACT_VIRTUAL_DISK_FLAG_NO_BLOCK_MOVES = &H00000002
End Enum

Public Enum MERGE_VIRTUAL_DISK_VERSION
    MERGE_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0
    MERGE_VIRTUAL_DISK_VERSION_1 = 1
    MERGE_VIRTUAL_DISK_VERSION_2 = 2
End Enum
Public Const MERGE_VIRTUAL_DISK_DEFAULT_MERGE_DEPTH = 1
[Description("FOR V2 OPTIONS ONLY. For V1, use the _V1 variant of this UDT.")]
Public Type MERGE_VIRTUAL_DISK_PARAMETERS
	Version As MERGE_VIRTUAL_DISK_VERSION
    MergeSourceDepth As Long
    MergeTargetDepth As Long
End Type
[Description("FOR V1 OPTIONS ONLY. For V1, use MERGE_VIRTUAL_DISK_PARAMETERS")]
Public Type MERGE_VIRTUAL_DISK_PARAMETERS_V1
    Version As MERGE_VIRTUAL_DISK_VERSION
    MergeDepth As Long
    unused As Long
End Type
Public Enum MERGE_VIRTUAL_DISK_FLAG
    MERGE_VIRTUAL_DISK_FLAG_NONE = &H00000000
End Enum

Public Enum EXPAND_VIRTUAL_DISK_VERSION
    EXPAND_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0
    EXPAND_VIRTUAL_DISK_VERSION_1 = 1
End Enum

Public Type EXPAND_VIRTUAL_DISK_PARAMETERS
    Version As EXPAND_VIRTUAL_DISK_VERSION
    'union
    '{
    '     struct
    '    {
    NewSize As LongLong
    '     } Version1;
    ' };
End Type
Public Enum EXPAND_VIRTUAL_DISK_FLAG
    EXPAND_VIRTUAL_DISK_FLAG_NONE = &H00000000
    EXPAND_VIRTUAL_DISK_FLAG_NOTIFY_CHANGE = &H00000001
End Enum

Public Enum RESIZE_VIRTUAL_DISK_VERSION
    RESIZE_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0
    RESIZE_VIRTUAL_DISK_VERSION_1 = 1
End Enum
Public Type RESIZE_VIRTUAL_DISK_PARAMETERS
    Version As RESIZE_VIRTUAL_DISK_VERSION
    'union
    '{
    '    struct
    '    {
    NewSize As LongLong
    '    } Version1;
    '};
End Type
Public Enum RESIZE_VIRTUAL_DISK_FLAG
    RESIZE_VIRTUAL_DISK_FLAG_NONE = &H0
    '  If this flag is set, skip checking the virtual disk's partition table
    '  to ensure that this truncation is safe. Setting this flag can cause
    '  unrecoverable data loss; use with care.
    RESIZE_VIRTUAL_DISK_FLAG_ALLOW_UNSAFE_VIRTUAL_SIZE = &H1
    '  If this flag is set, resize the disk to the smallest virtual size
    '  possible without truncating past any existing partitions. If this
    '  is set, NewSize in RESIZE_VIRTUAL_DISK_PARAMETERS must be zero.
    RESIZE_VIRTUAL_DISK_FLAG_RESIZE_TO_SMALLEST_SAFE_VIRTUAL_SIZE = &H2
End Enum

Public Enum MIRROR_VIRTUAL_DISK_VERSION
    MIRROR_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0
    MIRROR_VIRTUAL_DISK_VERSION_1 = 1
End Enum
Public Type MIRROR_VIRTUAL_DISK_PARAMETERS
    Version As MIRROR_VIRTUAL_DISK_VERSION
    'union
    '{
    '   struct
    '   {
    MirrorVirtualDiskPath As LongPtr
    '   } Version1;
    '};
End Type
Public Enum MIRROR_VIRTUAL_DISK_FLAG
    MIRROR_VIRTUAL_DISK_FLAG_NONE = &H00000000
    MIRROR_VIRTUAL_DISK_FLAG_EXISTING_FILE = &H00000001
    MIRROR_VIRTUAL_DISK_FLAG_SKIP_MIRROR_ACTIVATION = &H00000002
    MIRROR_VIRTUAL_DISK_FLAG_ENABLE_SMB_COMPRESSION = &H00000004
    MIRROR_VIRTUAL_DISK_FLAG_IS_LIVE_MIGRATION = &H00000008
End Enum

Public Type QUERY_CHANGES_VIRTUAL_DISK_RANGE
    ByteOffset As LongLong
    ByteLength As LongLong
    Reserved As LongLong
End Type
Public Enum QUERY_CHANGES_VIRTUAL_DISK_FLAG
    QUERY_CHANGES_VIRTUAL_DISK_FLAG_NONE = &H00000000
End Enum
Public Enum TAKE_SNAPSHOT_VHDSET_FLAG
    TAKE_SNAPSHOT_VHDSET_FLAG_NONE = &H00000000
    TAKE_SNAPSHOT_VHDSET_FLAG_WRITEABLE = &H00000001
End Enum
Public Enum TAKE_SNAPSHOT_VHDSET_VERSION
    TAKE_SNAPSHOT_VHDSET_VERSION_UNSPECIFIED = 0
    TAKE_SNAPSHOT_VHDSET_VERSION_1 = 1
End Enum
Public Type TAKE_SNAPSHOT_VHDSET_PARAMETERS
    Version As TAKE_SNAPSHOT_VHDSET_VERSION
    'union
    '{
    '   struct
    '   {
    SnapshotId As UUID
    '   } Version1;
    '};
End Type
Public Enum DELETE_SNAPSHOT_VHDSET_FLAG
    DELETE_SNAPSHOT_VHDSET_FLAG_NONE = &H00000000
    DELETE_SNAPSHOT_VHDSET_FLAG_PERSIST_RCT = &H00000001
End Enum
Public Enum DELETE_SNAPSHOT_VHDSET_VERSION
    DELETE_SNAPSHOT_VHDSET_VERSION_UNSPECIFIED = 0
    DELETE_SNAPSHOT_VHDSET_VERSION_1 = 1
End Enum
Public Type DELETE_SNAPSHOT_VHDSET_PARAMETERS
    Version As DELETE_SNAPSHOT_VHDSET_VERSION
    'union
    '{
    '    struct
    '    {
    SnapshotId As UUID
    '   } Version1;
    '};
End Type

Public Enum MODIFY_VHDSET_VERSION
    MODIFY_VHDSET_UNSPECIFIED = 0
    MODIFY_VHDSET_SNAPSHOT_PATH = 1
    MODIFY_VHDSET_REMOVE_SNAPSHOT = 2
    MODIFY_VHDSET_DEFAULT_SNAPSHOT_PATH = 3
End Enum

Public Enum MODIFY_VHDSET_FLAG
    MODIFY_VHDSET_FLAG_NONE = &H00000000
    MODIFY_VHDSET_FLAG_WRITEABLE_SNAPSHOT = &H00000001
End Enum
/*
typedef struct _MODIFY_VHDSET_PARAMETERS
{
    MODIFY_VHDSET_VERSION Version;

    union
    {
        struct
        {
            GUID SnapshotId;
            PCWSTR SnapshotFilePath;
        } SnapshotPath;

        GUID SnapshotId;

        PCWSTR DefaultFilePath;
    };
} MODIFY_VHDSET_PARAMETERS,
*/
Public Type MODIFY_VHDSET_PARAMETERS
	Version As MODIFY_VHDSET_VERSION
    #If Win64 Then
        union(23) As Byte
    #Else
        union(19) As Byte
    #End If
End Type

Public Enum APPLY_SNAPSHOT_VHDSET_FLAG
    APPLY_SNAPSHOT_VHDSET_FLAG_NONE = &H00000000
    APPLY_SNAPSHOT_VHDSET_FLAG_WRITEABLE = &H00000001
End Enum
Public Enum APPLY_SNAPSHOT_VHDSET_VERSION
    APPLY_SNAPSHOT_VHDSET_VERSION_UNSPECIFIED = 0
    APPLY_SNAPSHOT_VHDSET_VERSION_1 = 1
End Enum
Public Type APPLY_SNAPSHOT_VHDSET_PARAMETERS
    Version As APPLY_SNAPSHOT_VHDSET_VERSION
    'union
    '{
    '   struct
    '   {
    SnapshotId As UUID
    LeafSnapshotId As UUID
    '} Version1;
    '};
End Type

Public Enum RAW_SCSI_VIRTUAL_DISK_FLAG
    RAW_SCSI_VIRTUAL_DISK_FLAG_NONE = &H00000000
End Enum
Public Enum RAW_SCSI_VIRTUAL_DISK_VERSION
    RAW_SCSI_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0
    RAW_SCSI_VIRTUAL_DISK_VERSION_1 = 1
End Enum
Public Type RAW_SCSI_VIRTUAL_DISK_PARAMETERS
    Version As RAW_SCSI_VIRTUAL_DISK_VERSION
    'union
    '{
    '    struct
    '    {
    RSVDHandle As Long
    DataIn As Byte
    CdbLength As Byte
    SenseInfoLength As Byte
    SrbFlags As Long
    DataTransferLength As Long
    '      _Field_size_bytes_full_(DataTransferLength)
    DataBuffer As LongPtr
    '       _Field_size_bytes_full_(SenseInfoLength)
    SenseInfo As LongPtr
    '       _Field_size_bytes_full_(CdbLength)
    Cdb As LongPtr
    '} Version1;
    '};
End Type
Public Type RAW_SCSI_VIRTUAL_DISK_RESPONSE
    Version As RAW_SCSI_VIRTUAL_DISK_VERSION
    'union
    '{
    '    struct
    '   {
    ScsiStatus As Byte
    SenseInfoLength As Byte ' bytes transferred to SenseInfo pointed to by the parameters.
    DataTransferLength As Long ' bytes transferred to DataBuffer pointed to by the parameters.
    '} Version1;
    '};
End Type

Public Enum FORK_VIRTUAL_DISK_VERSION
    FORK_VIRTUAL_DISK_VERSION_UNSPECIFIED = 0
    FORK_VIRTUAL_DISK_VERSION_1 = 1
End Enum
Public Type FORK_VIRTUAL_DISK_PARAMETERS
    Version As FORK_VIRTUAL_DISK_VERSION
    'union
    '{
    '    struct
    '    {
    ForkedVirtualDiskPath As LongPtr
    '     } Version1;
    '};
End Type
Public Enum FORK_VIRTUAL_DISK_FLAG
    FORK_VIRTUAL_DISK_FLAG_NONE = &H00000000
    FORK_VIRTUAL_DISK_FLAG_EXISTING_FILE = &H00000001
End Enum

Public DeclareWide PtrSafe Function OpenVirtualDisk Lib "virtdisk.dll" (VirtualStorageType As VIRTUAL_STORAGE_TYPE, ByVal Path As String, ByVal VirtualDiskAccessMask As VIRTUAL_DISK_ACCESS_MASK, ByVal Flags As OPEN_VIRTUAL_DISK_FLAG, Parameters As Any, Handle As LongPtr) As Long
Public DeclareWide PtrSafe Function CreateVirtualDisk Lib "virtdisk.dll" (VirtualStorageType As VIRTUAL_STORAGE_TYPE, ByVal Path As String, ByVal VirtualDiskAccessMask As VIRTUAL_DISK_ACCESS_MASK, SecurityDescriptor As SECURITY_DESCRIPTOR, ByVal Flags As CREATE_VIRTUAL_DISK_FLAG, ByVal ProviderSpecificFlags As Long, Parameters As Any, lpOverlapped As OVERLAPPED, Handle As LongPtr) As Long
Public DeclareWide PtrSafe Function AttachVirtualDisk Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, SecurityDescriptor As SECURITY_DESCRIPTOR, ByVal Flags As ATTACH_VIRTUAL_DISK_FLAG, ByVal ProviderSpecificFlags As Long, Parameters As Any, lpOverlapped As OVERLAPPED) As Long
Public Declare PtrSafe Function DetachVirtualDisk Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, ByVal Flags As DETACH_VIRTUAL_DISK_FLAG, ByVal ProviderSpecificFlags As Long) As Long
Public DeclareWide PtrSafe Function GetVirtualDiskPhysicalPath Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, ByRef DiskPathSizeInBytes As Long, ByVal DiskPath As String) As Long
Public DeclareWide PtrSafe Function GetAllAttachedVirtualDiskPhysicalPaths Lib "virtdisk.dll" (PathsBufferSizeInBytes As Long, ByVal PathsBuffer As String) As Long
Public DeclareWide PtrSafe Function GetStorageDependencyInformation Lib "virtdisk.dll" (ByVal ObjectHandle As LongPtr, ByVal FLags As GET_STORAGE_DEPENDENCY_FLAG, StorageDependencyInfoSize As Long, StorageDependencyInfo As Any /*STORAGE_DEPENDENCY_INFO*/, Optional SizeUsed As Long) As Long
Public Declare PtrSafe Function GetVirtualDiskInformation Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, VirtualDiskInfoSize As Long, VirtualDiskInfoSize As GET_VIRTUAL_DISK_INFO, Optional SizeUsed As Long) As Long
Public Declare PtrSafe Function SetVirtualDiskInformation Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, VirtualDiskInfoSize As Long, VirtualDiskInfo As SET_VIRTUAL_DISK_INFO) As Long
Public Declare PtrSafe Function EnumerateVirtualDiskMetadata Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, NumberOfItems As Long, Items As UUID) As Long
Public DeclareWide PtrSafe Function GetVirtualDiskMetadata Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, Item As UUID, MetaDataSize As Long, MetaData As Any) As Long
Public DeclareWide PtrSafe Function SetVirtualDiskMetadata Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, Item As UUID, MetaDataSize As Long, MetaData As Any) As Long
Public Declare PtrSafe Function DeleteVirtualDiskMetadata Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, Item As UUID) As Long
Public Declare PtrSafe Function GetVirtualDiskOperationProgress Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, Overlapped As OVERLAPPED, Progress As VIRTUAL_DISK_PROGRESS) As Long
Public Declare PtrSafe Function CompactVirtualDisk Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, ByVal Flags As COMPACT_VIRTUAL_DISK_FLAG, Parameters As COMPACT_VIRTUAL_DISK_PARAMETERS, Overlapped As OVERLAPPED) As Long
[Description("FOR V2 OPTIONS ONLY. For V1, use the MergeVirtualDiskV1 variant of this API.")]
Public Declare PtrSafe Function MergeVirtualDisk Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, ByVal Flags As MERGE_VIRTUAL_DISK_FLAG, Parameters As MERGE_VIRTUAL_DISK_PARAMETERS, Overlapped As OVERLAPPED) As Long
[Description("FOR V1 OPTIONS ONLY. For V2, use MergeVirtualDisk")]
Public DeclareWide PtrSafe Function MergeVirtualDiskV1 Lib "virtdisk.dll" Alias "MergeVirtualDisk" (ByVal VirtualDiskHandle As LongPtr, ByVal Flags As MERGE_VIRTUAL_DISK_FLAG, Parameters As MERGE_VIRTUAL_DISK_PARAMETERS_V1, Overlapped As OVERLAPPED) As Long
Public Declare PtrSafe Function ExpandVirtualDisk Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, ByVal Flags As EXPAND_VIRTUAL_DISK_FLAG, Parameters As EXPAND_VIRTUAL_DISK_PARAMETERS, Overlapped As OVERLAPPED) As Long
Public Declare PtrSafe Function ResizeVirtualDisk Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, ByVal Flags As RESIZE_VIRTUAL_DISK_FLAG, Parameters As RESIZE_VIRTUAL_DISK_PARAMETERS, Overlapped As OVERLAPPED) As Long
Public Declare PtrSafe Function MirrorVirtualDisk Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, ByVal Flags As MIRROR_VIRTUAL_DISK_FLAG, Parameters As MIRROR_VIRTUAL_DISK_PARAMETERS, Overlapped As OVERLAPPED) As Long
Public Declare PtrSafe Function BreakMirrorVirtualDisk Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr) As Long
Public DeclareWide PtrSafe Function AddVirtualDiskParent Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, ByVal ParentPath As String) As Long
Public DeclareWide PtrSafe Function QueryChangesVirtualDisk Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, ByVal ChangeTrackingId As String, ByVal ByteOffset As LongLong, ByVal ByteLength As LongLong, ByVal Flags As QUERY_CHANGES_VIRTUAL_DISK_FLAG, Range As QUERY_CHANGES_VIRTUAL_DISK_RANGE) As Long
Public Declare PtrSafe Function TakeSnapshotVhdSet Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, Parameters As TAKE_SNAPSHOT_VHDSET_PARAMETERS, ByVal Flags As TAKE_SNAPSHOT_VHDSET_FLAG) As Long
Public Declare PtrSafe Function DeleteSnapshotVhdSet Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, Parameters As DELETE_SNAPSHOT_VHDSET_PARAMETERS, ByVal Flags As DELETE_SNAPSHOT_VHDSET_FLAG) As Long
Public Declare PtrSafe Function ModifyVhdSet Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, Parameters As MODIFY_VHDSET_PARAMETERS, ByVal Flags As MODIFY_VHDSET_FLAG) As Long
Public Declare PtrSafe Function ApplySnapshotVhdSet Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, Parameters As APPLY_SNAPSHOT_VHDSET_PARAMETERS, ByVal Flags As APPLY_SNAPSHOT_VHDSET_FLAG) As Long
Public Declare PtrSafe Function RawSCSIVirtualDisk Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, Parameters As RAW_SCSI_VIRTUAL_DISK_PARAMETERS, ByVal Flags As RAW_SCSI_VIRTUAL_DISK_FLAG, Response As RAW_SCSI_VIRTUAL_DISK_RESPONSE) As Long
Public Declare PtrSafe Function ForkVirtualDisk Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr, ByVal Flags As FORK_VIRTUAL_DISK_FLAG, Parameters As FORK_VIRTUAL_DISK_PARAMETERS, Overlapped As OVERLAPPED) As Long
Public Declare PtrSafe Function CompleteForkVirtualDisk Lib "virtdisk.dll" (ByVal VirtualDiskHandle As LongPtr) As Long




/*
UserEnv.h - 100% coverage
*/

Public Enum UserProfileFlags
	PI_NOUI = &H00000001  ' Prevents displaying of messages
	PI_APPLYPOLICY = &H00000002  ' Apply NT4 style policy
End Enum

Public Type PROFILEINFOA
    dwSize As Long
    dwFlags As UserProfileFlags
    lpUserName As String
    lpProfilePath As String
    lpDefaultPath As String
    lpServerName As String
    lpPolicyPath As String
    hProfile As LongPtr
End Type
Public Type PROFILEINFOW
	dwSize As Long
	dwFlags As UserProfileFlags
	lpUserName As LongPtr
	lpProfilePath As LongPtr
	lpDefaultPath As LongPtr
	lpServerName As LongPtr
	lpPolicyPath As LongPtr
	hProfile As LongPtr
End Type
'Alias PROFILEINFO As PROFILEINFOW
Public Type PROFILEINFO
    dwSize As Long
    dwFlags As UserProfileFlags
    lpUserName As LongPtr
    lpProfilePath As LongPtr
    lpDefaultPath As LongPtr
    lpServerName As LongPtr
    lpPolicyPath As LongPtr
    hProfile As LongPtr
End Type

Public Enum ProfileTypeFlags
    PT_TEMPORARY = &H00000001  ' A profile has been allocated that will be deleted at logoff.
    PT_ROAMING = &H00000002  ' The loaded profile is a roaming profile.
    PT_MANDATORY = &H00000004  ' The loaded profile is mandatory.
    PT_ROAMING_PREEXISTING = &H00000008  ' The loaded roaming profile is not a brand new one - it was obtained from roamed location
End Enum

Public Enum UserRefeshPolicyFlags
    RP_FORCE = 1  ' Refresh policies without any optimisations.
    RP_SYNC = 2  ' Refresh Policy sync; the call does not return till the time policy processing is completed
End Enum

Public Enum UserGPOptionsFlags
    GPC_BLOCK_POLICY = &H0001
End Enum
Public Enum UserGPLinkFlags
    GPO_FLAG_DISABLE = &H00000001  ' This GPO is disabled
    GPO_FLAG_FORCE = &H00000002    ' Don't override the settings in
                                    '  this GPO with settings from
                                    '  a GPO below it.
End Enum
Public Enum GPO_LINK
    GPLinkUnknown = 0 ' No link information available
    GPLinkMachine ' GPO linked to a machine (local or remote)
    GPLinkSite ' GPO linked to a site
    GPLinkDomain ' GPO linked to a domain
    GPLinkOrganizationalUnit ' GPO linked to a organizational unit
End Enum
Public Type GROUP_POLICY_OBJECTA
    dwOptions As UserGPLinkFlags ' See GPLink option flags above
    dwVersion As Long ' Revision number of the GPO
    lpDSPath As String ' Path to the Active Directory portion of the GPO
    lpFileSysPath As String ' Path to the file system portion of the GPO
    lpDisplayName As String ' Friendly display name
    szGPOName(0 To 49) As Byte ' Unique name
    GPOLink As GPO_LINK ' Link information
    lParam As LongPtr ' Free space for the caller to store GPO specific information
    pNext As LongPtr '*struct _GROUP_POLICY_OBJECTW  ' Next GPO in the list
    pPrev As LongPtr '*struct _GROUP_POLICY_OBJECTW  ' Previous GPO in the list
    lpExtensions As String ' Extensions that are relevant for this GPO
    lParam2 As LongPtr ' Free space for the caller to store GPO specific information
    lpLink As String ' Path to the Active Directory site, domain, or organizational unit this GPO is linked to
    ' If this is the local GPO, this points to the word "Local"
End Type
Public Type GROUP_POLICY_OBJECTW
    dwOptions As UserGPLinkFlags ' See GPLink option flags above
    dwVersion As Long ' Revision number of the GPO
    lpDSPath As LongPtr ' Path to the Active Directory portion of the GPO
    lpFileSysPath As LongPtr ' Path to the file system portion of the GPO
    lpDisplayName As LongPtr ' Friendly display name
    szGPOName(0 To 49) As Integer ' Unique name
    GPOLink As GPO_LINK ' Link information
    lParam As LongPtr ' Free space for the caller to store GPO specific information
    pNext As LongPtr '*struct _GROUP_POLICY_OBJECTW  ' Next GPO in the list
    pPrev As LongPtr '*struct _GROUP_POLICY_OBJECTW  ' Previous GPO in the list
    lpExtensions As LongPtr ' Extensions that are relevant for this GPO
    lParam2 As LongPtr ' Free space for the caller to store GPO specific information
    lpLink As LongPtr ' Path to the Active Directory site, domain, or organizational unit this GPO is linked to
    ' If this is the local GPO, this points to the word "Local"
End Type
'Alias GROUP_POLICY_OBJECT As GROUP_POLICY_OBJECTW
Public Type GROUP_POLICY_OBJECT
    dwOptions As UserGPLinkFlags ' See GPLink option flags above
    dwVersion As Long ' Revision number of the GPO
    lpDSPath As LongPtr ' Path to the Active Directory portion of the GPO
    lpFileSysPath As LongPtr ' Path to the file system portion of the GPO
    lpDisplayName As LongPtr ' Friendly display name
    szGPOName(0 To 49) As Integer ' Unique name
    GPOLink As GPO_LINK ' Link information
    lParam As LongPtr ' Free space for the caller to store GPO specific information
    pNext As LongPtr '*struct _GROUP_POLICY_OBJECTW  ' Next GPO in the list
    pPrev As LongPtr '*struct _GROUP_POLICY_OBJECTW  ' Previous GPO in the list
    lpExtensions As LongPtr ' Extensions that are relevant for this GPO
    lParam2 As LongPtr ' Free space for the caller to store GPO specific information
    lpLink As LongPtr ' Path to the Active Directory site, domain, or organizational unit this GPO is linked to
    ' If this is the local GPO, this points to the word "Local"
End Type

Public Enum GPOListFlags
    GPO_LIST_FLAG_MACHINE = &H00000001  ' Return machine policy information
    GPO_LIST_FLAG_SITEONLY = &H00000002  ' Return site policy information only
    GPO_LIST_FLAG_NO_WMIFILTERS = &H00000004  ' Ignore WMI filters when filtering GPO's
    GPO_LIST_FLAG_NO_SECURITYFILTERS = &H00000008  ' Ignore security filters
End Enum

Public Const GP_DLLNAME  = "DllName"
Public Const GP_ENABLEASYNCHRONOUSPROCESSING  = "EnableAsynchronousProcessing"
Public Const GP_MAXNOGPOLISTCHANGESINTERVAL  = "MaxNoGPOListChangesInterval"
Public Const GP_NOBACKGROUNDPOLICY  = "NoBackgroundPolicy"
Public Const GP_NOGPOLISTCHANGES  = "NoGPOListChanges"
Public Const GP_NOMACHINEPOLICY  = "NoMachinePolicy"
Public Const GP_NOSLOWLINK  = "NoSlowLink"
Public Const GP_NOTIFYLINKTRANSITION  = "NotifyLinkTransition"
Public Const GP_NOUSERPOLICY  = "NoUserPolicy"
Public Const GP_PERUSERLOCALSETTINGS  = "PerUserLocalSettings"
Public Const GP_PROCESSGROUPPOLICY  = "ProcessGroupPolicy"
Public Const GP_REQUIRESSUCCESSFULREGISTRY  = "RequiresSuccessfulRegistry"

Public Enum GPInfoFlags
    GPO_INFO_FLAG_MACHINE = &H00000001  ' Apply machine policy rather than user policy
    GPO_INFO_FLAG_BACKGROUND = &H00000010  ' Background refresh of policy (ok to do slow stuff)
    GPO_INFO_FLAG_SLOWLINK = &H00000020  ' Policy is being applied across a slow link
    GPO_INFO_FLAG_VERBOSE = &H00000040  ' Verbose output to the eventlog
    GPO_INFO_FLAG_NOCHANGES = &H00000080  ' No changes were detected to the Group Policy Objects
    GPO_INFO_FLAG_LINKTRANSITION = &H00000100  ' A change in link speed was detected between previous policy
                                                '  application and current policy application
    GPO_INFO_FLAG_LOGRSOP_TRANSITION = &H00000200  ' A Change in Rsop Logging was detected between previous policy
                                                    '  application and current policy application, (new intf only)
    GPO_INFO_FLAG_FORCED_REFRESH = &H00000400  ' Forced Refresh is being applied. redo policies.
    GPO_INFO_FLAG_SAFEMODE_BOOT = &H00000800  ' windows safe mode boot flag
    GPO_INFO_FLAG_ASYNC_FOREGROUND = &H00001000  ' Asynchronous foreground refresh of policy
End Enum

Public Type RSOP_TARGET
    pwszAccountName As LongPtr  ' Account name
    pwszNewSOM As LongPtr  ' New domain or OU location for account
    psaSecurityGroups As SAFEARRAY  ' New security groups
    pRsopToken As LongPtr 'PRSOPTOKEN ' Rsop token for use with Rsop security Api's
    pGPOList As LongPtr 'PGROUP_POLICY_OBJECT ' Linked list of GPOs
    pWbemServices As IUnknown 'IWbemServices  ' Pointer to namespace to log planning mode data
End Type

Public Enum SETTINGSTATUS
    RSOPUnspecified = 0
    RSOPApplied
    RSOPIgnored
    RSOPFailed
    RSOPSubsettingFailed
End Enum
Public Type POLICYSETTINGSTATUSINFO
    szKey As LongPtr
    szEventSource As LongPtr
    szEventLogName As LongPtr
    dwEventID As Long
    dwErrorCode As Long
    status As SETTINGSTATUS
    timeLogged As SYSTEMTIME
End Type

Public Enum RsopWmiFlags
    FLAG_NO_GPO_FILTER = &H80000000  ' GPOs are not filtered, implies FLAG_NO_CSE_INVOKE
    FLAG_NO_CSE_INVOKE = &H40000000  ' only GP processing done for planning mode
    FLAG_ASSUME_SLOW_LINK = &H20000000  ' planning mode RSoP assumes slow link
    FLAG_LOOPBACK_MERGE = &H10000000  ' planning mode RSoP assumes merge loop back
    FLAG_LOOPBACK_REPLACE = &H08000000  ' planning mode RSoP assumes replace loop back
    FLAG_ASSUME_USER_WQLFILTER_TRUE = &H04000000  ' planning mode RSoP assumes all comp filters to be true
    FLAG_ASSUME_COMP_WQLFILTER_TRUE = &H02000000  ' planning mode RSoP assumes all user filters to be true
    FLAG_PLANNING_MODE = &H01000000  ' flag that indicates that a given namespace was created
                                        '  for planning mode. This flag cannot be passed in but the
                                        '  relevant subnamespace will be marked with this flag
                                        '  diagnostic mode provider flags
    FLAG_NO_USER = &H00000001  ' Don't get any user data
    FLAG_NO_COMPUTER = &H00000002  ' Don't get any machine data
    FLAG_FORCE_CREATENAMESPACE = &H00000004
End Enum
' User accessing the rsop provider doesn't have access to user data.
Public Const RSOP_USER_ACCESS_DENIED  = &H00000001
'  User accessing the rsop provider doesn't have access to computer data.
Public Const RSOP_COMPUTER_ACCESS_DENIED  = &H00000002
'  This user is an interactive non admin user, the temp snapshot namespace already exists
'  and the FLAG_FORCE_CREATENAMESPACE was not passed in
Public Const RSOP_TEMPNAMESPACE_EXISTS  = &H00000004



Public Declare PtrSafe Function LoadUserProfileA Lib "userenv" (ByVal hToken As LongPtr, lpProfileInfo As PROFILEINFOA) As BOOL
Public Declare PtrSafe Function LoadUserProfileW Lib "userenv" (ByVal hToken As LongPtr, lpProfileInfo As PROFILEINFOW) As BOOL
Public DeclareWide PtrSafe Function LoadUserProfile Lib "userenv" Alias "LoadUserProfileW" (ByVal hToken As LongPtr, lpProfileInfo As PROFILEINFO) As BOOL
Public Declare PtrSafe Function UnloadUserProfile Lib "userenv" (ByVal hToken As LongPtr, ByVal hProfile As LongPtr) As BOOL
Public Declare PtrSafe Function GetProfilesDirectoryA Lib "userenv" (ByVal lpProfileDir As String, lpcchSize As Long) As BOOL
Public Declare PtrSafe Function GetProfilesDirectoryW Lib "userenv" (ByVal lpProfileDir As LongPtr, lpcchSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetProfilesDirectory Lib "userenv" Alias "GetProfilesDirectoryW" (ByVal lpProfileDir As String, lpcchSize As Long) As BOOL
Public Declare PtrSafe Function GetProfileType Lib "userenv" (dwFLags As ProfileTypeFlags) As BOOL
Public Declare PtrSafe Function DeleteProfileA Lib "userenv" (ByVal lpSidString As String, Optional ByVal lpProfilePath As String, Optional ByVal lpComputerName As String) As BOOL
Public Declare PtrSafe Function DeleteProfileW Lib "userenv" (ByVal lpSidString As LongPtr, Optional ByVal lpProfilePath As LongPtr, Optional ByVal lpComputerName As LongPtr) As BOOL
Public DeclareWide PtrSafe Function DeleteProfile Lib "userenv" Alias "DeleteProfileW" (ByVal lpSidString As String, Optional ByVal lpProfilePath As String, Optional ByVal lpComputerName As String) As BOOL
Public DeclareWide PtrSafe Function CreateProfile Lib "userenv" (ByVal pszUserSid As String, ByVal pszUserName As String, ByVal pszProfilePath As String, ByVal cchProfilePath As Long) As Long
Public Declare PtrSafe Function GetDefaultUserProfileDirectoryA Lib "userenv" (ByVal lpProfileDir As String, lpcchSize As Long) As BOOL
Public Declare PtrSafe Function GetDefaultUserProfileDirectoryW Lib "userenv" (ByVal lpProfileDir As LongPtr, lpcchSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetDefaultUserProfileDirectory Lib "userenv" Alias "GetDefaultUserProfileDirectoryW" (ByVal lpProfileDir As String, lpcchSize As Long) As BOOL
Public Declare PtrSafe Function GetAllUsersProfileDirectoryA Lib "userenv" (ByVal lpProfileDir As String, lpcchSize As Long) As BOOL
Public Declare PtrSafe Function GetAllUsersProfileDirectoryW Lib "userenv" (ByVal lpProfileDir As LongPtr, lpcchSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetAllUsersProfileDirectory Lib "userenv" Alias "GetAllUsersProfileDirectoryW" (ByVal lpProfileDir As String, lpcchSize As Long) As BOOL
Public Declare PtrSafe Function GetUserProfileDirectoryA Lib "userenv" (ByVal hToken As LongPtr, ByVal lpProfileDir As String, lpcchSize As Long) As BOOL
Public Declare PtrSafe Function GetUserProfileDirectoryW Lib "userenv" (ByVal hToken As LongPtr, ByVal lpProfileDir As LongPtr, lpcchSize As Long) As BOOL
Public DeclareWide PtrSafe Function GetUserProfileDirectory Lib "userenv" Alias "GetUserProfileDirectoryW" (ByVal hToken As LongPtr, ByVal lpProfileDir As String, lpcchSize As Long) As BOOL
Public Declare PtrSafe Function CreateEnvironmentBlock Lib "userenv" (lpEnvironment As LongPtr, ByVal hToken As LongPtr, ByVal bInherit As BOOL) As BOOL
Public Declare PtrSafe Function DestroyEnvironmentBlock Lib "userenv" (ByVal lpEnvironment As LongPtr) As BOOL
Public Declare PtrSafe Function ExpandEnvironmentStringsForUserA Lib "userenv" (ByVal hToken As LongPtr, ByVal lpSrc As String, ByVal lpDst As String, ByVal dwSize As Long) As BOOL
Public Declare PtrSafe Function ExpandEnvironmentStringsForUserW Lib "userenv" (ByVal hToken As LongPtr, ByVal lpSrc As LongPtr, ByVal lpDst As LongPtr, ByVal dwSize As Long) As BOOL
Public DeclareWide PtrSafe Function ExpandEnvironmentStringsForUser Lib "userenv" Alias "ExpandEnvironmentStringsForUserW" (ByVal hToken As LongPtr, ByVal lpSrc As String, ByVal lpDst As String, ByVal dwSize As Long) As BOOL
Public Declare PtrSafe Function RefreshPolicy Lib "userenv" (ByVal bMachine As BOOL) As BOOL
Public Declare PtrSafe Function RefreshPolicyEx Lib "userenv" (ByVal bMachine As BOOL, ByVal dwOptions As UserRefeshPolicyFlags) As BOOL
Public Declare PtrSafe Function EnterCriticalPolicySection Lib "userenv" (ByVal bMachine As BOOL) As LongPtr
Public Declare PtrSafe Function LeaveCriticalPolicySection Lib "userenv" (ByVal hSection As LongPtr) As BOOL
Public Declare PtrSafe Function RegisterGPNotification Lib "userenv" (ByVal hEvent As LongPtr, ByVal bMachine As BOOL) As BOOL
Public Declare PtrSafe Function UnregisterGPNotification Lib "userenv" (ByVal hEvent As LongPtr) As BOOL
Public Declare PtrSafe Function GetGPOListA Lib "userenv" (ByVal hToken As LongPtr, ByVal lpName As String, ByVal lpHostName As String, ByVal lpComputerName As String, ByVal dwFlags As GPOListFlags, pGPOList As LongPtr) As BOOL
Public Declare PtrSafe Function GetGPOListW Lib "userenv" (ByVal hToken As LongPtr, ByVal lpName As LongPtr, ByVal lpHostName As LongPtr, ByVal lpComputerName As LongPtr, ByVal dwFlags As GPOListFlags, pGPOList As LongPtr) As BOOL
Public DeclareWide PtrSafe Function GetGPOList Lib "userenv" Alias "GetGPOListW" (ByVal hToken As LongPtr, ByVal lpName As String, ByVal lpHostName As String, ByVal lpComputerName As String, ByVal dwFlags As GPOListFlags, pGPOList As LongPtr) As BOOL
Public Declare PtrSafe Function FreeGPOListA Lib "userenv" (ByVal pGPOList As LongPtr) As BOOL
Public Declare PtrSafe Function FreeGPOListW Lib "userenv" (ByVal pGPOList As LongPtr) As BOOL
Public DeclareWide PtrSafe Function FreeGPOList Lib "userenv" Alias "FreeGPOListW" (ByVal pGPOList As LongPtr) As BOOL
Public Declare PtrSafe Function GetAppliedGPOListA Lib "userenv" (ByVal dwFlags As GPOListFlags, ByVal pMachineName As String, ByVal pSidUser As LongPtr, pGuidExtension As UUID, ppGPOList As LongPtr) As Long
Public Declare PtrSafe Function GetAppliedGPOListW Lib "userenv" (ByVal dwFlags As GPOListFlags, ByVal pMachineName As LongPtr, ByVal pSidUser As LongPtr, pGuidExtension As UUID, ppGPOList As LongPtr) As Long
Public DeclareWide PtrSafe Function GetAppliedGPOList Lib "userenv" Alias "GetAppliedGPOListW" (ByVal dwFlags As GPOListFlags, ByVal pMachineName As String, ByVal pSidUser As LongPtr, pGuidExtension As UUID, ppGPOList As LongPtr) As Long
Public Declare PtrSafe Function ProcessGroupPolicyCompleted Lib "userenv" (extensionId As UUID, ByVal pAsyncHandle As LongPtr, ByVal dwStatus As Long) As Long
Public Declare PtrSafe Function ProcessGroupPolicyCompletedEx Lib "userenv" (extensionId As UUID, ByVal pAsyncHandle As LongPtr, ByVal dwStatus As Long, ByVal RsopStatus As Long) As Long
Public Declare PtrSafe Function RsopAccessCheckByType Lib "userenv" (pSecurityDescriptor As SECURITY_DESCRIPTOR, ByVal pPrincipalSelfSid As LongPtr, ByVal pRsopToken As LongPtr, [TypeHint(GenericRights, StandardAccessTypes)] ByVal dwDesiredAccessMask As Long, pObjectTypeList As OBJECT_TYPE_LIST, ByVal ObjectTypeListLength As Long, pGenericMapping As GENERIC_MAPPING, pPrivilegeSet As PRIVILEGE_SET, pdwPrivilegeSetLength As Long, pdwGrantedAccessMask As Long, pbAccessStatus As BOOL) As Long
Public Declare PtrSafe Function RsopFileAccessCheck Lib "userenv" (ByVal pszFileName As LongPtr, ByVal pRsopToken As LongPtr, [TypeHint(GenericRights, StandardAccessTypes)] ByVal dwDesiredAccessMask As Long, pdwGrantedAccessMask As Long, pbAccessStatus As BOOL) As Long
Public Declare PtrSafe Function RsopSetPolicySettingStatus Lib "userenv" (ByVal dwFlags As Long, ByVal pServices As IUnknown /* IWbemServices */, ByVal pSettingInstance As IUnknown /* IWbemClassObject */, ByVal nInfo As Long, pStatus As POLICYSETTINGSTATUSINFO) As Long
Public Declare PtrSafe Function RsopResetPolicySettingStatus Lib "userenv" (ByVal dwFlags As Long, ByVal pServices As IUnknown /* IWbemServices */, ByVal pSettingInstance As IUnknown /* IWbemClassObject */) As Long
Public DeclareWide PtrSafe Function GenerateGPNotification Lib "userenv" (ByVal bMachine As BOOL, ByVal lpwszMgmtProduct As String, ByVal dwMgmtProductOptions As Long) As Long
Public DeclareWide PtrSafe Function CreateAppContainerProfile Lib "userenv" (ByVal pszAppContainerName As String, ByVal pszDisplayName As String, ByVal pszDescription As String, pCapabilities As SID_AND_ATTRIBUTES, ByVal dwCapabilityCount As Long, ppSidAppContainerSid As LongPtr) As Long
Public DeclareWide PtrSafe Function DeleteAppContainerProfile Lib "userenv" (ByVal pszAppContainerName As String) As Long
Public Declare PtrSafe Function GetAppContainerRegistryLocation Lib "userenv" (ByVal desiredAccess As REGSAM, phAppContainerKey As LongPtr) As Long
Public DeclareWide PtrSafe Function GetAppContainerFolderPath Lib "userenv" (ByVal pszAppContainerSid As String, ppszPath As LongPtr) As Long
Public DeclareWide PtrSafe Function DeriveRestrictedAppContainerSidFromAppContainerSidAndRestrictedName Lib "userenv" (ByVal psidAppContainerSid As LongPtr, ByVal pszRestrictedAppContainerName As String, ppsidRestrictedAppContainerSid As LongPtr) As Long
Public DeclareWide PtrSafe Function DeriveAppContainerSidFromAppContainerName Lib "userenv" (ByVal pszAppContainerName As String, ppsidAppContainerSid As LongPtr) As Long

Public Function REGISTRY_EXTENSION_GUID() As UUID
'{35378EAC-683F-11D2-A89A-00C04FBBCFA2}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H35378EAC, CInt(&H683F), CInt(&H11D2), &HA8, &H9A, &H00, &HC0, &H4F, &HBB, &HCF, &HA2)
 REGISTRY_EXTENSION_GUID = iid
End Function
Public Function GROUP_POLICY_TRIGGER_EVENT_PROVIDER_GUID() As UUID
'{BD2F4252-5E1E-49FC-9A30-F3978AD89EE2}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HBD2F4252, CInt(&H5E1E), CInt(&H49FC), &H9A, &H30, &HF3, &H97, &H8A, &HD8, &H9E, &HE2)
 GROUP_POLICY_TRIGGER_EVENT_PROVIDER_GUID = iid
End Function
Public Function MACHINE_POLICY_PRESENT_TRIGGER_GUID() As UUID
'{659FCAE6-5BDB-4DA9-B1FF-CA2A178D46E0}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H659FCAE6, CInt(&H5BDB), CInt(&H4DA9), &HB1, &HFF, &HCA, &H2A, &H17, &H8D, &H46, &HE0)
 MACHINE_POLICY_PRESENT_TRIGGER_GUID = iid
End Function
Public Function USER_POLICY_PRESENT_TRIGGER_GUID() As UUID
'{54FB46C8-F089-464C-B1FD-59D1B62C3B50}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H54FB46C8, CInt(&HF089), CInt(&H464C), &HB1, &HFD, &H59, &HD1, &HB6, &H2C, &H3B, &H50)
 USER_POLICY_PRESENT_TRIGGER_GUID = iid
End Function

' END UserEnv.h




Public Enum AcmStatusfFlags
	ACMSTREAMHEADER_STATUSF_DONE = &H00010000
	ACMSTREAMHEADER_STATUSF_PREPARED = &H00020000
	ACMSTREAMHEADER_STATUSF_INQUEUE = &H00100000
End Enum
[PackingAlignment(1)]
Public Type ACMSTREAMHEADER
	cbStruct As Long ' sizeof(ACMSTREAMHEADER)
	fdwStatus As AcmStatusfFlags ' ACMSTREAMHEADER_STATUSF_*
	dwUser As LongPtr ' user instance data for hdr
	pbSrc As LongPtr
	cbSrcLength As Long
	cbSrcLengthUsed As Long
	dwSrcUser As LongPtr ' user instance data for src
	pbDst As LongPtr
	cbDstLength As Long
	cbDstLengthUsed As Long
	dwDstUser As LongPtr ' user instance data for dst
	dwReservedDriver(9) As Long ' driver reserved work space
End Type

Public Enum AcmStreamOpenFlags
	ACM_STREAMOPENF_QUERY = &H00000001
	ACM_STREAMOPENF_ASYNC = &H00000002
	ACM_STREAMOPENF_NONREALTIME = &H00000004
End Enum

Public Enum WaveFilterTypes
    WAVE_FILTER_UNKNOWN = &H0000
    WAVE_FILTER_DEVELOPMENT = (&HFFFF&)
    WAVE_FILTER_VOLUME = &H0001
    WAVE_FILTER_ECHO = &H0002
End Enum
Public Type WAVEFILTER
	cbStruct As Long
	dwFilterTag As WaveFilterTypes
	fdwFilter As Long
	dwReserved(0 To 4) As Long
End Type
Public Type VOLUMEWAVEFILTER
    wfltr As WAVEFILTER
    dwVolume As Long
End Type
Public Type ECHOWAVEFILTER
    wfltr As WAVEFILTER
    dwVolume As Long
    dwDelay As Long
End Type



Public Declare PtrSafe Function acmStreamClose Lib "msacm32" (ByVal has As LongPtr, ByVal fdwClose As Long) As Long
Public Declare PtrSafe Function acmStreamConvert Lib "msacm32" (ByVal has As LongPtr, ByRef pash As ACMSTREAMHEADER, ByVal fdwConvert As Long) As Long
Public Declare PtrSafe Function acmStreamMessage Lib "msacm32" (ByVal has As LongPtr, ByVal uMsg As Long, ByVal lParam1 As LongPtr, ByVal lParam2 As LongPtr) As Long
Public DeclareWide PtrSafe Function acmStreamOpen Lib "msacm32" (phas As LongPtr, ByVal had As LongPtr, pwfxSrc As WAVEFORMATEX, pwfxDst As WAVEFORMATEX, pwfltr As WAVEFILTER, ByVal dwCallback As LongPtr, dwInstance As Any, ByVal fdwOpen As AcmStreamOpenFlags) As Long
Public Declare PtrSafe Function acmStreamPrepareHeader Lib "msacm32" (ByVal has As LongPtr, ByRef pash As ACMSTREAMHEADER, ByVal fdwPrepare As Long) As Long
Public Declare PtrSafe Function acmStreamReset Lib "msacm32" (ByVal has As LongPtr, ByVal fdwReset As Long) As Long
Public Declare PtrSafe Function acmStreamSize Lib "msacm32" (ByVal has As LongPtr, ByVal cbInput As Long, ByRef pdwOutputBytes As Long, ByVal fdwSize As Long) As Long
Public Declare PtrSafe Function acmStreamUnprepareHeader Lib "msacm32" (ByVal has As LongPtr, ByRef pash As ACMSTREAMHEADER, ByVal fdwUnprepare As Long) As Long


Public Enum TRANSLATEURL_IN_FLAGS
	TRANSLATEURL_FL_GUESS_PROTOCOL = &H0001
	TRANSLATEURL_FL_USE_DEFAULT_PROTOCOL = &H0002
End Enum
Public Declare PtrSafe Function TranslateURLA Lib "url.dll" (ByVal pcszUrl As String, ByVal dwInFlags As TRANSLATEURL_IN_FLAGS, ppszTranslatedURL As LongPtr) As Long
Public Declare PtrSafe Function TranslateURLW Lib "url.dll" (ByVal pcszUrl As LongPtr, ByVal dwInFlags As TRANSLATEURL_IN_FLAGS, ppszTranslatedURL As LongPtr) As Long
Public DeclareWide PtrSafe Function TranslateURL Lib "url.dll" Alias "TranslateURLW" (ByVal pcszUrl As String, ByVal dwInFlags As TRANSLATEURL_IN_FLAGS, ppszTranslatedURL As LongPtr) As Long

Public Declare PtrSafe Function InetIsOffline Lib "url.dll" (ByVal dwFlags As Long) As BOOL

Public Enum HtmlHelpCommands
	HH_DISPLAY_TOPIC = &H0000
	HH_HELP_FINDER = &H0000  ' WinHelp equivalent
	HH_DISPLAY_TOC = &H0001
	HH_DISPLAY_INDEX = &H0002
	HH_DISPLAY_SEARCH = &H0003
	HH_SET_WIN_TYPE = &H0004
	HH_GET_WIN_TYPE = &H0005
	HH_GET_WIN_HANDLE = &H0006
	HH_ENUM_INFO_TYPE = &H0007  ' Get Info type name, call repeatedly to enumerate, -1 at end
	HH_SET_INFO_TYPE = &H0008  ' Add Info type to filter.
	HH_SYNC = &H0009
	HH_RESERVED1 = &H000A
	HH_RESERVED2 = &H000B
	HH_RESERVED3 = &H000C
	HH_KEYWORD_LOOKUP = &H000D
	HH_DISPLAY_TEXT_POPUP = &H000E  ' display string resource id or text in a popup window
	HH_HELP_CONTEXT = &H000F  ' display mapped numeric value in dwData
	HH_TP_HELP_CONTEXTMENU = &H0010  ' text popup help, same as WinHelp HELP_CONTEXTMENU
	HH_TP_HELP_WM_HELP = &H0011  ' text popup help, same as WinHelp HELP_WM_HELP
	HH_CLOSE_ALL = &H0012  ' close all windows opened directly or indirectly by the caller
	HH_ALINK_LOOKUP = &H0013  ' ALink version of HH_KEYWORD_LOOKUP
	HH_GET_LAST_ERROR = &H0014  ' not currently implemented // See HHERROR.h
	HH_ENUM_CATEGORY = &H0015  ' Get category name, call repeatedly to enumerate, -1 at end
	HH_ENUM_CATEGORY_IT = &H0016  ' Get category info type members, call repeatedly to enumerate, -1 at end
	HH_RESET_IT_FILTER = &H0017  ' Clear the info type filter of all info types.
	HH_SET_INCLUSIVE_FILTER = &H0018  ' set inclusive filtering method for untyped topics to be included in display
	HH_SET_EXCLUSIVE_FILTER = &H0019  ' set exclusive filtering method for untyped topics to be excluded from display
	HH_INITIALIZE = &H001C  ' Initializes the help system.
	HH_UNINITIALIZE = &H001D  ' Uninitializes the help system.
	HH_SET_QUERYSERVICE = &H001E  ' Set the Host IQueryService interface
	HH_PRETRANSLATEMESSAGE = &H00fd  ' Pumps messages. (NULL, NULL, MSG*).
	HH_SET_GLOBAL_PROPERTY = &H00fc  ' Set a global property. (NULL, NULL, HH_GPROP)
	HH_SAFE_DISPLAY_TOPIC = &H0020  ' private addition to the interface for InternetExplorer.
End Enum

Public Enum HTMLHelpProps
    HHWIN_PROP_TAB_AUTOHIDESHOW = (1 << 0)    ' Automatically hide/show tri-pane window
    HHWIN_PROP_ONTOP = (1 << 1)    ' Top-most window
    HHWIN_PROP_NOTITLEBAR = (1 << 2)    ' no title bar
    HHWIN_PROP_NODEF_STYLES = (1 << 3)    ' no default window styles (only HH_WINTYPE.dwStyles)
    HHWIN_PROP_NODEF_EXSTYLES = (1 << 4)    ' no default extended window styles (only HH_WINTYPE.dwExStyles)
    HHWIN_PROP_TRI_PANE = (1 << 5)    ' use a tri-pane window
    HHWIN_PROP_NOTB_TEXT = (1 << 6)    ' no text on toolbar buttons
    HHWIN_PROP_POST_QUIT = (1 << 7)    ' post WM_QUIT message when window closes
    HHWIN_PROP_AUTO_SYNC = (1 << 8)    ' automatically ssync contents and index
    HHWIN_PROP_TRACKING = (1 << 9)    ' send tracking notification messages
    HHWIN_PROP_TAB_SEARCH = (1 << 10)   ' include search tab in navigation pane
    HHWIN_PROP_TAB_HISTORY = (1 << 11)   ' include history tab in navigation pane
    HHWIN_PROP_TAB_FAVORITES = (1 << 12)   ' include favorites tab in navigation pane
    HHWIN_PROP_CHANGE_TITLE = (1 << 13)   ' Put current HTML title in title bar
    HHWIN_PROP_NAV_ONLY_WIN = (1 << 14)   ' Only display the navigation window
    HHWIN_PROP_NO_TOOLBAR = (1 << 15)   ' Don't display a toolbar
    HHWIN_PROP_MENU = (1 << 16)   ' Menu
    HHWIN_PROP_TAB_ADVSEARCH = (1& << 17)   ' Advanced FTS UI.
    HHWIN_PROP_USER_POS = (1& << 18)   ' After initial creation, user controls window size/position
    HHWIN_PROP_TAB_CUSTOM1 = (1& << 19)   ' Use custom tab #1
    HHWIN_PROP_TAB_CUSTOM2 = (1& << 20)   ' Use custom tab #2
    HHWIN_PROP_TAB_CUSTOM3 = (1& << 21)   ' Use custom tab #3
    HHWIN_PROP_TAB_CUSTOM4 = (1& << 22)   ' Use custom tab #4
    HHWIN_PROP_TAB_CUSTOM5 = (1& << 23)   ' Use custom tab #5
    HHWIN_PROP_TAB_CUSTOM6 = (1& << 24)   ' Use custom tab #6
    HHWIN_PROP_TAB_CUSTOM7 = (1& << 25)   ' Use custom tab #7
    HHWIN_PROP_TAB_CUSTOM8 = (1& << 26)   ' Use custom tab #8
    HHWIN_PROP_TAB_CUSTOM9 = (1& << 27)   ' Use custom tab #9
    HHWIN_TB_MARGIN = (1& << 28)   ' the window type has a margin	
End Enum

Public Enum HTMLHelpParam
    HHWIN_PARAM_PROPERTIES = (1 << 1)    ' valid fsWinProperties
    HHWIN_PARAM_STYLES = (1 << 2)    ' valid dwStyles
    HHWIN_PARAM_EXSTYLES = (1 << 3)    ' valid dwExStyles
    HHWIN_PARAM_RECT = (1 << 4)    ' valid rcWindowPos
    HHWIN_PARAM_NAV_WIDTH = (1 << 5)    ' valid iNavWidth
    HHWIN_PARAM_SHOWSTATE = (1 << 6)    ' valid nShowState
    HHWIN_PARAM_INFOTYPES = (1 << 7)    ' valid apInfoTypes
    HHWIN_PARAM_TB_FLAGS = (1 << 8)    ' valid fsToolBarFlags
    HHWIN_PARAM_EXPANSION = (1 << 9)    ' valid fNotExpanded
    HHWIN_PARAM_TABPOS = (1 << 10)   ' valid tabpos
    HHWIN_PARAM_TABORDER = (1 << 11)   ' valid taborder
    HHWIN_PARAM_HISTORY_COUNT = (1 << 12)   ' valid cHistory
    HHWIN_PARAM_CUR_TAB = (1 << 13)   ' valid curNavType	
End Enum

Public Enum HTMLHelpButtons
    HHWIN_BUTTON_EXPAND = (1 << 1)    ' Expand/contract button
    HHWIN_BUTTON_BACK = (1 << 2)    ' Back button
    HHWIN_BUTTON_FORWARD = (1 << 3)    ' Forward button
    HHWIN_BUTTON_STOP = (1 << 4)    ' Stop button
    HHWIN_BUTTON_REFRESH = (1 << 5)    ' Refresh button
    HHWIN_BUTTON_HOME = (1 << 6)    ' Home button
    HHWIN_BUTTON_BROWSE_FWD = (1 << 7)    ' not implemented
    HHWIN_BUTTON_BROWSE_BCK = (1 << 8)    ' not implemented
    HHWIN_BUTTON_NOTES = (1 << 9)    ' not implemented
    HHWIN_BUTTON_CONTENTS = (1 << 10)   ' not implemented
    HHWIN_BUTTON_SYNC = (1 << 11)   ' Sync button
    HHWIN_BUTTON_OPTIONS = (1 << 12)   ' Options button
    HHWIN_BUTTON_PRINT = (1 << 13)   ' Print button
    HHWIN_BUTTON_INDEX = (1 << 14)   ' not implemented
    HHWIN_BUTTON_SEARCH = (1 << 15)   ' not implemented
    HHWIN_BUTTON_HISTORY = (1& << 16)   ' not implemented
    HHWIN_BUTTON_FAVORITES = (1& << 17)   ' not implemented
    HHWIN_BUTTON_JUMP1 = (1& << 18)
    HHWIN_BUTTON_JUMP2 = (1& << 19)
    HHWIN_BUTTON_ZOOM = (1& << 20)
    HHWIN_BUTTON_TOC_NEXT = (1& << 21)
    HHWIN_BUTTON_TOC_PREV = (1& << 22)

    HHWIN_DEF_BUTTONS = (HHWIN_BUTTON_EXPAND Or HHWIN_BUTTON_BACK Or HHWIN_BUTTON_OPTIONS Or HHWIN_BUTTON_PRINT)
End Enum


Public Enum HtmlHelpButtonIDs
	IDTB_EXPAND = 200
	IDTB_CONTRACT = 201
	IDTB_STOP = 202
	IDTB_REFRESH = 203
	IDTB_BACK = 204
	IDTB_HOME = 205
	IDTB_SYNC = 206
	IDTB_PRINT = 207
	IDTB_OPTIONS = 208
	IDTB_FORWARD = 209
	IDTB_NOTES = 210  ' not implemented
	IDTB_BROWSE_FWD = 211
	IDTB_BROWSE_BACK = 212
	IDTB_CONTENTS = 213  ' not implemented
	IDTB_INDEX = 214  ' not implemented
	IDTB_SEARCH = 215  ' not implemented
	IDTB_HISTORY = 216  ' not implemented
	IDTB_FAVORITES = 217  ' not implemented
	IDTB_JUMP1 = 218
	IDTB_JUMP2 = 219
	IDTB_CUSTOMIZE = 221
	IDTB_ZOOM = 222
	IDTB_TOC_NEXT = 223
	IDTB_TOC_PREV = 224
End Enum

Public Const HHN_FIRST  = (0 - 860)
Public Const HHN_LAST  = (0 - 879)
Public Const HHN_NAVCOMPLETE  = (HHN_FIRST - 0)
Public Const HHN_TRACK  = (HHN_FIRST - 1)
Public Const HHN_WINDOW_CREATE  = (HHN_FIRST - 2)




Public Type HHN_NOTIFY
	hdr As NMHDR
	pszUrl As LongPtr ' Multi-byte, null-terminated string
End Type

Public Type HH_POPUP
	cbStruct As Long ' sizeof this structure
	hinst As LongPtr ' instance handle for string resource
	idString As Long ' string resource id, or text id if pszFile is specified in HtmlHelp call
	pszText As LongPtr ' used if idString is zero
	pt As POINT ' top center of popup window
	clrForeground As Long ' use -1 for default
	clrBackground As Long ' use -1 for default
	rcMargins As RECT ' amount of space between edges of window and text, -1 for each member to ignore
	pszFont As LongPtr ' facename, point size, char set, BOLD ITALIC UNDERLINE
End Type

Public Type HH_AKLINK
	cbStruct As Long ' sizeof this structure
	fReserved As BOOL ' must be FALSE (really!)
	pszKeywords As LongPtr ' semi-colon separated keywords
	pszUrl As LongPtr ' URL to jump to if no keywords found (may be NULL)
	pszMsgText As LongPtr ' Message text to display in MessageBox if pszUrl is NULL and no keyword match
	pszMsgTitle As LongPtr ' Message text to display in MessageBox if pszUrl is NULL and no keyword match
	pszWindow As LongPtr ' Window to display URL in
	fIndexOnFail As BOOL ' Displays index if keyword lookup fails.
End Type

Public Enum HHWIN_NavTypes
	HHWIN_NAVTYPE_TOC
	HHWIN_NAVTYPE_INDEX
	HHWIN_NAVTYPE_SEARCH
	HHWIN_NAVTYPE_FAVORITES
	HHWIN_NAVTYPE_HISTORY   ' not implemented
	HHWIN_NAVTYPE_AUTHOR
	HHWIN_NAVTYPE_CUSTOM_FIRST = 11
End Enum

Public Enum HtmlHelpInfoType
	IT_INCLUSIVE = 0
	IT_EXCLUSIVE = 1
	IT_HIDDEN = 2
End Enum
Public Type HH_ENUM_IT
	cbStruct As Long ' size of this structure
	iType As HtmlHelpInfoType ' the type of the information type ie. Inclusive, Exclusive, or Hidden
	pszCatName As LongPtr ' Set to the name of the Category to enumerate the info types in a category; else NULL
	pszITName As LongPtr ' volitile pointer to the name of the infotype. Allocated by call. Caller responsible for freeing
	pszITDescription As LongPtr ' volitile pointer to the description of the infotype.
End Type

Public Type HH_ENUM_CAT
	cbStruct As Long ' size of this structure
	pszCatName As LongPtr ' volitile pointer to the category name
	pszCatDescription As LongPtr ' volitile pointer to the category description
End Type

Public Type HH_SET_INFOTYPE
	cbStruct As Long ' the size of this structure
	pszCatName As LongPtr ' the name of the category, if any, the InfoType is a member of.
	pszInfoTypeName As LongPtr ' the name of the info type to add to the filter
End Type

Public Enum HtmlHelpNavTabs
    HHWIN_NAVTAB_TOP
    HHWIN_NAVTAB_LEFT
    HHWIN_NAVTAB_BOTTOM
End Enum

Public Const HH_MAX_TABS = 19
Public Enum HtmlHelpTabs
    HH_TAB_CONTENTS
    HH_TAB_INDEX
    HH_TAB_SEARCH
    HH_TAB_FAVORITES
    HH_TAB_HISTORY
    HH_TAB_AUTHOR

    HH_TAB_CUSTOM_FIRST = 11
    HH_TAB_CUSTOM_LAST = HH_MAX_TABS
End Enum

Public Const HH_FTS_DEFAULT_PROXIMITY = (-1)

Public Type HH_FTS_QUERY
	cbStruct As Long ' Sizeof structure in bytes.
	fUniCodeStrings As BOOL ' TRUE if all strings are unicode.
	pszSearchQuery As LongPtr ' String containing the search query.
	iProximity As Long ' Word proximity.
	fStemmedSearch As Long ' TRUE for StemmedSearch only.
	fTitleOnly As BOOL ' TRUE for Title search only.
	fExecute As BOOL ' TRUE to initiate the search.
	pszWindow As LongPtr ' Window to display in
End Type

Public Type HH_WINTYPE
	cbStruct As Long ' IN: size of this structure including all Information Types
	fUniCodeStrings As BOOL ' IN/OUT: TRUE if all strings are in UNICODE
	pszType As LongPtr ' IN/OUT: Name of a type of window
	fsValidMembers As Long ' IN: Bit flag of valid members (HHWIN_PARAM_)
	fsWinProperties As HTMLHelpProps ' IN/OUT: Properties/attributes of the window (HHWIN_)
	pszCaption As LongPtr ' IN/OUT: Window title
	dwStyles As Long ' IN/OUT: Window styles
	dwExStyles As Long ' IN/OUT: Extended Window styles
	rcWindowPos As RECT ' IN: Starting position, OUT: current position
	nShowState As SHOWWINDOW ' IN: show state (e.g., SW_SHOW)
	hwndHelp As LongPtr ' OUT: window handle
	hwndCaller As LongPtr ' OUT: who called this window
	paInfoTypes As LongPtr ' IN: Pointer to an array of Information Types
	' The following members are only valid if HHWIN_PROP_TRI_PANE is set
	hwndToolBar As Long ' OUT: toolbar window in tri-pane window
	hwndNavigation As Long ' OUT: navigation window in tri-pane window
	hwndHTML As Long ' OUT: window displaying HTML in tri-pane window
	iNavWidth As Long ' IN/OUT: width of navigation window
	rcHTML As RECT ' OUT: HTML window coordinates
	pszToc As LongPtr ' IN: Location of the table of contents file
	pszIndex As LongPtr ' IN: Location of the index file
	pszFile As LongPtr ' IN: Default location of the html file
	pszHome As LongPtr ' IN/OUT: html file to display when Home button is clicked
	fsToolBarFlags As Long ' IN: flags controling the appearance of the toolbar
	fNotExpanded As Long ' IN: TRUE/FALSE to contract or expand, OUT: current state
	curNavType As Long ' IN/OUT: UI to display in the navigational pane
	tabpos As Long ' IN/OUT: HHWIN_NAVTAB_TOP, HHWIN_NAVTAB_LEFT, or HHWIN_NAVTAB_BOTTOM
	idNotify As Long ' IN: ID to use for WM_NOTIFY messages
	tabOrder(HH_MAX_TABS) As Byte ' IN/OUT: tab order: Contents, Index, Search, History, Favorites, Reserved 1-5, Custom tabs
	cHistory As Long ' IN/OUT: number of history items to keep (default is 30)
	pszJump1 As LongPtr ' Text for HHWIN_BUTTON_JUMP1
	pszJump2 As LongPtr ' Text for HHWIN_BUTTON_JUMP2
	pszUrlJump1 As LongPtr ' URL for HHWIN_BUTTON_JUMP1
	pszUrlJump2 As LongPtr ' URL for HHWIN_BUTTON_JUMP2
	rcMinSize As RECT ' Minimum size for window (ignored in version 1)
	cbInfoTypes As Long ' size of paInfoTypes;
	pszCustomTabs As LongPtr ' multiple zero-terminated strings
End Type

Public Enum HtmlHelpACT
	HHACT_TAB_CONTENTS = 0
	HHACT_TAB_INDEX = 1
	HHACT_TAB_SEARCH = 2
	HHACT_TAB_HISTORY = 3
	HHACT_TAB_FAVORITES = 4
	HHACT_EXPAND = 5
	HHACT_CONTRACT = 6
	HHACT_BACK = 7
	HHACT_FORWARD = 8
	HHACT_STOP = 9
	HHACT_REFRESH = 10
	HHACT_HOME = 11
	HHACT_SYNC = 12
	HHACT_OPTIONS = 13
	HHACT_PRINT = 14
	HHACT_HIGHLIGHT = 15
	HHACT_CUSTOMIZE = 16
	HHACT_JUMP1 = 17
	HHACT_JUMP2 = 18
	HHACT_ZOOM = 19
	HHACT_TOC_NEXT = 20
	HHACT_TOC_PREV = 21
	HHACT_NOTES = 22
	HHACT_LAST_ENUM = 23
End Enum

Public Type HHNTRACK
	hdr As NMHDR
	pszCurUrl As LongPtr ' Multi-byte, null-terminated string
	idAction As HtmlHelpACT ' HHACT_ value
	phhWinType As LongPtr ' Current window type structure
End Type

Public Enum HH_GPROPID
	HH_GPROPID_SINGLETHREAD = 1 ' VARIANT_BOOL: True for single thread
	HH_GPROPID_TOOLBAR_MARGIN = 2 ' long: Provides a left/right margin around the toolbar.
	HH_GPROPID_UI_LANGUAGE = 3 ' long: LangId of the UI.
	HH_GPROPID_CURRENT_SUBSET = 4 ' BSTR: Current subset.
	HH_GPROPID_CONTENT_LANGUAGE = 5 ' long: LandId for desired content.
End Enum
Public Type HH_GLOBAL_PROPERTY
	id As HH_GPROPID
	var As Variant
End Type

Public Declare PtrSafe Function HtmlHelpW Lib "htmlhelp.dll" (ByVal hwndCaller As LongPtr, ByVal pszFile As LongPtr, ByVal uCommand As HtmlHelpCommands, ByVal dwData As LongPtr) As LongPtr
Public Declare PtrSafe Function HtmlHelpA Lib "htmlhelp.dll" (ByVal hwndCaller As String, ByVal pszFile As String, ByVal uCommand As HtmlHelpCommands, ByVal dwData As LongPtr) As LongPtr
Public DeclareWide PtrSafe Function HtmlHelp Lib "htmlhelp.dll" Alias "HtmlHelpW" (ByVal hwndCaller As LongPtr, ByVal pszFile As String, ByVal uCommand As HtmlHelpCommands, ByVal dwData As LongPtr) As LongPtr




' Public Declare PtrSafe Function RegisterAppStateChangeNotification Lib "Twinapi.core.dll" (ByVal Routine As LongPtr, ByVal Context As LongPtr, Registration As LongPtr) As Long
' Public Declare PtrSafe Sub UnregisterAppStateChangeNotification Lib "Twinapi.core.dll" (ByVal Registration As LongPtr)


/*
cards.dll
Note: There's no known 64bit build. If you ever get one, you can remove the [ Unimplemented ]
*/
Public Enum CardsResourceIds
    IDACLUBS = 1
    ID2CLUBS = 2
    ID3CLUBS = 3
    ID4CLUBS = 4
    ID5CLUBS = 5
    ID6CLUBS = 6
    ID7CLUBS = 7
    ID8CLUBS = 8
    ID9CLUBS = 9
    IDTCLUBS = 10
    IDJCLUBS = 11
    IDQCLUBS = 12
    IDKCLUBS = 13
    IDADIAMONDS = 14
    ID2DIAMONDS = 15
    ID3DIAMONDS = 16
    ID4DIAMONDS = 17
    ID5DIAMONDS = 18
    ID6DIAMONDS = 19
    ID7DIAMONDS = 20
    ID8DIAMONDS = 21
    ID9DIAMONDS = 22
    IDTDIAMONDS = 23
    IDJDIAMONDS = 24
    IDQDIAMONDS = 25
    IDKDIAMONDS = 26
    IDAHEARTS = 27
    ID2HEARTS = 28
    ID3HEARTS = 29
    ID4HEARTS = 30
    ID5HEARTS = 31
    ID6HEARTS = 32
    ID7HEARTS = 33
    ID8HEARTS = 34
    ID9HEARTS = 35
    IDTHEARTS = 36
    IDJHEARTS = 37
    IDQHEARTS = 38
    IDKHEARTS = 39
    IDASPADES = 40
    ID2SPADES = 41
    ID3SPADES = 42
    ID4SPADES = 43
    ID5SPADES = 44
    ID6SPADES = 45
    ID7SPADES = 46
    ID8SPADES = 47
    ID9SPADES = 48
    IDTSPADES = 49
    IDJSPADES = 50
    IDQSPADES = 51
    IDKSPADES = 52
    IDGHOST = 53
    IDFACEDOWN1 = 54
    IDFACEDOWN2 = 55
    IDFACEDOWN3 = 56
    IDFACEDOWN4 = 57
    IDFACEDOWN5 = 58
    IDFACEDOWN6 = 59
    IDFACEDOWN7 = 60
    IDFACEDOWN8 = 61
    IDFACEDOWN9 = 62
    IDFACEDOWN10 = 63
    IDFACEDOWN11 = 64
    IDFACEDOWN12 = 65
    IDFACEDOWNFIRST = IDFACEDOWN1
    IDFACEDOWNLAST = IDFACEDOWN12
End Enum
Public Enum CardsDllConsts
    CARDS_FACEUP = 0
    CARDS_FACEDOWN = 1 /* for compatibility with old apps, use IDFACEDOWNFIRST..IDFACEDOWNLAST */
    CARDS_HLITE = 2
    CARDS_GHOST = 3
    CARDS_REMOVE = 4
    CARDS_INVISIBLEGHOST = 5
    CARDS_DECKX = 6
    CARDS_DECKO = 7
End Enum

#If Win64 Then
[Unimplemented]
[Description("Note: There's no known 64bit build. If you ever get one, you can remove the [ Unimplemented ]")]
#End If
Public Declare PtrSafe Function cdtInit Lib "cards.dll" (pdxCard As Long, pdyCard As Long) As BOOL
#If Win64 Then
[Unimplemented]
[Description("Note: There's no known 64bit build. If you ever get one, you can remove the [ Unimplemented ]")]
#End If
Public Declare PtrSafe Function cdtDrawExt Lib "cards.dll" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal dx As Long, ByVal dy As Long, ByVal cd As CardsResourceIds, ByVal mode As CardsDllConsts, ByVal rgbBgnd As Long) As BOOL
#If Win64 Then
[Unimplemented]
[Description("Note: There's no known 64bit build. If you ever get one, you can remove the [ Unimplemented ]")]
#End If
Public Declare PtrSafe Function cdtDraw Lib "cards.dll" (ByVal hdc As LongPtr, ByVal x As Long, ByVal y As Long, ByVal cd As CardsResourceIds, ByVal mode As CardsDllConsts, ByVal rgbBgnd As Long) As BOOL
#If Win64 Then
[Unimplemented]
[Description("Note: There's no known 64bit build. If you ever get one, you can remove the [ Unimplemented ]")]
#End If
Public Declare PtrSafe Function cdtAnimate Lib "cards.dll" (ByVal hdc As LongPtr, ByVal cd As CardsResourceIds, ByVal x As Long, ByVal y As Long, ByVal ispr As Long) As BOOL
#If Win64 Then
[Unimplemented]
[Description("Note: There's no known 64bit build. If you ever get one, you can remove the [ Unimplemented ]")]
#End If
Public Declare PtrSafe Sub cdtTerm Lib "cards.dll" ()


[IgnoreWarnings(TB0015)]
[Description("📝**NOTE:** twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).")]
Public Declare PtrSafe Function ArrPtr Lib "msvbvm60.dll" Alias "VarPtr" (var() As Any) As LongPtr
[IgnoreWarnings(TB0015)]
[Description("📝**NOTE:** twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).")]
Public Declare PtrSafe Function vbaObjSetAddRef Lib "msvbvm60.dll" Alias "__vbaObjSetAddref" (ByRef objDest As Object, ByVal pObject As LongPtr) As LongPtr 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
[IgnoreWarnings(TB0015)]
[Description("📝**NOTE:** twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).")]
Public Declare PtrSafe Function vbaObjSet Lib "msvbvm60.dll" Alias "__vbaObjSet" (ByRef objDest As Object, ByVal pObject As LongPtr) As LongPtr 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
[IgnoreWarnings(TB0015)]
[Description("📝**NOTE:** twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).")]
Public Declare PtrSafe Function vbaCastObj Lib "msvbvm60.dll" Alias "__vbaCastObj" (pObj As Any, riid As UUID) As LongPtr 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
[IgnoreWarnings(TB0015)]
[Description("📝**NOTE:** twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).")]
Public Declare PtrSafe Function GetMem1 Lib "msvbvm60.dll" (pSrc As Any, pDst As Any) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
[IgnoreWarnings(TB0015)]
[Description("📝**NOTE:** twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).")]
Public Declare PtrSafe Function GetMem2 Lib "msvbvm60.dll" (pSrc As Any, pDst As Any) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
[IgnoreWarnings(TB0015)]
[Description("📝**NOTE:** twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).")]
Public Declare PtrSafe Function GetMem4 Lib "msvbvm60.dll" (pSrc As Any, pDst As Any) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
[IgnoreWarnings(TB0015)]
[Description("📝**NOTE:** twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).")]
Public Declare PtrSafe Function GetMem8 Lib "msvbvm60.dll" (pSrc As Any, pDst As Any) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
#If Win64 Then
[IgnoreWarnings(TB0015)]
[Description("📝**NOTE:** twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).")]
Public Declare PtrSafe Function GetMemPtr Lib "msvbvm60.dll" Alias "GetMem8" (pSrc As Any, pDst As Any) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
#Else
[IgnoreWarnings(TB0015)]
[Description("📝**NOTE:** twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).")]
Public Declare PtrSafe Function GetMemPtr Lib "msvbvm60.dll" Alias "GetMem4" (pSrc As Any, pDst As Any) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
#End If

[IgnoreWarnings(TB0015)]
[Description("📝**NOTE:** twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).")]
Public Declare PtrSafe Function PutMem1 Lib "msvbvm60.dll" (pDst As Any, ByVal v As Byte) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
[IgnoreWarnings(TB0015)]
[Description("📝**NOTE:** twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).")]
Public Declare PtrSafe Function PutMem2 Lib "msvbvm60.dll" (pDst As Any, ByVal v As Integer) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
[IgnoreWarnings(TB0015)]
[Description("📝**NOTE:** twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).")]
Public Declare PtrSafe Function PutMem4 Lib "msvbvm60.dll" (pDst As Any, ByVal v As Long) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
[IgnoreWarnings(TB0015)]
[Description("📝**NOTE:** twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).")]
Public Declare PtrSafe Function PutMem8 Lib "msvbvm60.dll" (pDst As Any, ByVal v As LongLong) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
#If Win64 Then
[IgnoreWarnings(TB0015)]
[Description("📝**NOTE:** twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).")]
Public Declare PtrSafe Function PutMemPtr Lib "msvbvm60.dll" Alias "PutMem8" (pDst As Any, ByVal v As LongLong) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
#Else
[IgnoreWarnings(TB0015)]
[Description("📝**NOTE:** twinBASIC patches this to an internal implementation, it will not actually call msvbvm60 (or any other DLL).")]
Public Declare PtrSafe Function PutMemPtr Lib "msvbvm60.dll" Alias "PutMem4" (pDst As Any, ByVal v As Long) As Long 'THIS IS REDIRECTED TO A TWINBASIC INTERNAL IMPLEMENTATION
#End If
#End Region


#Region "Helpers"

'Standard helper functions:
Public Const HIGH_SURROGATE_START  = &Hd800
Public Const HIGH_SURROGATE_END  = &Hdbff
Public Const LOW_SURROGATE_START  = &Hdc00
Public Const LOW_SURROGATE_END  = &Hdfff

Public Function min(ByVal x As Long, ByVal y As Long) As Long: Return If(x < y, x, y): End Function
Public Function max(ByVal x As Long, ByVal y As Long) As Long: Return If(x > y, x, y): End Function
[IgnoreWarnings(TB0018)]
Public Function PALETTERGB(ByVal r As Long, ByVal g As Long, ByVal b As Long) As Long
	Return ((&H02000000) Or RGB(r, g, b))
End Function
Public Function PALETTEINDEX(ByVal i As Long) As Long
	Return ((&H01000000) Or i)
End Function
Public Function GetRValue(ByVal rgb As Long) As Long: Return RGB_R(rgb): End Function
Public Function GetGValue(ByVal rgb As Long) As Long: Return RGB_G(rgb): End Function
Public Function GetBValue(ByVal rgb As Long) As Long: Return RGB_B(rgb): End Function

Public Function EIRESID(ByVal x As Long) As Long: Return (-1 * x): End Function
    
    
Public Const PROP_CONTRACT_DELEGATE = """ContractDelegate"""
Public Sub SetContractDelegateWindow(ByVal hwndSource As LongPtr, Optional ByVal hwndDelegate As LongPtr = 0)
    If hwndDelegate Then
        SetPropW(hwndSource, StrPtr(PROP_CONTRACT_DELEGATE), hwndDelegate)
    Else
        RemovePropW(hwndSource, StrPtr(PROP_CONTRACT_DELEGATE))
    End If
End Sub

Public Function HasOverlappedIoCompleted(lpOverlapped As OVERLAPPED) As Boolean
    Return lpOverlapped.Internal <> STATUS_PENDING
End Function
    

Public Function CREDUIP_IS_USER_PASSWORD_ERROR(_Status As Long) As Boolean
        Return _
        ((_Status) = STATUS_SMB_GUEST_LOGON_BLOCKED) Or _
        ((_Status) = HRESULT_FROM_NT(STATUS_SMB_GUEST_LOGON_BLOCKED)) Or _
        ((_Status) = ERROR_SMB_GUEST_LOGON_BLOCKED) Or _
        ((_Status) = __HRESULT_FROM_WIN32(ERROR_SMB_GUEST_LOGON_BLOCKED)) Or _
        ((_Status) = ERROR_LOGON_FAILURE) Or _
        ((_Status) = __HRESULT_FROM_WIN32(ERROR_LOGON_FAILURE)) Or _
        ((_Status) = STATUS_LOGON_FAILURE) Or _
        ((_Status) = HRESULT_FROM_NT(STATUS_LOGON_FAILURE)) Or _
        ((_Status) = ERROR_ACCESS_DENIED) Or _
        ((_Status) = __HRESULT_FROM_WIN32(ERROR_ACCESS_DENIED)) Or _
        ((_Status) = STATUS_ACCESS_DENIED) Or _
        ((_Status) = HRESULT_FROM_NT(STATUS_ACCESS_DENIED)) Or _
        ((_Status) = ERROR_INVALID_PASSWORD) Or _
        ((_Status) = __HRESULT_FROM_WIN32(ERROR_INVALID_PASSWORD)) Or _
        ((_Status) = STATUS_WRONG_PASSWORD) Or _
        ((_Status) = HRESULT_FROM_NT(STATUS_WRONG_PASSWORD)) Or _
        ((_Status) = STATUS_NO_SUCH_USER) Or _
        ((_Status) = HRESULT_FROM_NT(STATUS_NO_SUCH_USER)) Or _
        ((_Status) = ERROR_NO_SUCH_USER) Or _
        ((_Status) = __HRESULT_FROM_WIN32(ERROR_NO_SUCH_USER)) Or _
        ((_Status) = ERROR_NO_SUCH_LOGON_SESSION) Or _
        ((_Status) = __HRESULT_FROM_WIN32(ERROR_NO_SUCH_LOGON_SESSION)) Or _
        ((_Status) = STATUS_NO_SUCH_LOGON_SESSION) Or _
        ((_Status) = HRESULT_FROM_NT(STATUS_NO_SUCH_LOGON_SESSION)) Or _
        ((_Status) = SEC_E_NO_CREDENTIALS) Or _
        ((_Status) = SEC_E_LOGON_DENIED) Or _
        ((_Status) = SEC_E_NO_CONTEXT) Or _
        ((_Status) = STATUS_NO_SECURITY_CONTEXT)
End Function
Public Function CREDUIP_IS_DOWNGRADE_ERROR(ByVal _Status As Long) As Boolean
	Return _
    ((_Status) = ERROR_DOWNGRADE_DETECTED) Or _
    ((_Status) = __HRESULT_FROM_WIN32(ERROR_DOWNGRADE_DETECTED)) Or _
    ((_Status) = STATUS_DOWNGRADE_DETECTED) Or _
    ((_Status) = HRESULT_FROM_NT(STATUS_DOWNGRADE_DETECTED)) Or _
    ((_Status) = SEC_E_DOWNGRADE_DETECTED)
End Function
Public Function CREDUIP_IS_EXPIRED_ERROR(ByVal _Status As Long) As Boolean
	Return _
    ((_Status) = ERROR_PASSWORD_EXPIRED) Or _
    ((_Status) = __HRESULT_FROM_WIN32(ERROR_PASSWORD_EXPIRED)) Or _
    ((_Status) = STATUS_PASSWORD_EXPIRED) Or _
    ((_Status) = HRESULT_FROM_NT(STATUS_PASSWORD_EXPIRED)) Or _
    ((_Status) = ERROR_PASSWORD_MUST_CHANGE) Or _
    ((_Status) = __HRESULT_FROM_WIN32(ERROR_PASSWORD_MUST_CHANGE)) Or _
    ((_Status) = STATUS_PASSWORD_MUST_CHANGE) Or _
    ((_Status) = HRESULT_FROM_NT(STATUS_PASSWORD_MUST_CHANGE)) Or _
    ((_Status) = NERR_PasswordExpired) Or _
    ((_Status) = __HRESULT_FROM_WIN32(NERR_PasswordExpired))
End Function
Public Function CREDUI_IS_AUTHENTICATION_ERROR(ByVal _Status As Long) As Boolean
	Return _
    CREDUIP_IS_USER_PASSWORD_ERROR(_Status) Or _
    CREDUIP_IS_DOWNGRADE_ERROR(_Status) Or _
    CREDUIP_IS_EXPIRED_ERROR(_Status)
End Function
Public Function CREDUI_NO_PROMPT_AUTHENTICATION_ERROR(ByVal _Status As Long) As Boolean
    Return _	
    ((_Status) = ERROR_AUTHENTICATION_FIREWALL_FAILED) Or _
    ((_Status) = __HRESULT_FROM_WIN32(ERROR_AUTHENTICATION_FIREWALL_FAILED)) Or _
    ((_Status) = STATUS_AUTHENTICATION_FIREWALL_FAILED) Or _
    ((_Status) = HRESULT_FROM_NT(STATUS_AUTHENTICATION_FIREWALL_FAILED)) Or _
    ((_Status) = ERROR_ACCOUNT_DISABLED) Or _
    ((_Status) = __HRESULT_FROM_WIN32(ERROR_ACCOUNT_DISABLED)) Or _
    ((_Status) = STATUS_ACCOUNT_DISABLED) Or _
    ((_Status) = HRESULT_FROM_NT(STATUS_ACCOUNT_DISABLED)) Or _
    ((_Status) = ERROR_ACCOUNT_RESTRICTION) Or _
    ((_Status) = __HRESULT_FROM_WIN32(ERROR_ACCOUNT_RESTRICTION)) Or _
    ((_Status) = STATUS_ACCOUNT_RESTRICTION) Or _
    ((_Status) = HRESULT_FROM_NT(STATUS_ACCOUNT_RESTRICTION)) Or _
    ((_Status) = ERROR_ACCOUNT_LOCKED_OUT) Or _
    ((_Status) = __HRESULT_FROM_WIN32(ERROR_ACCOUNT_LOCKED_OUT)) Or _
    ((_Status) = STATUS_ACCOUNT_LOCKED_OUT) Or _
    ((_Status) = HRESULT_FROM_NT(STATUS_ACCOUNT_LOCKED_OUT)) Or _
    ((_Status) = ERROR_ACCOUNT_EXPIRED) Or _
    ((_Status) = __HRESULT_FROM_WIN32(ERROR_ACCOUNT_EXPIRED)) Or _
    ((_Status) = STATUS_ACCOUNT_EXPIRED) Or _
    ((_Status) = HRESULT_FROM_NT(STATUS_ACCOUNT_EXPIRED)) Or _
    ((_Status) = ERROR_LOGON_TYPE_NOT_GRANTED) Or _
    ((_Status) = __HRESULT_FROM_WIN32(ERROR_LOGON_TYPE_NOT_GRANTED)) Or _
    ((_Status) = STATUS_LOGON_TYPE_NOT_GRANTED) Or _
    ((_Status) = HRESULT_FROM_NT(STATUS_LOGON_TYPE_NOT_GRANTED))
End Function

Public Sub CredAppendLogonTypeToFlags(Flags As Long, LogonType As Long)
Flags = Flags Or (LogonType << 12)
End Sub
Public Function CredGetLogonTypeFromFlags(ByVal Flags As Long) As Long
 Return (Flags And CRED_LOGON_TYPES_MASK) >> 12
End Function
Public Function CredRemoveLogonTypeFromFlags(ByVal Flags As Long) As Long
	Return (Flags And Not CRED_LOGON_TYPES_MASK)
End Function

[IgnoreWarnings(TB0025)]
Public Sub FreeIDListArray(ppidls() As LongPtr, cItems As Long)
    Dim i As Long
    For i = 0 To UBound(ppidls)
        CoTaskMemFree ppidls(i)
    Next i
End Sub
[IgnoreWarnings(TB0025)]
Public Sub FreeIDListArrayFull(ppidls() As LongPtr, cItems As Long)
    Dim i As Long
    For i = 0 To UBound(ppidls)
        CoTaskMemFree ppidls(i)
    Next i
End Sub
[IgnoreWarnings(TB0025)]
Public Sub FreeIDListArrayChild(ppidls() As LongPtr, cItems As Long)
    Dim i As Long
    For i = 0 To UBound(ppidls)
        CoTaskMemFree ppidls(i)
    Next i
End Sub
Public Function SHCreateLibrary(riid As UUID, ppv As IUnknown) As Long
    Return CoCreateInstance(CLSID_ShellLibrary, Nothing, CLSCTX_INPROC_SERVER, riid, ppv)
End Function
Public Function SHLoadLibraryFromItem(ByVal psiLibrary As IShellItem, ByVal grfMode As STGM, riid As UUID, ppv As IUnknown) As Long
	Set ppv = Nothing
    Dim plib As IShellLibrary
    Set plib = New ShellLibrary
    If plib IsNot Nothing Then
        On Error Resume Next
        plib.LoadLibraryFromItem(psiLibrary, grfMode)
        On Error GoTo 0
        If Err.LastHresult = S_OK Then
        	Dim pUnk As IUnknownUnrestricted
            Set pUnk = plib
            On Error Resume Next
            Dim hr As Long = pUnk.QueryInterface(riid, ppv)
            On Error GoTo 0
            Return hr
        End If
    End If
    Return Err.LastHresult
End Function
Public Function SHLoadLibraryFromKnownFolder(kfidLibrary As UUID, ByVal grfMode As STGM, riid As UUID, ppv As IUnknown) As Long
    Set ppv = Nothing
    Dim plib As IShellLibrary
    Set plib = New ShellLibrary
    Dim hr As Long
    If plib IsNot Nothing Then
        On Error Resume Next
        plib.LoadLibraryFromKnownFolder(kfidLibrary, grfMode)
        hr = Err.LastHresult
        If hr = S_OK Then
            Dim pUnk As IUnknownUnrestricted
            Set pUnk = plib
            hr = pUnk.QueryInterface(riid, ppv)
        End If
        On Error GoTo 0
    End If
    Return hr
End Function

Public Function SHLoadLibraryFromParsingName(ByVal pszParsingName As String, ByVal grfMode As STGM, riid As UUID, ppv As IUnknown) As Long
    Set ppv = Nothing
    Dim psiLibrary As IShellItem
    Dim s As String = "abddef"
    Debug.Print IsValidLocaleName(StrPtr(s))
    Dim hr As Long = SHCreateItemFromParsingName(StrPtr(pszParsingName), Nothing, IID_IShellItem, psiLibrary)
    If SUCCEEDED(hr) Then
        hr = SHLoadLibraryFromItem(psiLibrary, grfMode, riid, ppv)
        Set psiLibrary = Nothing
    End If
    Return hr
End Function
Public Function SHAddFolderPathToLibrary(ByVal plib As IShellLibrary, ByVal pszFolderPath As String) As Long
	Dim psiFolder As IShellItem
    Dim hr As Long = SHCreateItemFromParsingName(StrPtr(pszFolderPath), Nothing, IID_IShellItem, psiFolder)
    If SUCCEEDED(hr) Then
        On Error Resume Next
        plib.AddFolder psiFolder
        hr = Err.LastHresult
         On Error GoTo 0
   End If
    Return hr
End Function
Public Function SHRemoveFolderPathFromLibrary(ByVal plib As IShellLibrary, ByVal pszFolderPath As String) As Long
	Dim pidlFolder As LongPtr = SHSimpleIDListFromPath(pszFolderPath)
    Dim hr As Long = CLng(IIf(pidlFolder, S_OK, E_INVALIDARG))
    If SUCCEEDED(hr) Then
    	Dim psiFolder As IShellItem
        hr = SHCreateItemFromIDList(pidlFolder, IID_IShellItem, psiFolder)
        If SUCCEEDED(hr) Then
            On Error Resume Next
            plib.RemoveFolder(psiFolder)
            hr = Err.LastHresult
            On Error GoTo 0
        End If
    End If
    Return hr
End Function
Public Function SHSaveLibraryInFolderPath(ByVal plib As IShellLibrary, ByVal pszFolderPath As String, ByVal pszLibraryName As String, ByVal lsf As LIBRARYSAVEFLAGS, ppszSavedToPath As LongPtr) As Long
    ppszSavedToPath = 0
    Dim psiFolder As IShellItem
    Dim hr As Long = SHCreateItemFromParsingName(StrPtr(pszFolderPath), Nothing, IID_IShellItem, psiFolder)
    If SUCCEEDED(hr) Then
        Dim psiSavedTo As IShellItem
        On Error Resume Next
        hr = plib.Save(psiFolder, StrPtr(pszLibraryName), lsf, psiSavedTo)
        If SUCCEEDED(hr) Then
            hr = psiSavedTo.GetDisplayName(SIGDN_DESKTOPABSOLUTEPARSING, ppszSavedToPath)
        End If
        On Error GoTo 0
    End If
    Return hr
End Function

Public Function KERB_IS_MS_PRINCIPAL(ByVal x As Long) As Boolean: Return ((x <= KRB_NT_MS_PRINCIPAL) Or (x >= KRB_NT_ENTERPRISE_PRINCIPAL)): End Function

Public Function WHashValOfLHashVal(ByVal lhashval As Long) As Integer
	Return CUIntToInt(&H0000FFFF& And lhashval)
End Function
Public Function IsHashValCompatible(ByVal lhashval1 As Long, ByVal lhashval2 As Long) As Boolean
	Return ((&H00ff0000 And (lhashval1)) = (&H00ff0000 And (lhashval2)))
End Function
Public Function V_ISBYREF(x As Variant) As Boolean
	If (VarTypeEx(x) And VT_BYREF) Then Return True
End Function
Public Function V_ISARRAY(x As Variant) As Boolean
    If (VarTypeEx(x) And VT_ARRAY) Then Return True
End Function
Public Function V_ISVECTOR(x As Variant) As Boolean
    If (VarTypeEx(x) And VT_VECTOR) Then Return True
End Function


Public Function IsPenEvent(ByVal dw As LongPtr) As Boolean
	Return (((dw) And SIGNATURE_MASK) = MI_WP_SIGNATURE)
End Function


' #define TOUCH_COORD_TO_PIXEL(l)         ((l) / 100)

Public Function TOUCH_COORD_TO_PIXEL(ByVal l As Long) As Long
    Return l \ 100
End Function
' #define GID_ROTATE_ANGLE_TO_ARGUMENT(_arg_)     ((USHORT)((((_arg_) + 2.0 * 3.14159265) / (4.0 * 3.14159265)) * 65535.0))
Public Function GID_ROTATE_ANGLE_TO_ARGUMENT(ByVal arg As Double) As Integer
    Return CUIntToInt(CLng(((((arg) + 2.0 * 3.14159265) / (4.0 * 3.14159265)) * 65535.0)))
End Function
' #define GID_ROTATE_ANGLE_FROM_ARGUMENT(_arg_)   ((((double)(_arg_) / 65535.0) * 4.0 * 3.14159265) - 2.0 * 3.14159265)
Public Function GID_ROTATE_ANGLE_FROM_ARGUMENT(ByVal arg As Integer) As Double
	Return ((((arg) / 65535.0) * 4.0 * 3.14159265) - 2.0 * 3.14159265)
End Function

Public Function IS_HIGH_SURROGATE(ByVal wch As Integer) As Boolean
	Return (((wch) >= HIGH_SURROGATE_START) And ((wch) <= HIGH_SURROGATE_END))
End Function
Public Function IS_LOW_SURROGATE(ByVal wch As Integer) As Boolean
    Return (((wch) >= LOW_SURROGATE_START) And ((wch) <= LOW_SURROGATE_END))
End Function
Public Function IS_SURROGATE_PAIR(ByVal hs As Integer, ByVal ls As Integer) As Boolean
    Return (IS_HIGH_SURROGATE(hs) And IS_LOW_SURROGATE(ls))
End Function

Public Function ICMP6_ISTYPEINFORMATIONAL(ByVal Type As Long) As Long
    Return (((Type) And ICMP6_INFOMSG_MASK) <> 0)
End Function
Public Function ICMP6_ISTYPEERROR(ByVal Type As Long) As Long
	Return (Not ICMP6_ISTYPEINFORMATIONAL(Type))
End Function
Public Function ICMP4_ISTYPEERROR(ByVal Type As ICMP4_TYPE) As Long
	Return ((Type = ICMP4_DST_UNREACH) Or (Type = ICMP4_SOURCE_QUENCH) Or (Type = ICMP4_REDIRECT) Or (Type = ICMP4_PARAM_PROB) Or (Type = ICMP4_TIME_EXCEEDED))
End Function

Public Enum CtlBufferPassMethod
	METHOD_BUFFERED = 0
	METHOD_IN_DIRECT = 1
	METHOD_OUT_DIRECT = 2
	METHOD_NEITHER = 3
    METHOD_DIRECT_TO_HARDWARE = METHOD_IN_DIRECT
    METHOD_DIRECT_FROM_HARDWARE = METHOD_OUT_DIRECT
End Enum
Public Enum DEVICE_FILE_ACCESS
    FILE_ANY_ACCESS = 0
    FILE_SPECIAL_ACCESS = (FILE_ANY_ACCESS)
    FILE_READ_ACCESS = (&H0001)  ' file & pipe
    FILE_WRITE_ACCESS = (&H0002)  ' file & pipe
End Enum

'Not needed in tB, but for compatbility with converted projects.
Public Function FARPROC(ByVal pfn As LongPtr) As LongPtr
    Return pfn
End Function

[Description("Indicates whether an NTSTATUS value represents a successful operation (>= 0)")]
Public Function NT_SUCCESS(ByVal Status As Long) As Boolean
    Return Status >= STATUS_SUCCESS
End Function

Public Function MAKEINTRESOURCEA(ByVal dwVal As Long) As LongPtr
   Return &HFFFF& And dwVal
End Function
Public Function MAKEINTRESOURCEW(ByVal dwVal As Long) As LongPtr
   Return &HFFFF& And dwVal
End Function
Public Function MAKEINTRESOURCE(ByVal dwVal As Long) As LongPtr
   Return &HFFFF& And dwVal
End Function
Public Function IS_INTRESOURCE(ByVal r As LongPtr) As Boolean
	Return ((r >> 16) = 0)
End Function

Public Sub POINTSTOPOINT(pt As POINT, pts As POINTS)
	pt.x = pts.x: pt.y = pts.y
End Sub
Public Function POINTTOPOINTS(pt As POINT) As Long
		Return MAKELONG(CInt(pt.x), CInt(pt.y))
End Function

Public Function MAKEWPARAM(wLow As Long, wHigh As Long) As LongPtr
    Return MAKELONG(wLow, wHigh)
End Function
Public Function MAKELRESULT(wLow As Long, wHigh As Long) As LongPtr
    Return MAKELONG(wLow, wHigh)
End Function
Public Function MAKELPARAM(wLow As Long, wHigh As Long) As LongPtr
    Return MAKELONG(wLow, wHigh)
End Function
Public Function MAKELONG(wLow As Long, wHigh As Long) As Long
    Return LOWORD(wLow) Or (&H10000 * LOWORD(wHigh))
End Function
Public Function MAKEDWORD(ByVal LoWord As Integer, ByVal HiWord As Integer) As Long
    Return (CLng(HiWord) * &H10000) Or (LoWord And &HFFFF&)
End Function
[Description("Converted a state image index to a mask suitable to use as an item state for Common Controls.")]
Public Function INDEXTOSTATEIMAGEMASK(ByVal Index As Long) As Long
#If TWINBASIC Then
Return (Index << 12)
#Else
INDEXTOSTATEIMAGEMASK = Index * (2 ^ 12)    
#End If
End Function
[Description("Extracts the state image index from a full item state variable.")]
Public Function STATEIMAGEMASKTOINDEX(ByVal ImgState As Long) As Long
#If TWINBASIC Then
Return (ImgState >> 12)
#Else
STATEIMAGEMASKTOINDEX = ImgState / (2 ^ 12)    
#End If
End Function
[Description("Converted an overlay image index to a mask suitable to use as an item state for Common Controls.")]
Public Function INDEXTOOVERLAYMASK(ByVal Index As Long) As Long
	#If TWINBASIC Then
    Return (Index << 8)
    #Else
    INDEXTOOVERLAYMASK = Index * (2 ^ 8) 
	#End If
End Function
[Description("Extracts the overlay image index from a full item state variable.")]
Public Function OVERLAYMASKTOINDEX(ByVal Index As Long) As Long
    #If TWINBASIC Then
    Return (Index >> 8)
    #Else
    INDEXTOOVERLAYMASK = Index / (2 ^ 8) 
    #End If
End Function

[Description("Returns the lower two bytes of a Long variable.")]
[IgnoreWarnings(TB0018)]
Public Function LOWORD(ByVal Value As Long) As Integer
If Value And &H8000& Then
    Return Value Or &HFFFF0000
Else
    Return Value And &HFFFF&
End If
End Function
' [Description("Returns the lower two bytes of a LongLong variable.")]
' Public Function LOWORD(ByVal Value As LongLong) As Integer
' Dim DWord As Long = CULngToLng(Value)
' If DWord And &H8000& Then
'     Return DWord Or &HFFFF0000
' Else
'     Return DWord And &HFFFF&
' End If
' End Function
[Description("Returns the higher two bytes of a Long variable.")]
[IgnoreWarnings(TB0018)]
Public Function HIWORD(ByVal Value As Long) As Integer
Return (Value And &HFFFF0000) \ &H10000
End Function
' [Description("Returns the higher two bytes of a the lower Long of a LongLong variable.")]
' Public Function HIWORD(ByVal Value As LongLong) As Integer
' Dim DWord As Long = CULngToLng(Value)
' Return (DWord And &HFFFF0000) \ &H10000
' End Function
[Description("Returns the lower byte of an Integer variable.")]
[IgnoreWarnings(TB0018)]
Public Function LOBYTE(ByVal Word As Integer) As Byte
    Return Word And &HFF
End Function
[Description("Returns the higher byte of an Integer variable.")]
[IgnoreWarnings(TB0018)]
Public Function HIBYTE(ByVal Word As Integer) As Byte
    Return (Word And &HFF00&) \ &H100
End Function
[IgnoreWarnings(TB0018)]
Public Function MAKEWORD(ByVal LoByte As Byte, ByVal HiByte As Byte) As Integer
If (HiByte And &H80) <> 0 Then
    Return ((HiByte * &H100&) Or LoByte) Or &HFFFF0000
Else
    Return (HiByte * &H100) Or LoByte
End If
End Function
Public Function ISLBUTTON(ByVal x As Long) As Boolean
    Return (NSTCECT_LBUTTON = ((x) And NSTCECT_BUTTON))
End Function
Public Function ISMBUTTON(ByVal x As Long) As Boolean
    Return (NSTCECT_MBUTTON = ((x) And NSTCECT_BUTTON))
End Function
Public Function ISRBUTTON(ByVal x As Long) As Boolean
    Return (NSTCECT_RBUTTON = ((x) And NSTCECT_BUTTON))
End Function
Public Function ISDBLCLICK(ByVal x As Long) As Boolean
    Return (NSTCECT_DBLCLICK = ((x) And NSTCECT_DBLCLICK))
End Function

Public Function GET_APPCOMMAND_LPARAM(ByVal lParam As LongPtr) As Integer
	Return CInt(HIWORD(CLng(lParam))) And Not FAPPCOMMAND_MASK
End Function
Public Function GET_DEVICE_LPARAM(ByVal lParam As LongPtr) As Integer
    Return CUIntToInt(HIWORD(CLng(lParam))) And FAPPCOMMAND_MASK
End Function
Public Function GET_MOUSEORKEY_LPARAM(ByVal lParam As LongPtr) As Integer
    Return CUIntToInt(HIWORD(CLng(lParam))) And FAPPCOMMAND_MASK
End Function

Public Function GET_FLAGS_LPARAM(ByVal lParam As LongPtr) As Integer
	Return LOWORD(CLng(lParam))
End Function

Public Function GET_KEYSTATE_WPARAM(ByVal wParam As LongPtr) As Integer
	Return LOWORD(CLng(wParam))
End Function
Public Function GET_KEYSTATE_LPARAM(ByVal lParam As LongPtr) As Integer
	Return GET_FLAGS_LPARAM(lParam)
End Function

[ConstantFoldable]
Public Function MAKE_HRESULT(sev As Long, fac As HRESULT_Facility, code As Long) As Long
    Return (sev << 31) Or (fac << 16) Or code
End Function
[ConstantFoldable]
Public Function MAKE_SCODE(sev As Long, fac As HRESULT_Facility, code As Long) As Long
    Return (sev << 31) Or (fac << 16) Or code
End Function
Public Function HRESULT_SEVERITY(ByVal hr As Long) As Long
	Return (((hr) << 31) And 1)
End Function
Public Function SCODE_SEVERITY(ByVal sc As Long) As Long
    Return (((sc) << 31) And 1)
End Function

[ConstantFoldable]
Public Function HRESULT_FROM_NT(ByVal x As Long) As Long
	Return (x Or FACILITY_NT_BIT)
End Function

[ConstantFoldable]
Public Function HRESULT_FROM_WIN32(x As Long) As Long
 '__HRESULT_FROM_WIN32(x) ((HRESULT)(x) <= 0 ? ((HRESULT)(x)) : ((HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000)))
    Return CLng(IIf(x <= 0, x, (((x) And &H0000FFFF&) Or (FACILITY_WIN32 << 16) Or &H80000000)))
End Function
[ConstantFoldable]
Public Function __HRESULT_FROM_WIN32(x As Long) As Long
 '__HRESULT_FROM_WIN32(x) ((HRESULT)(x) <= 0 ? ((HRESULT)(x)) : ((HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000)))
    Return CLng(IIf(x <= 0, x, (((x) And &H0000FFFF&) Or (FACILITY_WIN32 << 16) Or &H80000000)))
End Function

Public Function GET_WHEEL_DELTA_WPARAM(ByVal wParam As LongPtr) As Integer
    Return HIWORD(CLng(wParam))
End Function

Public Function GET_NCHITTEST_WPARAM(ByVal wParam As LongPtr) As Integer
    Return LOWORD(CLng(wParam))
End Function
Public Function GET_XBUTTON_WPARAM(ByVal wParam As LongPtr) As Integer
    Return HIWORD(CLng(wParam))
End Function

Public Function Get_X_lParam(ByVal lParam As LongPtr) As Long
Get_X_lParam = CLng(lParam) And &H7FFF&
If CLng(lParam) And &H8000& Then Get_X_lParam = Get_X_lParam Or &HFFFF8000
End Function

Public Function Get_Y_lParam(ByVal lParam As LongPtr) As Long
Get_Y_lParam = (CLng(lParam) And &H7FFF0000) \ &H10000
If CLng(lParam) And &H80000000 Then Get_Y_lParam = Get_Y_lParam Or &HFFFF8000
End Function

Public Function Make_XY_lParam(ByVal X As Long, ByVal Y As Long) As LongPtr
Make_XY_lParam = (CLng(LOWORD(Y)) * &H10000) Or (LOWORD(X) And &HFFFF&)
End Function

Public Function GET_SC_WPARAM(ByVal wParam As LongPtr) As Long
    Return (CLng(wParam) And &HFFF0&)
End Function
    
[IgnoreWarnings(TB0025)]
Public Function GET_WM_COMMAND_ID(ByVal wp As LongPtr, ByVal lp As LongPtr) As Long
    Return LOWORD(CLng(wp))
End Function
[IgnoreWarnings(TB0025)]
Public Function GET_WM_COMMAND_CMD(ByVal wp As LongPtr, ByVal lp As LongPtr) As Long
    Return HIWORD(CLng(wp))
End Function

Public Function GET_RAWINPUT_CODE_WPARAM(ByVal wParam As LongPtr) As Long
	Return CLng(wParam And &HFF)
End Function
[IgnoreWarnings(TB0018)]
Public Function MAKEIPRANGE(ByVal Low As Byte, ByVal High As Byte) As Integer
If (High And &H80) <> 0 Then
    Return ((High * &H100&) Or Low) Or &HFFFF0000
Else
    Return (High * &H100) Or Low
End If
End Function

[Description("Creates a Long representing an IPv4 address from 4 subfields.")]
Public Function MAKEIPADDRESS(ByVal b1 As Long, ByVal b2 As Long, ByVal b3 As Long, ByVal b4 As Long) As Long
    Return ((b1 << 24) + (b2 << 16) + (b3 << 8) + b4)
End Function

/*
#define MAKEFOURCC(ch0, ch1, ch2, ch3)                              \
((DWORD)(BYTE)(ch0) | ((DWORD)(BYTE)(ch1) << 8) |   \
((DWORD)(BYTE)(ch2) << 16) | ((DWORD)(BYTE)(ch3) << 24 ))
*/
[ConstantFoldable]
Public Function MAKEFOURCC(ByVal ch0 As Long, ByVal ch1 As Long, ByVal ch2 As Long, ByVal ch3 As Long) As Long
	Return ((ch0) Or ((ch1) << 8) Or ((ch2) << 16) Or ((ch3) << 24))
End Function

Public Function MAKEROP4(fore As Long, back As Long) As Long
	Return ((((back) << 8) And &HFF000000) Or (fore))
End Function

Public Function HandleToULong(ByVal h As LongPtr) As Long
    #If Win64 Then
        CopyMemory HandleToULong, h, 4
    #Else
        Return h
    #End If
End Function

[Description("Implementation of AtlPixelToHiMetric")]
Public Sub AtlPixelToHiMetric(lpSizeInPix As SIZE, lpSizeInHiMetric As SIZE, Optional hwndForDC As LongPtr = 0)
    Dim nPixelsPerInchX As Long
    Dim nPixelsPerInchY As Long

    Dim hDC As LongPtr = GetDC(hwndForDC)
    nPixelsPerInchX = GetDeviceCaps(hDC, LOGPIXELSX)
    nPixelsPerInchY = GetDeviceCaps(hDC, LOGPIXELSY)
    ReleaseDC(hwndForDC, hDC)
    lpSizeInHiMetric.cx = MAP_PIX_TO_LOGHIM(lpSizeInPix.cx, nPixelsPerInchX)
    lpSizeInHiMetric.cy = MAP_PIX_TO_LOGHIM(lpSizeInPix.cy, nPixelsPerInchY)
End Sub
[Description("Implementation of AtlHiMetricToPixel")]
Public Sub AtlHiMetricToPixel(lpSizeInHiMetric As SIZE, lpSizeInPix As SIZE, Optional hwndForDC As LongPtr = 0)
    Dim nPixelsPerInchX As Long
    Dim nPixelsPerInchY As Long

    Dim hDC As LongPtr = GetDC(hwndForDC)
    nPixelsPerInchX = GetDeviceCaps(hDC, LOGPIXELSX)
    nPixelsPerInchY = GetDeviceCaps(hDC, LOGPIXELSY)
    ReleaseDC(hwndForDC, hDC)
    lpSizeInPix.cx = MAP_LOGHIM_TO_PIX(lpSizeInHiMetric.cx, nPixelsPerInchX)
    lpSizeInPix.cy = MAP_LOGHIM_TO_PIX(lpSizeInHiMetric.cy, nPixelsPerInchY)
End Sub
Private Function MAP_PIX_TO_LOGHIM(x As Long, ppli As Long) As Long
    Return MulDiv(HIMETRIC_PER_INCH, x, ppli)
End Function
Private Function MAP_LOGHIM_TO_PIX(x As Long, ppli As Long) As Long
    Return MulDiv(ppli, x, HIMETRIC_PER_INCH)
End Function

'CUSTOM:
[Description("Implementation of AtlPixelToHiMetric")]
Public Sub PixelToHiMetric(lpSizeInPix As SIZE, lpSizeInHiMetric As SIZE, Optional hwndForDC As LongPtr = 0)
    Dim nPixelsPerInchX As Long
    Dim nPixelsPerInchY As Long

    Dim hDC As LongPtr = GetDC(hwndForDC)
    nPixelsPerInchX = GetDeviceCaps(hDC, LOGPIXELSX)
    nPixelsPerInchY = GetDeviceCaps(hDC, LOGPIXELSY)
    ReleaseDC(hwndForDC, hDC)
    lpSizeInHiMetric.cx = MAP_PIX_TO_LOGHIM(lpSizeInPix.cx, nPixelsPerInchX)
    lpSizeInHiMetric.cy = MAP_PIX_TO_LOGHIM(lpSizeInPix.cy, nPixelsPerInchY)
End Sub
[Description("Implementation of AtlHiMetricToPixel")]
Public Sub HiMetricToPixel(lpSizeInHiMetric As SIZE, lpSizeInPix As SIZE, Optional hwndForDC As LongPtr = 0)
    Dim nPixelsPerInchX As Long
    Dim nPixelsPerInchY As Long

    Dim hDC As LongPtr = GetDC(hwndForDC)
    nPixelsPerInchX = GetDeviceCaps(hDC, LOGPIXELSX)
    nPixelsPerInchY = GetDeviceCaps(hDC, LOGPIXELSY)
    ReleaseDC(hwndForDC, hDC)
    lpSizeInPix.cx = MAP_LOGHIM_TO_PIX(lpSizeInHiMetric.cx, nPixelsPerInchX)
    lpSizeInPix.cy = MAP_LOGHIM_TO_PIX(lpSizeInHiMetric.cy, nPixelsPerInchY)
End Sub
[Description("Converts a POINT, POINTL, or {x.y} to LongLong for use with methods requiring a ByVal POINT")]
Public Function PointToLongLong(pt As POINT) As LongLong
	Dim ll As LongLong
    CopyMemory ll, pt, 8
    Return ll
End Function
[Description("Converts a POINT, POINTL, POINTS, or {x.y} to LongLong for use with methods requiring a ByVal POINT")]
Public Function PointToLongLong(ByVal ptx As Long, ByVal pty As Long) As LongLong
    Dim pt As POINT
    pt.x = ptx: pt.y = pty
    Dim ll As LongLong
    CopyMemory ll, pt, 8
    Return ll
End Function
[Description("Converts a POINT, POINTL, POINTS, or {x.y} to LongLong for use with methods requiring a ByVal POINT")]
Public Function PointToLongLong(ByVal ptx As Integer, ByVal pty As Integer) As LongLong
    Dim pt As POINT
    pt.x = ptx: pt.y = pty
    Dim ll As LongLong
    CopyMemory ll, pt, 8
    Return ll
End Function
[Description("Converts a POINTF or {x.y} to LongLong for use with methods requiring a ByVal POINT")]
Public Function PointFToLongLong(pt As POINTF) As LongLong
    Dim ll As LongLong
    CopyMemory ll, pt, 8
    Return ll
End Function
[Description("Converts a POINTF or {x.y} to LongLong for use with methods requiring a ByVal POINT")]
Public Function PointFToLongLong(ptx As Single, pty As Single) As LongLong
    Dim pt As POINTF
    pt.x = ptx: pt.y = pty
    Dim ll As LongLong
    CopyMemory ll, pt, 8
    Return ll
End Function
[Description("Converts a POINTS to Long for use with methods requiring a ByVal POINTS")]
Public Function PointSToLong(pt As POINTS) As Long
    Dim ll As Long
    CopyMemory ll, pt, 4
    Return ll
End Function
[Description("Converts a SIZE, or {cx,cy} to LongLong for use with methods requiring a ByVal SIZE")]
Public Function SizeToLongLong(ByVal cx As Long, ByVal cy As Long) As LongLong
    Dim z As SIZE
    z.cx = cx: z.cy = cy
    Dim ll As LongLong
    CopyMemory ll, z, 8
    Return ll
End Function
[Description("Converts a SIZE, or {cx,cy} to LongLong for use with methods requiring a ByVal SIZE")]
Public Function SizeToLongLong(z As SIZE) As LongLong
   Dim ll As LongLong
   CopyMemory ll, z, 8
   Return ll
End Function
[Description("Converts a UUID (GUID) to 4 Longs to prepare for passing it to API/COM methods expecting it ByVal.")]
Public Sub UUIDtoLong(pGuid As UUID, pl1 As Long, pl2 As Long, pl3 As Long, pl4 As Long)
    Dim t(3) As Long
    CopyMemory t(0), pGuid, LenB(Of UUID)
    pl1 = t(0)
    pl2 = t(1)
    pl3 = t(2)
    pl4 = t(3)
End Sub
[Description("Converts a UUID (GUID) to 4 Longs to prepare for passing it to API/COM methods expecting it ByVal.")]
Public Sub UUIDtoLong(pGuid As UUID, pls() As Long)
    ReDim pls(3)
    CopyMemory pls(0), pGuid, LenB(Of UUID)
End Sub

[Description("A 32 and 64bit compatible implementation of the classic helper function.")]
Public Function SwapVtableEntry(pObj As LongPtr, EntryNumber As Integer, ByVal lpFN As LongPtr) As LongPtr

    Dim lOldAddr As LongPtr
    Dim lpVtableHead As LongPtr
    Dim lpfnAddr As LongPtr
    Dim lOldProtect As MemProtectFlags
    

    CopyMemory lpVtableHead, ByVal pObj, LenB(Of LongPtr)
    lpfnAddr = lpVtableHead + (EntryNumber - 1) * LenB(Of LongPtr)
    CopyMemory lOldAddr, ByVal lpfnAddr, LenB(Of LongPtr)

    Call VirtualProtect(lpfnAddr, LenB(Of LongPtr), PAGE_EXECUTE_READWRITE, lOldProtect)
    CopyMemory ByVal lpfnAddr, lpFN, LenB(Of LongPtr)
    Call VirtualProtect(lpfnAddr, LenB(Of LongPtr), lOldProtect, lOldProtect)

    SwapVtableEntry = lOldAddr
    
End Function

[ConstantFoldable]
Public Function UtfToANSI(sIn As String) As String
    Return CStr(StrConv(sIn, vbFromUnicode))
End Function

[ConstantFoldable]
Public Function CTL_CODE(ByVal DeviceType As DEVICE_TYPE, ByVal lFunction As Long, [TypeHint(CtlBufferPassMethod)] ByVal Method As Long, [TypeHint(DEVICE_FILE_ACCESS, FileAccessRights)] ByVal Access As Long) As Long
   CTL_CODE = ((DeviceType) << 16&) Or ((Access) << 14&) Or ((lFunction) << 2) Or (Method)
End Function

[Description("A 32 and 64bit compatible implementation of the classic helper function.")]
Public Function LPWSTRtoStr(lPtr As LongPtr, Optional ByVal fFree As Boolean = True) As String
SysReAllocStringW VarPtr(LPWSTRtoStr), lPtr
If fFree Then
    Call CoTaskMemFree(lPtr)
    lPtr = 0
End If

End Function
[Description("Retrieves a tB-style String from a VT_LPWSTR Variant. Returns False if not VT_LPWSTR or PropVariantToStringAlloc returns a nullptr.")]
Public Function VariantLPWSTRtoSTR(pVar As Variant, pOut As String) As Boolean
    Dim vt As Integer
    If VarPtr(pVar) <> 0 Then
        CopyMemory vt, ByVal VarPtr(pVar), 2
        If (vt = VT_LPWSTR) Then
            Dim lp As LongPtr
            PropVariantToStringAlloc pVar, lp
            If lp Then
                pOut = LPWSTRtoStr(lp, True)
                Return True
            End If
        End If
    End If
End Function

[Description("Returns an HRESULT error description given it's number, e.g. 5 returns Access denied. Leave lpSource off for standard system messages.")]
Public Function GetSystemErrorString(lErrNum As Long, Optional ByVal lpSource As LongPtr = 0) As String
    Dim sError As String, ret As Long
    sError = Space$(MAX_PATH)
    ret = FormatMessage(FORMAT_MESSAGE_FROM_SYSTEM Or FORMAT_MESSAGE_IGNORE_INSERTS, ByVal lpSource, lErrNum, 0&, sError, Len(sError), 0)
    If ret > 0 Then Return Left$(sError, ret)
End Function
[Description("Returns an NTSTATUS error description given it's number, e.g. &HC0000005 returns Access denied.")]
Public Function GetNtErrorString(lErrNum As Long) As String
    Dim sError As String, ret As Long
    Dim lpSource As LongPtr = LoadLibrary("ntdll.dll")
    sError = Space$(MAX_PATH)
    ret = FormatMessage(FORMAT_MESSAGE_FROM_SYSTEM Or FORMAT_MESSAGE_IGNORE_INSERTS Or FORMAT_MESSAGE_FROM_HMODULE, ByVal lpSource, lErrNum, 0&, sError, Len(sError), 0)
    If ret > 0 Then Return Left$(sError, ret)
End Function

[Description("Ensures a block of memory is zeroed where compiler optimizations may prevent that with ZeroMemory")]
Public Sub SecureZeroMemory(ByVal pv As LongPtr, cb As LongPtr)
    If pv = 0 Then Exit Sub
    If cb = 0 Then Exit Sub
	Dim i As LongPtr
    For i = 0 To cb - 1
        CopyMemory ByVal pv + i, 0, 1
    Next
End Sub

[Description("Returns the true VarType without filtering VT_BYREF etc")]
Public Function VarTypeEx(pvar As Variant) As VARENUM
    If VarPtr(pvar) = 0 Then Return 0
    CopyMemory VarTypeEx, ByVal VarPtr(pvar), 2
End Function

[Description("Sets a Variant to the specified type without any alteration to the data. vtOnlyIf raises an error if the original type is other than specified.  " & vbCrLf & "WARNING: Many data formats are incompatible, use VariantChangeType absent specific need....")]
Public Function VariantSetType(pvar As Variant, [TypeHint(VARENUM)] ByVal vt As Integer, [TypeHint(VARENUM)] Optional ByVal vtOnlyIf As Integer = -1) As Boolean
    If VarPtr(pvar) = 0 Then Return False
    If vtOnlyIf <> -1 Then
        If VarTypeEx(pvar) <> vtOnlyIf Then
            Return False
        End If
    End If
    CopyMemory pvar, vt, 2
    Return True
End Function
[Description("Performs an unsigned add on a LongPtr (Long or LongLong)")]
Public Function PointerAdd(ByVal Start As LongPtr, ByVal Incr As LongPtr) As LongPtr
    #If Win64 Then
    Return ((Start Xor &H8000000000000000) + Incr) Xor &H8000000000000000
    #Else
    Return ((Start Xor &H80000000) + Incr) Xor &H80000000
    #End If
End Function
[Description("Performs an unsigned subtraction on a LongPtr (Long or LongLong)")]
Public Function PointerSubtract(ByVal Start As LongPtr, ByVal Incr As LongPtr) As LongPtr
    #If Win64 Then
    Return ((Start Xor &H8000000000000000) - Incr) Xor &H8000000000000000
    #Else
    Return ((Start Xor &H80000000) - Incr) Xor &H80000000
    #End If
End Function

'The following 5 function taken from Krool's excellent VBCCR project and modified to use tB features:
[IgnoreWarnings(TB0018)]
[Description("Created an unsigned Integer from a Long.")]
Public Function CUIntToInt(ByVal Value As Long) As Integer
Const OFFSET_2 As Long = 65536
Const MAXINT_2 As Integer = 32767
If Value < 0 Or Value >= OFFSET_2 Then Err.Raise 6
If Value <= MAXINT_2 Then
    Return Value
Else
    Return Value - OFFSET_2
End If
End Function
[Description("Converts an Integer to a Long as if it were an unsigned Integer.")]
Public Function CIntToUInt(ByVal Value As Integer) As Long
Const OFFSET_2 As Long = 65536
If Value < 0 Then
    Return Value + OFFSET_2
Else
    Return Value
End If
End Function

[Description("Created an unsigned Long from a LongLong.")]
Public Function CULngToLng(ByVal Value As LongLong) As Long
Const OFFSET_4 As LongLong = 4294967296^
Const MAXINT_4 As Long = 2147483647
If Value < 0 Or Value >= OFFSET_4 Then Err.Raise 6
If Value <= MAXINT_4 Then
    Return CLng(Value)
Else
    Return CLng(CLngLng(Value) - OFFSET_4)
End If
End Function
[IgnoreWarnings(TB0018)]
[Description("Created an unsigned Long from a Double.")]
Public Function CULngToLng(ByVal Value As Double) As Long
Const OFFSET_4 As Double = 4294967296#
Const MAXINT_4 As Long = 2147483647
If Value < 0 Or Value >= OFFSET_4 Then Err.Raise 6
If Value <= MAXINT_4 Then
    CULngToLng = Value
Else
    CULngToLng = Value - OFFSET_4
End If
End Function

[Description("Converts a Long to LongLong as if it were an unsigned Long.")]
Public Function CLngToULng(ByVal Value As Long) As LongLong
Const OFFSET_4 As LongLong = 4294967296
If Value < 0 Then
    Return Value + OFFSET_4
Else
    Return Value
End If
End Function
[Description("Converts a Long to Double as if it were an unsigned Long.")]
Public Sub CLngToULng(ByVal Value As Long, pULng As Double)
Const OFFSET_4 As Double = 4294967296#
If Value < 0 Then
    pULng = Value + OFFSET_4
Else
    pULng = Value
End If
End Sub

Public Function UnsignedAdd(ByVal Start As Integer, ByVal Incr As Integer) As Integer
Return ((Start Xor &H8000) + Incr) Xor &H8000
End Function
Public Function UnsignedAdd(ByVal Start As Long, ByVal Incr As Long) As Long
Return ((Start Xor &H80000000) + Incr) Xor &H80000000
End Function
Public Function UnsignedAdd(ByVal Start As LongLong, ByVal Incr As LongLong) As LongLong
Return ((Start Xor &H8000000000000000) + Incr) Xor &H8000000000000000
End Function
#End Region
End Module
#End If