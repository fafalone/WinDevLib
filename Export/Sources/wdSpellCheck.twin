'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'WinDevLib - wdSpellCheck :: Windows Built-in SpellCheck (Windows 8+)

[InterfaceId("B7C82D61-FBE8-4B47-9B27-6C0D2E0DE0A3")]
[OleAutomation(False)]
Interface ISpellingError Extends stdole.IUnknown
    Property Get StartIndex() As Long
    Property Get Length() As Long
    Property Get CorrectiveAction() As CORRECTIVE_ACTION
    Property Get Replacement() As LongPtr
End Interface

[InterfaceId("803E3BD4-2828-4410-8290-418D1D73C762")]
[OleAutomation(False)]
Interface IEnumSpellingError Extends stdole.IUnknown
    Sub Next(value As ISpellingError)
End Interface

[InterfaceId("432E5F85-35CF-4606-A801-6F70277E1D7A")]
[OleAutomation(False)]
Interface IOptionDescription Extends stdole.IUnknown
    Property Get Id() As LongPtr
    Property Get Heading() As LongPtr
    Property Get Description() As LongPtr
    Property Get Labels() As IEnumString
End Interface

[InterfaceId("0B83A5B0-792F-4EAB-9799-ACF52C5ED08A")]
[OleAutomation(False)]
Interface ISpellCheckerChangedEventHandler Extends stdole.IUnknown
    Sub Invoke(ByVal sender As ISpellChecker)
End Interface

[InterfaceId("B6FD0B71-E2BC-4653-8D05-F197E412770B")]
[OleAutomation(False)]
Interface ISpellChecker Extends stdole.IUnknown
    Property Get LanguageTag() As LongPtr
    Function Check(ByVal text As LongPtr) As IEnumSpellingError
    Function Suggest(ByVal word As LongPtr) As IEnumString
    Sub Add(ByVal word As LongPtr)
    Sub Ignore(ByVal word As LongPtr)
    Sub AutoCorrect(ByVal from As LongPtr, ByVal to As LongPtr)
    Function GetOptionValue(ByVal optionId As LongPtr) As Byte
    Property Get OptionIDs() As IEnumString
    Property Get Id() As LongPtr
    Property Get LocalizedName() As LongPtr
    Function add_SpellCheckerChanged(ByVal handler As ISpellCheckerChangedEventHandler) As Long
    Sub remove_SpellCheckerChanged(ByVal eventCookie As Long)
    Function GetOptionDescription(ByVal optionId As LongPtr) As IOptionDescription
    Function ComprehensiveCheck(ByVal text As LongPtr) As IEnumSpellingError
End Interface
[InterfaceId("E7ED1C71-87F7-4378-A840-C9200DACEE47")]
[OleAutomation(False)]
Interface ISpellChecker2 Extends ISpellChecker
    Sub Remove(ByVal word As LongPtr)
End Interface

[InterfaceId("8E018A9D-2415-4677-BF08-794EA61F94BB")]
[OleAutomation(False)]
Interface ISpellCheckerFactory Extends stdole.IUnknown
    Property Get SupportedLanguages() As IEnumString
    Function IsSupported(ByVal languageTag As LongPtr) As Long
    Function CreateSpellChecker(ByVal languageTag As LongPtr) As ISpellChecker
End Interface

[InterfaceId("AA176B85-0E12-4844-8E1A-EEF1DA77F586")]
[OleAutomation(False)]
Interface IUserDictionariesRegistrar Extends stdole.IUnknown
    Sub RegisterUserDictionary(ByVal dictionaryPath As LongPtr, ByVal languageTag As LongPtr)
    Sub UnregisterUserDictionary(ByVal dictionaryPath As LongPtr, ByVal languageTag As LongPtr)
End Interface

[InterfaceId("73E976E0-8ED4-4EB1-80D7-1BE0A16B0C38")]
[OleAutomation(False)]
Interface ISpellCheckProvider Extends stdole.IUnknown
    Property Get LanguageTag() As LongPtr
    Function Check(ByVal text As LongPtr) As IEnumSpellingError
    Function Suggest(ByVal word As LongPtr) As IEnumString
    Function GetOptionValue(ByVal optionId As LongPtr) As Byte
    Sub SetOptionValue(ByVal optionId As LongPtr, ByVal value As Byte)
    Property Get OptionIDs() As IEnumString
    Property Get Id() As LongPtr
    Property Get LocalizedName() As LongPtr
    Function GetOptionDescription(ByVal optionId As LongPtr) As IOptionDescription
    Sub InitializeWordlist(ByVal wordlistType As WORDLIST_TYPE, ByVal words As IEnumString)
End Interface

[InterfaceId("0C58F8DE-8E94-479E-9717-70C42C4AD2C3")]
[OleAutomation(False)]
Interface IComprehensiveSpellCheckProvider Extends stdole.IUnknown
    Function ComprehensiveCheck(ByVal text As LongPtr) As IEnumSpellingError
End Interface

[InterfaceId("9F671E11-77D6-4C92-AEFB-615215E3A4BE")]
[OleAutomation(False)]
Interface ISpellCheckProviderFactory Extends stdole.IUnknown
    Property Get SupportedLanguages() As IEnumString
    Function IsSupported(ByVal languageTag As LongPtr) As Long
    Function CreateSpellCheckProvider(ByVal languageTag As LongPtr) As ISpellCheckProvider
End Interface

'CLSID_SpellCheckerFactory 
[CoClassId("7AB36653-1796-484B-BDFA-E74F1DB7C1DC")]
[COMCreatable]
CoClass SpellCheckerFactory
	 [Default] Interface ISpellCheckerFactory
     Interface IUserDictionariesRegistrar
End CoClass

Module wdSpellCheck

Public Enum WORDLIST_TYPE
	WORDLIST_TYPE_IGNORE = 0 ' Ignore wordlist - words that should be considered correctly spelled in a single spell checking session
	WORDLIST_TYPE_ADD = 1 ' Added words wordlist - words that should be considered correctly spelled - permanent and applies to all clients
	WORDLIST_TYPE_EXCLUDE = 2 ' Excluded words wordlist - words that should be considered misspelled - permanent and applies to all clients
	WORDLIST_TYPE_AUTOCORRECT = 3 ' Autocorrect wordlit - pairs of words with a word that should be automatically substituted by the other word in the pair - permanent and applies to all clients
End Enum

Public Enum CORRECTIVE_ACTION
	CORRECTIVE_ACTION_NONE = 0 ' None - there's no error
	CORRECTIVE_ACTION_GET_SUGGESTIONS = 1 ' GetSuggestions - the client should show a list of suggestions (obtained through ISpellChecker::Suggest) to the user
	CORRECTIVE_ACTION_REPLACE = 2 ' Replace - the client should autocorrect the word to the word obtained from ISpellingError::get_Replacement
	CORRECTIVE_ACTION_DELETE = 3 ' Delete - the client should delete this word
End Enum

Public Const sCLSID_SpellCheckerFactory = "new: {7AB36653-1796-484B-BDFA-E74F1DB7C1DC}"

End Module