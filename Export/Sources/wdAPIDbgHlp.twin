'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'WinDevLib - wdAPIDbgHlp :: imagehlp.h/dbghelp.h, 100%

'Note: I've tried to implement the unusual alias struct in the header files as faithfully
'      as possible, and a great many of these APIs do have aliases, so always consult the
'      SDK source and this file in addition to MSDN-- MSDN covers only actual entry points.

#If WINDEVLIB_LITE = 0 Then
Module wdAPIDbgHlp

Public Const IMAGE_SEPARATION = (64 * 1024)

Public Type LOADED_IMAGE
    ModuleName As LongPtr 'PSTR
    hFile As LongPtr
    MappedAddress As LongPtr 'PUCHAR
    '#ifdef _IMAGEHLP64
    FileHeader As LongPtr 'PIMAGE_NT_HEADERS64
    '#else
    '    PIMAGE_NT_HEADERS32   FileHeader;
    '#endif
    LastRvaSection As LongPtr 'PIMAGE_SECTION_HEADER
    NumberOfSections As Long
    Sections As LongPtr 'PIMAGE_SECTION_HEADER
    Characteristics As ImageFileCharacteristics
    fSystemImage As Byte
    fDOSImage As Byte
    fReadOnly As Byte
    Version As Byte
    Links As LIST_ENTRY
    SizeOfImage As Long
End Type

Public Const MAX_SYM_NAME = 200

Public Declare PtrSafe Function BindImage Lib "imagehlp" (ByVal ImageName As LongPtr, ByVal DllPath As LongPtr, ByVal SymbolPath As LongPtr) As BOOL

Public Enum IMAGEHLP_STATUS_REASON
    BindOutOfMemory
    BindRvaToVaFailed
    BindNoRoomInImage
    BindImportModuleFailed
    BindImportProcedureFailed
    BindImportModule
    BindImportProcedure
    BindForwarder
    BindForwarderNOT
    BindImageModified
    BindExpandFileHeaders
    BindImageComplete
    BindMismatchedSymbols
    BindSymbolsNotUpdated
    BindImportProcedure32
    BindImportProcedure64
    BindForwarder32
    BindForwarder64
    BindForwarderNOT32
    BindForwarderNOT64
End Enum

' typedef
' BOOL
' (__stdcall *PIMAGEHLP_STATUS_ROUTINE)(
    ' _In_ IMAGEHLP_STATUS_REASON Reason,
    ' _In_ PCSTR ImageName,
    ' _In_ PCSTR DllName,
    ' _In_ ULONG_PTR Va,
    ' _In_ ULONG_PTR Parameter
    ' );

' typedef
' BOOL
' (__stdcall *PIMAGEHLP_STATUS_ROUTINE32)(
    ' _In_ IMAGEHLP_STATUS_REASON Reason,
    ' _In_ PCSTR ImageName,
    ' _In_ PCSTR DllName,
    ' _In_ ULONG Va,
    ' _In_ ULONG_PTR Parameter
    ' );

' typedef
' BOOL
' (__stdcall *PIMAGEHLP_STATUS_ROUTINE64)(
    ' _In_ IMAGEHLP_STATUS_REASON Reason,
    ' _In_ PCSTR ImageName,
    ' _In_ PCSTR DllName,
    ' _In_ ULONG64 Va,
    ' _In_ ULONG_PTR Parameter
    ' );
    
    Public Declare PtrSafe Function BindImageEx Lib "imagehlp" (ByVal dwFlags As BindImageExFlags, ByVal ImageName As LongPtr, ByVal DllPath As LongPtr, ByVal SymbolPath As LongPtr, Optional ByVal StatusRoutine As LongPtr) As BOOL
       
    Public Enum BindImageExFlags
        BIND_NO_BOUND_IMPORTS = &H00000001
        BIND_NO_UPDATE = &H00000002
        BIND_ALL_IMAGES = &H00000004
        BIND_CACHE_IMPORT_DLLS = &H00000008  ' Cache dll's across
    '   calls to BindImageEx
    '   (same as NT 3.1->NT 4.0)
        BIND_REPORT_64BIT_VA = &H00000010
    End Enum

    Public Declare PtrSafe Function ReBaseImage Lib "imagehlp" (ByVal CurrentImageName As LongPtr, ByVal SymbolPath As LongPtr, ByVal fReBase As BOOL, ByVal fRebaseSysfileOk As BOOL, ByVal fGoingDown As BOOL, ByVal CheckImageSize As Long, OldImageSize As Long, OldImageBase As LongPtr, NewImageSize As Long, NewImageBase As LongPtr, ByVal TimeStamp As Long) As BOOL
    Public Declare PtrSafe Function ReBaseImage64 Lib "imagehlp" (ByVal CurrentImageName As LongPtr, ByVal SymbolPath As LongPtr, ByVal fReBase As BOOL, ByVal fRebaseSysfileOk As BOOL, ByVal fGoingDown As BOOL, ByVal CheckImageSize As Long, OldImageSize As Long, OldImageBase As LongLong, NewImageSize As Long, NewImageBase As LongLong, ByVal TimeStamp As Long) As BOOL
        
    Public Enum DbgChecksumReturnCodes
        CHECKSUM_SUCCESS = 0
        CHECKSUM_OPEN_FAILURE = 1
        CHECKSUM_MAP_FAILURE = 2
        CHECKSUM_MAPVIEW_FAILURE = 3
        CHECKSUM_UNICODE_FAILURE = 4
    End Enum
    
    Public Enum DbgSplitSymFlags
        SPLITSYM_REMOVE_PRIVATE = &H00000001  ' Remove CV types/symbols and Fixup debug
    '   Used for creating .dbg files that ship
    '   as part of the product.
        SPLITSYM_EXTRACT_ALL = &H00000002  ' Extract all debug info from image.
    '   Normally, FPO is left in the image
    '   to allow stack traces through the code.
    '   Using this switch is similar to linking
    '   with -debug:none except the .dbg file
    '   exists...
        SPLITSYM_SYMBOLPATH_IS_SRC = &H00000004  ' The SymbolFilePath contains an alternate
    '   path to locate the pdb.
    End Enum
    
    Public Declare PtrSafe Function CheckSumMappedFile Lib "imagehlp" (ByVal BaseAddress As LongPtr, ByVal FileLength As Long, HeaderSum As Long, CheckSum As Long) As LongPtr
    Public Declare PtrSafe Function MapFileAndCheckSumA Lib "imagehlp" (ByVal Filename As String, HeaderSum As Long, CheckSum As Long) As Long
    Public Declare PtrSafe Function MapFileAndCheckSumW Lib "imagehlp" (ByVal Filename As LongPtr, HeaderSum As Long, CheckSum As Long) As Long
    Public DeclareWide PtrSafe Function MapFileAndCheckSum Lib "imagehlp" Alias "MapFileAndCheckSumW" (ByVal Filename As String, HeaderSum As Long, CheckSum As Long) As Long
    Public Declare PtrSafe Function GetImageConfigInformation Lib "imagehlp" (LoadedImage As LOADED_IMAGE, ImageConfigInformation As IMAGE_LOAD_CONFIG_DIRECTORY) As BOOL
    Public Declare PtrSafe Function GetImageUnusedHeaderBytes Lib "imagehlp" (LoadedImage As LOADED_IMAGE, SizeUnusedHeaderBytes As Long) As Long
    Public Declare PtrSafe Function SetImageConfigInformation Lib "imagehlp" (LoadedImage As LOADED_IMAGE, ImageConfigInformation As IMAGE_LOAD_CONFIG_DIRECTORY) As BOOL

    
    ' typedef PVOID DIGEST_HANDLE;

    ' typedef BOOL (WINAPI *DIGEST_FUNCTION) (DIGEST_HANDLE refdata, PBYTE pData, DWORD dwLength);Certificate As WIN_CERTIFICATE, Index As 
    
    Public Declare PtrSafe Function ImageGetDigestStream Lib "imagehlp" (ByVal FileHandle As LongPtr, ByVal DigestLevel As Long, ByVal DigestFunction As LongPtr, ByVal DigestHandle As LongPtr) As BOOL
    Public Declare PtrSafe Function ImageAddCertificate Lib "imagehlp" (ByVal FileHandle As LongPtr, Certificate As Any /*WIN_CERTIFICATE*/, Index As Long) As BOOL
    Public Declare PtrSafe Function ImageRemoveCertificate Lib "imagehlp" (ByVal FileHandle As LongPtr, ByVal Index As Long) As BOOL
    Public Declare PtrSafe Function ImageEnumerateCertificates Lib "imagehlp" (ByVal FileHandle As LongPtr, [TypeHint(CERT_SECTION_TYPE)] ByVal TypeFilter As Integer, CertificateCount As Long, Indices As Long, Optional IndexCount As Long) As BOOL
    Public Declare PtrSafe Function ImageGetCertificateData Lib "imagehlp" (ByVal FileHandle As LongPtr, ByVal CertificateIndex As Long, Certificate As Any, RequiredLength As Long) As BOOL
    Public Declare PtrSafe Function ImageGetCertificateHeader Lib "imagehlp" (ByVal FileHandle As LongPtr, ByVal CertificateIndex As Long, Certificate As WIN_CERTIFICATE) As BOOL
    Public Declare PtrSafe Function ImageLoad Lib "imagehlp" (ByVal DllName As LongPtr, Optional ByVal DllPath As LongPtr) As LongPtr
    Public Declare PtrSafe Function ImageUnload Lib "imagehlp" (LoadedImage As LOADED_IMAGE) As BOOL
    Public Declare PtrSafe Function MapAndLoad Lib "imagehlp" (ByVal ImageName As LongPtr, ByVal DllPath As LongPtr, LoadedImage As LOADED_IMAGE, ByVal DotDll As BOOL, ByVal ReadOnly As BOOL) As BOOL
    Public Declare PtrSafe Function UnMapAndLoad Lib "imagehlp" (LoadedImage As LOADED_IMAGE) As BOOL
    Public Declare PtrSafe Function TouchFileTimes Lib "imagehlp" (ByVal FileHandle As LongPtr, pSystemTime As SYSTEMTIME) As BOOL
    Public Declare PtrSafe Function SplitSymbols Lib "imagehlp" (ByVal ImageName As LongPtr, ByVal SymbolsPath As LongPtr, ByVal SymbolFilePath As LongPtr, ByVal Flags As DbgSplitSymFlags) As BOOL
    Public Declare PtrSafe Function UpdateDebugInfoFile Lib "imagehlp" (ByVal ImageName As LongPtr, ByVal SymbolPath As LongPtr, ByVal DebugFilePath As LongPtr, NtHeaders As IMAGE_NT_HEADERS32) As BOOL
    Public Declare PtrSafe Function UpdateDebugInfoFileEx Lib "imagehlp" (ByVal ImageName As LongPtr, ByVal SymbolPath As LongPtr, ByVal DebugFilePath As LongPtr, NtHeaders As IMAGE_NT_HEADERS32, ByVal OldCheckSum As Long) As BOOL
        
    'imagehlp.h and dbghelp.h **are identical beyond this point!!***
    
    [Description("the image is not stripped.  No dbg file available.")] Public Const ERROR_IMAGE_NOT_STRIPPED  = &H8800
    [Description("image is stripped but there is no pointer to a dbg file")] Public Const ERROR_NO_DBG_POINTER  = &H8801
    [Description("image does not point to a pdb file")] Public Const ERROR_NO_PDB_POINTER  = &H8802
    
    ' typedef BOOL
    ' (CALLBACK *PFIND_DEBUG_FILE_CALLBACK)(
        ' _In_ HANDLE FileHandle,
        ' _In_ PCSTR FileName,
        ' _In_ PVOID CallerData
        ' );
    
    Public DeclareWide PtrSafe Function SymFindDebugInfoFile Lib "dbghelp" Alias "SymFindDebugInfoFileW" (ByVal hProcess As LongPtr, ByVal FileName As String, ByVal DebugFilePath As String, Optional ByVal Callback As LongPtr, Optional ByVal CallerData As LongPtr) As LongPtr
    
    ' typedef BOOL
    ' (CALLBACK *PFIND_DEBUG_FILE_CALLBACKW)(
        ' _In_ HANDLE FileHandle,
        ' _In_ PCWSTR FileName,
        ' _In_ PVOID  CallerData
        ' );
        
    Public Declare PtrSafe Function SymFindDebugInfoFileW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal FileName As LongPtr, ByVal DebugFilePath As LongPtr, Optional ByVal Callback As LongPtr, Optional ByVal CallerData As LongPtr) As LongPtr
    [Description("IMPORTANT: This API has no Unicode version, so this call is ANSI.")]
    Public Declare PtrSafe Function FindDebugInfoFile Lib "dbghelp" (ByVal FileName As String, ByVal SymbolPath As String, ByVal DebugFilePath As String) As LongPtr
    Public DeclareWide PtrSafe Function FindDebugInfoFileEx Lib "dbghelp" Alias "FindDebugInfoFileExW" (ByVal FileName As String, ByVal SymbolPath As String, ByVal DebugFilePath As String, Optional ByVal Callback As LongPtr, Optional ByVal CallerData As LongPtr) As LongPtr
    Public Declare PtrSafe Function FindDebugInfoFileExW Lib "dbghelp" (ByVal FileName As LongPtr, ByVal SymbolPath As LongPtr, ByVal DebugFilePath As LongPtr, Optional ByVal Callback As LongPtr, Optional ByVal CallerData As LongPtr) As LongPtr
                
    ' typedef BOOL
    ' (CALLBACK *PFINDFILEINPATHCALLBACK)(
        ' _In_ PCSTR filename,
        ' _In_ PVOID context
        ' );
    Public DeclareWide PtrSafe Function SymFindFileInPath Lib "dbghelp" Alias "SymFindFileInPathW" (ByVal hProcess As LongPtr, ByVal SearchPath As String, ByVal FileName As String, ByVal id As LongPtr, ByVal two As Long, ByVal three As Long, ByVal flags As DbgSymSrvFlags, ByVal FoundFile As String, Optional ByVal callback As LongPtr, Optional ByVal context As LongPtr) As BOOL
    Public Declare PtrSafe Function SymFindFileInPathW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal SearchPath As LongPtr, ByVal FileName As LongPtr, ByVal id As LongPtr, ByVal two As Long, ByVal three As Long, ByVal flags As DbgSymSrvFlags, ByVal FoundFile As String, Optional ByVal callback As LongPtr, Optional ByVal context As LongPtr) As BOOL
    
    ' typedef BOOL
    ' (CALLBACK *PFIND_EXE_FILE_CALLBACK)(
        ' _In_ HANDLE FileHandle,
        ' _In_ PCSTR FileName,
        ' _In_opt_ PVOID CallerData
        ' );
        
        
    Public DeclareWide PtrSafe Function SymFindExecutableImage Lib "dbghelp" Alias "SymFindExecutableImageW" (ByVal hProcess As LongPtr, ByVal FileName As String, ByVal ImageFilePath As String, Optional ByVal Callback As LongPtr, Optional ByVal CallerData As LongPtr) As LongPtr

    ' typedef BOOL
    ' (CALLBACK *PFIND_EXE_FILE_CALLBACKW)(
        ' _In_ HANDLE FileHandle,
        ' _In_ PCWSTR FileName,
        ' _In_opt_ PVOID CallerData
        ' );
        
    Public Declare PtrSafe Function SymFindExecutableImageW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal FileName As LongPtr, ByVal ImageFilePath As LongPtr, Optional ByVal Callback As LongPtr, Optional ByVal CallerData As LongPtr) As LongPtr
    
    [Description("IMPORTANT: This API has no Unicode version, so this call is ANSI.")]
    Public Declare PtrSafe Function FindExecutableImage Lib "dbghelp" (ByVal FileName As String, ByVal SymbolPath As String, ByVal ImageFilePath As String) As LongPtr
    Public DeclareWide PtrSafe Function FindExecutableImageEx Lib "dbghelp" Alias "FindExecutableImageExW" (ByVal FileName As String, ByVal SymbolPath As String, ByVal ImageFilePath As String, Optional ByVal Callback As LongPtr, Optional ByVal CallerData As LongPtr) As LongPtr
    Public Declare PtrSafe Function FindExecutableImageExW Lib "dbghelp" (ByVal FileName As LongPtr, ByVal SymbolPath As LongPtr, ByVal ImageFilePath As LongPtr, Optional ByVal Callback As LongPtr, Optional ByVal CallerData As LongPtr) As LongPtr
    Public Declare PtrSafe Function ImageNtHeader Lib "dbghelp" (ByVal Base As LongPtr) As LongPtr
    Public Declare PtrSafe Function ImageDirectoryEntryToDataEx Lib "dbghelp" (ByVal Base As LongPtr, ByVal MappedAsImage As Byte, [TypeHint(ImageDirectories)] ByVal DirectoryEntry As Integer, Size As Long, FoundHeader As LongPtr) As LongPtr
    Public Declare PtrSafe Function ImageDirectoryEntryToData Lib "dbghelp" (ByVal Base As LongPtr, ByVal MappedAsImage As Byte, ByVal DirectoryEntry As Integer, Size As Long) As LongPtr
    Public Declare PtrSafe Function ImageRvaToSection Lib "dbghelp" (NtHeaders As IMAGE_NT_HEADERS, ByVal Base As LongPtr, ByVal Rva As Long) As LongPtr
    Public Declare PtrSafe Function ImageRvaToVa Lib "dbghelp" (NtHeaders As IMAGE_NT_HEADERS, ByVal Base As LongPtr, ByVal Rva As Long, LastRvaSection As IMAGE_SECTION_HEADER) As LongPtr
        
    #If Win64 = 0 Then
    Public Type IMAGE_DEBUG_INFORMATION
        List As LIST_ENTRY
        ReservedSize As Long
        ReservedMappedBase As LongPtr
        ReservedMachine As Integer
        ReservedCharacteristics As Integer
        ReservedCheckSum As Long
        ImageBase As Long
        SizeOfImage As Long
        ReservedNumberOfSections As Long
        ReservedSections As LongPtr 'PIMAGE_SECTION_HEADER
        ReservedExportedNamesSize As Long
        ReservedExportedNames As String
        ReservedNumberOfFunctionTableEntries As Long
        ReservedFunctionTableEntries As LongPtr 'PIMAGE_FUNCTION_ENTRY
        ReservedLowestFunctionStartingAddress As Long
        ReservedHighestFunctionEndingAddress As Long
        ReservedNumberOfFpoTableEntries As Long
        ReservedFpoTableEntries As LongPtr 'PFPO_DATA
        SizeOfCoffSymbols As Long
        CoffSymbols As LongPtr 'PIMAGE_COFF_SYMBOLS_HEADER
        ReservedSizeOfCodeViewSymbols As Long
        ReservedCodeViewSymbols As LongPtr
        ImageFilePath As String
        ImageFileName As String
        ReservedDebugFilePath As String
        ReservedTimeDateStamp As Long
        ReservedRomImage As BOOL
        ReservedDebugDirectory As LongPtr 'PIMAGE_DEBUG_DIRECTORY
        ReservedNumberOfDebugDirectories As Long
        ReservedOriginalFunctionTableBaseAddress As Long
        Reserved(0 To 1) As Long
    End Type
    
    [Description("IMPORTANT: This API has no Unicode version, so this call is ANSI.")]
    Public Declare PtrSafe Function MapDebugInformation Lib "dbghelp" (ByVal FileHandle As LongPtr, ByVal FileName As String, ByVal SymbolPath As String, ByVal ImageBase As Long) As LongPtr
    Public Declare PtrSafe Function UnmapDebugInformation Lib "dbghelp" (ByVal DebugInfo As LongPtr) As BOOL
    #End If
    Public Declare PtrSafe Function SearchTreeForFileA Lib "dbghelp" Alias "SearchTreeForFile" (ByVal RootPath As String, ByVal InputPathName As String, ByVal OutputPathBuffer As String) As BOOL
    Public Declare PtrSafe Function SearchTreeForFileW Lib "dbghelp" (ByVal RootPath As LongPtr, ByVal InputPathName As LongPtr, ByVal OutputPathBuffer As LongPtr) As BOOL
    Public DeclareWide PtrSafe Function SearchTreeForFile Lib "dbghelp" Alias "SearchTreeForFileW" (ByVal RootPath As String, ByVal InputPathName As String, ByVal OutputPathBuffer As String) As BOOL
    ' typedef BOOL
    ' (CALLBACK *PENUMDIRTREE_CALLBACK)(
    '     _In_ PCSTR FilePath,
    '     _In_opt_ PVOID CallerData
    '     );
    
    Public Declare PtrSafe Function EnumDirTreeA Lib "dbghelp" Alias "EnumDirTree" (ByVal hProcess As LongPtr, ByVal RootPath As String, ByVal InputPathName As String, ByVal OutputPathBuffer As String, Optional ByVal cb As LongPtr, Optional ByVal data As LongPtr) As BOOL
    ' typedef BOOL
    ' (CALLBACK *PENUMDIRTREE_CALLBACKW)(
    '     _In_ PCWSTR FilePath,
    '     _In_opt_ PVOID CallerData
    '     );
    Public Declare PtrSafe Function EnumDirTreeW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal RootPath As LongPtr, ByVal InputPathName As LongPtr, ByVal OutputPathBuffer As LongPtr, Optional ByVal cb As LongPtr, Optional ByVal data As LongPtr) As BOOL
    Public DeclareWide PtrSafe Function EnumDirTree Lib "dbghelp" Alias "EnumDirTreeW" (ByVal hProcess As LongPtr, ByVal RootPath As String, ByVal InputPathName As String, ByVal OutputPathBuffer As String, Optional ByVal cb As LongPtr, Optional ByVal data As LongPtr) As BOOL
    Public Declare PtrSafe Function MakeSureDirectoryPathExists Lib "Imagehlp" (ByVal DirPath As String) As BOOL
    
    Public Enum DbgUndecorateFlags
        UNDNAME_COMPLETE = (&H0000)  ' Enable full undecoration
        UNDNAME_NO_LEADING_UNDERSCORES = (&H0001)  ' Remove leading underscores from MS extended keywords
        UNDNAME_NO_MS_KEYWORDS = (&H0002)  ' Disable expansion of MS extended keywords
        UNDNAME_NO_FUNCTION_RETURNS = (&H0004)  ' Disable expansion of return type for primary declaration
        UNDNAME_NO_ALLOCATION_MODEL = (&H0008)  ' Disable expansion of the declaration model
        UNDNAME_NO_ALLOCATION_LANGUAGE = (&H0010)  ' Disable expansion of the declaration language specifier
        UNDNAME_NO_MS_THISTYPE = (&H0020)  ' NYI Disable expansion of MS keywords on the 'this' type for primary declaration
        UNDNAME_NO_CV_THISTYPE = (&H0040)  ' NYI Disable expansion of CV modifiers on the 'this' type for primary declaration
        UNDNAME_NO_THISTYPE = (&H0060)  ' Disable all modifiers on the 'this' type
        UNDNAME_NO_ACCESS_SPECIFIERS = (&H0080)  ' Disable expansion of access specifiers for members
        UNDNAME_NO_THROW_SIGNATURES = (&H0100)  ' Disable expansion of 'throw-signatures' for functions and pointers to functions
        UNDNAME_NO_MEMBER_TYPE = (&H0200)  ' Disable expansion of 'static' or 'virtual'ness of members
        UNDNAME_NO_RETURN_UDT_MODEL = (&H0400)  ' Disable expansion of MS model for UDT returns
        UNDNAME_32_BIT_DECODE = (&H0800)  ' Undecorate 32-bit decorated names
        UNDNAME_NAME_ONLY = (&H1000)  ' Crack only the name for primary declaration;
    '   return just [scope::]name.  Does expand template params
        UNDNAME_NO_ARGUMENTS = (&H2000)  ' Don't undecorate arguments to function
        UNDNAME_NO_SPECIAL_SYMS = (&H4000)  ' Don't undecorate special names (v-table, vcall, vector xxx, metatype, etc)
    End Enum
    
    Public DeclareWide PtrSafe Function UnDecorateSymbolName Lib "dbghelp" Alias "UnDecorateSymbolNameW" (ByVal name As String, ByVal outputString As String, ByVal maxStringLength As Long, ByVal flags As DbgUndecorateFlags) As Long
    Public Declare PtrSafe Function UnDecorateSymbolNameW Lib "dbghelp" (ByVal name As LongPtr, ByVal outputString As LongPtr, ByVal maxStringLength As Long, ByVal flags As DbgUndecorateFlags) As Long
        
    Public Enum DbgDbhHeaderSigs
        DBHHEADER_DEBUGDIRS = &H1
        DBHHEADER_CVMISC = &H2
        DBHHEADER_PDBGUID = &H3
    End Enum
    
    Public Type MODLOAD_DATA
        ssize As Long ' size of this struct
        ssig As DbgDbhHeaderSigs ' signature identifying the passed data
        data As LongPtr ' pointer to passed data
        size As Long ' size of passed data
        flags As Long ' options
    End Type
    
    Public Type MODLOAD_CVMISC
        oCV As Long ' ofset to the codeview record
        cCV As LongPtr ' size of the codeview record
        oMisc As Long ' offset to the misc record
        cMisc As LongPtr ' size of the misc record
        dtImage As Long ' datetime stamp of the image
        cImage As Long ' size of the image
    End Type
    
    Public Type MODLOAD_PDBGUID_PDBAGE
        PdbGuid As UUID ' Pdb Guid
        PdbAge As Long ' Pdb Age
    End Type
    
    Public Enum ADDRESS_MODE
        AddrMode1616
        AddrMode1632
        AddrModeReal
        AddrModeFlat
    End Enum
    
    Public Type ADDRESS64
        Offset As LongLong
        Segment As Integer
        Mode As ADDRESS_MODE
    End Type
    #If Win64 Then
    'Alias ADDRESS As ADDRESS64
    Public Type ADDRESS
        Offset As LongLong
        Segment As Integer
        Mode As ADDRESS_MODE
    End Type
    #Else
    Public Type ADDRESS
        Offset As Long
        Segment As Integer
        Mode As ADDRESS_MODE
    End Type
    #End If
     
    Public Sub Address32To64(a32 As ADDRESS, a64 As ADDRESS64)
        a64.Offset = a32.Offset
        a64.Segment = a32.Segment
        a64.Mode = a32.Mode
    End Sub
    Public Sub Address64To32(a64 As ADDRESS64, a32 As ADDRESS)
        CopyMemory a32.Offset, a64.Offset, 4
        a32.Segment = a64.Segment
        a32.Mode = a64.Mode
    End Sub
    
    Public Type KDHELP64
        ' address of kernel thread object, as provided in the
        ' WAIT_STATE_CHANGE packet.
        Thread As LongLong
        ' offset in thread object to pointer to the current callback frame
        ' in kernel stack.
        ThCallbackStack As Long
        ' offset in thread object to pointer to the current callback backing
        ' store frame in kernel stack.
        ThCallbackBStore As Long
        ' offsets to values in frame:
        ' address of next callback frame
        NextCallback As Long
        ' address of saved frame pointer (if applicable)
        FramePointer As Long
        ' Address of the kernel function that calls out to user mode
        KiCallUserMode As LongLong
        ' Address of the user mode dispatcher function
        KeUserCallbackDispatcher As LongLong
        ' Lowest kernel mode address
        SystemRangeStart As LongLong
        ' Address of the user mode exception dispatcher function.
        ' Added in API version 10.
        KiUserExceptionDispatcher As LongLong
        ' Stack bounds, added in API version 11.
        StackBase As LongLong
        StackLimit As LongLong
        ' Target OS build number. Added in API version 12.
        BuildVersion As Long
        RetpolineStubFunctionTableSize As Long
        RetpolineStubFunctionTable As LongLong
        RetpolineStubOffset As Long
        RetpolineStubSize As Long
        Reserved0(0 To 1) As LongLong
    End Type
    
    #If Win64 Then
    Public Type KDHELP
        'Alias KDHELP As KDHELP64
        ' address of kernel thread object, as provided in the
        ' WAIT_STATE_CHANGE packet.
        Thread As LongLong
        ' offset in thread object to pointer to the current callback frame
        ' in kernel stack.
        ThCallbackStack As Long
        ' offset in thread object to pointer to the current callback backing
        ' store frame in kernel stack.
        ThCallbackBStore As Long
        ' offsets to values in frame:
        ' address of next callback frame
        NextCallback As Long
        ' address of saved frame pointer (if applicable)
        FramePointer As Long
        ' Address of the kernel function that calls out to user mode
        KiCallUserMode As LongLong
        ' Address of the user mode dispatcher function
        KeUserCallbackDispatcher As LongLong
        ' Lowest kernel mode address
        SystemRangeStart As LongLong
        ' Address of the user mode exception dispatcher function.
        ' Added in API version 10.
        KiUserExceptionDispatcher As LongLong
        ' Stack bounds, added in API version 11.
        StackBase As LongLong
        StackLimit As LongLong
        ' Target OS build number. Added in API version 12.
        BuildVersion As Long
        RetpolineStubFunctionTableSize As Long
        RetpolineStubFunctionTable As LongLong
        RetpolineStubOffset As Long
        RetpolineStubSize As Long
        Reserved0(0 To 1) As LongLong
    End Type
    #Else
    Public Type KDHELP
        ' address of kernel thread object, as provided in the
        ' WAIT_STATE_CHANGE packet.
        Thread As Long
        ' offset in thread object to pointer to the current callback frame
        ' in kernel stack.
        ThCallbackStack As Long
        ' offsets to values in frame:
        ' address of next callback frame
        NextCallback As Long
        ' address of saved frame pointer (if applicable)
        FramePointer As Long
        ' Address of the kernel function that calls out to user mode
        KiCallUserMode As Long
        ' Address of the user mode dispatcher function
        KeUserCallbackDispatcher As Long
        ' Lowest kernel mode address
        SystemRangeStart As Long
        ' offset in thread object to pointer to the current callback backing
        ' store frame in kernel stack.
        ThCallbackBStore As Long
        ' Address of the user mode exception dispatcher function.
        ' Added in API version 10.
        KiUserExceptionDispatcher As Long
        ' Stack bounds, added in API version 11.
        StackBase As Long
        StackLimit As Long
        Reserved(0 To 4) As Long
    End Type
    #End If
    
    Public Sub KdHelp32To64(p32 As KDHELP, p64 As KDHELP64)
        p64.Thread = p32.Thread
        p64.ThCallbackStack = p32.ThCallbackStack
        p64.NextCallback = p32.NextCallback
        p64.FramePointer = p32.FramePointer
        p64.KiCallUserMode = p32.KiCallUserMode
        p64.KeUserCallbackDispatcher = p32.KeUserCallbackDispatcher
        p64.SystemRangeStart = p32.SystemRangeStart
        p64.KiUserExceptionDispatcher = p32.KiUserExceptionDispatcher
        p64.StackBase = p32.StackBase
        p64.StackLimit = p32.StackLimit
    End Sub
    
    Public Type STACKFRAME64
        AddrPC As ADDRESS64 ' program counter
        AddrReturn As ADDRESS64 ' return address
        AddrFrame As ADDRESS64 ' frame pointer
        AddrStack As ADDRESS64 ' stack pointer
        AddrBStore As ADDRESS64 ' backing store pointer
        FuncTableEntry As LongPtr ' pointer to pdata/fpo or NULL
        Params(0 To 3) As LongLong ' possible arguments to the function
        Far As BOOL ' WOW far call
        Virtual As BOOL ' is this a virtual frame?
        Reserved(0 To 2) As LongLong
        KdHelp As KDHELP64
    End Type
    
    Public Const INLINE_FRAME_CONTEXT_INIT  = 0
    Public Const INLINE_FRAME_CONTEXT_IGNORE  = &HFFFFFFFF
    
    Public Type STACKFRAME_EX
        ' First, STACKFRAME64 structure
        AddrPC As ADDRESS64 ' program counter
        AddrReturn As ADDRESS64 ' return address
        AddrFrame As ADDRESS64 ' frame pointer
        AddrStack As ADDRESS64 ' stack pointer
        AddrBStore As ADDRESS64 ' backing store pointer
        FuncTableEntry As LongPtr ' pointer to pdata/fpo or NULL
        Params(0 To 3) As LongLong ' possible arguments to the function
        Far As BOOL ' WOW far call
        Virtual As BOOL ' is this a virtual frame?
        Reserved(0 To 2) As LongLong
        KdHelp As KDHELP64
        ' Extended STACKFRAME fields
        StackFrameSize As Long
        InlineFrameContext As Long
    End Type
    
    #If Win64 Then
    'Alias STACKFRAME As STACKFRAME64
    Public Type STACKFRAME
        AddrPC As ADDRESS64 ' program counter
        AddrReturn As ADDRESS64 ' return address
        AddrFrame As ADDRESS64 ' frame pointer
        AddrStack As ADDRESS64 ' stack pointer
        AddrBStore As ADDRESS64 ' backing store pointer
        FuncTableEntry As LongPtr ' pointer to pdata/fpo or NULL
        Params(0 To 3) As LongLong ' possible arguments to the function
        Far As BOOL ' WOW far call
        Virtual As BOOL ' is this a virtual frame?
        Reserved(0 To 2) As LongLong
        KdHelp As KDHELP64
    End Type
    #Else
    Public Type STACKFRAME
        AddrPC As ADDRESS ' program counter
        AddrReturn As ADDRESS ' return address
        AddrFrame As ADDRESS ' frame pointer
        AddrStack As ADDRESS ' stack pointer
        FuncTableEntry As LongPtr ' pointer to pdata/fpo or NULL
        Params(0 To 3) As Long ' possible arguments to the function
        Far As BOOL ' WOW far call
        Virtual As BOOL ' is this a virtual frame?
        Reserved(0 To 2) As Long
        KdHelp As KDHELP
        AddrBStore As ADDRESS ' backing store pointer
    End Type
    #End If
    
    ' typedef
    ' BOOL
    ' (__stdcall *PREAD_PROCESS_MEMORY_ROUTINE64)(
        ' _In_ HANDLE hProcess,
        ' _In_ DWORD64 qwBaseAddress,
        ' _Out_writes_bytes_(nSize) PVOID lpBuffer,
        ' _In_ DWORD nSize,
        ' _Out_ LPDWORD lpNumberOfBytesRead
        ' );

    ' typedef
    ' PVOID
    ' (__stdcall *PFUNCTION_TABLE_ACCESS_ROUTINE64)(
        ' _In_ HANDLE ahProcess,
        ' _In_ DWORD64 AddrBase
        ' );

    ' typedef
    ' DWORD64
    ' (__stdcall *PGET_MODULE_BASE_ROUTINE64)(
        ' _In_ HANDLE hProcess,
        ' _In_ DWORD64 Address
        ' );

    ' typedef
    ' DWORD64
    ' (__stdcall *PTRANSLATE_ADDRESS_ROUTINE64)(
        ' _In_ HANDLE hProcess,
        ' _In_ HANDLE hThread,
        ' _In_ LPADDRESS64 lpaddr
        ' );
        
    Public Const TARGET_ATTRIBUTE_PACMASK  = &H00000001
    '  Target Attribute Special Values:
    Public Const TARGET_ATTRIBUTE_PACMASK_LIVETARGET  = &HFFFFFFFFFFFFFFFF
                
    ' typedef
    ' BOOL
    ' (__stdcall *PGET_TARGET_ATTRIBUTE_VALUE64)(
        ' _In_ HANDLE hProcess,
        ' _In_ DWORD Attribute,
        ' _In_ DWORD64 AttributeData,
        ' _Out_ DWORD64 *AttributeValue
        ' );
        
    Public Declare PtrSafe Function StackWalk64 Lib "dbghelp" (ByVal MachineType As ImageMachineType, ByVal hProcess As LongPtr, ByVal hThread As LongPtr, StackFrame As STACKFRAME64, ByVal ContextRecord As LongPtr, Optional ByVal ReadMemoryRoutine As LongPtr, Optional ByVal FunctionTableAccessRoutine As LongPtr, Optional ByVal GetModuleBaseRoutine As LongPtr, Optional ByVal TranslateAddress As LongPtr) As BOOL
    
    Public Enum DbgStackWalkExFlags
        SYM_STKWALK_DEFAULT = &H00000000
        SYM_STKWALK_FORCE_FRAMEPTR = &H00000001
        SYM_STKWALK_ZEROEXTEND_PTRS = &H00000002
    End Enum
    
    Public Declare PtrSafe Function StackWalkEx Lib "dbghelp" (ByVal MachineType As ImageMachineType, ByVal hProcess As LongPtr, ByVal hThread As LongPtr, StackFrame As STACKFRAME_EX, ByVal ContextRecord As LongPtr, Optional ByVal ReadMemoryRoutine As LongPtr, Optional ByVal FunctionTableAccessRoutine As LongPtr, Optional ByVal GetModuleBaseRoutine As LongPtr, Optional ByVal TranslateAddress As LongPtr, Optional ByVal dwFlags As DbgStackWalkExFlags = 0) As BOOL
    Public Declare PtrSafe Function StackWalk2 Lib "dbghelp" (ByVal MachineType As ImageMachineType, ByVal hProcess As LongPtr, ByVal hThread As LongPtr, StackFrame As STACKFRAME_EX, ByVal ContextRecord As LongPtr, Optional ByVal ReadMemoryRoutine As LongPtr, Optional ByVal FunctionTableAccessRoutine As LongPtr, Optional ByVal GetModuleBaseRoutine As LongPtr, Optional ByVal TranslateAddress As LongPtr, Optional ByVal GetTargetAttributeValue As LongPtr, Optional ByVal dwFlags As DbgStackWalkExFlags = 0) As BOOL
            
    #If Win64 Then
    Public Declare PtrSafe Function StackWalk Lib "dbghelp" Alias "StackWalk64" (ByVal MachineType As ImageMachineType, ByVal hProcess As LongPtr, ByVal hThread As LongPtr, StackFrame As STACKFRAME64, ByVal ContextRecord As LongPtr, Optional ByVal ReadMemoryRoutine As LongPtr, Optional ByVal FunctionTableAccessRoutine As LongPtr, Optional ByVal GetModuleBaseRoutine As LongPtr, Optional ByVal TranslateAddress As LongPtr) As BOOL
    #Else
    Public Declare PtrSafe Function StackWalk Lib "dbghelp" (ByVal MachineType As ImageMachineType, ByVal hProcess As LongPtr, ByVal hThread As LongPtr, StackFrame As STACKFRAME64, ByVal ContextRecord As LongPtr, Optional ByVal ReadMemoryRoutine As LongPtr, Optional ByVal FunctionTableAccessRoutine As LongPtr, Optional ByVal GetModuleBaseRoutine As LongPtr, Optional ByVal TranslateAddress As LongPtr) As BOOL
    #End If
    
    Public Const API_VERSION_NUMBER_IMAGEHLP = 12
    
    Public Type API_VERSION
        MajorVersion As Integer
        MinorVersion As Integer
        Revision As Integer
        Reserved As Integer
    End Type
    
    Public Declare PtrSafe Function ImagehlpApiVersion Lib "dbghelp" () As LongPtr 'API_VERSION*
    Public Declare PtrSafe Function ImagehlpApiVersionEx Lib "dbghelp" (AppVersion As API_VERSION) As LongPtr 'API_VERSION*
    Public Declare PtrSafe Function GetTimestampForLoadedLibrary Lib "dbghelp" (ByVal Module As LongPtr) As Long
    
    ' //
    ' // typedefs for function pointers
    ' //
    ' typedef BOOL
    ' (CALLBACK *PSYM_ENUMMODULES_CALLBACK64)(
        ' _In_ PCSTR ModuleName,
        ' _In_ DWORD64 BaseOfDll,
        ' _In_opt_ PVOID UserContext
        ' );

    ' typedef BOOL
    ' (CALLBACK *PSYM_ENUMMODULES_CALLBACKW64)(
        ' _In_ PCWSTR ModuleName,
        ' _In_ DWORD64 BaseOfDll,
        ' _In_opt_ PVOID UserContext
        ' );

    ' typedef BOOL
    ' (CALLBACK *PENUMLOADED_MODULES_CALLBACK64)(
        ' _In_ PCSTR ModuleName,
        ' _In_ DWORD64 ModuleBase,
        ' _In_ ULONG ModuleSize,
        ' _In_opt_ PVOID UserContext
        ' );

    ' typedef BOOL
    ' (CALLBACK *PENUMLOADED_MODULES_CALLBACKW64)(
        ' _In_ PCWSTR ModuleName,
        ' _In_ DWORD64 ModuleBase,
        ' _In_ ULONG ModuleSize,
        ' _In_opt_ PVOID UserContext
        ' );

    ' typedef BOOL
    ' (CALLBACK *PSYM_ENUMSYMBOLS_CALLBACK64)(
        ' _In_ PCSTR SymbolName,
        ' _In_ DWORD64 SymbolAddress,
        ' _In_ ULONG SymbolSize,
        ' _In_opt_ PVOID UserContext
        ' );

    ' typedef BOOL
    ' (CALLBACK *PSYM_ENUMSYMBOLS_CALLBACK64W)(
        ' _In_ PCWSTR SymbolName,
        ' _In_ DWORD64 SymbolAddress,
        ' _In_ ULONG SymbolSize,
        ' _In_opt_ PVOID UserContext
        ' );

    ' typedef BOOL
    ' (CALLBACK *PSYMBOL_REGISTERED_CALLBACK64)(
        ' _In_ HANDLE hProcess,
        ' _In_ ULONG ActionCode,
        ' _In_opt_ ULONG64 CallbackData,
        ' _In_opt_ ULONG64 UserContext
        ' );

    ' typedef
    ' PVOID
    ' (CALLBACK *PSYMBOL_FUNCENTRY_CALLBACK)(
        ' _In_ HANDLE hProcess,
        ' _In_ DWORD AddrBase,
        ' _In_opt_ PVOID UserContext
        ' );

    ' typedef
    ' PVOID
    ' (CALLBACK *PSYMBOL_FUNCENTRY_CALLBACK64)(
        ' _In_ HANDLE hProcess,
        ' _In_ ULONG64 AddrBase,
        ' _In_ ULONG64 UserContext
        ' );

    ' #if !defined(_IMAGEHLP_SOURCE_) && defined(_IMAGEHLP64)

    ' #define PSYM_ENUMMODULES_CALLBACK PSYM_ENUMMODULES_CALLBACK64
    ' #define PSYM_ENUMSYMBOLS_CALLBACK PSYM_ENUMSYMBOLS_CALLBACK64
    ' #define PSYM_ENUMSYMBOLS_CALLBACKW PSYM_ENUMSYMBOLS_CALLBACK64W
    ' #define PENUMLOADED_MODULES_CALLBACK PENUMLOADED_MODULES_CALLBACK64
    ' #define PSYMBOL_REGISTERED_CALLBACK PSYMBOL_REGISTERED_CALLBACK64
    ' #define PSYMBOL_FUNCENTRY_CALLBACK PSYMBOL_FUNCENTRY_CALLBACK64

    ' #else

    ' typedef BOOL
    ' (CALLBACK *PSYM_ENUMMODULES_CALLBACK)(
        ' _In_ PCSTR ModuleName,
        ' _In_ ULONG BaseOfDll,
        ' _In_opt_ PVOID UserContext
        ' );

    ' typedef BOOL
    ' (CALLBACK *PSYM_ENUMSYMBOLS_CALLBACK)(
        ' _In_ PCSTR SymbolName,
        ' _In_ ULONG SymbolAddress,
        ' _In_ ULONG SymbolSize,
        ' _In_opt_ PVOID UserContext
        ' );

    ' typedef BOOL
    ' (CALLBACK *PSYM_ENUMSYMBOLS_CALLBACKW)(
        ' _In_ PCWSTR SymbolName,
        ' _In_ ULONG SymbolAddress,
        ' _In_ ULONG SymbolSize,
        ' _In_opt_ PVOID UserContext
        ' );

    ' typedef BOOL
    ' (CALLBACK *PENUMLOADED_MODULES_CALLBACK)(
        ' _In_ PCSTR ModuleName,
        ' _In_ ULONG ModuleBase,
        ' _In_ ULONG ModuleSize,
        ' _In_opt_ PVOID UserContext
        ' );

    ' typedef BOOL
    ' (CALLBACK *PSYMBOL_REGISTERED_CALLBACK)(
        ' _In_ HANDLE hProcess,
        ' _In_ ULONG ActionCode,
        ' _In_opt_ PVOID CallbackData,
        ' _In_opt_ PVOID UserContext
        ' );

    ' #endif
    
    Public Enum SymTagEnum
        SymTagNull
        SymTagExe
        SymTagCompiland
        SymTagCompilandDetails
        SymTagCompilandEnv
        SymTagFunction
        SymTagBlock
        SymTagData
        SymTagAnnotation
        SymTagLabel
        SymTagPublicSymbol
        SymTagUDT
        SymTagEnum
        SymTagFunctionType
        SymTagPointerType
        SymTagArrayType
        SymTagBaseType
        SymTagTypedef
        SymTagBaseClass
        SymTagFriend
        SymTagFunctionArgType
        SymTagFuncDebugStart
        SymTagFuncDebugEnd
        SymTagUsingNamespace
        SymTagVTableShape
        SymTagVTable
        SymTagCustom
        SymTagThunk
        SymTagCustomType
        SymTagManagedType
        SymTagDimension
        SymTagCallSite
        SymTagInlineSite
        SymTagBaseInterface
        SymTagVectorType
        SymTagMatrixType
        SymTagHLSLType
        SymTagCaller
        SymTagCallee
        SymTagExport
        SymTagHeapAllocationSite
        SymTagCoffGroup
        SymTagMax
    End Enum
    
    Public Enum SymbolInfoFlags
        SYMFLAG_VALUEPRESENT = &H00000001
        SYMFLAG_REGISTER = &H00000008
        SYMFLAG_REGREL = &H00000010
        SYMFLAG_FRAMEREL = &H00000020
        SYMFLAG_PARAMETER = &H00000040
        SYMFLAG_LOCAL = &H00000080
        SYMFLAG_CONSTANT = &H00000100
        SYMFLAG_EXPORT = &H00000200
        SYMFLAG_FORWARDER = &H00000400
        SYMFLAG_FUNCTION = &H00000800
        SYMFLAG_VIRTUAL = &H00001000
        SYMFLAG_THUNK = &H00002000
        SYMFLAG_TLSREL = &H00004000
        SYMFLAG_SLOT = &H00008000&
        SYMFLAG_ILREL = &H00010000
        SYMFLAG_METADATA = &H00020000
        SYMFLAG_CLR_TOKEN = &H00040000
        SYMFLAG_NULL = &H00080000
        SYMFLAG_FUNC_NO_RETURN = &H00100000
        SYMFLAG_SYNTHETIC_ZEROBASE = &H00200000
        SYMFLAG_PUBLIC_CODE = &H00400000
        SYMFLAG_REGREL_ALIASINDIR = &H00800000
        SYMFLAG_FIXUP_ARM64X = &H01000000
        SYMFLAG_GLOBAL = &H02000000
    '  this resets SymNext/Prev to the beginning
    '  of the module passed in the address field
        SYMFLAG_RESET = &H80000000
    End Enum
    
    Public Enum SYM_TYPE
        SymNone = 0
        SymCoff
        SymCv
        SymPdb
        SymExport
        SymDeferred
        SymSym   ' .sym file
        SymDia
        SymVirtual
        NumSymTypes
    End Enum
    
    Public Type IMAGEHLP_SYMBOL64
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_SYMBOL64)
        Address As LongLong ' virtual address including dll base address
        Size As Long ' estimated size of symbol, can be zero
        Flags As Long ' info about the symbols, see the SYMF defines
        MaxNameLength As Long ' maximum size of symbol name in 'Name'
        Name(0 To MAX_SYM_NAME) As Byte ' symbol name (null terminated string)
    End Type
    
    Public Type IMAGEHLP_SYMBOL64_PACKAGE
        sym As IMAGEHLP_SYMBOL64
        name(0 To (MAX_SYM_NAME)) As Byte
    End Type
    
    Public Type IMAGEHLP_SYMBOLW64
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_SYMBOL64)
        Address As LongLong ' virtual address including dll base address
        Size As Long ' estimated size of symbol, can be zero
        Flags As Long ' info about the symbols, see the SYMF defines
        MaxNameLength As Long ' maximum size of symbol name in 'Name'
        Name(0 To MAX_SYM_NAME) As Integer ' symbol name (null terminated string)
    End Type
    
    Public Type IMAGEHLP_SYMBOLW64_PACKAGE
        sym As IMAGEHLP_SYMBOL64
        name(0 To (MAX_SYM_NAME)) As Integer
    End Type
    
    #If Win64 Then
    Public Type IMAGEHLP_SYMBOL
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_SYMBOL64)
        Address As LongLong ' virtual address including dll base address
        Size As Long ' estimated size of symbol, can be zero
        Flags As Long ' info about the symbols, see the SYMF defines
        MaxNameLength As Long ' maximum size of symbol name in 'Name'
        Name(0 To MAX_SYM_NAME) As Byte ' symbol name (null terminated string)
    End Type
    
    Public Type IMAGEHLP_SYMBOL_PACKAGE
        sym As IMAGEHLP_SYMBOL
        name(0 To (MAX_SYM_NAME)) As Byte
    End Type
    
    Public Type IMAGEHLP_SYMBOLW
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_SYMBOL64)
        Address As LongLong ' virtual address including dll base address
        Size As Long ' estimated size of symbol, can be zero
        Flags As Long ' info about the symbols, see the SYMF defines
        MaxNameLength As Long ' maximum size of symbol name in 'Name'
        Name(0 To MAX_SYM_NAME) As Integer ' symbol name (null terminated string)
    End Type
    
    Public Type IMAGEHLP_SYMBOLW_PACKAGE
        sym As IMAGEHLP_SYMBOL
        name(0 To (MAX_SYM_NAME)) As Integer
    End Type
    #Else
    Public Type IMAGEHLP_SYMBOL
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_SYMBOL64)
        Address As Long ' virtual address including dll base address
        Size As Long ' estimated size of symbol, can be zero
        Flags As Long ' info about the symbols, see the SYMF defines
        MaxNameLength As Long ' maximum size of symbol name in 'Name'
        Name(0 To MAX_SYM_NAME) As Byte ' symbol name (null terminated string)
    End Type
    
    Public Type IMAGEHLP_SYMBOL_PACKAGE
        sym As IMAGEHLP_SYMBOL
        name(0 To (MAX_SYM_NAME)) As Byte
    End Type
    
    Public Type IMAGEHLP_SYMBOLW
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_SYMBOL64)
        Address As Long ' virtual address including dll base address
        Size As Long ' estimated size of symbol, can be zero
        Flags As Long ' info about the symbols, see the SYMF defines
        MaxNameLength As Long ' maximum size of symbol name in 'Name'
        Name(0 To MAX_SYM_NAME) As Integer ' symbol name (null terminated string)
    End Type
    
    Public Type IMAGEHLP_SYMBOLW_PACKAGE
        sym As IMAGEHLP_SYMBOL
        name(0 To (MAX_SYM_NAME)) As Integer
    End Type
    #End If
    
    'Alias IMAGEHLP_MODULE64 As IMAGEHLP_MODULEW64
    Public Type IMAGEHLP_MODULE64
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_MODULE64)
        BaseOfImage As LongLong ' base load address of module
        ImageSize As Long ' virtual size of the loaded module
        TimeDateStamp As Long ' date/time stamp from pe header
        CheckSum As Long ' checksum from the pe header
        NumSyms As Long ' number of symbols in the symbol table
        SymType As SYM_TYPE ' type of symbols loaded
        ModuleName(0 To 31) As Integer ' module name
        ImageName(0 To 255) As Integer ' image name
        LoadedImageName(0 To 255) As Integer ' symbol file name
        ' new elements: 07-Jun-2002
        LoadedPdbName(0 To 255) As Integer ' pdb file name
        CVSig As Long ' Signature of the CV record in the debug directories
        CVData(0 To (MAX_PATH * 3 - 1)) As Integer ' Contents of the CV record
        PdbSig As Long ' Signature of PDB
        PdbSig70 As UUID ' Signature of PDB (VC 7 and up)
        PdbAge As Long ' DBI age of pdb
        PdbUnmatched As BOOL ' loaded an unmatched pdb
        DbgUnmatched As BOOL ' loaded an unmatched dbg
        LineNumbers As BOOL ' we have line number information
        GlobalSymbols As BOOL ' we have internal symbol information
        TypeInfo As BOOL ' we have type information
        ' new elements: 17-Dec-2003
        SourceIndexed As BOOL ' pdb supports source server
        Publics As BOOL ' contains public symbols
        ' new element: 15-Jul-2009
        MachineType As Long ' IMAGE_FILE_MACHINE_XXX from ntimage.h and winnt.h
        Reserved As Long ' Padding - don't remove.
    End Type
    Public Type IMAGEHLP_MODULE64_EX
        Module As IMAGEHLP_MODULE64
        RegionFlags As DbgModuleRegionFlags ' Region Search Flags - IMAGEHLP_MODULE_REGION_XXX
    End Type
    Public Type IMAGEHLP_MODULEW64
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_MODULE64)
        BaseOfImage As LongLong ' base load address of module
        ImageSize As Long ' virtual size of the loaded module
        TimeDateStamp As Long ' date/time stamp from pe header
        CheckSum As Long ' checksum from the pe header
        NumSyms As Long ' number of symbols in the symbol table
        SymType As SYM_TYPE ' type of symbols loaded
        ModuleName(0 To 31) As Integer ' module name
        ImageName(0 To 255) As Integer ' image name
        LoadedImageName(0 To 255) As Integer ' symbol file name
        ' new elements: 07-Jun-2002
        LoadedPdbName(0 To 255) As Integer ' pdb file name
        CVSig As Long ' Signature of the CV record in the debug directories
        CVData(0 To (MAX_PATH * 3 - 1)) As Integer ' Contents of the CV record
        PdbSig As Long ' Signature of PDB
        PdbSig70 As UUID ' Signature of PDB (VC 7 and up)
        PdbAge As Long ' DBI age of pdb
        PdbUnmatched As BOOL ' loaded an unmatched pdb
        DbgUnmatched As BOOL ' loaded an unmatched dbg
        LineNumbers As BOOL ' we have line number information
        GlobalSymbols As BOOL ' we have internal symbol information
        TypeInfo As BOOL ' we have type information
        ' new elements: 17-Dec-2003
        SourceIndexed As BOOL ' pdb supports source server
        Publics As BOOL ' contains public symbols
        ' new element: 15-Jul-2009
        MachineType As Long ' IMAGE_FILE_MACHINE_XXX from ntimage.h and winnt.h
        Reserved As Long ' Padding - don't remove.
    End Type
    Public Type IMAGEHLP_MODULEW64_EX
        Module As IMAGEHLP_MODULEW64
        RegionFlags As DbgModuleRegionFlags ' Region Search Flags - IMAGEHLP_MODULE_REGION_XXX
    End Type
    Public Enum DbgModuleRegionFlags
        IMAGEHLP_MODULE_REGION_DLLBASE = &H01
        IMAGEHLP_MODULE_REGION_DLLRANGE = &H02
        IMAGEHLP_MODULE_REGION_ADDITIONAL = &H04
        IMAGEHLP_MODULE_REGION_JIT = &H08
        IMAGEHLP_MODULE_REGION_ALL = &HFF
    End Enum
    
    #If Win64 Then
    Public Type IMAGEHLP_MODULE
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_MODULE64)
        BaseOfImage As LongLong ' base load address of module
        ImageSize As Long ' virtual size of the loaded module
        TimeDateStamp As Long ' date/time stamp from pe header
        CheckSum As Long ' checksum from the pe header
        NumSyms As Long ' number of symbols in the symbol table
        SymType As SYM_TYPE ' type of symbols loaded
        ModuleName(0 To 31) As Integer ' module name
        ImageName(0 To 255) As Integer ' image name
        LoadedImageName(0 To 255) As Integer ' symbol file name
        ' new elements: 07-Jun-2002
        LoadedPdbName(0 To 255) As Integer ' pdb file name
        CVSig As Long ' Signature of the CV record in the debug directories
        CVData(0 To (MAX_PATH * 3 - 1)) As Integer ' Contents of the CV record
        PdbSig As Long ' Signature of PDB
        PdbSig70 As UUID ' Signature of PDB (VC 7 and up)
        PdbAge As Long ' DBI age of pdb
        PdbUnmatched As BOOL ' loaded an unmatched pdb
        DbgUnmatched As BOOL ' loaded an unmatched dbg
        LineNumbers As BOOL ' we have line number information
        GlobalSymbols As BOOL ' we have internal symbol information
        TypeInfo As BOOL ' we have type information
        ' new elements: 17-Dec-2003
        SourceIndexed As BOOL ' pdb supports source server
        Publics As BOOL ' contains public symbols
        ' new element: 15-Jul-2009
        MachineType As Long ' IMAGE_FILE_MACHINE_XXX from ntimage.h and winnt.h
        Reserved As Long ' Padding - don't remove.
    End Type
    Public Type IMAGEHLP_MODULEW
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_MODULE64)
        BaseOfImage As LongLong ' base load address of module
        ImageSize As Long ' virtual size of the loaded module
        TimeDateStamp As Long ' date/time stamp from pe header
        CheckSum As Long ' checksum from the pe header
        NumSyms As Long ' number of symbols in the symbol table
        SymType As SYM_TYPE ' type of symbols loaded
        ModuleName(0 To 31) As Integer ' module name
        ImageName(0 To 255) As Integer ' image name
        LoadedImageName(0 To 255) As Integer ' symbol file name
        ' new elements: 07-Jun-2002
        LoadedPdbName(0 To 255) As Integer ' pdb file name
        CVSig As Long ' Signature of the CV record in the debug directories
        CVData(0 To (MAX_PATH * 3 - 1)) As Integer ' Contents of the CV record
        PdbSig As Long ' Signature of PDB
        PdbSig70 As UUID ' Signature of PDB (VC 7 and up)
        PdbAge As Long ' DBI age of pdb
        PdbUnmatched As BOOL ' loaded an unmatched pdb
        DbgUnmatched As BOOL ' loaded an unmatched dbg
        LineNumbers As BOOL ' we have line number information
        GlobalSymbols As BOOL ' we have internal symbol information
        TypeInfo As BOOL ' we have type information
        ' new elements: 17-Dec-2003
        SourceIndexed As BOOL ' pdb supports source server
        Publics As BOOL ' contains public symbols
        ' new element: 15-Jul-2009
        MachineType As Long ' IMAGE_FILE_MACHINE_XXX from ntimage.h and winnt.h
        Reserved As Long ' Padding - don't remove.
    End Type
    Public Type IMAGEHLP_MODULE_EX
        Module As IMAGEHLP_MODULE
        RegionFlags As DbgModuleRegionFlags ' Region Search Flags - IMAGEHLP_MODULE_REGION_XXX
    End Type
    #Else
    Public Type IMAGEHLP_MODULE
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_MODULE)
        BaseOfImage As Long ' base load address of module
        ImageSize As Long ' virtual size of the loaded module
        TimeDateStamp As Long ' date/time stamp from pe header
        CheckSum As Long ' checksum from the pe header
        NumSyms As Long ' number of symbols in the symbol table
        SymType As SYM_TYPE ' type of symbols loaded
        ModuleName(0 To 31) As Integer ' module name
        ImageName(0 To 255) As Integer ' image name
        LoadedImageName(0 To 255) As Integer ' symbol file name
    End Type
    Public Type IMAGEHLP_MODULEW
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_MODULE)
        BaseOfImage As Long ' base load address of module
        ImageSize As Long ' virtual size of the loaded module
        TimeDateStamp As Long ' date/time stamp from pe header
        CheckSum As Long ' checksum from the pe header
        NumSyms As Long ' number of symbols in the symbol table
        SymType As SYM_TYPE ' type of symbols loaded
        ModuleName(0 To 31) As Integer ' module name
        ImageName(0 To 255) As Integer ' image name
        LoadedImageName(0 To 255) As Integer ' symbol file name
    End Type
    #End If
    
    Public Type IMAGEHLP_LINE64
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_LINE64)
        Key As LongPtr ' internal
        LineNumber As Long ' line number in file
        FileName As LongPtr ' full filename
        Address As LongLong ' first instruction of line
    End Type
    
    Public Type IMAGEHLP_LINEW64
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_LINE64)
        Key As LongPtr ' internal
        LineNumber As Long ' line number in file
        FileName As LongPtr ' full filename
        Address As LongLong ' first instruction of line
    End Type
    
    #If Win64 Then
    Public Type IMAGEHLP_LINE
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_LINE64)
        Key As LongPtr ' internal
        LineNumber As Long ' line number in file
        FileName As LongPtr ' full filename
        Address As LongLong ' first instruction of line
    End Type
    Public Type IMAGEHLP_LINEW
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_LINE64)
        Key As LongPtr ' internal
        LineNumber As Long ' line number in file
        FileName As LongPtr ' full filename
        Address As LongLong ' first instruction of line
    End Type
    #Else
    Public Type IMAGEHLP_LINE
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_LINE)
        Key As LongPtr ' internal
        LineNumber As Long ' line number in file
        FileName As LongPtr ' full filename
        Address As Long ' first instruction of line
    End Type
    Public Type IMAGEHLP_LINEW
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_LINE64)
        Key As LongPtr ' internal
        LineNumber As Long ' line number in file
        FileName As LongPtr ' full filename
        Address As LongLong ' first instruction of line
    End Type
    #End If
    
    Public Type SOURCEFILE
        ModBase As LongLong ' base address of loaded module
        FileName As LongPtr ' full filename of source
    End Type
    
    Public Type SOURCEFILEW
        ModBase As LongLong ' base address of loaded module
        FileName As LongPtr ' full filename of source
    End Type
    
    Public Enum DbgSymbolCallbackFlags
        CBA_DEFERRED_SYMBOL_LOAD_START = &H00000001
        CBA_DEFERRED_SYMBOL_LOAD_COMPLETE = &H00000002
        CBA_DEFERRED_SYMBOL_LOAD_FAILURE = &H00000003
        CBA_SYMBOLS_UNLOADED = &H00000004
        CBA_DUPLICATE_SYMBOL = &H00000005
        CBA_READ_MEMORY = &H00000006
        CBA_DEFERRED_SYMBOL_LOAD_CANCEL = &H00000007
        CBA_SET_OPTIONS = &H00000008
        CBA_EVENT = &H00000010
        CBA_DEFERRED_SYMBOL_LOAD_PARTIAL = &H00000020
        CBA_DEBUG_INFO = &H10000000
        CBA_SRCSRV_INFO = &H20000000
        CBA_SRCSRV_EVENT = &H40000000
        CBA_UPDATE_STATUS_BAR = &H50000000
        CBA_ENGINE_PRESENT = &H60000000
        CBA_CHECK_ENGOPT_DISALLOW_NETWORK_PATHS = &H70000000
        CBA_CHECK_ARM_MACHINE_THUMB_TYPE_OVERRIDE = &H80000000
        CBA_XML_LOG = &H90000000
        CBA_MAP_JIT_SYMBOL = &HA0000000
    End Enum
    
    Public Type IMAGEHLP_CBA_READ_MEMORY
        addr As LongLong ' address to read from
        buf As LongPtr ' buffer to read to
        bytes As Long ' amount of bytes to read
        bytesread As LongPtr 'DWORD* ' pointer to store amount of bytes read
    End Type
    
    Public Enum DbgSeverityLevels
        sevInfo = 0
        sevProblem
        sevAttn
        sevFatal
        sevMax  ' unused
    End Enum
    
    Public Const EVENT_SRCSPEW_START  = 100
    Public Const EVENT_SRCSPEW  = 100
    Public Const EVENT_SRCSPEW_END  = 199
    
    Public Type IMAGEHLP_CBA_EVENT
        severity As DbgSeverityLevels ' values from sevInfo to sevFatal
        code As Long ' numerical code IDs the error
        desc As LongPtr ' may contain a text description of the error
        object As LongPtr ' value dependant upon the error code
    End Type
    Public Type IMAGEHLP_CBA_EVENTW
        severity As Long ' values from sevInfo to sevFatal
        code As Long ' numerical code IDs the error
        desc As LongPtr 'PCWSTR ' may contain a text description of the error
        object As LongPtr ' value dependant upon the error code
    End Type
    
    'Alias IMAGEHLP_DEFERRED_SYMBOL_LOAD64 As IMAGEHLP_DEFERRED_SYMBOL_LOADW64
    Public Type IMAGEHLP_DEFERRED_SYMBOL_LOAD64
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_DEFERRED_SYMBOL_LOAD64)
        BaseOfImage As LongLong ' base load address of module
        CheckSum As Long ' checksum from the pe header
        TimeDateStamp As Long ' date/time stamp from pe header
        FileName(0 To (MAX_PATH - 1)) As Integer ' symbols file or image name
        Reparse As Byte ' load failure reparse
        hFile As LongPtr ' file handle, if passed
        Flags As DbgDslFlags '
    End Type
    
    Public Type IMAGEHLP_DEFERRED_SYMBOL_LOADW64
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_DEFERRED_SYMBOL_LOADW64)
        BaseOfImage As LongLong ' base load address of module
        CheckSum As Long ' checksum from the pe header
        TimeDateStamp As Long ' date/time stamp from pe header
        FileName(0 To (MAX_PATH - 1)) As Integer ' symbols file or image name
        Reparse As Byte ' load failure reparse
        hFile As LongPtr ' file handle, if passed
        Flags As DbgDslFlags '
    End Type
    
    Public Enum DbgDslFlags
        DSLFLAG_MISMATCHED_PDB = &H1
        DSLFLAG_MISMATCHED_DBG = &H2
        FLAG_ENGINE_PRESENT = &H4
        FLAG_ENGOPT_DISALLOW_NETWORK_PATHS = &H8
        FLAG_OVERRIDE_ARM_MACHINE_TYPE = &H10
    End Enum
    
    #If Win64 Then
    Public Type IMAGEHLP_DEFERRED_SYMBOL_LOAD
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_DEFERRED_SYMBOL_LOAD64)
        BaseOfImage As LongLong ' base load address of module
        CheckSum As Long ' checksum from the pe header
        TimeDateStamp As Long ' date/time stamp from pe header
        FileName(0 To (MAX_PATH - 1)) As Byte ' symbols file or image name
        Reparse As Byte ' load failure reparse
        hFile As LongPtr ' file handle, if passed
        Flags As DbgDslFlags '
    End Type
    #Else
    Public Type IMAGEHLP_DEFERRED_SYMBOL_LOAD
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_DEFERRED_SYMBOL_LOAD)
        BaseOfImage As Long ' base load address of module
        CheckSum As Long ' checksum from the pe header
        TimeDateStamp As Long ' date/time stamp from pe header
        FileName(0 To (MAX_PATH - 1)) As Byte ' symbols file or image name
        Reparse As Byte ' load failure reparse
        hFile As LongPtr ' file handle, if passed
    End Type
    #End If
    
    Public Type IMAGEHLP_DUPLICATE_SYMBOL64
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_DUPLICATE_SYMBOL64)
        NumberOfDups As Long ' number of duplicates in the Symbol array
        Symbol As LongLong 'PIMAGEHLP_SYMBOL64 ' array of duplicate symbols
        SelectedSymbol As Long ' symbol selected (-1 to start)
    End Type
    
    #If Win64 Then
    Public Type IMAGEHLP_DUPLICATE_SYMBOL
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_DUPLICATE_SYMBOL64)
        NumberOfDups As Long ' number of duplicates in the Symbol array
        Symbol As LongPtr 'PIMAGEHLP_SYMBOL64 ' array of duplicate symbols
        SelectedSymbol As Long ' symbol selected (-1 to start)
    End Type
    #Else
    Public Type IMAGEHLP_DUPLICATE_SYMBOL
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_DUPLICATE_SYMBOL)
        NumberOfDups As Long ' number of duplicates in the Symbol array
        Symbol As LongPtr 'PIMAGEHLP_SYMBOL ' array of duplicate symbols
        SelectedSymbol As Long ' symbol selected (-1 to start)
    End Type
    #End If
    
    Public Type IMAGEHLP_JIT_SYMBOL_MAP
        SizeOfStruct As Long ' set to sizeof(IMAGEHLP_JIT_SYMBOL_MAP)
        Address As LongLong ' address to map to JIT association with an image
        BaseOfImage As LongLong ' base load address (0 == unmapped)
    End Type
    
    Public Declare PtrSafe Function SymSetParentWindow Lib "dbghelp" (ByVal hwnd As LongPtr) As BOOL
    Public Declare PtrSafe Function SymGetParentWindow Lib "dbghelp" (pHwnd As LongPtr) As BOOL
    Public DeclareWide PtrSafe Function SymSetHomeDirectory Lib "dbghelp" Alias "SymSetHomeDirectory" (ByVal hProcess As LongPtr, Optional ByVal dir As String) As LongPtr
    Public Declare PtrSafe Function SymSetHomeDirectoryW Lib "dbghelp" (ByVal hProcess As LongPtr, Optional ByVal dir As LongPtr) As LongPtr
    Public DeclareWide PtrSafe Function SymGetHomeDirectory Lib "dbghelp" Alias "SymGetHomeDirectory" (ByVal hProcess As LongPtr, ByVal dir As String, ByVal size As LongPtr) As LongPtr
    Public Declare PtrSafe Function SymGetHomeDirectoryW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal dir As LongPtr, ByVal size As LongPtr) As LongPtr
           
    Public Enum IMAGEHLP_HD_TYPE
        hdBase = 0 ' root directory for dbghelp
        hdSym = 1 ' where symbols are stored
        hdSrc = 2 ' where source is stored
        hdMax = 3 ' end marker
    End Enum
    
    Public Type OMAP
        rva As Long
        rvaTo As Long
    End Type
    
    Public Declare PtrSafe Function SymGetOmaps Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, OmapTo As LongPtr, cOmapTo As LongLong, OmapFrom As LongPtr, cOmapFrom As LongLong) As BOOL
    
    Public Enum DbgSymOptionFlags
        SYMOPT_CASE_INSENSITIVE = &H00000001
        SYMOPT_UNDNAME = &H00000002
        SYMOPT_DEFERRED_LOADS = &H00000004
        SYMOPT_NO_CPP = &H00000008
        SYMOPT_LOAD_LINES = &H00000010
        SYMOPT_OMAP_FIND_NEAREST = &H00000020
        SYMOPT_LOAD_ANYTHING = &H00000040
        SYMOPT_IGNORE_CVREC = &H00000080
        SYMOPT_NO_UNQUALIFIED_LOADS = &H00000100
        SYMOPT_FAIL_CRITICAL_ERRORS = &H00000200
        SYMOPT_EXACT_SYMBOLS = &H00000400
        SYMOPT_ALLOW_ABSOLUTE_SYMBOLS = &H00000800
        SYMOPT_IGNORE_NT_SYMPATH = &H00001000
        SYMOPT_INCLUDE_32BIT_MODULES = &H00002000
        SYMOPT_PUBLICS_ONLY = &H00004000
        SYMOPT_NO_PUBLICS = &H00008000&
        SYMOPT_AUTO_PUBLICS = &H00010000
        SYMOPT_NO_IMAGE_SEARCH = &H00020000
        SYMOPT_SECURE = &H00040000
        SYMOPT_NO_PROMPTS = &H00080000
        SYMOPT_OVERWRITE = &H00100000
        SYMOPT_IGNORE_IMAGEDIR = &H00200000
        SYMOPT_FLAT_DIRECTORY = &H00400000
        SYMOPT_FAVOR_COMPRESSED = &H00800000
        SYMOPT_ALLOW_ZERO_ADDRESS = &H01000000
        SYMOPT_DISABLE_SYMSRV_AUTODETECT = &H02000000
        SYMOPT_READONLY_CACHE = &H04000000
        SYMOPT_SYMPATH_LAST = &H08000000
        SYMOPT_DISABLE_FAST_SYMBOLS = &H10000000
        SYMOPT_DISABLE_SYMSRV_TIMEOUT = &H20000000
        SYMOPT_DISABLE_SRVSTAR_ON_STARTUP = &H40000000
        SYMOPT_DEBUG = &H80000000
    End Enum
    
    Public Enum IMAGEHLP_EXTENDED_OPTIONS
        SYMOPT_EX_DISABLEACCESSTIMEUPDATE  ' Disable File Last Access Time on Symbols
        SYMOPT_EX_LASTVALIDDEBUGDIRECTORY  ' For entries with multiple debug directories: prefer the last to the first
        SYMOPT_EX_NOIMPLICITPATTERNSEARCH  ' For SymEnum* APIs: never implicitly run a pattern search without explicit pattern characters
        SYMOPT_EX_NEVERLOADSYMBOLS  ' Never try to load and parse symbols
        SYMOPT_EX_MAX   ' Unused
    End Enum
    
    Public Declare PtrSafe Function SymSetOptions Lib "dbghelp" (ByVal SymOptions As DbgSymOptionFlags) As DbgSymOptionFlags
    Public Declare PtrSafe Function SymGetOptions Lib "dbghelp" () As DbgSymOptionFlags
    Public Declare PtrSafe Function SymCleanup Lib "dbghelp" (ByVal hProcess As LongPtr) As BOOL
    Public Declare PtrSafe Function SymGetExtendedOption Lib "dbghelp" (ByVal option As IMAGEHLP_EXTENDED_OPTIONS) As BOOL
    Public Declare PtrSafe Function SymSetExtendedOption Lib "dbghelp" (ByVal option As IMAGEHLP_EXTENDED_OPTIONS, ByVal value As BOOL) As BOOL
    Public Declare PtrSafe Function SymMatchStringA Lib "dbghelp" (ByVal strng As String, ByVal expression As String, ByVal fCase As BOOL) As BOOL
    Public Declare PtrSafe Function SymMatchStringW Lib "dbghelp" (ByVal strng As LongPtr, ByVal expression As LongPtr, ByVal fCase As BOOL) As BOOL
    Public DeclareWide PtrSafe Function SymMatchString Lib "dbghelp" Alias "SymMatchStringW" (ByVal strng As String, ByVal expression As String, ByVal fCase As BOOL) As BOOL
    ' typedef BOOL
    ' (CALLBACK *PSYM_ENUMSOURCEFILES_CALLBACK)(
        ' _In_ PSOURCEFILE pSourceFile,
        ' _In_opt_ PVOID UserContext
        ' );    
    ' typedef BOOL
    ' (CALLBACK *PSYM_ENUMSOURCEFILES_CALLBACKW)(
        ' _In_ PSOURCEFILEW pSourceFile,
        ' _In_opt_ PVOID UserContext
        ' );
    Public DeclareWide PtrSafe Function SymEnumSourceFiles Lib "dbghelp" Alias "SymEnumSourceFilesW" (ByVal hProcess As LongPtr, ByVal ModBase As LongPtr, ByVal Mask As String, ByVal cbSrcFiles As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public Declare PtrSafe Function SymEnumSourceFilesW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal ModBase As LongPtr, ByVal Mask As LongPtr, ByVal cbSrcFiles As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public DeclareWide PtrSafe Function SymEnumerateModules64 Lib "dbghelp" Alias "SymEnumerateModulesW64" (ByVal hProcess As LongPtr, ByVal EnumModulesCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public Declare PtrSafe Function SymEnumerateModulesW64 Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal EnumModulesCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    #If Win64 Then
    Public DeclareWide PtrSafe Function SymEnumerateModules Lib "dbghelp" Alias "SymEnumerateModulesW64" (ByVal hProcess As LongPtr, ByVal EnumModulesCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    #Else
    Public DeclareWide PtrSafe Function SymEnumerateModules Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal EnumModulesCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    #End If
    
    Public Delegate Function EnumerateLoadedModulesProc (ByVal ModuleName As LongPtr, ByVal ModuleBase As Long, ByVal ModuleSize As Long, ByVal UserContext As LongPtr) As BOOL
    Public Delegate Function EnumerateLoadedModulesProc64 (ByVal ModuleName As LongPtr, ByVal ModuleBase As LongLong, ByVal ModuleSize As Long, ByVal UserContext As LongPtr) As BOOL
    Public Delegate Function EnumerateLoadedModulesProcW64 (ByVal ModuleName As LongPtr, ByVal ModuleBase As LongLong, ByVal ModuleSize As Long, ByVal UserContext As LongPtr) As BOOL
            
    
    Public DeclareWide PtrSafe Function EnumerateLoadedModulesEx Lib "dbghelp" Alias "EnumerateLoadedModulesExW" (ByVal hProcess As LongPtr, ByVal EnumModulesCallback As EnumerateLoadedModulesProcW64, Optional ByVal UserContext As LongPtr) As BOOL
    Public Declare PtrSafe Function EnumerateLoadedModulesExW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal EnumModulesCallback As EnumerateLoadedModulesProcW64, Optional ByVal UserContext As LongPtr) As BOOL
    Public DeclareWide PtrSafe Function EnumerateLoadedModules64 Lib "dbghelp" Alias "EnumerateLoadedModulesW64" (ByVal hProcess As LongPtr, ByVal EnumModulesCallback As EnumerateLoadedModulesProcW64, Optional ByVal UserContext As LongPtr) As BOOL
    Public Declare PtrSafe Function EnumerateLoadedModulesW64 Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal EnumModulesCallback As EnumerateLoadedModulesProcW64, Optional ByVal UserContext As LongPtr) As BOOL
    #If Win64 Then
    Public DeclareWide PtrSafe Function EnumerateLoadedModules Lib "dbghelp" Alias "EnumerateLoadedModulesW64" (ByVal hProcess As LongPtr, ByVal EnumModulesCallback As EnumerateLoadedModulesProcW64, Optional ByVal UserContext As LongPtr) As BOOL
    #Else
    Public DeclareWide PtrSafe Function EnumerateLoadedModules Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal EnumModulesCallback As EnumerateLoadedModulesProc, Optional ByVal UserContext As LongPtr) As BOOL
    #End If
    Public Declare PtrSafe Function SymFunctionTableAccess64 Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal AddrBase As LongLong) As LongPtr
    Public Declare PtrSafe Function SymFunctionTableAccess64AccessRoutines Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal AddrBase As LongLong, Optional ByVal ReadMemoryRoutine As LongPtr, Optional ByVal GetModuleBaseRoutine As LongPtr) As LongPtr
    #If Win64 Then
    Public Declare PtrSafe Function SymFunctionTableAccess Lib "dbghelp" Alias "SymFunctionTableAccess64" (ByVal hProcess As LongPtr, ByVal AddrBase As LongLong) As LongPtr
    #Else
    Public Declare PtrSafe Function SymFunctionTableAccess Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal AddrBase As Long) As LongPtr
    #End If
    Public Declare PtrSafe Function SymGetUnwindInfo Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Address As LongLong, Buffer As Any, Size As Long) As BOOL
    Public DeclareWide PtrSafe Function SymGetModuleInfo64 Lib "dbghelp" Alias "SymGetModuleInfoW64" (ByVal hProcess As LongPtr, ByVal qwAddr As LongLong, ModuleInfo As IMAGEHLP_MODULE64) As BOOL
    Public Declare PtrSafe Function SymGetModuleInfoW64 Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal qwAddr As LongLong, ModuleInfo As IMAGEHLP_MODULEW64) As BOOL
    #If Win64 Then
    Public DeclareWide PtrSafe Function SymGetModuleInfo Lib "dbghelp" Alias "SymGetModuleInfoW64" (ByVal hProcess As LongPtr, ByVal qwAddr As LongLong, ModuleInfo As IMAGEHLP_MODULE) As BOOL
    Public Declare PtrSafe Function SymGetModuleInfoW Lib "dbghelp" Alias "SymGetModuleInfoW64" (ByVal hProcess As LongPtr, ByVal qwAddr As LongLong, ModuleInfo As IMAGEHLP_MODULEW) As BOOL
    #Else
    Public DeclareWide PtrSafe Function SymGetModuleInfo Lib "dbghelp" Alias "SymGetModuleInfoW" (ByVal hProcess As LongPtr, ByVal dwAddr As Long, ModuleInfo As IMAGEHLP_MODULE) As BOOL
    Public Declare PtrSafe Function SymGetModuleInfoW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal dwAddr As Long, ModuleInfo As IMAGEHLP_MODULEW) As BOOL
    #End If
    Public Declare PtrSafe Function SymGetModuleBase64 Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal qwAddr As LongLong) As LongLong
    #If Win64 Then
    Public Declare PtrSafe Function SymGetModuleBase Lib "dbghelp" Alias "SymGetModuleBase64" (ByVal hProcess As LongPtr, ByVal qwAddr As LongLong) As LongLong
    #Else
    Public Declare PtrSafe Function SymGetModuleBase Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal dwAddr As Long) As Long
    #End If
    
    Public Type SRCCODEINFO
        SizeOfStruct As Long ' set to sizeof(SRCCODEINFO)
        Key As LongPtr ' not used
        ModBase As LongLong ' base address of module this applies to
        Obj(0 To (MAX_PATH - 1)) As Integer ' the object file within the module
        FileName(0 To (MAX_PATH - 1)) As Integer ' full filename
        LineNumber As Long ' line number in file
        Address As LongLong ' first instruction of line
    End Type
    Public Type SRCCODEINFOW
        SizeOfStruct As Long ' set to sizeof(SRCCODEINFO)
        Key As LongPtr ' not used
        ModBase As LongLong ' base address of module this applies to
        Obj(0 To (MAX_PATH - 1)) As Integer ' the object file within the module
        FileName(0 To (MAX_PATH - 1)) As Integer ' full filename
        LineNumber As Long ' line number in file
        Address As LongLong ' first instruction of line
    End Type
    ' typedef BOOL
    ' (CALLBACK *PSYM_ENUMLINES_CALLBACK)(
        ' _In_ PSRCCODEINFO LineInfo,
        ' _In_opt_ PVOID UserContext
        ' );
    ' typedef BOOL
    ' (CALLBACK *PSYM_ENUMLINES_CALLBACKW)(
        ' _In_ PSRCCODEINFOW LineInfo,
        ' _In_opt_ PVOID UserContext
        ' );
    Public DeclareWide PtrSafe Function SymEnumLines Lib "dbghelp" Alias "SymEnumLinesW" (ByVal hProcess As LongPtr, ByVal Base As LongLong, ByVal Obj As String, ByVal File As String, ByVal EnumLinesCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public Declare PtrSafe Function SymEnumLinesW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Base As LongLong, ByVal Obj As LongPtr, ByVal File As LongPtr, ByVal EnumLinesCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public DeclareWide PtrSafe Function SymGetLineFromAddr64 Lib "dbghelp" Alias "SymGetLineFromAddrW64" (ByVal hProcess As LongPtr, ByVal dwAddr As LongLong, pdwDisplacement As Long, Line64 As IMAGEHLP_LINE64) As BOOL
    Public Declare PtrSafe Function SymGetLineFromAddrW64 Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal dwAddr As LongLong, pdwDisplacement As Long, Line64 As IMAGEHLP_LINEW64) As BOOL
    Public DeclareWide PtrSafe Function SymGetLineFromInlineContext Lib "dbghelp" Alias "SymGetLineFromInlineContextW" (ByVal hProcess As LongPtr, ByVal dwAddr As LongLong, ByVal InlineContext As Long, ByVal qwModuleBaseAddress As LongLong, pdwDisplacement As Long, Line64 As IMAGEHLP_LINE64) As BOOL
    Public Declare PtrSafe Function SymGetLineFromInlineContextW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal dwAddr As LongLong, ByVal InlineContext As Long, ByVal qwModuleBaseAddress As LongLong, pdwDisplacement As Long, Line64 As IMAGEHLP_LINEW64) As BOOL
    Public DeclareWide PtrSafe Function SymEnumSourceLines Lib "dbghelp" Alias "SymEnumSourceLinesW" (ByVal hProcess As LongPtr, ByVal Base As LongLong, ByVal Obj As String, ByVal File As String, ByVal Line As Long, ByVal Flags As DbgEnumSourceLineFlags, ByVal EnumLinesCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public Declare PtrSafe Function SymEnumSourceLinesW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Base As LongLong, ByVal Obj As LongPtr, ByVal File As LongPtr, ByVal Line As Long, ByVal Flags As DbgEnumSourceLineFlags, ByVal EnumLinesCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public Declare PtrSafe Function SymAddrIncludeInlineTrace Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Address As LongLong) As Long
    
    Public Enum DbgSymInlineCmpFlags
        SYM_INLINE_COMP_ERROR = 0
        SYM_INLINE_COMP_IDENTICAL = 1
        SYM_INLINE_COMP_STEPIN = 2
        SYM_INLINE_COMP_STEPOUT = 3
        SYM_INLINE_COMP_STEPOVER = 4
        SYM_INLINE_COMP_DIFFERENT = 5
    End Enum
    
    Public Declare PtrSafe Function SymCompareInlineTrace Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Address1 As LongLong, ByVal InlineContext1 As Long, ByVal RetAddress1 As LongLong, ByVal Address2 As LongLong, ByVal RetAddress2 As LongLong) As DbgSymInlineCmpFlags
    Public Declare PtrSafe Function SymQueryInlineTrace Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal StartAddress As LongLong, ByVal StartContext As Long, ByVal StartRetAddress As LongLong, ByVal CurAddress As LongLong, CurContext As Long, CurFrameIndex As Long) As BOOL
    
    Public Enum DbgEnumSourceLineFlags
        ESLFLAG_FULLPATH = &H00000001
        ESLFLAG_NEAREST = &H00000002
        ESLFLAG_PREV = &H00000004
        ESLFLAG_NEXT = &H00000008
        ESLFLAG_INLINE_SITE = &H00000010
    End Enum
    
    #If Win64 Then
    Public Declare PtrSafe Function SymGetLineFromAddr Lib "dbghelp" Alias "SymGetLineFromAddrW64" (ByVal hProcess As LongPtr, ByVal dwAddr As LongLong, pdwDisplacement As Long, Line64 As IMAGEHLP_LINEW64) As BOOL
    Public Declare PtrSafe Function SymGetLineFromAddrW Lib "dbghelp" Alias "SymGetLineFromAddrW64" (ByVal hProcess As LongPtr, ByVal dwAddr As LongLong, pdwDisplacement As Long, Line64 As IMAGEHLP_LINEW64) As BOOL
    #Else
    Public Declare PtrSafe Function SymGetLineFromAddr Lib "dbghelp" Alias "SymGetLineFromAddrW" (ByVal hProcess As LongPtr, ByVal dwAddr As LongLong, pdwDisplacement As Long, Line As IMAGEHLP_LINE) As BOOL
    Public Declare PtrSafe Function SymGetLineFromAddrW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal dwAddr As LongLong, pdwDisplacement As Long, Line As IMAGEHLP_LINEW) As BOOL
    #End If
     
    Public DeclareWide PtrSafe Function SymGetLineFromName64 Lib "dbghelp" Alias "SymGetLineFromNameW64" (ByVal hProcess As LongPtr, ByVal ModuleName As String, ByVal FileName As String, ByVal dwLineNumber As Long, plDisplacement As Long, Line As IMAGEHLP_LINEW64) As BOOL
    Public Declare PtrSafe Function SymGetLineFromNameW64 Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal ModuleName As LongPtr, ByVal FileName As LongPtr, ByVal dwLineNumber As Long, plDisplacement As Long, Line As IMAGEHLP_LINEW64) As BOOL
    #If Win64 Then
    Public DeclareWide PtrSafe Function SymGetLineFromName Lib "dbghelp" Alias "SymGetLineFromNameW64" (ByVal hProcess As LongPtr, ByVal ModuleName As String, ByVal FileName As String, ByVal dwLineNumber As Long, plDisplacement As Long, Line As IMAGEHLP_LINEW64) As BOOL
    #Else
    Public DeclareWide PtrSafe Function SymGetLineFromName Lib "dbghelp" Alias "SymGetLineFromNameW" (ByVal hProcess As LongPtr, ByVal ModuleName As String, ByVal FileName As String, ByVal dwLineNumber As Long, plDisplacement As Long, Line As IMAGEHLP_LINE) As BOOL
    #End If
    
    Public DeclareWide PtrSafe Function SymGetLineNext64 Lib "dbghelp" Alias "SymGetLineNextW64" (ByVal hProcess As LongPtr, Line As IMAGEHLP_LINE) As BOOL
    Public Declare PtrSafe Function SymGetLineNextW64 Lib "dbghelp" (ByVal hProcess As LongPtr, Line As IMAGEHLP_LINEW64) As BOOL
    #If Win64 Then
    Public DeclareWide PtrSafe Function SymGetLineNext Lib "dbghelp" Alias "SymGetLineNextW64" (ByVal hProcess As LongPtr, Line As IMAGEHLP_LINE) As BOOL
    Public DeclareWide PtrSafe Function SymGetLineNextW Lib "dbghelp" Alias "SymGetLineNextW64" (ByVal hProcess As LongPtr, Line As IMAGEHLP_LINEW64) As BOOL
    #Else
    Public DeclareWide PtrSafe Function SymGetLineNext Lib "dbghelp" Alias "SymGetLineNextW" (ByVal hProcess As LongPtr, Line As IMAGEHLP_LINE) As BOOL
    Public Declare PtrSafe Function SymGetLineNextW Lib "dbghelp" (ByVal hProcess As LongPtr, Line As IMAGEHLP_LINEW) As BOOL
    #End If
    
    Public DeclareWide PtrSafe Function SymGetLinePrev64 Lib "dbghelp" Alias "SymGetLinePrevW64" (ByVal hProcess As LongPtr, Line As IMAGEHLP_LINE) As BOOL
    Public Declare PtrSafe Function SymGetLinePrevW64 Lib "dbghelp" (ByVal hProcess As LongPtr, Line As IMAGEHLP_LINEW64) As BOOL
    #If Win64 Then
    Public DeclareWide PtrSafe Function SymGetLinePrev Lib "dbghelp" Alias "SymGetLinePrevW64" (ByVal hProcess As LongPtr, Line As IMAGEHLP_LINE) As BOOL
    Public DeclareWide PtrSafe Function SymGetLinePrevW Lib "dbghelp" Alias "SymGetLinePrevW64" (ByVal hProcess As LongPtr, Line As IMAGEHLP_LINEW64) As BOOL
    #Else
    Public DeclareWide PtrSafe Function SymGetLinePrev Lib "dbghelp" Alias "SymGetLineNextW" (ByVal hProcess As LongPtr, Line As IMAGEHLP_LINE) As BOOL
    Public Declare PtrSafe Function SymGetLinePrevW Lib "dbghelp" (ByVal hProcess As LongPtr, Line As IMAGEHLP_LINEW) As BOOL
    #End If
    
    Public Declare PtrSafe Function SymGetFileLineOffsets64 Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal ModuleName As String, ByVal FileName As String, Buffer As LongLong, ByVal BufferLines As Long) As Long
    Public DeclareWide PtrSafe Function SymMatchFileName Lib "dbghelp" Alias "SymMatchFileNameW" (ByVal FileName As String, ByVal Match As String, FileNameStop As LongPtr, MatchStop As LongPtr) As BOOL
    Public Declare PtrSafe Function SymMatchFileNameW Lib "dbghelp" (ByVal FileName As LongPtr, ByVal Match As LongPtr, FileNameStop As LongPtr, MatchStop As LongPtr) As BOOL
    Public DeclareWide PtrSafe Function SymGetSourceFile Lib "dbghelp" Alias "SymGetSourceFileW" (ByVal hProcess As LongPtr, ByVal Base As LongLong, ByVal Params As String, ByVal FileSpec As String, ByVal FilePath As String, ByVal Size As Long) As BOOL
    Public Declare PtrSafe Function SymGetSourceFileW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Base As LongLong, ByVal Params As LongPtr, ByVal FileSpec As LongPtr, ByVal FilePath As LongPtr, ByVal Size As Long) As BOOL
    Public DeclareWide PtrSafe Function SymGetSourceFileToken Lib "dbghelp" Alias "SymGetSourceFileTokenW" (ByVal hProcess As LongPtr, ByVal Base As LongLong, ByVal FileSpec As String, Token As LongPtr, Size As Long) As BOOL
    Public Declare PtrSafe Function SymGetSourceFileTokenW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Base As LongLong, ByVal FileSpec As LongPtr, Token As LongPtr, Size As Long) As BOOL
     'BREAK LINE 2549
     
     'RESUME LINE 2623
     
    Public DeclareWide PtrSafe Function SymInitialize Lib "dbghelp" Alias "SymInitializeW" (ByVal hProcess As LongPtr, ByVal UserSearchPath As String, ByVal fInvadeProcess As BOOL) As BOOL
    Public Declare PtrSafe Function SymInitializeW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal UserSearchPath As LongPtr, ByVal fInvadeProcess As BOOL) As BOOL
    Public DeclareWide PtrSafe Function SymGetSearchPath Lib "dbghelp" Alias "SymGetSearchPathW" (ByVal hProcess As LongPtr, ByVal SearchPath As String, ByVal SearchPathLength As Long) As BOOL
    Public Declare PtrSafe Function SymGetSearchPathW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal SearchPath As LongPtr, ByVal SearchPathLength As Long) As BOOL
    Public DeclareWide PtrSafe Function SymSetSearchPath Lib "dbghelp" Alias "SymSetSearchPathW" (ByVal hProcess As LongPtr, ByVal SearchPath As String) As BOOL
    Public Declare PtrSafe Function SymSetSearchPathW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal SearchPath As LongPtr) As BOOL

    Public Enum SymLoadModuleFlags
        SLMFLAG_VIRTUAL = &H1
        SLMFLAG_ALT_INDEX = &H2
        SLMFLAG_NO_SYMBOLS = &H4
    End Enum
    
    Public DeclareWide PtrSafe Function SymLoadModuleEx Lib "dbghelp" Alias "SymLoadModuleExW" (ByVal hProcess As LongPtr, ByVal hFile As LongPtr, ByVal ImageName As String, ByVal ModuleName As String, ByVal BaseOfDll As LongLong, ByVal DllSize As Long, Data As MODLOAD_DATA, ByVal flags As SymLoadModuleFlags) As LongLong
    Public Declare PtrSafe Function SymLoadModuleExW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal hFile As LongPtr, ByVal ImageName As LongPtr, ByVal ModuleName As LongPtr, ByVal BaseOfDll As LongLong, ByVal DllSize As Long, Data As MODLOAD_DATA, ByVal flags As SymLoadModuleFlags) As LongLong
    #If Win64 Then
    Public Declare PtrSafe Function SymUnloadModule Lib "dbghelp" Alias "SymUnloadModule64" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong) As BOOL
    Public Declare PtrSafe Function SymUnDName Lib "dbghelp" Alias "SymUnDName64" (sym As IMAGEHLP_SYMBOL, ByVal UnDecName As String, ByVal UnDecNameLength As Long) As BOOL
    Public Declare PtrSafe Function SymRegisterCallback Lib "dbghelp" Alias "SymRegisterCallbackW64" (ByVal hProcess As LongPtr, ByVal CallbackFunction As LongPtr, ByVal UserContext As LongLong) As BOOL 
    Public Declare PtrSafe Function SymRegisterFunctionEntryCallback Lib "dbghelp" Alias "SymRegisterFunctionEntryCallback64" (ByVal hProcess As LongPtr, ByVal CallbackFunction As LongPtr, ByVal UserContext As LongLong) As BOOL 
    #Else
    Public Declare PtrSafe Function SymUnloadModule Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As Long) As BOOL
    Public Declare PtrSafe Function SymUnDName Lib "dbghelp" (sym As IMAGEHLP_SYMBOL, ByVal UnDecName As String, ByVal UnDecNameLength As Long) As BOOL
    Public Declare PtrSafe Function SymRegisterCallback Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal CallbackFunction As LongPtr, ByVal UserContext As LongLong) As BOOL
    Public Declare PtrSafe Function SymRegisterFunctionEntryCallback Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal CallbackFunction As LongPtr, ByVal UserContext As LongLong) As BOOL
    #End If
    Public Declare PtrSafe Function SymUnloadModule64 Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong) As BOOL
    Public Declare PtrSafe Function SymUnDName64 Lib "dbghelp" (sym As IMAGEHLP_SYMBOL, ByVal UnDecName As String, ByVal UnDecNameLength As Long) As BOOL
    Public Declare PtrSafe Function SymRegisterCallback64 Lib "dbghelp" Alias "SymRegisterCallbackW64" (ByVal hProcess As LongPtr, ByVal CallbackFunction As LongPtr, ByVal UserContext As LongLong) As BOOL
    Public Declare PtrSafe Function SymRegisterCallbackW64 Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal CallbackFunction As LongPtr, ByVal UserContext As LongLong) As BOOL
    Public Declare PtrSafe Function SymRegisterFunctionEntryCallback64 Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal CallbackFunction As LongPtr, ByVal UserContext As LongLong) As BOOL
          
    Public Type IMAGEHLP_SYMBOL_SRC
        sizeofstruct As Long
        type As Long
        file(0 To (MAX_PATH - 1)) As Byte
    End Type
    
    [Description("WARNING: Buffered array substituted for variable length C-style array. LenB is invalid. A SAFEARRAY version is also available for sizes > 4096, MODULE_TYPE_INFO_sa")]
    Public Type MODULE_TYPE_INFO ' AKA TYPTYP
        dataLength As Integer
        leaf As Integer
        data(0 To 4095) As Byte
    End Type
    [Description("WARNING: Cannot be used as-is due to SAFEARRAY substituted for variable length C-style array. Copy length, redim data, then copy to data(0)")]
    Public Type MODULE_TYPE_INFO_sa ' AKA TYPTYP
        dataLength As Integer
        leaf As Integer
        data() As Byte
    End Type

    Public Type SYMBOL_INFO
        SizeOfStruct As Long
        TypeIndex As Long ' Type Index of symbol
        Reserved(0 To 1) As LongLong
        Index As Long
        Size As Long
        ModBase As LongLong ' Base Address of module comtaining this symbol
        Flags As SymbolInfoFlags
        Value As LongLong ' Value of symbol, ValuePresent should be 1
        Address As LongLong ' Address of symbol including base address of module
        Register As Long ' register holding value or pointer to value
        Scope As Long ' scope of the symbol
        Tag As Long ' pdb classification
        NameLen As Long ' Actual length of name
        MaxNameLen As Long
        Name(0 To (MAX_SYM_NAME - 1)) As Integer ' Name of symbol
    End Type
    Public Type SYMBOL_INFOW
        SizeOfStruct As Long
        TypeIndex As Long ' Type Index of symbol
        Reserved(0 To 1) As LongLong
        Index As Long
        Size As Long
        ModBase As LongLong ' Base Address of module comtaining this symbol
        Flags As SymbolInfoFlags
        Value As LongLong ' Value of symbol, ValuePresent should be 1
        Address As LongLong ' Address of symbol including base address of module
        Register As Long ' register holding value or pointer to value
        Scope As Long ' scope of the symbol
        Tag As Long ' pdb classification
        NameLen As Long ' Actual length of name
        MaxNameLen As Long
        Name(0 To (MAX_SYM_NAME - 1)) As Integer ' Name of symbol
    End Type
    
    Public Type SYMBOL_INFO_PACKAGE
        si As SYMBOL_INFOW
        name(0 To (MAX_SYM_NAME)) As Integer
    End Type
    Public Type SYMBOL_INFO_PACKAGEW
        si As SYMBOL_INFOW
        name(0 To (MAX_SYM_NAME)) As Integer
    End Type
    
    Public Type IMAGEHLP_STACK_FRAME
        InstructionOffset As LongLong
        ReturnOffset As LongLong
        FrameOffset As LongLong
        StackOffset As LongLong
        BackingStoreOffset As LongLong
        FuncTableEntry As LongLong
        Params(0 To 3) As LongLong
        Reserved(0 To 4) As LongLong
        Virtual As BOOL
        Reserved2 As Long
    End Type
    
    Public Declare PtrSafe Function SymSetContext Lib "dbghelp" (ByVal hProcess As LongPtr, StackFrame As IMAGEHLP_STACK_FRAME, ByVal Context As LongPtr) As BOOL
    Public Declare PtrSafe Function SymSetScopeFromAddr Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Address As LongLong) As BOOL
    Public Declare PtrSafe Function SymSetScopeFromInlineContext Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Address As LongLong, ByVal InlineContext As Long) As BOOL
    Public Declare PtrSafe Function SymSetScopeFromIndex Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Index As Long) As BOOL
    ' typedef BOOL
    ' (CALLBACK *PSYM_ENUMPROCESSES_CALLBACK)(
        ' _In_ HANDLE hProcess,
        ' _In_ PVOID UserContext
        ' );
    Public Declare PtrSafe Function SymEnumProcesses Lib "dbghelp" (ByVal EnumProcessesCallback As LongPtr, ByVal UserContext As LongPtr) As BOOL
    Public DeclareWide PtrSafe Function SymFromAddr Lib "dbghelp" Alias "SymFromAddrW" (ByVal hProcess As LongPtr, ByVal Address As LongLong, Displacement As LongLong, Symbol As SYMBOL_INFO) As BOOL
    Public Declare PtrSafe Function SymFromAddrW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Address As LongLong, Displacement As LongLong, Symbol As SYMBOL_INFOW) As BOOL
    Public Declare PtrSafe Function SymFromInlineContext Lib "dbghelp" Alias "SymFromInlineContextW" (ByVal hProcess As LongPtr, ByVal Address As LongLong, ByVal InlineContext As Long, Displacement As LongLong, Symbol As SYMBOL_INFO) As BOOL
    Public Declare PtrSafe Function SymFromInlineContextW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Address As LongLong, ByVal InlineContext As Long, Displacement As LongLong, Symbol As SYMBOL_INFOW) As BOOL
    Public Declare PtrSafe Function SymFromToken Lib "dbghelp" Alias "SymFromTokenW" (ByVal hProcess As LongPtr, ByVal Base As LongLong, ByVal Token As Long, Symbol As SYMBOL_INFO) As BOOL
    Public Declare PtrSafe Function SymFromTokentW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Base As LongLong, ByVal Token As Long, Symbol As SYMBOL_INFOW) As BOOL
    Public Declare PtrSafe Function SymNext Lib "dbghelp" Alias "SymNextW" (ByVal hProcess As LongPtr, si As SYMBOL_INFO) As BOOL
    Public Declare PtrSafe Function SymNextW Lib "dbghelp" (ByVal hProcess As LongPtr, siw As SYMBOL_INFOW) As BOOL
    Public Declare PtrSafe Function SymPrev Lib "dbghelp" Alias "SymPrevW" (ByVal hProcess As LongPtr, si As SYMBOL_INFO) As BOOL
    Public Declare PtrSafe Function SymPrevW Lib "dbghelp" (ByVal hProcess As LongPtr, siw As SYMBOL_INFOW) As BOOL
    Public DeclareWide PtrSafe Function SymFromName Lib "dbghelp" Alias "SymFromNameW" (ByVal hProcess As LongPtr, ByVal Name As String, Symbol As SYMBOL_INFO) As BOOL
    Public Declare PtrSafe Function SymFromNameW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Name As LongPtr, Symbol As SYMBOL_INFOW) As BOOL
        
    Public Enum DbgSymEnumOpts
        SYMENUM_OPTIONS_DEFAULT = &H00000001
        SYMENUM_OPTIONS_INLINE = &H00000002
    End Enum
    ' typedef BOOL
    ' (CALLBACK *PSYM_ENUMERATESYMBOLS_CALLBACK)(
        ' _In_ PSYMBOL_INFO pSymInfo,
        ' _In_ ULONG SymbolSize,
        ' _In_opt_ PVOID UserContext
        ' );
    Public DeclareWide PtrSafe Function SymEnumSymbols Lib "dbghelp" Alias "SymEnumSymbolsW" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Mask As String, ByVal EnumSymbolsCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public Declare PtrSafe Function SymEnumSymbolsW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Mask As LongPtr, ByVal EnumSymbolsCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public DeclareWide PtrSafe Function SymEnumSymbolsEx Lib "dbghelp" Alias "SymEnumSymbolsExW" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Mask As String, ByVal EnumSymbolsCallback As LongPtr, ByVal UserContext As LongPtr, ByVal Options As DbgSymEnumOpts) As BOOL
    Public Declare PtrSafe Function SymEnumSymbolsExW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Mask As LongPtr, ByVal EnumSymbolsCallback As LongPtr, ByVal UserContext As LongPtr, ByVal Options As DbgSymEnumOpts) As BOOL
    Public DeclareWide PtrSafe Function SymEnumSymbolsForAddr Lib "dbghelp" Alias "SymEnumSymbolsForAddrW" (ByVal hProcess As LongPtr, ByVal Address As LongLong, ByVal EnumSymbolsCallback As LongPtr, ByVal UserContext As LongPtr) As BOOL
    Public Declare PtrSafe Function SymEnumSymbolsForAddrW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Address As LongLong, ByVal EnumSymbolsCallback As LongPtr, ByVal UserContext As LongPtr) As BOOL
        
    Public Enum DbgSymSearchFlags
        SYMSEARCH_MASKOBJS = &H01  ' used internally to implement other APIs
        SYMSEARCH_RECURSE = &H02  ' recurse scopes
        SYMSEARCH_GLOBALSONLY = &H04  ' search only for global symbols
        SYMSEARCH_ALLITEMS = &H08  ' search for everything in the pdb, not just normal scoped symbols
    End Enum
    
    Public DeclareWide PtrSafe Function SymSearch Lib "dbghelp" Alias "SymSearchW" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Index As Long, ByVal SymTag As Long, ByVal Mask As String, ByVal EnumSymbolsCallback As LongPtr, ByVal UserContext As LongPtr, ByVal Options As DbgSymSearchFlags) As BOOL
    Public Declare PtrSafe Function SymSearchW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Index As Long, ByVal SymTag As Long, ByVal Mask As LongPtr, ByVal EnumSymbolsCallback As LongPtr, ByVal UserContext As LongPtr, ByVal Options As DbgSymSearchFlags) As BOOL
    Public DeclareWide PtrSafe Function SymGetScope Lib "dbghelp" Alias "SymGetScopeW" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Index As Long, Symbol As SYMBOL_INFO) As BOOL
    Public Declare PtrSafe Function SymGetScopeW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Index As Long, Symbol As SYMBOL_INFOW) As BOOL
    Public DeclareWide PtrSafe Function SymFromIndex Lib "dbghelp" Alias "SymFromIndexW" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Index As Long, Symbol As SYMBOL_INFO) As BOOL
    Public Declare PtrSafe Function SymFromIndexW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Index As Long, Symbol As SYMBOL_INFOW) As BOOL
           
    Public Enum IMAGEHLP_SYMBOL_TYPE_INFO
        TI_GET_SYMTAG
        TI_GET_SYMNAME
        TI_GET_LENGTH
        TI_GET_TYPE
        TI_GET_TYPEID
        TI_GET_BASETYPE
        TI_GET_ARRAYINDEXTYPEID
        TI_FINDCHILDREN
        TI_GET_DATAKIND
        TI_GET_ADDRESSOFFSET
        TI_GET_OFFSET
        TI_GET_VALUE
        TI_GET_COUNT
        TI_GET_CHILDRENCOUNT
        TI_GET_BITPOSITION
        TI_GET_VIRTUALBASECLASS
        TI_GET_VIRTUALTABLESHAPEID
        TI_GET_VIRTUALBASEPOINTEROFFSET
        TI_GET_CLASSPARENTID
        TI_GET_NESTED
        TI_GET_SYMINDEX
        TI_GET_LEXICALPARENT
        TI_GET_ADDRESS
        TI_GET_THISADJUST
        TI_GET_UDTKIND
        TI_IS_EQUIV_TO
        TI_GET_CALLING_CONVENTION
        TI_IS_CLOSE_EQUIV_TO
        TI_GTIEX_REQS_VALID
        TI_GET_VIRTUALBASEOFFSET
        TI_GET_VIRTUALBASEDISPINDEX
        TI_GET_IS_REFERENCE
        TI_GET_INDIRECTVIRTUALBASECLASS
        TI_GET_VIRTUALBASETABLETYPE
        TI_GET_OBJECTPOINTERTYPE
        TI_GET_DISCRIMINATEDUNION_TAG_TYPEID
        TI_GET_DISCRIMINATEDUNION_TAG_OFFSET
        TI_GET_DISCRIMINATEDUNION_TAG_RANGESCOUNT
        TI_GET_DISCRIMINATEDUNION_TAG_RANGES
        IMAGEHLP_SYMBOL_TYPE_INFO_MAX
    End Enum
    
    [Description("WARNING: This uses a buffered array in place of a variable C-style array. LenB is invalid. Use TI_FINDCHILDREN_PARAMS_sa for a SAFEARRAY alternate for more IDs.")]
    Public Type TI_FINDCHILDREN_PARAMS
        Count As Long
        Start As Long
        ChildId(0 To 1023) As Long
    End Type
    [Description("WARNING: Cannot be used as-is due to SAFEARRAY. Copy count, redim, then fill ChildId(0) separately.")]
    Public Type TI_FINDCHILDREN_PARAMS_sa
        Count As Long
        Start As Long
        ChildId() As Long
    End Type
       
    Public Type DISCRIMINATEDUNION_TAG_VALUE
        value(0 To 15) As Byte
        valueSizeBytes As Byte
    End Type
    
    [Description("WARNING: This uses a buffered array in place of a variable C-style array. LenB is invalid. Use TI_GET_DISCRIMINATEDUNION_TAG_RANGES_PARAMS_sa for a SAFEARRAY alternate for more IDs.")]
    Public Type TI_GET_DISCRIMINATEDUNION_TAG_RANGES_PARAMS
        Count As Long
        Start As Long
        Range(0 To 1023) As DISCRIMINATEDUNION_TAG_VALUE
    End Type
    [Description("WARNING: Cannot be used as-is due to SAFEARRAY. Copy count, redim, then fill Range(0) separately.")]
    Public Type TI_GET_DISCRIMINATEDUNION_TAG_RANGES_PARAMS_sa
        Count As Long
        Start As Long
        Range() As DISCRIMINATEDUNION_TAG_VALUE
    End Type
    
    Public Declare PtrSafe Function SymGetTypeInfo Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal ModBase As LongLong, ByVal TypeId As Long, ByVal GetType As IMAGEHLP_SYMBOL_TYPE_INFO, pInfo As Any) As BOOL
    
    Public Enum DbgSymGetTypeFlags
        IMAGEHLP_GET_TYPE_INFO_UNCACHED = &H00000001
        IMAGEHLP_GET_TYPE_INFO_CHILDREN = &H00000002
    End Enum
    Public Type IMAGEHLP_GET_TYPE_INFO_PARAMS
        SizeOfStruct As Long
        Flags As DbgSymGetTypeFlags
        NumIds As Long
        TypeIds As LongPtr
        TagFilter As LongLong
        NumReqs As Long
        ReqKinds As IMAGEHLP_SYMBOL_TYPE_INFO
        ReqOffsets As LongPtr
        ReqSizes As LongPtr
        ReqStride As LongPtr
        BufferSize As LongPtr
        Buffer As LongPtr
        EntriesMatched As Long
        EntriesFilled As Long
        TagsFound As LongLong
        AllReqsValid As LongLong
        NumReqsValid As Long
        ReqsValid As LongPtr
    End Type
    Public Declare PtrSafe Function SymGetTypeInfoEx Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal ModBase As LongLong, Params As IMAGEHLP_GET_TYPE_INFO_PARAMS) As BOOL
    Public DeclareWide PtrSafe Function SymEnumTypes Lib "dbghelp" Alias "SymEnumTypesW" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal EnumSymbolsCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public Declare PtrSafe Function SymEnumTypesW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal EnumSymbolsCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public DeclareWide PtrSafe Function SymEnumTypesByName Lib "dbghelp" Alias "SymEnumTypesByNameW" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Mask As String, ByVal EnumSymbolsCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public Declare PtrSafe Function SymEnumTypesByNameW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Mask As LongPtr, ByVal EnumSymbolsCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public DeclareWide PtrSafe Function SymGetTypeFromName Lib "dbghelp" Alias "SymGetTypeFromNameW" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Name As String, Symbol As SYMBOL_INFO) As BOOL
    Public Declare PtrSafe Function SymGetTypeFromNameW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Name As LongPtr, Symbol As SYMBOL_INFO) As BOOL
    Public DeclareWide PtrSafe Function SymAddSymbol Lib "dbghelp" Alias "SymAddSymbolW" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Name As String, ByVal Address As LongLong, ByVal Size As Long, ByVal Flags As Long) As BOOL
    Public Declare PtrSafe Function SymAddSymbolW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Name As LongPtr, ByVal Address As LongLong, ByVal Size As Long, ByVal Flags As Long) As BOOL
    Public DeclareWide PtrSafe Function SymDeleteSymbol Lib "dbghelp" Alias "SymDeleteSymbolW" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Name As String, ByVal Address As LongLong, ByVal Flags As Long) As BOOL
    Public Declare PtrSafe Function SymDeleteSymbolW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal Name As LongPtr, ByVal Address As LongLong, ByVal Flags As Long) As BOOL
    Public Declare PtrSafe Function SymRefreshModuleList Lib "dbghelp" (ByVal hProcess As LongPtr) As BOOL
    Public Declare PtrSafe Function SymAddSourceStreamA Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Base As LongLong, ByVal StreamFile As String, Buffer As Any, ByVal Size As LongPtr) As BOOL
    Public DeclareWide PtrSafe Function SymAddSourceStreamW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Base As LongLong, ByVal StreamFile As LongPtr, Buffer As Any, ByVal Size As LongPtr) As BOOL
    Public DeclareWide PtrSafe Function SymAddSourceStream Lib "dbghelp" Alias "SymAddSourceStreamW" (ByVal hProcess As LongPtr, ByVal Base As LongLong, ByVal StreamFile As String, Buffer As Any, ByVal Size As LongPtr) As BOOL
    Public DeclareWide PtrSafe Function SymSrvIsStore Lib "dbghelp" Alias "SymSrvIsStoreW" (ByVal hProcess As LongPtr, ByVal Path As String) As BOOL
    Public Declare PtrSafe Function SymSrvIsStoreW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Path As LongPtr) As BOOL
    Public DeclareWide PtrSafe Function SymSrvDeltaName Lib "dbghelp" Alias "SymSrvDeltaNameW" (ByVal hProcess As LongPtr, ByVal SymPath As String, ByVal Type As String, ByVal File1 As String, ByVal File2 As String) As LongPtr
    Public Declare PtrSafe Function SymSrvDeltaNameW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal SymPath As LongPtr, ByVal Type As LongPtr, ByVal File1 As LongPtr, ByVal File2 As LongPtr) As LongPtr
    Public DeclareWide PtrSafe Function SymSrvGetSupplement Lib "dbghelp" Alias "SymSrvGetSupplementW" (ByVal hProcess As LongPtr, ByVal SymPath As String, ByVal Type As String, ByVal Node As String, ByVal File As String) As LongPtr
    Public Declare PtrSafe Function SymSrvGetSupplementW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal SymPath As LongPtr, ByVal Type As LongPtr, ByVal Node As LongPtr, ByVal File As LongPtr) As LongPtr
    Public DeclareWide PtrSafe Function SymSrvGetFileIndexes Lib "dbghelp" Alias "SymSrvGetFileIndexesW" (ByVal File As String, Id As UUID, Val1 As Long, Val2 As Long, ByVal Flags As Long) As BOOL
    Public Declare PtrSafe Function SymSrvGetFileIndexesW Lib "dbghelp" (ByVal File As LongPtr, Id As UUID, Val1 As Long, Val2 As Long, ByVal Flags As Long) As BOOL
    Public DeclareWide PtrSafe Function SymSrvGetFileIndexString Lib "dbghelp" Alias "SymSrvGetFileIndexStringW" (ByVal hProcess As LongPtr, ByVal SrvPath As String, ByVal File As String, ByVal Index As String, ByVal Size As LongPtr, ByVal Flags As Long) As BOOL
    Public Declare PtrSafe Function SymSrvGetFileIndexStringW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal SrvPath As LongPtr, ByVal File As LongPtr, ByVal Index As LongPtr, ByVal Size As LongPtr, ByVal Flags As Long) As BOOL
    'Alias SYMSRV_INDEX_INFO As SYMSRV_INDEX_INFOW
    Public Type SYMSRV_INDEX_INFO
        sizeofstruct As Long
        file(0 To MAX_PATH) As Integer
        stripped As BOOL
        timestamp As Long
        size As Long
        dbgfile(0 To MAX_PATH) As Integer
        pdbfile(0 To MAX_PATH) As Integer
        guid As UUID
        sig As Long
        age As Long
    End Type
    Public Type SYMSRV_INDEX_INFOW
        sizeofstruct As Long
        file(0 To MAX_PATH) As Integer
        stripped As BOOL
        timestamp As Long
        size As Long
        dbgfile(0 To MAX_PATH) As Integer
        pdbfile(0 To MAX_PATH) As Integer
        guid As UUID
        sig As Long
        age As Long
    End Type
    
    Public DeclareWide PtrSafe Function SymSrvGetFileIndexInfo Lib "dbghelp" Alias "SymSrvGetFileIndexInfo" (ByVal File As String, Info As SYMSRV_INDEX_INFO, ByVal Flags As Long) As BOOL
    Public Declare PtrSafe Function SymSrvGetFileIndexInfoW Lib "dbghelp" (ByVal File As LongPtr, Info As SYMSRV_INDEX_INFOW, ByVal Flags As Long) As BOOL
    Public DeclareWide PtrSafe Function SymSrvStoreSupplement Lib "dbghelp" Alias "SymSrvStoreSupplementW" (ByVal hProcess As LongPtr, ByVal SrvPath As String, ByVal Node As String, ByVal File As String, ByVal Flags As DbgSymStoreOptions) As LongPtr
    Public Declare PtrSafe Function SymSrvStoreSupplementW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal SrvPath As LongPtr, ByVal Node As LongPtr, ByVal File As LongPtr, ByVal Flags As DbgSymStoreOptions) As LongPtr
    Public DeclareWide PtrSafe Function SymSrvStoreFile Lib "dbghelp" Alias "SymSrvStoreFileW" (ByVal hProcess As LongPtr, ByVal SrvPath As String, ByVal File As String, ByVal Flags As DbgSymStoreOptions) As LongPtr
    Public Declare PtrSafe Function SymSrvStoreFileW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal SrvPath As LongPtr, ByVal File As LongPtr, ByVal Flags As DbgSymStoreOptions) As LongPtr
          
    Public Enum IMAGEHLP_SF_TYPE
        sfImage = 0
        sfDbg
        sfPdb
        sfMpd
        sfMax
    End Enum
    
    Public DeclareWide PtrSafe Function SymGetSymbolFile Lib "dbghelp" Alias "SymGetSymbolFileW" (ByVal hProcess As LongPtr, ByVal SymPath As String, ByVal ImageFile As String, ByVal Type As IMAGEHLP_SF_TYPE, ByVal SymbolFile As String, ByVal cSymbolFile As LongPtr, ByVal DbgFile As String, ByVal cDbgFile As Long) As BOOL
    Public Declare PtrSafe Function SymGetSymbolFileW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal SymPath As LongPtr, ByVal ImageFile As LongPtr, ByVal Type As IMAGEHLP_SF_TYPE, ByVal SymbolFile As LongPtr, ByVal cSymbolFile As LongPtr, ByVal DbgFile As LongPtr, ByVal cDbgFile As Long) As BOOL
       
    ' typedef BOOL (WINAPI *PDBGHELP_CREATE_USER_DUMP_CALLBACK)(
    ' _In_ DWORD DataType,
    ' _In_ PVOID* Data,
    ' _Out_ LPDWORD DataLength,
    ' _In_opt_ PVOID UserData
    ' );
    [Description("NOTE: This function does not redirect to Unicode.")]
    Public Declare PtrSafe Function DbgHelpCreateUserDump Lib "dbghelp" (ByVal FileName As String, ByVal Callback As LongPtr, Optional ByVal UserData As LongPtr) As BOOL
    Public Declare PtrSafe Function DbgHelpCreateUserDumpW Lib "dbghelp" (ByVal FileName As LongPtr, ByVal Callback As LongPtr, Optional ByVal UserData As LongPtr) As BOOL
        
    #If Win64 Then
    Public Declare PtrSafe Function SymGetSymFromAddr Lib "dbghelp" Alias "SymGetSymFromAddr64" (ByVal hProcess As LongPtr, ByVal dwAddr As Long, pdwDisplacement As Long, Symbol As IMAGEHLP_SYMBOL64) As BOOL
    Public Declare PtrSafe Function SymGetSymFromName Lib "dbghelp" Alias "SymGetSymFromName64" (ByVal hProcess As LongPtr, ByVal Name As String, Symbol As IMAGEHLP_SYMBOL64) As BOOL
    #Else
    Public Declare PtrSafe Function SymGetSymFromAddr Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal dwAddr As Long, pdwDisplacement As Long, Symbol As IMAGEHLP_SYMBOL) As BOOL
    Public Declare PtrSafe Function SymGetSymFromName Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Name As String, Symbol As IMAGEHLP_SYMBOL) As BOOL
    #End If
    Public Declare PtrSafe Function SymGetSymFromAddr64 Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal dwAddr As Long, pdwDisplacement As Long, Symbol As IMAGEHLP_SYMBOL64) As BOOL
    Public Declare PtrSafe Function SymGetSymFromName64 Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal Name As String, Symbol As IMAGEHLP_SYMBOL64) As BOOL
    
    Public Type SYMSRV_EXTENDED_OUTPUT_DATA
        sizeOfStruct As Long ' size of the structure
        version As Long ' version number (EXT_OUTPUT_VER)
        filePtrMsg(0 To MAX_PATH) As Integer ' File ptr message data buffer
    End Type
    
    ' typedef BOOL (WINAPI *PSYMBOLSERVERPROC)(PCSTR, PCSTR, PVOID, DWORD, DWORD, PSTR);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERPROCA)(PCSTR, PCSTR, PVOID, DWORD, DWORD, PSTR);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERPROCW)(PCWSTR, PCWSTR, PVOID, DWORD, DWORD, PWSTR);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERBYINDEXPROC)(PCSTR, PCSTR, PCSTR, PSTR);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERBYINDEXPROCA)(PCSTR, PCSTR, PCSTR, PSTR);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERBYINDEXPROCW)(PCWSTR, PCWSTR, PCWSTR, PWSTR);
    ' typedef BOOL (WINAPI *PSYMBOLSERVEROPENPROC)(VOID);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERCLOSEPROC)(VOID);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERSETOPTIONSPROC)(UINT_PTR, ULONG64);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERSETOPTIONSWPROC)(UINT_PTR, ULONG64);
    ' typedef BOOL (CALLBACK WINAPI *PSYMBOLSERVERCALLBACKPROC)(UINT_PTR action, ULONG64 data, ULONG64 context);
    ' typedef UINT_PTR (WINAPI *PSYMBOLSERVERGETOPTIONSPROC)();
    ' typedef BOOL (WINAPI *PSYMBOLSERVERPINGPROC)(PCSTR);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERPINGPROCA)(PCSTR);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERPINGPROCW)(PCWSTR);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERGETVERSION)(LPAPI_VERSION);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERDELTANAME)(PCSTR, PVOID, DWORD, DWORD, PVOID, DWORD, DWORD, PSTR, size_t);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERDELTANAMEW)(PCWSTR, PVOID, DWORD, DWORD, PVOID, DWORD, DWORD, PWSTR, size_t);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERGETSUPPLEMENT)(PCSTR, PCSTR, PCSTR, PSTR, size_t);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERGETSUPPLEMENTW)(PCWSTR, PCWSTR, PCWSTR, PWSTR, size_t);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERSTORESUPPLEMENT)(PCSTR, PCSTR, PCSTR, PSTR, size_t, DWORD);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERSTORESUPPLEMENTW)(PCWSTR, PCWSTR, PCWSTR, PWSTR, size_t, DWORD);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERGETINDEXSTRING)(PVOID, DWORD, DWORD, PSTR, size_t);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERGETINDEXSTRINGW)(PVOID, DWORD, DWORD, PWSTR, size_t);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERSTOREFILE)(PCSTR, PCSTR, PVOID, DWORD, DWORD, PSTR, size_t, DWORD);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERSTOREFILEW)(PCWSTR, PCWSTR, PVOID, DWORD, DWORD, PWSTR, size_t, DWORD);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERISSTORE)(PCSTR);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERISSTOREW)(PCWSTR);
    ' typedef DWORD (WINAPI *PSYMBOLSERVERVERSION)();
    ' typedef BOOL (CALLBACK WINAPI *PSYMBOLSERVERMESSAGEPROC)(UINT_PTR action, ULONG64 data, ULONG64 context);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERWEXPROC)(PCWSTR, PCWSTR, PVOID, DWORD, DWORD, PWSTR, PSYMSRV_EXTENDED_OUTPUT_DATA);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERPINGPROCWEX)(PCWSTR);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERGETOPTIONDATAPROC)(UINT_PTR, PULONG64);
    ' typedef BOOL (WINAPI *PSYMBOLSERVERSETHTTPAUTHHEADER)(_In_ PCWSTR pszAuthHeader);
    
    Public Const SYMSRV_VERSION = 2
    Public Enum DbgSymSrvFlags
        SSRVOPT_CALLBACK = &H00000001
        SSRVOPT_DWORD = &H00000002
        SSRVOPT_DWORDPTR = &H00000004
        SSRVOPT_GUIDPTR = &H00000008
        SSRVOPT_OLDGUIDPTR = &H00000010
        SSRVOPT_UNATTENDED = &H00000020
        SSRVOPT_NOCOPY = &H00000040
        SSRVOPT_GETPATH = &H00000040
        SSRVOPT_PARENTWIN = &H00000080
        SSRVOPT_PARAMTYPE = &H00000100
        SSRVOPT_SECURE = &H00000200
        SSRVOPT_TRACE = &H00000400
        SSRVOPT_SETCONTEXT = &H00000800
        SSRVOPT_PROXY = &H00001000
        SSRVOPT_DOWNSTREAM_STORE = &H00002000
        SSRVOPT_OVERWRITE = &H00004000
        SSRVOPT_RESETTOU = &H00008000&
        SSRVOPT_CALLBACKW = &H00010000
        SSRVOPT_FLAT_DEFAULT_STORE = &H00020000
        SSRVOPT_PROXYW = &H00040000
        SSRVOPT_MESSAGE = &H00080000
        SSRVOPT_SERVICE = &H00100000  ' deprecated
        SSRVOPT_FAVOR_COMPRESSED = &H00200000
        SSRVOPT_STRING = &H00400000
        SSRVOPT_WINHTTP = &H00800000
        SSRVOPT_WININET = &H01000000
        SSRVOPT_DONT_UNCOMPRESS = &H02000000
        SSRVOPT_DISABLE_PING_HOST = &H04000000
        SSRVOPT_DISABLE_TIMEOUT = &H08000000
        SSRVOPT_ENABLE_COMM_MSG = &H10000000
        SSRVOPT_URI_FILTER = &H20000000
        SSRVOPT_URI_TIERS = &H40000000
        SSRVOPT_RETRY_APP_HANG = &H80000000
        SSRVOPT_MAX = &H80000000
        SSRVOPT_RESET = (-1)
    End Enum
    
    Public Const NUM_SSRVOPTS = 32
    
    Public Enum DbgSymSrvUri
        SSRVURI_HTTP_NORMAL = &H01
        SSRVURI_HTTP_COMPRESSED = &H02
        SSRVURI_HTTP_FILEPTR = &H04
        SSRVURI_UNC_NORMAL = &H10
        SSRVURI_UNC_COMPRESSED = &H20
        SSRVURI_UNC_FILEPTR = &H40
        SSRVURI_HTTP_MASK = &H0F
        SSRVURI_UNC_MASK = &HF0
        SSRVURI_ALL = &HFF
        
        SSRVURI_NORMAL = SSRVURI_HTTP_NORMAL
        SSRVURI_COMPRESSED = SSRVURI_HTTP_COMPRESSED
        SSRVURI_FILEPTR = SSRVURI_HTTP_FILEPTR
    End Enum
    
    Public Enum DbgSymSrvActions
        SSRVACTION_TRACE = 1
        SSRVACTION_QUERYCANCEL = 2
        SSRVACTION_EVENT = 3
        SSRVACTION_EVENTW = 4
        SSRVACTION_SIZE = 5
        SSRVACTION_HTTPSTATUS = 6
        SSRVACTION_XMLOUTPUT = 7
        SSRVACTION_CHECKSUMSTATUS = 8
    End Enum
    
    Public Enum DbgSymStoreOptions
        SYMSTOREOPT_COMPRESS = &H01
        SYMSTOREOPT_OVERWRITE = &H02
        SYMSTOREOPT_RETURNINDEX = &H04
        SYMSTOREOPT_POINTER = &H08
        SYMSTOREOPT_ALT_INDEX = &H10
        SYMSTOREOPT_UNICODE = &H20
        SYMSTOREOPT_PASS_IF_EXISTS = &H40
    End Enum
    
    Public Declare PtrSafe Function FindFileInPath Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal SearchPath As LongPtr, ByVal FileName As LongPtr, ByVal id As LongPtr, ByVal two As Long, ByVal three As Long, ByVal flags As DbgSymSrvFlags, ByVal FilePath As String) As BOOL
    Public Declare PtrSafe Function FindFileInSearchPath Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal SearchPath As LongPtr, ByVal FileName As LongPtr, ByVal one As Long, ByVal two As Long, ByVal three As Long, ByVal flags As DbgSymSrvFlags, ByVal FilePath As String) As BOOL
    Public Declare PtrSafe Function SymEnumSym Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal EnumSymbolsCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    
    #If Win64 Then
    Public Declare PtrSafe Function SymEnumerateSymbols Lib "dbghelp" Alias "SymEnumerateSymbolsW64" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal EnumSymbolsCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public Declare PtrSafe Function SymEnumerateSymbolsW Lib "dbghelp" Alias "SymEnumerateSymbolsW64" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal EnumSymbolsCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public Declare PtrSafe Function SymLoadModule Lib "dbghelp" Alias "SymLoadModule64" (ByVal hProcess As LongPtr, ByVal hFile As LongPtr, ByVal ImageName As String, ByVal ModuleName As String, ByVal BaseOfDll As LongLong, ByVal SizeOfDll As Long) As LongLong
    Public Declare PtrSafe Function SymGetSymNext Lib "dbghelp" Alias "SymGetSymNext64" (ByVal hProcess As LongPtr, Symbol As IMAGEHLP_SYMBOL64) As BOOL
    Public Declare PtrSafe Function SymGetSymNextW Lib "dbghelp" Alias "SymGetSymNextW64" (ByVal hProcess As LongPtr, Symbol As IMAGEHLP_SYMBOLW64) As BOOL
    Public Declare PtrSafe Function SymGetSymPrev Lib "dbghelp" Alias "SymGetSymPrev64" (ByVal hProcess As LongPtr, Symbol As IMAGEHLP_SYMBOL64) As BOOL
    Public Declare PtrSafe Function SymGetSymPrevW Lib "dbghelp" Alias "SymGetSymPrevW64" (ByVal hProcess As LongPtr, Symbol As IMAGEHLP_SYMBOLW64) As BOOL
    #Else
    Public Declare PtrSafe Function SymEnumerateSymbols Lib "dbghelp" Alias "SymEnumerateSymbolsW" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal EnumSymbolsCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public Declare PtrSafe Function SymEnumerateSymbolsW Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal EnumSymbolsCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public Declare PtrSafe Function SymLoadModule Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal hFile As LongPtr, ByVal ImageName As String, ByVal ModuleName As String, ByVal BaseOfDll As LongLong, ByVal SizeOfDll As Long) As LongLong
    Public Declare PtrSafe Function SymGetSymNext Lib "dbghelp" (ByVal hProcess As LongPtr, Symbol As IMAGEHLP_SYMBOL) As BOOL
    Public Declare PtrSafe Function SymGetSymNextW Lib "dbghelp" (ByVal hProcess As LongPtr, Symbol As IMAGEHLP_SYMBOLW) As BOOL
    Public Declare PtrSafe Function SymGetSymPrev Lib "dbghelp" (ByVal hProcess As LongPtr, Symbol As IMAGEHLP_SYMBOL) As BOOL
    Public Declare PtrSafe Function SymGetSymPrevW Lib "dbghelp" (ByVal hProcess As LongPtr, Symbol As IMAGEHLP_SYMBOLW) As BOOL
    #End If
    Public Declare PtrSafe Function SymEnumerateSymbols64 Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal EnumSymbolsCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public Declare PtrSafe Function SymEnumerateSymbolsW64 Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal BaseOfDll As LongLong, ByVal EnumSymbolsCallback As LongPtr, Optional ByVal UserContext As LongPtr) As BOOL
    Public Declare PtrSafe Function SymGetSymNext64 Lib "dbghelp" (ByVal hProcess As LongPtr, Symbol As IMAGEHLP_SYMBOL64) As BOOL
    Public Declare PtrSafe Function SymGetSymNextW64 Lib "dbghelp" (ByVal hProcess As LongPtr, Symbol As IMAGEHLP_SYMBOLW64) As BOOL
    Public Declare PtrSafe Function SymGetSymPrev64 Lib "dbghelp" (ByVal hProcess As LongPtr, Symbol As IMAGEHLP_SYMBOL64) As BOOL
    Public Declare PtrSafe Function SymGetSymPrevW64 Lib "dbghelp" (ByVal hProcess As LongPtr, Symbol As IMAGEHLP_SYMBOLW64) As BOOL
              
    ' //  This type indicates the call back function type
    ' typedef ULONG (__stdcall *LPCALL_BACK_USER_INTERRUPT_ROUTINE )(VOID);
    
    Public Type DBGHELP_DATA_REPORT_STRUCT
        pBinPathNonExist As LongPtr
        pSymbolPathNonExist As LongPtr
    End Type
    
    Public Declare PtrSafe Sub SetCheckUserInterruptShared Lib "dbghelp" (ByVal lpStartAddress As LongPtr)
    Public Declare PtrSafe Function GetCheckUserInterruptShared Lib "dbghelp" () As LongPtr
    Public Declare PtrSafe Function GetSymLoadError Lib "dbghelp" () As Long
    Public Declare PtrSafe Function SetSymLoadError Lib "dbghelp" (ByVal error As Long) As Long
    Public Declare PtrSafe Function ReportSymbolLoadSummary Lib "dbghelp" (ByVal hProcess As LongPtr, ByVal pLoadModule As LongPtr, pSymbolData As DBGHELP_DATA_REPORT_STRUCT) As BOOL
    Public Declare PtrSafe Sub RemoveInvalidModuleList Lib "dbghelp" (ByVal hProcess As LongPtr)
    
    Public Enum DbgHlpSymFlags
        SYMF_OMAP_GENERATED = &H00000001
        SYMF_OMAP_MODIFIED = &H00000002
        SYMF_REGISTER = &H00000008
        SYMF_REGREL = &H00000010
        SYMF_FRAMEREL = &H00000020
        SYMF_PARAMETER = &H00000040
        SYMF_LOCAL = &H00000080
        SYMF_CONSTANT = &H00000100
        SYMF_EXPORT = &H00000200
        SYMF_FORWARDER = &H00000400
        SYMF_FUNCTION = &H00000800
        SYMF_VIRTUAL = &H00001000
        SYMF_THUNK = &H00002000
        SYMF_TLSREL = &H00004000
    '  These values should also not be used.
    '  They have been replaced by SYMFLAG_ values.
        IMAGEHLP_SYMBOL_INFO_VALUEPRESENT = 1
        IMAGEHLP_SYMBOL_INFO_REGISTER = SYMF_REGISTER  ' 0x0008
        IMAGEHLP_SYMBOL_INFO_REGRELATIVE = SYMF_REGREL  ' 0x0010
        IMAGEHLP_SYMBOL_INFO_FRAMERELATIVE = SYMF_FRAMEREL  ' 0x0020
        IMAGEHLP_SYMBOL_INFO_PARAMETER = SYMF_PARAMETER  ' 0x0040
        IMAGEHLP_SYMBOL_INFO_LOCAL = SYMF_LOCAL  ' 0x0080
        IMAGEHLP_SYMBOL_INFO_CONSTANT = SYMF_CONSTANT  ' 0x0100
        IMAGEHLP_SYMBOL_FUNCTION = SYMF_FUNCTION  ' 0x0800
        IMAGEHLP_SYMBOL_VIRTUAL = SYMF_VIRTUAL  ' 0x1000
        IMAGEHLP_SYMBOL_THUNK = SYMF_THUNK  ' 0x2000
        IMAGEHLP_SYMBOL_INFO_TLSRELATIVE = SYMF_TLSREL  ' 0x4000
    End Enum
    
    Public Declare PtrSafe Function RangeMapCreate Lib "dbghelp" () As LongPtr
    Public Declare PtrSafe Sub RangeMapFree Lib "dbghelp" (ByVal RmapHandle As LongPtr)
    
    Public Enum DbgRangeMapFlags
        IMAGEHLP_RMAP_MAPPED_FLAT = &H00000001
        IMAGEHLP_RMAP_BIG_ENDIAN = &H00000002
        IMAGEHLP_RMAP_IGNORE_MISCOMPARE = &H00000004
        IMAGEHLP_RMAP_FIXUP_ARM64X = &H10000000
        IMAGEHLP_RMAP_LOAD_RW_DATA_SECTIONS = &H20000000
        IMAGEHLP_RMAP_OMIT_SHARED_RW_DATA_SECTIONS = &H40000000
        IMAGEHLP_RMAP_FIXUP_IMAGEBASE = &H80000000
    End Enum
    
    Public Declare PtrSafe Function RangeMapAddPeImageSections Lib "dbghelp" (ByVal RmapHandle As LongPtr, ByVal ImageName As LongPtr, MappedImage As Any, ByVal MappingBytes As Long, ByVal ImageBase As LongLong, ByVal UserTag As Long, ByVal MappingFlags As DbgRangeMapFlags) As BOOL
    Public Declare PtrSafe Function RangeMapRemove Lib "dbghelp" (ByVal RmapHandle As LongPtr, ByVal UserTag As Long) As BOOL
    Public Declare PtrSafe Function RangeMapRead Lib "dbghelp" (ByVal RmapHandle As LongPtr, ByVal Offset As LongLong, Buffer As Any, ByVal RequestBytes As Long, ByVal Flags As Long, Optional DoneBytes As Long) As BOOL
    Public Declare PtrSafe Function RangeMapWrite Lib "dbghelp" (ByVal RmapHandle As LongPtr, ByVal Offset As LongLong, Buffer As Any, ByVal RequestBytes As Long, ByVal Flags As Long, Optional DoneBytes As Long) As BOOL
    
End Module
#End If