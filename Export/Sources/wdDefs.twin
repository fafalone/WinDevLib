'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'WinDevLib - wdDefs :: Miscellaneous Definitions, enums and structs
#If WINDEVLIB_LITE = 0 Then
Module wdDefs


'limits.h
Public Const CHAR_BIT  = 8
Public Const SCHAR_MIN As Byte = &H80
Public Const SCHAR_MAX As Byte  = 127
Public Const UCHAR_MAX As Byte  = &Hff

'VBx/tB uses unsigned chars
Public Const CHAR_MIN  As Byte = 0
Public Const CHAR_MAX  As Byte = UCHAR_MAX

Public Const MB_LEN_MAX = 5
Public Const SHRT_MIN  = (-32768)
Public Const SHRT_MAX  = 32767
Public Const USHRT_MAX  = &Hffff
Public Const INT_MIN  = (-2147483647 - 1)
Public Const INT_MAX  = 2147483647
Public Const UINT_MAX  = &Hffffffff
Public Const LONG_MIN  = (-2147483647 - 1)
Public Const LONG_MAX  = 2147483647
Public Const ULONG_MAX  = &Hffffffff
Public Const LLONG_MAX As LongLong = 9223372036854775807^
Public Const LLONG_MIN As LongLong  = (-9223372036854775807^ - 1)
Public Const ULLONG_MAX As LongLong  = &Hffffffffffffffff^

Public Const _I8_MIN  = (-127 - 1)
Public Const _I8_MAX  = 127
Public Const _UI8_MAX  = &Hff
Public Const _I16_MIN  = (-32767 - 1)
Public Const _I16_MAX  = 32767
Public Const _UI16_MAX  = &Hffff
Public Const _I32_MIN  = (-2147483647 - 1)
Public Const _I32_MAX  = 2147483647
Public Const _UI32_MAX  = &Hffffffff
Public Const _I64_MIN As LongLong = (-9223372036854775807^ - 1)
Public Const _I64_MAX As LongLong  = 9223372036854775807^
Public Const _UI64_MAX As LongLong  = &Hffffffffffffffff^

Public Const MAXINT8  = 127
Public Const MAXUINT8  = &Hff
Public Const MININT8  = (-127 - 1)
Public Const MAXINT16  = 32767
Public Const MAXUINT16  = &Hffff
Public Const MININT16  = (-32767 - 1)
Public Const MAXINT32  = 2147483647
Public Const MAXUINT32  = &Hffffffff
Public Const MININT32  = (-2147483647 - 1)
Public Const MAXLONG32  = 2147483647
Public Const MAXULONG32  = &Hffffffff
Public Const MINLONG32  = (-2147483647 - 1)
Public Const MAXINT64  As LongLong = 9223372036854775807^
Public Const MAXUINT64 As LongLong  = &Hffffffffffffffff^
Public Const MININT64 As LongLong = (-9223372036854775807^ - 1)
Public Const MAXULONGLONG As LongLong = &Hffffffffffffffff^
Public Const MINLONGLONG As LongLong = (-9223372036854775807^ - 1)
Public Const MAXLONGLONG As LongLong = 9223372036854775807^
#if Win64 Then
Public Const SIZE_MAX As LongLong = &Hffffffffffffffff^
Public Const MAXSIZE_T As LongLong = &Hffffffffffffffff^
#Else
Public Const SIZE_MAX As Long = &Hffffffff
Public Const MAXSIZE_T As Long = &Hffffffff
#endif
Public Const MAXULONG64 As LongLong = Not 0^
Public Const MAXLONG64 As LongLong = MAXLONGLONG
Public Const MINLONG64 As LongLong = MINLONGLONG

Public Const MINCHAR  = &H80  ' winnt
Public Const MAXCHAR  = &H7f  ' winnt
Public Const MINSHORT  = &H8000  ' winnt
Public Const MAXSHORT  = &H7fff  ' winnt
Public Const MINLONG  = &H80000000  ' winnt
Public Const MAXLONG  = &H7fffffff  ' winnt
Public Const MAXUCHAR  = &Hff  ' winnt
Public Const MAXUSHORT  = &Hffff  ' winnt
Public Const MAXULONG  = &Hffffffff  ' winnt

Public Const DBL_DECIMAL_DIG  = 17  ' # of decimal digits of rounding precision
Public Const DBL_DIG  = 15  ' # of decimal digits of precision
Public Const DBL_EPSILON  = 2.2204460492503131e-016#  ' smallest such that 1.0+DBL_EPSILON != 1.0
Public Const DBL_HAS_SUBNORM  = 1  ' type does support subnormal numbers
Public Const DBL_MANT_DIG  = 53  ' # of bits in mantissa
Public Const DBL_MAX  = 1.7976931348623158e+308#  ' max value
Public Const DBL_MAX_10_EXP  = 308  ' max decimal exponent
Public Const DBL_MAX_EXP  = 1024  ' max binary exponent
Public Const DBL_MIN  = 2.2250738585072014e-308#  ' min positive value
Public Const DBL_MIN_10_EXP  = (-307)  ' min decimal exponent
Public Const DBL_MIN_EXP  = (-1021)  ' min binary exponent
Public Const _DBL_RADIX  = 2  ' exponent radix
Public Const DBL_TRUE_MIN  = 4.9406564584124654e-324#  ' min positive value

Public Const FLT_DECIMAL_DIG As Single = 9  ' # of decimal digits of rounding precision
Public Const FLT_DIG As Single  = 6  ' # of decimal digits of precision
Public Const FLT_EPSILON As Single = 1.192092896e-07!  ' smallest such that 1.0+FLT_EPSILON != 1.0
Public Const FLT_HAS_SUBNORM  As Single = 1  ' type does support subnormal numbers
Public Const FLT_GUARD  As Single = 0
Public Const FLT_MANT_DIG  As Single = 24  ' # of bits in mantissa
Public Const FLT_MAX As Single = 3.402823466e+38!   ' max value
Public Const FLT_MAX_10_EXP As Single  = 38  ' max decimal exponent
Public Const FLT_MAX_EXP As Single  = 128  ' max binary exponent
Public Const FLT_MIN  As Single = 1.175494351E-38!   ' min normalized positive value
Public Const FLT_MIN_10_EXP  As Single = (-37)  ' min decimal exponent
Public Const FLT_MIN_EXP  As Single = (-125)  ' min binary exponent
Public Const FLT_NORMALIZE  As Single = 0
Public Const FLT_RADIX  As Single = 2  ' exponent radix
Public Const FLT_TRUE_MIN As Single = 1.401298464E-45!   ' min positive value

Public Const MAX_CLASS_NAME_LEN = 32
Public Const MAX_PROFILE_LEN = &H50
Public Const MAX_IO_PORTS = &H14

Public Enum DllAttachment
    DLL_PROCESS_ATTACH = 1
    DLL_THREAD_ATTACH  = 2
    DLL_THREAD_DETACH  = 3
    DLL_PROCESS_DETACH  = 0
End Enum

Public Const DOS_STAR As String = "<"
Public Const DOS_QM As String = ">"
Public Const DOS_DOT As String = ChrW$(34)

Public Const OLEIVERB_PROPERTIES = (-7)

Public Enum VER_SUITE_VALUES
    VER_SERVER_NT = &H80000000
    VER_WORKSTATION_NT = &H40000000
    VER_SUITE_SMALLBUSINESS = &H00000001
    VER_SUITE_ENTERPRISE = &H00000002
    VER_SUITE_BACKOFFICE = &H00000004
    VER_SUITE_COMMUNICATIONS = &H00000008
    VER_SUITE_TERMINAL = &H00000010
    VER_SUITE_SMALLBUSINESS_RESTRICTED = &H00000020
    VER_SUITE_EMBEDDEDNT = &H00000040
    VER_SUITE_DATACENTER = &H00000080
    VER_SUITE_SINGLEUSERTS = &H00000100
    VER_SUITE_PERSONAL = &H00000200
    VER_SUITE_BLADE = &H00000400
    VER_SUITE_EMBEDDED_RESTRICTED = &H00000800
    VER_SUITE_SECURITY_APPLIANCE = &H00001000
    VER_SUITE_STORAGE_SERVER = &H00002000
    VER_SUITE_COMPUTE_SERVER = &H00004000
    VER_SUITE_WH_SERVER = &H00008000&
    VER_SUITE_MULTIUSERTS = &H00020000
End Enum
Public Enum WINVER_PRODUCT_TYPES
    PRODUCT_UNDEFINED = &H00000000
    PRODUCT_ULTIMATE = &H00000001
    PRODUCT_HOME_BASIC = &H00000002
    PRODUCT_HOME_PREMIUM = &H00000003
    PRODUCT_ENTERPRISE = &H00000004
    PRODUCT_HOME_BASIC_N = &H00000005
    PRODUCT_BUSINESS = &H00000006
    PRODUCT_STANDARD_SERVER = &H00000007
    PRODUCT_DATACENTER_SERVER = &H00000008
    PRODUCT_SMALLBUSINESS_SERVER = &H00000009
    PRODUCT_ENTERPRISE_SERVER = &H0000000A
    PRODUCT_STARTER = &H0000000B
    PRODUCT_DATACENTER_SERVER_CORE = &H0000000C
    PRODUCT_STANDARD_SERVER_CORE = &H0000000D
    PRODUCT_ENTERPRISE_SERVER_CORE = &H0000000E
    PRODUCT_ENTERPRISE_SERVER_IA64 = &H0000000F
    PRODUCT_BUSINESS_N = &H00000010
    PRODUCT_WEB_SERVER = &H00000011
    PRODUCT_CLUSTER_SERVER = &H00000012
    PRODUCT_HOME_SERVER = &H00000013
    PRODUCT_STORAGE_EXPRESS_SERVER = &H00000014
    PRODUCT_STORAGE_STANDARD_SERVER = &H00000015
    PRODUCT_STORAGE_WORKGROUP_SERVER = &H00000016
    PRODUCT_STORAGE_ENTERPRISE_SERVER = &H00000017
    PRODUCT_SERVER_FOR_SMALLBUSINESS = &H00000018
    PRODUCT_SMALLBUSINESS_SERVER_PREMIUM = &H00000019
    PRODUCT_HOME_PREMIUM_N = &H0000001A
    PRODUCT_ENTERPRISE_N = &H0000001B
    PRODUCT_ULTIMATE_N = &H0000001C
    PRODUCT_WEB_SERVER_CORE = &H0000001D
    PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT = &H0000001E
    PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY = &H0000001F
    PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING = &H00000020
    PRODUCT_SERVER_FOUNDATION = &H00000021
    PRODUCT_HOME_PREMIUM_SERVER = &H00000022
    PRODUCT_SERVER_FOR_SMALLBUSINESS_V = &H00000023
    PRODUCT_STANDARD_SERVER_V = &H00000024
    PRODUCT_DATACENTER_SERVER_V = &H00000025
    PRODUCT_ENTERPRISE_SERVER_V = &H00000026
    PRODUCT_DATACENTER_SERVER_CORE_V = &H00000027
    PRODUCT_STANDARD_SERVER_CORE_V = &H00000028
    PRODUCT_ENTERPRISE_SERVER_CORE_V = &H00000029
    PRODUCT_HYPERV = &H0000002A
    PRODUCT_STORAGE_EXPRESS_SERVER_CORE = &H0000002B
    PRODUCT_STORAGE_STANDARD_SERVER_CORE = &H0000002C
    PRODUCT_STORAGE_WORKGROUP_SERVER_CORE = &H0000002D
    PRODUCT_STORAGE_ENTERPRISE_SERVER_CORE = &H0000002E
    PRODUCT_STARTER_N = &H0000002F
    PRODUCT_PROFESSIONAL = &H00000030
    PRODUCT_PROFESSIONAL_N = &H00000031
    PRODUCT_SB_SOLUTION_SERVER = &H00000032
    PRODUCT_SERVER_FOR_SB_SOLUTIONS = &H00000033
    PRODUCT_STANDARD_SERVER_SOLUTIONS = &H00000034
    PRODUCT_STANDARD_SERVER_SOLUTIONS_CORE = &H00000035
    PRODUCT_SB_SOLUTION_SERVER_EM = &H00000036
    PRODUCT_SERVER_FOR_SB_SOLUTIONS_EM = &H00000037
    PRODUCT_SOLUTION_EMBEDDEDSERVER = &H00000038
    PRODUCT_SOLUTION_EMBEDDEDSERVER_CORE = &H00000039
    PRODUCT_PROFESSIONAL_EMBEDDED = &H0000003A
    PRODUCT_ESSENTIALBUSINESS_SERVER_MGMT = &H0000003B
    PRODUCT_ESSENTIALBUSINESS_SERVER_ADDL = &H0000003C
    PRODUCT_ESSENTIALBUSINESS_SERVER_MGMTSVC = &H0000003D
    PRODUCT_ESSENTIALBUSINESS_SERVER_ADDLSVC = &H0000003E
    PRODUCT_SMALLBUSINESS_SERVER_PREMIUM_CORE = &H0000003F
    PRODUCT_CLUSTER_SERVER_V = &H00000040
    PRODUCT_EMBEDDED = &H00000041
    PRODUCT_STARTER_E = &H00000042
    PRODUCT_HOME_BASIC_E = &H00000043
    PRODUCT_HOME_PREMIUM_E = &H00000044
    PRODUCT_PROFESSIONAL_E = &H00000045
    PRODUCT_ENTERPRISE_E = &H00000046
    PRODUCT_ULTIMATE_E = &H00000047
    PRODUCT_ENTERPRISE_EVALUATION = &H00000048
    PRODUCT_MULTIPOINT_STANDARD_SERVER = &H0000004C
    PRODUCT_MULTIPOINT_PREMIUM_SERVER = &H0000004D
    PRODUCT_STANDARD_EVALUATION_SERVER = &H0000004F
    PRODUCT_DATACENTER_EVALUATION_SERVER = &H00000050
    PRODUCT_ENTERPRISE_N_EVALUATION = &H00000054
    PRODUCT_EMBEDDED_AUTOMOTIVE = &H00000055
    PRODUCT_EMBEDDED_INDUSTRY_A = &H00000056
    PRODUCT_THINPC = &H00000057
    PRODUCT_EMBEDDED_A = &H00000058
    PRODUCT_EMBEDDED_INDUSTRY = &H00000059
    PRODUCT_EMBEDDED_E = &H0000005A
    PRODUCT_EMBEDDED_INDUSTRY_E = &H0000005B
    PRODUCT_EMBEDDED_INDUSTRY_A_E = &H0000005C
    PRODUCT_STORAGE_WORKGROUP_EVALUATION_SERVER = &H0000005F
    PRODUCT_STORAGE_STANDARD_EVALUATION_SERVER = &H00000060
    PRODUCT_CORE_ARM = &H00000061
    PRODUCT_CORE_N = &H00000062
    PRODUCT_CORE_COUNTRYSPECIFIC = &H00000063
    PRODUCT_CORE_SINGLELANGUAGE = &H00000064
    PRODUCT_CORE = &H00000065
    PRODUCT_PROFESSIONAL_WMC = &H00000067
    PRODUCT_EMBEDDED_INDUSTRY_EVAL = &H00000069
    PRODUCT_EMBEDDED_INDUSTRY_E_EVAL = &H0000006A
    PRODUCT_EMBEDDED_EVAL = &H0000006B
    PRODUCT_EMBEDDED_E_EVAL = &H0000006C
    PRODUCT_NANO_SERVER = &H0000006D
    PRODUCT_CLOUD_STORAGE_SERVER = &H0000006E
    PRODUCT_CORE_CONNECTED = &H0000006F
    PRODUCT_PROFESSIONAL_STUDENT = &H00000070
    PRODUCT_CORE_CONNECTED_N = &H00000071
    PRODUCT_PROFESSIONAL_STUDENT_N = &H00000072
    PRODUCT_CORE_CONNECTED_SINGLELANGUAGE = &H00000073
    PRODUCT_CORE_CONNECTED_COUNTRYSPECIFIC = &H00000074
    PRODUCT_CONNECTED_CAR = &H00000075
    PRODUCT_INDUSTRY_HANDHELD = &H00000076
    PRODUCT_PPI_PRO = &H00000077
    PRODUCT_ARM64_SERVER = &H00000078
    PRODUCT_EDUCATION = &H00000079
    PRODUCT_EDUCATION_N = &H0000007A
    PRODUCT_IOTUAP = &H0000007B
    PRODUCT_CLOUD_HOST_INFRASTRUCTURE_SERVER = &H0000007C
    PRODUCT_ENTERPRISE_S = &H0000007D
    PRODUCT_ENTERPRISE_S_N = &H0000007E
    PRODUCT_PROFESSIONAL_S = &H0000007F
    PRODUCT_PROFESSIONAL_S_N = &H00000080
    PRODUCT_ENTERPRISE_S_EVALUATION = &H00000081
    PRODUCT_ENTERPRISE_S_N_EVALUATION = &H00000082
    PRODUCT_HOLOGRAPHIC = &H00000087
    PRODUCT_HOLOGRAPHIC_BUSINESS = &H00000088
    PRODUCT_PRO_SINGLE_LANGUAGE = &H0000008A
    PRODUCT_PRO_CHINA = &H0000008B
    PRODUCT_ENTERPRISE_SUBSCRIPTION = &H0000008C
    PRODUCT_ENTERPRISE_SUBSCRIPTION_N = &H0000008D
    PRODUCT_DATACENTER_NANO_SERVER = &H0000008F
    PRODUCT_STANDARD_NANO_SERVER = &H00000090
    PRODUCT_DATACENTER_A_SERVER_CORE = &H00000091
    PRODUCT_STANDARD_A_SERVER_CORE = &H00000092
    PRODUCT_DATACENTER_WS_SERVER_CORE = &H00000093
    PRODUCT_STANDARD_WS_SERVER_CORE = &H00000094
    PRODUCT_UTILITY_VM = &H00000095
    PRODUCT_DATACENTER_EVALUATION_SERVER_CORE = &H0000009F
    PRODUCT_STANDARD_EVALUATION_SERVER_CORE = &H000000A0
    PRODUCT_PRO_WORKSTATION = &H000000A1
    PRODUCT_PRO_WORKSTATION_N = &H000000A2
    PRODUCT_PRO_FOR_EDUCATION = &H000000A4
    PRODUCT_PRO_FOR_EDUCATION_N = &H000000A5
    PRODUCT_AZURE_SERVER_CORE = &H000000A8
    PRODUCT_AZURE_NANO_SERVER = &H000000A9
    PRODUCT_ENTERPRISEG = &H000000AB
    PRODUCT_ENTERPRISEGN = &H000000AC
    PRODUCT_SERVERRDSH = &H000000AF
    PRODUCT_CLOUD = &H000000B2
    PRODUCT_CLOUDN = &H000000B3
    PRODUCT_HUBOS = &H000000B4
    PRODUCT_ONECOREUPDATEOS = &H000000B6
    PRODUCT_CLOUDE = &H000000B7
    PRODUCT_IOTOS = &H000000B9
    PRODUCT_CLOUDEN = &H000000BA
    PRODUCT_IOTEDGEOS = &H000000BB
    PRODUCT_IOTENTERPRISE = &H000000BC
    PRODUCT_LITE = &H000000BD
    PRODUCT_IOTENTERPRISES = &H000000BF
    PRODUCT_XBOX_SYSTEMOS = &H000000C0
    PRODUCT_XBOX_GAMEOS = &H000000C2
    PRODUCT_XBOX_ERAOS = &H000000C3
    PRODUCT_XBOX_DURANGOHOSTOS = &H000000C4
    PRODUCT_XBOX_SCARLETTHOSTOS = &H000000C5
    PRODUCT_XBOX_KEYSTONE = &H000000C6
    PRODUCT_AZURE_SERVER_CLOUDHOST = &H000000C7
    PRODUCT_AZURE_SERVER_CLOUDMOS = &H000000C8
    PRODUCT_CLOUDEDITIONN = &H000000CA
    PRODUCT_CLOUDEDITION = &H000000CB
    PRODUCT_IOTENTERPRISESK = &H000000CD
    PRODUCT_AZURESTACKHCI_SERVER_CORE = &H00000196
    PRODUCT_DATACENTER_SERVER_AZURE_EDITION = &H00000197
    PRODUCT_DATACENTER_SERVER_CORE_AZURE_EDITION = &H00000198
    PRODUCT_UNLICENSED = &HABCDABCD
End Enum


Public Enum ACCOUNT_UAC_FLAGS
    USER_ACCOUNT_DISABLED = (&H00000001)
    USER_HOME_DIRECTORY_REQUIRED = (&H00000002)
    USER_PASSWORD_NOT_REQUIRED = (&H00000004)
    USER_TEMP_DUPLICATE_ACCOUNT = (&H00000008)
    USER_NORMAL_ACCOUNT = (&H00000010)
    USER_MNS_LOGON_ACCOUNT = (&H00000020)
    USER_INTERDOMAIN_TRUST_ACCOUNT = (&H00000040)
    USER_WORKSTATION_TRUST_ACCOUNT = (&H00000080)
    USER_SERVER_TRUST_ACCOUNT = (&H00000100)
    USER_DONT_EXPIRE_PASSWORD = (&H00000200)
    USER_ACCOUNT_AUTO_LOCKED = (&H00000400)
    USER_ENCRYPTED_TEXT_PASSWORD_ALLOWED = (&H00000800)
    USER_SMARTCARD_REQUIRED = (&H00001000)
    USER_TRUSTED_FOR_DELEGATION = (&H00002000)
    USER_NOT_DELEGATED = (&H00004000)
    USER_USE_DES_KEY_ONLY = (&H00008000&)
    USER_DONT_REQUIRE_PREAUTH = (&H00010000)
    USER_PASSWORD_EXPIRED = (&H00020000)
    USER_TRUSTED_TO_AUTHENTICATE_FOR_DELEGATION = (&H00040000)
    USER_NO_AUTH_DATA_REQUIRED = (&H00080000)
    USER_PARTIAL_SECRETS_ACCOUNT = (&H00100000)
    USER_USE_AES_KEYS = (&H00200000)
End Enum

Public const HIMETRIC_PER_INCH = 2540 



Public Const DISPID_AUTOSIZE  = (-500)
Public Const DISPID_BACKCOLOR  = (-501)
Public Const DISPID_BACKSTYLE  = (-502)
Public Const DISPID_BORDERCOLOR  = (-503)
Public Const DISPID_BORDERSTYLE  = (-504)
Public Const DISPID_BORDERWIDTH  = (-505)
Public Const DISPID_DRAWMODE  = (-507)
Public Const DISPID_DRAWSTYLE  = (-508)
Public Const DISPID_DRAWWIDTH  = (-509)
Public Const DISPID_FILLCOLOR  = (-510)
Public Const DISPID_FILLSTYLE  = (-511)
Public Const DISPID_FONT  = (-512)
Public Const DISPID_FORECOLOR  = (-513)
Public Const DISPID_ENABLED  = (-514)
Public Const DISPID_HWND  = (-515)
Public Const DISPID_TABSTOP  = (-516)
Public Const DISPID_TEXT  = (-517)
Public Const DISPID_CAPTION  = (-518)
Public Const DISPID_BORDERVISIBLE  = (-519)
Public Const DISPID_APPEARANCE  = (-520)
Public Const DISPID_MOUSEPOINTER  = (-521)
Public Const DISPID_MOUSEICON  = (-522)
Public Const DISPID_PICTURE  = (-523)
Public Const DISPID_VALID  = (-524)
Public Const DISPID_READYSTATE  = (-525)
Public Const DISPID_LISTINDEX  = (-526)
Public Const DISPID_SELECTED  = (-527)
Public Const DISPID_LIST  = (-528)
Public Const DISPID_COLUMN  = (-529)
Public Const DISPID_LISTCOUNT  = (-531)
Public Const DISPID_MULTISELECT  = (-532)
Public Const DISPID_MAXLENGTH  = (-533)
Public Const DISPID_PASSWORDCHAR  = (-534)
Public Const DISPID_SCROLLBARS  = (-535)
Public Const DISPID_WORDWRAP  = (-536)
Public Const DISPID_MULTILINE  = (-537)
Public Const DISPID_NUMBEROFROWS  = (-538)
Public Const DISPID_NUMBEROFCOLUMNS  = (-539)
Public Const DISPID_DISPLAYSTYLE  = (-540)
Public Const DISPID_GROUPNAME  = (-541)
Public Const DISPID_IMEMODE  = (-542)
Public Const DISPID_ACCELERATOR  = (-543)
Public Const DISPID_ENTERKEYBEHAVIOR  = (-544)
Public Const DISPID_TABKEYBEHAVIOR  = (-545)
Public Const DISPID_SELTEXT  = (-546)
Public Const DISPID_SELSTART  = (-547)
Public Const DISPID_SELLENGTH  = (-548)
Public Const DISPID_REFRESH  = (-550)
Public Const DISPID_DOCLICK  = (-551)
Public Const DISPID_ABOUTBOX  = (-552)
Public Const DISPID_ADDITEM  = (-553)
Public Const DISPID_CLEAR  = (-554)
Public Const DISPID_REMOVEITEM  = (-555)
Public Const DISPID_CLICK  = (-600)
Public Const DISPID_DBLCLICK  = (-601)
Public Const DISPID_KEYDOWN  = (-602)
Public Const DISPID_KEYPRESS  = (-603)
Public Const DISPID_KEYUP  = (-604)
Public Const DISPID_MOUSEDOWN  = (-605)
Public Const DISPID_MOUSEMOVE  = (-606)
Public Const DISPID_MOUSEUP  = (-607)
Public Const DISPID_ERROREVENT  = (-608)
Public Const DISPID_READYSTATECHANGE  = (-609)
Public Const DISPID_CLICK_VALUE  = (-610)
Public Const DISPID_RIGHTTOLEFT  = (-611)
Public Const DISPID_TOPTOBOTTOM  = (-612)
Public Const DISPID_THIS  = (-613)
Public Const DISPID_AMBIENT_BACKCOLOR  = (-701)
Public Const DISPID_AMBIENT_DISPLAYNAME  = (-702)
Public Const DISPID_AMBIENT_FONT  = (-703)
Public Const DISPID_AMBIENT_FORECOLOR  = (-704)
Public Const DISPID_AMBIENT_LOCALEID  = (-705)
Public Const DISPID_AMBIENT_MESSAGEREFLECT  = (-706)
Public Const DISPID_AMBIENT_SCALEUNITS  = (-707)
Public Const DISPID_AMBIENT_TEXTALIGN  = (-708)
Public Const DISPID_AMBIENT_USERMODE  = (-709)
Public Const DISPID_AMBIENT_UIDEAD  = (-710)
Public Const DISPID_AMBIENT_SHOWGRABHANDLES  = (-711)
Public Const DISPID_AMBIENT_SHOWHATCHING  = (-712)
Public Const DISPID_AMBIENT_DISPLAYASDEFAULT  = (-713)
Public Const DISPID_AMBIENT_SUPPORTSMNEMONICS  = (-714)
Public Const DISPID_AMBIENT_AUTOCLIP  = (-715)
Public Const DISPID_AMBIENT_APPEARANCE  = (-716)
Public Const DISPID_AMBIENT_CODEPAGE  = (-725)
Public Const DISPID_AMBIENT_PALETTE  = (-726)
Public Const DISPID_AMBIENT_CHARSET  = (-727)
Public Const DISPID_AMBIENT_TRANSFERPRIORITY  = (-728)
Public Const DISPID_AMBIENT_RIGHTTOLEFT  = (-732)
Public Const DISPID_AMBIENT_TOPTOBOTTOM  = (-733)
Public Const DISPID_Name  = (-800)
Public Const DISPID_Delete  = (-801)
Public Const DISPID_Object  = (-802)
Public Const DISPID_Parent  = (-803)
' ///////////////////////////////////////////////////////////////////////////
'  Dispatch ID constants for font and picture types
Public Const DISPID_FONT_NAME  = 0
Public Const DISPID_FONT_SIZE  = 2
Public Const DISPID_FONT_BOLD  = 3
Public Const DISPID_FONT_ITALIC  = 4
Public Const DISPID_FONT_UNDER  = 5
Public Const DISPID_FONT_STRIKE  = 6
Public Const DISPID_FONT_WEIGHT  = 7
Public Const DISPID_FONT_CHARSET  = 8
Public Const DISPID_FONT_CHANGED  = 9
Public Const DISPID_PICT_HANDLE  = 0
Public Const DISPID_PICT_HPAL  = 2
Public Const DISPID_PICT_TYPE  = 3
Public Const DISPID_PICT_WIDTH  = 4
Public Const DISPID_PICT_HEIGHT  = 5
Public Const DISPID_PICT_RENDER  = 6

Public Const STDOLE_TLB = "stdole2.tlb"
#If WIN64 Then
Public Const STDTYPE_TLB = "stdole2.tlb"
#else
Public Const STDTYPE_TLB = "olepro32.dll"
#End If



Public Const SE_CREATE_TOKEN_NAME              As String = "SeCreateTokenPrivilege"
Public Const SE_ASSIGNPRIMARYTOKEN_NAME        As String = "SeAssignPrimaryTokenPrivilege"
Public Const SE_LOCK_MEMORY_NAME               As String = "SeLockMemoryPrivilege"
Public Const SE_INCREASE_QUOTA_NAME            As String = "SeIncreaseQuotaPrivilege"
Public Const SE_UNSOLICITED_INPUT_NAME         As String = "SeUnsolicitedInputPrivilege"
Public Const SE_MACHINE_ACCOUNT_NAME           As String = "SeMachineAccountPrivilege"
Public Const SE_TCB_NAME                       As String = "SeTcbPrivilege"
Public Const SE_SECURITY_NAME                  As String = "SeSecurityPrivilege"
Public Const SE_TAKE_OWNERSHIP_NAME            As String = "SeTakeOwnershipPrivilege"
Public Const SE_LOAD_DRIVER_NAME               As String = "SeLoadDriverPrivilege"
Public Const SE_SYSTEM_PROFILE_NAME            As String = "SeSystemProfilePrivilege"
Public Const SE_SYSTEMTIME_NAME                As String = "SeSystemtimePrivilege"
Public Const SE_PROF_SINGLE_PROCESS_NAME       As String = "SeProfileSingleProcessPrivilege"
Public Const SE_INC_BASE_PRIORITY_NAME         As String = "SeIncreaseBasePriorityPrivilege"
Public Const SE_CREATE_PAGEFILE_NAME           As String = "SeCreatePagefilePrivilege"
Public Const SE_CREATE_PERMANENT_NAME          As String = "SeCreatePermanentPrivilege"
Public Const SE_BACKUP_NAME                    As String = "SeBackupPrivilege"
Public Const SE_RESTORE_NAME                   As String = "SeRestorePrivilege"
Public Const SE_SHUTDOWN_NAME                  As String = "SeShutdownPrivilege"
Public Const SE_DEBUG_NAME                     As String = "SeDebugPrivilege"
Public Const SE_AUDIT_NAME                     As String = "SeAuditPrivilege"
Public Const SE_SYSTEM_ENVIRONMENT_NAME        As String = "SeSystemEnvironmentPrivilege"
Public Const SE_CHANGE_NOTIFY_NAME             As String = "SeChangeNotifyPrivilege"
Public Const SE_REMOTE_SHUTDOWN_NAME           As String = "SeRemoteShutdownPrivilege"
Public Const SE_UNDOCK_NAME                    As String = "SeUndockPrivilege"
Public Const SE_SYNC_AGENT_NAME                As String = "SeSyncAgentPrivilege"
Public Const SE_ENABLE_DELEGATION_NAME         As String = "SeEnableDelegationPrivilege"
Public Const SE_MANAGE_VOLUME_NAME             As String = "SeManageVolumePrivilege"
Public Const SE_IMPERSONATE_NAME               As String = "SeImpersonatePrivilege"
Public Const SE_CREATE_GLOBAL_NAME             As String = "SeCreateGlobalPrivilege"
Public Const SE_TRUSTED_CREDMAN_ACCESS_NAME    As String = "SeTrustedCredManAccessPrivilege"
Public Const SE_RELABEL_NAME                   As String = "SeRelabelPrivilege"
Public Const SE_INC_WORKING_SET_NAME           As String = "SeIncreaseWorkingSetPrivilege"
Public Const SE_TIME_ZONE_NAME                 As String = "SeTimeZonePrivilege"
Public Const SE_CREATE_SYMBOLIC_LINK_NAME      As String = "SeCreateSymbolicLinkPrivilege"
Public Const SE_INTERACTIVE_LOGON_NAME         As String = "SeInteractiveLogonRight"
Public Const SE_NETWORK_LOGON_NAME             As String = "SeNetworkLogonRight"
Public Const SE_BATCH_LOGON_NAME               As String = "SeBatchLogonRight"
Public Const SE_SERVICE_LOGON_NAME             As String = "SeServiceLogonRight"
Public Const SE_DENY_INTERACTIVE_LOGON_NAME    As String = "SeDenyInteractiveLogonRight"
Public Const SE_DENY_NETWORK_LOGON_NAME        As String = "SeDenyNetworkLogonRight"
Public Const SE_DENY_BATCH_LOGON_NAME          As String = "SeDenyBatchLogonRight"
Public Const SE_DENY_SERVICE_LOGON_NAME        As String = "SeDenyServiceLogonRight"
Public Const SE_REMOTE_INTERACTIVE_LOGON_NAME  As String = "SeRemoteInteractiveLogonRight"
Public Const SE_DENY_REMOTE_INTERACTIVE_LOGON_NAME As String = "SeDenyRemoteInteractiveLogonRight"
Public Const SE_DELEGATE_SESSION_USER_IMPERSONATE_NAME As String = "SeDelegateSessionUserImpersonatePrivilege"

Public Const SE_ACTIVATE_AS_USER_CAPABILITY  = "activateAsUser"
Public Const SE_CONSTRAINED_IMPERSONATION_CAPABILITY  = "constrainedImpersonation"
Public Const SE_SESSION_IMPERSONATION_CAPABILITY  = "sessionImpersonation"
Public Const SE_MUMA_CAPABILITY  = "muma"
Public Const SE_DEVELOPMENT_MODE_NETWORK_CAPABILITY  = "developmentModeNetwork"
Public Const SE_LEARNING_MODE_LOGGING_CAPABILITY  = "learningModeLogging"
Public Const SE_PERMISSIVE_LEARNING_MODE_CAPABILITY  = "permissiveLearningMode"
Public Const SE_APP_SILO_VOLUME_ROOT_MINIMAL_CAPABILITY  = "isolatedWin32-volumeRootMinima"
Public Const SE_APP_SILO_PROFILES_ROOT_MINIMAL_CAPABILITY  = "isolatedWin32-profilesRootMinima"
Public Const SE_APP_SILO_USER_PROFILE_MINIMAL_CAPABILITY  = "isolatedWin32-userProfileMinima"
Public Const SE_APP_SILO_PROMPT_FOR_ACCESS_CAPABILITY  = "isolatedWin32-promptForAccess"
Public Const SE_APP_SILO_ACCESS_TO_PUBLISHER_DIRECTORY_CAPABILITY  = "isolatedWin32-accessToPublisherDirectory"
Public Const SE_APP_SILO_PRINT_CAPABILITY  = "isolatedWin32-print"

Public Enum NTDefinedPrivilegeConsts
    SE_CREATE_TOKEN_PRIVILEGE = 2
    SE_ASSIGNPRIMARYTOKEN_PRIVILEGE
    SE_LOCK_MEMORY_PRIVILEGE
    SE_INCREASE_QUOTA_PRIVILEGE
    SE_MACHINE_ACCOUNT_PRIVILEGE
    SE_TCB_PRIVILEGE
    SE_SECURITY_PRIVILEGE
    SE_TAKE_OWNERSHIP_PRIVILEGE
    SE_LOAD_DRIVER_PRIVILEGE
    SE_SYSTEM_PROFILE_PRIVILEGE
    SE_SYSTEMTIME_PRIVILEGE
    SE_PROF_SINGLE_PROCESS_PRIVILEGE
    SE_INC_BASE_PRIORITY_PRIVILEGE
    SE_CREATE_PAGEFILE_PRIVILEGE
    SE_CREATE_PERMANENT_PRIVILEGE
    SE_BACKUP_PRIVILEGE
    SE_RESTORE_PRIVILEGE
    SE_SHUTDOWN_PRIVILEGE
    SE_DEBUG_PRIVILEGE
    SE_AUDIT_PRIVILEGE
    SE_SYSTEM_ENVIRONMENT_PRIVILEGE
    SE_CHANGE_NOTIFY_PRIVILEGE
    SE_REMOTE_SHUTDOWN_PRIVILEGE
    SE_UNDOCK_PRIVILEGE
    SE_SYNC_AGENT_PRIVILEGE
    SE_ENABLE_DELEGATION_PRIVILEGE
    SE_MANAGE_VOLUME_PRIVILEGE
    SE_IMPERSONATE_PRIVILEGE
    SE_CREATE_GLOBAL_PRIVILEGE
    SE_TRUSTED_CREDMAN_ACCESS_PRIVILEGE
    SE_RELABEL_PRIVILEGE
    SE_INC_WORKING_SET_PRIVILEGE
    SE_TIME_ZONE_PRIVILEGE
    SE_CREATE_SYMBOLIC_LINK_PRIVILEGE
    SE_DELEGATE_SESSION_USER_IMPERSONATE_PRIVILEGE
End Enum


Public Enum TokenAccessRights
    TOKEN_ASSIGN_PRIMARY = &H1
    TOKEN_DUPLICATE = &H2
    TOKEN_IMPERSONATE = &H4
    TOKEN_QUERY = &H8
    TOKEN_QUERY_SOURCE = &H10
    TOKEN_ADJUST_PRIVILEGES = &H20
    TOKEN_ADJUST_GROUPS = &H40
    TOKEN_ADJUST_DEFAULT = &H80
    TOKEN_ADJUST_SESSIONID = &H100
    TOKEN_ALL_ACCESS_P = (STANDARD_RIGHTS_REQUIRED Or TOKEN_ASSIGN_PRIMARY Or TOKEN_DUPLICATE Or TOKEN_IMPERSONATE Or TOKEN_QUERY Or TOKEN_QUERY_SOURCE Or TOKEN_ADJUST_PRIVILEGES Or TOKEN_ADJUST_GROUPS Or TOKEN_ADJUST_DEFAULT)
    TOKEN_ALL_ACCESS = TOKEN_ALL_ACCESS_P Or TOKEN_ADJUST_SESSIONID 
    TOKEN_READ  = (STANDARD_RIGHTS_READ  Or TOKEN_QUERY)
    TOKEN_WRITE  = (STANDARD_RIGHTS_WRITE  Or  TOKEN_ADJUST_PRIVILEGES  Or  TOKEN_ADJUST_GROUPS  Or  TOKEN_ADJUST_DEFAULT)
    TOKEN_EXECUTE  = (STANDARD_RIGHTS_EXECUTE)
    TOKEN_TRUST_CONSTRAINT_MASK  = (STANDARD_RIGHTS_READ  Or  TOKEN_QUERY  Or  TOKEN_QUERY_SOURCE )
    TOKEN_TRUST_ALLOWED_MASK  = (TOKEN_TRUST_CONSTRAINT_MASK  Or  TOKEN_DUPLICATE  Or  TOKEN_IMPERSONATE)
' #if (NTDDI_VERSION >= NTDDI_WIN8)
    TOKEN_ACCESS_PSEUDO_HANDLE_WIN8  = (TOKEN_QUERY  Or  TOKEN_QUERY_SOURCE)
    TOKEN_ACCESS_PSEUDO_HANDLE  = TOKEN_ACCESS_PSEUDO_HANDLE_WIN8
    
End Enum

Public Type SECURITY_QUALITY_OF_SERVICE
    Length As Long
    ImpersonationLevel As SECURITY_IMPERSONATION_LEVEL
    ContextTrackingMode As Byte
    EffectiveOnly As Byte
End Type

Public Enum SECURITY_IMPERSONATION_LEVEL
    SecurityAnonymous 
    SecurityIdentification  
    SecurityImpersonation  
    SecurityDelegation
End Enum
Public Const SECURITY_MAX_IMPERSONATION_LEVEL  = SecurityDelegation
Public Const SECURITY_MIN_IMPERSONATION_LEVEL  = SecurityAnonymous
Public Const DEFAULT_IMPERSONATION_LEVEL  = SecurityImpersonation
Public Function VALID_IMPERSONATION_LEVEL(ByVal L As Long) As Boolean
    Return (((L) >= SECURITY_MIN_IMPERSONATION_LEVEL) And ((L) <= SECURITY_MAX_IMPERSONATION_LEVEL))
End Function

Public Enum SQOS_Bits
    SECURITY_ANONYMOUS = (SecurityAnonymous << 16)
    SECURITY_IDENTIFICATION = (SecurityIdentification << 16)
    SECURITY_IMPERSONATION = (SecurityImpersonation << 16)
    SECURITY_DELEGATION = (SecurityDelegation << 16)
    SECURITY_CONTEXT_TRACKING = &H00040000
    SECURITY_EFFECTIVE_ONLY = &H00080000
    SECURITY_SQOS_PRESENT = &H00100000
    SECURITY_VALID_SQOS_FLAGS = &H001F0000
End Enum

Public Type ACL
    AclRevision As Byte
    Sbz1 As Byte
    AclSize As Integer
    AceCount As Integer
    Sbz2 As Integer
End Type


Public Enum FILE_FLAGS
    FILE_FLAG_IGNORE_IMPERSONATED_DEVICEMAP = &H00020000
    FILE_FLAG_OPEN_REQUIRING_OPLOCK = &H00040000
    FILE_FLAG_FIRST_PIPE_INSTANCE = &H00080000
    FILE_FLAG_OPEN_NO_RECALL = &H00100000
    FILE_FLAG_OPEN_REPARSE_POINT = &H00200000
    FILE_FLAG_SESSION_AWARE = &H00800000
    FILE_FLAG_POSIX_SEMANTICS = &H01000000
    FILE_FLAG_BACKUP_SEMANTICS = &H02000000
    FILE_FLAG_DELETE_ON_CLOSE = &H04000000
    FILE_FLAG_SEQUENTIAL_SCAN = &H08000000
    FILE_FLAG_RANDOM_ACCESS = &H10000000
    FILE_FLAG_NO_BUFFERING = &H20000000
    FILE_FLAG_OVERLAPPED = &H40000000
    FILE_FLAG_WRITE_THROUGH = &H80000000
End Enum

Public Enum WindowMessages
    WM_ACTIVATE = &H0006
    WM_ACTIVATEAPP = &H001C
    WM_AFXFIRST = &H0360
    WM_AFXLAST = &H037F
    WM_APP = &H8000&
    WM_ASKCBFORMATNAME = &H030C
    WM_CANCELJOURNAL = &H004B
    WM_CANCELMODE = &H001F
    WM_CAPTURECHANGED = &H0215
    WM_CHANGECBCHAIN = &H030D
    WM_CHANGEUISTATE = &H0127
    WM_CHAR = &H0102
    WM_CHARTOITEM = &H002F
    WM_CHILDACTIVATE = &H0022
    WM_CLEAR = &H0303
    WM_CLOSE = &H0010
    WM_COMMAND = &H0111
    WM_COMPACTING = &H0041
    WM_COMPAREITEM = &H0039
    WM_CONTEXTMENU = &H007B
    WM_COPY = &H0301
    WM_COPYDATA = &H004A
    WM_CREATE = &H0001
    WM_CTLCOLORBTN = &H0135
    WM_CTLCOLORDLG = &H0136
    WM_CTLCOLOREDIT = &H0133
    WM_CTLCOLORLISTBOX = &H0134
    WM_CTLCOLORMSGBOX = &H0132
    WM_CTLCOLORSCROLLBAR = &H0137
    WM_CTLCOLORSTATIC = &H0138
    MN_GETHMENU = &H01E1
    WM_CUT = &H0300
    WM_DEADCHAR = &H0103
    WM_DELETEITEM = &H002D
    WM_DESTROY = &H0002
    WM_DESTROYCLIPBOARD = &H0307
    WM_DEVICECHANGE = &H0219
    WM_DEVMODECHANGE = &H001B
    WM_DISPLAYCHANGE = &H007E
    WM_DRAWCLIPBOARD = &H0308
    WM_DRAWITEM = &H002B
    WM_DROPFILES = &H0233
    WM_ENABLE = &H000A
    WM_ENDSESSION = &H0016
    WM_ENTERIDLE = &H0121
    WM_ENTERMENULOOP = &H0211
    WM_ENTERSIZEMOVE = &H0231
    WM_ERASEBKGND = &H0014
    WM_EXITMENULOOP = &H0212
    WM_EXITSIZEMOVE = &H0232
    WM_FONTCHANGE = &H001D
    WM_GETDLGCODE = &H0087
    WM_GETFONT = &H0031
    WM_GETHOTKEY = &H0033
    WM_GETICON = &H007F
    WM_GETMINMAXINFO = &H0024
    WM_GETOBJECT = &H003D
    WM_GETTEXT = &H000D
    WM_GETTEXTLENGTH = &H000E
    WM_HANDHELDFIRST = &H0358
    WM_HANDHELDLAST = &H035F
    WM_HELP = &H0053
    WM_HOTKEY = &H0312
    WM_HSCROLL = &H0114
    WM_HSCROLLCLIPBOARD = &H030E
    WM_ICONERASEBKGND = &H0027
    WM_IME_CHAR = &H0286
    WM_IME_COMPOSITION = &H010F
    WM_IME_COMPOSITIONFULL = &H0284
    WM_IME_CONTROL = &H0283
    WM_IME_ENDCOMPOSITION = &H010E
    WM_IME_KEYDOWN = &H0290
    WM_IME_KEYLAST = &H010F
    WM_IME_KEYUP = &H0291
    WM_IME_NOTIFY = &H0282
    WM_IME_REQUEST = &H0288
    WM_IME_SELECT = &H0285
    WM_IME_SETCONTEXT = &H0281
    WM_IME_STARTCOMPOSITION = &H010D
    WM_INITDIALOG = &H0110
    WM_INITMENU = &H0116
    WM_INITMENUPOPUP = &H0117
    WM_INPUTLANGCHANGE = &H0051
    WM_INPUTLANGCHANGEREQUEST = &H0050
    WM_KEYDOWN = &H0100
    WM_KEYFIRST = &H0100
    WM_KEYLAST = &H0108
    WM_KEYUP = &H0101
    WM_KILLFOCUS = &H0008
    WM_LBUTTONDBLCLK = &H0203
    WM_LBUTTONDOWN = &H0201
    WM_LBUTTONUP = &H0202
    WM_MBUTTONDBLCLK = &H0209
    WM_MBUTTONDOWN = &H0207
    WM_MBUTTONUP = &H0208
    WM_MDIACTIVATE = &H0222
    WM_MDICASCADE = &H0227
    WM_MDICREATE = &H0220
    WM_MDIDESTROY = &H0221
    WM_MDIGETACTIVE = &H0229
    WM_MDIICONARRANGE = &H0228
    WM_MDIMAXIMIZE = &H0225
    WM_MDINEXT = &H0224
    WM_MDIREFRESHMENU = &H0234
    WM_MDIRESTORE = &H0223
    WM_MDISETMENU = &H0230
    WM_MDITILE = &H0226
    WM_MEASUREITEM = &H002C
    WM_MENUCHAR = &H0120
    WM_MENUCOMMAND = &H0126
    WM_MENUDRAG = &H0123
    WM_MENUGETOBJECT = &H0124
    WM_MENURBUTTONUP = &H0122
    WM_MENUSELECT = &H011F
    WM_MOUSEACTIVATE = &H0021
    WM_MOUSEFIRST = &H0200
    WM_MOUSEHOVER = &H02A1
    WM_MOUSELAST = &H020D
    WM_MOUSELEAVE = &H02A3
    WM_MOUSEMOVE = &H0200
    WM_MOUSEWHEEL = &H020A
    WM_MOUSEHWHEEL = &H020E
    WM_MOVE = &H0003
    WM_MOVING = &H0216
    WM_NCACTIVATE = &H0086
    WM_NCCALCSIZE = &H0083
    WM_NCCREATE = &H0081
    WM_NCDESTROY = &H0082
    WM_NCHITTEST = &H0084
    WM_NCLBUTTONDBLCLK = &H00A3
    WM_NCLBUTTONDOWN = &H00A1
    WM_NCLBUTTONUP = &H00A2
    WM_NCMBUTTONDBLCLK = &H00A9
    WM_NCMBUTTONDOWN = &H00A7
    WM_NCMBUTTONUP = &H00A8
    WM_NCMOUSEHOVER = &H02A0
    WM_NCMOUSELEAVE = &H02A2
    WM_NCMOUSEMOVE = &H00A0
    WM_NCPAINT = &H0085
    WM_NCRBUTTONDBLCLK = &H00A6
    WM_NCRBUTTONDOWN = &H00A4
    WM_NCRBUTTONUP = &H00A5
    WM_NCXBUTTONDBLCLK = &H00AD
    WM_NCXBUTTONDOWN = &H00AB
    WM_NCXBUTTONUP = &H00AC
    WM_NCUAHDRAWCAPTION = &H00AE
    WM_NCUAHDRAWFRAME = &H00AF
    WM_NEXTDLGCTL = &H0028
    WM_NEXTMENU = &H0213
    WM_NOTIFY = &H004E
    WM_NOTIFYFORMAT = &H0055
    WM_NULL = &H0000
    WM_PAINT = &H000F
    WM_PAINTCLIPBOARD = &H0309
    WM_PAINTICON = &H0026
    WM_PALETTECHANGED = &H0311
    WM_PALETTEISCHANGING = &H0310
    WM_PARENTNOTIFY = &H0210
    WM_PASTE = &H0302
    WM_PENWINFIRST = &H0380
    WM_PENWINLAST = &H038F
    WM_POWER = &H0048
    WM_POWERBROADCAST = &H0218
    WM_PRINT = &H0317
    WM_PRINTCLIENT = &H0318
    WM_QUERYPARKICON = &H0036
    WM_QUERYDRAGICON = &H0037
    WM_QUERYENDSESSION = &H0011
    WM_QUERYNEWPALETTE = &H030F
    WM_QUERYOPEN = &H0013
    WM_QUEUESYNC = &H0023
    WM_QUIT = &H0012
    WM_RBUTTONDBLCLK = &H0206
    WM_RBUTTONDOWN = &H0204
    WM_RBUTTONUP = &H0205
    WM_RENDERALLFORMATS = &H0306
    WM_RENDERFORMAT = &H0305
    WM_SETCURSOR = &H0020
    WM_SETFOCUS = &H0007
    WM_SETFONT = &H0030
    WM_SETHOTKEY = &H0032
    WM_SETICON = &H0080
    WM_SETREDRAW = &H000B
    WM_SETTEXT = &H000C
    WM_SETTINGCHANGE = &H001A
    WM_SHOWWINDOW = &H0018
    WM_SIZE = &H0005
    WM_SIZECLIPBOARD = &H030B
    WM_SIZING = &H0214
    WM_SPOOLERSTATUS = &H002A
    WM_STYLECHANGED = &H007D
    WM_STYLECHANGING = &H007C
    WM_SYNCPAINT = &H0088
    WM_SYSCHAR = &H0106
    WM_SYSCOLORCHANGE = &H0015
    WM_SYSCOMMAND = &H0112
    WM_SYSDEADCHAR = &H0107
    WM_SYSKEYDOWN = &H0104
    WM_SYSKEYUP = &H0105
    WM_TCARD = &H0052
    WM_TIMECHANGE = &H001E
    WM_TIMER = &H0113
    WM_UNDO = &H0304
    WM_UNICHAR = &H0109
    WM_UNINITMENUPOPUP = &H0125
    WM_USER = &H0400
    WM_USERCHANGED = &H0054
    WM_VKEYTOITEM = &H002E
    WM_VSCROLL = &H0115
    WM_VSCROLLCLIPBOARD = &H030A
    WM_WINDOWPOSCHANGED = &H0047
    WM_WINDOWPOSCHANGING = &H0046
    WM_WININICHANGE = &H001A
    WM_XBUTTONDBLCLK = &H020D
    WM_XBUTTONDOWN = &H020B
    WM_XBUTTONUP = &H020C
    WM_UPDATEUISTATE = &H0128
    WM_QUERYUISTATE = &H0129
'#If (_WIN32_WINNT >= = &H0501)
    WM_WTSSESSION_CHANGE = &H02B1
    WM_CLIPBOARDUPDATE = &H031D
    WM_INPUT_DEVICE_CHANGE = &H00FE
    WM_INPUT = &H00FF
    WM_TABLET_FIRST = &H02c0
    WM_TABLET_LAST = &H02df
    WM_THEMECHANGED = &H031A

'#if(_WIN32_WINNT >= = &H0600)
    WM_DWMCOMPOSITIONCHANGED = &H031E
    WM_DWMNCRENDERINGCHANGED = &H031F
    WM_DWMCOLORIZATIONCOLORCHANGED = &H0320
    WM_DWMWINDOWMAXIMIZEDCHANGE = &H0321
    WM_GETTITLEBARINFOEX = &H033F
'#if(WINVER >= = &H0601)
    WM_TOUCH = &H0240
    WM_DPICHANGED = &H02E0
    WM_DWMSENDICONICTHUMBNAIL = &H0323
    WM_DWMSENDICONICLIVEPREVIEWBITMAP = &H0326
    WM_GESTURE = &H0119
    WM_GESTURENOTIFY = &H011A

    
'#endif /* WINVER >= = &H0601 */

'#if(WINVER >= = &H0602)
    WM_NCPOINTERUPDATE = &H0241
    WM_NCPOINTERDOWN = &H0242
    WM_NCPOINTERUP = &H0243
    WM_POINTERUPDATE = &H0245
    WM_POINTERDOWN = &H0246
    WM_POINTERUP = &H0247
    WM_POINTERENTER = &H0249
    WM_POINTERLEAVE = &H024A
    WM_POINTERACTIVATE = &H024B
    WM_POINTERCAPTURECHANGED = &H024C
    WM_TOUCHHITTESTING = &H024D
    WM_POINTERWHEEL = &H024E
    WM_POINTERHWHEEL = &H024F
    DM_POINTERHITTEST = &H0250
    WM_POINTERROUTEDTO = &H0251
    WM_POINTERROUTEDAWAY = &H0252
    WM_POINTERROUTEDRELEASED = &H0253
    WM_POINTERDEVICECHANGE = &H238
    WM_POINTERDEVICEINRANGE = &H239
    WM_POINTERDEVICEOUTOFRANGE = &H23A
'#endif /* WINVER >= = &H0602 */
'#If (WINVER >= = &H0605)
    WM_DPICHANGED_BEFOREPARENT = &H02E2
    WM_DPICHANGED_AFTERPARENT = &H02E3
    WM_GETDPISCALEDSIZE = &H02E4
    
'#if(WINVER >= &H0607)
    WM_TOOLTIPDISMISS = &H0345

    'Undocumented:
    WM_UAHDESTROYWINDOW = &H0090
    WM_UAHDRAWMENU = &H0091
    WM_UAHDRAWMENUITEM = &H0092
    WM_UAHINITMENU = &H0093
    WM_UAHMEASUREMENUITEM = &H0094
    WM_UAHNCPAINTMENUPOPUP = &H0095
    WM_UAHUPDATE = &H0096
    WM_SETVISIBLE = &H9
    WM_SYSTEMERROR = &H17
    WM_LOGOFF = &H25
    WM_ALTTABACTIVE = &H29
    WM_FILESYSCHANGE = &H34
    WM_ISACTIVEICON = &H35
    WM_UNUSED0036 = &H36
    WM_WINHELP = &H38
    WM_FULLSCREEN = &H3A
    WM_CLIENTSHUTDOWN = &H3B
    WM_DDEMLEVENT = &H3C
    WM_TESTING = &H40
    WM_OTHERWINDOWCREATED = &H42
    WM_OTHERWINDOWDESTROYED = &H43
    WM_MEDIASTATUSCHANGE = &H45
    WM_COPYGLOBALDATA = &H49
    WM_LOGONNOTIFY = &H4C
    WM_KEYF1 = &H4D
    WM_ACCESS_WINDOW = &H4F
    WM_FINALDESTROY = &H70
    WM_MEASUREITEM_CLIENTDATA = &H71
    WM_SYNCTASK = &H89
    WM_KLUDGEMINRECT = &H8B
    WM_MYSTERY = &H8B
    WM_YOMICHAR = &H108
    WM_SYSTIMER = &H118
    WM_DROPOBJECT = &H22A
    WM_QUERYDROPOBJECT = &H22B
    WM_BEGINDRAG = &H22C
    WM_DRAGLOOP = &H22D
    WM_DRAGSELECT = &H22E
    WM_DRAGMOVE = &H22F
    WM_SYSMENU = &H313
    WM_HOOKMSG = &H314
    WM_EXITPROCESS = &H315
    WM_WAKETHREAD = &H316
    WM_RCRESULT = &H381
    WM_HOOKRCRESULT = &H382
    WM_GLOBALRCCHANGE = &H383
    WM_PENMISCINFO = &H383
    WM_SKB = &H384
    WM_HEDITCTL = &H385
    WM_PENCTL = &H385
    WM_PENMISC = &H386
    WM_CTLINIT = &H387
    WM_PENEVENT = &H388
    WM_COALESCE_FIRST = &H390
    WM_COALESCE_LAST = &H39F
    WM_CTLCOLOR = &H19
        

    WM_TABLET_MAXOFFSET = &H20
    WM_COMMNOTIFY = &H44

    WM_WNT_CONVERTREQUESTEX = &H109
    WM_CONVERTREQUEST = &H10A
    WM_CONVERTRESULT = &H10B
    WM_INTERIM = &H10C
    WM_IME_REPORT = &H280
    WM_IMEKEYDOWN = &H290
    WM_IMEKEYUP = &H291
    WM_TABLET_DEFBASE = &H2C0
    WM_TABLET_ADDED = &H2C8
    WM_TABLET_DELETED = &H2C9
    WM_TABLET_FLICK = &H2CB
    WM_TABLET_QUERYSYSTEMGESTURESTATUS = &H2CC
    WM_RASDIALEVENT = &HCCCD&
    
    WM_DDE_FIRST  = &H03E0
    WM_DDE_INITIATE  = (WM_DDE_FIRST)
    WM_DDE_TERMINATE  = (WM_DDE_FIRST+1)
    WM_DDE_ADVISE  = (WM_DDE_FIRST+2)
    WM_DDE_UNADVISE  = (WM_DDE_FIRST+3)
    WM_DDE_ACK  = (WM_DDE_FIRST+4)
    WM_DDE_DATA  = (WM_DDE_FIRST+5)
    WM_DDE_REQUEST  = (WM_DDE_FIRST+6)
    WM_DDE_POKE  = (WM_DDE_FIRST+7)
    WM_DDE_EXECUTE  = (WM_DDE_FIRST+8)
    WM_DDE_LAST  = (WM_DDE_FIRST+ 8)
    
    OCM__BASE = (WM_USER + &H1C00)
    OCM_CTLCOLOR = (OCM__BASE + WM_CTLCOLOR)
    OCM_DRAWITEM = (OCM__BASE + WM_DRAWITEM)
    OCM_MEASUREITEM = (OCM__BASE + WM_MEASUREITEM)
    OCM_DELETEITEM = (OCM__BASE + WM_DELETEITEM)
    OCM_VKEYTOITEM = (OCM__BASE + WM_VKEYTOITEM)
    OCM_CHARTOITEM = (OCM__BASE + WM_CHARTOITEM)
    OCM_COMPAREITEM = (OCM__BASE + WM_COMPAREITEM)
    OCM_NOTIFY = (OCM__BASE + WM_NOTIFY)
    OCM_COMMAND = (OCM__BASE + WM_COMMAND)
    OCM_HSCROLL = (OCM__BASE + WM_HSCROLL)
    OCM_VSCROLL = (OCM__BASE + WM_VSCROLL)
    OCM_CTLCOLORMSGBOX = (OCM__BASE + WM_CTLCOLORMSGBOX)
    OCM_CTLCOLOREDIT = (OCM__BASE + WM_CTLCOLOREDIT)
    OCM_CTLCOLORLISTBOX = (OCM__BASE + WM_CTLCOLORLISTBOX)
    OCM_CTLCOLORBTN = (OCM__BASE + WM_CTLCOLORBTN)
    OCM_CTLCOLORDLG = (OCM__BASE + WM_CTLCOLORDLG)
    OCM_CTLCOLORSCROLLBAR = (OCM__BASE + WM_CTLCOLORSCROLLBAR)
    OCM_CTLCOLORSTATIC = (OCM__BASE + WM_CTLCOLORSTATIC)
    OCM_PARENTNOTIFY = (OCM__BASE + WM_PARENTNOTIFY)
    
    'aliases for above:
    WM_REFLECT = (WM_USER + &H1C00)
    WM_REFLECT_CTLCOLOR = (OCM__BASE + WM_CTLCOLOR)
    WM_REFLECT_DRAWITEM = (OCM__BASE + WM_DRAWITEM)
    WM_REFLECT_MEASUREITEM = (OCM__BASE + WM_MEASUREITEM)
    WM_REFLECT_DELETEITEM = (OCM__BASE + WM_DELETEITEM)
    WM_REFLECT_VKEYTOITEM = (OCM__BASE + WM_VKEYTOITEM)
    WM_REFLECT_CHARTOITEM = (OCM__BASE + WM_CHARTOITEM)
    WM_REFLECT_COMPAREITEM = (OCM__BASE + WM_COMPAREITEM)
    WM_REFLECT_NOTIFY = (OCM__BASE + WM_NOTIFY)
    WM_REFLECT_COMMAND = (OCM__BASE + WM_COMMAND)
    WM_REFLECT_HSCROLL = (OCM__BASE + WM_HSCROLL)
    WM_REFLECT_VSCROLL = (OCM__BASE + WM_VSCROLL)
    WM_REFLECT_CTLCOLORMSGBOX = (OCM__BASE + WM_CTLCOLORMSGBOX)
    WM_REFLECT_CTLCOLOREDIT = (OCM__BASE + WM_CTLCOLOREDIT)
    WM_REFLECT_CTLCOLORLISTBOX = (OCM__BASE + WM_CTLCOLORLISTBOX)
    WM_REFLECT_CTLCOLORBTN = (OCM__BASE + WM_CTLCOLORBTN)
    WM_REFLECT_CTLCOLORDLG = (OCM__BASE + WM_CTLCOLORDLG)
    WM_REFLECT_CTLCOLORSCROLLBAR = (OCM__BASE + WM_CTLCOLORSCROLLBAR)
    WM_REFLECT_CTLCOLORSTATIC = (OCM__BASE + WM_CTLCOLORSTATIC)
    WM_REFLECT_PARENTNOTIFY = (OCM__BASE + WM_PARENTNOTIFY)
End Enum

Public Enum WM_KEY_lParam
    KF_EXTENDED = &H0100
    KF_DLGMODE = &H0800
    KF_MENUMODE = &H1000
    KF_ALTDOWN = &H2000
    KF_REPEAT = &H4000
    KF_UP = &H8000&
End Enum


Public Enum WMACTIVATE_FLAGS
    WA_INACTIVE = 0
    WA_ACTIVE = 1
    WA_CLICKACTIVE = 2
End Enum

Public Type MINMAXINFO
    ptReserved As POINT
    ptMaxSize As POINT
    ptMaxPosition As POINT
    ptMinTrackSize As POINT
    ptMaxTrackSize As POINT
End Type

Public Enum WMPOWER_wParam
    PWR_OK = 1
    PWR_FAIL = (-1)
    PWR_SUSPENDREQUEST = 1
    PWR_SUSPENDRESUME = 2
    PWR_CRITICALRESUME = 3
End Enum

Public Type COPYDATASTRUCT
    dwData As LongPtr
    cbData As Long
    lpData As LongPtr
End Type
 
Public Type MDINEXTMENU
    hmenuIn As LongPtr
    hmenuNext As LongPtr
    hwndNext As LongPtr
End Type

Public Const UNICODE_NOCHAR = &HFFFF&

Public Enum WMUISTATE_ACTION
    UIS_SET = 1
    UIS_CLEAR = 2
    UIS_INITIALIZE = 3
End Enum
Public Enum WMUISTATE_FLAGS
    UISF_HIDEFOCUS = &H1
    UISF_HIDEACCEL = &H2
    UISF_ACTIVE = &H4
End Enum

Public Const MSH_MOUSEWHEEL= "MSWHEEL_ROLLMSG"
Public Const WHEEL_DELTA  = 120
Public Const WHEEL_PAGESCROLL = (UINT_MAX)

Public Const MOUSEZ_CLASSNAME  = "MouseZ"  ' wheel window class
Public Const MOUSEZ_TITLE  = "Magellan MSWHEEL"  ' wheel window title
Public Const MSH_WHEELSUPPORT  = "MSH_WHEELSUPPORT_MSG"  ' name of msg to send
'  to query for wheel support
Public Const MSH_WHEELMODULE_CLASS  = (MOUSEZ_CLASSNAME)
Public Const MSH_WHEELMODULE_TITLE  = (MOUSEZ_TITLE)
Public Const MSH_SCROLL_LINES  = "MSH_SCROLL_LINES_MSG"

Public Const XBUTTON1  = &H0001
Public Const XBUTTON2  = &H0002



Public Const MDIS_ALLCHILDSTYLES  = &H0001
Public Enum MDITILE_FLAGS
    MDITILE_VERTICAL = &H0000 /*not in win3.1 */
    MDITILE_HORIZONTAL = &H0001 /*not in win3.1 */
    MDITILE_SKIPDISABLED = &H0002 /*not in win3.1 */
    MDITILE_ZORDER = &H0004
End Enum


[ Description("WM_POWERBROADCAST wParams") ]
Public Enum PowerBroadcastFlags
    PBT_APMQUERYSUSPEND = &H0000
    PBT_APMQUERYSTANDBY = &H0001
    PBT_APMQUERYSUSPENDFAILED = &H0002
    PBT_APMQUERYSTANDBYFAILED = &H0003
    PBT_APMSUSPEND = &H0004
    PBT_APMSTANDBY = &H0005
    PBT_APMRESUMECRITICAL = &H0006
    PBT_APMRESUMESUSPEND = &H0007
    PBT_APMRESUMESTANDBY = &H0008
    PBTF_APMRESUMEFROMFAILURE = &H00000001
    PBT_APMBATTERYLOW = &H0009
    PBT_APMPOWERSTATUSCHANGE = &H000A
    PBT_APMOEMEVENT = &H000B
    PBT_APMRESUMEAUTOMATIC = &H0012
    PBT_POWERSETTINGCHANGE = &H8013&
End Enum
[ Description("⚠️**WARNING:** You can't use this directly due to the SAFEARRAY. To receive, fill the first 20 bytes, then the data in the array. To send, create a byte buffer excluding the safearray member.") ]
Public Type POWERBROADCAST_SETTING
    PowerSetting As UUID
    DataLength As Long
    Data() As Byte
End Type

Public Enum WMSIZING_wParam
    WMSZ_LEFT = 1
    WMSZ_RIGHT = 2
    WMSZ_TOP = 3
    WMSZ_TOPLEFT = 4
    WMSZ_TOPRIGHT = 5
    WMSZ_BOTTOM = 6
    WMSZ_BOTTOMLEFT = 7
    WMSZ_BOTTOMRIGHT = 8
End Enum

Public Enum WMMOUSEACTIVATE_Return
    MA_ACTIVATE = 1
    MA_ACTIVATEANDEAT = 2
    MA_NOACTIVATE = 3
    MA_NOACTIVATEANDEAT = 4
End Enum

Public Enum WMGETSETICON_Flags
    ICON_SMALL = 0
    ICON_BIG = 1
    ICON_SMALL2 = 2
End Enum

Public Enum WMSYNCTASK_Flags
    ST_BEGINSWP = 0
    ST_ENDSWP = 1
End Enum

Public Enum WMSIZE_wParam
    SIZE_RESTORED = 0
    SIZE_MINIMIZED = 1
    SIZE_MAXIMIZED = 2
    SIZE_MAXSHOW = 3
    SIZE_MAXHIDE = 4
    SIZENORMAL  = SIZE_RESTORED
    SIZEICONIC  = SIZE_MINIMIZED
    SIZEFULLSCREEN  = SIZE_MAXIMIZED
    SIZEZOOMSHOW  = SIZE_MAXSHOW
    SIZEZOOMHIDE  = SIZE_MAXHIDE
End Enum

Public Enum ShowWindowLegacyNames
    HIDE_WINDOW  = 0
    SHOW_OPENWINDOW  = 1
    SHOW_ICONWINDOW  = 2
    SHOW_FULLSCREEN  = 3
    SHOW_OPENNOACTIVATE  = 4
End Enum
Public Enum WM_SHOWWINDOW_Ident
    SW_PARENTCLOSING  = 1
    SW_OTHERZOOM  = 2
    SW_PARENTOPENING  = 3
    SW_OTHERUNZOOM  = 4
End Enum

Public Type NCCALCSIZE_PARAMS
    rgrc(0 To 2) As RECT
    lppos As LongPtr 'PWINDOWPOS
End Type

Public Enum WMNCCALCSIZE_Return
    WVR_ALIGNTOP = &H0010
    WVR_ALIGNLEFT = &H0020
    WVR_ALIGNBOTTOM = &H0040
    WVR_ALIGNRIGHT = &H0080
    WVR_HREDRAW = &H0100
    WVR_VREDRAW = &H0200
    WVR_REDRAW = (WVR_HREDRAW Or WVR_VREDRAW)
    WVR_VALIDRECTS = &H0400
End Enum

Public Enum WMPRINT_Flags
    PRF_CHECKVISIBLE = &H00000001
    PRF_NONCLIENT = &H00000002
    PRF_CLIENT = &H00000004
    PRF_ERASEBKGND = &H00000008
    PRF_CHILDREN = &H00000010
    PRF_OWNED = &H00000020
End Enum

Public Enum WM_INPUTLANGCHANGEREQUEST_wParam
    INPUTLANGCHANGE_SYSCHARSET = &H0001
    INPUTLANGCHANGE_FORWARD = &H0002
    INPUTLANGCHANGE_BACKWARD = &H0004
End Enum


Public Enum WMDEVICECHANGE_wParam
    DBT_APPYBEGIN = &H0000
    DBT_APPYEND = &H0001
    DBT_DEVNODES_CHANGED = &H0007
    DBT_QUERYCHANGECONFIG = &H0017
    DBT_CONFIGCHANGED = &H0018
    DBT_CONFIGCHANGECANCELED = &H0019
    DBT_MONITORCHANGE = &H001B
    DBT_SHELLLOGGEDON = &H0020
    DBT_CONFIGMGAPI32 = &H0022
    DBT_VXDINITCOMPLETE = &H0023
    DBT_VOLLOCKQUERYLOCK = &H8041&
    DBT_VOLLOCKLOCKTAKEN = &H8042&
    DBT_VOLLOCKLOCKFAILED = &H8043&
    DBT_VOLLOCKQUERYUNLOCK = &H8044&
    DBT_VOLLOCKLOCKRELEASED = &H8045&
    DBT_VOLLOCKUNLOCKFAILED = &H8046&
    DBT_NO_DISK_SPACE = &H0047
    DBT_LOW_DISK_SPACE = &H0048
    DBT_CONFIGMGPRIVATE = &H7FFF
    DBT_DEVICEARRIVAL = &H8000&  ' system detected a new device
    DBT_DEVICEQUERYREMOVE = &H8001&  ' wants to remove, may fail
    DBT_DEVICEQUERYREMOVEFAILED = &H8002&  ' removal aborted
    DBT_DEVICEREMOVEPENDING = &H8003&  ' about to remove, still avail.
    DBT_DEVICEREMOVECOMPLETE = &H8004&  ' device is gone
    DBT_DEVICETYPESPECIFIC = &H8005&  ' type specific event
    DBT_CUSTOMEVENT = &H8006&  ' user-defined event
    DBT_VPOWERDAPI = &H8100&  ' VPOWERD API for Win95
    DBT_USERDEFINED = &HFFFF&
End Enum
Public Enum DBT_Flags
    DBTF_RESOURCE = &H00000001  ' network resource
    DBTF_XPORT = &H00000002  ' new transport coming or going
    DBTF_SLOWNET = &H00000004  ' new incoming transport is slow
'  (dbcn_resource undefined for now)
End Enum
Public Enum DBT_DEVTYPE
    DBT_DEVTYP_OEM = &H00000000  ' oem-defined device type
    DBT_DEVTYP_DEVNODE = &H00000001  ' devnode number
    DBT_DEVTYP_VOLUME = &H00000002  ' logical volume
    DBT_DEVTYP_PORT = &H00000003  ' serial, parallel
    DBT_DEVTYP_NET = &H00000004  ' network resource
    DBT_DEVTYP_DEVICEINTERFACE = &H00000005  ' device interface class
    DBT_DEVTYP_HANDLE = &H00000006  ' file system handle
End Enum

[ Description("Please go to definition and read comments. Wow64 has 32/64 variants.") ]
Public Type DEV_BROADCAST_HANDLE
    dbch_size As Long 'IF ORIGINATING, SET TO EXCLUDE UNUSED dbch_data bytes beyond 1!
    dbch_devicetype As DBT_DEVTYPE
    dbch_reserved As Long
    dbch_handle As LongPtr ' file handle used in call to RegisterDeviceNotification
    dbch_hdevnotify As LongPtr ' returned from RegisterDeviceNotification
    ' The following 3 fields are only valid if wParam is DBT_CUSTOMEVENT.
    dbch_eventguid As UUID
    dbch_nameoffset As Long ' offset (bytes) of variable-length string buffer (-1 if none)
    dbch_data (0 To 1023) As Byte ' variable-sized buffer, potentially containing binary and/or text data
    'NOTE: Buffer ubound is a guess. You may need more. It's a variable C-style array.
End Type
[ Description("Please go to definition and read comments.") ]
Public Type DEV_BROADCAST_HANDLE32
    dbch_size As Long 'IF ORIGINATING, SET TO EXCLUDE UNUSED dbch_data bytes beyond 1!
    dbch_devicetype As DBT_DEVTYPE
    dbch_reserved As Long
    dbch_handle As Long ' file handle used in call to RegisterDeviceNotification
    dbch_hdevnotify As Long ' returned from RegisterDeviceNotification
    ' The following 3 fields are only valid if wParam is DBT_CUSTOMEVENT.
    dbch_eventguid As UUID
    dbch_nameoffset As Long ' offset (bytes) of variable-length string buffer (-1 if none)
    dbch_data (0 To 1023) As Byte ' variable-sized buffer, potentially containing binary and/or text data
    'NOTE: Buffer ubound is a guess. You may need more. It's a variable C-style array.
End Type
[ Description("Please go to definition and read comments.") ]
Public Type DEV_BROADCAST_HANDLE64
    dbch_size As Long 'IF ORIGINATING, SET TO EXCLUDE UNUSED dbch_data bytes beyond 1!
    dbch_devicetype As DBT_DEVTYPE
    dbch_reserved As Long
    dbch_handle As LongLong ' file handle used in call to RegisterDeviceNotification
    dbch_hdevnotify As LongLong ' returned from RegisterDeviceNotification
    ' The following 3 fields are only valid if wParam is DBT_CUSTOMEVENT.
    dbch_eventguid As UUID
    dbch_nameoffset As Long ' offset (bytes) of variable-length string buffer (-1 if none)
    dbch_data (0 To 1023) As Byte ' variable-sized buffer, potentially containing binary and/or text data
    'NOTE: Buffer ubound is a guess. You may need more. It's a variable C-style array.
End Type

Public Type DEV_BROADCAST_DEVICEINTERFACE_A
    dbcc_size As Long
    dbcc_devicetype As DBT_DEVTYPE
    dbcc_reserved As Long
    dbcc_classguid As UUID
    dbcc_name (0 To (MAX_PATH - 1)) As Byte 'NOTE: Buffer ubound is a guess. You may need more. It's a variable C-style array.
End Type
Public Type DEV_BROADCAST_DEVICEINTERFACE_W
    dbcc_size As Long
    dbcc_devicetype As DBT_DEVTYPE
    dbcc_reserved As Long
    dbcc_classguid As UUID
    dbcc_name (0 To (MAX_PATH - 1)) As Integer 'NOTE: Buffer ubound is a guess. You may need more. It's a variable C-style array.
End Type
Public Type DEV_BROADCAST_DEVICEINTERFACE
    dbcc_size As Long
    dbcc_devicetype As DBT_DEVTYPE
    dbcc_reserved As Long
    dbcc_classguid As UUID
    dbcc_name (0 To (MAX_PATH - 1)) As Integer 'NOTE: Buffer ubound is a guess. You may need more. It's a variable C-style array.
End Type

Public Type DEV_BROADCAST_PORT_A
    dbcp_size As Long
    dbcp_devicetype As DBT_DEVTYPE
    dbcp_reserved As Long
    dbcp_name(0 To (MAX_PATH - 1)) As Byte
End Type
Public Type DEV_BROADCAST_PORT_W
    dbcp_size As Long
    dbcp_devicetype As DBT_DEVTYPE
    dbcp_reserved As Long
    dbcp_name(0 To (MAX_PATH - 1)) As Integer
End Type
Public Type DEV_BROADCAST_PORT
    dbcp_size As Long
    dbcp_devicetype As DBT_DEVTYPE
    dbcp_reserved As Long
    dbcp_name(0 To (MAX_PATH - 1)) As Integer
End Type
Public Type DEV_BROADCAST_NET
    dbcn_size As Long
    dbcn_devicetype As DBT_DEVTYPE
    dbcn_reserved As Long
    dbcn_resource As Long
    dbcn_flags As Long
End Type

Public Enum DBT_BROADCAST_VOL_FLAGS
    DBTF_MEDIA = &H0001  ' media comings and goings
    DBTF_NET = &H0002  ' network volume
End Enum
Public Type DEV_BROADCAST_VOLUME
    dbcv_size As Long
    dbcv_devicetype As DBT_DEVTYPE
    dbcv_reserved As Long
    dbcv_unitmask As Long
    /* [ TypeHint(DBT_BROADCAST_VOL_FLAGS) ] */ dbcv_flags As Integer
End Type

Public Type DEV_BROADCAST_DEVNODE
    dbcd_size As Long
    dbcd_devicetype As DBT_DEVTYPE
    dbcd_reserved As Long
    dbcd_devnode As Long
End Type

Public Type DEV_BROADCAST_OEM
    dbco_size As Long
    dbco_devicetype As DBT_DEVTYPE
    dbco_reserved As Long
    dbco_identifier As Long
    dbco_suppfunc As Long
End Type

Public Type DEV_BROADCAST_HEADER
    dbcd_size As Long
    dbcd_devicetype As DBT_DEVTYPE
    dbcd_reserved As Long
End Type
Public Type DEV_BROADCAST_HDR
    dbch_size As Long
    dbch_devicetype As DBT_DEVTYPE
    dbch_reserved As Long
End Type

Public Enum DBT_VLB_Flags
    LOCKF_LOGICAL_LOCK = &H00  ' Bit 0 clear - logical lock
    LOCKF_PHYSICAL_LOCK = &H01  ' Bit 0 set - physical lock
End Enum
Public Enum DBT_VLB_Perms
    LOCKP_ALLOW_WRITES = &H01  ' Bit 0 set - allow writes
    LOCKP_FAIL_WRITES = &H00  ' Bit 0 clear - fail writes
    LOCKP_FAIL_MEM_MAPPING = &H02  ' Bit 1 set - fail memory mappings
    LOCKP_ALLOW_MEM_MAPPING = &H00  ' Bit 1 clear - allow memory mappings
    LOCKP_USER_MASK = &H03  ' Mask for user lock flags
    LOCKP_LOCK_FOR_FORMAT = &H04  ' Level 0 lock for format
End Enum
Public Type VolLockBroadcast
    vlb_dbh As DEV_BROADCAST_HDR
    vlb_owner As Long ' thread on which lock request is being issued
    /* [ TypeHint(DBT_VLB_Perms) ] */ vlb_perms As Byte ' lock permission flags defined below
    vlb_lockType As Byte ' type of lock
    vlb_drive As Byte ' drive on which lock is issued
    /* [ TypeHint(DBT_VLB_Flags) ] */ vlb_flags As Byte ' miscellaneous flags
End Type



Public Type STYLESTRUCT
    styleOld As WindowStyles
    styleNew As WindowStyles
End Type


Public Const NFR_ANSI       = 1
Public Const NFR_UNICODE    = 2
Public Const NF_QUERY       = 3
Public Const NF_REQUERY     = 4

Public Enum WindowStyles
    WS_OVERLAPPED = &H00000000
    WS_POPUP = &H80000000
    WS_CHILD = &H40000000
    WS_MINIMIZE = &H20000000
    WS_VISIBLE = &H10000000
    WS_DISABLED = &H08000000
    WS_CLIPSIBLINGS = &H04000000
    WS_CLIPCHILDREN = &H02000000
    WS_MAXIMIZE = &H01000000
    WS_BORDER = &H00800000
    WS_DLGFRAME = &H00400000
    WS_VSCROLL = &H00200000
    WS_HSCROLL = &H00100000
    WS_SYSMENU = &H00080000
    WS_THICKFRAME = &H00040000
    WS_GROUP = &H00020000
    WS_TABSTOP = &H00010000
    WS_MINIMIZEBOX = &H00020000
    WS_MAXIMIZEBOX = &H00010000
    WS_CAPTION = (WS_BORDER Or WS_DLGFRAME)
    WS_TILED = WS_OVERLAPPED
    WS_ICONIC = WS_MINIMIZE
    WS_SIZEBOX = WS_THICKFRAME
    WS_OVERLAPPEDWINDOW = WS_OVERLAPPED Or WS_CAPTION Or WS_SYSMENU Or WS_THICKFRAME Or WS_MINIMIZEBOX Or WS_MAXIMIZEBOX
    WS_TILEDWINDOW = WS_OVERLAPPEDWINDOW
    WS_POPUPWINDOW = WS_POPUP Or WS_BORDER Or WS_SYSMENU
    WS_CHILDWINDOW = WS_CHILD
End Enum
Public Enum WindowStylesEx
    WS_EX_DLGMODALFRAME = &H00000001
    WS_EX_NOPARENTNOTIFY = &H00000004
    WS_EX_TOPMOST = &H00000008
    WS_EX_ACCEPTFILES = &H00000010
    WS_EX_TRANSPARENT = &H00000020
    WS_EX_MDICHILD = &H00000040
    WS_EX_TOOLWINDOW = &H00000080
    WS_EX_WINDOWEDGE = &H00000100
    WS_EX_CLIENTEDGE = &H00000200
    WS_EX_CONTEXTHELP = &H00000400
    WS_EX_RIGHT = &H00001000
    WS_EX_LEFT = &H00000000
    WS_EX_RTLREADING = &H00002000
    WS_EX_LTRREADING = &H00000000
    WS_EX_LEFTSCROLLBAR = &H00004000
    WS_EX_RIGHTSCROLLBAR = &H00000000
    WS_EX_CONTROLPARENT = &H00010000
    WS_EX_STATICEDGE = &H00020000
    WS_EX_APPWINDOW = &H00040000
    WS_EX_OVERLAPPEDWINDOW = (WS_EX_WINDOWEDGE Or WS_EX_CLIENTEDGE)
    WS_EX_PALETTEWINDOW = (WS_EX_WINDOWEDGE Or WS_EX_TOOLWINDOW Or WS_EX_TOPMOST)
    WS_EX_LAYERED = &H00080000
    WS_EX_NOINHERITLAYOUT = &H00100000 ' Disable inheritence of mirroring by children
    WS_EX_NOREDIRECTIONBITMAP = &H00200000
    WS_EX_LAYOUTRTL = &H00400000 ' Right to left mirroring
    WS_EX_COMPOSITED = &H02000000
    WS_EX_NOACTIVATE = &H08000000
End Enum


    'cpp_quote("// default inset-width of the hot zone, in pixels")
    'cpp_quote("//   typical use: GetProfileInt(\"windows\",\"DragScrollInset\",DD_DEFSCROLLINSET)")
Public Const DD_DEFSCROLLINSET = 11

    'cpp_quote("// default delay before scrolling, in milliseconds")
    'cpp_quote("//   typical use: GetProfileInt(\"windows\",\"DragScrollDelay\",DD_DEFSCROLLDELAY)")
Public Const DD_DEFSCROLLDELAY = 50

    'cpp_quote("// default scroll interval, in milliseconds")
    'cpp_quote("//   typical use: GetProfileInt(\"windows\",\"DragScrollInterval\", DD_DEFSCROLLINTERVAL)")
Public Const DD_DEFSCROLLINTERVAL = 50

    'cpp_quote("// default delay before dragging should start, in milliseconds")
    'cpp_quote("//   typical use: GetProfileInt(\"windows\", \"DragDelay\", DD_DEFDRAGDELAY)")
Public Const DD_DEFDRAGDELAY = 200

    'cpp_quote("// default minimum distance (radius) before dragging should start, in pixels")
    'cpp_quote("//   typical use: GetProfileInt(\"windows\", \"DragMinDist\", DD_DEFDRAGMINDIST)")
Public Const DD_DEFDRAGMINDIST = 2

Public Enum NCHT_Pos
    HTERROR = (-2)
    HTTRANSPARENT = (-1)
    HTNOWHERE = 0
    HTCLIENT = 1
    HTCAPTION = 2
    HTSYSMENU = 3
    HTGROWBOX = 4
    HTSIZE = HTGROWBOX
    HTMENU = 5
    HTHSCROLL = 6
    HTVSCROLL = 7
    HTMINBUTTON = 8
    HTMAXBUTTON = 9
    HTLEFT = 10
    HTRIGHT = 11
    HTTOP = 12
    HTTOPLEFT = 13
    HTTOPRIGHT = 14
    HTBOTTOM = 15
    HTBOTTOMLEFT = 16
    HTBOTTOMRIGHT = 17
    HTBORDER = 18
    HTREDUCE = HTMINBUTTON
    HTZOOM = HTMAXBUTTON
    HTSIZEFIRST = HTLEFT
    HTSIZELAST = HTBOTTOMRIGHT
    HTOBJECT = 19
    HTCLOSE = 20
    HTHELP = 21
End Enum

Public Const KIND_CALENDAR  = "calendar"
Public Const KIND_COMMUNICATION  = "communication"
Public Const KIND_CONTACT  = "contact"
Public Const KIND_DOCUMENT  = "document"
Public Const KIND_EMAIL  = "email"
Public Const KIND_FEED  = "feed"
Public Const KIND_FOLDER  = "folder"
Public Const KIND_GAME  = "game"
Public Const KIND_INSTANTMESSAGE  = "instantmessage"
Public Const KIND_JOURNAL  = "journal"
Public Const KIND_LINK  = "link"
Public Const KIND_MOVIE  = "movie"
Public Const KIND_MUSIC  = "music"
Public Const KIND_NOTE  = "note"
Public Const KIND_PICTURE  = "picture"
Public Const KIND_PLAYLIST  = "playlist"
Public Const KIND_PROGRAM  = "program"
Public Const KIND_RECORDEDTV  = "recordedtv"
Public Const KIND_SEARCHFOLDER  = "searchfolder"
Public Const KIND_TASK  = "task"
Public Const KIND_VIDEO  = "video"
Public Const KIND_WEBHISTORY  = "webhistory"
Public Const KIND_UNKNOWN  = "unknown"

Public Const SFGAOSTR_FILESYS  = "filesys"  ' SFGAO_FILESYSTEM
Public Const SFGAOSTR_FILEANC  =  "fileanc"  ' SFGAO_FILESYSANCESTOR
Public Const SFGAOSTR_STORAGEANC  =  "storageanc"  ' SFGAO_STORAGEANCESTOR
Public Const SFGAOSTR_STREAM  = "stream"  ' SFGAO_STREAM
Public Const SFGAOSTR_LINK  = "link"  ' SFGAO_LINK
Public Const SFGAOSTR_HIDDEN  = "hidden"  ' SFGAO_HIDDEN
Public Const SFGAOSTR_SUPERHIDDEN  = "superhidden"  ' SFGAO_SUPERHIDDEN
Public Const SFGAOSTR_FOLDER  = "folder"  ' SFGAO_FOLDER
Public Const SFGAOSTR_NONENUM  = "nonenum"  ' SFGAO_NONENUMERATED
Public Const SFGAOSTR_BROWSABLE  = "browsable"  ' SFGAO_BROWSABLE
Public Const SFGAOSTR_SYSTEM  = "system"  ' SFGAO_SYSTEM
Public Const SFGAOSTR_PLACEHOLDER  = "placeholder"  ' SFGAO_PLACEHOLDER



Public Const APPLICATION_ERROR_MASK  = &H20000000
Public Enum ERROR_SEVERITY_LEVELS
    ERROR_SEVERITY_SUCCESS = &H00000000
    ERROR_SEVERITY_INFORMATIONAL = &H40000000
    ERROR_SEVERITY_WARNING = &H80000000
    ERROR_SEVERITY_ERROR = &HC0000000
End Enum




Public Enum HRESULT_Facility
    FACILITY_NULL = 0
    FACILITY_RPC = 1
    FACILITY_DISPATCH = 2
    FACILITY_STORAGE = 3
    FACILITY_ITF = 4
    FACILITY_WIN32 = 7
    FACILITY_WINDOWS = 8
    FACILITY_SSPI = 9
    FACILITY_SECURITY = 9
    FACILITY_CONTROL = 10
    FACILITY_CERT = 11
    FACILITY_INTERNET = 12
    FACILITY_MEDIASERVER = 13
    FACILITY_MSMQ = 14
    FACILITY_SETUPAPI = 15
    FACILITY_SCARD = 16
    FACILITY_COMPLUS = 17
    FACILITY_AAF = 18
    FACILITY_URT = 19
    FACILITY_ACS = 20
    FACILITY_DPLAY = 21
    FACILITY_UMI = 22
    FACILITY_SXS = 23
    FACILITY_WINDOWS_CE = 24
    FACILITY_HTTP = 25
    FACILITY_USERMODE_COMMONLOG = 26
    FACILITY_WER = 27
    FACILITY_USERMODE_FILTER_MANAGER = 31
    FACILITY_BACKGROUNDCOPY = 32
    FACILITY_CONFIGURATION = 33
    FACILITY_WIA = 33
    FACILITY_STATE_MANAGEMENT = 34
    FACILITY_METADIRECTORY = 35
    FACILITY_WINDOWSUPDATE = 36
    FACILITY_DIRECTORYSERVICE = 37
    FACILITY_GRAPHICS = 38
    FACILITY_SHELL = 39
    FACILITY_NAP = 39
    FACILITY_TPM_SERVICES = 40
    FACILITY_TPM_SOFTWARE = 41
    FACILITY_UI = 42
    FACILITY_XAML = 43
    FACILITY_ACTION_QUEUE = 44
    FACILITY_PLA = 48
    FACILITY_WINDOWS_SETUP = 48
    FACILITY_FVE = 49
    FACILITY_FWP = 50
    FACILITY_WINRM = 51
    FACILITY_NDIS = 52
    FACILITY_USERMODE_HYPERVISOR = 53
    FACILITY_CMI = 54
    FACILITY_USERMODE_VIRTUALIZATION = 55
    FACILITY_USERMODE_VOLMGR = 56
    FACILITY_BCD = 57
    FACILITY_USERMODE_VHD = 58
    FACILITY_USERMODE_HNS = 59
    FACILITY_SDIAG = 60
    FACILITY_WEBSERVICES = 61
    FACILITY_WINPE = 61
    FACILITY_WPN = 62
    FACILITY_WINDOWS_STORE = 63
    FACILITY_INPUT = 64
    FACILITY_QUIC = 65
    FACILITY_EAP = 66
    FACILITY_IORING = 70
    FACILITY_WINDOWS_DEFENDER = 80
    FACILITY_OPC = 81
    FACILITY_XPS = 82
    FACILITY_MBN = 84
    FACILITY_POWERSHELL = 84
    FACILITY_RAS = 83
    FACILITY_P2P_INT = 98
    FACILITY_P2P = 99
    FACILITY_DAF = 100
    FACILITY_BLUETOOTH_ATT = 101
    FACILITY_AUDIO = 102
    FACILITY_STATEREPOSITORY = 103
    FACILITY_VISUALCPP = 109
    FACILITY_SCRIPT = 112
    FACILITY_PARSE = 113
    FACILITY_BLB = 120
    FACILITY_BLB_CLI = 121
    FACILITY_WSBAPP = 122
    FACILITY_BLBUI = 128
    FACILITY_USN = 129
    FACILITY_USERMODE_VOLSNAP = 130
    FACILITY_TIERING = 131
    FACILITY_WSB_ONLINE = 133
    FACILITY_ONLINE_ID = 134
    FACILITY_DEVICE_UPDATE_AGENT = 135
    FACILITY_DRVSERVICING = 136
    FACILITY_DLS = 153
    FACILITY_DELIVERY_OPTIMIZATION = 208
    FACILITY_USERMODE_SPACES = 231
    FACILITY_USER_MODE_SECURITY_CORE = 232
    FACILITY_USERMODE_LICENSING = 234
    FACILITY_SOS = 160
    FACILITY_OCP_UPDATE_AGENT = 173
    FACILITY_DEBUGGERS = 176
    FACILITY_SPP = 256
    FACILITY_RESTORE = 256
    FACILITY_DMSERVER = 256
    FACILITY_DEPLOYMENT_SERVICES_SERVER = 257
    FACILITY_DEPLOYMENT_SERVICES_IMAGING = 258
    FACILITY_DEPLOYMENT_SERVICES_MANAGEMENT = 259
    FACILITY_DEPLOYMENT_SERVICES_UTIL = 260
    FACILITY_DEPLOYMENT_SERVICES_BINLSVC = 261
    FACILITY_DEPLOYMENT_SERVICES_PXE = 263
    FACILITY_DEPLOYMENT_SERVICES_TFTP = 264
    FACILITY_DEPLOYMENT_SERVICES_TRANSPORT_MANAGEMENT = 272
    FACILITY_DEPLOYMENT_SERVICES_DRIVER_PROVISIONING = 278
    FACILITY_DEPLOYMENT_SERVICES_MULTICAST_SERVER = 289
    FACILITY_DEPLOYMENT_SERVICES_MULTICAST_CLIENT = 290
    FACILITY_DEPLOYMENT_SERVICES_CONTENT_PROVIDER = 293
    FACILITY_HSP_SERVICES = 296
    FACILITY_HSP_SOFTWARE = 297
    FACILITY_LINGUISTIC_SERVICES = 305
    FACILITY_AUDIOSTREAMING = 1094
    FACILITY_TTD = 1490
    FACILITY_ACCELERATOR = 1536
    FACILITY_WMAAECMA = 1996
    FACILITY_DIRECTMUSIC = 2168
    FACILITY_DIRECT3D10 = 2169
    FACILITY_DXGI = 2170
    FACILITY_DXGI_DDI = 2171
    FACILITY_DIRECT3D11 = 2172
    FACILITY_DIRECT3D11_DEBUG = 2173
    FACILITY_DIRECT3D12 = 2174
    FACILITY_DIRECT3D12_DEBUG = 2175
    FACILITY_DXCORE = 2176
    FACILITY_PRESENTATION = 2177
    FACILITY_LEAP = 2184
    FACILITY_AUDCLNT = 2185
    FACILITY_XAPO = 2199
    FACILITY_WINCODEC_ERR = &H898
    FACILITY_WINCODEC_DWRITE_DWM = 2200
    FACILITY_WINML = 2192
    FACILITY_D2D = 2201
    FACILITY_DIRECT2D = 2201
    FACILITY_DEFRAG = 2304
    FACILITY_USERMODE_SDBUS = 2305
    FACILITY_JSCRIPT = 2306
    FACILITY_PIDGENX = 2561
    FACILITY_EAS = 85
    FACILITY_WEB = 885
    FACILITY_WEB_SOCKET = 886
    FACILITY_MOBILE = 1793
    FACILITY_SQLITE = 1967
    FACILITY_SERVICE_FABRIC = 1968
    FACILITY_UTC = 1989
    FACILITY_WEP = 2049
    FACILITY_SYNCENGINE = 2050
    FACILITY_XBOX = 2339
    FACILITY_GAME = 2340
    FACILITY_PIX = 2748
    FACILITY_NT_BIT = &H10000000
End Enum
Public Enum NTSTATUS_Facility
    FACILITY_DEBUGGER  = &H1
    FACILITY_RPC_RUNTIME  = &H2
    FACILITY_RPC_STUBS  = &H3
    FACILITY_RUNTIME  = &H2
    FACILITY_STUBS  = &H3
    FACILITY_IO_ERROR_CODE  = &H4
    FACILITY_CODCLASS_ERROR_CODE  = &H6
    FACILITY_NTWIN32 = &H7
    FACILITY_NTCERT  = &H8
    FACILITY_NTSSPI  = &H9
    FACILITY_TERMINAL_SERVER  = &HA
    FACILTIY_MUI_ERROR_CODE  = &HB
    FACILITY_USB_ERROR_CODE  = &H10
    FACILITY_HID_ERROR_CODE  = &H11
    FACILITY_FIREWIRE_ERROR_CODE  = &H12
    FACILITY_CLUSTER_ERROR_CODE  = &H13
    FACILITY_ACPI_ERROR_CODE  = &H14
    FACILITY_SXS_ERROR_CODE  = &H15
    FACILITY_TRANSACTION  = &H19
    FACILITY_COMMONLOG  = &H1A
    FACILITY_VIDEO  = &H1B
    FACILITY_FILTER_MANAGER  = &H1C
    FACILITY_MONITOR  = &H1D
    FACILITY_GRAPHICS_KERNEL  = &H1E
    FACILITY_DRIVER_FRAMEWORK  = &H20
    FACILITY_FVE_ERROR_CODE  = &H21
    FACILITY_FWP_ERROR_CODE  = &H22
    FACILITY_NDIS_ERROR_CODE  = &H23
    FACILITY_QUIC_ERROR_CODE  = &H24
    FACILITY_TPM  = &H29
    FACILITY_RTPM  = &H2A
    FACILITY_HYPERVISOR  = &H35
    FACILITY_IPSEC  = &H36
    FACILITY_VIRTUALIZATION  = &H37
    FACILITY_VOLMGR  = &H38
    FACILITY_BCD_ERROR_CODE  = &H39
    FACILITY_WIN32K_NTUSER  = &H3E
    FACILITY_WIN32K_NTGDI  = &H3F
    FACILITY_RESUME_KEY_FILTER  = &H40
    FACILITY_RDBSS  = &H41
    FACILITY_BTH_ATT  = &H42
    FACILITY_SECUREBOOT  = &H43
    FACILITY_AUDIO_KERNEL  = &H44
    FACILITY_VSM  = &H45
    FACILITY_NT_IORING  = &H46
    FACILITY_VOLSNAP  = &H50
    FACILITY_SDBUS  = &H51
    FACILITY_SHARED_VHDX  = &H5C
    FACILITY_SMB  = &H5D
    FACILITY_XVS  = &H5E
    FACILITY_INTERIX  = &H99
    FACILITY_SPACES  = &HE7
    FACILITY_SECURITY_CORE  = &HE8
    FACILITY_SYSTEM_INTEGRITY  = &HE9
    FACILITY_LICENSING  = &HEA
    FACILITY_PLATFORM_MANIFEST  = &HEB
    FACILITY_APP_EXEC  = &HEC
    FACILITY_UNIONFS  = &HED
    FACILITY_PLATFORM_RUNTIME_MECHANISM  = &HEE
    FACILITY_WIN_ACCEL  = &HEF
    FACILITY_MAXIMUM_VALUE  = &HF0
End Enum
Public Enum HRESULTS
    [_]
End Enum

Public Enum SysCommands
    SC_SIZE = &HF000&
    SC_MOVE = &HF010&
    SC_MINIMIZE = &HF020&
    SC_MAXIMIZE = &HF030&
    SC_NEXTWINDOW = &HF040&
    SC_PREVWINDOW = &HF050&
    SC_CLOSE = &HF060&
    SC_VSCROLL = &HF070&
    SC_HSCROLL = &HF080&
    SC_MOUSEMENU = &HF090&
    SC_KEYMENU = &HF100&
    SC_ARRANGE = &HF110&
    SC_RESTORE = &HF120&
    SC_TASKLIST = &HF130&
    SC_SCREENSAVE = &HF140&
    SC_HOTKEY = &HF150&
    ' #if(WINVER >= = &H0400) //Win95
    SC_DEFAULT = &HF160&
    SC_MONITORPOWER = &HF170&
    SC_CONTEXTHELP = &HF180&
    SC_SEPARATOR = &HF00F&
    ' #endif /* WINVER >= = &H0400 */
    ' #if(WINVER >= = &H0600) //Vista
    SCF_ISSECURE = &H00000001
    ' #endif /* WINVER >= = &H0600 */
'   * Obsolete names
'   */
    SC_ICON = &HF020& 'SC_MINIMIZE,
    SC_ZOOM = &HF030& 'SC_MAXIMIZE,
End Enum


Public Const MAXIMUM_WAIT_OBJECTS  = 64  ' Maximum number of wait objects
Public Const MAXIMUM_SUSPEND_COUNT  = MAXCHAR  ' Maximum times thread can be suspended

Public Enum BINDINFOF
    BINDINFOF_URLENCODESTGMEDDATA = &H00000001 ' url encode the stgmed data
    BINDINFOF_URLENCODEDEXTRAINFO = &H00000002 ' url encode the extra info
End Enum

Public Enum BINDVERB
    BINDVERB_GET = &H00000000 ' default action
    BINDVERB_POST = &H00000001 ' post verb
    BINDVERB_PUT = &H00000002 ' put verb
    BINDVERB_CUSTOM = &H00000003 ' custom verb
End Enum

Public Const DVASPECT_SHORTNAME As Long = 2
Public Const DVASPECT_COPY As Long = 3
Public Const DVASPECT_LINK As Long = 4
Public Const CGIDSTR_EditStateCommands As String = "{3050f4b6-98b5-11cf-bb82-00aa00bdce0b}"
Public Const CGIDSTR_DocHostCommandHandler As String = "{f38bc242-b950-11d1-8918-00c04fc2c836}"
Public Const CGIDSTR_DeskBand As String = "{EB0FE172-1A3A-11D0-89B3-00A0C90A90AC}"
Public Const CGIDSTR_Explorer As String = "{000214D0-0000-0000-C000-000000000046}"
Public Const CGIDSTR_ShellDocView As String = "{000214D1-0000-0000-C000-000000000046}"
Public Const CGIDSTR_ShellServiceObject As String = "{000214D2-0000-0000-C000-000000000046}"
Public Const CGIDSTR_ExplorerBarDoc As String = "{000214D3-0000-0000-C000-000000000046}"
Public Const CGIDSTR_IDeskBand As String = "{EB0FE172-1A3A-11D0-89B3-00A0C90A90AC}"
Public Const CGIDSTR_ShortCut As String = "{93a68750-951a-11d1-946f-000000000000}"
Public Const CGIDSTR_HTML As String = "{DE4BA900-59CA-11CF-9592-444553540000}"
Public Const IIDSTR_IUnknown As String = "{00000000-0000-0000-C000-000000000046}"
Public Const IIDSTR_IDispatch As String = "{00020400-0000-0000-C000-000000000046}"
Public Const IIDSTR_IConnectionPoint As String = "{B196B286-BAB4-101A-B69C-00AA00341D07}"
Public Const IIDSTR_IConnectionPointContainer As String = "{B196B284-BAB4-101A-B69C-00AA00341D07}"
Public Const IIDSTR_IOleClientSite As String = "{00000118-0000-0000-C000-000000000046}"
Public Const IIDSTR_IDocHostShowUI As String = "{C4D244B0-D43E-11CF-893B-00AA00BDCE1A}"
Public Const IIDSTR_IDocHostUIHandler As String = "{BD3F23C0-D43E-11CF-893B-00AA00BDCE1A}"
Public Const IIDSTR_IServiceProvider As String = "{6D5140C1-7436-11CE-8034-00AA006009FA}"
Public Const IIDSTR_IWebBrowserApp As String = "{0002DF05-0000-0000-C000-000000000046}"
Public Const IIDSTR_IInternetSecurityManager As String = "{79eac9ee-baf9-11ce-8c82-00aa004ba90b}"
Public Const IIDSTR_StandardFont As String = "{7EBDAAE0-8120-11CF-899F-00AA00688B10}"
Public Const IIDSTR_StandardColor As String = "{7EBDAAE1-8120-11CF-899F-00AA00688B10}"
Public Const IIDSTR_StandardPicture As String = "{7EBDAAE2-8120-11CF-899F-00AA00688B10}"
Public Const IIDSTR_IPicture As String = "{7BF80980-BF32-101A-8BBB-00AA00300CAB}"
Public Const IIDSTR_IPictureDisp As String = "{7BF80981-BF32-101A-8BBB-00AA00300CAB}"
Public Const IIDSTR_IFont As String = "{BEF6E002-A874-101A-8BBA-00AA00300CAB}"
Public Const IIDSTR_IFontDisp As String = "{BEF6E003-A874-101A-8BBA-00AA00300CAB}"
Public Const IIDSTR_IQueryAssociations As String = "{c46ca590-3c3f-11d2-bee6-0000f805ca57}"
Public Const IIDSTR_IContextMenu As String = "{000214E4-0000-0000-C000-000000000046}"
Public Const IIDSTR_IContextMenu2 As String = "{000214F4-0000-0000-C000-000000000046}"
Public Const IIDSTR_IQueryInfo As String = "{000214E7-0000-0000-C000-000000000046}"
Public Const IIDSTR_IExtractIconA As String = "{000214EB-0000-0000-C000-000000000046}"
Public Const IIDSTR_IExtractIconW As String = "{000214FA-0000-0000-C000-000000000046}"
Public Const IIDSTR_IShellFolder As String = "{000214E6-0000-0000-C000-000000000046}"
Public Const IIDSTR_IShellView As String = "{000214E3-0000-0000-C000-000000000046}"
Public Const IIDSTR_IShellView2 As String = "{88E39E80-3578-11CF-AE69-08002B2E1262}"
Public Const IIDSTR_IRedbookDiscMaster As String = "{E3BC42CD-4E5C-11D3-9144-00104BA11C5E)}"
Public Const IIDSTR_IJolietDiscMaster As String = "{E3BC42CE-4E5C-11D3-9144-00104BA11C5E}"
Public Const CLSIDSTR_InternetSecurityManager As String = "{7B8A2D94-0AC9-11D1-896C-00C04FB6BFC4}"
Public Const CLSIDSTR_InternetZoneManager As String = "{7B8A2D95-0AC9-11D1-896C-00C04FB6BFC4}"
Public Const CLSIDSTR_QueryAssociations As String = "{c46ca590-3c3f-11d2-bee6-0000f805ca57}"
Public Const CLSIDSTR_ShellDesktop As String = "{00021400-0000-0000-C000-000000000046}"
Public Const CLSIDSTR_ShellLink As String = "{00021401-0000-0000-C000-000000000046}"
Public Const CLSIDSTR_NetworkPlaces As String = "{208D2C60-3AEA-1069-A2D7-08002B30309D}"
Public Const CLSIDSTR_NetworkDomain As String = "{46e06680-4bf0-11d1-83ee-00a0c90dc849}"
Public Const CLSIDSTR_NetworkServer As String = "{c0542a90-4bf0-11d1-83ee-00a0c90dc849}"
Public Const CLSIDSTR_NetworkShare As String = "{54a754c0-4bf1-11d1-83ee-00a0c90dc849}"
Public Const CLSIDSTR_MyComputer As String = "{20D04FE0-3AEA-1069-A2D8-08002B30309D}"
Public Const CLSIDSTR_Internet As String = "{871C5380-42A0-1069-A2EA-08002B30309D}"
Public Const CLSIDSTR_ShellFSFolder As String = "{F3364BA0-65B9-11CE-A9BA-00AA004AE837}"
Public Const CLSIDSTR_RecycleBin As String = "{645FF040-5081-101B-9F08-00AA002F954E}"
Public Const CLSIDSTR_ControlPanel As String = "{21EC2020-3AEA-1069-A2DD-08002B30309D}"
Public Const CLSIDSTR_Printers As String = "{2227A280-3AEA-1069-A2DE-08002B30309D}"
Public Const CLSIDSTR_MyDocuments As String = "{450D8FBA-AD25-11D0-98A8-0800361B1103}"
Public Const CATIDSTR_Insertable As String = "{40FC6ED3-2438-11CF-A3DB-080036F12502}"
Public Const CATIDSTR_Control As String = "{40fc6ed4-2438-11cf-a3db-080036f12502}"
Public Const CATIDSTR_Programmable As String = "{40FC6ED5-2438-11CF-A3DB-080036F12502}"
Public Const CATIDSTR_DocObject As String = "{40fc6ed8-2438-11cf-a3db-080036f12502}"
Public Const CATIDSTR_Printable As String = "{40fc6ed9-2438-11cf-a3db-080036f12502}"
Public Const CATIDSTR_ActiveScriptAuthor As String = "{0AEE2A92-BCBB-11D0-8C72-00C04FC2B085}"
Public Const CATIDSTR_ActiveScriptParse As String = "{F0B7A1A2-9847-11cf-8F20-00805F2CD064}"
Public Const CATIDSTR_ActiveScript As String = "{F0B7A1A1-9847-11cf-8F20-00805F2CD064}"
Public Const CATIDSTR_ActiveScriptEncode As String = "{F0B7A1A3-9847-11cf-8F20-00805F2CD064}"
Public Const CATIDSTR_SafeForScripting As String = "{7DD95801-9882-11CF-9FA9-00AA006C42C4}"
Public Const CATIDSTR_SafeForInitializing As String = "{7DD95802-9882-11CF-9FA9-00AA006C42C4}"
Public Const CATIDSTR_BrowsableShellExt As String = "{00021490-0000-0000-C000-000000000046}"
Public Const CATIDSTR_BrowseInPlace As String = "{00021491-0000-0000-C000-000000000046}"
Public Const CATIDSTR_DeskBand As String = "{00021492-0000-0000-C000-000000000046}"
Public Const CATIDSTR_InfoBand As String = "{00021493-0000-0000-C000-000000000046}"
Public Const CATIDSTR_CommBand As String = "{00021494-0000-0000-C000-000000000046}"
Public Const DocumentSummaryInformation As String = Chr(5) & "DocumentSummaryInformation"
Public Const SummaryInformation As String = Chr(5) & "SummaryInformation"
Public Const FMTIDSTR_SummaryInformation As String = "{F29F85E0-4FF9-1068-AB91-08002B27B3D9}"
Public Const FMTIDSTR_DocSummaryInformation As String = "{D5CDD502-2E9C-101B-9397-08002B2CF9AE}"
Public Const FMTIDSTR_UserProperties As String = "{D5CDD505-2E9C-101B-9397-08002B2CF9AE}"
Public Const FMTIDSTR_Intshcut As String = "{000214A0-0000-0000-C000-000000000046}"
Public Const FMTIDSTR_InternetSite As String = "{000214A1-0000-0000-C000-000000000046}"
Public Const SIDSTR_SEditCommandTarget As String = "{3050f4b5-98b5-11cf-bb82-00aa00bdce0b}"
Public Const SIDSTR_SHTMLEditHost As String = "{3050f6a0-98b5-11cf-bb82-00aa00bdce0b}"
Public Const SIDSTR_SHTMLEditServices As String = "{3050f7f9-98b5-11cf-bb82-00aa00bdce0b}"
Public Const SIDSTR_SWebBrowserApp As String = "{0002DF05-0000-0000-C000-000000000046}"
Public Const SIDSTR_SInternetExplorer As String = "{0002DF05-0000-0000-C000-000000000046}"
Public Const SIDSTR_SFolderView As String = "{cde725b0-ccc9-4519-917e-325d72fab4ce}"
Public Const SIDSTR_SProfferService As String = "{cb728b20-f786-11ce-92ad-00aa00a74cd0}"
Public Const SIDSTR_WebWizardHost As String = "{0e6b3f66-98d1-48c0-a222-fbde74e2fbc5}"
Public Const SIDSTR_PublishingWizard As String = "{6b33163c-76a5-4b6c-bf21-45de9cd503a1}"
Public Const SIDSTR_SProgressUI As String = "{F8383852-FCD3-11d1-A6B9-006097DF5BD4}"
Public Const SIDSTR_SHlinkFrame As String = "{79eac9c5-baf9-11ce-8c82-00aa004ba90b}"
Public Const SIDSTR_ShellFolderViewCB As String = "{2047E320-F2A9-11CE-AE65-08002B2E1262}"
Public Const SIDSTR_LinkSite As String = "{000214F9-0000-0000-C000-000000000046}"
Public Const SIDSTR_SShellBrowser As String = "{000214E2-0000-0000-C000-000000000046}"
Public Const SIDSTR_SShellDesktop As String = "{00021400-0000-0000-C000-000000000046}"
Public Const SIDSTR_SUrlHistory As String = "{3C374A40-BAE4-11CF-BF7D-00AA006946EE}"
Public Const SIDSTR_STopLevelBrowser As String = "{4C96BE40-915C-11CF-99D3-00AA004AE837}"

Public Const VS_VERSION_INFO = 1
Public Const IDC_STATIC = -1





[ Description("Unable to perform requested operation.") ] Public Const STG_E_INVALIDFUNCTION = &H80030001
[ Description("%1 could not be found.") ] Public Const STG_E_FILENOTFOUND = &H80030002
[ Description("The path %1 could not be found.") ] Public Const STG_E_PATHNOTFOUND = &H80030003
[ Description("There are insufficient resources to open another file.") ] Public Const STG_E_TOOMANYOPENFILES = &H80030004
[ Description("Access Denied.") ] Public Const STG_E_ACCESSDENIED = &H80030005
[ Description("Attempted an operation on an invalid object.") ] Public Const STG_E_INVALIDHANDLE = &H80030006
[ Description("There is insufficient memory available to complete operation.") ] Public Const STG_E_INSUFFICIENTMEMORY = &H80030008
[ Description("Invalid pointer error.") ] Public Const STG_E_INVALIDPOINTER = &H80030009
[ Description("There are no more entries to return.") ] Public Const STG_E_NOMOREFILES = &H80030012
[ Description("Disk is write-protected.") ] Public Const STG_E_DISKISWRITEPROTECTED = &H80030013
[ Description("An error occurred during a seek operation.") ] Public Const STG_E_SEEKERROR = &H80030019
[ Description("A disk error occurred during a write operation.") ] Public Const STG_E_WRITEFAULT = &H8003001D
[ Description("A disk error occurred during a read operation.") ] Public Const STG_E_READFAULT = &H8003001E
[ Description("A share violation has occurred.") ] Public Const STG_E_SHAREVIOLATION = &H80030020
[ Description("A lock violation has occurred.") ] Public Const STG_E_LOCKVIOLATION = &H80030021
[ Description("%1 already exists.") ] Public Const STG_E_FILEALREADYEXISTS = &H80030050
[ Description("Invalid parameter error.") ] Public Const STG_E_INVALIDPARAMETER = &H80030057
[ Description("There is insufficient disk space to complete operation.") ] Public Const STG_E_MEDIUMFULL = &H80030070
[ Description("Illegal write of non-simple property to simple property set.") ] Public Const STG_E_PROPSETMISMATCHED = &H800300F0
[ Description("An API call exited abnormally.") ] Public Const STG_E_ABNORMALAPIEXIT = &H800300FA
[ Description("The file %1 is not a valid compound file.") ] Public Const STG_E_INVALIDHEADER = &H800300FB
[ Description("The name %1 is not valid.") ] Public Const STG_E_INVALIDNAME = &H800300FC
[ Description("An unexpected error occurred.") ] Public Const STG_E_UNKNOWN = &H800300FD
[ Description("That function is not implemented.") ] Public Const STG_E_UNIMPLEMENTEDFUNCTION = &H800300FE
[ Description("Invalid flag error.") ] Public Const STG_E_INVALIDFLAG = &H800300FF
[ Description("Attempted to use an object that is busy.") ] Public Const STG_E_INUSE = &H80030100
[ Description("The storage has been changed since the last commit.") ] Public Const STG_E_NOTCURRENT = &H80030101
[ Description("Attempted to use an object that has ceased to exist.") ] Public Const STG_E_REVERTED = &H80030102
[ Description("Can't save.") ] Public Const STG_E_CANTSAVE = &H80030103
[ Description("The compound file %1 was produced with an incompatible version of storage.") ] Public Const STG_E_OLDFORMAT = &H80030104
[ Description("The compound file %1 was produced with a newer version of storage.") ] Public Const STG_E_OLDDLL = &H80030105
[ Description("Share.exe or equivalent is required for operation.") ] Public Const STG_E_SHAREREQUIRED = &H80030106
[ Description("Illegal operation called on non-file based storage.") ] Public Const STG_E_NOTFILEBASEDSTORAGE = &H80030107
[ Description("Illegal operation called on object with extant marshallings.") ] Public Const STG_E_EXTANTMARSHALLINGS = &H80030108
[ Description("The docfile has been corrupted.") ] Public Const STG_E_DOCFILECORRUPT = &H80030109
[ Description("OLE32.DLL has been loaded at the wrong address.") ] Public Const STG_E_BADBASEADDRESS = &H80030110
[ Description("The compound file is too large for the current implementation") ] Public Const STG_E_DOCFILETOOLARGE = &H80030111
[ Description("The compound file was not created with the STGM_SIMPLE flag") ] Public Const STG_E_NOTSIMPLEFORMAT = &H80030112
[ Description("The file download was aborted abnormally. The file is incomplete.") ] Public Const STG_E_INCOMPLETE = &H80030201
[ Description("The file download has been terminated.") ] Public Const STG_E_TERMINATED = &H80030202
[ Description("The underlying file was converted to compound file format.") ] Public Const STG_S_CONVERTED = &H00030200
[ Description("The storage operation should block until more data is available.") ] Public Const STG_S_BLOCK = &H00030201
[ Description("The storage operation should retry immediately.") ] Public Const STG_S_RETRYNOW = &H00030202
[ Description("The notified event sink will not influence the storage operation.") ] Public Const STG_S_MONITORING = &H00030203
[ Description("Multiple opens prevent consolidated. (commit succeeded).") ] Public Const STG_S_MULTIPLEOPENS = &H00030204
[ Description("Consolidation of the storage file failed. (commit succeeded).") ] Public Const STG_S_CONSOLIDATIONFAILED = &H00030205
[ Description("Consolidation of the storage file is inappropriate. (commit succeeded).") ] Public Const STG_S_CANNOTCONSOLIDATE = &H00030206
[ Description("The device needs to be power cycled. (commit succeeded).") ] Public Const STG_S_POWER_CYCLE_REQUIRED = &H00030207
[ Description("The specified firmware slot is invalid.") ] Public Const STG_E_FIRMWARE_SLOT_INVALID = &H80030208
[ Description("The specified firmware image is invalid.") ] Public Const STG_E_FIRMWARE_IMAGE_INVALID = &H80030209
[ Description("The storage device is unresponsive.") ] Public Const STG_E_DEVICE_UNRESPONSIVE = &H8003020A
[ Description("Generic Copy Protection Error.") ] Public Const STG_E_STATUS_COPY_PROTECTION_FAILURE = &H80030305
[ Description("Copy Protection Error - DVD CSS Authentication failed.") ] Public Const STG_E_CSS_AUTHENTICATION_FAILURE = &H80030306
[ Description("Copy Protection Error - The given sector does not have a valid CSS key.") ] Public Const STG_E_CSS_KEY_NOT_PRESENT = &H80030307
[ Description("Copy Protection Error - DVD session key not established.") ] Public Const STG_E_CSS_KEY_NOT_ESTABLISHED = &H80030308
[ Description("Copy Protection Error - The read failed because the sector is encrypted.") ] Public Const STG_E_CSS_SCRAMBLED_SECTOR = &H80030309
[ Description("Copy Protection Error - The current DVD's region does not correspond to the region setting of the drive.") ] Public Const STG_E_CSS_REGION_MISMATCH = &H8003030A
[ Description("Copy Protection Error - The drive's region setting may be permanent or the number of user resets has been exhausted.")] Public Const STG_E_RESETS_EXHAUSTED = &H8003030B

Public Const CTL_E_ILLEGALFUNCTIONCALL       = &H800A0005
Public Const CTL_E_OVERFLOW                  = &H800A0006
Public Const CTL_E_OUTOFMEMORY               = &H800A0007
Public Const CTL_E_DIVISIONBYZERO            = &H800A000B
Public Const CTL_E_OUTOFSTRINGSPACE          = &H800A000E
Public Const CTL_E_OUTOFSTACKSPACE           = &H800A001C
Public Const CTL_E_BADFILENAMEORNUMBER       = &H800A0034
Public Const CTL_E_FILENOTFOUND              = &H800A0035
Public Const CTL_E_BADFILEMODE               = &H800A0036
Public Const CTL_E_FILEALREADYOPEN           = &H800A0037
Public Const CTL_E_DEVICEIOERROR             = &H800A0039
Public Const CTL_E_FILEALREADYEXISTS         = &H800A003A
Public Const CTL_E_BADRECORDLENGTH           = &H800A003B
Public Const CTL_E_DISKFULL                  = &H800A003D
Public Const CTL_E_BADRECORDNUMBER           = &H800A003F
Public Const CTL_E_BADFILENAME               = &H800A0040
Public Const CTL_E_TOOMANYFILES              = &H800A0043
Public Const CTL_E_DEVICEUNAVAILABLE         = &H800A0044
Public Const CTL_E_PERMISSIONDENIED          = &H800A0046
Public Const CTL_E_DISKNOTREADY              = &H800A0047
Public Const CTL_E_PATHFILEACCESSERROR       = &H800A004B
Public Const CTL_E_PATHNOTFOUND              = &H800A004C
Public Const CTL_E_INVALIDPATTERNSTRING      = &H800A005D
Public Const CTL_E_INVALIDUSEOFNULL          = &H800A005E
Public Const CTL_E_INVALIDFILEFORMAT         = &H800A0141
Public Const CTL_E_INVALIDPROPERTYVALUE      = &H800A017C
Public Const CTL_E_INVALIDPROPERTYARRAYINDEX = &H800A017D
Public Const CTL_E_SETNOTSUPPORTEDATRUNTIME  = &H800A017E
Public Const CTL_E_SETNOTSUPPORTED           = &H800A017F
Public Const CTL_E_NEEDPROPERTYARRAYINDEX    = &H800A0181
Public Const CTL_E_SETNOTPERMITTED           = &H800A0183
Public Const CTL_E_GETNOTSUPPORTEDATRUNTIME  = &H800A0189
Public Const CTL_E_GETNOTSUPPORTED           = &H800A018A
Public Const CTL_E_PROPERTYNOTFOUND          = &H800A01A6
Public Const CTL_E_INVALIDCLIPBOARDFORMAT    = &H800A01CC
Public Const CTL_E_INVALIDPICTURE            = &H800A01E1
Public Const CTL_E_PRINTERERROR              = &H800A01E2
Public Const CTL_E_CANTSAVEFILETOTEMP        = &H800A02DF
Public Const CTL_E_SEARCHTEXTNOTFOUND        = &H800A02E8
Public Const CTL_E_REPLACEMENTSTOOLONG       = &H800A02EA
Public Const CTL_E_CUSTOM_FIRST             = &H800A0258


Public Const CONNECT_E_LAST     = &H8004020F
Public Const CONNECT_S_FIRST    = &H40200
Public Const CONNECT_S_LAST     = &H4020F
Public Const SELFREG_E_FIRST    = &H80040200
Public Const SELFREG_E_LAST     = &H8004020F
Public Const SELFREG_S_FIRST    = &H40200
Public Const SELFREG_S_LAST     = &H4020F
Public Const PERPROP_E_FIRST    = &H80040200
Public Const PERPROP_E_LAST     = &H8004020F
Public Const PERPROP_S_FIRST    = &H40200
Public Const PERPROP_S_LAST     = &H4020F

[Description("Call was rejected by callee.")] Public Const RPC_E_CALL_REJECTED = &H80010001
[ Description("Call was canceled by the message filter.") ] Public Const RPC_E_CALL_CANCELED = &H80010002
[ Description("The caller is dispatching an intertask SendMessage call and cannot call out via PostMessage.") ] Public Const RPC_E_CANTPOST_INSENDCALL = &H80010003
[ Description("The caller is dispatching an asynchronous call and cannot make an outgoing call on behalf of this call.") ] Public Const RPC_E_CANTCALLOUT_INASYNCCALL = &H80010004
[ Description("It is illegal to call out while inside message filter.") ] Public Const RPC_E_CANTCALLOUT_INEXTERNALCALL = &H80010005
[ Description("The connection terminated or is in a bogus state and cannot be used any more. Other connections are still valid.") ] Public Const RPC_E_CONNECTION_TERMINATED = &H80010006
[ Description("The callee (server [not server application]) is not available and disappeared; all connections are invalid. The call may have executed.") ] Public Const RPC_E_SERVER_DIED = &H80010007
[ Description("The caller (client) disappeared while the callee (server) was processing a call.") ] Public Const RPC_E_CLIENT_DIED = &H80010008
[ Description("The data packet with the marshalled parameter data is incorrect.") ] Public Const RPC_E_INVALID_DATAPACKET = &H80010009
[ Description("The call was not transmitted properly; the message queue was full and was not emptied after yielding.") ] Public Const RPC_E_CANTTRANSMIT_CALL = &H8001000A
[ Description("The client (caller) cannot marshall the parameter data - low memory, etc.") ] Public Const RPC_E_CLIENT_CANTMARSHAL_DATA = &H8001000B
[ Description("The client (caller) cannot unmarshall the return data - low memory, etc.")] Public Const RPC_E_CLIENT_CANTUNMARSHAL_DATA = &H8001000C
[ Description("The server (callee) cannot marshall the return data - low memory, etc.") ] Public Const RPC_E_SERVER_CANTMARSHAL_DATA = &H8001000D
[ Description("The server (callee) cannot unmarshall the parameter data - low memory, etc.") ] Public Const RPC_E_SERVER_CANTUNMARSHAL_DATA = &H8001000E
[ Description("Received data is invalid; could be server or client data.") ] Public Const RPC_E_INVALID_DATA = &H8001000F
[ Description("A particular parameter is invalid and cannot be (un)marshalled.") ] Public Const RPC_E_INVALID_PARAMETER = &H80010010
[ Description("There is no second outgoing call on same channel in DDE conversation.") ] Public Const RPC_E_CANTCALLOUT_AGAIN = &H80010011
[ Description("The callee (server [not server application]) is not available and disappeared; all connections are invalid. The call did not execute.") ] Public Const RPC_E_SERVER_DIED_DNE = &H80010012
[ Description("System call failed.") ] Public Const RPC_E_SYS_CALL_FAILED = &H80010100
[ Description("Could not allocate some required resource (memory, events, ...)") ] Public Const RPC_E_OUT_OF_RESOURCES = &H80010101
[ Description("Attempted to make calls on more than one thread in single threaded mode.") ] Public Const RPC_E_ATTEMPTED_MULTITHREAD = &H80010102
[ Description("The requested interface is not registered on the server object.")] Public Const RPC_E_NOT_REGISTERED = &H80010103
[ Description("RPC could not call the server or could not return the results of calling the server.") ] Public Const RPC_E_FAULT = &H80010104
[ Description("The server threw an exception.") ] Public Const RPC_E_SERVERFAULT = &H80010105
[ Description("Cannot change thread mode after it is set.") ] Public Const RPC_E_CHANGED_MODE = &H80010106
[ Description("The method called does not exist on the server.") ] Public Const RPC_E_INVALIDMETHOD = &H80010107
[ Description("The object invoked has disconnected from its clients.") ] Public Const RPC_E_DISCONNECTED = &H80010108
[ Description("The object invoked chose not to process the call now. Try again later.") ] Public Const RPC_E_RETRY = &H80010109
[ Description("The message filter indicated that the application is busy.") ] Public Const RPC_E_SERVERCALL_RETRYLATER = &H8001010A
[ Description("The message filter rejected the call.") ] Public Const RPC_E_SERVERCALL_REJECTED = &H8001010B
[ Description("A call control interfaces was called with invalid data.") ] Public Const RPC_E_INVALID_CALLDATA = &H8001010C
[ Description("An outgoing call cannot be made since the application is dispatching an input-synchronous call.") ] Public Const RPC_E_CANTCALLOUT_ININPUTSYNCCALL = &H8001010D
[ Description("The application called an interface that was marshalled for a different thread.") ] Public Const RPC_E_WRONG_THREAD = &H8001010E
[ Description("CoInitialize has not been called on the current thread.")] Public Const RPC_E_THREAD_NOT_INIT = &H8001010F
[ Description("The version of OLE on the client and server machines does not match.")] Public Const RPC_E_VERSION_MISMATCH = &H80010110
[ Description("OLE received a packet with an invalid header.") ] Public Const RPC_E_INVALID_HEADER = &H80010111
[ Description("OLE received a packet with an invalid extension.")] Public Const RPC_E_INVALID_EXTENSION = &H80010112
[ Description("The requested object or interface does not exist.") ] Public Const RPC_E_INVALID_IPID = &H80010113
[ Description("The requested object does not exist.") ] Public Const RPC_E_INVALID_OBJECT = &H80010114
[ Description("OLE has sent a request and is waiting for a reply.") ] Public Const RPC_S_CALLPENDING = &H80010115
[ Description("OLE is waiting before retrying a request.") ] Public Const RPC_S_WAITONTIMER = &H80010116
[ Description("Call context cannot be accessed after call completed.") ] Public Const RPC_E_CALL_COMPLETE = &H80010117
[ Description("Impersonate on unsecure calls is not supported.") ] Public Const RPC_E_UNSECURE_CALL = &H80010118
[ Description("Security must be initialized before any interfaces are marshalled or unmarshalled. It cannot be changed once initialized.") ] Public Const RPC_E_TOO_LATE = &H80010119
[ Description("No security packages are installed on this machine or the user is not logged on or there are no compatible security packages between the client and server.") ] Public Const RPC_E_NO_GOOD_SECURITY_PACKAGES = &H8001011A
[ Description("Access is denied.") ] Public Const RPC_E_ACCESS_DENIED = &H8001011B
[ Description("Remote calls are not allowed for this process.") ] Public Const RPC_E_REMOTE_DISABLED = &H8001011C
[ Description("The marshaled interface data packet (OBJREF) has an invalid or unknown format.") ] Public Const RPC_E_INVALID_OBJREF = &H8001011D
[ Description("No context is associated with this call. This happens for some custom marshalled calls and on the client side of the call.") ] Public Const RPC_E_NO_CONTEXT = &H8001011E
[ Description("This operation returned because the timeout period expired.")] Public Const RPC_E_TIMEOUT = &H8001011F
[ Description("There are no synchronize objects to wait on.") ] Public Const RPC_E_NO_SYNC = &H80010120
[ Description("Full subject issuer chain SSL principal name expected from the server.") ] Public Const RPC_E_FULLSIC_REQUIRED = &H80010121
[ Description("Principal name is not a valid MSSTD name.")] Public Const RPC_E_INVALID_STD_NAME = &H80010122
[ Description("Unable to impersonate DCOM client")] Public Const CO_E_FAILEDTOIMPERSONATE = &H80010123
[ Description("Unable to obtain server's security context") ] Public Const CO_E_FAILEDTOGETSECCTX = &H80010124
[ Description("Unable to open the access token of the current thread") ] Public Const CO_E_FAILEDTOOPENTHREADTOKEN = &H80010125
[ Description("Unable to obtain user info from an access token")] Public Const CO_E_FAILEDTOGETTOKENINFO = &H80010126
[ Description("The client who called IAccessControl::IsAccessPermitted was not the trustee provided to the method") ] Public Const CO_E_TRUSTEEDOESNTMATCHCLIENT = &H80010127
[ Description("Unable to obtain the client's security blanket") ] Public Const CO_E_FAILEDTOQUERYCLIENTBLANKET = &H80010128
[ Description("Unable to set a discretionary ACL into a security descriptor")] Public Const CO_E_FAILEDTOSETDACL = &H80010129
[ Description("The system function, AccessCheck, returned false") ] Public Const CO_E_ACCESSCHECKFAILED = &H8001012A
[ Description("Either NetAccessDel or NetAccessAdd returned an error code.") ] Public Const CO_E_NETACCESSAPIFAILED = &H8001012B
[Description("One of the trustee strings provided by the user did not conform to the <Domain>\<Name> syntax and it was not the '*' string")] Public Const CO_E_WRONGTRUSTEENAMESYNTAX = &H8001012C
[ Description("One of the security identifiers provided by the user was invalid")] Public Const CO_E_INVALIDSID = &H8001012D
[ Description("Unable to convert a wide character trustee string to a multibyte trustee string") ] Public Const CO_E_CONVERSIONFAILED = &H8001012E
[ Description("Unable to find a security identifier that corresponds to a trustee string provided by the user") ] Public Const CO_E_NOMATCHINGSIDFOUND = &H8001012F
[ Description("The system function, LookupAccountSID, failed") ] Public Const CO_E_LOOKUPACCSIDFAILED = &H80010130
[ Description("Unable to find a trustee name that corresponds to a security identifier provided by the user") ] Public Const CO_E_NOMATCHINGNAMEFOUND = &H80010131
[ Description("The system function, LookupAccountName, failed") ] Public Const CO_E_LOOKUPACCNAMEFAILED = &H80010132
[ Description("Unable to set or reset a serialization handle") ] Public Const CO_E_SETSERLHNDLFAILED = &H80010133
[ Description("Unable to obtain the Windows directory") ] Public Const CO_E_FAILEDTOGETWINDIR = &H80010134
[Description("Path too long")] Public Const CO_E_PATHTOOLONG = &H80010135
[ Description("Unable to generate a uuid.") ] Public Const CO_E_FAILEDTOGENUUID = &H80010136
[ Description("Unable to create file") ] Public Const CO_E_FAILEDTOCREATEFILE = &H80010137
[ Description("Unable to close a serialization handle or a file handle.") ] Public Const CO_E_FAILEDTOCLOSEHANDLE = &H80010138
[ Description("The number of ACEs in an ACL exceeds the system limit.") ] Public Const CO_E_EXCEEDSYSACLLIMIT = &H80010139
[ Description("Not all the DENY_ACCESS ACEs are arranged in front of the GRANT_ACCESS ACEs in the stream.") ] Public Const CO_E_ACESINWRONGORDER = &H8001013A
[ Description("The version of ACL format in the stream is not supported by this implementation of IAccessControl")] Public Const CO_E_INCOMPATIBLESTREAMVERSION = &H8001013B
[ Description("Unable to open the access token of the server process") ] Public Const CO_E_FAILEDTOOPENPROCESSTOKEN = &H8001013C
[ Description("Unable to decode the ACL in the stream provided by the user") ] Public Const CO_E_DECODEFAILED = &H8001013D
[ Description("The COM IAccessControl object is not initialized") ] Public Const CO_E_ACNOTINITIALIZED = &H8001013F
[ Description("Call Cancellation is disabled") ] Public Const CO_E_CANCEL_DISABLED = &H80010140
[Description("An internal error occurred.")] Public Const RPC_E_UNEXPECTED = &H8001FFFF


Public Const DISPID_SELECTIONCHANGED  = 200  ' The Selected Items Changed
Public Const DISPID_FILELISTENUMDONE  = 201  ' Done enumerating the shell folder
Public Const DISPID_VERBINVOKED  = 202  ' A verb (either from the main or context menu) was invoked in the folder view
Public Const DISPID_DEFAULTVERBINVOKED  = 203  ' default verb (either from the main or context menu) was invoked in the folder view
Public Const DISPID_BEGINDRAG  = 204  ' user clicked on an item
Public Const DISPID_VIEWMODECHANGED  = 205  ' The ListViewMode Changed
Public Const DISPID_NOITEMSTATE_CHANGED  = 206  ' We went from 0->some or some->0 items in the view
Public Const DISPID_CONTENTSCHANGED  = 207  ' contents of the view have changed somehow
Public Const DISPID_FOCUSCHANGED  = 208  ' The Focused Item Changed
Public Const DISPID_CHECKSTATECHANGED  = 209  ' Checkbox state changed.
Public Const DISPID_ORDERCHANGED  = 210  ' The order of items changed
Public Const DISPID_VIEWPAINTDONE  = 211  ' The enumerated items have been inserted into the view and painted
Public Const DISPID_COLUMNSCHANGED  = 212  ' The set of visible details columns changed
Public Const DISPID_CTRLMOUSEWHEEL  = 213  ' The mousewheel has been moved while the CTRL key was down
Public Const DISPID_SORTDONE  = 214  ' Done sorting the shell folder
Public Const DISPID_ICONSIZECHANGED  = 215  ' The icon size changed in the view
Public Const DISPID_FOLDERCHANGED  = 217  ' The state of the folder has changed
Public Const DISPID_FILTERINVOKED  = 218  ' Some filter changed
Public Const DISPID_WORDWHEELEDITED  = 219  ' Text in WordWheel changed
Public Const DISPID_SELECTEDITEMCHANGED  = 220  ' One of the selected items has changed (not the same as a selection change)
Public Const DISPID_EXPLORERWINDOWREADY  = 221  ' Explorer window is open, been painted and is ready
Public Const DISPID_UPDATEIMAGE  = 222  ' A SHCNE_UPDATEIMAGE notification was received
Public Const DISPID_INITIALENUMERATIONDONE  = 223  ' Used internally by specialized views like the start menu. Not fired when the data source finishes enumeration. To detect when the data source is done enumerating, use DISPID_FILELISTENUMDONE.
Public Const DISPID_ENTERPRISEIDCHANGED  = 224  ' Fired when enterprise id is changed in Common File Dialog during save as
'  define the events for the ComboBoxEx control
Public Const DISPID_ENTERPRESSED  = 200  ' The user hit Enter or Return
'  Define Events for search object
Public Const DISPID_SEARCHCOMMAND_START  = 1
Public Const DISPID_SEARCHCOMMAND_COMPLETE  = 2
Public Const DISPID_SEARCHCOMMAND_ABORT  = 3
Public Const DISPID_SEARCHCOMMAND_UPDATE  = 4
Public Const DISPID_SEARCHCOMMAND_PROGRESSTEXT  = 5
Public Const DISPID_SEARCHCOMMAND_ERROR  = 6
Public Const DISPID_SEARCHCOMMAND_RESTORE  = 7
'  Shell Add/Remove Programs events
Public Const DISPID_IADCCTL_DIRTY  = &H100
Public Const DISPID_IADCCTL_PUBCAT  = &H101
Public Const DISPID_IADCCTL_SORT  = &H102
Public Const DISPID_IADCCTL_FORCEX86  = &H103
Public Const DISPID_IADCCTL_SHOWPOSTSETUP  = &H104
Public Const DISPID_IADCCTL_ONDOMAIN  = &H105
Public Const DISPID_IADCCTL_DEFAULTCAT  = &H106

Public Enum SYNC_TRANSFER_STATUS
    STS_NONE = &H00000000 ' No sync activity
    STS_NEEDSUPLOAD = &H00000001 ' The file is pending upload
    STS_NEEDSDOWNLOAD = &H00000002 ' The file is pending download
    STS_TRANSFERRING = &H00000004 ' The file is currently transferring (up or down)
    STS_PAUSED = &H00000008 ' The current transfer is paused
    STS_HASERROR = &H00000010 ' An error was encountered on the last sync
    STS_FETCHING_METADATA = &H00000020 ' Sync engine is fetching metadata from cloud.  Only found on the root folder.
    STS_USER_REQUESTED_REFRESH = &H00000040 ' Sync engine is performing a user-requested refresh.  Only found on the root folder.
    STS_HASWARNING = &H00000080 ' An error was encountered on the last sync
    STS_EXCLUDED = &H00000100 ' The file won't be synced by the sync engine
    STS_INCOMPLETE = &H00000200 ' The reported state may be missing states due to indexing delays
    STS_PLACEHOLDER_IFEMPTY = &H00000400 ' If the folder is empty, treat it as a dehydrated item (placeholder)
End Enum

Public Enum STORAGE_PROVIDER_FILE_FLAGS
    SPFF_NONE = &H00000000
    SPFF_DOWNLOAD_BY_DEFAULT = &H00000001 ' Sync engine intends to download new files by default when specified on a parent folder
    SPFF_CREATED_ON_THIS_DEVICE = &H00000002 ' Sync engine identifies this file or folder as locally created
End Enum

[Description("Retrieve this value using PKEY_FilePlaceholderStatus (System.FilePlaceholderStatus)")]
Public Enum PLACEHOLDER_STATES
    PS_NONE = &H00000000
    PS_MARKED_FOR_OFFLINE_AVAILABILITY = &H00000001 ' may already be or eventually will be available offline.
    PS_FULL_PRIMARY_STREAM_AVAILABLE = &H00000002 ' The primary stream has been made fully available.
    PS_CREATE_FILE_ACCESSIBLE = &H00000004 ' (deprecated, same as PS_FULL_PRIMARY_STREAM_AVAILABLE)
    PS_CLOUDFILE_PLACEHOLDER = &H00000008 ' Placeholder was created by the cloud files api
    '  Bitmask for default value set that can be returned for local files
    PS_DEFAULT=PS_MARKED_FOR_OFFLINE_AVAILABILITY Or PS_FULL_PRIMARY_STREAM_AVAILABLE Or PS_CREATE_FILE_ACCESSIBLE
    '  Bitmask for all valid status flags
    PS_ALL=PS_MARKED_FOR_OFFLINE_AVAILABILITY Or PS_FULL_PRIMARY_STREAM_AVAILABLE Or PS_CREATE_FILE_ACCESSIBLE Or PS_CLOUDFILE_PLACEHOLDER
End Enum




Public Enum MessageBoxFlags
    MB_OK = &H00000000
    MB_OKCANCEL = &H00000001
    MB_ABORTRETRYIGNORE = &H00000002
    MB_YESNOCANCEL = &H00000003
    MB_YESNO = &H00000004
    MB_RETRYCANCEL = &H00000005
    MB_CANCELTRYCONTINUE = &H00000006
    MB_ICONHAND = &H00000010
    MB_ICONQUESTION = &H00000020
    MB_ICONEXCLAMATION = &H00000030
    MB_ICONASTERISK = &H00000040
    MB_USERICON = &H00000080
    MB_ICONWARNING = MB_ICONEXCLAMATION
    MB_ICONERROR = MB_ICONHAND
    MB_ICONINFORMATION = MB_ICONASTERISK
    MB_ICONSTOP = MB_ICONHAND
    MB_DEFBUTTON1 = &H00000000
    MB_DEFBUTTON2 = &H00000100
    MB_DEFBUTTON3 = &H00000200
    MB_DEFBUTTON4 = &H00000300
    MB_DEFBUTTON5  = &H00000400
    MB_DEFBUTTON6  = &H00000500
    MB_DEFBUTTON7  = &H00000600
    MB_DEFBUTTON8  = &H00000700
    MB_DEFBUTTON9  = &H00000800
    MB_DEFBUTTON10  = &H00000900
    MB_DEFBUTTON11  = &H00000A00
    MB_APPLMODAL = &H00000000
    MB_SYSTEMMODAL = &H00001000
    MB_TASKMODAL = &H00002000
    MB_HELP = &H00004000  ' Help Button
    /*  = WINVER >= &H0400 */
    MB_NOFOCUS = &H00008000&
    MB_SETFOREGROUND = &H00010000
    MB_DEFAULT_DESKTOP_ONLY = &H00020000
    MB_TOPMOST = &H00040000
    MB_RIGHT = &H00080000
    MB_RTLREADING = &H00100000
    /*  = WINVER >= &H0400 */
    MB_SERVICE_NOTIFICATION = &H00200000
    MB_SERVICE_NOTIFICATION_NT3X = &H00040000

    MB_TYPEMASK = &H0000000F
    MB_ICONMASK = &H000000F0
    MB_DEFMASK = &H00000F00
    MB_MODEMASK = &H00003000
    MB_MISCMASK = &H0000C000&
End Enum


Public Enum SummaryInfoProperties
    ' "Document Title - VT_LPSTR")]
    PIDSI_TITLE = &H00000002
    ' "Document Subject - VT_LPSTR")]
    PIDSI_SUBJECT = &H00000003
    ' "Document Author - VT_LPSTR")]
    PIDSI_AUTHOR = &H00000004
    ' "Keywords - VT_LPSTR")]
    PIDSI_KEYWORDS = &H00000005
    ' "Comments - VT_LPSTR")]
    PIDSI_COMMENTS = &H00000006
    ' "Template name - VT_LPSTR")]
    PIDSI_TEMPLATE = &H00000007
    ' "Last Saved By - VT_LPSTR")]
    PIDSI_LASTAUTHOR = &H00000008
    ' "Revision Number (save count) - VT_LPSTR")]
    PIDSI_REVNUMBER = &H00000009
    ' "Total editing time - VT_CURRENCY (UTC)")]
    PIDSI_EDITTIME = &H0000000a
    ' "Last printed date - VT_CURRENCY (UTC)")]
    PIDSI_LASTPRINTED = &H0000000b
    ' "Create Date - VT_CURRENCY (UTC)")]
    PIDSI_CREATE_DTM = &H0000000c
    ' "Last save date - VT_CURRENCY (UTC)")]
    PIDSI_LASTSAVE_DTM = &H0000000d
    ' "Page count - VT_I4")]
    PIDSI_PAGECOUNT = &H0000000e
    ' "Word count - VT_I4")]
    PIDSI_WORDCOUNT = &H0000000f
    ' "Char count - VT_I4")]
    PIDSI_CHARCOUNT = &H00000010
    ' "Thumbnail - VT_CF")]
    PIDSI_THUMBNAIL = &H00000011
    ' "Application Name - VT_LPSTR")]
    PIDSI_APPNAME = &H00000012
    ' "Document security - VT_I4")]
    PIDSI_DOC_SECURITY = &H00000013
End Enum
Public Enum DocSummaryInfoProperties
    ' "Category - LPSTR")]
    PID_CATEGORY = &H2
    ' "Presentation Target - LPSTR")]
    PID_PRESFORMAT = &H3
    ' "Byte count - VT_I4")]
    PID_BYTECOUNT = &H4
    ' "Line count - VT_I4")]
    PID_LINECOUNT = &H5
    ' "Paragraph count - VT_I4")]
    PID_PARCOUNT = &H6
    ' "Slide count - VT_I4")]
    PID_SLIDECOUNT = &H7
    ' "Note count - VT_I4")]
    PID_NOTECOUNT = &H8
    ' "Hidden slide count - VT_I4")]
    PID_HIDDENCOUNT = &H9
    ' "MMClip count - VT_I4")]
    PID_MMCLIPCOUNT = &HA
    ' "Scale/Crop - VT_BOOL")]
    PID_SCALE = &HB
    ' "Heading Pairs - VT_VARIANT | VT_VECTOR")]
    PID_HEADINGPAIR = &HC
    ' "Titles Of Parts - VT_LPSTR | VT_VECTOR")]
    PID_DOCPARTS = &HD
    ' "Manager - VT_LPSTR")]
    PID_MANAGER = &HE
    ' "Company - VT_LPSTR")]
    PID_COMPANY = &HF
    ' "LinksUpToDate - VT_BOOL")]
    PID_LINKSDIRTY = &H10
    
    PIDDSI_CATEGORY  = &H00000002  ' VT_LPSTR
    PIDDSI_PRESFORMAT  = &H00000003  ' VT_LPSTR
    PIDDSI_BYTECOUNT  = &H00000004  ' VT_I4
    PIDDSI_LINECOUNT  = &H00000005  ' VT_I4
    PIDDSI_PARCOUNT  = &H00000006  ' VT_I4
    PIDDSI_SLIDECOUNT  = &H00000007  ' VT_I4
    PIDDSI_NOTECOUNT  = &H00000008  ' VT_I4
    PIDDSI_HIDDENCOUNT  = &H00000009  ' VT_I4
    PIDDSI_MMCLIPCOUNT  = &H0000000A  ' VT_I4
    PIDDSI_SCALE  = &H0000000B  ' VT_BOOL
    PIDDSI_HEADINGPAIR  = &H0000000C  ' VT_VARIANT | VT_VECTOR
    PIDDSI_DOCPARTS  = &H0000000D  ' VT_LPSTR | VT_VECTOR
    PIDDSI_MANAGER  = &H0000000E  ' VT_LPSTR
    PIDDSI_COMPANY = &H0000000F  ' VT_LPSTR
    PIDDSI_LINKSDIRTY  = &H00000010  ' VT_BOOL
    
End Enum

Public Enum MediaFileSummaryInfoProps
    PIDMSI_EDITOR = &H00000002 ' VT_LPWSTR
    PIDMSI_SUPPLIER  = &H00000003 ' VT_LPWSTR
    PIDMSI_SOURCE  = &H00000004 ' VT_LPWSTR
    PIDMSI_SEQUENCE_NO  = &H00000005 ' VT_LPWSTR
    PIDMSI_PROJECT  = &H00000006 ' VT_LPWSTR
    PIDMSI_STATUS  = &H00000007 ' VT_UI4
    PIDMSI_OWNER  = &H00000008 ' VT_LPWSTR
    PIDMSI_RATING  = &H00000009 ' VT_LPWSTR
    PIDMSI_PRODUCTION  = &H0000000A ' VT_FILETIME (UTC)
    PIDMSI_COPYRIGHT  = &H0000000B ' VT_LPWSTR
End Enum
Public Enum PIDMSI_STATUS_VALUE
    PIDMSI_STATUS_NORMAL=0
    PIDMSI_STATUS_NEW=(PIDMSI_STATUS_NORMAL+1)
    PIDMSI_STATUS_PRELIM=(PIDMSI_STATUS_NEW+1)
    PIDMSI_STATUS_DRAFT=(PIDMSI_STATUS_PRELIM+1)
    PIDMSI_STATUS_INPROGRESS=(PIDMSI_STATUS_DRAFT+1)
    PIDMSI_STATUS_EDIT=(PIDMSI_STATUS_INPROGRESS+1)
    PIDMSI_STATUS_REVIEW=(PIDMSI_STATUS_EDIT+1)
    PIDMSI_STATUS_PROOF=(PIDMSI_STATUS_REVIEW+1)
    PIDMSI_STATUS_FINAL=(PIDMSI_STATUS_PROOF+1)
    PIDMSI_STATUS_OTHER = &H7fff
End Enum




Public Type NRESARRAY
    cItems As Long
    nr(0 To 0) As NETRESOURCE
End Type

Public Type CIDA
    cidl As Long
    aoffset(0 To 0) As Long
End Type

Public Enum FD_FLAGS
    FD_CLSID = 1
    FD_SIZEPOINT = 2
    FD_ATTRIBUTES = 4
    FD_CREATETIME = 8
    FD_ACCESSTIME = 16
    FD_WRITESTIME = 32
    FD_FILESIZE = 64
    FD_PROGRESSUI = 16384
    FD_LINKUI = 32768
    FD_UNICODE = -2147483648
End Enum

Public Type FILEDESCRIPTORA
    dwFlags As FD_FLAGS
    clsid As UUID
    sizel As SIZE
    pointl As POINT
    dwFileAttributes As FILE_ATTRIBUTES
    ftCreationTime As FILETIME
    ftLastAccessTime As FILETIME
    ftLastWriteTime As FILETIME
    nFileSizeHigh As Long
    nFileSizeLow As Long
    cFileName(MAX_PATH - 1) As Byte
End Type

Public Type FILEDESCRIPTORW
    dwFlags As FD_FLAGS
    clsid As UUID
    sizel As SIZE
    pointl As POINT
    dwFileAttributes As FILE_ATTRIBUTES
    ftCreationTime As FILETIME
    ftLastAccessTime As FILETIME
    ftLastWriteTime As FILETIME
    nFileSizeHigh As Long
    nFileSizeLow As Long
    cFileName(MAX_PATH - 1) As Integer
End Type
'Alias FILEDESCRIPTOR As FILEDESCRIPTORW
Public Type FILEDESCRIPTOR
    dwFlags As FD_FLAGS
    clsid As UUID
    sizel As SIZE
    pointl As POINT
    dwFileAttributes As FILE_ATTRIBUTES
    ftCreationTime As FILETIME
    ftLastAccessTime As FILETIME
    ftLastWriteTime As FILETIME
    nFileSizeHigh As Long
    nFileSizeLow As Long
    cFileName(MAX_PATH - 1) As Integer
End Type

Public Type FILEGROUPDESCRIPTORA
    cItems As Long
    fgd(0 To 0) As FILEDESCRIPTORA
End Type

Public Type FILEGROUPDESCRIPTORW
    cItems As Long
    fgd(0 To 0) As FILEDESCRIPTORW
End Type
'Alias FILEGROUPDESCRIPTOR As FILEGROUPDESCRIPTORW
Public Type FILEGROUPDESCRIPTOR
    cItems As Long
    fgd(0 To 0) As FILEDESCRIPTOR
End Type

Public Enum ISHCUTCMDID
    ISHCUTCMDID_DOWNLOADICON=0
    ISHCUTCMDID_INTSHORTCUTCREATE=1
    ' #if (_WIN32_IE >= _WIN32_IE_IE70)
    ISHCUTCMDID_COMMITHISTORY=2
    ISHCUTCMDID_SETUSERAWURL=3
    ' #endif
End Enum
Public Const CMDID_INTSHORTCUTCREATE = ISHCUTCMDID_INTSHORTCUTCREATE

Public Const IDHOT_SNAPWINDOW = (-1)
Public Const IDHOT_SNAPDESKTOP = (-2)







[PackingAlignment(2)]
Public Type BITMAPFILEHEADER
    bfType      As Integer
    bfSize      As Long
    bfReserved1 As Integer
    bfReserved2 As Integer
    bfOffBits   As Long
End Type


Public Type BRECORD
    fFlags As Long
    clSize As Long
    pRecInfo As IRecordInfo
    pRecord As LongPtr
End Type




Public Type SAFEARRAY2D
    cDims      As Integer
    fFeatures  As Integer
    cbElements As Long
    cLocks     As Long
    pvData     As LongPtr
    Bounds(0 To 1)     As SAFEARRAYBOUND
End Type
Public Type SAFEARRAY3D
    cDims      As Integer
    fFeatures  As Integer
    cbElements As Long
    cLocks     As Long
    pvData     As LongPtr
    Bounds(0 To 2)     As SAFEARRAYBOUND
End Type
Public Type SAFEARRAY4D
    cDims      As Integer
    fFeatures  As Integer
    cbElements As Long
    cLocks     As Long
    pvData     As LongPtr
    Bounds(0 To 3)     As SAFEARRAYBOUND
End Type
Public Type SAFEARRAY5D
    cDims      As Integer
    fFeatures  As Integer
    cbElements As Long
    cLocks     As Long
    pvData     As LongPtr
    Bounds(0 To 4)     As SAFEARRAYBOUND
End Type
Public Type SAFEARRAY6D
    cDims      As Integer
    fFeatures  As Integer
    cbElements As Long
    cLocks     As Long
    pvData     As LongPtr
    Bounds(0 To 5)     As SAFEARRAYBOUND
End Type

[ Description("⚠️ **WARNING:** This structure is only for reading SAFEARRAYs with unknown dimensions. You must copy everything before Bounds, read cDims, then copy the appropriate number of bounds into Bounds(0) after redimming. Directly usable types are provided: `SAFEARRAY1D, SAFEARRAY2D, ..., SAFEARRAY6D`") ]
Public Type SAFEARRAY
    cDims      As Integer
    fFeatures  As Integer
    cbElements As Long
    cLocks     As Long
    pvData     As LongPtr
    Bounds()   As SAFEARRAYBOUND
End Type

#Region "cpl"
Public Const WM_CPL_LAUNCH  = (WM_USER + 1000)
Public Const WM_CPL_LAUNCHED  = (WM_USER + 1001)

[ PackingAlignment (1) ]
Public Type CPLINFO
    idIcon As Long '  /* icon resource id, provided by CPlApplet() */
    idName As Long '  /* display name string resource id, provided by CPlApplet() */
    idInfo As Long '  /* description/tooltip/status bar string resource id, provided by CPlApplet() */
    lData As LongPtr ' /* user defined data */
End Type

[ PackingAlignment (1) ]
Public Type NEWCPLINFOA
    dwSize As Long '  /* size, in bytes, of the structure */
    dwFlags As Long
    dwHelpContext As Long ' /* help context to use */
    lData As LongPtr '   /* user defined data */
    hIcon As LongPtr ' /* icon to use, this is owned by the Control Panel window (may be deleted) */
    szName(0 To 31) As Byte '/   /* display name */
    szInfo(0 To 63) As Byte '  /* description/tooltip/status bar string */
    szHelpFile(0 To 127) As Byte ' /* path to help file to use */
End Type
[ PackingAlignment (1) ]
Public Type NEWCPLINFOW
    dwSize As Long '  /* size, in bytes, of the structure */
    dwFlags As Long
    dwHelpContext As Long ' /* help context to use */
    lData As LongPtr '   /* user defined data */
    hIcon As LongPtr ' /* icon to use, this is owned by the Control Panel window (may be deleted) */
    szName(0 To 31) As Integer '/   /* display name */
    szInfo(0 To 63) As Integer '  /* description/tooltip/status bar string */
    szHelpFile(0 To 127) As Integer ' /* path to help file to use */
End Type
'Alias NEWCPLINFO As NEWCPLINFOW
[ PackingAlignment (1) ]
Public Type NEWCPLINFO
    dwSize As Long '  /* size, in bytes, of the structure */
    dwFlags As Long
    dwHelpContext As Long ' /* help context to use */
    lData As LongPtr '   /* user defined data */
    hIcon As LongPtr ' /* icon to use, this is owned by the Control Panel window (may be deleted) */
    szName(0 To 31) As Integer '/   /* display name */
    szInfo(0 To 63) As Integer '  /* description/tooltip/status bar string */
    szHelpFile(0 To 127) As Integer ' /* path to help file to use */
End Type

Public Const CPL_DYNAMIC_RES = 0
Public Const CPL_INIT        = 1
/*  This message is sent to indicate CPlApplet() was found. */
/*  lParam1 and lParam2 are not defined. */
/*  Return TRUE or FALSE indicating whether the control panel should proceed. */

Public Const CPL_GETCOUNT    = 2
/*  This message is sent to determine the number of applets to be displayed. */
/*  lParam1 and lParam2 are not defined. */
/*  Return the number of applets you wish to display in the control */
/*  panel window. */

Public Const CPL_INQUIRE     = 3
/*  This message is sent for information about each applet. */
/*  The return value is ignored. */
/*  lParam1 is the applet number to register, a value from 0 to */
/*  (CPL_GETCOUNT - 1).  lParam2 is a pointer to a CPLINFO structure. */
/*  Fill in CPLINFO's idIcon, idName, idInfo and lData fields with */
/*  the resource id for an icon to display, name and description string ids, */
/*  and a long data item associated with applet #lParam1.  This information */
/*  may be cached by the caller at runtime and/or across sessions. */
/*  To prevent caching, see CPL_DYNAMIC_RES, above.  If the icon, name, and description */
/*  are not dynamic then CPL_DYNAMIC_RES should not be used and the CPL_NEWINQURE message */
/*  should be ignored */

Public Const CPL_SELECT      = 4
/*  The CPL_SELECT message is not used. */

Public Const CPL_DBLCLK      = 5
/*  This message is sent when the applet's icon has been double-clicked. */
/*  lParam1 is the applet number which was selected. */
/*  lParam2 is the applet's lData value. */
/*  This message should initiate the applet's dialog box. */

Public Const CPL_STOP        = 6
/*  This message is sent for each applet when the control panel is exiting. */
/*  lParam1 is the applet number.  lParam2 is the applet's lData value. */
/*  Do applet specific cleaning up here. */

Public Const CPL_EXIT        = 7
/*  This message is sent just before the control panel calls FreeLibrary. */
/*  lParam1 and lParam2 are not defined. */
/*  Do non-applet specific cleaning up here. */

Public Const CPL_NEWINQUIRE    = 8
/*  Same as CPL_INQUIRE execpt lParam2 is a pointer to a NEWCPLINFO struct. */
/*  The return value is ignored. */
/*  A CPL should NOT respond to the CPL_NEWINQURE message unless CPL_DYNAMIC_RES */
/*  is used in CPL_INQUIRE.  CPLs which respond to CPL_NEWINQUIRE cannot be cached */
/*  and slow the loading of the Control Panel window. */

Public Const CPL_STARTWPARMSA = 9
Public Const CPL_STARTWPARMSW = 10
Public Const CPL_STARTWPARMS = 10
/* This message parallels CPL_DBLCLK in that the applet should initiate
*  its dialog box.  Where it differs is that this invocation is coming
*  out of RUNDLL, and there may be some extra directions for execution.
*  lParam1: the applet number.
*  lParam2: an LPSTR to any extra directions that might exist.
*  returns: TRUE if the message was handled; FALSE if not.
*/

/* This message is internal to the Control Panel and MAIN applets.  */
/* It is only sent when an applet is invoked from the command line  */
/* during system installation.                                      */
Public Const CPL_SETUP             = 200
#End Region

#Region "DeviceIoControl"

Public Const FSCTL_REQUEST_OPLOCK_LEVEL_1    = &H90000
Public Const FSCTL_REQUEST_OPLOCK_LEVEL_2    = &H90004
Public Const FSCTL_REQUEST_BATCH_OPLOCK      = &H90008
Public Const FSCTL_OPLOCK_BREAK_ACKNOWLEDGE  = &H9000C
Public Const FSCTL_OPBATCH_ACK_CLOSE_PENDING = &H90010
Public Const FSCTL_OPLOCK_BREAK_NOTIFY       = &H90014
Public Const FSCTL_LOCK_VOLUME               = &H90018
Public Const FSCTL_UNLOCK_VOLUME             = &H9001C
Public Const FSCTL_DISMOUNT_VOLUME           = &H90020
Public Const FSCTL_IS_VOLUME_MOUNTED         = &H90028
Public Const FSCTL_IS_PATHNAME_VALID         = &H9002C
Public Const FSCTL_MARK_VOLUME_DIRTY         = &H90030
Public Const FSCTL_QUERY_RETRIEVAL_POINTERS  = &H9003B
Public Const FSCTL_GET_COMPRESSION           = &H9003C
Public Const FSCTL_SET_COMPRESSION           = &H9C040
Public Const FSCTL_SET_BOOTLOADER_ACCESSED   = &H9004F
Public Const FSCTL_MARK_AS_SYSTEM_HIVE = FSCTL_SET_BOOTLOADER_ACCESSED
Public Const FSCTL_OPLOCK_BREAK_ACK_NO_2     = &H90050
Public Const FSCTL_INVALIDATE_VOLUMES        = &H90054
Public Const FSCTL_QUERY_FAT_BPB             = &H90058
Public Const FSCTL_REQUEST_FILTER_OPLOCK     = &H9005C
Public Const FSCTL_FILESYSTEM_GET_STATISTICS = &H90060
Public Const FSCTL_GET_NTFS_VOLUME_DATA      = &H90064
Public Const FSCTL_GET_NTFS_FILE_RECORD      = &H90068
Public Const FSCTL_GET_VOLUME_BITMAP         = &H9006F
Public Const FSCTL_GET_RETRIEVAL_POINTERS    = &H90073
Public Const FSCTL_MOVE_FILE                 = &H90074
Public Const FSCTL_IS_VOLUME_DIRTY           = &H90078
Public Const FSCTL_ALLOW_EXTENDED_DASD_IO    = &H90083
Public Const FSCTL_FIND_FILES_BY_SID         = &H9008F
Public Const FSCTL_SET_OBJECT_ID             = &H90098
Public Const FSCTL_GET_OBJECT_ID             = &H9009C
Public Const FSCTL_DELETE_OBJECT_ID          = &H900A0
Public Const FSCTL_SET_REPARSE_POINT         = &H900A4
Public Const FSCTL_GET_REPARSE_POINT         = &H900A8
Public Const FSCTL_DELETE_REPARSE_POINT      = &H900AC
Public Const FSCTL_ENUM_USN_DATA             = &H900B3
Public Const FSCTL_SECURITY_ID_CHECK         = &H940B7
Public Const FSCTL_READ_USN_JOURNAL          = &H900BB
Public Const FSCTL_SET_OBJECT_ID_EXTENDED    = &H900BC
Public Const FSCTL_CREATE_OR_GET_OBJECT_ID   = &H900C0
Public Const FSCTL_SET_SPARSE                = &H900C4
Public Const FSCTL_SET_ZERO_DATA             = &H980C8
Public Const FSCTL_QUERY_ALLOCATED_RANGES    = &H940CF
Public Const FSCTL_ENABLE_UPGRADE            = &H980D0
Public Const FSCTL_SET_ENCRYPTION            = &H900D7
Public Const FSCTL_ENCRYPTION_FSCTL_IO       = &H900DB
Public Const FSCTL_WRITE_RAW_ENCRYPTED       = &H900DF
Public Const FSCTL_READ_RAW_ENCRYPTED        = &H900E3
Public Const FSCTL_CREATE_USN_JOURNAL        = &H900E7
Public Const FSCTL_READ_FILE_USN_DATA        = &H900EB
Public Const FSCTL_WRITE_USN_CLOSE_RECORD    = &H900EF
Public Const FSCTL_EXTEND_VOLUME             = &H900F0
Public Const FSCTL_QUERY_USN_JOURNAL         = &H900F4
Public Const FSCTL_DELETE_USN_JOURNAL        = &H900F8
Public Const FSCTL_MARK_HANDLE               = &H900FC
Public Const FSCTL_SIS_COPYFILE              = &H90100
Public Const FSCTL_SIS_LINK_FILES            = &H9C104
Public Const FSCTL_RECALL_FILE               = &H90117
Public Const FSCTL_READ_FROM_PLEX            = &H9411E
Public Const FSCTL_FILE_PREFETCH             = &H90120
Public Const  FSCTL_MAKE_MEDIA_COMPATIBLE         = &H98130
Public Const  FSCTL_SET_DEFECT_MANAGEMENT         = &H98134
Public Const  FSCTL_QUERY_SPARING_INFO            = &H90138
Public Const  FSCTL_QUERY_ON_DISK_VOLUME_INFO     = &H9013C
Public Const  FSCTL_SET_VOLUME_COMPRESSION_STATE  = &H90140
Public Const  FSCTL_SET_ZERO_ON_DEALLOCATION      = &H90194
Public Const  FSCTL_SET_REPAIR                    = &H90198
Public Const  FSCTL_GET_REPAIR                    = &H9019C
Public Const  FSCTL_WAIT_FOR_REPAIR               = &H901A0
Public Const  FSCTL_INITIATE_REPAIR               = &H901A8
Public Const  FSCTL_CSC_INTERNAL                  = &H901AF
Public Const  FSCTL_SHRINK_VOLUME                 = &H901B0
Public Const  FSCTL_SET_SHORT_NAME_BEHAVIOR       = &H901B4
Public Const  FSCTL_DFSR_SET_GHOST_HANDLE_STATE   = &H901B8

Public Const FSCTL_PIPE_ASSIGN_EVENT            = &H110000
Public Const FSCTL_PIPE_DISCONNECT              = &H110004
Public Const FSCTL_PIPE_LISTEN                  = &H110008
Public Const FSCTL_PIPE_PEEK                    = &H11400C
Public Const FSCTL_PIPE_QUERY_EVENT             = &H110010
Public Const FSCTL_PIPE_TRANSCEIVE              = &H11C017
Public Const FSCTL_PIPE_WAIT                    = &H110018
Public Const FSCTL_PIPE_IMPERSONATE             = &H11001C
Public Const FSCTL_PIPE_SET_CLIENT_PROCESS      = &H110020
Public Const FSCTL_PIPE_QUERY_CLIENT_PROCESS    = &H110024
Public Const FSCTL_PIPE_GET_PIPE_ATTRIBUTE      = &H110028
Public Const FSCTL_PIPE_SET_PIPE_ATTRIBUTE      = &H11002C
Public Const FSCTL_PIPE_GET_CONNECTION_ATTRIBUTE= &H110030
Public Const FSCTL_PIPE_SET_CONNECTION_ATTRIBUTE= &H110034
Public Const FSCTL_PIPE_GET_HANDLE_ATTRIBUTE    = &H110038
Public Const FSCTL_PIPE_SET_HANDLE_ATTRIBUTE    = &H11003C
Public Const FSCTL_PIPE_FLUSH                   = &H118040
Public Const FSCTL_PIPE_DISABLE_IMPERSONATE     = &H110044
Public Const FSCTL_PIPE_SILO_ARRIVAL            = &H118048
Public Const FSCTL_PIPE_CREATE_SYMLINK          = &H11004C
Public Const FSCTL_PIPE_DELETE_SYMLINK          = &H110050
Public Const FSCTL_PIPE_QUERY_CLIENT_PROCESS_V2 = &H110054
Public Const FSCTL_PIPE_INTERNAL_READ       = &H115FF4
Public Const FSCTL_PIPE_INTERNAL_WRITE      = &H119FF8
Public Const FSCTL_PIPE_INTERNAL_TRANSCEIVE = &H11DFFF
Public Const FSCTL_PIPE_INTERNAL_READ_OVFLOW= &H116000

Public Const FILE_PIPE_READ_DATA  = &H00000000
Public Const FILE_PIPE_WRITE_SPACE  = &H00000001

Public Type FILE_PIPE_ASSIGN_EVENT_BUFFER
    EventHandle As LongPtr
    KeyValue As Long
End Type

[Description("WARNING: Buffer sustituted for variable C-style array.")]
Public Type FILE_PIPE_PEEK_BUFFER
    NamedPipeState As Long
    ReadDataAvailable As Long
    NumberOfMessages As Long
    MessageLength As Long
    Data(0 To 4095) As Byte
End Type

Public Type FILE_PIPE_EVENT_BUFFER
    NamedPipeState As Long
    EntryType As Long
    ByteCount As Long
    KeyValue As Long
    NumberRequests As Long
End Type

[Description("WARNING: Buffer sustituted for variable C-style array.")]
Public Type FILE_PIPE_WAIT_FOR_BUFFER
    Timeout As LARGE_INTEGER
    NameLength As Long
    TimeoutSpecified As Byte
    Name(0 To MAX_PATH) As Integer
End Type

[Description("WARNING: Not for use on 32bit Windows (WOW64 is fine). Use FILE_PIPE_CLIENT_PROCESS_BUFFER32")]
Public Type FILE_PIPE_CLIENT_PROCESS_BUFFER
    ' #if !defined(BUILD_WOW6432)
    ' PVOID ClientSession;
    ' PVOID ClientProcess;
' #else
    ' ULONGLONG ClientSession;
    ' ULONGLONG ClientProcess;
' #endif
    ClientSession as LongLong
    ClientProcess As LongLong
End Type
Public Type FILE_PIPE_CLIENT_PROCESS_BUFFER32
    ' #if !defined(BUILD_WOW6432)
    ' PVOID ClientSession;
    ' PVOID ClientProcess;
' #else
    ' ULONGLONG ClientSession;
    ' ULONGLONG ClientProcess;
' #endif
    ClientSession as Long 
    ClientProcess As Long 
End Type

[Description("WARNING: Not for use on 32bit Windows (WOW64 is fine). Use FILE_PIPE_CLIENT_PROCESS_BUFFER_V232")]
Public Type FILE_PIPE_CLIENT_PROCESS_BUFFER_V2
    ' ULONGLONG ClientSession;
' #if !defined(BUILD_WOW6432)
    ' PVOID ClientProcess;
' #else
    ' ULONGLONG ClientProcess;
' #endif
    ClientSession as LongLong
    ClientProcess As LongLong
End Type
Public Type FILE_PIPE_CLIENT_PROCESS_BUFFER_V232
    ' ULONGLONG ClientSession;
' #if !defined(BUILD_WOW6432)
    ' PVOID ClientProcess;
' #else
    ' ULONGLONG ClientProcess;
' #endif
    ClientSession as LongLong
    ClientProcess As Long 
End Type

Public Const FILE_PIPE_COMPUTER_NAME_LENGTH = 16

Public Type FILE_PIPE_CLIENT_PROCESS_BUFFER_EX
    ' #if !defined(BUILD_WOW6432)
    ' PVOID ClientSession;
    ' PVOID ClientProcess;
' #else
    ' ULONGLONG ClientSession;
    ' ULONGLONG ClientProcess;
' #endif
    ClientSession as LongLong
    ClientProcess As LongLong
    ClientComputerNameLength as Integer
    ClientComputerBuffer(FILE_PIPE_COMPUTER_NAME_LENGTH) As Integer
End Type

Public Type FILE_PIPE_SILO_ARRIVAL_INPUT
    JobHandle As LongPtr
End Type

Public Enum FilePipeSymlinkFlags 
    FILE_PIPE_SYMLINK_FLAG_GLOBAL = &H1
    FILE_PIPE_SYMLINK_FLAG_RELATIVE  = &H2
    FILE_PIPE_SYMLINK_VALID_FLAGS  = (FILE_PIPE_SYMLINK_FLAG_GLOBAL  Or  FILE_PIPE_SYMLINK_FLAG_RELATIVE)
End Enum
Public Type FILE_PIPE_CREATE_SYMLINK_INPUT
    NameOffset As Integer
    NameLength As Integer
    SubstituteNameOffset As Integer
    SubstituteNameLength As Integer
    Flags As FilePipeSymlinkFlags
End Type

Public Type FILE_PIPE_DELETE_SYMLINK_INPUT
    NameOffset As Integer
    NameLength As Integer
End Type

Public Const FSCTL_MAILSLOT_PEEK = &HC4003


Public Const FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_NOT_IN_USE As LongLong = (&H0000000000000001)
Public Const FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_REUSED As LongLong = (&H0000000000000002)
Public Const FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_NOT_EXIST As LongLong = (&H0000000000000004)
Public Const FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_NOT_BASE_RECORD As LongLong = (&H0000000000000008)
Public Const FILE_INITIATE_REPAIR_HINT1_SYSTEM_FILE As LongLong = (&H0000000000000010)
Public Const FILE_INITIATE_REPAIR_HINT1_NOT_IMPLEMENTED As LongLong = (&H0000000000000020)
Public Const FILE_INITIATE_REPAIR_HINT1_UNABLE_TO_REPAIR As LongLong = (&H0000000000000040)
Public Const FILE_INITIATE_REPAIR_HINT1_REPAIR_DISABLED As LongLong = (&H0000000000000080)
Public Const FILE_INITIATE_REPAIR_HINT1_RECURSIVELY_CORRUPTED As LongLong = (&H0000000000000100)
Public Const FILE_INITIATE_REPAIR_HINT1_ORPHAN_GENERATED As LongLong = (&H0000000000000200)
Public Const FILE_INITIATE_REPAIR_HINT1_REPAIRED As LongLong = (&H0000000000000400)
Public Const FILE_INITIATE_REPAIR_HINT1_NOTHING_WRONG As LongLong = (&H0000000000000800)
Public Const FILE_INITIATE_REPAIR_HINT1_ATTRIBUTE_NOT_FOUND As LongLong = (&H0000000000001000)
Public Const FILE_INITIATE_REPAIR_HINT1_POTENTIAL_CROSSLINK As LongLong = (&H0000000000002000)
Public Const FILE_INITIATE_REPAIR_HINT1_STALE_INFORMATION As LongLong = (&H0000000000004000)
Public Const FILE_INITIATE_REPAIR_HINT1_CLUSTERS_ALREADY_IN_USE As LongLong = (&H0000000000008000^)
Public Const FILE_INITIATE_REPAIR_HINT1_LCN_NOT_EXIST As LongLong = (&H0000000000010000)
Public Const FILE_INITIATE_REPAIR_HINT1_INVALID_RUN_LENGTH As LongLong = (&H0000000000020000)
Public Const FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_NOT_ORPHAN As LongLong = (&H0000000000040000)
Public Const FILE_INITIATE_REPAIR_HINT1_FILE_RECORD_IS_BASE_RECORD As LongLong = (&H0000000000080000)
Public Const FILE_INITIATE_REPAIR_HINT1_INVALID_ARRAY_LENGTH_COUNT As LongLong = (&H0000000000100000)
Public Const FILE_INITIATE_REPAIR_HINT1_SID_VALID As LongLong = (&H0000000000200000)
Public Const FILE_INITIATE_REPAIR_HINT1_SID_MISMATCH As LongLong = (&H0000000000400000)
Public Const FILE_INITIATE_REPAIR_HINT1_INVALID_PARENT As LongLong = (&H0000000000800000)
Public Const FILE_INITIATE_REPAIR_HINT1_PARENT_FILE_RECORD_NOT_IN_USE As LongLong = (&H0000000001000000)
Public Const FILE_INITIATE_REPAIR_HINT1_PARENT_FILE_RECORD_REUSED As LongLong = (&H0000000002000000)
Public Const FILE_INITIATE_REPAIR_HINT1_PARENT_FILE_RECORD_NOT_EXIST As LongLong = (&H0000000004000000)
Public Const FILE_INITIATE_REPAIR_HINT1_PARENT_FILE_RECORD_NOT_BASE_RECORD As LongLong = (&H0000000008000000)
Public Const FILE_INITIATE_REPAIR_HINT1_PARENT_FILE_RECORD_NOT_INDEX As LongLong = (&H0000000010000000)
Public Const FILE_INITIATE_REPAIR_HINT1_VALID_INDEX_ENTRY As LongLong = (&H0000000020000000)
Public Const FILE_INITIATE_REPAIR_HINT1_OUT_OF_GENERIC_NAMES As LongLong = (&H0000000040000000)
Public Const FILE_INITIATE_REPAIR_HINT1_OUT_OF_RESOURCE As LongLong = (&H0000000080000000^)
Public Const FILE_INITIATE_REPAIR_HINT1_INVALID_LCN As LongLong = (&H0000000100000000)
Public Const FILE_INITIATE_REPAIR_HINT1_INVALID_VCN As LongLong = (&H0000000200000000)
Public Const FILE_INITIATE_REPAIR_HINT1_NAME_CONFLICT As LongLong = (&H0000000400000000)
Public Const FILE_INITIATE_REPAIR_HINT1_ORPHAN As LongLong = (&H0000000800000000)
Public Const FILE_INITIATE_REPAIR_HINT1_ATTRIBUTE_TOO_SMALL As LongLong = (&H0000001000000000)
Public Const FILE_INITIATE_REPAIR_HINT1_ATTRIBUTE_NON_RESIDENT As LongLong = (&H0000002000000000)
Public Const FILE_INITIATE_REPAIR_HINT1_DENY_DEFRAG As LongLong = (&H0000004000000000)
Public Const FILE_INITIATE_REPAIR_HINT1_PREVIOUS_PARENT_STILL_VALID As LongLong = (&H0000008000000000)
Public Const FILE_INITIATE_REPAIR_HINT1_INDEX_ENTRY_MISMATCH As LongLong = (&H0000010000000000)
Public Const FILE_INITIATE_REPAIR_HINT1_INVALID_ORPHAN_RECOVERY_NAME As LongLong = (&H0000020000000000)
Public Const FILE_INITIATE_REPAIR_HINT1_MULTIPLE_FILE_NAME_ATTRIBUTES As LongLong = (&H0000040000000000)
Public Type FILE_INITIATE_REPAIR_OUTPUT_BUFFER
    Hint1 As LongLong
    Hint2 As LongLong
    Clsn As LongLong
    Status As NTSTATUS
End Type

Public Enum FsctlSetRepairFlags
    SET_REPAIR_ENABLED  = (&H00000001)
    SET_REPAIR_WARN_ABOUT_DATA_LOSS  = (&H00000008)
    SET_REPAIR_DISABLED_AND_BUGCHECK_ON_CORRUPT  = (&H00000010)
    SET_REPAIR_VALID_MASK  = (&H00000019)
End Enum


Public Enum SHRINK_VOLUME_REQUEST_TYPES
    ShrinkPrepare=1
    ShrinkCommit  
    ShrinkAbort
End Enum
Public Type SHRINK_VOLUME_INFORMATION
    ShrinkRequestType As SHRINK_VOLUME_REQUEST_TYPES
    Flags As LongLong
    NewNumberOfSectors As LONGLONG
End Type


Public Type FILE_ZERO_DATA_INFORMATION
    FileOffset As LARGE_INTEGER
    BeyondFinalZero As LARGE_INTEGER
End Type

Public Enum FILESYSTEM_STATS_TYPE
    FILESYSTEM_STATISTICS_TYPE_NTFS = 1
    FILESYSTEM_STATISTICS_TYPE_FAT = 2
    FILESYSTEM_STATISTICS_TYPE_EXFAT = 3
    FILESYSTEM_STATISTICS_TYPE_REFS = 4
End Enum
Public Type FILESYSTEM_STATISTICS
    /* [ TypeHint(FILESYSTEM_STATS_TYPE) ] */ FileSystemType As Integer
    Version As Integer ' currently version 1
    SizeOfCompleteStructure As Long ' must by a multiple of 64 bytes
    UserFileReads As Long
    UserFileReadBytes As Long
    UserDiskReads As Long
    UserFileWrites As Long
    UserFileWriteBytes As Long
    UserDiskWrites As Long
    MetaDataReads As Long
    MetaDataReadBytes As Long
    MetaDataDiskReads As Long
    MetaDataWrites As Long
    MetaDataWriteBytes As Long
    MetaDataDiskWrites As Long
    '  The file system's private structure is appended here.
End Type
Public Type FAT_STATISTICS
    CreateHits As Long
    SuccessfulCreates As Long
    FailedCreates As Long
    NonCachedReads As Long
    NonCachedReadBytes As Long
    NonCachedWrites As Long
    NonCachedWriteBytes As Long
    NonCachedDiskReads As Long
    NonCachedDiskWrites As Long
End Type
Public Type EXFAT_STATISTICS
    CreateHits As Long
    SuccessfulCreates As Long
    FailedCreates As Long
    NonCachedReads As Long
    NonCachedReadBytes As Long
    NonCachedWrites As Long
    NonCachedWriteBytes As Long
    NonCachedDiskReads As Long
    NonCachedDiskWrites As Long
End Type
Public Type NTFS_STATISTICS
    LogFileFullExceptions As Long
    OtherExceptions As Long
    ' Other meta data io's
    MftReads As Long
    MftReadBytes As Long
    MftWrites As Long
    MftWriteBytes As Long
    'struct {
    MftWritesUserLevel_Write As Integer
    MftWritesUserLevel_Create As Integer
    MftWritesUserLevel_SetInfo As Integer
    MftWritesUserLevel_Flush As Integer
    '} MftWritesUserLevel;
    MftWritesFlushForLogFileFull As Integer
    MftWritesLazyWriter As Integer
    MftWritesUserRequest As Integer
    Mft2Writes As Long
    Mft2WriteBytes As Long
    'struct {
    Mft2WritesUserLevel_Write As Integer
    Mft2WritesUserLevel_Create As Integer
    Mft2WritesUserLevel_SetInfo As Integer
    Mft2WritesUserLevel_Flush As Integer
    '} Mft2WritesUserLevel;
    Mft2WritesFlushForLogFileFull As Integer
    Mft2WritesLazyWriter As Integer
    Mft2WritesUserRequest As Integer
    RootIndexReads As Long
    RootIndexReadBytes As Long
    RootIndexWrites As Long
    RootIndexWriteBytes As Long
    BitmapReads As Long
    BitmapReadBytes As Long
    BitmapWrites As Long
    BitmapWriteBytes As Long
    BitmapWritesFlushForLogFileFull As Integer
    BitmapWritesLazyWriter As Integer
    BitmapWritesUserRequest As Integer
    'struct {
    BitmapWritesUserLevel_Write As Integer
    BitmapWritesUserLevel_Create As Integer
    BitmapWritesUserLevel_SetInfo As Integer
    '} BitmapWritesUserLevel;
    MftBitmapReads As Long
    MftBitmapReadBytes As Long
    MftBitmapWrites As Long
    MftBitmapWriteBytes As Long
    MftBitmapWritesFlushForLogFileFull As Integer
    MftBitmapWritesLazyWriter As Integer
    MftBitmapWritesUserRequest As Integer
    'struct {
    MftBitmapWritesUserLevel_Write As Integer
    MftBitmapWritesUserLevel_Create As Integer
    MftBitmapWritesUserLevel_SetInfo As Integer
    MftBitmapWritesUserLevel_Flush As Integer
    '} MftBitmapWritesUserLevel;
    UserIndexReads As Long
    UserIndexReadBytes As Long
    UserIndexWrites As Long
    UserIndexWriteBytes As Long
    ' Additions for NT 5.0
    LogFileReads As Long
    LogFileReadBytes As Long
    LogFileWrites As Long
    LogFileWriteBytes As Long
    'struct {
    Allocate_Calls As Long ' number of individual calls to allocate clusters
    Allocate_Clusters As Long ' number of clusters allocated
    Allocate_Hints As Long ' number of times a hint was specified
    Allocate_RunsReturned As Long ' number of runs used to satisfy all the requests
    Allocate_HintsHonored As Long ' number of times the hint was useful
    Allocate_HintsClusters As Long ' number of clusters allocated via the hint
    Allocate_Cache As Long ' number of times the cache was useful other than the hint
    Allocate_CacheClusters As Long ' number of clusters allocated via the cache other than the hint
    Allocate_CacheMiss As Long ' number of times the cache wasn't useful
    Allocate_CacheMissClusters As Long ' number of clusters allocated without the cache
    '} Allocate;
    '  Additions for Windows 8.1
    DiskResourcesExhausted As Long
    '  All future expansion of this structure needs to be in NTFS_STATISTICS_EX starting Windows 10
End Type

Public Enum IOCTL_IDEREGS_CMD
    ATAPI_ID_CMD = &HA1  ' Returns ID sector for ATAPI.
    ID_CMD = &HEC  ' Returns ID sector for ATA.
    SMART_CMD = &HB0  ' Performs SMART cmd.
'  Requires valid bFeaturesReg,
'  bCylLowReg, and bCylHighReg
End Enum
[ PackingAlignment (1) ]
Public Type IDEREGS
    bFeaturesReg As Byte ' Used for specifying SMART "commands".
    bSectorCountReg As Byte ' IDE sector count register
    bSectorNumberReg As Byte ' IDE sector number register
    bCylLowReg As Byte ' IDE low order cylinder value
    bCylHighReg As Byte ' IDE high order cylinder value
    bDriveHeadReg As Byte ' IDE drive/head register
    /* [ TypeHint(IOCTL_IDEREGS_CMD) ] */ bCommandReg As Byte ' Actual IDE command.
    bReserved As Byte ' reserved for future use.  Must be zero.
End Type

[ Description("📝**NOTE:** This is only the header. A c-style byte array follows.") ]
[ PackingAlignment (1) ]
Public Type SENDCMDINPARAMS
    cBufferSize As Long ' Buffer size in bytes
    irDriveRegs As IDEREGS ' Structure with drive register values.
    bDriveNumber As Byte ' Physical drive number to send
    ' command to (0,1,2,3).
    bReserved(0 To 2) As Byte ' Reserved for future expansion.
    dwReserved(0 To 3) As Long ' For future use.
    'bBuffer(0 To 0) As Byte ' Input buffer.
End Type





Public Enum IOCTL_SMART_ERROR
    SMART_NO_ERROR = 0  ' No error
    SMART_IDE_ERROR = 1  ' Error from IDE controller
    SMART_INVALID_FLAG = 2  ' Invalid command flag
    SMART_INVALID_COMMAND = 3  ' Invalid command byte
    SMART_INVALID_BUFFER = 4  ' Bad buffer (null, invalid addr..)
    SMART_INVALID_DRIVE = 5  ' Drive number not valid
    SMART_INVALID_IOCTL = 6  ' Invalid IOCTL
    SMART_ERROR_NO_MEM = 7  ' Could not lock user's buffer
    SMART_INVALID_REGISTER = 8  ' Some IDE Register not valid
    SMART_NOT_SUPPORTED = 9  ' Invalid cmd flag set
    SMART_NO_IDE_DEVICE = 10  ' Cmd issued to device not present
'  although drive number is valid
End Enum
[ PackingAlignment (1) ]
Public Type DRIVERSTATUS
    bDriverError As Byte ' Error code from driver,
    ' or 0 if no error.
    bIDEError As Byte ' Contents of IDE Error register.
    ' Only valid when bDriverError
    ' is SMART_IDE_ERROR.
    bReserved(0 To 1) As Byte ' Reserved for future expansion.
    dwReserved(0 To 1) As Long ' Reserved for future expansion.
End Type

[ Description("📝**NOTE:** This is only the header. A c-style byte array follows.") ]
[ PackingAlignment (1) ]
Public Type SENDCMDOUTPARAMS
    cBufferSize As Long ' Size of bBuffer in bytes
    DriverStatus As DRIVERSTATUS ' Driver status structure.
    'bBuffer(0 To 0) As Byte ' Buffer of arbitrary length in which to store the data read from the                                                                                  // drive.
End Type

Public Type FILE_OBJECTID_BUFFER
    ObjectId(15) As Byte
    ExtendedInfo(47) As Byte
End Type

Public Type FILE_SET_SPARSE_BUFFER
    SetSparse As Byte
End Type

Public Type GET_DISK_ATTRIBUTES
    ' Specifies the size of the
    ' structure for versioning.
    Version As Long
    ' Reserved. Must ignore.
    Reserved1 As Long
    ' Specifies the attributes
    ' associated with the disk.
    Attributes As LongLong
End Type
Public Type SET_DISK_ATTRIBUTES
    ' Specifies the size of the
    ' structure for versioning.
    Version As Long
    ' Indicates whether to remember
    ' these settings across reboots
    ' or not.
    Persist As Byte
    ' Reserved. Must set to zero.
    Reserved1(0 To 2) As Byte
    ' Specifies the new attributes.
    Attributes As LongLong
    ' Specifies the attributes
    ' that are being modified.
    AttributesMask As LongLong
    ' Reserved. Must set to zero.
    Reserved2(0 To 3) As Long
End Type


Public Const SMART_GET_VERSION As Long = &H74080
Public Const SMART_RCV_DRIVE_DATA As Long = &H7C088

    
Public Type ATA_PASS_THROUGH_EX
    length                                              As Integer
    AtaFlags                                            As Integer
    PathId                                              As Byte
    TargetId                                            As Byte
    Lun                                                 As Byte
    ReservedAsUchar                                     As Byte
    DataTransferLength                                  As Long
    TimeOutValue                                        As Long
    ReservedAsUlong                                     As Long
    DataBufferOffset                                    As Long
    PreviousTaskFile(0 To 7)                            As Byte
    CurrentTaskFile(0 To 7)                             As Byte
End Type
    
[ PackingAlignment (1) ]
Public Type IDENTIFY_DEVICE_DATA
    GeneralConfiguration                                As Integer
    NumCylinders                                        As Integer
    SpecificConfiguration                               As Integer
    NumHeads                                            As Integer
    Retired1(0 To 1)                                    As Integer
    NumSectorsPerTrack                                  As Integer
    VendorUnique1(0 To 2)                               As Integer
    SerialNumber(0 To 19)                               As Byte
    Retired2(0 To 1)                                    As Integer
    Obsolete1                                           As Integer
    FirmwareRevision(0 To 7)                            As Byte
    ModelNumber(0 To 39)                                As Byte
    MaximumBlockTransfer                                As Byte
    VendorUnique2                                       As Byte
    TrustedComputing                                    As Integer
    Capabilities                                        As Long
    ObsoleteWords51(0 To 1)                             As Integer
    TranslationFieldsValid                              As Byte
    FreeFallControlSensitivity                          As Byte
    NumberOfCurrentCylinders                            As Integer
    NumberOfCurrentHeads                                As Integer
    CurrentSectorsPerTrack                              As Integer
    CurrentSectorCapacity                               As Long
    CurrentMultiSectorSetting                           As Byte
    MultiSectorSettingAndOthers                         As Byte
    UserAddressableSectors                              As Long
    ObsoleteWord62                                      As Integer
    MultiWordDMASupport                                 As Byte
    MultiWordDMAActive                                  As Byte
    AdvancedPIOModes                                    As Byte
    ReservedByte64                                      As Byte
    MinimumMWXferCycleTime                              As Integer
    RecommendedMWXferCycleTime                          As Integer
    MinimumPIOCycleTime                                 As Integer
    MinimumPIOCycleTimeIORDY                            As Integer
    AdditionalSupported                                 As Integer
    ReservedWords70(0 To 4)                             As Integer
    QueueDepth                                          As Integer
    SerialAtaCapabilities                               As Long
    SerialAtaFeaturesSupported                          As Integer
    SerialAtaFeaturesEnabled                            As Integer
    MajorRevision                                       As Integer
    MinorRevision                                       As Integer
    CommandSetSupport(0 To 5)                           As Byte
    CommandSetActive(0 To 5)                            As Byte
    UltraDMASupport                                     As Byte
    UltraDMAActive                                      As Byte
    NormalSecurityEraseUnit                             As Integer
    EnhancedSecurityEraseUnit                           As Integer
    CurrentAPMLevel                                     As Byte
    ReservedWord91                                      As Byte
    MasterPasswordID                                    As Integer
    HardwareResetResult                                 As Integer
    CurrentAcousticValue                                As Byte
    RecommendedAcousticValue                            As Byte
    StreamMinRequestSize                                As Integer
    StreamingTransferTimeDMA                            As Integer
    StreamingAccessLatencyDMAPIO                        As Integer
    StreamingPerfGranularity                            As Long
    Max48BitLBA(0 To 1)                                 As Long
    StreamingTransferTime                               As Integer
    DsmCap                                              As Integer
    PhysicalLogicalSectorSize                           As Integer
    InterSeekDelay                                      As Integer
    WorldWideName(0 To 3)                               As Integer
    ReservedForWorldWideName128(0 To 3)                 As Integer
    ReservedForTlcTechnicalReport                       As Integer
    WordsPerLogicalSector(0 To 1)                       As Integer
    CommandSetSupportExt                                As Integer
    CommandSetActiveExt                                 As Integer
    ReservedForExpandedSupportandActive(0 To 5)         As Integer
    MsnSupport                                          As Integer
    SecurityStatus                                      As Integer
    ReservedWord129(0 To 30)                            As Integer
    CfaPowerMode1                                       As Integer
    ReservedForCfaWord161(0 To 6)                       As Integer
    NominalFormFactor                                   As Integer
    DataSetManagementFeature                            As Integer
    AdditionalProductID(0 To 3)                         As Integer
    ReservedForCfaWord174(0 To 1)                       As Integer
    CurrentMediaSerialNumber(0 To 29)                   As Integer
    SCTCommandTransport                                 As Integer
    ReservedWord207(0 To 1)                             As Integer
    BlockAlignment                                      As Integer
    WriteReadVerifySectorCountMode3Only(0 To 1)         As Integer
    WriteReadVerifySectorCountMode2Only(0 To 1)         As Integer
    NVCacheCapabilities                                 As Integer
    NVCacheSizeLSW                                      As Integer
    NVCacheSizeMSW                                      As Integer
    NominalMediaRotationRate                            As Integer
    ReservedWord218                                     As Integer
    NVCacheOptions                                      As Integer
    WriteReadVerifySectorCountMode                      As Byte
    ReservedWord220                                     As Byte
    ReservedWord221                                     As Integer
    TransportMajorVersion                               As Integer
    TransportMinorVersion                               As Integer
    ReservedWord224(0 To 5)                             As Integer
    ExtendedNumberOfUserAddressableSectors(0 To 1)      As Long
    MinBlocksPerDownloadMicrocodeMode03                 As Integer
    MaxBlocksPerDownloadMicrocodeMode03                 As Integer
    ReservedWord236(0 To 18)                            As Integer
    Signature                                           As Byte
    CheckSum                                            As Byte
End Type
Public Const IOCTL_STORAGE_BASE = FILE_DEVICE_MASS_STORAGE
 

 
Public Const IOCTL_STORAGE_CHECK_VERIFY            = &H2D4800
Public Const IOCTL_STORAGE_CHECK_VERIFY2           = &H2D0800
Public Const IOCTL_STORAGE_MEDIA_REMOVAL           = &H2D4804
Public Const IOCTL_STORAGE_EJECT_MEDIA             = &H2D4808
Public Const IOCTL_STORAGE_LOAD_MEDIA              = &H2D480C
Public Const IOCTL_STORAGE_LOAD_MEDIA2             = &H2D080C
Public Const IOCTL_STORAGE_RESERVE                 = &H2D4810
Public Const IOCTL_STORAGE_RELEASE                 = &H2D4814
Public Const IOCTL_STORAGE_FIND_NEW_DEVICES        = &H2D4818
Public Const IOCTL_STORAGE_EJECTION_CONTROL        = &H2D0940
Public Const IOCTL_STORAGE_MCN_CONTROL             = &H2D0944
Public Const IOCTL_STORAGE_GET_MEDIA_TYPES         = &H2D0C00
Public Const IOCTL_STORAGE_GET_MEDIA_TYPES_EX      = &H2D0C04
Public Const IOCTL_STORAGE_GET_MEDIA_SERIAL_NUMBER = &H2D0C10
Public Const IOCTL_STORAGE_GET_HOTPLUG_INFO        = &H2D0C14
Public Const IOCTL_STORAGE_SET_HOTPLUG_INFO        = &H2DCC18
Public Const IOCTL_STORAGE_RESET_BUS               = &H2D5000
Public Const IOCTL_STORAGE_RESET_DEVICE            = &H2D5004
Public Const IOCTL_STORAGE_BREAK_RESERVATION       = &H2D5014
Public Const IOCTL_STORAGE_PERSISTENT_RESERVE_IN   = &H2D5018
Public Const IOCTL_STORAGE_PERSISTENT_RESERVE_OUT  = &H2DD01C
Public Const IOCTL_STORAGE_GET_DEVICE_NUMBER       = &H2D1080
Public Const IOCTL_STORAGE_GET_DEVICE_NUMBER_EX    = &H2D1084
Public Const IOCTL_STORAGE_PREDICT_FAILURE         = &H2D1100
Public Const IOCTL_STORAGE_FAILURE_PREDICTION_CONFIG = &H2D1104
Public Const IOCTL_STORAGE_GET_COUNTERS     = &H2D1108
Public Const IOCTL_STORAGE_READ_CAPACITY           = &H2D5140
Public Const IOCTL_STORAGE_GET_DEVICE_TELEMETRY      = &H2DD1C0
Public Const IOCTL_STORAGE_DEVICE_TELEMETRY_NOTIFY   = &H2DD1C4
Public Const IOCTL_STORAGE_DEVICE_TELEMETRY_QUERY_CAPS = &H2DD1C8
Public Const IOCTL_STORAGE_GET_DEVICE_TELEMETRY_RAW  = &H2DD1CC
Public Const IOCTL_STORAGE_SET_TEMPERATURE_THRESHOLD     = &H2DD200
Public Const IOCTL_STORAGE_PROTOCOL_COMMAND              = &H2DD3C0
Public Const IOCTL_STORAGE_SET_PROPERTY                  = &H2D93FC
Public Const IOCTL_STORAGE_QUERY_PROPERTY                = &H2D1400
Public Const IOCTL_STORAGE_MANAGE_DATA_SET_ATTRIBUTES    = &H2D9404
Public Const IOCTL_STORAGE_GET_LB_PROVISIONING_MAP_RESOURCES  = &H2D5408
Public Const IOCTL_STORAGE_REINITIALIZE_MEDIA    = &H2D9640
Public Const IOCTL_STORAGE_GET_BC_PROPERTIES         = &H2D5800
Public Const IOCTL_STORAGE_ALLOCATE_BC_STREAM        = &H2DD804
Public Const IOCTL_STORAGE_FREE_BC_STREAM            = &H2DD808
Public Const IOCTL_STORAGE_CHECK_PRIORITY_HINT_SUPPORT    = &H2D1880
Public Const IOCTL_STORAGE_START_DATA_INTEGRITY_CHECK     = &H2DD884
Public Const IOCTL_STORAGE_STOP_DATA_INTEGRITY_CHECK      = &H2DD888
Public Const IOCTL_STORAGE_FIRMWARE_GET_INFO         = &H2D1C00
Public Const IOCTL_STORAGE_FIRMWARE_DOWNLOAD         = &H2DDC04
Public Const IOCTL_STORAGE_FIRMWARE_ACTIVATE         = &H2DDC08
Public Const IOCTL_STORAGE_ENABLE_IDLE_POWER         = &H2D1C80
Public Const IOCTL_STORAGE_GET_IDLE_POWERUP_REASON   = &H2D1C84
Public Const IOCTL_STORAGE_POWER_ACTIVE  = &H2D1C88
Public Const IOCTL_STORAGE_POWER_IDLE    = &H2D1C8C
Public Const IOCTL_STORAGE_EVENT_NOTIFICATION = &H2D1C90
Public Const IOCTL_STORAGE_DEVICE_POWER_CAP = &H2D1C94
Public Const IOCTL_STORAGE_RPMB_COMMAND     = &H2D1C98
Public Const IOCTL_STORAGE_ATTRIBUTE_MANAGEMENT = &H2DDC9C
Public Const IOCTL_STORAGE_DIAGNOSTIC    = &H2D1CA0
Public Const IOCTL_STORAGE_GET_PHYSICAL_ELEMENT_STATUS    = &H2D1CA4
Public Const IOCTL_STORAGE_REMOVE_ELEMENT_AND_TRUNCATE    = &H2D1CC0
Public Const IOCTL_STORAGE_GET_DEVICE_INTERNAL_LOG    = &H2D1CC4
 


Public Const IOCTL_ATA_PASS_THROUGH  As Long = &H4D02C
Public Const IOCTL_VOLUME_GET_VOLUME_DISK_EXTENTS As Long = &H560000
Public Const IOCTL_DISK_GET_DRIVE_GEOMETRY   As Long = &H70000
Public Const IOCTL_DISK_GET_PARTITION_INFO   As Long = &H74004
Public Const IOCTL_DISK_SET_PARTITION_INFO   As Long = &H7C008
Public Const IOCTL_DISK_GET_DRIVE_LAYOUT     As Long = &H7400C
Public Const IOCTL_DISK_SET_DRIVE_LAYOUT     As Long = &H7C010
Public Const IOCTL_DISK_VERIFY               As Long = &H70014
Public Const IOCTL_DISK_FORMAT_TRACKS        As Long = &H7C018
Public Const IOCTL_DISK_REASSIGN_BLOCKS      As Long = &H7C01C
Public Const IOCTL_DISK_PERFORMANCE          As Long = &H70020
Public Const IOCTL_DISK_IS_WRITABLE          As Long = &H70024
Public Const IOCTL_DISK_LOGGING              As Long = &H70028
Public Const IOCTL_DISK_FORMAT_TRACKS_EX     As Long = &H7C02C
Public Const IOCTL_DISK_HISTOGRAM_STRUCTURE  As Long = &H70030
Public Const IOCTL_DISK_HISTOGRAM_DATA       As Long = &H70034
Public Const IOCTL_DISK_HISTOGRAM_RESET      As Long = &H70038
Public Const IOCTL_DISK_REQUEST_STRUCTURE    As Long = &H7003C
Public Const IOCTL_DISK_REQUEST_DATA         As Long = &H70040
Public Const IOCTL_DISK_PERFORMANCE_OFF      As Long = &H70060
Public Const IOCTL_DISK_CONTROLLER_NUMBER    As Long = &H70044
Public Const SMART_RCV_DRIVE_DATA_EX         As Long = &H7008C
Public Const IOCTL_DISK_GET_PARTITION_INFO_EX    As Long = &H70048
Public Const IOCTL_DISK_SET_PARTITION_INFO_EX    As Long = &H7C04C
Public Const IOCTL_DISK_GET_DRIVE_LAYOUT_EX      As Long = &H70050
Public Const IOCTL_DISK_SET_DRIVE_LAYOUT_EX      As Long = &H7C054
Public Const IOCTL_DISK_CREATE_DISK              As Long = &H7C058
Public Const IOCTL_DISK_GET_LENGTH_INFO          As Long = &H7405C
Public Const IOCTL_DISK_GET_DRIVE_GEOMETRY_EX    As Long = &H700A0
Public Const IOCTL_DISK_REASSIGN_BLOCKS_EX       As Long = &H7C0A4
Public Const IOCTL_DISK_UPDATE_DRIVE_SIZE        As Long = &H7C0C8
Public Const IOCTL_DISK_GROW_PARTITION           As Long = &H7C0D0
Public Const IOCTL_DISK_GET_CACHE_INFORMATION    As Long = &H740D4
Public Const IOCTL_DISK_SET_CACHE_INFORMATION    As Long = &H7C0D8
Public Const IOCTL_DISK_DELETE_DRIVE_LAYOUT      As Long = &H7C100
Public Const IOCTL_DISK_UPDATE_PROPERTIES    As Long = &H70140
Public Const IOCTL_DISK_CHECK_VERIFY     As Long = &H74800
Public Const IOCTL_DISK_MEDIA_REMOVAL    As Long = &H74804
Public Const IOCTL_DISK_EJECT_MEDIA      As Long = &H74808
Public Const IOCTL_DISK_LOAD_MEDIA       As Long = &H7480C
Public Const IOCTL_DISK_RESERVE          As Long = &H74810
Public Const IOCTL_DISK_RELEASE          As Long = &H74814
Public Const IOCTL_DISK_FIND_NEW_DEVICES As Long = &H74818
Public Const IOCTL_DISK_GET_MEDIA_TYPES  As Long = &H70C00
Public Const IOCTL_DISK_GET_DISK_ATTRIBUTES      As Long = &H700F0
Public Const IOCTL_DISK_SET_DISK_ATTRIBUTES      As Long = &H7C0F4
Public Const IOCTL_DISK_RESET_SNAPSHOT_INFO      As Long = &H7C210


Public Type STORAGE_HOTPLUG_INFO
    Size As Long ' version
    MediaRemovable As Byte ' ie. zip, jaz, cdrom, mo, etc. vs hdd
    MediaHotplug As Byte ' ie. does the device succeed a lock even though its not lockable media?
    DeviceHotplug As Byte ' ie. 1394, USB, etc.
    WriteCacheEnableOverride As Byte ' This field should not be relied upon because it is no longer used
End Type

Public Type DISK_EXTENT
    DiskNumber As Long
    StartingOffset As ULARGE_INTEGER
    ExtentLength As ULARGE_INTEGER
End Type

Public Type VOLUME_DISK_EXTENTS
    NumberOfDiskExtents As Long
    Extents(0) As DISK_EXTENT '[ANY_ARRAY] size 
End Type

Public Enum STORAGE_BUS_TYPE
    BusTypeUnknown = &H00
    BusTypeScsi  
    BusTypeAtapi  
    BusTypeAta  
    BusType1394  
    BusTypeSsa  
    BusTypeFibre  
    BusTypeUsb 
    BusTypeRAID  
    BusTypeiScsi  
    BusTypeSas
    BusTypeSata  
    BusTypeSd 
    BusTypeMmc  
    BusTypeVirtual 
    BusTypeFileBackedVirtual 
    BusTypeSpaces  
    BusTypeNvme  
    BusTypeSCM  
    BusTypeUfs  
    BusTypeNvmeof 
    BusTypeMax 
    BusTypeMaxReserved = &H7F
End Enum

Public Type STORAGE_DESCRIPTOR_HEADER
   Version             As Long
   Size                As Long
End Type
Public Type STORAGE_DEVICE_DESCRIPTOR
   Version             As Long
   Size                As Long
   DeviceType          As Byte
   DeviceTypeModifier  As Byte
   RemovableMedia      As Byte
   CommandQueueing     As Byte
   VendorIdOffset      As Long
   ProductIdOffset     As Long
   ProductRevOffset    As Long
   SerialNumberOffset  As Long
   BusType             As STORAGE_BUS_TYPE
   RawPropertiesLength As Long
   RawDeviceProperties(4095) As Byte
End Type


Public Const IDE_COMMAND_IDENTIFY    As Long = &HEC
Public Const ATA_FLAGS_DATA_IN       As Long = 2
Public Const ATA_FLAGS_DRDY_REQUIRED As Long = 1
Public Type SCSI_PASS_THROUGH_BUFFERED
     length As Integer
     ScsiStatus As Byte
     PathId As Byte
     TargetId As Byte
     Lun As Byte
     CdbLength As Byte
     SenseInfoLength As Byte
     DataIn As Byte
     DataTransferLength As Long
     TimeOutValue As Long
     DataBufferOffset As Long
     SenseInfoOffset As Long
     Cdb(0 To 15) As Byte
     Filler As Long
     Buffer(0 To 4095) As Byte
End Type
Public Type SCSI_PASS_THROUGH_WITH_BUFFERS
    Spt As SCSI_PASS_THROUGH
    Filler As Long ' realign buffers to double word boundary
    SenseBuf(0 To 31) As Byte
    DataBuf(0 To 4095) As Byte
End Type
Public Type SCSI_PASS_THROUGH
     Length As Integer
     ScsiStatus As Byte
     PathId As Byte
     TargetId As Byte
     Lun As Byte
     CdbLength As Byte
     SenseInfoLength As Byte
     DataIn As Byte
     DataTransferLength As Long
     TimeOutValue As Long
     DataBufferOffset As LongPtr
     SenseInfoOffset As Long
     Cdb(0 To 15) As Byte '41 bytes
End Type
Public Type SCSI_PASS_THROUGH_BUFFERED24
    Spt As SCSI_PASS_THROUGH
    SenseBuf(0 To 23) As Byte
    DataBuf(0 To 4095) As Byte
End Type
Public Type STORAGE_DEVICE_NUMBER
    DeviceType As DEVICE_TYPE
    DeviceNumber As Long
    PartitionNumber As Long
End Type
[Description("The last member is supposed to be a C-style array. **DO NOT USE LenB() for .Size!!** Calculate only with the buffer used.")]
Public Type STORAGE_DEVICE_NUMBERS
    ' Size of this structure serves
    ' as the version
    Version As Long
    ' Size of this structure
    Size As Long '12+ 12*Devices actually used
    NumberOfDevices As Long
    Devices(0 To 255) As STORAGE_DEVICE_NUMBER
End Type
Public Enum DISK_PARTITION_TYPE
    PARTITION_ENTRY_UNUSED = &H00  ' Entry unused
    PARTITION_FAT_12 = &H01  ' 12-bit FAT entries
    PARTITION_XENIX_1 = &H02  ' Xenix
    PARTITION_XENIX_2 = &H03  ' Xenix
    PARTITION_FAT_16 = &H04  ' 16-bit FAT entries
    PARTITION_EXTENDED = &H05  ' Extended partition entry
    PARTITION_HUGE = &H06  ' Huge partition MS-DOS V4
    PARTITION_IFS = &H07  ' IFS Partition
    PARTITION_OS2BOOTMGR = &H0A  ' OS/2 Boot Manager/OPUS/Coherent swap
    PARTITION_FAT32 = &H0B  ' FAT32
    PARTITION_FAT32_XINT13 = &H0C  ' FAT32 using extended int13 services
    PARTITION_XINT13 = &H0E  ' Win95 partition using extended int13 services
    PARTITION_XINT13_EXTENDED = &H0F  ' Same as type 5 but uses extended int13 services
    PARTITION_MSFT_RECOVERY = &H27  ' Microsoft recovery partition
    PARTITION_MAIN_OS = &H28  ' Main OS partition
    PARTIITON_OS_DATA = &H29  ' OS data partition
    PARTITION_PRE_INSTALLED = &H2a  ' PreInstalled partition
    PARTITION_BSP = &H2b  ' BSP partition
    PARTITION_DPP = &H2c  ' DPP partition
    PARTITION_WINDOWS_SYSTEM = &H2d  ' Windows system partition
    PARTITION_PREP = &H41  ' PowerPC Reference Platform (PReP) Boot Partition
    PARTITION_LDM = &H42  ' Logical Disk Manager partition
    PARTITION_DM = &H54  ' OnTrack Disk Manager partition
    PARTITION_EZDRIVE = &H55  ' EZ-Drive partition
    PARTITION_UNIX = &H63  ' Unix
    PARTITION_SPACES_DATA = &HD7  ' Storage Spaces protective partition
    PARTITION_SPACES = &HE7  ' Storage Spaces protective partition
    PARTITION_GPT = &HEE  ' Gpt protective partition
    PARTITION_SYSTEM = &HEF  ' System partition
    VALID_NTFT = &HC0  ' NTFT uses high order bits
'  The high bit of the partition type code indicates that a partition
'  is part of an NTFT mirror or striped array.
    PARTITION_NTFT = &H80  ' NTFT partition
End Enum

Public Enum PARTITION_STYLE
    PARTITION_STYLE_MBR = 0
    PARTITION_STYLE_GPT = 1
    PARTITION_STYLE_RAW = 2
End Enum

Public Type PARTITION_INFORMATION_MBR
    /* [ TypeHint(DISK_PARTITION_TYPE) ] */ PartitionType As Byte
    BootIndicator As Byte
    RecognizedPartition As Byte
    HiddenSectors As Long
    PartitionId As UUID
End Type

Public Const GPT_ATTRIBUTE_PLATFORM_REQUIRED  = (&H0000000000000001)
Public Const GPT_ATTRIBUTE_NO_BLOCK_IO_PROTOCOL  = (&H0000000000000002)
Public Const GPT_ATTRIBUTE_LEGACY_BIOS_BOOTABLE  = (&H0000000000000004)
'  The following are GPT partition attributes applicable when the
'  PartitionType is PARTITION_BASIC_DATA_GUID.
Public Const GPT_BASIC_DATA_ATTRIBUTE_NO_DRIVE_LETTER  = (&H8000000000000000)
Public Const GPT_BASIC_DATA_ATTRIBUTE_HIDDEN  = (&H4000000000000000)
Public Const GPT_BASIC_DATA_ATTRIBUTE_SHADOW_COPY  = (&H2000000000000000)
Public Const GPT_BASIC_DATA_ATTRIBUTE_READ_ONLY  = (&H1000000000000000)
Public Const GPT_BASIC_DATA_ATTRIBUTE_OFFLINE  = (&H0800000000000000)
Public Const GPT_BASIC_DATA_ATTRIBUTE_DAX  = (&H0400000000000000)
Public Const GPT_BASIC_DATA_ATTRIBUTE_SERVICE  = (&H0200000000000000)
Public Const GPT_SPACES_ATTRIBUTE_NO_METADATA = (&H8000000000000000)

Public Type SET_PARTITION_INFORMATION
    PartitionType As BYTE
End Type
'Alias SET_PARTITION_INFORMATION_MBR As SET_PARTITION_INFORMATION
Public Type SET_PARTITION_INFORMATION_MBR
    PartitionType As BYTE
End Type

Public Type PARTITION_INFORMATION_GPT
    PartitionType As UUID ' Partition type. See table 16-3.
    PartitionId As UUID ' Unique GUID for this partition.
    Attributes As LongLong ' See table 16-4.
    Name(0 To 35) As Integer  ' Partition Name in Unicode.
End Type
'Alias SET_PARTITION_INFORMATION_GPT as PARTITION_INFORMATION_GPT 
Public Type SET_PARTITION_INFORMATION_GPT
    PartitionType As UUID ' Partition type. See table 16-3.
    PartitionId As UUID ' Unique GUID for this partition.
    Attributes As LongLong ' See table 16-4.
    Name(0 To 35) As Integer  ' Partition Name in Unicode.
End Type

Public Type SET_PARTITION_INFORMATION_EX
    PartitionStyle As PARTITION_STYLE
    '    union {
    '        SET_PARTITION_INFORMATION_MBR Mbr;
    '        SET_PARTITION_INFORMATION_GPT Gpt;
    '    } DUMMYUNIONNAME;
    pad As Long
    u(&H70) As Byte
End Type

Public Type CREATE_DISK_GPT
    DiskId As UUID ' Unique disk id for the disk.
    MaxPartitionCount As Long ' Maximim number of partitions allowable.
End Type

Public Type CREATE_DISK_MBR
    Signature As Long
End Type

Public Type CREATE_DISK
    PartitionStyle As PARTITION_STYLE
    '    union {
    '        CREATE_DISK_MBR Mbr;
    '        CREATE_DISK_GPT Gpt;
    '    } DUMMYUNIONNAME;
    u(&H14) As Byte
End Type

Public Type GET_LENGTH_INFORMATION
    Length As LARGE_INTEGER
End Type

Public Type PARTITION_INFORMATION_EX_MBR
    PartitionStyle As PARTITION_STYLE
    StartingOffset As LARGE_INTEGER
    PartitionLength As LARGE_INTEGER
    PartitionNumber As Long
    RewritePartition As Byte
    '#if (NTDDI_VERSION >= NTDDI_WIN10_RS3)  /* ABRACADABRA_WIN10_RS3 */
    IsServicePartition As Byte
    Pad(&H70 - &H18 - 1) As Byte
    Mbr As PARTITION_INFORMATION_MBR
    'Gpt As PARTITION_INFORMATION_GPT
    '#endif
    '    union {
    '        PARTITION_INFORMATION_MBR Mbr;
    '        PARTITION_INFORMATION_GPT Gpt;
    '    } DUMMYUNIONNAME;

End Type
Public Type PARTITION_INFORMATION_EX_GPT
    PartitionStyle As PARTITION_STYLE
    StartingOffset As LARGE_INTEGER
    PartitionLength As LARGE_INTEGER
    PartitionNumber As Long
    RewritePartition As Byte
    '#if (NTDDI_VERSION >= NTDDI_WIN10_RS3)  /* ABRACADABRA_WIN10_RS3 */
    IsServicePartition As Byte
    'Mbr As PARTITION_INFORMATION_MBR
    Gpt As PARTITION_INFORMATION_GPT
    '#endif
    '    union {
    '        PARTITION_INFORMATION_MBR Mbr;
    '        PARTITION_INFORMATION_GPT Gpt;
    '    } DUMMYUNIONNAME;

End Type
Public Type PARTITION_INFORMATION_EX
    PartitionStyle As PARTITION_STYLE
    StartingOffset As LARGE_INTEGER
    PartitionLength As LARGE_INTEGER
    PartitionNumber As Long
    RewritePartition As Byte
    '#if (NTDDI_VERSION >= NTDDI_WIN10_RS3)  /* ABRACADABRA_WIN10_RS3 */
    IsServicePartition As Byte
    'Mbr As PARTITION_INFORMATION_MBR
    pad(1) As Byte
    u(&H70) As Byte
    '#endif
    '    union {
    '        PARTITION_INFORMATION_MBR Mbr;
    '        PARTITION_INFORMATION_GPT Gpt;
    '    } DUMMYUNIONNAME;

End Type
Public Type DRIVE_LAYOUT_INFORMATION_GPT
    DiskId As UUID
    StartingUsableOffset As LARGE_INTEGER
    UsableLength As LARGE_INTEGER
    MaxPartitionCount As Long
End Type

[ Description("Note: Checksum not present before Win10 Redstone 1") ]
Public Type DRIVE_LAYOUT_INFORMATION_MBR
    Signature As Long
    '#if (NTDDI_VERSION >= NTDDI_WIN10_RS1)  /* ABRACADABRA_WIN10_RS1 */
    CheckSum As Long
    '#endif
End Type




Public Enum MEDIA_TYPE
    MediaTypeUnknown = 0 ' Format is unknown
    F5_1Pt2_512 = 1 ' 5.25", 1.2MB,  512 bytes/sector
    F3_1Pt44_512 = 2 ' 3.5",  1.44MB, 512 bytes/sector
    F3_2Pt88_512 = 3 ' 3.5",  2.88MB, 512 bytes/sector
    F3_20Pt8_512 = 4 ' 3.5",  20.8MB, 512 bytes/sector
    F3_720_512 = 5 ' 3.5",  720KB,  512 bytes/sector
    F5_360_512 = 6 ' 5.25", 360KB,  512 bytes/sector
    F5_320_512 = 7 ' 5.25", 320KB,  512 bytes/sector
    F5_320_1024 = 8 ' 5.25", 320KB,  1024 bytes/sector
    F5_180_512 = 9 ' 5.25", 180KB,  512 bytes/sector
    F5_160_512 = 10 ' 5.25", 160KB,  512 bytes/sector
    RemovableMedia = 11 ' Removable media other than floppy
    FixedMedia = 12 ' Fixed hard disk media
    F3_120M_512 = 13 ' 3.5", 120M Floppy
    F3_640_512 = 14 ' 3.5" ,  640KB,  512 bytes/sector
    F5_640_512 = 15 ' 5.25",  640KB,  512 bytes/sector
    F5_720_512 = 16 ' 5.25",  720KB,  512 bytes/sector
    F3_1Pt2_512 = 17 ' 3.5" ,  1.2Mb,  512 bytes/sector
    F3_1Pt23_1024 = 18 ' 3.5" ,  1.23Mb, 1024 bytes/sector
    F5_1Pt23_1024 = 19 ' 5.25",  1.23MB, 1024 bytes/sector
    F3_128Mb_512 = 20 ' 3.5" MO 128Mb   512 bytes/sector
    F3_230Mb_512 = 21 ' 3.5" MO 230Mb   512 bytes/sector
    F8_256_128 = 22 ' 8",     256KB,  128 bytes/sector
    F3_200Mb_512 = 23 ' 3.5",   200M Floppy (HiFD)
    F3_240M_512 = 24 ' 3.5",   240Mb Floppy (HiFD)
    F3_32M_512 = 25 ' 3.5",   32Mb Floppy
End Enum

Public Enum StorageMediaAttributes
    MEDIA_ERASEABLE  = &H00000001
    MEDIA_WRITE_ONCE  = &H00000002
    MEDIA_READ_ONLY  = &H00000004
    MEDIA_READ_WRITE  = &H00000008
    MEDIA_WRITE_PROTECTED  = &H00000100
    MEDIA_CURRENTLY_MOUNTED  = &H80000000
End Enum

Public Type DEVICE_MEDIA_INFO_DiskInfo
    Cylinders As LARGE_INTEGER
    MediaType As STORAGE_MEDIA_TYPE
    TracksPerCylinder As Long
    SectorsPerTrack As Long
    BytesPerSector As Long
    NumberMediaSides As Long
    MediaCharacteristics As StorageMediaAttributes ' Bitmask of MEDIA_XXX values.
End Type
Public Type DEVICE_MEDIA_INFO_RemovableDiskInfo
    Cylinders As LARGE_INTEGER
    MediaType As STORAGE_MEDIA_TYPE
    TracksPerCylinder As Long
    SectorsPerTrack As Long
    BytesPerSector As Long
    NumberMediaSides As Long
    MediaCharacteristics As StorageMediaAttributes ' Bitmask of MEDIA_XXX values.
End Type
Public Type DEVICE_MEDIA_INFO_TapeInfo
    MediaType As STORAGE_MEDIA_TYPE
    MediaCharacteristics As StorageMediaAttributes ' Bitmask of MEDIA_XXX values.
    CurrentBlockSize As Long
    BusType As STORAGE_BUS_TYPE
    ' Bus specific information describing the medium supported.
    ' union {
    '   struct {
    '      BYTE  MediumType;
    '       BYTE  DensityCode;
    '    } ScsiInformation;
    '} BusSpecificData;
    BusSpecificData_MediumType As Byte
    BusSpecificData_DensityCode As Byte
End Type
[Description("Union helper types are available, see definition in source.")]
Public Type DEVICE_MEDIA_INFO
    DeviceSpecific(31) As Byte
End Type

Public Type FORMAT_PARAMETERS
    MediaType As MEDIA_TYPE
    StartCylinderNumber As Long
    EndCylinderNumber As Long
    StartHeadNumber As Long
    EndHeadNumber As Long
End Type

Public Type FORMAT_EX_PARAMETERS
    MediaType As MEDIA_TYPE
    StartCylinderNumber As Long
    EndCylinderNumber As Long
    StartHeadNumber As Long
    EndHeadNumber As Long
    FormatGapLength As Integer
    SectorsPerTrack As Integer
    SectorNumber(0 To 0) As Integer
End Type

Public Type DISK_GEOMETRY
    Cylinders As LARGE_INTEGER
    MediaType As MEDIA_TYPE
    TracksPerCylinder As Long
    SectorsPerTrack As Long
    BytesPerSector As Long
End Type

Public Type PARTITION_INFORMATION
    StartingOffset As LARGE_INTEGER
    PartitionLength As LARGE_INTEGER
    HiddenSectors As Long
    PartitionNumber As Long
    PartitionType As Byte
    BootIndicator As Byte
    RecognizedPartition As Byte
    RewritePartition As Byte
End Type



Public Const IOCTL_SCSI_PASS_THROUGH As Long = &H4D004
Public Const SCSI_IOCTL_DATA_IN As Long = &H1
Public Const SCSI_IOCTL_DATA_OUT As Long = &H0
Public Const READ_ATTRIBUTE_BUFFER_SIZE As Long = 512
Public Const IDENTIFY_BUFFER_SIZE As Long = 512
Public Const READ_THRESHOLD_BUFFER_SIZE As Long = 512
Public Const DFP_GET_VERSION As Long = &H74080
Public Const DFP_SEND_DRIVE_COMMAND As Long = &H7C084
Public Const DFP_RECEIVE_DRIVE_DATA As Long = &H7C088 '??
Public Const IDE_ATAPI_ID As Long = &HA1  ' Returns ID sector for ATAPI.
Public Const IDE_ID_FUNCTION As Long = &HEC  ' Returns ID sector for ATA.
Public Const IDE_EXECUTE_SMART_FUNCTION As Long = &HB0  ' Performs SMART cmd.
Public Const SMART_CYL_LOW As Long = &H4F
Public Const SMART_CYL_HI As Long = &HC2

Public Const SMART_READ_ATTRIBUTE_VALUES As Long = &HD0    ' ATA4: Renamed
Public Const SMART_READ_ATTRIBUTE_THRESHOLDS As Long = &HD1    ' Obsoleted in ATA4!
Public Const SMART_ENABLE_DISABLE_ATTRIBUTE_AUTOSAVE As Long = &HD2
Public Const SMART_SAVE_ATTRIBUTE_VALUES As Long = &HD3
Public Const SMART_EXECUTE_OFFLINE_IMMEDIATE As Long = &HD4    ' ATA4
Public Const SMART_ENABLE_SMART_OPERATIONS As Long = &HD8
Public Const SMART_DISABLE_SMART_OPERATIONS As Long = &HD9
Public Const SMART_RETURN_SMART_STATUS As Long = &HDA
Public Type DRIVEATTRIBUTE
    bAttrID As Byte        ' Identifies which attribute
    wStatusFlags As Integer    ' see bit definitions below
    bAttrValue As Byte     ' Current normalized value
    bWorstValue As Byte    ' How bad has it ever been?
    bRawValue(5) As Byte   ' Un-normalized value
    bReserved As Byte      '
End Type
Public Type ATTRTHRESHOLD
    bAttrID As Byte            ' Identifies which attribute
    bWarrantyThreshold As Byte ' Triggering value
    bReserved(9) As Byte      '
End Type
Public Type IDSECTOR
    wGenConfig As Integer
    wNumCyls As Integer
    wReserved As Integer
    wNumHeads As Integer
    wBytesPerTrack As Integer
    wBytesPerSector As Integer
    wSectorsPerTrack As Integer
    wVendorUnique(2) As Integer
    sSerialNumber(19) As Byte
    wBufferType As Integer
    wBufferSize As Integer
    wECCSize As Integer
    sFirmwareRev(7) As Byte
    sModelNumber(39) As Byte
    wMoreVendorUnique As Integer
    wDoubleWordIO As Integer
    wCapabilities As Integer
    wReserved1 As Integer
    wPIOTiming As Integer
    wDMATiming As Integer
    wBS As Integer
    wNumCurrentCyls As Integer
    wNumCurrentHeads As Integer
    wNumCurrentSectorsPerTrack As Integer
    ulCurrentSectorCapacity(3) As Byte    '?????byte,??VB??????LONG???
    wMultSectorStuff As Integer
    ulTotalAddressableSectors(3) As Byte   '?????byte,??VB??????LONG???
    wSingleWordDMA As Integer
    wMultiWordDMA As Integer
    bReserved(127) As Byte
End Type
Public Const ATTR_INVALID As Long = 0
Public Const ATTR_READ_ERROR_RATE As Long = 1
Public Const ATTR_THROUGHPUT_PERF As Long = 2
Public Const ATTR_SPIN_UP_TIME As Long = 3
Public Const ATTR_START_STOP_COUNT As Long = 4
Public Const ATTR_REALLOC_SECTOR_COUNT As Long = 5
Public Const ATTR_READ_CHANNEL_MARGIN As Long = 6
Public Const ATTR_SEEK_ERROR_RATE As Long = 7
Public Const ATTR_SEEK_TIME_PERF As Long = 8
Public Const ATTR_POWER_ON_HRS_COUNT As Long = 9
Public Const ATTR_SPIN_RETRY_COUNT As Long = 10
Public Const ATTR_CALIBRATION_RETRY_COUNT As Long = 11
Public Const ATTR_POWER_CYCLE_COUNT As Long = 12
Public Const PRE_FAILURE_WARRANTY As Long = &H1
Public Const ON_LINE_COLLECTION As Long = &H2
Public Const PERFORMANCE_ATTRIBUTE As Long = &H4
Public Const ERROR_RATE_ATTRIBUTE As Long = &H8
Public Const EVENT_COUNT_ATTRIBUTE As Long = &H10
Public Const SELF_PRESERVING_ATTRIBUTE As Long = &H20
Public Const NUM_ATTRIBUTE_STRUCTS As Long = 30
    
Public Enum STORAGE_PROPERTY_ID
    StorageDeviceProperty = 0
    StorageAdapterProperty = 1
    StorageDeviceIdProperty = 2
    StorageDeviceUniqueIdProperty = 3
    StorageDeviceWriteCacheProperty = 4
    StorageMiniportProperty = 5
    StorageAccessAlignmentProperty = 6
    StorageDeviceSeekPenaltyProperty = 7
    StorageDeviceTrimProperty = 8
    StorageDeviceWriteAggregationProperty = 9
    StorageDeviceDeviceTelemetryProperty = 10
    StorageDeviceLBProvisioningProperty = 11
    StorageDevicePowerProperty = 12
    StorageDeviceCopyOffloadProperty = 13
    StorageDeviceResiliencyProperty = 14
    StorageDeviceMediumProductType = 15
    StorageAdapterRpmbProperty = 16
    StorageAdapterCryptoProperty = 17
    StorageDeviceIoCapabilityProperty = 48
    StorageAdapterProtocolSpecificProperty = 49
    StorageDeviceProtocolSpecificProperty = 50
    StorageAdapterTemperatureProperty = 51
    StorageDeviceTemperatureProperty = 52
    StorageAdapterPhysicalTopologyProperty = 53
    StorageDevicePhysicalTopologyProperty = 54
    StorageDeviceAttributesProperty = 55
    StorageDeviceManagementStatus = 56
    StorageAdapterSerialNumberProperty = 57
    StorageDeviceLocationProperty = 58
    StorageDeviceNumaProperty = 59
    StorageDeviceZonedDeviceProperty = 60
    StorageDeviceUnsafeShutdownCount = 61
    StorageDeviceEnduranceProperty = 62
    StorageDeviceLedStateProperty = 63
    StorageDeviceSelfEncryptionProperty = 64
    StorageFruIdProperty = 65
End Enum
    
Public Enum STORAGE_PROTOCOL_TYPE
    ProtocolTypeUnknown = &H0
    ProtocolTypeScsi = 1
    ProtocolTypeAta = 2
    ProtocolTypeNvme = 3
    ProtocolTypeSd = 4
    ProtocolTypeUfs = 5
    ProtocolTypeProprietary = &H7E
    ProtocolTypeMaxReserved = &H7F
End Enum
Public Enum STORAGE_QUERY_TYPE
    PropertyStandardQuery = 0
    PropertyExistsQuery = 1
    PropertyMaskQuery = 2
    PropertyQueryMaxDefined = 3
End Enum

Public Enum STORAGE_PROTOCOL_ATA_DATA_TYPE
    AtaDataTypeUnknown = 0
    AtaDataTypeIdentify = 1 ' Retrieved by command - IDENTIFY DEVICE
    AtaDataTypeLogPage = 2 ' Retrieved by command - READ LOG EXT
End Enum

Public Enum STORAGE_PROTOCOL_NVME_DATA_TYPE
    NVMeDataTypeUnknown = 0
    NVMeDataTypeIdentify = 1
    NVMeDataTypeLogPage = 2
    NVMeDataTypeFeature = 3
End Enum
Public Const NVME_IDENTIFY_CNS_CONTROLLER = 1
Public Type STORAGE_PROTOCOL_SPECIFIC_DATA
    ProtocolType As STORAGE_PROTOCOL_TYPE
    /* [ TypeHint(STORAGE_PROTOCOL_NVME_DATA_TYPE, STORAGE_PROTOCOL_ATA_DATA_TYPE) ] */ DataType As Long
    ProtocolDataRequestValue As Long
    ProtocolDataRequestSubValue As Long
    ProtocolDataOffset As Long
    ProtocolDataLength As Long
    FixedProtocolReturnData As Long
    ProtocolDataRequestSubValue2 As Long
    ProtocolDataRequestSubValue3 As Long
    ProtocolDataRequestSubValue4 As Long
End Type

Public Type STORAGE_PROTOCOL_DATA_DESCRIPTOR
    Version As Long
    Size As Long
    ProtocolSpecificData As STORAGE_PROTOCOL_SPECIFIC_DATA
End Type

Public Enum STORAGE_DEVICE_FORM_FACTOR
    FormFactorUnknown = 0
    FormFactor3_5 = 1 ' 3.5 inch nominal form factor
    FormFactor2_5 = 2 ' 2.5 inch nominal form factor
    FormFactor1_8 = 3 ' 1.8 inch nominal form factor
    FormFactor1_8Less = 4 ' Less than 1.8 inch nominal form factor
    FormFactorEmbedded = 5 ' Embedded on board.
    FormFactorMemoryCard = 6 ' Memory card such as SD, CF.
    FormFactormSata = 7 ' mSATA
    FormFactorM_2 = 8 ' M.2
    FormFactorPCIeBoard = 9 ' PCIe card plug into slot.
    FormFactorDimm = 10 ' DIMM Slot
End Enum
Public Enum STORAGE_COMPONENT_HEALTH_STATUS
    HealthStatusUnknown = 0
    HealthStatusNormal = 1
    HealthStatusThrottled = 2
    HealthStatusWarning = 3
    HealthStatusDisabled = 4
    HealthStatusFailed = 5
End Enum
Public Enum STORAGE_COMPONENT_ROLE
    STORAGE_COMPONENT_ROLE_CACHE = &H00000001
    STORAGE_COMPONENT_ROLE_TIERING = &H00000002
    STORAGE_COMPONENT_ROLE_DATA = &H00000004
End Enum

Public Type STORAGE_SPEC_VERSION
    ' struct {
        ' union {
            ' struct {
                ' BYTE    SubMinor;
                ' BYTE    Minor;
            ' } DUMMYSTRUCTNAME;

            ' WORD    AsUshort;

        ' } MinorVersion;

        ' WORD    MajorVersion;
    ' } DUMMYSTRUCTNAME;

    ' DWORD   AsUlong;
    MinorVersion As Integer
    MajorVersion As Integer
End Type

Public Type STORAGE_PHYSICAL_DEVICE_DATA
    DeviceId As Long
    Role As STORAGE_COMPONENT_ROLE ' Value(s) of bitmask from STORAGE_COMPONENT_ROLE_xxx
    HealthStatus As STORAGE_COMPONENT_HEALTH_STATUS
    CommandProtocol As STORAGE_PROTOCOL_TYPE
    SpecVersion As STORAGE_SPEC_VERSION ' Supported storage spec version. For example: SBC 3, SATA 3.2, NVMe 1.2
    FormFactor As STORAGE_DEVICE_FORM_FACTOR
    Vendor(0 To 7) As Byte
    Model(0 To 39) As Byte
    FirmwareRevision(0 To 15) As Byte
    Capacity As LongLong ' in unit of Kilo-Bytes (1024 bytes).
    PhysicalLocation(0 To 31) As Byte ' Reserved for future.
    Reserved(0 To 1) As Long
End Type
Public Type STORAGE_PHYSICAL_ADAPTER_DATA
    AdapterId As Long
    HealthStatus As STORAGE_COMPONENT_HEALTH_STATUS
    CommandProtocol As STORAGE_PROTOCOL_TYPE
    SpecVersion As STORAGE_SPEC_VERSION ' Supported storage spec version. For example: AHCI 1.3.1
    Vendor(0 To 7) As Byte
    Model(0 To 39) As Byte
    FirmwareRevision(0 To 15) As Byte
    PhysicalLocation(0 To 31) As Byte ' Reserve for future.
    ExpanderConnected As Byte
    Reserved0(0 To 2) As Byte
    Reserved1(0 To 2) As Long
End Type

Public Const STORAGE_TEMPERATURE_VALUE_NOT_REPORTED = &H8000&
Public Type STORAGE_TEMPERATURE_INFO
    Index As Integer ' Starts from 0. Index 0 may indicate a composite value.
    Temperature As Integer ' Signed value; in Celsius.
    OverThreshold As Integer ' Signed value; in Celsius.
    UnderThreshold As Integer ' Signed value; in Celsius.
    OverThresholdChangable As Byte ' Can the threshold value being changed by using IOCTL_STORAGE_SET_TEMPERATURE_THRESHOLD.
    UnderThresholdChangable As Byte ' Can the threshold value being changed by using IOCTL_STORAGE_SET_TEMPERATURE_THRESHOLD.
    EventGenerated As Byte ' Indicates that notification will be generated when temperature cross threshold.
    Reserved0 As Byte
    Reserved1 As Long
End Type
[ Description("📝**NOTE:** Trailing array may be smaller or larger. Go by InfoCount.") ]
Public Type STORAGE_TEMPERATURE_DATA_DESCRIPTOR
    Version As Long
    Size As Long
    ' Indicates the maximum temperature in degrees Celsius that may prevent continued normal operation,
    ' possibility of data loss, automatic device shutdown, extreme performance throttling, or permanent damage.
    CriticalTemperature As Integer ' Signed value; in Celsius.
    ' Indicates the maximum temperature in degrees Celsius at which the device is capable of
    ' operating continuously without degrading operation or reliability.
    WarningTemperature As Integer ' Signed value; in Celsius.
    InfoCount As Integer ' Some devices may report more than one temperature information as there can be multiple sensors implemented.
    Reserved0(0 To 1) As Byte
    Reserved1(0 To 1) As Long
    TemperatureInfo(0 To 25) As STORAGE_TEMPERATURE_INFO
End Type

[Description("IMPORTANT: If you're not using AdditionalParameters, you should use 12, not LenB(), for the size of this UDT. If you are using it, the size should equal only 8 + bytes used, rounded up to a multiple of 4.")]
Public Type STORAGE_PROPERTY_QUERY
    PropertyId As STORAGE_PROPERTY_ID
    QueryType As STORAGE_QUERY_TYPE
    AdditionalParameters(4095) As Byte
End Type

Public Const STORAGE_ADAPTER_SERIAL_NUMBER_V1_MAX_LENGTH = 128
Public Type STORAGE_ADAPTER_SERIAL_NUMBER
    Version As Long
    Size As Long
    ' NULL-terminated Unicode string of the adapter's serial number.
    SerialNumber(0 To (STORAGE_ADAPTER_SERIAL_NUMBER_V1_MAX_LENGTH - 1)) As Integer
End Type
Public Const STORAGE_ADAPTER_SERIAL_NUMBER_V1_VERSION = &H108 'LenB(Of STORAGE_ADAPTER_SERIAL_NUMBER)
Public Const STORAGE_ADAPTER_SERIAL_NUMBER_V1_SIZE = &H108 'LenB(Of STORAGE_ADAPTER_SERIAL_NUMBER)

Public Type DISK_PERFORMANCE
    BytesRead As LARGE_INTEGER
    BytesWritten As LARGE_INTEGER
    ReadTime As LARGE_INTEGER
    WriteTime As LARGE_INTEGER
    IdleTime As LARGE_INTEGER
    ReadCount As Long
    WriteCount As Long
    QueueDepth As Long
    SplitCount As Long
    QueryTime As LARGE_INTEGER
    StorageDeviceNumber As Long
    StorageManagerName(0 To 7) As Integer
End Type

Public Type DISK_RECORD
    ByteOffset As LARGE_INTEGER
    StartTime As LARGE_INTEGER
    EndTime As LARGE_INTEGER
    VirtualAddress As LongPtr
    NumberOfBytes As Long
    DeviceNumber As Byte
    ReadRequest As Byte
End Type

Public Enum DISK_LOGGING_FUNCTION
    DISK_LOGGING_START = 0
'  Stop disk logging. Only the Function field is valid.
    DISK_LOGGING_STOP = 1
'  Return disk log. All fields are valid. Data will be copied from internal
'  buffer to buffer specified for the number of bytes requested.
    DISK_LOGGING_DUMP = 2
'  DISK BINNING
'  DISKPERF will keep counters for IO that falls in each of these ranges.
'  The application determines the number and size of the ranges.
'  Joe Lin wanted me to keep it flexible as possible, for instance, IO
'  sizes are interesting in ranges like 0-4096, 4097-16384, 16385-65536, 65537+.
    DISK_BINNING = 3
End Enum
Public Type DISK_LOGGING
    /* [ TypeHint(DISK_LOGGING_FUNCTION) ] */ Function As Byte
    BufferAddress As LongPtr
    BufferSize As Long
End Type
Public Enum BIN_TYPES
    RequestSize = 0
    RequestLocation = 1
End Enum
Public Type BIN_RANGE
    StartValue As LARGE_INTEGER
    Length As LARGE_INTEGER
End Type
[ Description("C-style array: Can be followed in memory by addition BIN_RANGE structs") ]
Public Type PERF_BIN
    NumberOfBins As Long
    TypeOfBin As Long
    BinsRanges(0 To 0) As BIN_RANGE
End Type
Public Type BIN_COUNT
    BinRange As BIN_RANGE
    BinCount As Long
End Type
[ Description("C-style array: Can be followed in memory by addition BIN_RANGE structs") ]
Public Type BIN_RESULTS
    NumberOfBins As Long
    BinCounts(0 To 0) As BIN_COUNT
End Type

Public Type NVMEIdentifyStruct
    PropertyId As Integer
    QueryType As Integer
    ProtocolSpecific As STORAGE_PROTOCOL_SPECIFIC_DATA
    Buffer(0 To 4095) As Byte 'LenB(NVME_IDENTIFY_CONTROLLER_DATA)
End Type
    
Public Type NVME_POWER_STATE_DESC
    Stuff(0 To 31) As Byte
End Type
Public Type NVME_IDENTIFY_CONTROLLER_DATA                      'typedef struct {
                                                                '    //
                                                                '    // byte 0 : 255, Controller Capabilities and Features
                                                                '    //
    VID As Integer                                              '    USHORT  VID;                // byte 0:1.    M - PCI Vendor ID (VID)
    SSVID As Integer                                            '    USHORT  SSVID;              // byte 2:3.    M - PCI Subsystem Vendor ID (SSVID)
    SN(0 To 19) As Byte                                         '    UCHAR   SN[20];             // byte 4: 23.  M - Serial Number (SN)
    MN(0 To 39) As Byte                                         '    UCHAR   MN[40];             // byte 24:63.  M - Model Number (MN)
    FR(0 To 7) As Byte                                          '    UCHAR   FR[8];              // byte 64:71.  M - Firmware Revision (FR)
    RAB As Byte                                                 '    UCHAR   RAB;                // byte 72.     M - Recommended Arbitration Burst (RAB)
    IEEE(0 To 2) As Byte                                        '    UCHAR   IEEE[3];            // byte 73:75.  M - IEEE OUI Identifier (IEEE). Controller Vendor code.
                                                                '
    CMIC As Byte                                                '    struct {
                                                                '        UCHAR   MultiPCIePorts      : 1;
                                                                '        UCHAR   MultiControllers    : 1;
                                                                '        UCHAR   SRIOV               : 1;
                                                                '        UCHAR   Reserved            : 5;
                                                                '    } CMIC;                     // byte 76.     O - Controller Multi-Path I/O and Namespace Sharing Capabilities (CMIC)
                                                                '
    MDTS As Byte                                                '    UCHAR   MDTS;               // byte 77.     M - Maximum Data Transfer Size (MDTS)
    CNTLID As Integer                                           '    USHORT  CNTLID;             // byte 78:79.   M - Controller ID (CNTLID)
    VER As Long                                                 '    ULONG   VER;                // byte 80:83.   M - Version (VER)
    RTD3R As Long                                               '    ULONG   RTD3R;              // byte 84:87.   M - RTD3 Resume Latency (RTD3R)
    RTD3E As Long                                               '    ULONG   RTD3E;              // byte 88:91.   M - RTD3 Entry Latency (RTD3E)
                                                                '
                                                                '    struct {
    OAES As Long                                                '        ULONG   Reserved0                   : 8;
                                                                '        ULONG   NamespaceAttributeChanged   : 1;
                                                                '        ULONG   Reserved1                   : 23;
                                                                '    } OAES;                     // byte 92:95.   M - Optional Asynchronous Events Supported (OAES)
                                                                '
    Reserved0(0 To 143) As Byte                                 '    UCHAR   Reserved0[144];     // byte 96:239.
    ReservedForManagement(0 To 15) As Byte                      '    UCHAR   ReservedForManagement[16];     // byte 240:255.  Refer to the NVMe Management Interface Specification for definition.
                                                                '
                                                                '    //
                                                                '    // byte 256 : 511, Admin Command Set Attributes
                                                                '    //
                                                                '    struct {
                                                                '        USHORT  SecurityCommands    : 1;
                                                                '        USHORT  FormatNVM           : 1;
                                                                '        USHORT  FirmwareCommands    : 1;
                                                                '        USHORT  NamespaceCommands   : 1;
                                                                '        USHORT  DeviceSelfTest      : 1;
                                                                '        USHORT  Directives          : 1;
                                                                '        USHORT  Reserved            : 10;
    OACS As Integer                                             '     } OACS;                     // byte 256:257. M - Optional Admin Command Support (OACS)
                                                                '
                                                                '   UCHAR   ACL;                // byte 258.    M - Abort Command Limit (ACL)
    ACL As Byte                                                 '   UCHAR   AERL;               // byte 259.    M - Asynchronous Event Request Limit (AERL)
    AERL As Byte                                                '
                                                                '    struct {
                                                                '        UCHAR   Slot1ReadOnly   : 1;
                                                                '        UCHAR   SlotCount       : 3;
                                                                '        UCHAR   ActivationWithoutReset  : 1;
    FMRW As Byte                                                '        UCHAR   Reserved        : 3;
                                                                '    } FRMW;                     // byte 260.    M - Firmware Updates (FRMW)
                                                                '
                                                                '    struct {
                                                                '        UCHAR   SmartPagePerNamespace   : 1;
                                                                '        UCHAR   CommandEffectsLog       : 1;
    LPA As Byte                                                 '        UCHAR   Reserved                : 6;
                                                                '    } LPA;                      // byte 261.    M - Log Page Attributes (LPA)
                                                                '
    ELPE As Byte                                                '    UCHAR   ELPE;               // byte 262.    M - Error Log Page Entries (ELPE)
    NPSS As Byte                                                '    UCHAR   NPSS;               // byte 263.    M - Number of Power States Support (NPSS)
                                                                '
                                                                '    struct {
                                                                '        UCHAR   CommandFormatInSpec : 1;
    AVSCC As Byte                                               '        UCHAR   Reserved            : 7;
                                                                '    } AVSCC;                    // byte 264.    M - Admin Vendor Specific Command Configuration (AVSCC)
                                                                '
                                                                '    struct {
                                                                '        UCHAR   Supported       : 1;
                                                                '        UCHAR   Reserved        : 7;
    APSTA As Byte                                               '    } APSTA;                    // byte 265.     O - Autonomous Power State Transition Attributes (APSTA)
                                                                '
    WCTEMP As Integer                                           '    USHORT  WCTEMP;             // byte 266:267. M - Warning Composite Temperature Threshold (WCTEMP)
    CCTEMP As Integer                                           '    USHORT  CCTEMP;             // byte 268:269. M - Critical Composite Temperature Threshold (CCTEMP)
    MTFA As Integer                                             '    USHORT  MTFA;               // byte 270:271. O - Maximum Time for Firmware Activation (MTFA)
    HMPRE As Long                                               '    ULONG   HMPRE;              // byte 272:275. O - Host Memory Buffer Preferred Size (HMPRE)
    HMMIN As Long                                               '    ULONG   HMMIN;              // byte 276:279. O - Host Memory Buffer Minimum Size (HMMIN)
    TNVMCAP(0 To 15) As Byte                                    '    UCHAR   TNVMCAP[16];        // byte 280:295. O - Total NVM Capacity (TNVMCAP)
    UNVMCAP(0 To 15) As Byte                                    '    UCHAR   UNVMCAP[16];        // byte 296:311. O - Unallocated NVM Capacity (UNVMCAP)
                                                                '
                                                                '    struct {
                                                                '        ULONG   RPMBUnitCount           : 3;    // Number of RPMB Units
                                                                '        ULONG   AuthenticationMethod    : 3;    // Authentication Method
                                                                '        ULONG   Reserved0               : 10;
                                                                '        ULONG   TotalSize               : 8;    // Total Size: in 128KB units.
    RPMBS As Long                                               '        ULONG   AccessSize              : 8;    // Access Size: in 512B units.
                                                                '    } RPMBS;                    // byte 312:315. O - Replay Protected Memory Block Support (RPMBS)
                                                                '
    EDSTT As Integer                                            '    USHORT  EDSTT;              // byte 316:317. O - Extended Device Self-test Time (EDSTT)
    DSTO As Byte                                                '    UCHAR   DSTO;               // byte 318.     O - Device Self-test Options (DSTO)
    FWUG As Byte                                                '    UCHAR   FWUG;               // byte 319.     M - Firmware Update Granularity (FWUG)
    KAS As Integer                                              '    USHORT  KAS;                // byte 320:321  M - Keep Alive Support (KAS)
                                                                '
                                                                '    struct {
                                                                '        USHORT  Supported       : 1;
                                                                '        USHORT  Reserved        : 15;
    HCTMA As Integer                                            '    } HCTMA;                    // byte 322:323  O - Host Controlled Thermal Management Attributes (HCTMA)
                                                                '
    MNTMT As Integer                                            '    USHORT  MNTMT;              // byte 324:325  O - Minimum Thermal Management Temperature (MNTMT)
    MXTMT As Integer                                            '    USHORT  MXTMT;              // byte 326:327  O - Maximum Thermal Management Temperature (MXTMT)
                                                                '
                                                                '   struct {
                                                                '        ULONG   CryptoErase             : 1;     // Controller supports Crypto Erase Sanitize
                                                                '        ULONG   BlockErase              : 1;     // Controller supports Block Erase Sanitize
                                                                '        ULONG   Overwrite               : 1;     // Controller supports Overwrite Santize
                                                                '        ULONG   Reserved                : 29;
    SANICAP As Long                                             '    } SANICAP;                  // byte 328:331  O - Sanitize Capabilities (SANICAP)
                                                                '
    Reserved1(0 To 179) As Byte                                 '    UCHAR   Reserved1[180];     // byte 332:511.
                                                                '
                                                                '    //
                                                                '    // byte 512 : 703, NVM Command Set Attributes
                                                                '    //
                                                                '    struct {
                                                                '        UCHAR   RequiredEntrySize   : 4;    // The value is in bytes and is reported as a power of two (2^n).
    SQES As Byte                                                '        UCHAR   MaxEntrySize        : 4;    // This value is larger than or equal to the required SQ entry size.  The value is in bytes and is reported as a power of two (2^n).
                                                                '    } SQES;                     // byte 512.    M - Submission Queue Entry Size (SQES)
                                                                '
                                                                '    struct {
                                                                '        UCHAR   RequiredEntrySize   : 4;    // The value is in bytes and is reported as a power of two (2^n).
    CQES As Byte                                                '        UCHAR   MaxEntrySize        : 4;    // This value is larger than or equal to the required CQ entry size. The value is in bytes and is reported as a power of two (2^n).
                                                                '    } CQES;                     // byte 513.    M - Completion Queue Entry Size (CQES)
                                                                '
    Reserved2(0 To 1) As Byte                                   '    UCHAR   Reserved2[2];       // byte 514:515.
                                                                '
    NN As Long                                                  '    ULONG   NN;                 // byte 516:519. M - Number of Namespaces (NN)
                                                                '
                                                                '    struct {
                                                                '        USHORT  Compare             : 1;
                                                                '        USHORT  WriteUncorrectable  : 1;
                                                                '        USHORT  DatasetManagement   : 1;
                                                                '        USHORT  WriteZeroes         : 1;
                                                                '        USHORT  FeatureField        : 1;
                                                                '        USHORT  Reservations        : 1;
                                                                '        USHORT  Timestamp           : 1;
    ONCS As Integer                                             '
                                                                '        USHORT  Reserved            : 9;
                                                                '    } ONCS;                     // byte 520:521. M - Optional NVM Command Support (ONCS)
                                                                '
                                                                '    struct {
                                                                '        USHORT  CompareAndWrite             : 1;
    FUSES As Integer                                            '        USHORT  Reserved                    : 15;
                                                                '    } FUSES;                    // byte 522:523. M - Fused Operation Support (FUSES)
                                                                '
                                                                '    struct {
                                                                '        UCHAR   FormatApplyToAll                : 1;
                                                                '        UCHAR   SecureEraseApplyToAll           : 1;
                                                                '        UCHAR   CryptographicEraseSupported     : 1;
    FNA As Byte                                                 '        UCHAR   Reserved                        : 5;
                                                                '    } FNA;                      // byte 524.     M - Format NVM Attributes (FNA)
                                                                '
                                                                '    struct {
                                                                '        UCHAR   Present     : 1;
    VWC As Byte                                                 '        UCHAR   Reserved    : 7;
                                                                '    } VWC;                      // byte 525.     M - Volatile Write Cache (VWC)
                                                                '
    AWUN As Integer                                             '    USHORT  AWUN;               // byte 526:527. M - Atomic Write Unit Normal (AWUN)
    AWUPF As Integer                                            '    USHORT  AWUPF;              // byte 528:529. M - Atomic Write Unit Power Fail (AWUPF)
                                                                '
                                                                '    struct {
                                                                '        UCHAR   CommandFormatInSpec : 1;
    NVSCC As Byte                                               '        UCHAR   Reserved            : 7;
                                                                '    } NVSCC;                    // byte 530.     M - NVM Vendor Specific Command Configuration (NVSCC)
                                                                '
    Reserved3 As Byte                                           '    UCHAR   Reserved3;          // byte 531.
                                                                '
    ACWU As Integer                                             '    USHORT  ACWU;               // byte 532:533  O - Atomic Compare & Write Unit (ACWU)
                                                                '
    Reserved4(0 To 1) As Byte                                   '    UCHAR   Reserved4[2];       // byte 534:535.
                                                                '
                                                                '    struct {
                                                                '        ULONG   SGLSupported            : 1;
                                                                '        ULONG   Reserved0               : 15;
                                                                '        ULONG   BitBucketDescrSupported : 1;
                                                                '        ULONG   ByteAlignedContiguousPhysicalBuffer : 1;
                                                                '        ULONG   SGLLengthLargerThanDataLength       : 1;
                                                                '        ULONG   Reserved1               : 13;
    SGLS As Long                                                '    } SGLS;                     // byte 536:539. O - SGL Support (SGLS)
                                                                '
    Reserved5(0 To 163) As Byte                                 '    UCHAR   Reserved5[164];     // byte 540:703.
                                                                '
                                                                '    //
                                                                '    // byte 704 : 2047, I/O Command Set Attributes
                                                                '    //
    Reserved6(0 To 1343) As Byte                                '    UCHAR   Reserved6[1344];    // byte 704:2047.
                                                                '
                                                                '    //
                                                                '    // byte 2048 : 3071, Power State Descriptors
                                                                '    //
    PDS(0 To 31) As NVME_POWER_STATE_DESC                       '    NVME_POWER_STATE_DESC   PDS[32];    // byte 2048:2079. M - Power State 0 Descriptor (PSD0):  This field indicates the characteristics of power state 0
                                                                '                                        // byte 2080:2111. O - Power State 1 Descriptor (PSD1):  This field indicates the characteristics of power state 1
                                                                '                                        // byte 2112:2143. O - Power State 2 Descriptor (PSD1):  This field indicates the characteristics of power state 2
                                                                '                                        // byte 2144:2175. O - Power State 3 Descriptor (PSD1):  This field indicates the characteristics of power state 3
                                                                '                                        // byte 2176:2207. O - Power State 4 Descriptor (PSD1):  This field indicates the characteristics of power state 4
                                                                '                                        // byte 2208:2239. O - Power State 5 Descriptor (PSD1):  This field indicates the characteristics of power state 5
                                                                '                                        // byte 2240:2271. O - Power State 6 Descriptor (PSD1):  This field indicates the characteristics of power state 6
                                                                '                                        // byte 2272:2303. O - Power State 7 Descriptor (PSD1):  This field indicates the characteristics of power state 7
                                                                '                                        // byte 2304:2335. O - Power State 8 Descriptor (PSD1):  This field indicates the characteristics of power state 8
                                                                '                                        // byte 2336:2367. O - Power State 9 Descriptor (PSD1):  This field indicates the characteristics of power state 9
                                                                '                                        // byte 2368:2399. O - Power State 10 Descriptor (PSD1):  This field indicates the characteristics of power state 10
                                                                '                                        // byte 2400:2431. O - Power State 11 Descriptor (PSD1):  This field indicates the characteristics of power state 11
                                                                '                                        // byte 2432:2463. O - Power State 12 Descriptor (PSD1):  This field indicates the characteristics of power state 12
                                                                '                                        // byte 2464:2495. O - Power State 13 Descriptor (PSD1):  This field indicates the characteristics of power state 13
                                                                '                                        // byte 2496:2527. O - Power State 14 Descriptor (PSD1):  This field indicates the characteristics of power state 14
                                                                '                                        // byte 2528:2559. O - Power State 15 Descriptor (PSD1):  This field indicates the characteristics of power state 15
                                                                '                                        // byte 2560:2591. O - Power State 16 Descriptor (PSD1):  This field indicates the characteristics of power state 16
                                                                '                                        // byte 2592:2623. O - Power State 17 Descriptor (PSD1):  This field indicates the characteristics of power state 17
                                                                '                                        // byte 2624:2655. O - Power State 18 Descriptor (PSD1):  This field indicates the characteristics of power state 18
                                                                '                                        // byte 2656:2687. O - Power State 19 Descriptor (PSD1):  This field indicates the characteristics of power state 19
                                                                '                                        // byte 2688:2719. O - Power State 20 Descriptor (PSD1):  This field indicates the characteristics of power state 20
                                                                '                                        // byte 2720:2751. O - Power State 21 Descriptor (PSD1):  This field indicates the characteristics of power state 21
                                                                '                                        // byte 2752:2783. O - Power State 22 Descriptor (PSD1):  This field indicates the characteristics of power state 22
                                                                '                                        // byte 2784:2815. O - Power State 23 Descriptor (PSD1):  This field indicates the characteristics of power state 23
                                                                '                                        // byte 2816:2847. O - Power State 24 Descriptor (PSD1):  This field indicates the characteristics of power state 24
                                                                '                                        // byte 2848:2879. O - Power State 25 Descriptor (PSD1):  This field indicates the characteristics of power state 25
                                                                '                                        // byte 2880:2911. O - Power State 26 Descriptor (PSD1):  This field indicates the characteristics of power state 26
                                                                '                                        // byte 2912:2943. O - Power State 27 Descriptor (PSD1):  This field indicates the characteristics of power state 27
                                                                '                                        // byte 2944:2975. O - Power State 28 Descriptor (PSD1):  This field indicates the characteristics of power state 28
                                                                '                                        // byte 2976:3007. O - Power State 29 Descriptor (PSD1):  This field indicates the characteristics of power state 29
                                                                '                                        // byte 3008:3039. O - Power State 30 Descriptor (PSD1):  This field indicates the characteristics of power state 30
                                                                '                                        // byte 3040:3071. O - Power State 31 Descriptor (PSD1):  This field indicates the characteristics of power state 31
                                                                '
                                                                '    //
                                                                '    // byte 3072 : 4095, Vendor Specific
                                                                '    //
                                                                '    UCHAR   VS[1024];           // byte 3072 : 4095.
    VS(0 To 1023) As Byte                                       '
End Type                                                        '} NVME_IDENTIFY_CONTROLLER_DATA, *PNVME_IDENTIFY_CONTROLLER_DATA;


Public Enum USN_TRACK_MODIFIED_RANGES_FLAGS
    FLAG_USN_TRACK_MODIFIED_RANGES_ENABLE = &H1
End Enum

Public Type USN_TRACK_MODIFIED_RANGES
    Flags As USN_TRACK_MODIFIED_RANGES_FLAGS
    Unused As Long
    ChunkSize As LongLong
    FileSizeThreshold As LongLong
End Type

Public Type USN_RANGE_TRACK_OUTPUT
    Usn As LongLong
End Type

' [ Description("CAUTION: This is a variable length structure. When receiving buffers of many of these, you cannot simply copy the number of records, and this UDT may not be large enough." & vbCrLf & _
' "MSDN: The size in bytes of any change journal record is at most the size of the USN_RECORD_V2 structure, plus MaximumComponentLength characters minus 1 " & _
' "(for the character declared in the structure) times the size of a wide character. The value of MaximumComponentLength may be determined by calling" & _
' "the GetVolumeInformation Function. In C, you can determine a record size by using the following code example.") ]
Public Type USN_RECORD_V2
    RecordLength As Long
    MajorVersion As Integer
    MinorVersion As Integer
    FileReferenceNumber As LongLong
    ParentFileReferenceNumber As LongLong
    Usn As LongLong
    TimeStamp As LARGE_INTEGER
    Reason As USN_REASON
    SourceInfo As USN_SOURCE_INFO
    SecurityId As Long
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Integer
    FileNameOffset As Integer
    FileName(0 To MAX_PATH) As Integer
End Type
'Alias USN_RECORD As USN_RECORD_V2
Public Type USN_RECORD
    RecordLength As Long
    MajorVersion As Integer
    MinorVersion As Integer
    FileReferenceNumber As LongLong
    ParentFileReferenceNumber As LongLong
    Usn As LongLong
    TimeStamp As LARGE_INTEGER
    Reason As USN_REASON
    SourceInfo As USN_SOURCE_INFO
    SecurityId As Long
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Integer
    FileNameOffset As Integer
    FileName(0 To MAX_PATH) As Integer
End Type
[ Description("⚠️ CAUTION: This is a variable length structure. When receiving buffers of many of these, you cannot simply copy the number of records, and this UDT may not be large enough." & vbCrLf & _
"MSDN: MaximumChangeJournalRecordSize = QuadAlign( (MaximumComponentLength - 1) * sizeof(WCHAR) + sizeof(USN_RECORD_V3) );") ]
Public Type USN_RECORD_V3
    RecordLength As Long
    MajorVersion As Integer
    MinorVersion As Integer
    FileReferenceNumber As FILE_ID_128
    ParentFileReferenceNumber As FILE_ID_128
    Usn As LongLong
    TimeStamp As LARGE_INTEGER
    Reason As USN_REASON
    SourceInfo As USN_SOURCE_INFO
    SecurityId As Long
    FileAttributes As FILE_ATTRIBUTES
    FileNameLength As Integer
    FileNameOffset As Integer
    FileName(0 To MAX_PATH) As Integer
End Type

Public Type USN_RECORD_COMMON_HEADER
    RecordLength As Long
    MajorVersion As Integer
    MinorVersion As Integer
End Type

Public Type USN_RECORD_EXTENT
    Offset As LongLong
    Length As LongLong
End Type

[Description("⚠️ **WARNING:** This UDT cannot be used as is due to the SAFEARRAY standing in for a C-style array. Handle separately.")]
Public Type USN_RECORD_V4
    Header As USN_RECORD_COMMON_HEADER
    FileReferenceNumber As FILE_ID_128
    ParentFileReferenceNumber As FILE_ID_128
    Usn As LongLong
    Reason As USN_REASON
    SourceInfo As USN_SOURCE_INFO
    RemainingExtents As Long
    NumberOfExtents As Integer
    ExtentSize As Integer
    Extents() As USN_RECORD_EXTENT
End Type



Public Const USN_PAGE_SIZE = &H1000

Public Enum USN_REASON
    USN_REASON_DATA_OVERWRITE = (&H00000001)
    USN_REASON_DATA_EXTEND = (&H00000002)
    USN_REASON_DATA_TRUNCATION = (&H00000004)
    USN_REASON_NAMED_DATA_OVERWRITE = (&H00000010)
    USN_REASON_NAMED_DATA_EXTEND = (&H00000020)
    USN_REASON_NAMED_DATA_TRUNCATION = (&H00000040)
    USN_REASON_FILE_CREATE = (&H00000100)
    USN_REASON_FILE_DELETE = (&H00000200)
    USN_REASON_EA_CHANGE = (&H00000400)
    USN_REASON_SECURITY_CHANGE = (&H00000800)
    USN_REASON_RENAME_OLD_NAME = (&H00001000)
    USN_REASON_RENAME_NEW_NAME = (&H00002000)
    USN_REASON_INDEXABLE_CHANGE = (&H00004000)
    USN_REASON_BASIC_INFO_CHANGE = (&H00008000&)
    USN_REASON_HARD_LINK_CHANGE = (&H00010000)
    USN_REASON_COMPRESSION_CHANGE = (&H00020000)
    USN_REASON_ENCRYPTION_CHANGE = (&H00040000)
    USN_REASON_OBJECT_ID_CHANGE = (&H00080000)
    USN_REASON_REPARSE_POINT_CHANGE = (&H00100000)
    USN_REASON_STREAM_CHANGE = (&H00200000)
    USN_REASON_TRANSACTED_CHANGE = (&H00400000)
    USN_REASON_INTEGRITY_CHANGE = (&H00800000)
    USN_REASON_DESIRED_STORAGE_CLASS_CHANGE = (&H01000000)
    USN_REASON_CLOSE = (&H80000000)
End Enum

Public Enum USN_SOURCE_INFO
    USN_SOURCE_DATA_MANAGEMENT = (&H00000001)
    USN_SOURCE_AUXILIARY_DATA = (&H00000002)
    USN_SOURCE_REPLICATION_MANAGEMENT = (&H00000004)
    USN_SOURCE_CLIENT_REPLICATION_MANAGEMENT = (&H00000008)
    USN_SOURCE_VALID_FLAGS = (USN_SOURCE_DATA_MANAGEMENT Or USN_SOURCE_AUXILIARY_DATA Or USN_SOURCE_REPLICATION_MANAGEMENT Or USN_SOURCE_CLIENT_REPLICATION_MANAGEMENT)
End Enum

Public Type USN_JOURNAL_DATA_V0
    UsnJournalID As LongLong
    FirstUsn As LongLong
    NextUsn As LongLong
    LowestValidUsn As LongLong
    MaxUsn As LongLong
    MaximumSize As LongLong
    AllocationDelta As LongLong
End Type
Public Type USN_JOURNAL_DATA_V1
    UsnJournalID As LongLong
    FirstUsn As LongLong
    NextUsn As LongLong
    LowestValidUsn As LongLong
    MaxUsn As LongLong
    MaximumSize As LongLong
    AllocationDelta As LongLong
    MinSupportedMajorVersion As Integer
    MaxSupportedMajorVersion As Integer
End Type
Public Type USN_JOURNAL_DATA_V2
    UsnJournalID As LongLong
    FirstUsn As LongLong
    NextUsn As LongLong
    LowestValidUsn As LongLong
    MaxUsn As LongLong
    MaximumSize As LongLong
    AllocationDelta As LongLong
    MinSupportedMajorVersion As Integer
    MaxSupportedMajorVersion As Integer
    Flags As USN_TRACK_MODIFIED_RANGES_FLAGS
    RangeTrackChunkSize As LongLong
    RangeTrackFileSizeThreshold As LongLong
End Type

Public Enum USN_JRNL_DEL_FLAGS
    USN_DELETE_FLAG_DELETE = (&H00000001)
    USN_DELETE_FLAG_NOTIFY = (&H00000002)
    USN_DELETE_VALID_FLAGS = (&H00000003)
End Enum
Public Type DELETE_USN_JOURNAL_DATA
    UsnJournalID As LongLong
    DeleteFlags As USN_JRNL_DEL_FLAGS
End Type

Public Type CREATE_USN_JOURNAL_DATA
    MaximumSize As LongLong
    AllocationDelta As LongLong
End Type

Public Type READ_FILE_USN_DATA
    MinMajorVersion As Integer
    MaxMajorVersion As Integer
End Type

Public Type READ_USN_JOURNAL_DATA_V0
    StartUsn As LongLong
    ReasonMask As USN_REASON
    ReturnOnlyOnClose As Long
    Timeout As LongLong
    BytesToWaitFor As LongLong
    UsnJournalID As LongLong
End Type
Public Type READ_USN_JOURNAL_DATA_V1
    StartUsn As LongLong
    ReasonMask As USN_REASON
    ReturnOnlyOnClose As Long
    Timeout As LongLong
    BytesToWaitFor As LongLong
    UsnJournalID As LongLong
    MinMajorVersion As Integer
    MaxMajorVersion As Integer
End Type

Public Const DD_TAPE_DEVICE_NAME = "\Device\Tape"

Public Const IOCTL_TAPE_BASE       = FILE_DEVICE_TAPE
Public Const IOCTL_DISK_BASE = FILE_DEVICE_DISK

Public Const IOCTL_TAPE_ERASE                As Long = &H1FC000
Public Const IOCTL_TAPE_PREPARE              As Long = &H1F4004
Public Const IOCTL_TAPE_WRITE_MARKS          As Long = &H1FC008
Public Const IOCTL_TAPE_GET_POSITION         As Long = &H1F400C
Public Const IOCTL_TAPE_SET_POSITION         As Long = &H1F4010
Public Const IOCTL_TAPE_GET_DRIVE_PARAMS     As Long = &H1F4014
Public Const IOCTL_TAPE_SET_DRIVE_PARAMS     As Long = &H1FC018
Public Const IOCTL_TAPE_GET_MEDIA_PARAMS     As Long = &H1F401C
Public Const IOCTL_TAPE_SET_MEDIA_PARAMS     As Long = &H1F4020
Public Const IOCTL_TAPE_GET_STATUS           As Long = &H1F4024
Public Const IOCTL_TAPE_CREATE_PARTITION     As Long = &H1FC028
Public Const IOCTL_TAPE_MEDIA_REMOVAL        As Long = &H1F4804
Public Const IOCTL_TAPE_EJECT_MEDIA          As Long = &H1F4808
Public Const IOCTL_TAPE_LOAD_MEDIA           As Long = &H1F480C
Public Const IOCTL_TAPE_RESERVE              As Long = &H1F4810
Public Const IOCTL_TAPE_RELEASE              As Long = &H1F4814
Public Const IOCTL_TAPE_CHECK_VERIFY         As Long = &H1F4800
Public Const IOCTL_TAPE_FIND_NEW_DEVICES     As Long = &H74818

Public Enum TapeEraseTypes
    TAPE_ERASE_SHORT = 0
    TAPE_ERASE_LONG = 1
End Enum
Public Type TAPE_ERASE
    Type As TapeEraseTypes
    Immediate As Byte
End Type

Public Enum TapePrepareOperations
    TAPE_LOAD = 0
    TAPE_UNLOAD = 1
    TAPE_TENSION = 2
    TAPE_LOCK = 3
    TAPE_UNLOCK = 4
    TAPE_FORMAT = 5
End Enum
Public Type TAPE_PREPARE
    Operation As TapePrepareOperations
    Immediate As Byte
End Type

Public Enum TapeWriteMarks
    TAPE_SETMARKS = 0
    TAPE_FILEMARKS = 1
    TAPE_SHORT_FILEMARKS = 2
    TAPE_LONG_FILEMARKS = 3
End Enum
Public Type TAPE_WRITE_MARKS
    Type As TapeWriteMarks
    Count As Long
    Immediate As Byte
End Type

Public Enum TapeGetPositionTypes
    TAPE_ABSOLUTE_POSITION = 0
    TAPE_LOGICAL_POSITION = 1
    TAPE_PSEUDO_LOGICAL_POSITION = 2
End Enum
Public Type TAPE_GET_POSITION
    Type As TapeGetPositionTypes
    Partition As Long
    Offset As LARGE_INTEGER
End Type

Public Enum TapeSetPositionMethods
    TAPE_REWIND = 0
    TAPE_ABSOLUTE_BLOCK = 1
    TAPE_LOGICAL_BLOCK = 2
    TAPE_PSEUDO_LOGICAL_BLOCK = 3
    TAPE_SPACE_END_OF_DATA = 4
    TAPE_SPACE_RELATIVE_BLOCKS = 5
    TAPE_SPACE_FILEMARKS = 6
    TAPE_SPACE_SEQUENTIAL_FMKS = 7
    TAPE_SPACE_SETMARKS = 8
    TAPE_SPACE_SEQUENTIAL_SMKS = 9
End Enum

Public Type TAPE_SET_POSITION
    Method As TapeSetPositionMethods
    Partition As Long
    Offset As LARGE_INTEGER
    Immediate As Byte
End Type

Public Enum TapeFeaturesFlagsLow
    TAPE_DRIVE_FIXED = &H00000001
    TAPE_DRIVE_SELECT = &H00000002
    TAPE_DRIVE_INITIATOR = &H00000004
    TAPE_DRIVE_ERASE_SHORT = &H00000010
    TAPE_DRIVE_ERASE_LONG = &H00000020
    TAPE_DRIVE_ERASE_BOP_ONLY = &H00000040
    TAPE_DRIVE_ERASE_IMMEDIATE = &H00000080
    TAPE_DRIVE_TAPE_CAPACITY = &H00000100
    TAPE_DRIVE_TAPE_REMAINING = &H00000200
    TAPE_DRIVE_FIXED_BLOCK = &H00000400
    TAPE_DRIVE_VARIABLE_BLOCK = &H00000800
    TAPE_DRIVE_WRITE_PROTECT = &H00001000
    TAPE_DRIVE_EOT_WZ_SIZE = &H00002000
    TAPE_DRIVE_ECC = &H00010000
    TAPE_DRIVE_COMPRESSION = &H00020000
    TAPE_DRIVE_PADDING = &H00040000
    TAPE_DRIVE_REPORT_SMKS = &H00080000
    TAPE_DRIVE_GET_ABSOLUTE_BLK = &H00100000
    TAPE_DRIVE_GET_LOGICAL_BLK = &H00200000
    TAPE_DRIVE_SET_EOT_WZ_SIZE = &H00400000
    TAPE_DRIVE_EJECT_MEDIA = &H01000000
    TAPE_DRIVE_CLEAN_REQUESTS = &H02000000
    TAPE_DRIVE_SET_CMP_BOP_ONLY = &H04000000
    TAPE_DRIVE_RESERVED_BIT = &H80000000  'don't use this bit!
End Enum
Public Enum TapeFeaturesFlagsHigh
    TAPE_DRIVE_LOAD_UNLOAD = &H80000001
    TAPE_DRIVE_TENSION = &H80000002
    TAPE_DRIVE_LOCK_UNLOCK = &H80000004
    TAPE_DRIVE_REWIND_IMMEDIATE = &H80000008
    TAPE_DRIVE_SET_BLOCK_SIZE = &H80000010
    TAPE_DRIVE_LOAD_UNLD_IMMED = &H80000020
    TAPE_DRIVE_TENSION_IMMED = &H80000040
    TAPE_DRIVE_LOCK_UNLK_IMMED = &H80000080
    TAPE_DRIVE_SET_ECC = &H80000100
    TAPE_DRIVE_SET_COMPRESSION = &H80000200
    TAPE_DRIVE_SET_PADDING = &H80000400
    TAPE_DRIVE_SET_REPORT_SMKS = &H80000800
    TAPE_DRIVE_ABSOLUTE_BLK = &H80001000
    TAPE_DRIVE_ABS_BLK_IMMED = &H80002000
    TAPE_DRIVE_LOGICAL_BLK = &H80004000
    TAPE_DRIVE_LOG_BLK_IMMED = &H80008000
    TAPE_DRIVE_END_OF_DATA = &H80010000
    TAPE_DRIVE_RELATIVE_BLKS = &H80020000
    TAPE_DRIVE_FILEMARKS = &H80040000
    TAPE_DRIVE_SEQUENTIAL_FMKS = &H80080000
    TAPE_DRIVE_SETMARKS = &H80100000
    TAPE_DRIVE_SEQUENTIAL_SMKS = &H80200000
    TAPE_DRIVE_REVERSE_POSITION = &H80400000
    TAPE_DRIVE_SPACE_IMMEDIATE = &H80800000
    TAPE_DRIVE_WRITE_SETMARKS = &H81000000
    TAPE_DRIVE_WRITE_FILEMARKS = &H82000000
    TAPE_DRIVE_WRITE_SHORT_FMKS = &H84000000
    TAPE_DRIVE_WRITE_LONG_FMKS = &H88000000
    TAPE_DRIVE_WRITE_MARK_IMMED = &H90000000
    TAPE_DRIVE_FORMAT = &HA0000000
    TAPE_DRIVE_FORMAT_IMMEDIATE = &HC0000000
    TAPE_DRIVE_HIGH_FEATURES = &H80000000  'mask for high features flag
End Enum
Public Type TAPE_GET_DRIVE_PARAMETERS
    ECC As Byte
    Compression As Byte
    DataPadding As Byte
    ReportSetmarks As Byte
    DefaultBlockSize As Long
    MaximumBlockSize As Long
    MinimumBlockSize As Long
    MaximumPartitionCount As Long
    FeaturesLow As TapeFeaturesFlagsLow
    FeaturesHigh As TapeFeaturesFlagsHigh
    EOTWarningZoneSize As Long
End Type
Public Type TAPE_SET_DRIVE_PARAMETERS
    ECC As Byte
    Compression As Byte
    DataPadding As Byte
    ReportSetmarks As Byte
    EOTWarningZoneSize As Long
End Type
Public Type TAPE_GET_MEDIA_PARAMETERS
    Capacity As LARGE_INTEGER
    Remaining As LARGE_INTEGER
    BlockSize As Long
    PartitionCount As Long
    WriteProtected As Byte
End Type
Public Type TAPE_SET_MEDIA_PARAMETERS
    BlockSize As Long
End Type

Public Enum TapeCreatePartitionMethod
    TAPE_FIXED_PARTITIONS = 0
    TAPE_SELECT_PARTITIONS = 1
    TAPE_INITIATOR_PARTITIONS = 2
End Enum
Public Type TAPE_CREATE_PARTITION
    Method As TapeCreatePartitionMethod
    Count As Long
    Size As Long
End Type

Public Enum TapeWmiMethods
    TAPE_QUERY_DRIVE_PARAMETERS = 0
    TAPE_QUERY_MEDIA_CAPACITY = 1
    TAPE_CHECK_FOR_DRIVE_PROBLEM = 2
    TAPE_QUERY_IO_ERROR_DATA = 3
    TAPE_QUERY_DEVICE_ERROR_DATA = 4
End Enum
Public Type TAPE_WMI_OPERATIONS
    Method As TapeWmiMethods
    DataBufferSize As Long
    DataBuffer As LongPtr
End Type

Public Enum TAPE_DRIVE_PROBLEM_TYPE
    TapeDriveProblemNone
    TapeDriveReadWriteWarning
    TapeDriveReadWriteError
    TapeDriveReadWarning
    TapeDriveWriteWarning
    TapeDriveReadError
    TapeDriveWriteError
    TapeDriveHardwareError
    TapeDriveUnsupportedMedia
    TapeDriveScsiConnectionError
    TapeDriveTimetoClean
    TapeDriveCleanDriveNow
    TapeDriveMediaLifeExpired
    TapeDriveSnappedTape
End Enum

'mountmgr.h
Public Const MOUNTMGR_DEVICE_NAME  = "\Device\MountPointManager"
Public Const MOUNTMGR_DOS_DEVICE_NAME  = "\\.\MountPointManager"
Public Const MOUNTMGRCONTROLTYPE  = &H0000006D  ' 'm'
Public Const MOUNTDEVCONTROLTYPE  = &H0000004D  ' 'M'

Public Const IOCTL_MOUNTMGR_CREATE_POINT                 = &H6DC000
Public Const IOCTL_MOUNTMGR_DELETE_POINTS                = &H6DC004
Public Const IOCTL_MOUNTMGR_QUERY_POINTS                 = &H6D0008
Public Const IOCTL_MOUNTMGR_DELETE_POINTS_DBONLY         = &H6DC00C
Public Const IOCTL_MOUNTMGR_NEXT_DRIVE_LETTER            = &H6DC010
Public Const IOCTL_MOUNTMGR_AUTO_DL_ASSIGNMENTS          = &H6DC014
Public Const IOCTL_MOUNTMGR_VOLUME_MOUNT_POINT_CREATED   = &H6DC018
Public Const IOCTL_MOUNTMGR_VOLUME_MOUNT_POINT_DELETED   = &H6DC01C
Public Const IOCTL_MOUNTMGR_CHANGE_NOTIFY                = &H6D4020
Public Const IOCTL_MOUNTMGR_KEEP_LINKS_WHEN_OFFLINE      = &H6DC024
Public Const IOCTL_MOUNTMGR_CHECK_UNPROCESSED_VOLUMES    = &H6D4028
Public Const IOCTL_MOUNTMGR_VOLUME_ARRIVAL_NOTIFICATION  = &H6D402C
Public Const IOCTL_MOUNTDEV_QUERY_DEVICE_NAME    = &H4D0008
Public Const IOCTL_MOUNTMGR_QUERY_DOS_VOLUME_PATH        = &H6D0030
Public Const IOCTL_MOUNTMGR_QUERY_DOS_VOLUME_PATHS       = &H6D0034
Public Const IOCTL_MOUNTMGR_SCRUB_REGISTRY               = &H6DC038
Public Const IOCTL_MOUNTMGR_QUERY_AUTO_MOUNT             = &H6D003C
Public Const IOCTL_MOUNTMGR_SET_AUTO_MOUNT               = &H6DC040
Public Const IOCTL_MOUNTMGR_BOOT_DL_ASSIGNMENT               = &H6DC044
Public Const IOCTL_MOUNTMGR_TRACELOG_CACHE                   = &H6D4048
Public Const IOCTL_MOUNTMGR_PREPARE_VOLUME_DELETE            = &H6DC04C
Public Const IOCTL_MOUNTMGR_CANCEL_VOLUME_DELETE             = &H6DC050
Public Const IOCTL_MOUNTMGR_SILO_ARRIVAL                    = &H6DC054
Public Const IOCTL_MOUNTMGR_VOLUME_REMOVAL_NOTIFICATION     = &H6D4058

Public Type MOUNTMGR_CREATE_POINT_INPUT
    SymbolicLinkNameOffset As Integer
    SymbolicLinkNameLength As Integer
    DeviceNameOffset As Integer
    DeviceNameLength As Integer
End Type

Public Type MOUNTMGR_MOUNT_POINT
    SymbolicLinkNameOffset As Long
    SymbolicLinkNameLength As Integer
    Reserved1 As Integer
    UniqueIdOffset As Long
    UniqueIdLength As Integer
    Reserved2 As Integer
    DeviceNameOffset As Long
    DeviceNameLength As Integer
    Reserved3 As Integer
End Type

[Description("⚠️ **WARNING:** Buffered C-style array. LenB is invalid. For more than 1023 possible mount points, use MOUNTMGR_MOUNT_POINTS_Hdr or MOUNTMGR_MOUNT_POINTS_sa")]
Public Type MOUNTMGR_MOUNT_POINTS
    Size As Long
    NumberOfMountPoints As Long
    MountPoints(0 To 1023) As MOUNTMGR_MOUNT_POINT
End Type
[Description("⚠️ **WARNING:** Header only. Followed in memory by NumberOfMountPoints of MOUNTMGR_MOUNT_POINT")]
Public Type MOUNTMGR_MOUNT_POINTS_Hdr
    Size As Long
    NumberOfMountPoints As Long 
End Type
[Description("⚠️ **WARNING:** SAFEARRAY substituted for variable C-style array. Cannot be used as-is. Copy first two members then redim and fill third.")]
Public Type MOUNTMGR_MOUNT_POINTS_Sa
    Size As Long
    NumberOfMountPoints As Long 
    MountPoints() As MOUNTMGR_MOUNT_POINT
End Type

[Description("⚠️ **WARNING:** Buffered C-style array. LenB is invalid. Do not use if DeviceNameLength > 1024.")]
Public Type MOUNTMGR_DRIVE_LETTER_TARGET
    DeviceNameLength As Integer
    DeviceName(0 To 1023) As Integer
End Type

Public Type MOUNTMGR_DRIVE_LETTER_INFORMATION
    DriveLetterWasAssigned As Byte
    CurrentDriveLetter As Byte
End Type

Public Type MOUNTMGR_VOLUME_MOUNT_POINT
    SourceVolumeNameOffset As Integer
    SourceVolumeNameLength As Integer
    TargetVolumeNameOffset As Integer
    TargetVolumeNameLength As Integer
End Type

Public Type MOUNTMGR_CHANGE_NOTIFY_INFO
    EpicNumber As Long
End Type

[Description("⚠️ **WARNING:** Buffered C-style array. LenB is invalid. Do not use if DeviceNameLength > 1024.")]
Public Type MOUNTMGR_TARGET_NAME
    DeviceNameLength As Integer
    DeviceName(0 To 1023) As Integer
End Type

[Description("⚠️ **WARNING:** Buffered C-style array. LenB is invalid. Do not use if NameLength > 1024.")]
Public Type MOUNTDEV_NAME
    NameLength As Integer
    Name(0 To 1023) As Integer
End Type

Public Function MOUNTDEV_MOUNTED_DEVICE_GUID() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H53f5630d, &Hb6bf, &H11d0, &H94, &Hf2, &H00, &Ha0, &Hc9, &H1e, &Hfb, &H8b)
MOUNTDEV_MOUNTED_DEVICE_GUID = iid
End Function

[Description("⚠️ **WARNING:** Buffered C-style array. LenB is invalid. Do not use if MultiSzLength > 4096.")]
Public Type MOUNTMGR_VOLUME_PATHS
    MultiSzLength As Long
    MultiSz(0 To 4095) As Integer
End Type

Public Enum MOUNTMGR_AUTO_MOUNT_STATE
    MOUNTMGR_AUTO_MOUNT_Disabled=0
    MOUNTMGR_AUTO_MOUNT_Enabled = 1
End Enum

Public Type MOUNTMGR_QUERY_AUTO_MOUNT
    CurrentState As MOUNTMGR_AUTO_MOUNT_STATE
End Type

Public Type MOUNTMGR_SET_AUTO_MOUNT
    NewState As MOUNTMGR_AUTO_MOUNT_STATE
End Type

Public Type MOUNTMGR_SILO_ARRIVAL_INPUT
    JobHandle As LongPtr
End Type



#End Region


#Region "Errors"
'For performance reasons, this list isn't exhaustive, just the most common errors:
Public Const NO_ERROR = 0
[Description("The operation completed successfully.")] Public Const ERROR_SUCCESS As Long = 0
[Description("Incorrect function.")] Public Const ERROR_INVALID_FUNCTION As Long = 1
[Description("The system cannot find the file specified.")] Public Const ERROR_FILE_NOT_FOUND As Long = 2
[Description("The system cannot find the path specified.")] Public Const ERROR_PATH_NOT_FOUND As Long = 3
[Description("The system cannot open the file.")] Public Const ERROR_TOO_MANY_OPEN_FILES As Long = 4
[Description("Access is denied.")] Public Const ERROR_ACCESS_DENIED As Long = 5
[Description("The handle is invalid.")] Public Const ERROR_INVALID_HANDLE As Long = 6
[Description("The storage control blocks were destroyed.")] Public Const ERROR_ARENA_TRASHED As Long = 7
[Description("Not enough storage is available to process this command.")] Public Const ERROR_NOT_ENOUGH_MEMORY As Long = 8
[Description("The storage control block address is invalid.")] Public Const ERROR_INVALID_BLOCK As Long = 9
[Description("The environment is incorrect.")] Public Const ERROR_BAD_ENVIRONMENT As Long = 10
[Description("An attempt was made to load a program with an incorrect format.")] Public Const ERROR_BAD_FORMAT As Long = 11
[Description("The access code is invalid.")] Public Const ERROR_INVALID_ACCESS As Long = 12
[Description("The data is invalid.")] Public Const ERROR_INVALID_DATA As Long = 13
[Description("Not enough storage is available to complete this operation.")] Public Const ERROR_OUTOFMEMORY As Long = 14
[Description("The system cannot find the drive specified.")] Public Const ERROR_INVALID_DRIVE As Long = 15
[Description("The directory cannot be removed.")] Public Const ERROR_CURRENT_DIRECTORY As Long = 16
[Description("The system cannot move the file to a different disk drive.")] Public Const ERROR_NOT_SAME_DEVICE As Long = 17
[Description("There are no more files.")] Public Const ERROR_NO_MORE_FILES As Long = 18
[Description("The media is write protected.")] Public Const ERROR_WRITE_PROTECT As Long = 19
[Description("The system cannot find the device specified.")] Public Const ERROR_BAD_UNIT As Long = 20
[Description("The device is not ready.")] Public Const ERROR_NOT_READY As Long = 21
[Description("The device does not recognize the command.")] Public Const ERROR_BAD_COMMAND As Long = 22
[Description("Data error (cyclic redundancy check).")] Public Const ERROR_CRC As Long = 23
[Description("The program issued a command but the command length is incorrect.")] Public Const ERROR_BAD_LENGTH As Long = 24
[Description("The drive cannot locate a specific area or track on the disk.")] Public Const ERROR_SEEK As Long = 25
[Description("The specified disk or diskette cannot be accessed.")] Public Const ERROR_NOT_DOS_DISK As Long = 26
[Description("The drive cannot find the sector requested.")] Public Const ERROR_SECTOR_NOT_FOUND As Long = 27
[Description("The printer is out of paper.")] Public Const ERROR_OUT_OF_PAPER As Long = 28
[Description("The system cannot write to the specified device.")] Public Const ERROR_WRITE_FAULT As Long = 29
[Description("The system cannot read from the specified device.")] Public Const ERROR_READ_FAULT As Long = 30
[Description("A device attached to the system is not functioning.")] Public Const ERROR_GEN_FAILURE As Long = 31
[Description("The process cannot access the file because it is being used by another process.")] Public Const ERROR_SHARING_VIOLATION As Long = 32
[Description("The process cannot access the file because another process has locked a portion of the file.")] Public Const ERROR_LOCK_VIOLATION As Long = 33
[Description("The wrong diskette is in the drive. Insert %2 (Volume Serial Number: %3) into drive %1.")] Public Const ERROR_WRONG_DISK As Long = 34
[Description("Too many files opened for sharing.")] Public Const ERROR_SHARING_BUFFER_EXCEEDED As Long = 36
[Description("Reached the end of the file.")] Public Const ERROR_HANDLE_EOF As Long = 38
[Description("The disk is full.")] Public Const ERROR_HANDLE_DISK_FULL As Long = 39
[Description("The request is not supported.")] Public Const ERROR_NOT_SUPPORTED As Long = 50
[Description("Windows cannot find the network path. Verify that the network path Is correct And the destination computer Is Not busy Or turned off. If Windows still cannot find the network path, contact your network administrator.")] Public Const ERROR_REM_NOT_LIST As Long = 51
[Description("You were not connected because a duplicate name exists on the network. If joining a domain, go to System in Control Panel to change the computer name and try again. If joining a workgroup, choose another workgroup name.")] Public Const ERROR_DUP_NAME As Long = 52
[Description("The network path was not found.")] Public Const ERROR_BAD_NETPATH As Long = 53
[Description("The network is busy.")] Public Const ERROR_NETWORK_BUSY As Long = 54
[Description("The specified network resource or device is no longer available.")] Public Const ERROR_DEV_NOT_EXIST As Long = 55
[Description("The network BIOS command limit has been reached.")] Public Const ERROR_TOO_MANY_CMDS As Long = 56
[Description("A network adapter hardware error occurred.")] Public Const ERROR_ADAP_HDW_ERR As Long = 57
[Description("The specified server cannot perform the requested operation.")] Public Const ERROR_BAD_NET_RESP As Long = 58
[Description("An unexpected network error occurred.")] Public Const ERROR_UNEXP_NET_ERR As Long = 59
[Description("The remote adapter is not compatible.")] Public Const ERROR_BAD_REM_ADAP As Long = 60
[Description("The printer queue is full.")] Public Const ERROR_PRINTQ_FULL As Long = 61
[Description("Space to store the file waiting to be printed is not available on the server.")] Public Const ERROR_NO_SPOOL_SPACE As Long = 62
[Description("Your file waiting to be printed was deleted.")] Public Const ERROR_PRINT_CANCELLED As Long = 63
[Description("The specified network name is no longer available.")] Public Const ERROR_NETNAME_DELETED As Long = 64
[Description("Network access is denied.")] Public Const ERROR_NETWORK_ACCESS_DENIED As Long = 65
[Description("The network resource type is not correct.")] Public Const ERROR_BAD_DEV_TYPE As Long = 66
[Description("The network name cannot be found.")] Public Const ERROR_BAD_NET_NAME As Long = 67
[Description("The name limit for the local computer network adapter card was exceeded.")] Public Const ERROR_TOO_MANY_NAMES As Long = 68
[Description("The network BIOS session limit was exceeded.")] Public Const ERROR_TOO_MANY_SESS As Long = 69
[Description("The remote server has been paused or is in the process of being started.")] Public Const ERROR_SHARING_PAUSED As Long = 70
[Description("No more connections can be made to this remote computer at this time because there are already as many connections as the computer can accept.")] Public Const ERROR_REQ_NOT_ACCEP As Long = 71
[Description("The specified printer or disk device has been paused.")] Public Const ERROR_REDIR_PAUSED As Long = 72
[Description("The file exists.")] Public Const ERROR_FILE_EXISTS As Long = 80
[Description("The directory or file cannot be created.")] Public Const ERROR_CANNOT_MAKE As Long = 82
[Description("Fail on INT 24.")] Public Const ERROR_FAIL_I24 As Long = 83
[Description("Storage to process this request is not available.")] Public Const ERROR_OUT_OF_STRUCTURES As Long = 84
[Description("The local device name is already in use.")] Public Const ERROR_ALREADY_ASSIGNED As Long = 85
[Description("The specified network password is not correct.")] Public Const ERROR_INVALID_PASSWORD As Long = 86
[Description("The parameter is incorrect.")] Public Const ERROR_INVALID_PARAMETER As Long = 87
[Description("A write fault occurred on the network.")] Public Const ERROR_NET_WRITE_FAULT As Long = 88
[Description("The system cannot start another process at this time.")] Public Const ERROR_NO_PROC_SLOTS As Long = 89
[Description("Cannot create another system semaphore.")] Public Const ERROR_TOO_MANY_SEMAPHORES As Long = 100
[Description("The exclusive semaphore is owned by another process.")] Public Const ERROR_EXCL_SEM_ALREADY_OWNED As Long = 101
[Description("The semaphore is set and cannot be closed.")] Public Const ERROR_SEM_IS_SET As Long = 102
[Description("The semaphore cannot be set again.")] Public Const ERROR_TOO_MANY_SEM_REQUESTS As Long = 103
[Description("Cannot request exclusive semaphores at interrupt time.")] Public Const ERROR_INVALID_AT_INTERRUPT_TIME As Long = 104
[Description("The previous ownership of this semaphore has ended.")] Public Const ERROR_SEM_OWNER_DIED As Long = 105
[Description("Insert the diskette for drive %1.")] Public Const ERROR_SEM_USER_LIMIT As Long = 106
[Description("The program stopped because an alternate diskette was not inserted.")] Public Const ERROR_DISK_CHANGE As Long = 107
[Description("The disk is in use or locked by another process.")] Public Const ERROR_DRIVE_LOCKED As Long = 108
[Description("The pipe has been ended.")] Public Const ERROR_BROKEN_PIPE As Long = 109
[Description("The system cannot open the device or file specified.")] Public Const ERROR_OPEN_FAILED As Long = 110
[Description("The file name is too long.")] Public Const ERROR_BUFFER_OVERFLOW As Long = 111
[Description("There is not enough space on the disk.")] Public Const ERROR_DISK_FULL As Long = 112
[Description("No more internal file identifiers available.")] Public Const ERROR_NO_MORE_SEARCH_HANDLES As Long = 113
[Description("The target internal file identifier is incorrect.")] Public Const ERROR_INVALID_TARGET_HANDLE As Long = 114
[Description("The IOCTL call made by the application program is not correct.")] Public Const ERROR_INVALID_CATEGORY As Long = 117
[Description("The verify-on-write switch parameter value is not correct.")] Public Const ERROR_INVALID_VERIFY_SWITCH As Long = 118
[Description("The system does not support the command requested.")] Public Const ERROR_BAD_DRIVER_LEVEL As Long = 119
[Description("This function is not supported on this system.")] Public Const ERROR_CALL_NOT_IMPLEMENTED As Long = 120
[Description("The semaphore timeout period has expired.")] Public Const ERROR_SEM_TIMEOUT As Long = 121
[Description("The data area passed to a system call is too small.")] Public Const ERROR_INSUFFICIENT_BUFFER As Long = 122
[Description("The filename, directory name, or volume label syntax is incorrect.")] Public Const ERROR_INVALID_NAME As Long = 123
[Description("The system call level is not correct.")] Public Const ERROR_INVALID_LEVEL As Long = 124
[Description("The disk has no volume label.")] Public Const ERROR_NO_VOLUME_LABEL As Long = 125
[Description("The specified module could not be found.")] Public Const ERROR_MOD_NOT_FOUND As Long = 126
[Description("The specified procedure could not be found.")] Public Const ERROR_PROC_NOT_FOUND As Long = 127
[Description("There are no child processes to wait for.")] Public Const ERROR_WAIT_NO_CHILDREN As Long = 128
[Description("The %1 application cannot be run in Win32 mode.")] Public Const ERROR_CHILD_NOT_COMPLETE As Long = 129
[Description("Attempt to use a file handle to an open disk partition for an operation other than raw disk I/O.")] Public Const ERROR_DIRECT_ACCESS_HANDLE As Long = 130
[Description("An attempt was made to move the file pointer before the beginning of the file.")] Public Const ERROR_NEGATIVE_SEEK As Long = 131
[Description("The file pointer cannot be set on the specified device or file.")] Public Const ERROR_SEEK_ON_DEVICE As Long = 132
[Description("A JOIN or SUBST command cannot be used for a drive that contains previously joined drives.")] Public Const ERROR_IS_JOIN_TARGET As Long = 133
[Description("An attempt was made to use a JOIN or SUBST command on a drive that has already been joined.")] Public Const ERROR_IS_JOINED As Long = 134
[Description("An attempt was made to use a JOIN or SUBST command on a drive that has already been substituted.")] Public Const ERROR_IS_SUBSTED As Long = 135
[Description("The system tried to delete the JOIN of a drive that is not joined.")] Public Const ERROR_NOT_JOINED As Long = 136
[Description("The system tried to delete the substitution of a drive that is not substituted.")] Public Const ERROR_NOT_SUBSTED As Long = 137
[Description("The system tried to join a drive to a directory on a joined drive.")] Public Const ERROR_JOIN_TO_JOIN As Long = 138
[Description("The system tried to substitute a drive to a directory on a substituted drive.")] Public Const ERROR_SUBST_TO_SUBST As Long = 139
[Description("The system tried to join a drive to a directory on a substituted drive.")] Public Const ERROR_JOIN_TO_SUBST As Long = 140
[Description("The system tried to SUBST a drive to a directory on a joined drive.")] Public Const ERROR_SUBST_TO_JOIN As Long = 141
[Description("The system cannot perform a JOIN or SUBST at this time.")] Public Const ERROR_BUSY_DRIVE As Long = 142
[Description("The system cannot join or substitute a drive to or for a directory on the same drive.")] Public Const ERROR_SAME_DRIVE As Long = 143
[Description("The directory is not a subdirectory of the root directory.")] Public Const ERROR_DIR_NOT_ROOT As Long = 144
[Description("The directory is not empty.")] Public Const ERROR_DIR_NOT_EMPTY As Long = 145
[Description("The path specified is being used in a substitute.")] Public Const ERROR_IS_SUBST_PATH As Long = 146
[Description("Not enough resources are available to process this command.")] Public Const ERROR_IS_JOIN_PATH As Long = 147
[Description("The path specified cannot be used at this time.")] Public Const ERROR_PATH_BUSY As Long = 148
[Description("An attempt was made to join or substitute a drive for which a directory on the drive is the target of a previous substitute.")] Public Const ERROR_IS_SUBST_TARGET As Long = 149
[Description("System trace information was not specified in your CONFIG.SYS file, or tracing is disallowed.")] Public Const ERROR_SYSTEM_TRACE As Long = 150
[Description("The number of specified semaphore events for DosMuxSemWait is not correct.")] Public Const ERROR_INVALID_EVENT_COUNT As Long = 151
[Description("DosMuxSemWait did not execute; too many semaphores are already set.")] Public Const ERROR_TOO_MANY_MUXWAITERS As Long = 152
[Description("The DosMuxSemWait list is not correct.")] Public Const ERROR_INVALID_LIST_FORMAT As Long = 153
[Description("The volume label you entered exceeds the label character limit of the target file system.")] Public Const ERROR_LABEL_TOO_LONG As Long = 154
[Description("Cannot create another thread.")] Public Const ERROR_TOO_MANY_TCBS As Long = 155
[Description("The recipient process has refused the signal.")] Public Const ERROR_SIGNAL_REFUSED As Long = 156
[Description("The segment is already discarded and cannot be locked.")] Public Const ERROR_DISCARDED As Long = 157
[Description("The segment is already unlocked.")] Public Const ERROR_NOT_LOCKED As Long = 158
[Description("The address for the thread ID is not correct.")] Public Const ERROR_BAD_THREADID_ADDR As Long = 159
[Description("One or more arguments are not correct.")] Public Const ERROR_BAD_ARGUMENTS As Long = 160
[Description("The specified path is invalid.")] Public Const ERROR_BAD_PATHNAME As Long = 161
[Description("A signal is already pending.")] Public Const ERROR_SIGNAL_PENDING As Long = 162
[Description("No more threads can be created in the system.")] Public Const ERROR_MAX_THRDS_REACHED As Long = 164
[Description("Unable to lock a region of a file.")] Public Const ERROR_LOCK_FAILED As Long = 167
[Description("The requested resource is in use.")] Public Const ERROR_BUSY As Long = 170
[Description("Device's command support detection is in progress.")] Public Const ERROR_DEVICE_SUPPORT_IN_PROGRESS As Long = 171
[Description("A lock request was not outstanding for the supplied cancel region.")] Public Const ERROR_CANCEL_VIOLATION As Long = 173
[Description("The file system does not support atomic changes to the lock type.")] Public Const ERROR_ATOMIC_LOCKS_NOT_SUPPORTED As Long = 174
[Description("The system detected a segment number that was not correct.")] Public Const ERROR_INVALID_SEGMENT_NUMBER As Long = 180
[Description("The operating system cannot run %1.")] Public Const ERROR_INVALID_ORDINAL As Long = 182
[Description("Cannot create a file when that file already exists.")] Public Const ERROR_ALREADY_EXISTS As Long = 183
[Description("The flag passed is not correct.")] Public Const ERROR_INVALID_FLAG_NUMBER As Long = 186
[Description("The specified system semaphore name was not found.")] Public Const ERROR_SEM_NOT_FOUND As Long = 187
[Description("The operating system cannot run %1.")] Public Const ERROR_INVALID_STARTING_CODESEG As Long = 188
[Description("The operating system cannot run %1.")] Public Const ERROR_INVALID_STACKSEG As Long = 189
[Description("The operating system cannot run %1.")] Public Const ERROR_INVALID_MODULETYPE As Long = 190
[Description("Cannot run %1 in Win32 mode.")] Public Const ERROR_INVALID_EXE_SIGNATURE As Long = 191
[Description("The operating system cannot run %1.")] Public Const ERROR_EXE_MARKED_INVALID As Long = 192
[Description("%1 is not a valid Win32 application.")] Public Const ERROR_BAD_EXE_FORMAT As Long = 193
[Description("The operating system cannot run %1.")] Public Const ERROR_ITERATED_DATA_EXCEEDS_64K As Long = 194
[Description("The operating system cannot run %1.")] Public Const ERROR_INVALID_MINALLOCSIZE As Long = 195
[Description("The operating system cannot run this application program.")] Public Const ERROR_DYNLINK_FROM_INVALID_RING As Long = 196
[Description("The operating system is not presently configured to run this application.")] Public Const ERROR_IOPL_NOT_ENABLED As Long = 197
[Description("The operating system cannot run %1.")] Public Const ERROR_INVALID_SEGDPL As Long = 198
[Description("The operating system cannot run this application program.")] Public Const ERROR_AUTODATASEG_EXCEEDS_64K As Long = 199
[Description("The code segment cannot be greater than or equal to 64K.")] Public Const ERROR_RING2SEG_MUST_BE_MOVABLE As Long = 200
[Description("The operating system cannot run %1.")] Public Const ERROR_RELOC_CHAIN_XEEDS_SEGLIM As Long = 201
[Description("The operating system cannot run %1.")] Public Const ERROR_INFLOOP_IN_RELOC_CHAIN As Long = 202
[Description("The system could not find the environment option that was entered.")] Public Const ERROR_ENVVAR_NOT_FOUND As Long = 203
[Description("No process in the command subtree has a signal handler.")] Public Const ERROR_NO_SIGNAL_SENT As Long = 205
[Description("The filename or extension is too long.")] Public Const ERROR_FILENAME_EXCED_RANGE As Long = 206
[Description("The ring 2 stack is in use.")] Public Const ERROR_RING2_STACK_IN_USE As Long = 207
[Description("The global filename characters, * or ?, are entered incorrectly or too many global filename characters are specified.")] Public Const ERROR_META_EXPANSION_TOO_LONG As Long = 208
[Description("The signal being posted is not correct.")] Public Const ERROR_INVALID_SIGNAL_NUMBER As Long = 209
[Description("The signal handler cannot be set.")] Public Const ERROR_THREAD_1_INACTIVE As Long = 210
[Description("The segment is locked and cannot be reallocated.")] Public Const ERROR_LOCKED As Long = 212
[Description("Too many dynamic-link modules are attached to this program or dynamic-link module.")] Public Const ERROR_TOO_MANY_MODULES As Long = 214
[Description("Cannot nest calls to LoadModule.")] Public Const ERROR_NESTING_NOT_ALLOWED As Long = 215
[Description("This version of %1 is not compatible with the version of Windows you're running. Check your computer's system information and then contact the software publisher.")] Public Const ERROR_EXE_MACHINE_TYPE_MISMATCH As Long = 216
[Description("The image file %1 is signed, unable to modify.")] Public Const ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY As Long = 217
[Description("The image file %1 is strong signed, unable to modify.")] Public Const ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY As Long = 218
[Description("This file is checked out or locked for editing by another user.")] Public Const ERROR_FILE_CHECKED_OUT As Long = 220
[Description("The file must be checked out before saving changes.")] Public Const ERROR_CHECKOUT_REQUIRED As Long = 221
[Description("The file type being saved or retrieved has been blocked.")] Public Const ERROR_BAD_FILE_TYPE As Long = 222
[Description("The file size exceeds the limit allowed and cannot be saved.")] Public Const ERROR_FILE_TOO_LARGE As Long = 223
[Description("Access Denied. Before opening files in this location, you must first add the web site to your trusted sites list, browse to the web site, and select the option to login automatically.")] Public Const ERROR_FORMS_AUTH_REQUIRED As Long = 224
[Description("Operation did not complete successfully because the file contains a virus or potentially unwanted software.")] Public Const ERROR_VIRUS_INFECTED As Long = 225
[Description("This file contains a virus or potentially unwanted software and cannot be opened. Due to the nature of this virus Or potentially unwanted software, the file has been removed from this location.")] Public Const ERROR_VIRUS_DELETED As Long = 226
[Description("The pipe is local.")] Public Const ERROR_PIPE_LOCAL As Long = 229
[Description("The pipe state is invalid.")] Public Const ERROR_BAD_PIPE As Long = 230
[Description("All pipe instances are busy.")] Public Const ERROR_PIPE_BUSY As Long = 231
[Description("The pipe is being closed.")] Public Const ERROR_NO_DATA As Long = 232
[Description("No process is on the other end of the pipe.")] Public Const ERROR_PIPE_NOT_CONNECTED As Long = 233
[Description("More data is available.")] Public Const ERROR_MORE_DATA As Long = 234
[Description("The session was canceled.")] Public Const ERROR_VC_DISCONNECTED As Long = 240
[Description("The specified extended attribute name was invalid.")] Public Const ERROR_INVALID_EA_NAME As Long = 254
[Description("The extended attributes are inconsistent.")] Public Const ERROR_EA_LIST_INCONSISTENT As Long = 255
[Description("The wait operation timed out.")] Public Const WAIT_TIMEOUT As Long = 258
[Description("No more data is available.")] Public Const ERROR_NO_MORE_ITEMS As Long = 259
[Description("The Copy API cannot be used")] Public Const ERROR_CANNOT_COPY As Long = 266
[Description("The directory name is invalid")] Public Const ERROR_DIRECTORY As Long = 267
[Description("The extended attributes did not fit in the buffer.")] Public Const ERROR_EAS_DIDNT_FIT = 275
[Description("The extended attribute file on the mounted file system is corrupt.")] Public Const ERROR_EA_FILE_CORRUPT = 276
[Description("The extended attribute table file is full.")] Public Const ERROR_EA_TABLE_FULL = 277
[Description("The specified extended attribute handle is invalid.")] Public Const ERROR_INVALID_EA_HANDLE = 278
[Description("The mounted file system does not support extended attributes.")] Public Const ERROR_EAS_NOT_SUPPORTED = 282
[Description("Attempt to release mutex not owned by caller")] Public Const ERROR_NOT_OWNER As Long = 288
[Description("Too many posts were made to a semaphore")] Public Const ERROR_TOO_MANY_POSTS As Long = 298
[Description("Only part of a Read/WriteProcessMemory request was completed")] Public Const ERROR_PARTIAL_COPY As Long = 299
[Description("The oplock request is denied")] Public Const ERROR_OPLOCK_NOT_GRANTED As Long = 300
[Description("An invalid oplock acknowledgment was received by the system")] Public Const ERROR_INVALID_OPLOCK_PROTOCOL As Long = 301
[Description("The volume is too fragmented to complete this operation.")] Public Const ERROR_DISK_TOO_FRAGMENTED = 302
[Description("The file cannot be opened because it is in the process of being deleted.")] Public Const ERROR_DELETE_PENDING = 303
[Description("Short name settings may not be changed on this volume due to the global registry setting.")] Public Const ERROR_INCOMPATIBLE_WITH_GLOBAL_SHORT_NAME_REGISTRY_SETTING = 304
[Description("Short names are not enabled on this volume.")] Public Const ERROR_SHORT_NAMES_NOT_ENABLED_ON_VOLUME = 305
[Description("Please run CHKDSK on the volume.")] Public Const ERROR_SECURITY_STREAM_IS_INCONSISTENT = 306
[Description("A requested file lock operation cannot be processed due to an invalid byte range.")] Public Const ERROR_INVALID_LOCK_RANGE = 307
[Description("The subsystem needed to support the image type is not present.")] Public Const ERROR_IMAGE_SUBSYSTEM_NOT_PRESENT = 308
[Description("The specified file already has a notification GUID associated with it.")] Public Const ERROR_NOTIFICATION_GUID_ALREADY_DEFINED = 309
[Description("An invalid exception handler routine has been detected.")] Public Const ERROR_INVALID_EXCEPTION_HANDLER = 310
[Description("Duplicate privileges were specified for the token.")] Public Const ERROR_DUPLICATE_PRIVILEGES = 311
[Description("No ranges for the specified operation were able to be processed.")] Public Const ERROR_NO_RANGES_PROCESSED = 312
[Description("Operation is not allowed on a file system internal file.")] Public Const ERROR_NOT_ALLOWED_ON_SYSTEM_FILE = 313
[Description("The physical resources of this disk have been exhausted.")] Public Const ERROR_DISK_RESOURCES_EXHAUSTED = 314
[Description("The token representing the data is invalid.")] Public Const ERROR_INVALID_TOKEN = 315
[Description("The device does not support the command feature.")] Public Const ERROR_DEVICE_FEATURE_NOT_SUPPORTED = 316
[Description("The system cannot find message for message number in message file")] Public Const ERROR_MR_MID_NOT_FOUND As Long = 317
[Description("The scope specified was not found.")] Public Const ERROR_SCOPE_NOT_FOUND = 318
[Description("The Central Access Policy specified is not defined on the target machine.")] Public Const ERROR_UNDEFINED_SCOPE = 319
[Description("The Central Access Policy obtained from Active Directory is invalid.")] Public Const ERROR_INVALID_CAP = 320
[Description("The device is unreachable.")] Public Const ERROR_DEVICE_UNREACHABLE = 321
[Description("The target device has insufficient resources to complete the operation.")] Public Const ERROR_DEVICE_NO_RESOURCES = 322
[Description("A data integrity checksum error occurred. Data in the file stream is corrupt.")] Public Const ERROR_DATA_CHECKSUM_ERROR = 323
[Description("An attempt was made to modify both a KERNEL and normal Extended Attribute (EA) in the same operation.")] Public Const ERROR_INTERMIXED_KERNEL_EA_OPERATION = 324
[Description("Device does not support file-level TRIM.")] Public Const ERROR_FILE_LEVEL_TRIM_NOT_SUPPORTED = 326
[Description("The command specified a data offset that does not align to the device's granularity/alignment.")] Public Const ERROR_OFFSET_ALIGNMENT_VIOLATION = 327
[Description("The command specified an invalid field in its parameter list.")] Public Const ERROR_INVALID_FIELD_IN_PARAMETER_LIST = 328
[Description("An operation is currently in progress with the device.")] Public Const ERROR_OPERATION_IN_PROGRESS = 329
[Description("An attempt was made to send down the command via an invalid path to the target device.")] Public Const ERROR_BAD_DEVICE_PATH = 330
[Description("The command specified a number of descriptors that exceeded the maximum supported by the device.")] Public Const ERROR_TOO_MANY_DESCRIPTORS = 331
[Description("Scrub is disabled on the specified file.")] Public Const ERROR_SCRUB_DATA_DISABLED = 332
[Description("The storage device does not provide redundancy.")] Public Const ERROR_NOT_REDUNDANT_STORAGE = 333
[Description("The specified operation is not supported on a resident file.")] Public Const ERROR_RESIDENT_FILE_NOT_SUPPORTED = 334
[Description("The specified operation is not supported on a compressed file.")] Public Const ERROR_COMPRESSED_FILE_NOT_SUPPORTED = 335
[Description("The specified operation is not supported on a directory.")] Public Const ERROR_DIRECTORY_NOT_SUPPORTED = 336
[Description("The specified copy of the requested data could not be read.")] Public Const ERROR_NOT_READ_FROM_COPY = 337
[Description("The specified data could not be written to any of the copies.")] Public Const ERROR_FT_WRITE_FAILURE = 338
[Description("One or more copies of data on this device may be out of sync. No writes may be performed until a data integrity scan is completed.")] Public Const ERROR_FT_DI_SCAN_REQUIRED = 339
[Description("The supplied kernel information version is invalid.")] Public Const ERROR_INVALID_KERNEL_INFO_VERSION = 340
[Description("The supplied PEP information version is invalid.")] Public Const ERROR_INVALID_PEP_INFO_VERSION = 341
[Description("This object is not externally backed by any provider.")] Public Const ERROR_OBJECT_NOT_EXTERNALLY_BACKED = 342
[Description("The external backing provider is not recognized.")] Public Const ERROR_EXTERNAL_BACKING_PROVIDER_UNKNOWN = 343
[Description("Compressing this object would not save space.")] Public Const ERROR_COMPRESSION_NOT_BENEFICIAL = 344
[Description("The request failed due to a storage topology ID mismatch.")] Public Const ERROR_STORAGE_TOPOLOGY_ID_MISMATCH = 345
[Description("The operation was blocked by parental controls.")] Public Const ERROR_BLOCKED_BY_PARENTAL_CONTROLS = 346
[Description("A file system block being referenced has already reached the maximum reference count and can't be referenced any further.")] Public Const ERROR_BLOCK_TOO_MANY_REFERENCES = 347
[Description("The requested operation failed because the file stream is marked to disallow writes.")] Public Const ERROR_MARKED_TO_DISALLOW_WRITES = 348
[Description("The requested operation failed with an architecture-specific failure code.")] Public Const ERROR_ENCLAVE_FAILURE = 349
[Description("No action was taken as a system reboot is required.")] Public Const ERROR_FAIL_NOACTION_REBOOT = 350
[Description("The shutdown operation failed.")] Public Const ERROR_FAIL_SHUTDOWN = 351
[Description("The restart operation failed.")] Public Const ERROR_FAIL_RESTART = 352
[Description("The maximum number of sessions has been reached.")] Public Const ERROR_MAX_SESSIONS_REACHED = 353
[Description("Windows Information Protection policy does not allow access to this network resource.")] Public Const ERROR_NETWORK_ACCESS_DENIED_EDP = 354
[Description("The device hint name buffer is too small to receive the remaining name.")] Public Const ERROR_DEVICE_HINT_NAME_BUFFER_TOO_SMALL = 355
[Description("The requested operation was blocked by Windows Information Protection policy. For more information, contact your system administrator.")] Public Const ERROR_EDP_POLICY_DENIES_OPERATION = 356
[Description("The requested operation cannot be performed because hardware or software configuration of the device does not comply with Windows Information Protection under Lock policy. Please, verify that user PIN has been created.")] Public Const ERROR_EDP_DPL_POLICY_CANT_BE_SATISFIED = 357
[Description("The cloud sync root metadata is corrupted.")] Public Const ERROR_CLOUD_FILE_SYNC_ROOT_METADATA_CORRUPT = 358
[Description("The device is in maintenance mode.")] Public Const ERROR_DEVICE_IN_MAINTENANCE = 359
[Description("The specified operation is not supported on a DAX volume.")] Public Const ERROR_NOT_SUPPORTED_ON_DAX = 360
[Description("The volume has active DAX mappings.")] Public Const ERROR_DAX_MAPPING_EXISTS = 361
[Description("The cloud file provider is not running.")] Public Const ERROR_CLOUD_FILE_PROVIDER_NOT_RUNNING = 362
[Description("The cloud file metadata is corrupt and unreadable.")] Public Const ERROR_CLOUD_FILE_METADATA_CORRUPT = 363
[Description("The cloud file metadata is too large.")] Public Const ERROR_CLOUD_FILE_METADATA_TOO_LARGE = 364
[Description("The cloud file property is too large.")] Public Const ERROR_CLOUD_FILE_PROPERTY_BLOB_TOO_LARGE = 365
[Description("The cloud file property is possibly corrupt. The on-disk checksum does not match the computed checksum.")] Public Const ERROR_CLOUD_FILE_PROPERTY_BLOB_CHECKSUM_MISMATCH = 366
[Description("The process creation has been blocked.")] Public Const ERROR_CHILD_PROCESS_BLOCKED = 367
[Description("The storage device has lost data or persistence.")] Public Const ERROR_STORAGE_LOST_DATA_PERSISTENCE = 368
[Description("The provider that supports file system virtualization is temporarily unavailable.")] Public Const ERROR_FILE_SYSTEM_VIRTUALIZATION_UNAVAILABLE = 369
[Description("The metadata for file system virtualization is corrupt and unreadable.")] Public Const ERROR_FILE_SYSTEM_VIRTUALIZATION_METADATA_CORRUPT = 370
[Description("The provider that supports file system virtualization is too busy to complete this operation.")] Public Const ERROR_FILE_SYSTEM_VIRTUALIZATION_BUSY = 371
[Description("The provider that supports file system virtualization is unknown.")] Public Const ERROR_FILE_SYSTEM_VIRTUALIZATION_PROVIDER_UNKNOWN = 372
[Description("GDI handles were potentially leaked by the application.")] Public Const ERROR_GDI_HANDLE_LEAK = 373
[Description("The maximum number of cloud file properties has been reached.")] Public Const ERROR_CLOUD_FILE_TOO_MANY_PROPERTY_BLOBS = 374
[Description("The version of the cloud file property store is not supported.")] Public Const ERROR_CLOUD_FILE_PROPERTY_VERSION_NOT_SUPPORTED = 375
[Description("The file is not a cloud file.")] Public Const ERROR_NOT_A_CLOUD_FILE = 376
[Description("The file is not in sync with the cloud.")] Public Const ERROR_CLOUD_FILE_NOT_IN_SYNC = 377
[Description("The cloud sync root is already connected with another cloud sync provider.")] Public Const ERROR_CLOUD_FILE_ALREADY_CONNECTED = 378
[Description("The operation is not supported by the cloud sync provider.")] Public Const ERROR_CLOUD_FILE_NOT_SUPPORTED = 379
[Description("The cloud operation is invalid.")] Public Const ERROR_CLOUD_FILE_INVALID_REQUEST = 380
[Description("The cloud operation is not supported on a read-only volume.")] Public Const ERROR_CLOUD_FILE_READ_ONLY_VOLUME = 381
[Description("The operation is reserved for a connected cloud sync provider.")] Public Const ERROR_CLOUD_FILE_CONNECTED_PROVIDER_ONLY = 382
[Description("The cloud sync provider failed to validate the downloaded data.")] Public Const ERROR_CLOUD_FILE_VALIDATION_FAILED = 383
[Description("Your system requires SMB2 or higher. For more info on resolving this issue, see: https://go.microsoft.com/fwlink/?linkid=852747")] Public Const ERROR_SMB1_NOT_AVAILABLE = 384
[Description("The virtualization operation is not allowed on the file in its current state.")] Public Const ERROR_FILE_SYSTEM_VIRTUALIZATION_INVALID_OPERATION = 385
[Description("The cloud sync provider failed user authentication.")] Public Const ERROR_CLOUD_FILE_AUTHENTICATION_FAILED = 386
[Description("The cloud sync provider failed to perform the operation due to low system resources.")] Public Const ERROR_CLOUD_FILE_INSUFFICIENT_RESOURCES = 387
[Description("The cloud sync provider failed to perform the operation due to network being unavailable.")] Public Const ERROR_CLOUD_FILE_NETWORK_UNAVAILABLE = 388
[Description("The cloud operation was unsuccessful.")] Public Const ERROR_CLOUD_FILE_UNSUCCESSFUL = 389
[Description("The operation is only supported on files under a cloud sync root.")] Public Const ERROR_CLOUD_FILE_NOT_UNDER_SYNC_ROOT = 390
[Description("The operation cannot be performed on cloud files in use.")] Public Const ERROR_CLOUD_FILE_IN_USE = 391
[Description("The operation cannot be performed on pinned cloud files.")] Public Const ERROR_CLOUD_FILE_PINNED = 392
[Description("The cloud operation was aborted.")] Public Const ERROR_CLOUD_FILE_REQUEST_ABORTED = 393
[Description("The cloud file's property store is corrupt.")] Public Const ERROR_CLOUD_FILE_PROPERTY_CORRUPT = 394
[Description("Access to the cloud file is denied.")] Public Const ERROR_CLOUD_FILE_ACCESS_DENIED = 395
[Description("The cloud operation cannot be performed on a file with incompatible hardlinks.")] Public Const ERROR_CLOUD_FILE_INCOMPATIBLE_HARDLINKS = 396
[Description("The operation failed due to a conflicting cloud file property lock.")] Public Const ERROR_CLOUD_FILE_PROPERTY_LOCK_CONFLICT = 397
[Description("The cloud operation was canceled by user.")] Public Const ERROR_CLOUD_FILE_REQUEST_CANCELED = 398
[Description("An externally encrypted syskey has been configured, but the system no longer supports this feature. Please see https://go.microsoft.com/fwlink/?linkid=851152 for more information.")] Public Const ERROR_EXTERNAL_SYSKEY_NOT_SUPPORTED = 399
[Description("The thread is already in background processing mode.")] Public Const ERROR_THREAD_MODE_ALREADY_BACKGROUND = 400
[Description("The thread is not in background processing mode.")] Public Const ERROR_THREAD_MODE_NOT_BACKGROUND = 401
[Description("The process is already in background processing mode.")] Public Const ERROR_PROCESS_MODE_ALREADY_BACKGROUND = 402
[Description("The process is not in background processing mode.")] Public Const ERROR_PROCESS_MODE_NOT_BACKGROUND = 403
[Description("The cloud file provider exited unexpectedly.")] Public Const ERROR_CLOUD_FILE_PROVIDER_TERMINATED = 404
[Description("The file is not a cloud sync root.")] Public Const ERROR_NOT_A_CLOUD_SYNC_ROOT = 405
[Description("The read or write operation to an encrypted file could not be completed because the file can only be accessed when the device is unlocked.")] Public Const ERROR_FILE_PROTECTED_UNDER_DPL = 406
[Description("The volume is not cluster aligned on the disk.")] Public Const ERROR_VOLUME_NOT_CLUSTER_ALIGNED = 407
[Description("No physically aligned free space was found on the volume.")] Public Const ERROR_NO_PHYSICALLY_ALIGNED_FREE_SPACE_FOUND = 408
[Description("The APPX file can not be accessed because it is not encrypted as expected.")] Public Const ERROR_APPX_FILE_NOT_ENCRYPTED = 409
[Description("A read or write of raw encrypted data cannot be performed because the file is not encrypted.")] Public Const ERROR_RWRAW_ENCRYPTED_FILE_NOT_ENCRYPTED = 410
[Description("An invalid file offset in the encrypted data info block was passed for read or write operation of file's raw encrypted data.")] Public Const ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILEOFFSET = 411
[Description("An invalid offset and length combination in the encrypted data info block was passed for read or write operation of file's raw encrypted data.")] Public Const ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_FILERANGE = 412
[Description("An invalid parameter in the encrypted data info block was passed for read or write operation of file's raw encrypted data.")] Public Const ERROR_RWRAW_ENCRYPTED_INVALID_EDATAINFO_PARAMETER = 413
[Description("Please visit https://aka.ms/wslstoreinfo to learn more.")] Public Const ERROR_LINUX_SUBSYSTEM_NOT_PRESENT = 414
[Description("The specified data could not be read from any of the copies.")] Public Const ERROR_FT_READ_FAILURE = 415
[Description("The specified storage reserve ID is invalid.")] Public Const ERROR_STORAGE_RESERVE_ID_INVALID = 416
[Description("The specified storage reserve does not exist.")] Public Const ERROR_STORAGE_RESERVE_DOES_NOT_EXIST = 417
[Description("The specified storage reserve already exists.")] Public Const ERROR_STORAGE_RESERVE_ALREADY_EXISTS = 418
[Description("The specified storage reserve is not empty.")] Public Const ERROR_STORAGE_RESERVE_NOT_EMPTY = 419
[Description("This operation requires a DAX volume.")] Public Const ERROR_NOT_A_DAX_VOLUME = 420
[Description("This stream is not DAX mappable.")] Public Const ERROR_NOT_DAX_MAPPABLE = 421
[Description("Operation cannot be performed on a time critical thread.")] Public Const ERROR_TIME_SENSITIVE_THREAD = 422
[Description("User data protection is not supported for the current or provided user.")] Public Const ERROR_DPL_NOT_SUPPORTED_FOR_USER = 423
[Description("This directory contains entries whose names differ only in case.")] Public Const ERROR_CASE_DIFFERING_NAMES_IN_DIR = 424
[Description("The file cannot be safely opened because it is not supported by this version of Windows.")] Public Const ERROR_FILE_NOT_SUPPORTED = 425
[Description("The cloud operation was not completed before the time-out period expired.")] Public Const ERROR_CLOUD_FILE_REQUEST_TIMEOUT = 426
[Description("A task queue is required for this operation but none is available.")] Public Const ERROR_NO_TASK_QUEUE = 427
[Description("Failed loading a valid version of srcsrv.dll.")] Public Const ERROR_SRC_SRV_DLL_LOAD_FAILED = 428
[Description("This operation is not supported with BTT enabled.")] Public Const ERROR_NOT_SUPPORTED_WITH_BTT = 429
[Description("This operation cannot be performed because encryption is currently disabled.")] Public Const ERROR_ENCRYPTION_DISABLED = 430
[Description("This encryption operation cannot be performed on filesystem metadata.")] Public Const ERROR_ENCRYPTING_METADATA_DISALLOWED = 431
[Description("Encryption cannot be cleared on this file/directory because it still has an encrypted attribute.")] Public Const ERROR_CANT_CLEAR_ENCRYPTION_FLAG = 432
[Description("A device which does not exist was specified.")] Public Const ERROR_NO_SUCH_DEVICE = 433
[Description("Dehydration of the cloud file is disallowed by the cloud sync provider.")] Public Const ERROR_CLOUD_FILE_DEHYDRATION_DISALLOWED = 434
[Description("A file snapshot operation was attempted when one is already in progress.")] Public Const ERROR_FILE_SNAP_IN_PROGRESS = 435
[Description("A snapshot of the file cannot be taken because a user-mapped section is present.")] Public Const ERROR_FILE_SNAP_USER_SECTION_NOT_SUPPORTED = 436
[Description("The file snapshot operation was terminated because one of the files was modified in a way incompatible with a snapshot operation. Please try again.")] Public Const ERROR_FILE_SNAP_MODIFY_NOT_SUPPORTED = 437
[Description("An I/O request could not be coordinated with a file snapshot operation.")] Public Const ERROR_FILE_SNAP_IO_NOT_COORDINATED = 438
[Description("An unexpected error occurred while processing a file snapshot operation.")] Public Const ERROR_FILE_SNAP_UNEXPECTED_ERROR = 439
[Description("A file snapshot operation received an invalid parameter.")] Public Const ERROR_FILE_SNAP_INVALID_PARAMETER = 440
[Description("The operation could not be completed due to one or more unsatisfied dependencies.")] Public Const ERROR_UNSATISFIED_DEPENDENCIES = 441
[Description("The file cannot be opened because the path has a case-sensitive directory.")] Public Const ERROR_CASE_SENSITIVE_PATH = 442
[Description("The filesystem couldn't handle one of the CacheManager's callback error codes.")] Public Const ERROR_UNEXPECTED_NTCACHEMANAGER_ERROR = 443
[Description("WSL 2 requires an update to its kernel component. For information please visit https://aka.ms/wsl2kernel")] Public Const ERROR_LINUX_SUBSYSTEM_UPDATE_REQUIRED = 444
[Description("This action is blocked, but you can choose to allow it. Please refer to the data loss prevention notification for further information.")] Public Const ERROR_DLP_POLICY_WARNS_AGAINST_OPERATION = 445
[Description("This action is blocked. Please refer to the data loss prevention notification for further information.")] Public Const ERROR_DLP_POLICY_DENIES_OPERATION = 446
[Description("Access is denied because the file contains potentially unwanted software or content the security administrator decided to block.")] Public Const ERROR_SECURITY_DENIES_OPERATION = 447
[Description("The path cannot be traversed because it contains an untrusted mount point.")] Public Const ERROR_UNTRUSTED_MOUNT_POINT = 448
[Description("This action is blocked. Please refer to the data loss prevention notification for further information.")] Public Const ERROR_DLP_POLICY_SILENTLY_FAIL = 449
[Description("Attempt to access invalid address")] Public Const ERROR_INVALID_ADDRESS As Long = 487
[Description("Arithmetic result exceeded 32 bits")] Public Const ERROR_ARITHMETIC_OVERFLOW As Long = 534
[Description("There is a process on other end of the pipe")] Public Const ERROR_PIPE_CONNECTED As Long = 535
[Description("Waiting for a process to open the other end of the pipe")] Public Const ERROR_PIPE_LISTENING As Long = 536
[Description("Application verifier has found an error in the current process.")] Public Const ERROR_VERIFIER_STOP = 537
[Description("An error occurred in the ABIOS subsystem.")] Public Const ERROR_ABIOS_ERROR = 538
[Description("A warning occurred in the WX86 subsystem.")] Public Const ERROR_WX86_WARNING = 539
[Description("An error occurred in the WX86 subsystem.")] Public Const ERROR_WX86_ERROR = 540
[Description("An attempt was made to cancel or set a timer that has an associated APC and the subject thread is not the thread that originally set the timer with an associated APC routine.")] Public Const ERROR_TIMER_NOT_CANCELED = 541
[Description("Unwind exception code.")] Public Const ERROR_UNWIND = 542
[Description("An invalid or unaligned stack was encountered during an unwind operation.")] Public Const ERROR_BAD_STACK = 543
[Description("An invalid unwind target was encountered during an unwind operation.")] Public Const ERROR_INVALID_UNWIND_TARGET = 544
[Description("Invalid Object Attributes specified to NtCreatePort or invalid Port Attributes specified to NtConnectPort")] Public Const ERROR_INVALID_PORT_ATTRIBUTES = 545
[Description("Length of message passed to NtRequestPort or NtRequestWaitReplyPort was longer than the maximum message allowed by the port.")] Public Const ERROR_PORT_MESSAGE_TOO_LONG = 546
[Description("An attempt was made to lower a quota limit below the current usage.")] Public Const ERROR_INVALID_QUOTA_LOWER = 547
[Description("An attempt was made to attach to a device that was already attached to another device.")] Public Const ERROR_DEVICE_ALREADY_ATTACHED = 548
[Description("An attempt was made to execute an instruction at an unaligned address and the host system does not support unaligned instruction references.")] Public Const ERROR_INSTRUCTION_MISALIGNMENT = 549
[Description("Profiling not started.")] Public Const ERROR_PROFILING_NOT_STARTED = 550
[Description("Profiling not stopped.")] Public Const ERROR_PROFILING_NOT_STOPPED = 551
[Description("The passed ACL did not contain the minimum required information.")] Public Const ERROR_COULD_NOT_INTERPRET = 552
[Description("The number of active profiling objects is at the maximum and no more may be started.")] Public Const ERROR_PROFILING_AT_LIMIT = 553
[Description("Used to indicate that an operation cannot continue without blocking for I/O.")] Public Const ERROR_CANT_WAIT = 554
[Description("Indicates that a thread attempted to terminate itself by default (called NtTerminateThread with NULL) and it was the last thread in the current process.")] Public Const ERROR_CANT_TERMINATE_SELF = 555
[Description("In this case information is lost, however, the filter correctly handles the exception.")] Public Const ERROR_UNEXPECTED_MM_CREATE_ERR = 556
[Description("In this case information is lost, however, the filter correctly handles the exception.")] Public Const ERROR_UNEXPECTED_MM_MAP_ERROR = 557
[Description("In this case information is lost, however, the filter correctly handles the exception.")] Public Const ERROR_UNEXPECTED_MM_EXTEND_ERR = 558
[Description("A malformed function table was encountered during an unwind operation.")] Public Const ERROR_BAD_FUNCTION_TABLE = 559
[Description("This causes the protection attempt to fail, which may cause a file creation attempt to fail.")] Public Const ERROR_NO_GUID_TRANSLATION = 560
[Description("Indicates that an attempt was made to grow an LDT by setting its size, or that the size was not an even number of selectors.")] Public Const ERROR_INVALID_LDT_SIZE = 561
[Description("Indicates that the starting value for the LDT information was not an integral multiple of the selector size.")] Public Const ERROR_INVALID_LDT_OFFSET = 563
[Description("Indicates that the user supplied an invalid descriptor when trying to set up Ldt descriptors.")] Public Const ERROR_INVALID_LDT_DESCRIPTOR = 564
[Description("Indicates a process has too many threads to perform the requested action. For example, assignment of a primary token may only be performed when a process has zero or one threads.")] Public Const ERROR_TOO_MANY_THREADS = 565
[Description("An attempt was made to operate on a thread within a specific process, but the thread specified is not in the process specified.")] Public Const ERROR_THREAD_NOT_IN_PROCESS = 566
[Description("Pagefile quota was exceeded.")] Public Const ERROR_PAGEFILE_QUOTA_EXCEEDED = 567
[Description("The Netlogon service cannot start because another Netlogon service running in the domain conflicts with the specified role.")] Public Const ERROR_LOGON_SERVER_CONFLICT = 568
[Description("The SAM database on a Windows Server is significantly out of synchronization with the copy on the Domain Controller. A complete synchronization is required.")] Public Const ERROR_SYNCHRONIZATION_REQUIRED = 569
[Description("The NtCreateFile API failed. This error should never be returned to an application, it is a place holder for the Windows Lan Manager Redirector to use in its internal error mapping routines.")] Public Const ERROR_NET_OPEN_FAILED = 570
[Description("The I/O permissions for the process could not be changed.")] Public Const ERROR_IO_PRIVILEGE_FAILED = 571
[Description("The application terminated as a result of a CTRL+C.")] Public Const ERROR_CONTROL_C_EXIT = 572
[Description("The required system file %hs is bad or missing.")] Public Const ERROR_MISSING_SYSTEMFILE = 573
[Description("The exception %s (0x%08lx) occurred in the application at location 0x%08lx.")] Public Const ERROR_UNHANDLED_EXCEPTION = 574
[Description("The application was unable to start correctly (0x%lx). Click OK to close the application.")] Public Const ERROR_APP_INIT_FAILURE = 575
[Description("The creation of the paging file %hs failed (%lx). The requested size was %ld.")] Public Const ERROR_PAGEFILE_CREATE_FAILED = 576
[Description("Windows cannot verify the digital signature for this file. A recent hardware or software change might have installed a file that is signed incorrectly or damaged, or that might be malicious software from an unknown source.")] Public Const ERROR_INVALID_IMAGE_HASH = 577
[Description("No paging file was specified in the system configuration.")] Public Const ERROR_NO_PAGEFILE = 578
[Description("A real-mode application issued a floating-point instruction and floating-point hardware is not present.")] Public Const ERROR_ILLEGAL_FLOAT_CONTEXT = 579
[Description("An event pair synchronization operation was performed using the thread specific client/server event pair object, but no event pair object was associated with the thread.")] Public Const ERROR_NO_EVENT_PAIR = 580
[Description("A Windows Server has an incorrect configuration.")] Public Const ERROR_DOMAIN_CTRLR_CONFIG_ERROR = 581
[Description("An illegal character was encountered. For a multi-byte character set this includes a lead byte without a succeeding trail byte. For the Unicode character set this includes the characters 0xFFFF and 0xFFFE.")] Public Const ERROR_ILLEGAL_CHARACTER = 582
[Description("The Unicode character is not defined in the Unicode character set installed on the system.")] Public Const ERROR_UNDEFINED_CHARACTER = 583
[Description("The paging file cannot be created on a floppy diskette.")] Public Const ERROR_FLOPPY_VOLUME = 584
[Description("The system BIOS failed to connect a system interrupt to the device or bus for which the device is connected.")] Public Const ERROR_BIOS_FAILED_TO_CONNECT_INTERRUPT = 585
[Description("This operation is only allowed for the Primary Domain Controller of the domain.")] Public Const ERROR_BACKUP_CONTROLLER = 586
[Description("An attempt was made to acquire a mutant such that its maximum count would have been exceeded.")] Public Const ERROR_MUTANT_LIMIT_EXCEEDED = 587
[Description("A volume has been accessed for which a file system driver is required that has not yet been loaded.")] Public Const ERROR_FS_DRIVER_REQUIRED = 588
[Description("It is corrupt, absent, or not writable.")] Public Const ERROR_CANNOT_LOAD_REGISTRY_FILE = 589
[Description("An unexpected failure occurred while processing a DebugActiveProcess API request. You may choose OK to terminate the process, or Cancel to ignore the error.")] Public Const ERROR_DEBUG_ATTACH_FAILED = 590
[Description("The system has been shut down.")] Public Const ERROR_SYSTEM_PROCESS_TERMINATED = 591
[Description("The TDI client could not handle the data received during an indication.")] Public Const ERROR_DATA_NOT_ACCEPTED = 592
[Description("NTVDM encountered a hard error.")] Public Const ERROR_VDM_HARD_ERROR = 593
[Description("The driver %hs failed to complete a cancelled I/O request in the allotted time.")] Public Const ERROR_DRIVER_CANCEL_TIMEOUT = 594
[Description("An attempt was made to reply to an LPC message, but the thread specified by the client ID in the message was not waiting on that message.")] Public Const ERROR_REPLY_MESSAGE_MISMATCH = 595
[Description("This error may be caused by a failure of your computer hardware or network connection. Please try to save this file elsewhere.")] Public Const ERROR_LOST_WRITEBEHIND_DATA = 596
[Description("The parameter(s) passed to the server in the client/server shared memory window were invalid. Too much data may have been put in the shared memory window.")] Public Const ERROR_CLIENT_SERVER_PARAMETERS_INVALID = 597
[Description("The stream is not a tiny stream.")] Public Const ERROR_NOT_TINY_STREAM = 598
[Description("The request must be handled by the stack overflow code.")] Public Const ERROR_STACK_OVERFLOW_READ = 599
[Description("Internal OFS status codes indicating how an allocation operation is handled. Either it is retried after the containing onode is moved or the extent stream is converted to a large stream.")] Public Const ERROR_CONVERT_TO_LARGE = 600
[Description("The attempt to find the object found an object matching by ID on the volume but it is out of the scope of the handle used for the operation.")] Public Const ERROR_FOUND_OUT_OF_SCOPE = 601
[Description("The bucket array must be grown. Retry transaction after doing so.")] Public Const ERROR_ALLOCATE_BUCKET = 602
[Description("The user/kernel marshalling buffer has overflowed.")] Public Const ERROR_MARSHALL_OVERFLOW = 603
[Description("The supplied variant structure contains invalid data.")] Public Const ERROR_INVALID_VARIANT = 604
[Description("The specified buffer contains ill-formed data.")] Public Const ERROR_BAD_COMPRESSION_BUFFER = 605
[Description("An attempt to generate a security audit failed.")] Public Const ERROR_AUDIT_FAILED = 606
[Description("The timer resolution was not previously set by the current process.")] Public Const ERROR_TIMER_RESOLUTION_NOT_SET = 607
[Description("There is insufficient account information to log you on.")] Public Const ERROR_INSUFFICIENT_LOGON_INFO = 608
[Description("The entrypoint should be declared as WINAPI or STDCALL. Select YES to fail the DLL load. Select NO to continue execution. Selecting NO may cause the application to operate incorrectly.")] Public Const ERROR_BAD_DLL_ENTRYPOINT = 609
[Description("The callback entrypoint should be declared as WINAPI or STDCALL. Selecting OK will cause the service to continue operation. However, the service process may operate incorrectly.")] Public Const ERROR_BAD_SERVICE_ENTRYPOINT = 610
[Description("There is an IP address conflict with another system on the network")] Public Const ERROR_IP_ADDRESS_CONFLICT1 = 611
[Description("There is an IP address conflict with another system on the network")] Public Const ERROR_IP_ADDRESS_CONFLICT2 = 612
[Description("The system has reached the maximum size allowed for the system part of the registry. Additional storage requests will be ignored.")] Public Const ERROR_REGISTRY_QUOTA_LIMIT = 613
[Description("A callback return system service cannot be executed when no callback is active.")] Public Const ERROR_NO_CALLBACK_ACTIVE = 614
[Description("Please choose a longer password.")] Public Const ERROR_PWD_TOO_SHORT = 615
[Description("If you feel your password has been compromised then please contact your administrator immediately to have a new one assigned.")] Public Const ERROR_PWD_TOO_RECENT = 616
[Description("The policy of your user account does not allow this. Please select a password that you have not previously used.")] Public Const ERROR_PWD_HISTORY_CONFLICT = 617
[Description("The specified compression format is unsupported.")] Public Const ERROR_UNSUPPORTED_COMPRESSION = 618
[Description("The specified hardware profile configuration is invalid.")] Public Const ERROR_INVALID_HW_PROFILE = 619
[Description("The specified Plug and Play registry device path is invalid.")] Public Const ERROR_INVALID_PLUGPLAY_DEVICE_PATH = 620
[Description("The specified quota list is internally inconsistent with its descriptor.")] Public Const ERROR_QUOTA_LIST_INCONSISTENT = 621
[Description("The evaluation period for this installation of Windows has expired. This system will shutdown in 1 hour. To restore access to this installation of Windows, please upgrade this installation using a licensed distribution of this product.")] Public Const ERROR_EVALUATION_EXPIRATION = 622
[Description("The relocation occurred because the DLL %hs occupied an address range reserved for Windows system DLLs. The vendor supplying the DLL should be contacted for a new DLL.")] Public Const ERROR_ILLEGAL_DLL_RELOCATION = 623
[Description("The application failed to initialize because the window station is shutting down.")] Public Const ERROR_DLL_INIT_FAILED_LOGOFF = 624
[Description("The validation process needs to continue on to the next step.")] Public Const ERROR_VALIDATE_CONTINUE = 625
[Description("There are no more matches for the current index enumeration.")] Public Const ERROR_NO_MORE_MATCHES = 626
[Description("The range could not be added to the range list because of a conflict.")] Public Const ERROR_RANGE_LIST_CONFLICT = 627
[Description("The server process is running under a SID different than that required by client.")] Public Const ERROR_SERVER_SID_MISMATCH = 628
[Description("A group marked use for deny only cannot be enabled.")] Public Const ERROR_CANT_ENABLE_DENY_ONLY = 629
[Description("Multiple floating point faults.")] Public Const ERROR_FLOAT_MULTIPLE_FAULTS = 630
[Description("Multiple floating point traps.")] Public Const ERROR_FLOAT_MULTIPLE_TRAPS = 631
[Description("The requested interface is not supported.")] Public Const ERROR_NOINTERFACE = 632
[Description("The driver %hs does not support standby mode. Updating this driver may allow the system to go to standby mode.")] Public Const ERROR_DRIVER_FAILED_SLEEP = 633
[Description("The system file %1 has become corrupt and has been replaced.")] Public Const ERROR_CORRUPT_SYSTEM_FILE = 634
[Description("During this process, memory requests for some applications may be denied. For more information, see Help.")] Public Const ERROR_COMMITMENT_MINIMUM = 635
[Description("A device was removed so enumeration must be restarted.")] Public Const ERROR_PNP_RESTART_ENUMERATION = 636
[Description("The system has been shut down.")] Public Const ERROR_SYSTEM_IMAGE_BAD_SIGNATURE = 637
[Description("Device will not start without a reboot.")] Public Const ERROR_PNP_REBOOT_REQUIRED = 638
[Description("There is not enough power to complete the requested operation.")] Public Const ERROR_INSUFFICIENT_POWER = 639
[Description(" ERROR_MULTIPLE_FAULT_VIOLATION")] Public Const ERROR_MULTIPLE_FAULT_VIOLATION = 640
[Description("The system is in the process of shutting down.")] Public Const ERROR_SYSTEM_SHUTDOWN = 641
[Description("An attempt to remove a processes DebugPort was made, but a port was not already associated with the process.")] Public Const ERROR_PORT_NOT_SET = 642
[Description("This version of Windows is not compatible with the behavior version of directory forest, domain or domain controller.")] Public Const ERROR_DS_VERSION_CHECK_FAILURE = 643
[Description("The specified range could not be found in the range list.")] Public Const ERROR_RANGE_NOT_FOUND = 644
[Description("The driver was not loaded because the system is booting into safe mode.")] Public Const ERROR_NOT_SAFE_MODE_DRIVER = 646
[Description("The driver was not loaded because it failed its initialization call.")] Public Const ERROR_FAILED_DRIVER_ENTRY = 647
[Description("This may be caused by a failure of your hardware or by a poor connection.")] Public Const ERROR_DEVICE_ENUMERATION_ERROR = 648
[Description("The create operation failed because the name contained at least one mount point which resolves to a volume to which the specified device object is not attached.")] Public Const ERROR_MOUNT_POINT_NOT_RESOLVED = 649
[Description("The device object parameter is either not a valid device object or is not attached to the volume specified by the file name.")] Public Const ERROR_INVALID_DEVICE_OBJECT_PARAMETER = 650
[Description("A Machine Check Error has occurred. Please check the system eventlog for additional information.")] Public Const ERROR_MCA_OCCURED = 651
[Description("There was error [%2] processing the driver database.")] Public Const ERROR_DRIVER_DATABASE_ERROR = 652
[Description("System hive size has exceeded its limit.")] Public Const ERROR_SYSTEM_HIVE_TOO_LARGE = 653
[Description("The driver could not be loaded because a previous version of the driver is still in memory.")] Public Const ERROR_DRIVER_FAILED_PRIOR_UNLOAD = 654
[Description("Please wait while the Volume Shadow Copy Service prepares volume %hs for hibernation.")] Public Const ERROR_VOLSNAP_PREPARE_HIBERNATE = 655
[Description("The system has failed to hibernate (The error code is %hs). Hibernation will be disabled until the system is restarted.")] Public Const ERROR_HIBERNATION_FAILURE = 656
[Description("Please choose a shorter password.")] Public Const ERROR_PWD_TOO_LONG = 657
[Description("The requested operation could not be completed due to a file system limitation")] Public Const ERROR_FILE_SYSTEM_LIMITATION = 665
[Description("An assertion failure has occurred.")] Public Const ERROR_ASSERTION_FAILURE = 668
[Description("An error occurred in the ACPI subsystem.")] Public Const ERROR_ACPI_ERROR = 669
[Description("WOW Assertion Error.")] Public Const ERROR_WOW_ASSERTION = 670
[Description("Please contact your system vendor for system BIOS update.")] Public Const ERROR_PNP_BAD_MPS_TABLE = 671
[Description("A translator failed to translate resources.")] Public Const ERROR_PNP_TRANSLATION_FAILED = 672
[Description("A IRQ translator failed to translate resources.")] Public Const ERROR_PNP_IRQ_TRANSLATION_FAILED = 673
[Description("Driver %2 returned invalid ID for a child device (%3).")] Public Const ERROR_PNP_INVALID_ID = 674
[Description("the system debugger was awakened by an interrupt.")] Public Const ERROR_WAKE_SYSTEM_DEBUGGER = 675
[Description("Handles to objects have been automatically closed as a result of the requested operation.")] Public Const ERROR_HANDLES_CLOSED = 676
[Description("The specified access control list (ACL) contained more information than was expected.")] Public Const ERROR_EXTRANEOUS_INFORMATION = 677
[Description("The commit has NOT been completed, but has not been rolled back either (so it may still be committed if desired).")] Public Const ERROR_RXACT_COMMIT_NECESSARY = 678
[Description("The media may have changed.")] Public Const ERROR_MEDIA_CHECK = 679
[Description("A substitute prefix was used, which will not compromise system security. However, this may provide a more restrictive access than intended.")] Public Const ERROR_GUID_SUBSTITUTION_MADE = 680
[Description("The create operation stopped after reaching a symbolic link")] Public Const ERROR_STOPPED_ON_SYMLINK = 681
[Description("A long jump has been executed.")] Public Const ERROR_LONGJUMP = 682
[Description("The Plug and Play query operation was not successful.")] Public Const ERROR_PLUGPLAY_QUERY_VETOED = 683
[Description("A frame consolidation has been executed.")] Public Const ERROR_UNWIND_CONSOLIDATE = 684
[Description("was corrupted and it has been recovered. Some data might have been lost.")] Public Const ERROR_REGISTRY_HIVE_RECOVERED = 685
[Description("The application is attempting to run executable code from the module %hs. This may be insecure. An alternative, %hs, is available. Should the application use the secure module %hs?")] Public Const ERROR_DLL_MIGHT_BE_INSECURE = 686
[Description("The application is loading executable code from the module %hs. This is secure, but may be incompatible with prev releases of the operating system. An alternative, %hs, is available. Should the application use the secure module %hs?")] Public Const ERROR_DLL_MIGHT_BE_INCOMPATIBLE = 687
[Description("Debugger did not handle the exception.")] Public Const ERROR_DBG_EXCEPTION_NOT_HANDLED = 688
[Description("Debugger will reply later.")] Public Const ERROR_DBG_REPLY_LATER = 689
[Description("Debugger cannot provide handle.")] Public Const ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE = 690
[Description("Debugger terminated thread.")] Public Const ERROR_DBG_TERMINATE_THREAD = 691
[Description("Debugger terminated process.")] Public Const ERROR_DBG_TERMINATE_PROCESS = 692
[Description("Debugger got control C.")] Public Const ERROR_DBG_CONTROL_C = 693
[Description("Debugger printed exception on control C.")] Public Const ERROR_DBG_PRINTEXCEPTION_C = 694
[Description("Debugger received RIP exception.")] Public Const ERROR_DBG_RIPEXCEPTION = 695
[Description("Debugger received control break.")] Public Const ERROR_DBG_CONTROL_BREAK = 696
[Description("Debugger command communication exception.")] Public Const ERROR_DBG_COMMAND_EXCEPTION = 697
[Description("An attempt was made to create an object and the object name already existed.")] Public Const ERROR_OBJECT_NAME_EXISTS = 698
[Description("A thread termination occurred while the thread was suspended. The thread was resumed, and termination proceeded.")] Public Const ERROR_THREAD_WAS_SUSPENDED = 699
[Description("An image file could not be mapped at the address specified in the image file. Local fixups must be performed on this image.")] Public Const ERROR_IMAGE_NOT_AT_BASE = 700
[Description("This informational level status indicates that a specified registry sub-tree transaction state did not yet exist and had to be created.")] Public Const ERROR_RXACT_STATE_CREATED = 701
[Description("An exception is raised so a debugger can load, unload or track symbols and breakpoints within these 16-bit segments.")] Public Const ERROR_SEGMENT_NOTIFICATION = 702
[Description("Select OK to set current directory to %hs, or select CANCEL to exit.")] Public Const ERROR_BAD_CURRENT_DIRECTORY = 703
[Description("This was done because the file system encountered a failure on a member of the fault-tolerant volume, but was unable to reassign the failing area of the device.")] Public Const ERROR_FT_READ_RECOVERY_FROM_BACKUP = 704
[Description("This was done because the file system encountered a failure on a member of the fault-tolerant volume, but was not able to reassign the failing area of the device.")] Public Const ERROR_FT_WRITE_RECOVERY = 705
[Description("The image file %hs is valid, but is for a machine type other than the current machine. Select OK to continue, or CANCEL to fail the DLL load.")] Public Const ERROR_IMAGE_MACHINE_TYPE_MISMATCH = 706
[Description("The network transport returned partial data to its client. The remaining data will be sent later.")] Public Const ERROR_RECEIVE_PARTIAL = 707
[Description("The network transport returned data to its client that was marked as expedited by the remote system.")] Public Const ERROR_RECEIVE_EXPEDITED = 708
[Description("The network transport returned partial data to its client and this data was marked as expedited by the remote system. The remaining data will be sent later.")] Public Const ERROR_RECEIVE_PARTIAL_EXPEDITED = 709
[Description("The TDI indication has completed successfully.")] Public Const ERROR_EVENT_DONE = 710
[Description("The TDI indication has entered the pending state.")] Public Const ERROR_EVENT_PENDING = 711
[Description("Checking file system on %wZ")] Public Const ERROR_CHECKING_FILE_SYSTEM = 712
[Description("%hs")] Public Const ERROR_FATAL_APP_EXIT = 713
[Description("The specified registry key is referenced by a predefined handle.")] Public Const ERROR_PREDEFINED_HANDLE = 714
[Description("The page protection of a locked page was changed to 'No Access' and the page was unlocked from memory and from the process.")] Public Const ERROR_WAS_UNLOCKED = 715
[Description("%hs")] Public Const ERROR_SERVICE_NOTIFICATION = 716
[Description("One of the pages to lock was already locked.")] Public Const ERROR_WAS_LOCKED = 717
[Description("Application popup: %1 : %2")] Public Const ERROR_LOG_HARD_ERROR = 718
[Description(" ERROR_ALREADY_WIN32")] Public Const ERROR_ALREADY_WIN32 = 719
[Description("The image file %hs is valid, but is for a machine type other than the current machine.")] Public Const ERROR_IMAGE_MACHINE_TYPE_MISMATCH_EXE = 720
[Description("A yield execution was performed and no thread was available to run.")] Public Const ERROR_NO_YIELD_PERFORMED = 721
[Description("The resumable flag to a timer API was ignored.")] Public Const ERROR_TIMER_RESUME_IGNORED = 722
[Description("The arbiter has deferred arbitration of these resources to its parent")] Public Const ERROR_ARBITRATION_UNHANDLED = 723
[Description("The inserted CardBus device cannot be started because of a configuration error on %hs.")] Public Const ERROR_CARDBUS_NOT_SUPPORTED = 724
[Description("The CPUs in this multiprocessor system are not all the same revision level. To use all processors the OS restricts itself to features of least capable CPU. Should problems occur, contact manufacturer to see if this mix is supported.")] Public Const ERROR_MP_PROCESSOR_MISMATCH = 725
[Description("The system was put into hibernation.")] Public Const ERROR_HIBERNATED = 726
[Description("The system was resumed from hibernation.")] Public Const ERROR_RESUME_HIBERNATION = 727
[Description("Windows has detected that the system firmware (BIOS) was updated [previous firmware date = %2, current firmware date %3].")] Public Const ERROR_FIRMWARE_UPDATED = 728
[Description("A device driver is leaking locked I/O pages causing system degradation. The system has automatically enabled tracking code in order to try and catch the culprit.")] Public Const ERROR_DRIVERS_LEAKING_LOCKED_PAGES = 729
[Description("The system has awoken")] Public Const ERROR_WAKE_SYSTEM = 730
[Description(" ERROR_WAIT_1")] Public Const ERROR_WAIT_1 = 731
[Description(" ERROR_WAIT_2")] Public Const ERROR_WAIT_2 = 732
[Description(" ERROR_WAIT_3")] Public Const ERROR_WAIT_3 = 733
[Description(" ERROR_WAIT_63")] Public Const ERROR_WAIT_63 = 734
[Description(" ERROR_ABANDONED_WAIT_0")] Public Const ERROR_ABANDONED_WAIT_0 = 735
[Description(" ERROR_ABANDONED_WAIT_63")] Public Const ERROR_ABANDONED_WAIT_63 = 736
[Description(" ERROR_USER_APC")] Public Const ERROR_USER_APC = 737
[Description(" ERROR_KERNEL_APC")] Public Const ERROR_KERNEL_APC = 738
[Description(" ERROR_ALERTED")] Public Const ERROR_ALERTED = 739
[Description("The requested operation requires elevation.")] Public Const ERROR_ELEVATION_REQUIRED = 740
[Description("A reparse should be performed by the Object Manager since the name of the file resulted in a symbolic link.")] Public Const ERROR_REPARSE = 741
[Description("An open/create operation completed while an oplock break is underway.")] Public Const ERROR_OPLOCK_BREAK_IN_PROGRESS = 742
[Description("A new volume has been mounted by a file system.")] Public Const ERROR_VOLUME_MOUNTED = 743
[Description("The commit has now been completed.")] Public Const ERROR_RXACT_COMMITTED = 744
[Description("This indicates that a notify change request has been completed due to closing the handle which made the notify change request.")] Public Const ERROR_NOTIFY_CLEANUP = 745
[Description("The computer WAS able to connect on a secondary transport.")] Public Const ERROR_PRIMARY_TRANSPORT_CONNECT_FAILED = 746
[Description("Page fault was a transition fault.")] Public Const ERROR_PAGE_FAULT_TRANSITION = 747
[Description("Page fault was a demand zero fault.")] Public Const ERROR_PAGE_FAULT_DEMAND_ZERO = 748
[Description("Page fault was a demand zero fault.")] Public Const ERROR_PAGE_FAULT_COPY_ON_WRITE = 749
[Description("Page fault was a demand zero fault.")] Public Const ERROR_PAGE_FAULT_GUARD_PAGE = 750
[Description("Page fault was satisfied by reading from a secondary storage device.")] Public Const ERROR_PAGE_FAULT_PAGING_FILE = 751
[Description("Cached page was locked during operation.")] Public Const ERROR_CACHE_PAGE_LOCKED = 752
[Description("Crash dump exists in paging file.")] Public Const ERROR_CRASH_DUMP = 753
[Description("Specified buffer contains all zeros.")] Public Const ERROR_BUFFER_ALL_ZEROS = 754
[Description("A reparse should be performed by the Object Manager since the name of the file resulted in a symbolic link.")] Public Const ERROR_REPARSE_OBJECT = 755
[Description("The device has succeeded a query-stop and its resource requirements have changed.")] Public Const ERROR_RESOURCE_REQUIREMENTS_CHANGED = 756
[Description("The translator has translated these resources into the global space and no further translations should be performed.")] Public Const ERROR_TRANSLATION_COMPLETE = 757
[Description("A process being terminated has no threads to terminate.")] Public Const ERROR_NOTHING_TO_TERMINATE = 758
[Description("The specified process is not part of a job.")] Public Const ERROR_PROCESS_NOT_IN_JOB = 759
[Description("The specified process is part of a job.")] Public Const ERROR_PROCESS_IN_JOB = 760
[Description("The system is now ready for hibernation.")] Public Const ERROR_VOLSNAP_HIBERNATE_READY = 761
[Description("A file system or file system filter driver has successfully completed an FsFilter operation.")] Public Const ERROR_FSFILTER_OP_COMPLETED_SUCCESSFULLY = 762
[Description("The specified interrupt vector was already connected.")] Public Const ERROR_INTERRUPT_VECTOR_ALREADY_CONNECTED = 763
[Description("The specified interrupt vector is still connected.")] Public Const ERROR_INTERRUPT_STILL_CONNECTED = 764
[Description("An operation is blocked waiting for an oplock.")] Public Const ERROR_WAIT_FOR_OPLOCK = 765
[Description("Debugger handled exception")] Public Const ERROR_DBG_EXCEPTION_HANDLED = 766
[Description("Debugger continued")] Public Const ERROR_DBG_CONTINUE = 767
[Description("An exception occurred in a user mode callback and the kernel callback frame should be removed.")] Public Const ERROR_CALLBACK_POP_STACK = 768
[Description("Compression is disabled for this volume.")] Public Const ERROR_COMPRESSION_DISABLED = 769
[Description("The data provider cannot fetch backwards through a result set.")] Public Const ERROR_CANTFETCHBACKWARDS = 770
[Description("The data provider cannot scroll backwards through a result set.")] Public Const ERROR_CANTSCROLLBACKWARDS = 771
[Description("The data provider requires that previously fetched data is released before asking for more data.")] Public Const ERROR_ROWSNOTRELEASED = 772
[Description("The data provider was not able to interpret the flags set for a column binding in an accessor.")] Public Const ERROR_BAD_ACCESSOR_FLAGS = 773
[Description("One or more errors occurred while processing the request.")] Public Const ERROR_ERRORS_ENCOUNTERED = 774
[Description("The implementation is not capable of performing the request.")] Public Const ERROR_NOT_CAPABLE = 775
[Description("The client of a component requested an operation which is not valid given the state of the component instance.")] Public Const ERROR_REQUEST_OUT_OF_SEQUENCE = 776
[Description("A version number could not be parsed.")] Public Const ERROR_VERSION_PARSE_ERROR = 777
[Description("The iterator's start position is invalid.")] Public Const ERROR_BADSTARTPOSITION = 778
[Description("The hardware has reported an uncorrectable memory error.")] Public Const ERROR_MEMORY_HARDWARE = 779
[Description("The attempted operation required self healing to be enabled.")] Public Const ERROR_DISK_REPAIR_DISABLED = 780
[Description("The Desktop heap encountered an error while allocating session memory. There is more information in the system event log.")] Public Const ERROR_INSUFFICIENT_RESOURCE_FOR_SPECIFIED_SHARED_SECTION_SIZE = 781
[Description("The system power state is transitioning from %2 to %3.")] Public Const ERROR_SYSTEM_POWERSTATE_TRANSITION = 782
[Description("The system power state is transitioning from %2 to %3 but could enter %4.")] Public Const ERROR_SYSTEM_POWERSTATE_COMPLEX_TRANSITION = 783
[Description("A thread is getting dispatched with MCA EXCEPTION because of MCA.")] Public Const ERROR_MCA_EXCEPTION = 784
[Description("Access to %1 is monitored by policy rule %2.")] Public Const ERROR_ACCESS_AUDIT_BY_POLICY = 785
[Description("Access to %1 has been restricted by your Administrator by policy rule %2.")] Public Const ERROR_ACCESS_DISABLED_NO_SAFER_UI_BY_POLICY = 786
[Description("A valid hibernation file has been invalidated and should be abandoned.")] Public Const ERROR_ABANDON_HIBERFILE = 787
[Description("This error may be caused by network connectivity issues. Please try to save this file elsewhere.")] Public Const ERROR_LOST_WRITEBEHIND_DATA_NETWORK_DISCONNECTED = 788
[Description("This error was returned by the server on which the file exists. Please try to save this file elsewhere.")] Public Const ERROR_LOST_WRITEBEHIND_DATA_NETWORK_SERVER_ERROR = 789
[Description("This error may be caused if the device has been removed or the media is write-protected.")] Public Const ERROR_LOST_WRITEBEHIND_DATA_LOCAL_DISK_ERROR = 790
[Description("The resources required for this device conflict with the MCFG table.")] Public Const ERROR_BAD_MCFG_TABLE = 791
[Description("Please schedule to take the volume offline so that it can be repaired.")] Public Const ERROR_DISK_REPAIR_REDIRECTED = 792
[Description("The volume repair was not successful.")] Public Const ERROR_DISK_REPAIR_UNSUCCESSFUL = 793
[Description("One of the volume corruption logs is full. Further corruptions that may be detected won't be logged.")] Public Const ERROR_CORRUPT_LOG_OVERFULL = 794
[Description("One of the volume corruption logs is internally corrupted and needs to be recreated. The volume may contain undetected corruptions and must be scanned.")] Public Const ERROR_CORRUPT_LOG_CORRUPTED = 795
[Description("One of the volume corruption logs is unavailable for being operated on.")] Public Const ERROR_CORRUPT_LOG_UNAVAILABLE = 796
[Description("One of the volume corruption logs was deleted while still having corruption records in them. The volume contains detected corruptions and must be scanned.")] Public Const ERROR_CORRUPT_LOG_DELETED_FULL = 797
[Description("One of the volume corruption logs was cleared by chkdsk and no longer contains real corruptions.")] Public Const ERROR_CORRUPT_LOG_CLEARED = 798
[Description("Orphaned files exist on the volume but could not be recovered because no more new names could be created in the recovery directory. Files must be moved from the recovery directory.")] Public Const ERROR_ORPHAN_NAME_EXHAUSTED = 799
[Description("The oplock that was associated with this handle is now associated with a different handle.")] Public Const ERROR_OPLOCK_SWITCHED_TO_NEW_HANDLE = 800
[Description("An oplock of the requested level cannot be granted. An oplock of a lower level may be available.")] Public Const ERROR_CANNOT_GRANT_REQUESTED_OPLOCK = 801
[Description("The operation did not complete successfully because it would cause an oplock to be broken. The caller has requested that existing oplocks not be broken.")] Public Const ERROR_CANNOT_BREAK_OPLOCK = 802
[Description("The handle with which this oplock was associated has been closed. The oplock is now broken.")] Public Const ERROR_OPLOCK_HANDLE_CLOSED = 803
[Description("The specified access control entry (ACE) does not contain a condition.")] Public Const ERROR_NO_ACE_CONDITION = 804
[Description("The specified access control entry (ACE) contains an invalid condition.")] Public Const ERROR_INVALID_ACE_CONDITION = 805
[Description("Access to the specified file handle has been revoked.")] Public Const ERROR_FILE_HANDLE_REVOKED = 806
[Description("An image file was mapped at a different address from the one specified in the image file but fixups will still be automatically performed on the image.")] Public Const ERROR_IMAGE_AT_DIFFERENT_BASE = 807
[Description("The read or write operation to an encrypted file could not be completed because the file has not been opened for data access.")] Public Const ERROR_ENCRYPTED_IO_NOT_POSSIBLE = 808
[Description("File metadata optimization is already in progress.")] Public Const ERROR_FILE_METADATA_OPTIMIZATION_IN_PROGRESS = 809
[Description("The requested operation failed due to quota operation is still in progress.")] Public Const ERROR_QUOTA_ACTIVITY = 810
[Description("Access to the specified handle has been revoked.")] Public Const ERROR_HANDLE_REVOKED = 811
[Description("The callback function must be invoked inline.")] Public Const ERROR_CALLBACK_INVOKE_INLINE = 812
[Description("The specified CPU Set IDs are invalid.")] Public Const ERROR_CPU_SET_INVALID = 813
[Description("The specified enclave has not yet been terminated.")] Public Const ERROR_ENCLAVE_NOT_TERMINATED = 814
[Description("An attempt was made to access protected memory in violation of its secure access policy.")] Public Const ERROR_ENCLAVE_VIOLATION = 815
[Description("Multiple mappings to shared resource(s) on a server, using more than one transport, are not allowed. Use a single transport for all mappings to a server and try again.")] Public Const ERROR_SERVER_TRANSPORT_CONFLICT = 816
[Description("Multiple mappings to shared resource(s) on a server, using different certificate validation preferences, are not allowed. Use the same preference for all mappings to a server and try again.")] Public Const ERROR_CERTIFICATE_VALIDATION_PREFERENCE_CONFLICT = 817
[Description("The specified copy of the requested data could not be read.")] Public Const ERROR_FT_READ_FROM_COPY_FAILURE = 818
[Description("The section creation request was failed because it would have been satisfied with a direct map and the caller explicitly signified this was not wanted.")] Public Const ERROR_SECTION_DIRECT_MAP_ONLY = 819
[Description("Access to the extended attribute was denied.")] Public Const ERROR_EA_ACCESS_DENIED = 994
[Description("The I/O operation has been aborted because of either a thread exit or an application request")] Public Const ERROR_OPERATION_ABORTED As Long = 995
[Description("Overlapped I/O event is not in a signalled state")] Public Const ERROR_IO_INCOMPLETE As Long = 996
[Description("Overlapped I/O operation is in progress")] Public Const ERROR_IO_PENDING As Long = 997
[Description("Invalid access to memory location")] Public Const ERROR_NOACCESS As Long = 998
[Description("Error performing inpage operation")] Public Const ERROR_SWAPERROR As Long = 999
[Description("Recursion too deep, stack overflowed")] Public Const ERROR_STACK_OVERFLOW As Long = 1001
[Description("The window cannot act on the sent message")] Public Const ERROR_INVALID_MESSAGE As Long = 1002
[Description("Cannot complete this function")] Public Const ERROR_CAN_NOT_COMPLETE As Long = 1003
[Description("Invalid flags")] Public Const ERROR_INVALID_FLAGS As Long = 1004
[Description("The volume does not contain a recognized file system")] Public Const ERROR_UNRECOGNIZED_VOLUME As Long = 1005
[Description("The volume for a file has been externally altered such that the opened file is no longer valid")] Public Const ERROR_FILE_INVALID As Long = 1006
[Description("The requested operation cannot be performed in full-screen mode")] Public Const ERROR_FULLSCREEN_MODE As Long = 1007
[Description("An attempt was made to reference a token that does not exist")] Public Const ERROR_NO_TOKEN As Long = 1008
[Description("The configuration registry database is corrupt")] Public Const ERROR_BADDB As Long = 1009
[Description("The configuration registry key is invalid")] Public Const ERROR_BADKEY As Long = 1010
[Description("The configuration registry key could not be opened")] Public Const ERROR_CANTOPEN As Long = 1011
[Description("The configuration registry key could not be read")] Public Const ERROR_CANTREAD As Long = 1012
[Description("The configuration registry key could not be written")] Public Const ERROR_CANTWRITE As Long = 1013
[Description("One of the files in the Registry database was successfully recovered by use of a log or alternate copy")] Public Const ERROR_REGISTRY_RECOVERED As Long = 1014
[Description("The structure a Registry data file is corrupt, or the system image of the file is corrupt, or the file could not be recovered")] Public Const ERROR_REGISTRY_CORRUPT As Long = 1015
[Description("An I/O operation initiated by the Registry failed unrecoverably")] Public Const ERROR_REGISTRY_IO_FAILED As Long = 1016
[Description("The system has attempted to load or restore a file into the Registry, but the specified file is not in a Registry file format")] Public Const ERROR_NOT_REGISTRY_FILE As Long = 1017
[Description("Illegal operation attempted on a Registry key which has been marked for deletion")] Public Const ERROR_KEY_DELETED As Long = 1018
[Description("System could not allocate the required space in a Registry log")] Public Const ERROR_NO_LOG_SPACE As Long = 1019
[Description("Cannot create a symbolic link in a Registry key that already has subkeys or values")] Public Const ERROR_KEY_HAS_CHILDREN As Long = 1020
[Description("Cannot create a stable subkey under a volatile parent key")] Public Const ERROR_CHILD_MUST_BE_VOLATILE As Long = 1021
[Description("A notify change request is being completed and the caller now needs to enumerate the files to find the changes")] Public Const ERROR_NOTIFY_ENUM_DIR As Long = 1022
[Description("A stop control has been sent to a service which other running services are dependent on")] Public Const ERROR_DEPENDENT_SERVICES_RUNNING As Long = 1051
[Description("The requested control is not valid for this service")] Public Const ERROR_INVALID_SERVICE_CONTROL As Long = 1052
[Description("The service did not respond to the start or control request in a timely fashion")] Public Const ERROR_SERVICE_REQUEST_TIMEOUT As Long = 1053
[Description("A thread could not be created for the service")] Public Const ERROR_SERVICE_NO_THREAD As Long = 1054
[Description("The service database is locked")] Public Const ERROR_SERVICE_DATABASE_LOCKED As Long = 1055
[Description("An instance of the service is already running")] Public Const ERROR_SERVICE_ALREADY_RUNNING As Long = 1056
[Description("The account name is invalid or does not exist")] Public Const ERROR_INVALID_SERVICE_ACCOUNT As Long = 1057
[Description("The specified service is disabled and cannot be started")] Public Const ERROR_SERVICE_DISABLED As Long = 1058
[Description("Circular service dependency was specified")] Public Const ERROR_CIRCULAR_DEPENDENCY As Long = 1059
[Description("The specified service does not exist as an installed service")] Public Const ERROR_SERVICE_DOES_NOT_EXIST As Long = 1060
[Description("The service cannot accept control messages at this time")] Public Const ERROR_SERVICE_CANNOT_ACCEPT_CTRL As Long = 1061
[Description("The service has not been started")] Public Const ERROR_SERVICE_NOT_ACTIVE As Long = 1062
[Description("The service process could not connect to the service controller")] Public Const ERROR_FAILED_SERVICE_CONTROLLER_CONNECT As Long = 1063
[Description("An exception occurred in the service when handling the control request")] Public Const ERROR_EXCEPTION_IN_SERVICE As Long = 1064
[Description("The database specified does not exist")] Public Const ERROR_DATABASE_DOES_NOT_EXIST As Long = 1065
[Description("The service has returned a service-specific error code")] Public Const ERROR_SERVICE_SPECIFIC_ERROR As Long = 1066
[Description("The process terminated unexpectedly")] Public Const ERROR_PROCESS_ABORTED As Long = 1067
[Description("The dependency service or group failed to start")] Public Const ERROR_SERVICE_DEPENDENCY_FAIL As Long = 1068
[Description("The service did not start due to a logon failure")] Public Const ERROR_SERVICE_LOGON_FAILED As Long = 1069
[Description("After starting, the service hung in a start-pending state")] Public Const ERROR_SERVICE_START_HANG As Long = 1070
[Description("The specified service database lock is invalid")] Public Const ERROR_INVALID_SERVICE_LOCK As Long = 1071
[Description("The specified service has been marked for deletion")] Public Const ERROR_SERVICE_MARKED_FOR_DELETE As Long = 1072
[Description("The specified service already exists")] Public Const ERROR_SERVICE_EXISTS As Long = 1073
[Description("The system is currently running with the last-known-good configuration")] Public Const ERROR_ALREADY_RUNNING_LKG As Long = 1074
[Description("The dependency service does not exist or has been marked for deletion")] Public Const ERROR_SERVICE_DEPENDENCY_DELETED As Long = 1075
[Description("The current boot has already been accepted for use as the last-known-good control set")] Public Const ERROR_BOOT_ALREADY_ACCEPTED As Long = 1076
[Description("No attempts to start the service have been made since the last boot")] Public Const ERROR_SERVICE_NEVER_STARTED As Long = 1077
[Description("The name is already in use as either a service name or a service display name")] Public Const ERROR_DUPLICATE_SERVICE_NAME As Long = 1078
[Description("The account specified for this service is different from the account specified for other services running in the same process")] Public Const ERROR_DIFFERENT_SERVICE_ACCOUNT As Long = 1079
[Description("Failure actions can only be set for Win32 services, not for drivers")] Public Const ERROR_CANNOT_DETECT_DRIVER_FAILURE As Long = 1080
[Description("This service runs in the same process as the service control manager")] Public Const ERROR_CANNOT_DETECT_PROCESS_ABORT As Long = 1081
[Description("No recovery program has been configured for this service")] Public Const ERROR_NO_RECOVERY_PROGRAM As Long = 1082
[Description("The physical end of the tape has been reached")] Public Const ERROR_END_OF_MEDIA As Long = 1100
[Description("A tape access reached a filemark")] Public Const ERROR_FILEMARK_DETECTED As Long = 1101
[Description("Beginning of tape or partition was encountered")] Public Const ERROR_BEGINNING_OF_MEDIA As Long = 1102
[Description("A tape access reached the end of a set of files")] Public Const ERROR_SETMARK_DETECTED As Long = 1103
[Description("No more data is on the tape")] Public Const ERROR_NO_DATA_DETECTED As Long = 1104
[Description("Tape could not be partitioned")] Public Const ERROR_PARTITION_FAILURE As Long = 1105
[Description("When accessing a new tape of a multivolume partition, the current blocksize is incorrect")] Public Const ERROR_INVALID_BLOCK_LENGTH As Long = 1106
[Description("Tape partition information could not be found when loading a tape")] Public Const ERROR_DEVICE_NOT_PARTITIONED As Long = 1107
[Description("Unable to lock the media eject mechanism")] Public Const ERROR_UNABLE_TO_LOCK_MEDIA As Long = 1108
[Description("Unable to unload the media")] Public Const ERROR_UNABLE_TO_UNLOAD_MEDIA As Long = 1109
[Description("Media in drive may have changed")] Public Const ERROR_MEDIA_CHANGED As Long = 1110
[Description("The I/O bus was reset")] Public Const ERROR_BUS_RESET As Long = 1111
[Description("No media in drive")] Public Const ERROR_NO_MEDIA_IN_DRIVE As Long = 1112
[Description("No mapping for the Unicode character exists in the target multi-byte code page")] Public Const ERROR_NO_UNICODE_TRANSLATION As Long = 1113
[Description("A dynamic link library (DLL) initialization routine failed")] Public Const ERROR_DLL_INIT_FAILED As Long = 1114
[Description("A system shutdown is in progress")] Public Const ERROR_SHUTDOWN_IN_PROGRESS As Long = 1115
[Description("Unable to abort the system shutdown because no shutdown was in progress")] Public Const ERROR_NO_SHUTDOWN_IN_PROGRESS As Long = 1116
[Description("The request could not be performed because of an I/O device error")] Public Const ERROR_IO_DEVICE As Long = 1117
[Description("No serial device was successfully initialized. The serial driver will unload")] Public Const ERROR_SERIAL_NO_DEVICE As Long = 1118
[Description("Unable to open a device that was sharing an interrupt request (IRQ) with other devices")] Public Const ERROR_IRQ_BUSY As Long = 1119
[Description("A serial I/O operation was completed by another write to the serial port")] Public Const ERROR_MORE_WRITES As Long = 1120
[Description("A serial I/O operation completed because the time-out period expired")] Public Const ERROR_COUNTER_TIMEOUT As Long = 1121
[Description("No ID address mark was found on the floppy disk")] Public Const ERROR_FLOPPY_ID_MARK_NOT_FOUND As Long = 1122
[Description("Mismatch between the floppy disk sector ID field and the floppy disk controller track address")] Public Const ERROR_FLOPPY_WRONG_CYLINDER As Long = 1123
[Description("The floppy disk controller reported an error that is not recognized by the floppy disk driver")] Public Const ERROR_FLOPPY_UNKNOWN_ERROR As Long = 1124
[Description("The floppy disk controller returned inconsistent results in its registers")] Public Const ERROR_FLOPPY_BAD_REGISTERS As Long = 1125
[Description("While accessing the hard disk, a recalibrate operation failed, even after retries")] Public Const ERROR_DISK_RECALIBRATE_FAILED As Long = 1126
[Description("While accessing the hard disk, a disk operation failed even after retries")] Public Const ERROR_DISK_OPERATION_FAILED As Long = 1127
[Description("While accessing the hard disk, a disk controller reset was needed, but even that failed")] Public Const ERROR_DISK_RESET_FAILED As Long = 1128
[Description("Physical end of tape encountered")] Public Const ERROR_EOM_OVERFLOW As Long = 1129
[Description("Not enough server storage is available to process this command")] Public Const ERROR_NOT_ENOUGH_SERVER_MEMORY As Long = 1130
[Description("A potential deadlock condition has been detected")] Public Const ERROR_POSSIBLE_DEADLOCK As Long = 1131
[Description("The base address or the file offset specified does not have the proper alignment")] Public Const ERROR_MAPPED_ALIGNMENT As Long = 1132
[Description("An attempt to change the system power state was vetoed by another application or driver")] Public Const ERROR_SET_POWER_STATE_VETOED As Long = 1140
[Description("The system BIOS failed an attempt to change the system power state")] Public Const ERROR_SET_POWER_STATE_FAILED As Long = 1141
[Description("The specified program requires a newer version of Windows")] Public Const ERROR_OLD_WIN_VERSION As Long = 1150
[Description("The specified program is not a Windows or MS-DOS program")] Public Const ERROR_APP_WRONG_OS As Long = 1151
[Description("Cannot start more than one instance of the specified program")] Public Const ERROR_SINGLE_INSTANCE_APP As Long = 1152
[Description("Cannot start more than one instance of the specified program")] Public Const ERROR_RMODE_APP As Long = 1153
[Description("One of the library files needed to run this application is damaged")] Public Const ERROR_INVALID_DLL As Long = 1154
[Description("No application is associated with the specified file for this operation")] Public Const ERROR_NO_ASSOCIATION As Long = 1155
[Description("An error occurred in sending the command to the application")] Public Const ERROR_DDE_FAIL As Long = 1156
[Description("One of the library files needed to run this application cannot be found")] Public Const ERROR_DLL_NOT_FOUND As Long = 1157
[Description("The current process has used all of its system allowance of handles for Window Manager objects")] Public Const ERROR_NO_MORE_USER_HANDLES As Long = 1158
[Description("The message can be used only with synchronous operations")] Public Const ERROR_MESSAGE_SYNC_ONLY As Long = 1159
[Description("The indicated source element has no media")] Public Const ERROR_SOURCE_ELEMENT_EMPTY As Long = 1160
[Description("The indicated destination element already contains media")] Public Const ERROR_DESTINATION_ELEMENT_FULL As Long = 1161
[Description("The indicated element does not exist")] Public Const ERROR_ILLEGAL_ELEMENT_ADDRESS As Long = 1162
[Description("The indicated element is part of a magazine that is not present")] Public Const ERROR_MAGAZINE_NOT_PRESENT As Long = 1163
[Description("The indicated device requires reinitialization due to hardware errors")] Public Const ERROR_DEVICE_REINITIALIZATION_NEEDED As Long = 1164
[Description("The device has indicated that cleaning is required before further operations are attempted")] Public Const ERROR_DEVICE_REQUIRES_CLEANING As Long = 1165
[Description("The device has indicated that its door is open")] Public Const ERROR_DEVICE_DOOR_OPEN As Long = 1166
[Description("The device is not connected")] Public Const ERROR_DEVICE_NOT_CONNECTED As Long = 1167
[Description("Element not found")] Public Const ERROR_NOT_FOUND As Long = 1168
[Description("There was no match for the specified key in the index")] Public Const ERROR_NO_MATCH As Long = 1169
[Description("The property set specified does not exist on the object")] Public Const ERROR_SET_NOT_FOUND As Long = 1170
[Description("The point passed to GetMouseMovePoints is not in the buffer")] Public Const ERROR_POINT_NOT_FOUND As Long = 1171
[Description("The tracking (workstation) service is not running")] Public Const ERROR_NO_TRACKING_SERVICE As Long = 1172
[Description("The Volume ID could not be found")] Public Const ERROR_NO_VOLUME_ID As Long = 1173
[Description("Unable to remove the file to be replaced.")] Public Const ERROR_UNABLE_TO_REMOVE_REPLACED = 1175
[Description("Unable to move the replacement file to the file to be replaced. The file to be replaced has retained its original name.")] Public Const ERROR_UNABLE_TO_MOVE_REPLACEMENT = 1176
[Description("Unable to move the replacement file to the file to be replaced. The file to be replaced has been renamed using the backup name.")] Public Const ERROR_UNABLE_TO_MOVE_REPLACEMENT_2 = 1177
[Description("The volume change journal is being deleted.")] Public Const ERROR_JOURNAL_DELETE_IN_PROGRESS = 1178
[Description("The volume change journal is not active.")] Public Const ERROR_JOURNAL_NOT_ACTIVE = 1179
[Description("A file was found, but it may not be the correct file.")] Public Const ERROR_POTENTIAL_FILE_FOUND = 1180
[Description("The journal entry has been deleted from the journal.")] Public Const ERROR_JOURNAL_ENTRY_DELETED = 1181
[Description("An attempt was made to access a partition that has begun termination.")] Public Const ERROR_PARTITION_TERMINATING = 1184
[Description("A system shutdown has already been scheduled.")] Public Const ERROR_SHUTDOWN_IS_SCHEDULED = 1190
[Description("The system shutdown cannot be initiated because there are other users logged on to the computer.")] Public Const ERROR_SHUTDOWN_USERS_LOGGED_ON = 1191
[Description("The system shutdown cannot safely proceed without enabling node maintenance mode for cluster node and waiting for the drain to complete.")] Public Const ERROR_SHUTDOWN_DISKS_NOT_IN_MAINTENANCE_MODE = 1192
[Description("The specified device name is invalid")] Public Const ERROR_BAD_DEVICE As Long = 1200
[Description("The device is not currently connected but it is a remembered connection")] Public Const ERROR_CONNECTION_UNAVAIL As Long = 1201
[Description("An attempt was made to remember a device that had previously been remembered")] Public Const ERROR_DEVICE_ALREADY_REMEMBERED As Long = 1202
[Description("No network provider accepted the given network path")] Public Const ERROR_NO_NET_OR_BAD_PATH As Long = 1203
[Description("The specified network provider name is invalid")] Public Const ERROR_BAD_PROVIDER As Long = 1204
[Description("Unable to open the network connection profile")] Public Const ERROR_CANNOT_OPEN_PROFILE As Long = 1205
[Description("The network connection profile is corrupt")] Public Const ERROR_BAD_PROFILE As Long = 1206
[Description("Cannot enumerate a non-container")] Public Const ERROR_NOT_CONTAINER As Long = 1207
[Description("An extended error has occurred")] Public Const ERROR_EXTENDED_ERROR As Long = 1208
[Description("The format of the specified group name is invalid")] Public Const ERROR_INVALID_GROUPNAME As Long = 1209
[Description("The format of the specified computer name is invalid")] Public Const ERROR_INVALID_COMPUTERNAME As Long = 1210
[Description("The format of the specified event name is invalid")] Public Const ERROR_INVALID_EVENTNAME As Long = 1211
[Description("The format of the specified domain name is invalid")] Public Const ERROR_INVALID_DOMAINNAME As Long = 1212
[Description("The format of the specified service name is invalid")] Public Const ERROR_INVALID_SERVICENAME As Long = 1213
[Description("The format of the specified network name is invalid")] Public Const ERROR_INVALID_NETNAME As Long = 1214
[Description("The format of the specified share name is invalid")] Public Const ERROR_INVALID_SHARENAME As Long = 1215
[Description("The format of the specified password is invalid")] Public Const ERROR_INVALID_PASSWORDNAME As Long = 1216
[Description("The format of the specified message name is invalid")] Public Const ERROR_INVALID_MESSAGENAME As Long = 1217
[Description("The format of the specified message destination is invalid")] Public Const ERROR_INVALID_MESSAGEDEST As Long = 1218
[Description("The credentials supplied conflict with an existing set of credentials")] Public Const ERROR_SESSION_CREDENTIAL_CONFLICT As Long = 1219
[Description("An attempt was made to establish a session to a network server, but there are already too many sessions established")] Public Const ERROR_REMOTE_SESSION_LIMIT_EXCEEDED As Long = 1220
[Description("The workgroup or domain name is already in use by another computer on the network")] Public Const ERROR_DUP_DOMAINNAME As Long = 1221
[Description("The network is not present or not started")] Public Const ERROR_NO_NETWORK As Long = 1222
[Description("The operation was cancelled by the user")] Public Const ERROR_CANCELLED As Long = 1223
[Description("The requested operation cannot be performed on a file with a user mapped section open")] Public Const ERROR_USER_MAPPED_FILE As Long = 1224
[Description("The remote system refused the network connection")] Public Const ERROR_CONNECTION_REFUSED As Long = 1225
[Description("The network connection was gracefully closed")] Public Const ERROR_GRACEFUL_DISCONNECT As Long = 1226
[Description("The network transport endpoint already has an address associated with it")] Public Const ERROR_ADDRESS_ALREADY_ASSOCIATED As Long = 1227
[Description("An address has not yet been associated with the network endpoint")] Public Const ERROR_ADDRESS_NOT_ASSOCIATED As Long = 1228
[Description("An operation was attempted on a non-existent network connection")] Public Const ERROR_CONNECTION_INVALID As Long = 1229
[Description("An invalid operation was attempted on an active network connection")] Public Const ERROR_CONNECTION_ACTIVE As Long = 1230
[Description("The remote network is not reachable by the transport")] Public Const ERROR_NETWORK_UNREACHABLE As Long = 1231
[Description("The remote system is not reachable by the transport")] Public Const ERROR_HOST_UNREACHABLE As Long = 1232
[Description("The remote system does not support the transport protocol")] Public Const ERROR_PROTOCOL_UNREACHABLE As Long = 1233
[Description("No service is operating at the destination network endpoint on the remote system")] Public Const ERROR_PORT_UNREACHABLE As Long = 1234
[Description("The request was aborted")] Public Const ERROR_REQUEST_ABORTED As Long = 1235
[Description("The network connection was aborted by the local system")] Public Const ERROR_CONNECTION_ABORTED As Long = 1236
[Description("The operation could not be completed. A retry should be performed")] Public Const ERROR_RETRY As Long = 1237
[Description("A connection to the server could not be made because the limit for this account has been reached")] Public Const ERROR_CONNECTION_COUNT_LIMIT As Long = 1238
[Description("Attempting to login during an unauthorized time of day for this account")] Public Const ERROR_LOGIN_TIME_RESTRICTION As Long = 1239
[Description("The account is not authorized to login from this station")] Public Const ERROR_LOGIN_WKSTA_RESTRICTION As Long = 1240
[Description("The network address could not be used for the operation requested")] Public Const ERROR_INCORRECT_ADDRESS As Long = 1241
[Description("The service is already registered")] Public Const ERROR_ALREADY_REGISTERED As Long = 1242
[Description("The specified service does not exist")] Public Const ERROR_SERVICE_NOT_FOUND As Long = 1243
[Description("The operation being requested was not performed because the user has not been authenticated")] Public Const ERROR_NOT_AUTHENTICATED As Long = 1244
[Description("The operation being requested was not performed because the user has not logged on to the network")] Public Const ERROR_NOT_LOGGED_ON As Long = 1245
[Description("Return that wants caller to continue with work in progress")] Public Const ERROR_CONTINUE As Long = 1246
[Description("An attempt was made to perform an initialization operation when initialization has already been completed")] Public Const ERROR_ALREADY_INITIALIZED As Long = 1247
[Description("No more local devices")] Public Const ERROR_NO_MORE_DEVICES As Long = 1248
[Description("The specified site does not exist")] Public Const ERROR_NO_SUCH_SITE As Long = 1249
[Description("A domain controller with the specified name already exists")] Public Const ERROR_DOMAIN_CONTROLLER_EXISTS As Long = 1250
[Description("This operation is supported only when you are connected to the server.")] Public Const ERROR_ONLY_IF_CONNECTED As Long = 1251
[Description("The group policy framework should call the extension even if there are no changes.")] Public Const ERROR_OVERRIDE_NOCHANGES = 1252
[Description("The specified user does not have a valid profile.")] Public Const ERROR_BAD_USER_PROFILE = 1253
[Description("This operation is not supported on a computer running Windows Server 2003 for Small Business Server")] Public Const ERROR_NOT_SUPPORTED_ON_SBS = 1254
[Description("The server machine is shutting down.")] Public Const ERROR_SERVER_SHUTDOWN_IN_PROGRESS = 1255
[Description("The remote system is not available. For information about network troubleshooting, see Windows Help.")] Public Const ERROR_HOST_DOWN = 1256
[Description("The security identifier provided is not from an account domain.")] Public Const ERROR_NON_ACCOUNT_SID = 1257
[Description("The security identifier provided does not have a domain component.")] Public Const ERROR_NON_DOMAIN_SID = 1258
[Description("AppHelp dialog canceled thus preventing the application from starting.")] Public Const ERROR_APPHELP_BLOCK = 1259
[Description("This program is blocked by group policy. For more information, contact your system administrator.")] Public Const ERROR_ACCESS_DISABLED_BY_POLICY = 1260
[Description("A program attempt to use an invalid register value. Normally caused by an uninitialized register. This error is Itanium specific.")] Public Const ERROR_REG_NAT_CONSUMPTION = 1261
[Description("The share is currently offline or does not exist.")] Public Const ERROR_CSCSHARE_OFFLINE = 1262
[Description("The Kerberos protocol encountered an error while validating the KDC certificate during smartcard logon. There is more information in the system event log.")] Public Const ERROR_PKINIT_FAILURE = 1263
[Description("The Kerberos protocol encountered an error while attempting to utilize the smartcard subsystem.")] Public Const ERROR_SMARTCARD_SUBSYSTEM_FAILURE = 1264
[Description("The system cannot contact a domain controller to service the authentication request. Please try again later.")] Public Const ERROR_DOWNGRADE_DETECTED = 1265
[Description("The machine is locked and cannot be shut down without the force option.")] Public Const ERROR_MACHINE_LOCKED = 1271
[Description("You can't access this shared folder because your organization's security policies block unauthenticated guest access. These policies help protect your PC from unsafe or malicious devices on the network.")] Public Const ERROR_SMB_GUEST_LOGON_BLOCKED = 1272
[Description("An application-defined callback gave invalid data when called.")] Public Const ERROR_CALLBACK_SUPPLIED_INVALID_DATA = 1273
[Description("The group policy framework should call the extension in the synchronous foreground policy refresh.")] Public Const ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED = 1274
[Description("This driver has been blocked from loading")] Public Const ERROR_DRIVER_BLOCKED = 1275
[Description("A dynamic link library (DLL) referenced a module that was neither a DLL nor the process's executable image.")] Public Const ERROR_INVALID_IMPORT_OF_NON_DLL = 1276
[Description("Windows cannot open this program since it has been disabled.")] Public Const ERROR_ACCESS_DISABLED_WEBBLADE = 1277
[Description("Windows cannot open this program because the license enforcement system has been tampered with or become corrupted.")] Public Const ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER = 1278
[Description("A transaction recover failed.")] Public Const ERROR_RECOVERY_FAILURE = 1279
[Description("The current thread has already been converted to a fiber.")] Public Const ERROR_ALREADY_FIBER = 1280
[Description("The current thread has already been converted from a fiber.")] Public Const ERROR_ALREADY_THREAD = 1281
[Description("The system detected an overrun of a stack-based buffer in this application. This overrun could potentially allow a malicious user to gain control of this application.")] Public Const ERROR_STACK_BUFFER_OVERRUN = 1282
[Description("Data present in one of the parameters is more than the function can operate on.")] Public Const ERROR_PARAMETER_QUOTA_EXCEEDED = 1283
[Description("An attempt to do an operation on a debug object failed because the object is in the process of being deleted.")] Public Const ERROR_DEBUGGER_INACTIVE = 1284
[Description("An attempt to delay-load a .dll or get a function address in a delay-loaded .dll failed.")] Public Const ERROR_DELAY_LOAD_FAILED = 1285
[Description("%1 is a 16-bit application. You do not have permissions to execute 16-bit applications. Check your permissions with your system administrator.")] Public Const ERROR_VDM_DISALLOWED = 1286
[Description("Insufficient information exists to identify the cause of failure.")] Public Const ERROR_UNIDENTIFIED_ERROR = 1287
[Description("The parameter passed to a C runtime function is incorrect.")] Public Const ERROR_INVALID_CRUNTIME_PARAMETER = 1288
[Description("The operation occurred beyond the valid data length of the file.")] Public Const ERROR_BEYOND_VDL = 1289
[Description("The service start failed since one or more services in the same process have an incompatible service SID type setting. A service with restricted service SID type can only coexist in the same process with other services with a restricted SID type. If the service SID type for this service was just configured, the hosting process must be restarted in order to start this service.")] Public Const ERROR_INCOMPATIBLE_SERVICE_SID_TYPE = 1290
[Description("The process hosting the driver for this device has been terminated.")] Public Const ERROR_DRIVER_PROCESS_TERMINATED = 1291
[Description("An operation attempted to exceed an implementation-defined limit.")] Public Const ERROR_IMPLEMENTATION_LIMIT = 1292
[Description("Either the target process, or the target thread's containing process, is a protected process.")] Public Const ERROR_PROCESS_IS_PROTECTED = 1293
[Description("The service notification client is lagging too far behind the current state of services in the machine.")] Public Const ERROR_SERVICE_NOTIFY_CLIENT_LAGGING = 1294
[Description("To free up disk space, move files to a different location or delete unnecessary files. For more information, contact your system administrator.")] Public Const ERROR_DISK_QUOTA_EXCEEDED = 1295
[Description("The requested file operation failed because the storage policy blocks that type of file. For more information, contact your system administrator.")] Public Const ERROR_CONTENT_BLOCKED = 1296
[Description("You may use the Services Microsoft Management Console (MMC) snap-in (services.msc) and the Local Security Settings MMC snap-in (secpol.msc) to view the service configuration and the account configuration.")] Public Const ERROR_INCOMPATIBLE_SERVICE_PRIVILEGE = 1297
[Description("A thread involved in this operation appears to be unresponsive.")] Public Const ERROR_APP_HANG = 1298
[Description("Indicates a particular Security ID may not be assigned as the label of an object.")] Public Const ERROR_INVALID_LABEL = 1299
[Description("Not all privileges referenced are assigned to the caller")] Public Const ERROR_NOT_ALL_ASSIGNED As Long = 1300
[Description("Some mapping between account names and security IDs was not done")] Public Const ERROR_SOME_NOT_MAPPED As Long = 1301
[Description("No system quota limits are specifically set for this account")] Public Const ERROR_NO_QUOTAS_FOR_ACCOUNT As Long = 1302
[Description("No encryption key is available. A well-known encryption key was returned")] Public Const ERROR_LOCAL_USER_SESSION_KEY As Long = 1303
[Description("The Windows NT password is too complex to be converted to a LAN Manager password, and a NULL string is returned")] Public Const ERROR_NULL_LM_PASSWORD As Long = 1304
[Description("The revision level is unknown")] Public Const ERROR_UNKNOWN_REVISION As Long = 1305
[Description("Indicates two revision levels are incompatible")] Public Const ERROR_REVISION_MISMATCH As Long = 1306
[Description("This security ID may not be assigned as the owner of this object")] Public Const ERROR_INVALID_OWNER As Long = 1307
[Description("This security ID may not be assigned as the primary group of an object")] Public Const ERROR_INVALID_PRIMARY_GROUP As Long = 1308
[Description("An attempt has been made to operate on an impersonation token by a thread that is not currently impersonating a client")] Public Const ERROR_NO_IMPERSONATION_TOKEN As Long = 1309
[Description("The group may not be disabled")] Public Const ERROR_CANT_DISABLE_MANDATORY As Long = 1310
[Description("There are currently no logon servers available to service the logon request")] Public Const ERROR_NO_LOGON_SERVERS As Long = 1311
[Description("A specified logon session does not exist. It may already have been terminated")] Public Const ERROR_NO_SUCH_LOGON_SESSION As Long = 1312
[Description("A specified privilege does not exist")] Public Const ERROR_NO_SUCH_PRIVILEGE As Long = 1313
[Description("A required privilege is not held by the client")] Public Const ERROR_PRIVILEGE_NOT_HELD As Long = 1314
 Public Const ERROR_INVALID_ACCOUNT_NAME As Long = 1315
[Description("The specified user already exists")] Public Const ERROR_USER_EXISTS As Long = 1316
[Description("The specified user does not exist")] Public Const ERROR_NO_SUCH_USER As Long = 1317
[Description("The specified group already exists")] Public Const ERROR_GROUP_EXISTS As Long = 1318
[Description("The specified group does not exist")] Public Const ERROR_NO_SUCH_GROUP As Long = 1319
[Description("Either the specified user account is already a member of the specified group, or the specified group cannot be deleted because it contains a member")] Public Const ERROR_MEMBER_IN_GROUP As Long = 1320
[Description("The specified user account is not a member of the specified group account")] Public Const ERROR_MEMBER_NOT_IN_GROUP As Long = 1321
[Description("The last remaining administration account cannot be disabled or deleted")] Public Const ERROR_LAST_ADMIN As Long = 1322
[Description("Unable to update the password. The value provided as the current password is incorrect")] Public Const ERROR_WRONG_PASSWORD As Long = 1323
[Description("Unable to update the password. The value provided for the new password contains values that are not allowed in passwords")] Public Const ERROR_ILL_FORMED_PASSWORD As Long = 1324
[Description("Unable to update the password because a password update rule has been violated")] Public Const ERROR_PASSWORD_RESTRICTION As Long = 1325
[Description("Logon failure: unknown user name or bad password")] Public Const ERROR_LOGON_FAILURE As Long = 1326
[Description("Logon failure: user account restriction")] Public Const ERROR_ACCOUNT_RESTRICTION As Long = 1327
[Description("Logon failure: account logon time restriction violation")] Public Const ERROR_INVALID_LOGON_HOURS As Long = 1328
[Description("Logon failure: user not allowed to log on to this computer")] Public Const ERROR_INVALID_WORKSTATION As Long = 1329
[Description("Logon failure: the specified account password has expired")] Public Const ERROR_PASSWORD_EXPIRED As Long = 1330
[Description("Logon failure: account currently disabled")] Public Const ERROR_ACCOUNT_DISABLED As Long = 1331
[Description("No mapping between account names and security IDs was done")] Public Const ERROR_NONE_MAPPED As Long = 1332
[Description("Too many local user identifiers (LUIDs) were requested at one time")] Public Const ERROR_TOO_MANY_LUIDS_REQUESTED As Long = 1333
[Description("No more local user identifiers (LUIDs) are available")] Public Const ERROR_LUIDS_EXHAUSTED As Long = 1334
[Description("The subauthority part of a security ID is invalid for this particular use")] Public Const ERROR_INVALID_SUB_AUTHORITY As Long = 1335
[Description("The access control list (ACL) structure is invalid")] Public Const ERROR_INVALID_ACL As Long = 1336
[Description("The security ID structure is invalid")] Public Const ERROR_INVALID_SID As Long = 1337
[Description("The security descriptor structure is invalid")] Public Const ERROR_INVALID_SECURITY_DESCR As Long = 1338
[Description("The inherited access control list (ACL) or access control entry (ACE) could not be built")] Public Const ERROR_BAD_INHERITANCE_ACL As Long = 1340
[Description("The server is currently disabled")] Public Const ERROR_SERVER_DISABLED As Long = 1341
[Description("The server is currently enabled")] Public Const ERROR_SERVER_NOT_DISABLED As Long = 1342
[Description("The value provided was an invalid value for an identifier authority")] Public Const ERROR_INVALID_ID_AUTHORITY As Long = 1343
[Description("No more memory is available for security information updates")] Public Const ERROR_ALLOTTED_SPACE_EXCEEDED As Long = 1344
[Description("The specified attributes are invalid, or incompatible with the attributes for the group as a whole")] Public Const ERROR_INVALID_GROUP_ATTRIBUTES As Long = 1345
[Description("Either a required impersonation level was not provided, or the provided impersonation level is invalid")] Public Const ERROR_BAD_IMPERSONATION_LEVEL As Long = 1346
[Description("Cannot open an anonymous level security token")] Public Const ERROR_CANT_OPEN_ANONYMOUS As Long = 1347
[Description("The validation information class requested was invalid")] Public Const ERROR_BAD_VALIDATION_CLASS As Long = 1348
[Description("The type of the token is inappropriate for its attempted use")] Public Const ERROR_BAD_TOKEN_TYPE As Long = 1349
[Description("Unable to perform a security operation on an object that has no associated security")] Public Const ERROR_NO_SECURITY_ON_OBJECT As Long = 1350
[Description("A Windows NT Server could not be contacted or objects within the domain are protected. Information could not be retrieved")] Public Const ERROR_CANT_ACCESS_DOMAIN_INFO As Long = 1351
[Description("The security account manager (SAM) or local security authority (LSA) server was in the wrong state to perform the security operation")] Public Const ERROR_INVALID_SERVER_STATE As Long = 1352
[Description("The domain was in the wrong state to perform the security operation")] Public Const ERROR_INVALID_DOMAIN_STATE As Long = 1353
[Description("This operation is only allowed for the Primary Domain Controller of the domain")] Public Const ERROR_INVALID_DOMAIN_ROLE As Long = 1354
[Description("The specified domain did not exist")] Public Const ERROR_NO_SUCH_DOMAIN As Long = 1355
[Description("The specified domain already exists")] Public Const ERROR_DOMAIN_EXISTS As Long = 1356
[Description("An attempt was made to exceed the limit on the number of domains per server")] Public Const ERROR_DOMAIN_LIMIT_EXCEEDED As Long = 1357
[Description("Unable to complete the requested operation because of catastrophic media failure or data structure corruption on the disk")] Public Const ERROR_INTERNAL_DB_CORRUPTION As Long = 1358
[Description("The security account database contains an internal inconsistency")] Public Const ERROR_INTERNAL_ERROR As Long = 1359
[Description("Generic access types were contained in an access mask which should already be mapped to nongeneric types")] Public Const ERROR_GENERIC_NOT_MAPPED As Long = 1360
[Description("A security descriptor is not in the right format (absolute or self-relative)")] Public Const ERROR_BAD_DESCRIPTOR_FORMAT As Long = 1361
[Description("The requested action is restricted for use by logon processes only. The calling process has not registered")] Public Const ERROR_NOT_LOGON_PROCESS As Long = 1362
[Description("Cannot start a new logon session with an ID that is already in use")] Public Const ERROR_LOGON_SESSION_EXISTS As Long = 1363
[Description("A specified authentication package is unknown")] Public Const ERROR_NO_SUCH_PACKAGE As Long = 1364
[Description("The logon session is not in a state that is consistent with the requested operation")] Public Const ERROR_BAD_LOGON_SESSION_STATE As Long = 1365
[Description("The logon session ID is already in use")] Public Const ERROR_LOGON_SESSION_COLLISION As Long = 1366
[Description("A logon request contained an invalid logon type value")] Public Const ERROR_INVALID_LOGON_TYPE As Long = 1367
[Description("Unable to impersonate using a named pipe until data has been read from that pipe")] Public Const ERROR_CANNOT_IMPERSONATE As Long = 1368
[Description("The transaction state of a registry subtree is incompatible with the requested operation")] Public Const ERROR_RXACT_INVALID_STATE As Long = 1369
[Description("An internal security database corruption has been encountered")] Public Const ERROR_RXACT_COMMIT_FAILURE As Long = 1370
[Description("Cannot perform this operation on built-in accounts")] Public Const ERROR_SPECIAL_ACCOUNT As Long = 1371
[Description("Cannot perform this operation on this built-in special group")] Public Const ERROR_SPECIAL_GROUP As Long = 1372
[Description("Cannot perform this operation on this built-in special user")] Public Const ERROR_SPECIAL_USER As Long = 1373
[Description("The user cannot be removed from a group because the group is currently the user's primary group")] Public Const ERROR_MEMBERS_PRIMARY_GROUP As Long = 1374
[Description("The token is already in use as a primary token")] Public Const ERROR_TOKEN_ALREADY_IN_USE As Long = 1375
[Description("The specified local group does not exist")] Public Const ERROR_NO_SUCH_ALIAS As Long = 1376
[Description("The specified account name is not a member of the local group")] Public Const ERROR_MEMBER_NOT_IN_ALIAS As Long = 1377
[Description("The specified account name is already a member of the local group")] Public Const ERROR_MEMBER_IN_ALIAS As Long = 1378
[Description("The specified local group already exists")] Public Const ERROR_ALIAS_EXISTS As Long = 1379
[Description("Logon failure: the user has not been granted the requested logon type at this computer")] Public Const ERROR_LOGON_NOT_GRANTED As Long = 1380
[Description("The maximum number of secrets that may be stored in a single system has been exceeded")] Public Const ERROR_TOO_MANY_SECRETS As Long = 1381
[Description("The length of a secret exceeds the maximum length allowed")] Public Const ERROR_SECRET_TOO_LONG As Long = 1382
[Description("The local security authority database contains an internal inconsistency")] Public Const ERROR_INTERNAL_DB_ERROR As Long = 1383
[Description("During a logon attempt, the user's security context accumulated too many security IDs")] Public Const ERROR_TOO_MANY_CONTEXT_IDS As Long = 1384
[Description("Logon failure: the user has not been granted the requested logon type at this computer")] Public Const ERROR_LOGON_TYPE_NOT_GRANTED As Long = 1385
[Description("A cross-encrypted password is necessary to change a user password")] Public Const ERROR_NT_CROSS_ENCRYPTION_REQUIRED As Long = 1386
[Description("A new member could not be added to a local group because the member does not exist")] Public Const ERROR_NO_SUCH_MEMBER As Long = 1387
[Description("A new member could not be added to a local group because the member has the wrong account type")] Public Const ERROR_INVALID_MEMBER As Long = 1388
[Description("Too many security IDs have been specified")] Public Const ERROR_TOO_MANY_SIDS As Long = 1389
[Description("A cross-encrypted password is necessary to change this user password")] Public Const ERROR_LM_CROSS_ENCRYPTION_REQUIRED As Long = 1390
[Description("Indicates an ACL contains no inheritable components")] Public Const ERROR_NO_INHERITANCE As Long = 1391
[Description("The file or directory is corrupted and unreadable")] Public Const ERROR_FILE_CORRUPT As Long = 1392
[Description("The disk structure is corrupted and unreadable")] Public Const ERROR_DISK_CORRUPT As Long = 1393
[Description("There is no user session key for the specified logon session")] Public Const ERROR_NO_USER_SESSION_KEY As Long = 1394
[Description("The service being accessed is licensed for a particular number of connections which has been exceeded")] Public Const ERROR_LICENSE_QUOTA_EXCEEDED As Long = 1395
[Description("The target account name is incorrect.")] Public Const ERROR_WRONG_TARGET_NAME = 1396
[Description("Mutual Authentication failed. The server's password is out of date at the domain controller.")] Public Const ERROR_MUTUAL_AUTH_FAILED = 1397
[Description("There is a time and/or date difference between the client and server.")] Public Const ERROR_TIME_SKEW = 1398
[Description("This operation cannot be performed on the current domain.")] Public Const ERROR_CURRENT_DOMAIN_NOT_ALLOWED = 1399
[Description("Invalid window handle")] Public Const ERROR_INVALID_WINDOW_HANDLE As Long = 1400
[Description("Invalid menu handle")] Public Const ERROR_INVALID_MENU_HANDLE As Long = 1401
[Description("Invalid cursor handle")] Public Const ERROR_INVALID_CURSOR_HANDLE As Long = 1402
[Description("Invalid accelerator table handle")] Public Const ERROR_INVALID_ACCEL_HANDLE As Long = 1403
[Description("Invalid hook handle")] Public Const ERROR_INVALID_HOOK_HANDLE As Long = 1404
[Description("Invalid handle to a multiple-window position structure")] Public Const ERROR_INVALID_DWP_HANDLE As Long = 1405
[Description("Cannot create a top-level child window")] Public Const ERROR_TLW_WITH_WSCHILD As Long = 1406
[Description("Cannot find window class")] Public Const ERROR_CANNOT_FIND_WND_CLASS As Long = 1407
[Description("Invalid window, belongs to other thread")] Public Const ERROR_WINDOW_OF_OTHER_THREAD As Long = 1408
[Description("Hot key is already registered")] Public Const ERROR_HOTKEY_ALREADY_REGISTERED As Long = 1409
[Description("Class already exists")] Public Const ERROR_CLASS_ALREADY_EXISTS As Long = 1410
[Description("Class does not exist")] Public Const ERROR_CLASS_DOES_NOT_EXIST As Long = 1411
[Description("Class still has open windows")] Public Const ERROR_CLASS_HAS_WINDOWS As Long = 1412
[Description("Invalid index")] Public Const ERROR_INVALID_INDEX As Long = 1413
[Description("Invalid icon handle")] Public Const ERROR_INVALID_ICON_HANDLE As Long = 1414
[Description("Using private DIALOG window words")] Public Const ERROR_PRIVATE_DIALOG_INDEX As Long = 1415
[Description("The listbox identifier was not found")] Public Const ERROR_LISTBOX_ID_NOT_FOUND As Long = 1416
[Description("No wildcards were found")] Public Const ERROR_NO_WILDCARD_CHARACTERS As Long = 1417
[Description("Thread does not have a clipboard open")] Public Const ERROR_CLIPBOARD_NOT_OPEN As Long = 1418
[Description("Hot key is not registered")] Public Const ERROR_HOTKEY_NOT_REGISTERED As Long = 1419
[Description("The window is not a valid dialog window")] Public Const ERROR_WINDOW_NOT_DIALOG As Long = 1420
[Description("Control ID not found")] Public Const ERROR_CONTROL_ID_NOT_FOUND As Long = 1421
[Description("Invalid message for a combo box because it does not have an edit control")] Public Const ERROR_INVALID_COMBOBOX_MESSAGE As Long = 1422
[Description("The window is not a combo box")] Public Const ERROR_WINDOW_NOT_COMBOBOX As Long = 1423
[Description("Height must be less than 256")] Public Const ERROR_INVALID_EDIT_HEIGHT As Long = 1424
[Description("Invalid device context (DC) handle")] Public Const ERROR_DC_NOT_FOUND As Long = 1425
[Description("Invalid hook procedure type")] Public Const ERROR_INVALID_HOOK_FILTER As Long = 1426
[Description("Invalid hook procedure")] Public Const ERROR_INVALID_FILTER_PROC As Long = 1427
[Description("Cannot set non-local hook without a module handle")] Public Const ERROR_HOOK_NEEDS_HMOD As Long = 1428
[Description("This hook procedure can only be set globally")] Public Const ERROR_GLOBAL_ONLY_HOOK As Long = 1429
[Description("The journal hook procedure is already installed")] Public Const ERROR_JOURNAL_HOOK_SET As Long = 1430
[Description("The hook procedure is not installed")] Public Const ERROR_HOOK_NOT_INSTALLED As Long = 1431
[Description("Invalid message for single-selection listbox")] Public Const ERROR_INVALID_LB_MESSAGE As Long = 1432
[Description("LB_SETCOUNT sent to non-lazy listbox")] Public Const ERROR_SETCOUNT_ON_BAD_LB As Long = 1433
[Description("This list box does not support tab stops")] Public Const ERROR_LB_WITHOUT_TABSTOPS As Long = 1434
[Description("Cannot destroy object created by another thread")] Public Const ERROR_DESTROY_OBJECT_OF_OTHER_THREAD As Long = 1435
[Description("Child windows cannot have menus")] Public Const ERROR_CHILD_WINDOW_MENU As Long = 1436
[Description("The window does not have a system menu")] Public Const ERROR_NO_SYSTEM_MENU As Long = 1437
[Description("Invalid message box style")] Public Const ERROR_INVALID_MSGBOX_STYLE As Long = 1438
[Description("Invalid system-wide (SPI_*) parameter")] Public Const ERROR_INVALID_SPI_VALUE As Long = 1439
[Description("Screen already locked")] Public Const ERROR_SCREEN_ALREADY_LOCKED As Long = 1440
[Description("All handles to windows in a multiple-window position structure must have the same parent")] Public Const ERROR_HWNDS_HAVE_DIFF_PARENT As Long = 1441
[Description("The window is not a child window")] Public Const ERROR_NOT_CHILD_WINDOW As Long = 1442
[Description("Invalid GW_* command")] Public Const ERROR_INVALID_GW_COMMAND As Long = 1443
[Description("Invalid thread identifier")] Public Const ERROR_INVALID_THREAD_ID As Long = 1444
[Description("Cannot process a message from a window that is not a multiple document interface (MDI) window")] Public Const ERROR_NON_MDICHILD_WINDOW As Long = 1445
[Description("Popup menu already active")] Public Const ERROR_POPUP_ALREADY_ACTIVE As Long = 1446
[Description("The window does not have scroll bars")] Public Const ERROR_NO_SCROLLBARS As Long = 1447
[Description("Scroll bar range cannot be greater than &H7FFF")] Public Const ERROR_INVALID_SCROLLBAR_RANGE As Long = 1448
[Description("Cannot show or remove the window in the way specified")] Public Const ERROR_INVALID_SHOWWIN_COMMAND As Long = 1449
[Description("Insufficient system resources exist to complete the requested service")] Public Const ERROR_NO_SYSTEM_RESOURCES As Long = 1450
[Description("Insufficient system resources exist to complete the requested service")] Public Const ERROR_NONPAGED_SYSTEM_RESOURCES As Long = 1451
[Description("Insufficient system resources exist to complete the requested service")] Public Const ERROR_PAGED_SYSTEM_RESOURCES As Long = 1452
[Description("Insufficient quota to complete the requested service")] Public Const ERROR_WORKING_SET_QUOTA As Long = 1453
[Description("Insufficient quota to complete the requested service")] Public Const ERROR_PAGEFILE_QUOTA As Long = 1454
[Description("The paging file is too small for this operation to complete")] Public Const ERROR_COMMITMENT_LIMIT As Long = 1455
[Description("A menu item was not found")] Public Const ERROR_MENU_ITEM_NOT_FOUND As Long = 1456
[Description("Invalid keyboard layout handle")] Public Const ERROR_INVALID_KEYBOARD_HANDLE As Long = 1457
[Description("Hook type not allowed")] Public Const ERROR_HOOK_TYPE_NOT_ALLOWED As Long = 1458
[Description("This operation requires an interactive window station")] Public Const ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION As Long = 1459
[Description("This operation returned because the timeout period expired")] Public Const ERROR_TIMEOUT As Long = 1460
[Description("Invalid monitor handle")] Public Const ERROR_INVALID_MONITOR_HANDLE As Long = 1461
[Description("Incorrect size argument.")] Public Const ERROR_INCORRECT_SIZE = 1462
[Description("The symbolic link cannot be followed because its type is disabled.")] Public Const ERROR_SYMLINK_CLASS_DISABLED = 1463
[Description("This application does not support the current operation on symbolic links.")] Public Const ERROR_SYMLINK_NOT_SUPPORTED = 1464
[Description("Windows was unable to parse the requested XML data.")] Public Const ERROR_XML_PARSE_ERROR = 1465
[Description("An error was encountered while processing an XML digital signature.")] Public Const ERROR_XMLDSIG_ERROR = 1466
[Description("This application must be restarted.")] Public Const ERROR_RESTART_APPLICATION = 1467
[Description("The caller made the connection request in the wrong routing compartment.")] Public Const ERROR_WRONG_COMPARTMENT = 1468
[Description("There was an AuthIP failure when attempting to connect to the remote host.")] Public Const ERROR_AUTHIP_FAILURE = 1469
[Description("Insufficient NVRAM resources exist to complete the requested service. A reboot might be required.")] Public Const ERROR_NO_NVRAM_RESOURCES = 1470
[Description("Unable to finish the requested operation because the specified process is not a GUI process.")] Public Const ERROR_NOT_GUI_PROCESS = 1471
[Description("The event log file is corrupted")] Public Const ERROR_EVENTLOG_FILE_CORRUPT As Long = 1500
[Description("No event log file could be opened, so the event logging service did not start")] Public Const ERROR_EVENTLOG_CANT_START As Long = 1501
[Description("The event log file is full")] Public Const ERROR_LOG_FILE_FULL As Long = 1502
[Description("The event log file has changed between read operations")] Public Const ERROR_EVENTLOG_FILE_CHANGED As Long = 1503
[Description("The specified Job already has a container assigned to it.")] Public Const ERROR_CONTAINER_ASSIGNED = 1504
[Description("The specified Job does not have a container assigned to it.")] Public Const ERROR_JOB_NO_CONTAINER = 1505
[Description("The specified task name is invalid.")] Public Const ERROR_INVALID_TASK_NAME = 1550
[Description("The specified task index is invalid.")] Public Const ERROR_INVALID_TASK_INDEX = 1551
[Description("The specified thread is already joining a task.")] Public Const ERROR_THREAD_ALREADY_IN_TASK = 1552
[Description("Failure accessing install service")] Public Const ERROR_INSTALL_SERVICE As Long = 1601
[Description("The user canceled the installation")] Public Const ERROR_INSTALL_USEREXIT As Long = 1602
[Description("Fatal error during installation")] Public Const ERROR_INSTALL_FAILURE As Long = 1603
[Description("Installation suspended, incomplete")] Public Const ERROR_INSTALL_SUSPEND As Long = 1604
[Description("Product code not registered")] Public Const ERROR_UNKNOWN_PRODUCT As Long = 1605
[Description("Feature ID not registered")] Public Const ERROR_UNKNOWN_FEATURE As Long = 1606
[Description("Component ID not registered")] Public Const ERROR_UNKNOWN_COMPONENT As Long = 1607
[Description("Unknown property")] Public Const ERROR_UNKNOWN_PROPERTY As Long = 1608
[Description("Handle is in an invalid state")] Public Const ERROR_INVALID_HANDLE_STATE As Long = 1609
[Description("Configuration data corrupt")] Public Const ERROR_BAD_CONFIGURATION As Long = 1610
[Description("Language not available")] Public Const ERROR_INDEX_ABSENT As Long = 1611
[Description("Install source unavailable")] Public Const ERROR_INSTALL_SOURCE_ABSENT As Long = 1612
[Description("Database version unsupported")] Public Const ERROR_BAD_DATABASE_VERSION As Long = 1613
[Description("Product is uninstalled")] Public Const ERROR_PRODUCT_UNINSTALLED As Long = 1614
[Description("SQL query syntax invalid or unsupported")] Public Const ERROR_BAD_QUERY_SYNTAX As Long = 1615
[Description("Record field does not exist")] Public Const ERROR_INVALID_FIELD As Long = 1616
[Description("The device has been removed.")] Public Const ERROR_DEVICE_REMOVED = 1617
[Description("Another installation is already in progress. Complete that installation before proceeding with this install.")] Public Const ERROR_INSTALL_ALREADY_RUNNING = 1618
[Description("This installation package could not be opened. Verify that the package exists and that you can access it, or contact the application vendor to verify that this is a valid Windows Installer package.")] Public Const ERROR_INSTALL_PACKAGE_OPEN_FAILED = 1619
[Description("This installation package could not be opened. Contact the application vendor to verify that this is a valid Windows Installer package.")] Public Const ERROR_INSTALL_PACKAGE_INVALID = 1620
[Description("There was an error starting the Windows Installer service user interface. Contact your support personnel.")] Public Const ERROR_INSTALL_UI_FAILURE = 1621
[Description("Error opening installation log file. Verify that the specified log file location exists and that you can write to it.")] Public Const ERROR_INSTALL_LOG_FAILURE = 1622
[Description("The language of this installation package is not supported by your system.")] Public Const ERROR_INSTALL_LANGUAGE_UNSUPPORTED = 1623
[Description("Error applying transforms. Verify that the specified transform paths are valid.")] Public Const ERROR_INSTALL_TRANSFORM_FAILURE = 1624
[Description("This installation is forbidden by system policy. Contact your system administrator.")] Public Const ERROR_INSTALL_PACKAGE_REJECTED = 1625
[Description("Function could not be executed.")] Public Const ERROR_FUNCTION_NOT_CALLED = 1626
[Description("Function failed during execution.")] Public Const ERROR_FUNCTION_FAILED = 1627
[Description("Invalid or unknown table specified.")] Public Const ERROR_INVALID_TABLE = 1628
[Description("Data supplied is of wrong type.")] Public Const ERROR_DATATYPE_MISMATCH = 1629
[Description("Data of this type is not supported.")] Public Const ERROR_UNSUPPORTED_TYPE = 1630
[Description("The Windows Installer service failed to start. Contact your support personnel.")] Public Const ERROR_CREATE_FAILED = 1631
[Description("The Temp folder is on a drive that is full or is inaccessible. Free up space on the drive or verify that you have write permission on the Temp folder.")] Public Const ERROR_INSTALL_TEMP_UNWRITABLE = 1632
[Description("This installation package is not supported by this processor type. Contact your product vendor.")] Public Const ERROR_INSTALL_PLATFORM_UNSUPPORTED = 1633
[Description("Component not used on this computer.")] Public Const ERROR_INSTALL_NOTUSED = 1634
[Description("This update package could not be opened. Verify that the update package exists and that you can access it, or contact the application vendor to verify that this is a valid Windows Installer update package.")] Public Const ERROR_PATCH_PACKAGE_OPEN_FAILED = 1635
[Description("This update package could not be opened. Contact the application vendor to verify that this is a valid Windows Installer update package.")] Public Const ERROR_PATCH_PACKAGE_INVALID = 1636
[Description("This update package cannot be processed by the Windows Installer service. You must install a Windows service pack that contains a newer version of the Windows Installer service.")] Public Const ERROR_PATCH_PACKAGE_UNSUPPORTED = 1637
[Description("Another version of this product is already installed. Installation of this version cannot continue. To configure or remove the existing version of this product, use Add/Remove Programs on the Control Panel.")] Public Const ERROR_PRODUCT_VERSION = 1638
[Description("Invalid command line argument. Consult the Windows Installer SDK for detailed command line help.")] Public Const ERROR_INVALID_COMMAND_LINE = 1639
[Description("Only administrators have permission to add, remove, or configure server software during a Terminal services remote session. If you want to install or configure software on the server, contact your network administrator.")] Public Const ERROR_INSTALL_REMOTE_DISALLOWED = 1640
[Description("The requested operation completed successfully. The system will be restarted so the changes can take effect.")] Public Const ERROR_SUCCESS_REBOOT_INITIATED = 1641
[Description("The upgrade cannot be installed by the Windows Installer service because the program to be upgraded may be missing, or the upgrade may update a different version of the program. Verify that the program to be upgraded exists on your computer and that you have the correct upgrade.")] Public Const ERROR_PATCH_TARGET_NOT_FOUND = 1642
[Description("The update package is not permitted by software restriction policy.")] Public Const ERROR_PATCH_PACKAGE_REJECTED = 1643
[Description("One or more customizations are not permitted by software restriction policy.")] Public Const ERROR_INSTALL_TRANSFORM_REJECTED = 1644
[Description("The Windows Installer does not permit installation from a Remote Desktop Connection.")] Public Const ERROR_INSTALL_REMOTE_PROHIBITED = 1645
[Description("Uninstallation of the update package is not supported.")] Public Const ERROR_PATCH_REMOVAL_UNSUPPORTED = 1646
[Description("The update is not applied to this product.")] Public Const ERROR_UNKNOWN_PATCH = 1647
[Description("No valid sequence could be found for the set of updates.")] Public Const ERROR_PATCH_NO_SEQUENCE = 1648
[Description("Update removal was disallowed by policy.")] Public Const ERROR_PATCH_REMOVAL_DISALLOWED = 1649
[Description("The XML update data is invalid.")] Public Const ERROR_INVALID_PATCH_XML = 1650
[Description("Windows Installer does not permit updating of managed advertised products. At least one feature of the product must be installed before applying the update.")] Public Const ERROR_PATCH_MANAGED_ADVERTISED_PRODUCT = 1651
[Description("The Windows Installer service is not accessible in Safe Mode. Please try again when your computer is not in Safe Mode or you can use System Restore to return your machine to a previous good state.")] Public Const ERROR_INSTALL_SERVICE_SAFEBOOT = 1652
[Description("A fail fast exception occurred. Exception handlers will not be invoked and the process will be terminated immediately.")] Public Const ERROR_FAIL_FAST_EXCEPTION = 1653
[Description("The app that you are trying to run is not supported on this version of Windows.")] Public Const ERROR_INSTALL_REJECTED = 1654
[Description("The operation was blocked as the process prohibits dynamic code generation.")] Public Const ERROR_DYNAMIC_CODE_BLOCKED = 1655
[Description("The objects are not identical.")] Public Const ERROR_NOT_SAME_OBJECT = 1656
[Description("The specified image file was blocked from loading because it does not enable a feature required by the process: Control Flow Guard.")] Public Const ERROR_STRICT_CFG_VIOLATION = 1657
[Description("The thread context could not be updated because this has been restricted for the process.")] Public Const ERROR_SET_CONTEXT_DENIED = 1660
[Description("An invalid cross-partition private file/section access was attempted.")] Public Const ERROR_CROSS_PARTITION_VIOLATION = 1661
[Description("A return address hijack is being attempted. This is supported by the operating system when user-mode shadow stacks are enabled.")] Public Const ERROR_RETURN_ADDRESS_HIJACK_ATTEMPT = 1662
[Description("The string binding is invalid")] Public Const RPC_S_INVALID_STRING_BINDING As Long = 1700
[Description("The binding handle is not the correct type")] Public Const RPC_S_WRONG_KIND_OF_BINDING As Long = 1701
[Description("The binding handle is invalid")] Public Const RPC_S_INVALID_BINDING As Long = 1702
[Description("The RPC protocol sequence is not supported")] Public Const RPC_S_PROTSEQ_NOT_SUPPORTED As Long = 1703
[Description("The RPC protocol sequence is invalid")] Public Const RPC_S_INVALID_RPC_PROTSEQ As Long = 1704
[Description("The string universal unique identifier (UUID) is invalid")] Public Const RPC_S_INVALID_STRING_UUID As Long = 1705
[Description("The endpoint format is invalid")] Public Const RPC_S_INVALID_ENDPOINT_FORMAT As Long = 1706
[Description("The network address is invalid")] Public Const RPC_S_INVALID_NET_ADDR As Long = 1707
[Description("No endpoint was found")] Public Const RPC_S_NO_ENDPOINT_FOUND As Long = 1708
[Description("The timeout value is invalid")] Public Const RPC_S_INVALID_TIMEOUT As Long = 1709
[Description("The object universal unique identifier (UUID) was not found")] Public Const RPC_S_OBJECT_NOT_FOUND As Long = 1710
[Description("The object universal unique identifier (UUID) has already been registered")] Public Const RPC_S_ALREADY_REGISTERED As Long = 1711
[Description("The type universal unique identifier (UUID) has already been registered")] Public Const RPC_S_TYPE_ALREADY_REGISTERED As Long = 1712
[Description("The RPC server is already listening")] Public Const RPC_S_ALREADY_LISTENING As Long = 1713
[Description("No protocol sequences have been registered")] Public Const RPC_S_NO_PROTSEQS_REGISTERED As Long = 1714
[Description("The RPC server is not listening")] Public Const RPC_S_NOT_LISTENING As Long = 1715
[Description("The manager type is unknown")] Public Const RPC_S_UNKNOWN_MGR_TYPE As Long = 1716
[Description("The interface is unknown")] Public Const RPC_S_UNKNOWN_IF As Long = 1717
[Description("There are no bindings")] Public Const RPC_S_NO_BINDINGS As Long = 1718
[Description("There are no protocol sequences")] Public Const RPC_S_NO_PROTSEQS As Long = 1719
[Description("The endpoint cannot be created")] Public Const RPC_S_CANT_CREATE_ENDPOINT As Long = 1720
[Description("Not enough resources are available to complete this operation")] Public Const RPC_S_OUT_OF_RESOURCES As Long = 1721
[Description("The RPC server is unavailable")] Public Const RPC_S_SERVER_UNAVAILABLE As Long = 1722
[Description("The RPC server is too busy to complete this operation")] Public Const RPC_S_SERVER_TOO_BUSY As Long = 1723
[Description("The network options are invalid")] Public Const RPC_S_INVALID_NETWORK_OPTIONS As Long = 1724
[Description("There are no remote procedure calls active on this thread")] Public Const RPC_S_NO_CALL_ACTIVE As Long = 1725
[Description("The remote procedure call failed")] Public Const RPC_S_CALL_FAILED As Long = 1726
[Description("The remote procedure call failed and did not execute")] Public Const RPC_S_CALL_FAILED_DNE As Long = 1727
[Description("A remote procedure call (RPC) protocol error occurred")] Public Const RPC_S_PROTOCOL_ERROR As Long = 1728
[Description("The transfer syntax is not supported by the RPC server")] Public Const RPC_S_UNSUPPORTED_TRANS_SYN As Long = 1730
[Description("The universal unique identifier (UUID) type is not supported")] Public Const RPC_S_UNSUPPORTED_TYPE As Long = 1732
[Description("The tag is invalid")] Public Const RPC_S_INVALID_TAG As Long = 1733
[Description("The array bounds are invalid")] Public Const RPC_S_INVALID_BOUND As Long = 1734
[Description("The binding does not contain an entry name")] Public Const RPC_S_NO_ENTRY_NAME As Long = 1735
[Description("The name syntax is invalid")] Public Const RPC_S_INVALID_NAME_SYNTAX As Long = 1736
[Description("The name syntax is not supported")] Public Const RPC_S_UNSUPPORTED_NAME_SYNTAX As Long = 1737
[Description("No network address is available to use to construct a universal unique identifier (UUID)")] Public Const RPC_S_UUID_NO_ADDRESS As Long = 1739
[Description("The endpoint is a duplicate")] Public Const RPC_S_DUPLICATE_ENDPOINT As Long = 1740
[Description("The authentication type is unknown")] Public Const RPC_S_UNKNOWN_AUTHN_TYPE As Long = 1741
[Description("The maximum number of calls is too small")] Public Const RPC_S_MAX_CALLS_TOO_SMALL As Long = 1742
[Description("The string is too long")] Public Const RPC_S_STRING_TOO_LONG As Long = 1743
[Description("The RPC protocol sequence was not found")] Public Const RPC_S_PROTSEQ_NOT_FOUND As Long = 1744
[Description("The procedure number is out of range")] Public Const RPC_S_PROCNUM_OUT_OF_RANGE As Long = 1745
[Description("The binding does not contain any authentication information")] Public Const RPC_S_BINDING_HAS_NO_AUTH As Long = 1746
[Description("The authentication service is unknown")] Public Const RPC_S_UNKNOWN_AUTHN_SERVICE As Long = 1747
[Description("The authentication level is unknown")] Public Const RPC_S_UNKNOWN_AUTHN_LEVEL As Long = 1748
[Description("The security context is invalid")] Public Const RPC_S_INVALID_AUTH_IDENTITY As Long = 1749
[Description("The authorization service is unknown")] Public Const RPC_S_UNKNOWN_AUTHZ_SERVICE As Long = 1750
[Description("The entry is invalid")] Public Const EPT_S_INVALID_ENTRY As Long = 1751
[Description("The server endpoint cannot perform the operation")] Public Const EPT_S_CANT_PERFORM_OP As Long = 1752
[Description("There are no more endpoints available from the endpoint mapper")] Public Const EPT_S_NOT_REGISTERED As Long = 1753
[Description("No interfaces have been exported")] Public Const RPC_S_NOTHING_TO_EXPORT As Long = 1754
[Description("The entry name is incomplete")] Public Const RPC_S_INCOMPLETE_NAME As Long = 1755
[Description("The version option is invalid")] Public Const RPC_S_INVALID_VERS_OPTION As Long = 1756
[Description("There are no more members")] Public Const RPC_S_NO_MORE_MEMBERS As Long = 1757
[Description("There is nothing to unexport")] Public Const RPC_S_NOT_ALL_OBJS_UNEXPORTED As Long = 1758
[Description("The interface was not found")] Public Const RPC_S_INTERFACE_NOT_FOUND As Long = 1759
[Description("The entry already exists")] Public Const RPC_S_ENTRY_ALREADY_EXISTS As Long = 1760
[Description("The entry is not found")] Public Const RPC_S_ENTRY_NOT_FOUND As Long = 1761
[Description("The name service is unavailable")] Public Const RPC_S_NAME_SERVICE_UNAVAILABLE As Long = 1762
[Description("The network address family is invalid")] Public Const RPC_S_INVALID_NAF_ID As Long = 1763
[Description("The requested operation is not supported")] Public Const RPC_S_CANNOT_SUPPORT As Long = 1764
[Description("No security context is available to allow impersonation")] Public Const RPC_S_NO_CONTEXT_AVAILABLE As Long = 1765
[Description("An internal error occurred in a remote procedure call (RPC)")] Public Const RPC_S_INTERNAL_ERROR As Long = 1766
[Description("The RPC server attempted an integer division by zero")] Public Const RPC_S_ZERO_DIVIDE As Long = 1767
[Description("An addressing error occurred in the RPC server")] Public Const RPC_S_ADDRESS_ERROR As Long = 1768
[Description("A floating-point operation at the RPC server caused a division by zero")] Public Const RPC_S_FP_DIV_ZERO As Long = 1769
[Description("A floating-point underflow occurred at the RPC server")] Public Const RPC_S_FP_UNDERFLOW As Long = 1770
[Description("A floating-point overflow occurred at the RPC server")] Public Const RPC_S_FP_OVERFLOW As Long = 1771
[Description("The list of RPC servers available for the binding of auto handles has been exhausted")] Public Const RPC_X_NO_MORE_ENTRIES As Long = 1772
[Description("Unable to open the character translation table file")] Public Const RPC_X_SS_CHAR_TRANS_OPEN_FAIL As Long = 1773
[Description("The file containing the character translation table has fewer than 512 bytes")] Public Const RPC_X_SS_CHAR_TRANS_SHORT_FILE As Long = 1774
[Description("A null context handle was passed from the client to the host during a remote procedure call")] Public Const RPC_X_SS_IN_NULL_CONTEXT As Long = 1775
[Description("The context handle changed during a remote procedure call")] Public Const RPC_X_SS_CONTEXT_DAMAGED As Long = 1777
[Description("The binding handles passed to a remote procedure call do not match")] Public Const RPC_X_SS_HANDLES_MISMATCH As Long = 1778
[Description("The stub is unable to get the remote procedure call handle")] Public Const RPC_X_SS_CANNOT_GET_CALL_HANDLE As Long = 1779
[Description("A null reference pointer was passed to the stub")] Public Const RPC_X_NULL_REF_POINTER As Long = 1780
[Description("The enumeration value is out of range")] Public Const RPC_X_ENUM_VALUE_OUT_OF_RANGE As Long = 1781
[Description("The byte count is too small")] Public Const RPC_X_BYTE_COUNT_TOO_SMALL As Long = 1782
[Description("The stub received bad data")] Public Const RPC_X_BAD_STUB_DATA As Long = 1783
[Description("The supplied user buffer is not valid for the requested operation")] Public Const ERROR_INVALID_USER_BUFFER As Long = 1784
[Description("The disk media is not recognized. It may not be formatted")] Public Const ERROR_UNRECOGNIZED_MEDIA As Long = 1785
[Description("The workstation does not have a trust secret")] Public Const ERROR_NO_TRUST_LSA_SECRET As Long = 1786
[Description("The SAM database on the Windows NT Server does not have a computer account for this workstation trust relationship")] Public Const ERROR_NO_TRUST_SAM_ACCOUNT As Long = 1787
[Description("The trust relationship between the primary domain and the trusted domain failed")] Public Const ERROR_TRUSTED_DOMAIN_FAILURE As Long = 1788
[Description("The trust relationship between this workstation and the primary domain failed")] Public Const ERROR_TRUSTED_RELATIONSHIP_FAILURE As Long = 1789
[Description("The network logon failed")] Public Const ERROR_TRUST_FAILURE As Long = 1790
[Description("A remote procedure call is already in progress for this thread")] Public Const RPC_S_CALL_IN_PROGRESS As Long = 1791
[Description("An attempt was made to logon, but the network logon service was not started")] Public Const ERROR_NETLOGON_NOT_STARTED As Long = 1792
[Description("The user's account has expired")] Public Const ERROR_ACCOUNT_EXPIRED As Long = 1793
[Description("The redirector is in use and cannot be unloaded")] Public Const ERROR_REDIRECTOR_HAS_OPEN_HANDLES As Long = 1794
[Description("The specified printer driver is already installed")] Public Const ERROR_PRINTER_DRIVER_ALREADY_INSTALLED As Long = 1795
[Description("The specified port is unknown")] Public Const ERROR_UNKNOWN_PORT As Long = 1796
[Description("The printer driver is unknown")] Public Const ERROR_UNKNOWN_PRINTER_DRIVER As Long = 1797
[Description("The print processor is unknown")] Public Const ERROR_UNKNOWN_PRINTPROCESSOR As Long = 1798
[Description("The specified separator file is invalid")] Public Const ERROR_INVALID_SEPARATOR_FILE As Long = 1799
[Description("The specified priority is invalid")] Public Const ERROR_INVALID_PRIORITY As Long = 1800
[Description("The printer name is invalid")] Public Const ERROR_INVALID_PRINTER_NAME As Long = 1801
[Description("The printer already exists")] Public Const ERROR_PRINTER_ALREADY_EXISTS As Long = 1802
[Description("The printer command is invalid")] Public Const ERROR_INVALID_PRINTER_COMMAND As Long = 1803
[Description("The specified datatype is invalid")] Public Const ERROR_INVALID_DATATYPE As Long = 1804
[Description("The environment specified is invalid")] Public Const ERROR_INVALID_ENVIRONMENT As Long = 1805
[Description("There are no more bindings")] Public Const RPC_S_NO_MORE_BINDINGS As Long = 1806
[Description("The account used is an interdomain trust account. Use global user account or local user account to access this server")] Public Const ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT As Long = 1807
[Description("The account used is a computer account. Use global user account or local user account to access this server")] Public Const ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT As Long = 1808
[Description("The account used is a server trust account. Use global user account or local user account to access this server")] Public Const ERROR_NOLOGON_SERVER_TRUST_ACCOUNT As Long = 1809
[Description("The name or security ID (SID) of the domain specified is inconsistent with the trust information for that domain")] Public Const ERROR_DOMAIN_TRUST_INCONSISTENT As Long = 1810
[Description("The server is in use and cannot be unloaded")] Public Const ERROR_SERVER_HAS_OPEN_HANDLES As Long = 1811
[Description("The specified image file did not contain a resource section")] Public Const ERROR_RESOURCE_DATA_NOT_FOUND As Long = 1812
[Description("The specified resource type cannot be found in the image file")] Public Const ERROR_RESOURCE_TYPE_NOT_FOUND As Long = 1813
[Description("The specified resource name cannot be found in the image file")] Public Const ERROR_RESOURCE_NAME_NOT_FOUND As Long = 1814
[Description("The specified resource language ID cannot be found in the image file")] Public Const ERROR_RESOURCE_LANG_NOT_FOUND As Long = 1815
[Description("Not enough quota is available to process this command")] Public Const ERROR_NOT_ENOUGH_QUOTA As Long = 1816
[Description("No interfaces have been registered")] Public Const RPC_S_NO_INTERFACES As Long = 1817
[Description("The remote procedure call was cancelled")] Public Const RPC_S_CALL_CANCELLED As Long = 1818
[Description("The binding handle does not contain all required information")] Public Const RPC_S_BINDING_INCOMPLETE As Long = 1819
[Description("A communications failure occurred during a remote procedure call")] Public Const RPC_S_COMM_FAILURE As Long = 1820
[Description("The requested authentication level is not supported")] Public Const RPC_S_UNSUPPORTED_AUTHN_LEVEL As Long = 1821
[Description("No principal name registered")] Public Const RPC_S_NO_PRINC_NAME As Long = 1822
[Description("The error specified is not a valid Windows RPC error code")] Public Const RPC_S_NOT_RPC_ERROR As Long = 1823
[Description("A UUID that is valid only on this computer has been allocated")] Public Const RPC_S_UUID_LOCAL_ONLY As Long = 1824
[Description("A security package specific error occurred")] Public Const RPC_S_SEC_PKG_ERROR As Long = 1825
[Description("Thread is not canceled")] Public Const RPC_S_NOT_CANCELLED As Long = 1826
[Description("Invalid operation on the encoding/decoding handle")] Public Const RPC_X_INVALID_ES_ACTION As Long = 1827
[Description("Incompatible version of the serializing package")] Public Const RPC_X_WRONG_ES_VERSION As Long = 1828
[Description("Incompatible version of the RPC stub")] Public Const RPC_X_WRONG_STUB_VERSION As Long = 1829
[Description("The RPC pipe object is invalid or corrupted")] Public Const RPC_X_INVALID_PIPE_OBJECT As Long = 1830
[Description("An invalid operation was attempted on an RPC pipe object")] Public Const RPC_X_WRONG_PIPE_ORDER As Long = 1831
[Description("Unsupported RPC pipe version")] Public Const RPC_X_WRONG_PIPE_VERSION As Long = 1832
[Description("The group member was not found")] Public Const RPC_S_GROUP_MEMBER_NOT_FOUND As Long = 1898
[Description("The endpoint mapper database entry could not be created")] Public Const EPT_S_CANT_CREATE As Long = 1899
[Description("The object universal unique identifier (UUID) is the nil UUID")] Public Const RPC_S_INVALID_OBJECT As Long = 1900
[Description("The specified time is invalid")] Public Const ERROR_INVALID_TIME As Long = 1901
[Description("The specified form name is invalid")] Public Const ERROR_INVALID_FORM_NAME As Long = 1902
[Description("The specified form size is invalid")] Public Const ERROR_INVALID_FORM_SIZE As Long = 1903
[Description("The specified printer handle is already being waited o")] Public Const ERROR_ALREADY_WAITING As Long = 1904
[Description("The specified printer has been deleted")] Public Const ERROR_PRINTER_DELETED As Long = 1905
[Description("The state of the printer is invalid")] Public Const ERROR_INVALID_PRINTER_STATE As Long = 1906
[Description("The user must change his password before he logs on the first time")] Public Const ERROR_PASSWORD_MUST_CHANGE As Long = 1907
[Description("Could not find the domain controller for this domain")] Public Const ERROR_DOMAIN_CONTROLLER_NOT_FOUND As Long = 1908
[Description("The referenced account is currently locked out and may not be logged on to")] Public Const ERROR_ACCOUNT_LOCKED_OUT As Long = 1909
[Description("The object exporter specified was not found")] Public Const OR_INVALID_OXID As Long = 1910
[Description("The object specified was not found")] Public Const OR_INVALID_OID As Long = 1911
[Description("The object resolver set specified was not found")] Public Const OR_INVALID_SET As Long = 1912
[Description("Some data remains to be sent in the request buffer")] Public Const RPC_S_SEND_INCOMPLETE As Long = 1913
[Description("Invalid asynchronous remote procedure call handle")] Public Const RPC_S_INVALID_ASYNC_HANDLE As Long = 1914
[Description("Invalid asynchronous RPC call handle for this operation")] Public Const RPC_S_INVALID_ASYNC_CALL As Long = 1915
[Description("The RPC pipe object has already been closed")] Public Const RPC_X_PIPE_CLOSED As Long = 1916
[Description("The RPC call completed before all pipes were processed")] Public Const RPC_X_PIPE_DISCIPLINE_ERROR As Long = 1917
[Description("No more data is available from the RPC pipe")] Public Const RPC_X_PIPE_EMPTY As Long = 1918
[Description("No site name is available for this machine")] Public Const ERROR_NO_SITENAME As Long = 1919
[Description("The file can not be accessed by the system")] Public Const ERROR_CANT_ACCESS_FILE As Long = 1920
[Description("The name of the file cannot be resolved by the system")] Public Const ERROR_CANT_RESOLVE_FILENAME As Long = 1921
[Description("The entry is not of the expected type.")] Public Const RPC_S_ENTRY_TYPE_MISMATCH = 1922
[Description("Not all object UUIDs could be exported to the specified entry.")] Public Const RPC_S_NOT_ALL_OBJS_EXPORTED = 1923
[Description("Interface could not be exported to the specified entry.")] Public Const RPC_S_INTERFACE_NOT_EXPORTED = 1924
[Description("The specified profile entry could not be added.")] Public Const RPC_S_PROFILE_NOT_ADDED = 1925
[Description("The specified profile element could not be added.")] Public Const RPC_S_PRF_ELT_NOT_ADDED = 1926
[Description("The specified profile element could not be removed.")] Public Const RPC_S_PRF_ELT_NOT_REMOVED = 1927
[Description("The group element could not be added.")] Public Const RPC_S_GRP_ELT_NOT_ADDED = 1928
[Description("The group element could not be removed.")] Public Const RPC_S_GRP_ELT_NOT_REMOVED = 1929
[Description("The printer driver is not compatible with a policy enabled on your computer that blocks NT 4.0 drivers.")] Public Const ERROR_KM_DRIVER_BLOCKED = 1930
[Description("The context has expired and can no longer be used.")] Public Const ERROR_CONTEXT_EXPIRED = 1931
[Description("The current user's delegated trust creation quota has been exceeded.")] Public Const ERROR_PER_USER_TRUST_QUOTA_EXCEEDED = 1932
[Description("The total delegated trust creation quota has been exceeded.")] Public Const ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED = 1933
[Description("The current user's delegated trust deletion quota has been exceeded.")] Public Const ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED = 1934
[Description("The computer you are signing into is protected by an authentication firewall. The specified account is not allowed to authenticate to the computer.")] Public Const ERROR_AUTHENTICATION_FIREWALL_FAILED = 1935
[Description("Remote connections to the Print Spooler are blocked by a policy set on your machine.")] Public Const ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED = 1936
[Description("Authentication failed because NTLM authentication has been disabled.")] Public Const ERROR_NTLM_BLOCKED = 1937
[Description("Logon Failure: EAS policy requires that the user change their password before this operation can be performed.")] Public Const ERROR_PASSWORD_CHANGE_REQUIRED = 1938
[Description("An administrator has restricted sign in. To sign in, make sure your device is connected to the Internet, and have your administrator sign in first.")] Public Const ERROR_LOST_MODE_LOGON_RESTRICTION = 1939

[Description("The list of servers for this workgroup is not currently availabl")] Public Const ERROR_NO_BROWSER_SERVERS_FOUND As Long = 6118
[Description("The pixel format is invalid")] Public Const ERROR_INVALID_PIXEL_FORMAT As Long = 2000
[Description("The specified driver is invalid")] Public Const ERROR_BAD_DRIVER As Long = 2001
[Description("The window style or class attribute is invalid for this operation")] Public Const ERROR_INVALID_WINDOW_STYLE As Long = 2002
[Description("The requested metafile operation is not supported")] Public Const ERROR_METAFILE_NOT_SUPPORTED As Long = 2003
[Description("The requested transformation operation is not supported")] Public Const ERROR_TRANSFORM_NOT_SUPPORTED As Long = 2004
[Description("The requested clipping operation is not supported")] Public Const ERROR_CLIPPING_NOT_SUPPORTED As Long = 2005
[Description("The specified color management module is invalid.")] Public Const ERROR_INVALID_CMM = 2010
[Description("The specified color profile is invalid.")] Public Const ERROR_INVALID_PROFILE = 2011
[Description("The specified tag was not found.")] Public Const ERROR_TAG_NOT_FOUND = 2012
[Description("A required tag is not present.")] Public Const ERROR_TAG_NOT_PRESENT = 2013
[Description("The specified tag is already present.")] Public Const ERROR_DUPLICATE_TAG = 2014
[Description("The specified color profile is not associated with the specified device.")] Public Const ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE = 2015
[Description("The specified color profile was not found.")] Public Const ERROR_PROFILE_NOT_FOUND = 2016
[Description("The specified color space is invalid.")] Public Const ERROR_INVALID_COLORSPACE = 2017
[Description("Image Color Management is not enabled.")] Public Const ERROR_ICM_NOT_ENABLED = 2018
[Description("There was an error while deleting the color transform.")] Public Const ERROR_DELETING_ICM_XFORM = 2019
[Description("The specified color transform is invalid.")] Public Const ERROR_INVALID_TRANSFORM = 2020
[Description("The specified transform does not match the bitmap's color space.")] Public Const ERROR_COLORSPACE_MISMATCH = 2021
[Description("The specified named color index is not present in the profile.")] Public Const ERROR_INVALID_COLORINDEX = 2022
[Description("The specified profile is intended for a device of a different type than the specified device.")] Public Const ERROR_PROFILE_DOES_NOT_MATCH_DEVICE = 2023
[Description("The network connection was made successfully, but the user had to be prompted for a password other than the one originally specified.")] Public Const ERROR_CONNECTED_OTHER_PASSWORD = 2108
[Description("The network connection was made successfully using default credentials.")] Public Const ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT = 2109
[Description("The specified username is invalid.")] Public Const ERROR_BAD_USERNAME = 2202
[Description("This network connection does not exist.")] Public Const ERROR_NOT_CONNECTED = 2250
[Description("This network connection has files open or requests pending")] Public Const ERROR_OPEN_FILES As Long = 2401
[Description("Active connections still exist")] Public Const ERROR_ACTIVE_CONNECTIONS As Long = 2402
[Description("The device is in use by an active process and cannot be disconnected")] Public Const ERROR_DEVICE_IN_USE As Long = 2404
[Description("The specified print monitor is unknown")] Public Const ERROR_UNKNOWN_PRINT_MONITOR As Long = 3000
[Description("The specified printer driver is currently in use")] Public Const ERROR_PRINTER_DRIVER_IN_USE As Long = 3001
[Description("The spool file was not found")] Public Const ERROR_SPOOL_FILE_NOT_FOUND As Long = 3002
[Description("A StartDocPrinter call was not issued")] Public Const ERROR_SPL_NO_STARTDOC As Long = 3003
[Description("An AddJob call was not issued")] Public Const ERROR_SPL_NO_ADDJOB As Long = 3004
[Description("The specified print processor has already been installed")] Public Const ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED As Long = 3005
[Description("The specified print monitor has already been installed")] Public Const ERROR_PRINT_MONITOR_ALREADY_INSTALLED As Long = 3006
[Description("The specified print monitor does not have the required functions")] Public Const ERROR_INVALID_PRINT_MONITOR As Long = 3007
[Description("The specified print monitor is currently in use")] Public Const ERROR_PRINT_MONITOR_IN_USE As Long = 3008
[Description("The requested operation is not allowed when there are jobs queued to the printer")] Public Const ERROR_PRINTER_HAS_JOBS_QUEUED As Long = 3009
[Description("The requested operation is successful. Changes will not be effective until the system is rebooted")] Public Const ERROR_SUCCESS_REBOOT_REQUIRED As Long = 3010
[Description("The requested operation is successful. Changes will not be effective until the service is restarted")] Public Const ERROR_SUCCESS_RESTART_REQUIRED As Long = 3011
[Description("No printers were found.")] Public Const ERROR_PRINTER_NOT_FOUND = 3012
[Description("The printer driver is known to be unreliable.")] Public Const ERROR_PRINTER_DRIVER_WARNED = 3013
[Description("The printer driver is known to harm the system.")] Public Const ERROR_PRINTER_DRIVER_BLOCKED = 3014
[Description("The specified printer driver package is currently in use.")] Public Const ERROR_PRINTER_DRIVER_PACKAGE_IN_USE = 3015
[Description("Unable to find a core driver package that is required by the printer driver package.")] Public Const ERROR_CORE_DRIVER_PACKAGE_NOT_FOUND = 3016
[Description("The requested operation failed. A system reboot is required to roll back changes made.")] Public Const ERROR_FAIL_REBOOT_REQUIRED = 3017
[Description("The requested operation failed. A system reboot has been initiated to roll back changes made.")] Public Const ERROR_FAIL_REBOOT_INITIATED = 3018
[Description("The specified printer driver was not found on the system and needs to be downloaded.")] Public Const ERROR_PRINTER_DRIVER_DOWNLOAD_NEEDED = 3019
[Description("The requested print job has failed to print. A print system update requires the job to be resubmitted.")] Public Const ERROR_PRINT_JOB_RESTART_REQUIRED = 3020
[Description("The printer driver does not contain a valid manifest, or contains too many manifests.")] Public Const ERROR_INVALID_PRINTER_DRIVER_MANIFEST = 3021
[Description("The specified printer cannot be shared.")] Public Const ERROR_PRINTER_NOT_SHAREABLE = 3022
[Description("The requested function requires SMB1 to be present and enabled.")] Public Const ERROR_SERVER_SERVICE_CALL_REQUIRES_SMB1 = 3023
[Description("The user canceled the authentication prompt to a remote server.")] Public Const ERROR_NETWORK_AUTHENTICATION_PROMPT_CANCELED = 3024
[Description("The requested operation failed. Remote mailslots have been deprecated.")] Public Const ERROR_REMOTE_MAILSLOTS_DEPRECATED = 3025
[Description("The operation was paused.")] Public Const ERROR_REQUEST_PAUSED = 3050
[Description("The condition supplied for the app execution request was not satisfied, so the request was not performed.")] Public Const ERROR_APPEXEC_CONDITION_NOT_SATISFIED = 3060
[Description("The supplied handle has been invalidated and may not be used for the requested operation.")] Public Const ERROR_APPEXEC_HANDLE_INVALIDATED = 3061
[Description("The supplied host generation has been invalidated and may not be used for the requested operation.")] Public Const ERROR_APPEXEC_INVALID_HOST_GENERATION = 3062
[Description("An attempt to register a process failed because the target host was not in a valid state to receive process registrations.")] Public Const ERROR_APPEXEC_UNEXPECTED_PROCESS_REGISTRATION = 3063
[Description("The host is not in a valid state to support the execution request.")] Public Const ERROR_APPEXEC_INVALID_HOST_STATE = 3064
[Description("The operation was not completed because a required resource donor was not found for the host.")] Public Const ERROR_APPEXEC_NO_DONOR = 3065
[Description("The operation was not completed because an unexpected host ID was encountered.")] Public Const ERROR_APPEXEC_HOST_ID_MISMATCH = 3066
[Description("The operation was not completed because the specified user was not known to the service.")] Public Const ERROR_APPEXEC_UNKNOWN_USER = 3067
[Description("The application is blocked by app compat policy.")] Public Const ERROR_APPEXEC_APP_COMPAT_BLOCK = 3068
[Description("The caller specified wait timed out before the operation completed.")] Public Const ERROR_APPEXEC_CALLER_WAIT_TIMEOUT = 3069
[Description("The caller specified wait timed out before the operation completed because a host termination is in queued.")] Public Const ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_TERMINATION = 3070
[Description("The caller specified wait timed out before the operation completed because a licensing operation is being performed.")] Public Const ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_LICENSING = 3071
[Description("The caller specified wait timed out before the operation completed because resources are being acquired.")] Public Const ERROR_APPEXEC_CALLER_WAIT_TIMEOUT_RESOURCES = 3072
[Description("Enabling driver verification from volatile command is currently not supported when both CFG and IO are enabled.")] Public Const ERROR_VRF_VOLATILE_CFG_AND_IO_ENABLED = 3080
[Description("Removal of current driver verification is not supported from volatile command.")] Public Const ERROR_VRF_VOLATILE_NOT_STOPPABLE = 3081
[Description("Enabling driver verification is not supported in safe mode.")] Public Const ERROR_VRF_VOLATILE_SAFE_MODE = 3082
[Description("Enabling driver verification is not supported from volatile mode in current system.")] Public Const ERROR_VRF_VOLATILE_NOT_RUNNABLE_SYSTEM = 3083
[Description("The specified rule class (a.k.a. flag) is not supported from volatile mode.")] Public Const ERROR_VRF_VOLATILE_NOT_SUPPORTED_RULECLASS = 3084
[Description("The specified driver is protected and volatile verification is currently not supported.")] Public Const ERROR_VRF_VOLATILE_PROTECTED_DRIVER = 3085
[Description("Enabling driver verification is not supported for a driver with NMI callback(s) registered.")] Public Const ERROR_VRF_VOLATILE_NMI_REGISTERED = 3086
[Description("Volatile verification settings cannot be changed when verification is enabled from boot or DIF volatile verification is enabled.")] Public Const ERROR_VRF_VOLATILE_SETTINGS_CONFLICT = 3087
[Description("There is no captured information.")] Public Const ERROR_DIF_ZERO_SIZE_INFORMATION = 3187
[Description("The given rule class ID is not registered by the caller.")] Public Const ERROR_DIF_DRIVER_PLUGIN_MISMATCH = 3188
[Description("Driver thunks are not added when kernel verification is in effect.")] Public Const ERROR_DIF_DRIVER_THUNKS_NOT_ALLOWED = 3189
[Description("The specified driver is not associated with driver object or driver extension.")] Public Const ERROR_DIF_IOCALLBACK_NOT_REPLACED = 3190
[Description("Verifier's internal data size exceeds the limit of live dump secondary data.")] Public Const ERROR_DIF_LIVEDUMP_LIMIT_EXCEEDED = 3191
[Description("Verification cannot start because an attempt to lock code or data section failed.")] Public Const ERROR_DIF_VOLATILE_SECTION_NOT_LOCKED = 3192
[Description("DIF volatile verification is not supported for hotpatched driver.")] Public Const ERROR_DIF_VOLATILE_DRIVER_HOTPATCHED = 3193
[Description("The passed system DIF information is invalid.")] Public Const ERROR_DIF_VOLATILE_INVALID_INFO = 3194
[Description("DIF volatile verification only supports on loaded drivers.")] Public Const ERROR_DIF_VOLATILE_DRIVER_IS_NOT_RUNNING = 3195
[Description("Currently no plugin is running.")] Public Const ERROR_DIF_VOLATILE_PLUGIN_IS_NOT_RUNNING = 3196
[Description("Currently running plugin must be removed before applying a new plugin.")] Public Const ERROR_DIF_VOLATILE_PLUGIN_CHANGE_NOT_ALLOWED = 3197
[Description("The plugin is not allowed to run in volatile mode.")] Public Const ERROR_DIF_VOLATILE_NOT_ALLOWED = 3198
[Description("One or more DDI is not yet supported by DIF.")] Public Const ERROR_DIF_BINDING_API_NOT_FOUND = 3199
[Description("Reissue the given operation as a cached IO operation")] Public Const ERROR_IO_REISSUE_AS_CACHED = 3950
[Description("WINS encountered an error while processing the command")] Public Const ERROR_WINS_INTERNAL As Long = 4000
[Description("The local WINS can not be deleted")] Public Const ERROR_CAN_NOT_DEL_LOCAL_WINS As Long = 4001
[Description("The importation from the file failed")] Public Const ERROR_STATIC_INIT As Long = 4002
[Description("The backup failed. Was a full backup done before")] Public Const ERROR_INC_BACKUP As Long = 4003
[Description("The backup failed. Check the directory to which you are backing the database")] Public Const ERROR_FULL_BACKUP As Long = 4004
[Description("The name does not exist in the WINS database")] Public Const ERROR_REC_NON_EXISTENT As Long = 4005
[Description("Replication with a nonconfigured partner is not allowed")] Public Const ERROR_RPL_NOT_ALLOWED As Long = 4006
[Description("The DHCP client has obtained an IP address that is already in use on the network. The local interface will be disabled")] Public Const ERROR_DHCP_ADDRESS_CONFLICT As Long = 4100
[Description("The GUID passed was not recognized as valid by a WMI data provider")] Public Const ERROR_WMI_GUID_NOT_FOUND As Long = 4200
[Description("The instance name passed was not recognized as valid by a WMI data provider")] Public Const ERROR_WMI_INSTANCE_NOT_FOUND As Long = 4201
[Description("The data item ID passed was not recognized as valid by a WMI data provider")] Public Const ERROR_WMI_ITEMID_NOT_FOUND As Long = 4202
[Description("The WMI request could not be completed and should be retried")] Public Const ERROR_WMI_TRY_AGAIN As Long = 4203
[Description("The WMI data provider could not be located")] Public Const ERROR_WMI_DP_NOT_FOUND As Long = 4204
[Description("The WMI data provider references an instance set that has not been registered")] Public Const ERROR_WMI_UNRESOLVED_INSTANCE_REF As Long = 4205
[Description("The WMI data block or event notification has already been enabled")] Public Const ERROR_WMI_ALREADY_ENABLED As Long = 4206
[Description("The WMI data block is no longer available")] Public Const ERROR_WMI_GUID_DISCONNECTED As Long = 4207
[Description("The WMI data service is not available")] Public Const ERROR_WMI_SERVER_UNAVAILABLE As Long = 4208
[Description("The WMI data provider failed to carry out the request")] Public Const ERROR_WMI_DP_FAILED As Long = 4209
[Description("The WMI MOF information is not valid")] Public Const ERROR_WMI_INVALID_MOF As Long = 4210
[Description("The WMI registration information is not valid")] Public Const ERROR_WMI_INVALID_REGINFO As Long = 4211
[Description("The media identifier does not represent a valid medium")] Public Const ERROR_INVALID_MEDIA As Long = 4300
[Description("The library identifier does not represent a valid library")] Public Const ERROR_INVALID_LIBRARY As Long = 4301
[Description("The media pool identifier does not represent a valid media pool")] Public Const ERROR_INVALID_MEDIA_POOL As Long = 4302
[Description("The drive and medium are not compatible or exist in different libraries")] Public Const ERROR_DRIVE_MEDIA_MISMATCH As Long = 4303
[Description("The medium currently exists in an offline library and must be online to perform this operation")] Public Const ERROR_MEDIA_OFFLINE As Long = 4304
[Description("The operation cannot be performed on an offline library")] Public Const ERROR_LIBRARY_OFFLINE As Long = 4305
[Description("The library, drive, or media pool is empty")] Public Const ERROR_EMPTY As Long = 4306
[Description("The library, drive, or media pool must be empty to perform this operation")] Public Const ERROR_NOT_EMPTY As Long = 4307
[Description("No media is currently available in this media pool or library")] Public Const ERROR_MEDIA_UNAVAILABLE As Long = 4308
[Description("A resource required for this operation is disabled")] Public Const ERROR_RESOURCE_DISABLED As Long = 4309
[Description("The media identifier does not represent a valid cleaner")] Public Const ERROR_INVALID_CLEANER As Long = 4310
[Description("The drive cannot be cleaned or does not support cleaning")] Public Const ERROR_UNABLE_TO_CLEAN As Long = 4311
[Description("The object identifier does not represent a valid object")] Public Const ERROR_OBJECT_NOT_FOUND As Long = 4312
[Description("Unable to read from or write to the database")] Public Const ERROR_DATABASE_FAILURE As Long = 4313
[Description("The database is full")] Public Const ERROR_DATABASE_FULL As Long = 4314
[Description("The medium is not compatible with the device or media pool")] Public Const ERROR_MEDIA_INCOMPATIBLE As Long = 4315
[Description("The resource required for this operation does not exist")] Public Const ERROR_RESOURCE_NOT_PRESENT As Long = 4316
[Description("The operation identifier is not valid")] Public Const ERROR_INVALID_OPERATION As Long = 4317
[Description("The media is not mounted or ready for use")] Public Const ERROR_MEDIA_NOT_AVAILABLE As Long = 4318
[Description("The device is not ready for use")] Public Const ERROR_DEVICE_NOT_AVAILABLE As Long = 4319
[Description("The operator or administrator has refused the request")] Public Const ERROR_REQUEST_REFUSED As Long = 4320
[Description("The remote storage service was not able to recall the file")] Public Const ERROR_FILE_OFFLINE As Long = 4350
[Description("The remote storage service is not operational at this time")] Public Const ERROR_REMOTE_STORAGE_NOT_ACTIVE As Long = 4351
[Description("The remote storage service encountered a media error")] Public Const ERROR_REMOTE_STORAGE_MEDIA_ERROR As Long = 4352
[Description("The file or directory is not a reparse point")] Public Const ERROR_NOT_A_REPARSE_POINT As Long = 4390
[Description("The reparse point attribute cannot be set because it conflicts with an existing attribute")] Public Const ERROR_REPARSE_ATTRIBUTE_CONFLICT As Long = 4391
[Description("The cluster resource cannot be moved to another group because other resources are dependent on it")] Public Const ERROR_DEPENDENT_RESOURCE_EXISTS As Long = 5001
[Description("The cluster resource dependency cannot be found")] Public Const ERROR_DEPENDENCY_NOT_FOUND As Long = 5002
[Description("The cluster resource cannot be made dependent on the specified resource because it is already dependent")] Public Const ERROR_DEPENDENCY_ALREADY_EXISTS As Long = 5003
[Description("The cluster resource is not online")] Public Const ERROR_RESOURCE_NOT_ONLINE As Long = 5004
[Description("A cluster node is not available for this operation")] Public Const ERROR_HOST_NODE_NOT_AVAILABLE As Long = 5005
[Description("The cluster resource is not available")] Public Const ERROR_RESOURCE_NOT_AVAILABLE As Long = 5006
[Description("The cluster resource could not be found")] Public Const ERROR_RESOURCE_NOT_FOUND As Long = 5007
[Description("The cluster is being shut down")] Public Const ERROR_SHUTDOWN_CLUSTER As Long = 5008
[Description("A cluster node cannot be evicted from the cluster while it is online")] Public Const ERROR_CANT_EVICT_ACTIVE_NODE As Long = 5009
[Description("The object already exists")] Public Const ERROR_OBJECT_ALREADY_EXISTS As Long = 5010
[Description("The object is already in the list")] Public Const ERROR_OBJECT_IN_LIST As Long = 5011
[Description("The cluster group is not available for any new requests")] Public Const ERROR_GROUP_NOT_AVAILABLE As Long = 5012
[Description("The cluster group could not be found")] Public Const ERROR_GROUP_NOT_FOUND As Long = 5013
[Description("The operation could not be completed because the cluster group is not online")] Public Const ERROR_GROUP_NOT_ONLINE As Long = 5014
[Description("The cluster node is not the owner of the resource")] Public Const ERROR_HOST_NODE_NOT_RESOURCE_OWNER As Long = 5015
[Description("The cluster node is not the owner of the group")] Public Const ERROR_HOST_NODE_NOT_GROUP_OWNER As Long = 5016
[Description("The cluster resource could not be created in the specified resource monitor")] Public Const ERROR_RESMON_CREATE_FAILED As Long = 5017
[Description("The cluster resource could not be brought online by the resource monitor")] Public Const ERROR_RESMON_ONLINE_FAILED As Long = 5018
[Description("The operation could not be completed because the cluster resource is online")] Public Const ERROR_RESOURCE_ONLINE As Long = 5019
[Description("The cluster resource could not be deleted or brought offline because it is the quorum resource")] Public Const ERROR_QUORUM_RESOURCE As Long = 5020
[Description("The cluster could not make the specified resource a quorum resource because it is not capable of being a quorum resource")] Public Const ERROR_NOT_QUORUM_CAPABLE As Long = 5021
[Description("The cluster software is shutting down")] Public Const ERROR_CLUSTER_SHUTTING_DOWN As Long = 5022
[Description("The group or resource is not in the correct state to perform the requested operation")] Public Const ERROR_INVALID_STATE As Long = 5023
[Description("The properties were stored but not all changes will take effect until the next reboot")] Public Const ERROR_RESOURCE_PROPERTIES_STORED As Long = 5024
[Description("The cluster could not make the specified resource a quorum resource because it does not belong to a shared storage class")] Public Const ERROR_NOT_QUORUM_CLASS As Long = 5025
[Description("The cluster resource could not be deleted since it is a core resource")] Public Const ERROR_CORE_RESOURCE As Long = 5026
[Description("The quorum resource failed to come online")] Public Const ERROR_QUORUM_RESOURCE_ONLINE_FAILED As Long = 5027
[Description("The quorum log could not be created or mounted successfully")] Public Const ERROR_QUORUMLOG_OPEN_FAILED As Long = 5028
[Description("The cluster log is corrupt")] Public Const ERROR_CLUSTERLOG_CORRUPT As Long = 5029
[Description("The record could not be written to the cluster log since it exceeds the maximum size")] Public Const ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE As Long = 5030
[Description("The cluster log exceeds its maximum size")] Public Const ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE As Long = 5031
[Description("No checkpoint record was found in the cluster log")] Public Const ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND As Long = 5032
[Description("The minimum required disk space needed for logging is not available")] Public Const ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE As Long = 5033
[Description("The specified file could not be encrypted")] Public Const ERROR_ENCRYPTION_FAILED As Long = 6000
[Description("The specified file could not be decrypted")] Public Const ERROR_DECRYPTION_FAILED As Long = 6001
[Description("The specified file is encrypted and the user does not have the ability to decrypt it")] Public Const ERROR_FILE_ENCRYPTED As Long = 6002
[Description("There is no encryption recovery policy configured for this system")] Public Const ERROR_NO_RECOVERY_POLICY As Long = 6003
[Description("The required encryption driver is not loaded for this system")] Public Const ERROR_NO_EFS As Long = 6004
[Description("The file was encrypted with a different encryption driver than is currently loaded")] Public Const ERROR_WRONG_EFS As Long = 6005
[Description("There are no EFS keys defined for the user")] Public Const ERROR_NO_USER_KEYS As Long = 6006
[Description("The specified file is not encrypted")] Public Const ERROR_FILE_NOT_ENCRYPTED As Long = 6007
[Description("The specified file is not in the defined EFS export format")] Public Const ERROR_NOT_EXPORT_FORMAT As Long = 6008
[Description("The specified session name is invalid.")] Public Const ERROR_CTX_WINSTATION_NAME_INVALID = 7001
[Description("The specified protocol driver is invalid.")] Public Const ERROR_CTX_INVALID_PD = 7002
[Description("The specified protocol driver was not found in the system path.")] Public Const ERROR_CTX_PD_NOT_FOUND = 7003
[Description("The specified terminal connection driver was not found in the system path.")] Public Const ERROR_CTX_WD_NOT_FOUND = 7004
[Description("A registry key for event logging could not be created for this session.")] Public Const ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY = 7005
[Description("A service with the same name already exists on the system.")] Public Const ERROR_CTX_SERVICE_NAME_COLLISION = 7006
[Description("A close operation is pending on the session.")] Public Const ERROR_CTX_CLOSE_PENDING = 7007
[Description("There are no free output buffers available.")] Public Const ERROR_CTX_NO_OUTBUF = 7008
[Description("The MODEM.INF file was not found.")] Public Const ERROR_CTX_MODEM_INF_NOT_FOUND = 7009
[Description("The modem name was not found in MODEM.INF.")] Public Const ERROR_CTX_INVALID_MODEMNAME = 7010
[Description("The modem did not accept the command sent to it. Verify that the configured modem name matches the attached modem.")] Public Const ERROR_CTX_MODEM_RESPONSE_ERROR = 7011
[Description("The modem did not respond to the command sent to it. Verify that the modem is properly cabled and powered on.")] Public Const ERROR_CTX_MODEM_RESPONSE_TIMEOUT = 7012
[Description("Carrier detect has failed or carrier has been dropped due to disconnect.")] Public Const ERROR_CTX_MODEM_RESPONSE_NO_CARRIER = 7013
[Description("Dial tone not detected within the required time. Verify that the phone cable is properly attached and functional.")] Public Const ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE = 7014
[Description("Busy signal detected at remote site on callback.")] Public Const ERROR_CTX_MODEM_RESPONSE_BUSY = 7015
[Description("Voice detected at remote site on callback.")] Public Const ERROR_CTX_MODEM_RESPONSE_VOICE = 7016
[Description("Transport driver error")] Public Const ERROR_CTX_TD_ERROR = 7017
[Description("The specified session cannot be found.")] Public Const ERROR_CTX_WINSTATION_NOT_FOUND = 7022
[Description("The specified session name is already in use.")] Public Const ERROR_CTX_WINSTATION_ALREADY_EXISTS = 7023
[Description("The task you are trying to do can't be completed because Remote Desktop Services is currently busy. Please try again in a few minutes. Other users should still be able to log on.")] Public Const ERROR_CTX_WINSTATION_BUSY = 7024
[Description("An attempt has been made to connect to a session whose video mode is not supported by the current client.")] Public Const ERROR_CTX_BAD_VIDEO_MODE = 7025
[Description("The application attempted to enable DOS graphics mode. DOS graphics mode is not supported.")] Public Const ERROR_CTX_GRAPHICS_INVALID = 7035
[Description("Your interactive logon privilege has been disabled. Please contact your administrator.")] Public Const ERROR_CTX_LOGON_DISABLED = 7037
[Description("The requested operation can be performed only on the system console. This is most often the result of a driver or system DLL requiring direct console access.")] Public Const ERROR_CTX_NOT_CONSOLE = 7038
[Description("The client failed to respond to the server connect message.")] Public Const ERROR_CTX_CLIENT_QUERY_TIMEOUT = 7040
[Description("Disconnecting the console session is not supported.")] Public Const ERROR_CTX_CONSOLE_DISCONNECT = 7041
[Description("Reconnecting a disconnected session to the console is not supported.")] Public Const ERROR_CTX_CONSOLE_CONNECT = 7042
[Description("The request to control another session remotely was denied.")] Public Const ERROR_CTX_SHADOW_DENIED = 7044
[Description("The requested session access is denied.")] Public Const ERROR_CTX_WINSTATION_ACCESS_DENIED = 7045
[Description("The specified terminal connection driver is invalid.")] Public Const ERROR_CTX_INVALID_WD = 7049
[Description("This may be because the session is disconnected or does not currently have a user logged on.")] Public Const ERROR_CTX_SHADOW_INVALID = 7050
[Description("The requested session is not configured to allow remote control.")] Public Const ERROR_CTX_SHADOW_DISABLED = 7051
[Description("Your request to connect to this Terminal Server has been rejected. Your Terminal Server client license number is currently being used by another user. Please call your system administrator to obtain a unique license number.")] Public Const ERROR_CTX_CLIENT_LICENSE_IN_USE = 7052
[Description("Your request to connect to this Terminal Server has been rejected. Your Terminal Server client license number has not been entered for this copy of the Terminal Server client. Please contact your system administrator.")] Public Const ERROR_CTX_CLIENT_LICENSE_NOT_SET = 7053
[Description("The number of connections to this computer is limited and all connections are in use right now. Try connecting later or contact your system administrator.")] Public Const ERROR_CTX_LICENSE_NOT_AVAILABLE = 7054
[Description("The client you are using is not licensed to use this system. Your logon request is denied.")] Public Const ERROR_CTX_LICENSE_CLIENT_INVALID = 7055
[Description("The system license has expired. Your logon request is denied.")] Public Const ERROR_CTX_LICENSE_EXPIRED = 7056
[Description("Remote control could not be terminated because the specified session is not currently being remotely controlled.")] Public Const ERROR_CTX_SHADOW_NOT_RUNNING = 7057
[Description("The remote control of the console was terminated because the display mode was changed. Changing the display mode in a remote control session is not supported.")] Public Const ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE = 7058
[Description("Activation has already been reset the maximum number of times for this installation. Your activation timer will not be cleared.")] Public Const ERROR_ACTIVATION_COUNT_EXCEEDED = 7059
[Description("Remote logins are currently disabled.")] Public Const ERROR_CTX_WINSTATIONS_DISABLED = 7060
[Description("You do not have the proper encryption level to access this Session.")] Public Const ERROR_CTX_ENCRYPTION_LEVEL_REQUIRED = 7061
[Description("The user %s\%s is currently logged on to this computer. Only the current user or an administrator can log on to this computer.")] Public Const ERROR_CTX_SESSION_IN_USE = 7062
[Description("The user %s\%s is already logged on to the console of this computer. You do not have permission to log in at this time. To resolve this issue, contact %s\%s and have them log off.")] Public Const ERROR_CTX_NO_FORCE_LOGOFF = 7063
[Description("Unable to log you on because of an account restriction.")] Public Const ERROR_CTX_ACCOUNT_RESTRICTION = 7064
[Description("The RDP protocol component %2 detected an error in the protocol stream and has disconnected the client.")] Public Const ERROR_RDP_PROTOCOL_ERROR = 7065
[Description("The Client Drive Mapping Service Has Connected on Terminal Connection.")] Public Const ERROR_CTX_CDM_CONNECT = 7066
[Description("The Client Drive Mapping Service Has Disconnected on Terminal Connection.")] Public Const ERROR_CTX_CDM_DISCONNECT = 7067
[Description("The Terminal Server security layer detected an error in the protocol stream and has disconnected the client.")] Public Const ERROR_CTX_SECURITY_LAYER_ERROR = 7068
[Description("The target session is incompatible with the current session.")] Public Const ERROR_TS_INCOMPATIBLE_SESSIONS = 7069
[Description("Windows can't connect to your session because a problem occurred in the Windows video subsystem. Try connecting again later, or contact the server administrator for assistance.")] Public Const ERROR_TS_VIDEO_SUBSYSTEM_ERROR = 7070
Public Const DS_S_SUCCESS = NO_ERROR
[Description("An error occurred while installing the directory service. For more information, see the event log.")] Public Const ERROR_DS_NOT_INSTALLED = 8200
[Description("The directory service evaluated group memberships locally.")] Public Const ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY = 8201
[Description("The specified directory service attribute or value does not exist.")] Public Const ERROR_DS_NO_ATTRIBUTE_OR_VALUE = 8202
[Description("The attribute syntax specified to the directory service is invalid.")] Public Const ERROR_DS_INVALID_ATTRIBUTE_SYNTAX = 8203
[Description("The attribute type specified to the directory service is not defined.")] Public Const ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED = 8204
[Description("The specified directory service attribute or value already exists.")] Public Const ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS = 8205
[Description("The directory service is busy.")] Public Const ERROR_DS_BUSY = 8206
[Description("The directory service is unavailable.")] Public Const ERROR_DS_UNAVAILABLE = 8207
[Description("The directory service was unable to allocate a relative identifier.")] Public Const ERROR_DS_NO_RIDS_ALLOCATED = 8208
[Description("The directory service has exhausted the pool of relative identifiers.")] Public Const ERROR_DS_NO_MORE_RIDS = 8209
[Description("The requested operation could not be performed because the directory service is not the master for that type of operation.")] Public Const ERROR_DS_INCORRECT_ROLE_OWNER = 8210
[Description("The directory service was unable to initialize the subsystem that allocates relative identifiers.")] Public Const ERROR_DS_RIDMGR_INIT_ERROR = 8211
[Description("The requested operation did not satisfy one or more constraints associated with the class of the object.")] Public Const ERROR_DS_OBJ_CLASS_VIOLATION = 8212
[Description("The directory service can perform the requested operation only on a leaf object.")] Public Const ERROR_DS_CANT_ON_NON_LEAF = 8213
[Description("The directory service cannot perform the requested operation on the RDN attribute of an object.")] Public Const ERROR_DS_CANT_ON_RDN = 8214
[Description("The directory service detected an attempt to modify the object class of an object.")] Public Const ERROR_DS_CANT_MOD_OBJ_CLASS = 8215
[Description("The requested cross-domain move operation could not be performed.")] Public Const ERROR_DS_CROSS_DOM_MOVE_ERROR = 8216
[Description("Unable to contact the global catalog server.")] Public Const ERROR_DS_GC_NOT_AVAILABLE = 8217
[Description("The policy object is shared and can only be modified at the root.")] Public Const ERROR_SHARED_POLICY = 8218
[Description("The policy object does not exist.")] Public Const ERROR_POLICY_OBJECT_NOT_FOUND = 8219
[Description("The requested policy information is only in the directory service.")] Public Const ERROR_POLICY_ONLY_IN_DS = 8220
[Description("A domain controller promotion is currently active.")] Public Const ERROR_PROMOTION_ACTIVE = 8221
[Description("A domain controller promotion is not currently active")] Public Const ERROR_NO_PROMOTION_ACTIVE = 8222
[Description("An operations error occurred.")] Public Const ERROR_DS_OPERATIONS_ERROR = 8224
[Description("A protocol error occurred.")] Public Const ERROR_DS_PROTOCOL_ERROR = 8225
[Description("The time limit for this request was exceeded.")] Public Const ERROR_DS_TIMELIMIT_EXCEEDED = 8226
[Description("The size limit for this request was exceeded.")] Public Const ERROR_DS_SIZELIMIT_EXCEEDED = 8227
[Description("The administrative limit for this request was exceeded.")] Public Const ERROR_DS_ADMIN_LIMIT_EXCEEDED = 8228
[Description("The compare response was false.")] Public Const ERROR_DS_COMPARE_FALSE = 8229
[Description("The compare response was true.")] Public Const ERROR_DS_COMPARE_TRUE = 8230
[Description("The requested authentication method is not supported by the server.")] Public Const ERROR_DS_AUTH_METHOD_NOT_SUPPORTED = 8231
[Description("A more secure authentication method is required for this server.")] Public Const ERROR_DS_STRONG_AUTH_REQUIRED = 8232
[Description("Inappropriate authentication.")] Public Const ERROR_DS_INAPPROPRIATE_AUTH = 8233
[Description("The authentication mechanism is unknown.")] Public Const ERROR_DS_AUTH_UNKNOWN = 8234
[Description("A referral was returned from the server.")] Public Const ERROR_DS_REFERRAL = 8235
[Description("The server does not support the requested critical extension.")] Public Const ERROR_DS_UNAVAILABLE_CRIT_EXTENSION = 8236
[Description("This request requires a secure connection.")] Public Const ERROR_DS_CONFIDENTIALITY_REQUIRED = 8237
[Description("Inappropriate matching.")] Public Const ERROR_DS_INAPPROPRIATE_MATCHING = 8238
[Description("A constraint violation occurred.")] Public Const ERROR_DS_CONSTRAINT_VIOLATION = 8239
[Description("There is no such object on the server.")] Public Const ERROR_DS_NO_SUCH_OBJECT = 8240
[Description("There is an alias problem.")] Public Const ERROR_DS_ALIAS_PROBLEM = 8241
[Description("An invalid dn syntax has been specified.")] Public Const ERROR_DS_INVALID_DN_SYNTAX = 8242
[Description("The object is a leaf object.")] Public Const ERROR_DS_IS_LEAF = 8243
[Description("There is an alias dereferencing problem.")] Public Const ERROR_DS_ALIAS_DEREF_PROBLEM = 8244
[Description("The server is unwilling to process the request.")] Public Const ERROR_DS_UNWILLING_TO_PERFORM = 8245
[Description("A loop has been detected.")] Public Const ERROR_DS_LOOP_DETECT = 8246
[Description("There is a naming violation.")] Public Const ERROR_DS_NAMING_VIOLATION = 8247
[Description("The result set is too large.")] Public Const ERROR_DS_OBJECT_RESULTS_TOO_LARGE = 8248
[Description("The operation affects multiple DSAs")] Public Const ERROR_DS_AFFECTS_MULTIPLE_DSAS = 8249
[Description("The server is not operational.")] Public Const ERROR_DS_SERVER_DOWN = 8250
[Description("A local error has occurred.")] Public Const ERROR_DS_LOCAL_ERROR = 8251
[Description("An encoding error has occurred.")] Public Const ERROR_DS_ENCODING_ERROR = 8252
[Description("A decoding error has occurred.")] Public Const ERROR_DS_DECODING_ERROR = 8253
[Description("The search filter cannot be recognized.")] Public Const ERROR_DS_FILTER_UNKNOWN = 8254
[Description("One or more parameters are illegal.")] Public Const ERROR_DS_PARAM_ERROR = 8255
[Description("The specified method is not supported.")] Public Const ERROR_DS_NOT_SUPPORTED = 8256
[Description("No results were returned.")] Public Const ERROR_DS_NO_RESULTS_RETURNED = 8257
[Description("The specified control is not supported by the server.")] Public Const ERROR_DS_CONTROL_NOT_FOUND = 8258
[Description("A referral loop was detected by the client.")] Public Const ERROR_DS_CLIENT_LOOP = 8259
[Description("The preset referral limit was exceeded.")] Public Const ERROR_DS_REFERRAL_LIMIT_EXCEEDED = 8260
[Description("The search requires a SORT control.")] Public Const ERROR_DS_SORT_CONTROL_MISSING = 8261
[Description("The search results exceed the offset range specified.")] Public Const ERROR_DS_OFFSET_RANGE_ERROR = 8262
[Description("The directory service detected the subsystem that allocates relative identifiers is disabled. This can occur as a protective mechanism when the system determines a significant portion of relative identifiers (RIDs) have been exhausted. Please see http://go.microsoft.com/fwlink/?LinkId=228610 for recommended diagnostic steps and the procedure to re-enable account creation.")] Public Const ERROR_DS_RIDMGR_DISABLED = 8263
[Description("The root object must be the head of a naming context. The root object cannot have an instantiated parent.")] Public Const ERROR_DS_ROOT_MUST_BE_NC = 8301
[Description("The add replica operation cannot be performed. The naming context must be writeable in order to create the replica.")] Public Const ERROR_DS_ADD_REPLICA_INHIBITED = 8302
[Description("A reference to an attribute that is not defined in the schema occurred.")] Public Const ERROR_DS_ATT_NOT_DEF_IN_SCHEMA = 8303
[Description("The maximum size of an object has been exceeded.")] Public Const ERROR_DS_MAX_OBJ_SIZE_EXCEEDED = 8304
[Description("An attempt was made to add an object to the directory with a name that is already in use.")] Public Const ERROR_DS_OBJ_STRING_NAME_EXISTS = 8305
[Description("An attempt was made to add an object of a class that does not have an RDN defined in the schema.")] Public Const ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA = 8306
[Description("An attempt was made to add an object using an RDN that is not the RDN defined in the schema.")] Public Const ERROR_DS_RDN_DOESNT_MATCH_SCHEMA = 8307
[Description("None of the requested attributes were found on the objects.")] Public Const ERROR_DS_NO_REQUESTED_ATTS_FOUND = 8308
[Description("The user buffer is too small.")] Public Const ERROR_DS_USER_BUFFER_TO_SMALL = 8309
[Description("The attribute specified in the operation is not present on the object.")] Public Const ERROR_DS_ATT_IS_NOT_ON_OBJ = 8310
[Description("Illegal modify operation. Some aspect of the modification is not permitted.")] Public Const ERROR_DS_ILLEGAL_MOD_OPERATION = 8311
[Description("The specified object is too large.")] Public Const ERROR_DS_OBJ_TOO_LARGE = 8312
[Description("The specified instance type is not valid.")] Public Const ERROR_DS_BAD_INSTANCE_TYPE = 8313
[Description("The operation must be performed at a master DSA.")] Public Const ERROR_DS_MASTERDSA_REQUIRED = 8314
[Description("The object class attribute must be specified.")] Public Const ERROR_DS_OBJECT_CLASS_REQUIRED = 8315
[Description("A required attribute is missing.")] Public Const ERROR_DS_MISSING_REQUIRED_ATT = 8316
[Description("An attempt was made to modify an object to include an attribute that is not legal for its class.")] Public Const ERROR_DS_ATT_NOT_DEF_FOR_CLASS = 8317
[Description("The specified attribute is already present on the object.")] Public Const ERROR_DS_ATT_ALREADY_EXISTS = 8318
[Description("The specified attribute is not present, or has no values.")] Public Const ERROR_DS_CANT_ADD_ATT_VALUES = 8320
[Description("Multiple values were specified for an attribute that can have only one value.")] Public Const ERROR_DS_SINGLE_VALUE_CONSTRAINT = 8321
[Description("A value for the attribute was not in the acceptable range of values.")] Public Const ERROR_DS_RANGE_CONSTRAINT = 8322
[Description("The specified value already exists.")] Public Const ERROR_DS_ATT_VAL_ALREADY_EXISTS = 8323
[Description("The attribute cannot be removed because it is not present on the object.")] Public Const ERROR_DS_CANT_REM_MISSING_ATT = 8324
[Description("The attribute value cannot be removed because it is not present on the object.")] Public Const ERROR_DS_CANT_REM_MISSING_ATT_VAL = 8325
[Description("The specified root object cannot be a subref.")] Public Const ERROR_DS_ROOT_CANT_BE_SUBREF = 8326
[Description("Chaining is not permitted.")] Public Const ERROR_DS_NO_CHAINING = 8327
[Description("Chained evaluation is not permitted.")] Public Const ERROR_DS_NO_CHAINED_EVAL = 8328
[Description("The operation could not be performed because the object's parent is either uninstantiated or deleted.")] Public Const ERROR_DS_NO_PARENT_OBJECT = 8329
[Description("Having a parent that is an alias is not permitted. Aliases are leaf objects.")] Public Const ERROR_DS_PARENT_IS_AN_ALIAS = 8330
[Description("The object and parent must be of the same type, either both masters or both replicas.")] Public Const ERROR_DS_CANT_MIX_MASTER_AND_REPS = 8331
[Description("The operation cannot be performed because child objects exist. This operation can only be performed on a leaf object.")] Public Const ERROR_DS_CHILDREN_EXIST = 8332
[Description("Directory object not found.")] Public Const ERROR_DS_OBJ_NOT_FOUND = 8333
[Description("The aliased object is missing.")] Public Const ERROR_DS_ALIASED_OBJ_MISSING = 8334
[Description("The object name has bad syntax.")] Public Const ERROR_DS_BAD_NAME_SYNTAX = 8335
[Description("It is not permitted for an alias to refer to another alias.")] Public Const ERROR_DS_ALIAS_POINTS_TO_ALIAS = 8336
[Description("The alias cannot be dereferenced.")] Public Const ERROR_DS_CANT_DEREF_ALIAS = 8337
[Description("The operation is out of scope.")] Public Const ERROR_DS_OUT_OF_SCOPE = 8338
[Description("The operation cannot continue because the object is in the process of being removed.")] Public Const ERROR_DS_OBJECT_BEING_REMOVED = 8339
[Description("The DSA object cannot be deleted.")] Public Const ERROR_DS_CANT_DELETE_DSA_OBJ = 8340
[Description("A directory service error has occurred.")] Public Const ERROR_DS_GENERIC_ERROR = 8341
[Description("The operation can only be performed on an internal master DSA object.")] Public Const ERROR_DS_DSA_MUST_BE_INT_MASTER = 8342
[Description("The object must be of class DSA.")] Public Const ERROR_DS_CLASS_NOT_DSA = 8343
[Description("Insufficient access rights to perform the operation.")] Public Const ERROR_DS_INSUFF_ACCESS_RIGHTS = 8344
[Description("The object cannot be added because the parent is not on the list of possible superiors.")] Public Const ERROR_DS_ILLEGAL_SUPERIOR = 8345
[Description("Access to the attribute is not permitted because the attribute is owned by the Security Accounts Manager (SAM).")] Public Const ERROR_DS_ATTRIBUTE_OWNED_BY_SAM = 8346
[Description("The name has too many parts.")] Public Const ERROR_DS_NAME_TOO_MANY_PARTS = 8347
[Description("The name is too long.")] Public Const ERROR_DS_NAME_TOO_LONG = 8348
[Description("The name value is too long.")] Public Const ERROR_DS_NAME_VALUE_TOO_LONG = 8349
[Description("The directory service encountered an error parsing a name.")] Public Const ERROR_DS_NAME_UNPARSEABLE = 8350
[Description("The directory service cannot get the attribute type for a name.")] Public Const ERROR_DS_NAME_TYPE_UNKNOWN = 8351
[Description("The name does not identify an object; the name identifies a phantom.")] Public Const ERROR_DS_NOT_AN_OBJECT = 8352
[Description("The security descriptor is too short.")] Public Const ERROR_DS_SEC_DESC_TOO_SHORT = 8353
[Description("The security descriptor is invalid.")] Public Const ERROR_DS_SEC_DESC_INVALID = 8354
[Description("Failed to create name for deleted object.")] Public Const ERROR_DS_NO_DELETED_NAME = 8355
[Description("The parent of a new subref must exist.")] Public Const ERROR_DS_SUBREF_MUST_HAVE_PARENT = 8356
[Description("The object must be a naming context.")] Public Const ERROR_DS_NCNAME_MUST_BE_NC = 8357
[Description("It is not permitted to add an attribute which is owned by the system.")] Public Const ERROR_DS_CANT_ADD_SYSTEM_ONLY = 8358
[Description("The class of the object must be structural; you cannot instantiate an abstract class.")] Public Const ERROR_DS_CLASS_MUST_BE_CONCRETE = 8359
[Description("The schema object could not be found.")] Public Const ERROR_DS_INVALID_DMD = 8360
[Description("A local object with this GUID (dead or alive) already exists.")] Public Const ERROR_DS_OBJ_GUID_EXISTS = 8361
[Description("The operation cannot be performed on a back link.")] Public Const ERROR_DS_NOT_ON_BACKLINK = 8362
[Description("The cross reference for the specified naming context could not be found.")] Public Const ERROR_DS_NO_CROSSREF_FOR_NC = 8363
[Description("The operation could not be performed because the directory service is shutting down.")] Public Const ERROR_DS_SHUTTING_DOWN = 8364
[Description("The directory service request is invalid.")] Public Const ERROR_DS_UNKNOWN_OPERATION = 8365
[Description("The role owner attribute could not be read.")] Public Const ERROR_DS_INVALID_ROLE_OWNER = 8366
[Description("The requested FSMO operation failed. The current FSMO holder could not be contacted.")] Public Const ERROR_DS_COULDNT_CONTACT_FSMO = 8367
[Description("Modification of a DN across a naming context is not permitted.")] Public Const ERROR_DS_CROSS_NC_DN_RENAME = 8368
[Description("The attribute cannot be modified because it is owned by the system.")] Public Const ERROR_DS_CANT_MOD_SYSTEM_ONLY = 8369
[Description("Only the replicator can perform this function.")] Public Const ERROR_DS_REPLICATOR_ONLY = 8370
[Description("The specified class is not defined.")] Public Const ERROR_DS_OBJ_CLASS_NOT_DEFINED = 8371
[Description("The specified class is not a subclass.")] Public Const ERROR_DS_OBJ_CLASS_NOT_SUBCLASS = 8372
[Description("The name reference is invalid.")] Public Const ERROR_DS_NAME_REFERENCE_INVALID = 8373
[Description("A cross reference already exists.")] Public Const ERROR_DS_CROSS_REF_EXISTS = 8374
[Description("It is not permitted to delete a master cross reference.")] Public Const ERROR_DS_CANT_DEL_MASTER_CROSSREF = 8375
[Description("Subtree notifications are only supported on NC heads.")] Public Const ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD = 8376
[Description("Notification filter is too complex.")] Public Const ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX = 8377
[Description("Schema update failed: duplicate RDN.")] Public Const ERROR_DS_DUP_RDN = 8378
[Description("Schema update failed: duplicate OID.")] Public Const ERROR_DS_DUP_OID = 8379
[Description("Schema update failed: duplicate MAPI identifier.")] Public Const ERROR_DS_DUP_MAPI_ID = 8380
[Description("Schema update failed: duplicate schema-id GUID.")] Public Const ERROR_DS_DUP_SCHEMA_ID_GUID = 8381
[Description("Schema update failed: duplicate LDAP display name.")] Public Const ERROR_DS_DUP_LDAP_DISPLAY_NAME = 8382
[Description("Schema update failed: range-lower less than range upper.")] Public Const ERROR_DS_SEMANTIC_ATT_TEST = 8383
[Description("Schema update failed: syntax mismatch.")] Public Const ERROR_DS_SYNTAX_MISMATCH = 8384
[Description("Schema deletion failed: attribute is used in must-contain.")] Public Const ERROR_DS_EXISTS_IN_MUST_HAVE = 8385
[Description("Schema deletion failed: attribute is used in may-contain.")] Public Const ERROR_DS_EXISTS_IN_MAY_HAVE = 8386
[Description("Schema update failed: attribute in may-contain does not exist.")] Public Const ERROR_DS_NONEXISTENT_MAY_HAVE = 8387
[Description("Schema update failed: attribute in must-contain does not exist.")] Public Const ERROR_DS_NONEXISTENT_MUST_HAVE = 8388
[Description("Schema update failed: class in aux-class list does not exist or is not an auxiliary class.")] Public Const ERROR_DS_AUX_CLS_TEST_FAIL = 8389
[Description("Schema update failed: class in poss-superiors does not exist.")] Public Const ERROR_DS_NONEXISTENT_POSS_SUP = 8390
[Description("Schema update failed: class in subclassof list does not exist or does not satisfy hierarchy rules.")] Public Const ERROR_DS_SUB_CLS_TEST_FAIL = 8391
[Description("Schema update failed: Rdn-Att-Id has wrong syntax.")] Public Const ERROR_DS_BAD_RDN_ATT_ID_SYNTAX = 8392
[Description("Schema deletion failed: class is used as auxiliary class.")] Public Const ERROR_DS_EXISTS_IN_AUX_CLS = 8393
[Description("Schema deletion failed: class is used as sub class.")] Public Const ERROR_DS_EXISTS_IN_SUB_CLS = 8394
[Description("Schema deletion failed: class is used as poss superior.")] Public Const ERROR_DS_EXISTS_IN_POSS_SUP = 8395
[Description("Schema update failed in recalculating validation cache.")] Public Const ERROR_DS_RECALCSCHEMA_FAILED = 8396
[Description("The tree deletion is not finished. The request must be made again to continue deleting the tree.")] Public Const ERROR_DS_TREE_DELETE_NOT_FINISHED = 8397
[Description("The requested delete operation could not be performed.")] Public Const ERROR_DS_CANT_DELETE = 8398
[Description("Cannot read the governs class identifier for the schema record.")] Public Const ERROR_DS_ATT_SCHEMA_REQ_ID = 8399
[Description("The attribute schema has bad syntax.")] Public Const ERROR_DS_BAD_ATT_SCHEMA_SYNTAX = 8400
[Description("The attribute could not be cached.")] Public Const ERROR_DS_CANT_CACHE_ATT = 8401
[Description("The class could not be cached.")] Public Const ERROR_DS_CANT_CACHE_CLASS = 8402
[Description("The attribute could not be removed from the cache.")] Public Const ERROR_DS_CANT_REMOVE_ATT_CACHE = 8403
[Description("The class could not be removed from the cache.")] Public Const ERROR_DS_CANT_REMOVE_CLASS_CACHE = 8404
[Description("The distinguished name attribute could not be read.")] Public Const ERROR_DS_CANT_RETRIEVE_DN = 8405
[Description("No superior reference has been configured for the directory service. The directory service is therefore unable to issue referrals to objects outside this forest.")] Public Const ERROR_DS_MISSING_SUPREF = 8406
[Description("The instance type attribute could not be retrieved.")] Public Const ERROR_DS_CANT_RETRIEVE_INSTANCE = 8407
[Description("An internal error has occurred.")] Public Const ERROR_DS_CODE_INCONSISTENCY = 8408
[Description("A database error has occurred.")] Public Const ERROR_DS_DATABASE_ERROR = 8409
[Description("The attribute GOVERNSID is missing.")] Public Const ERROR_DS_GOVERNSID_MISSING = 8410
[Description("An expected attribute is missing.")] Public Const ERROR_DS_MISSING_EXPECTED_ATT = 8411
[Description("The specified naming context is missing a cross reference.")] Public Const ERROR_DS_NCNAME_MISSING_CR_REF = 8412
[Description("A security checking error has occurred.")] Public Const ERROR_DS_SECURITY_CHECKING_ERROR = 8413
[Description("The schema is not loaded.")] Public Const ERROR_DS_SCHEMA_NOT_LOADED = 8414
[Description("Schema allocation failed. Please check if the machine is running low on memory.")] Public Const ERROR_DS_SCHEMA_ALLOC_FAILED = 8415
[Description("Failed to obtain the required syntax for the attribute schema.")] Public Const ERROR_DS_ATT_SCHEMA_REQ_SYNTAX = 8416
[Description("The global catalog verification failed. The global catalog is not available or does not support the operation. Some part of the directory is currently not available.")] Public Const ERROR_DS_GCVERIFY_ERROR = 8417
[Description("The replication operation failed because of a schema mismatch between the servers involved.")] Public Const ERROR_DS_DRA_SCHEMA_MISMATCH = 8418
[Description("The DSA object could not be found.")] Public Const ERROR_DS_CANT_FIND_DSA_OBJ = 8419
[Description("The naming context could not be found.")] Public Const ERROR_DS_CANT_FIND_EXPECTED_NC = 8420
[Description("The naming context could not be found in the cache.")] Public Const ERROR_DS_CANT_FIND_NC_IN_CACHE = 8421
[Description("The child object could not be retrieved.")] Public Const ERROR_DS_CANT_RETRIEVE_CHILD = 8422
[Description("The modification was not permitted for security reasons.")] Public Const ERROR_DS_SECURITY_ILLEGAL_MODIFY = 8423
[Description("The operation cannot replace the hidden record.")] Public Const ERROR_DS_CANT_REPLACE_HIDDEN_REC = 8424
[Description("The hierarchy file is invalid.")] Public Const ERROR_DS_BAD_HIERARCHY_FILE = 8425
[Description("The attempt to build the hierarchy table failed.")] Public Const ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED = 8426
[Description("The directory configuration parameter is missing from the registry.")] Public Const ERROR_DS_CONFIG_PARAM_MISSING = 8427
[Description("The attempt to count the address book indices failed.")] Public Const ERROR_DS_COUNTING_AB_INDICES_FAILED = 8428
[Description("The allocation of the hierarchy table failed.")] Public Const ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED = 8429
[Description("The directory service encountered an internal failure.")] Public Const ERROR_DS_INTERNAL_FAILURE = 8430
[Description("The directory service encountered an unknown failure.")] Public Const ERROR_DS_UNKNOWN_ERROR = 8431
[Description("A root object requires a class of 'top'.")] Public Const ERROR_DS_ROOT_REQUIRES_CLASS_TOP = 8432
[Description("This directory server is shutting down, and cannot take ownership of new floating single-master operation roles.")] Public Const ERROR_DS_REFUSING_FSMO_ROLES = 8433
[Description("The directory service is missing mandatory configuration information, and is unable to determine the ownership of floating single-master operation roles.")] Public Const ERROR_DS_MISSING_FSMO_SETTINGS = 8434
[Description("The directory service was unable to transfer ownership of one or more floating single-master operation roles to other servers.")] Public Const ERROR_DS_UNABLE_TO_SURRENDER_ROLES = 8435
[Description("The replication operation failed.")] Public Const ERROR_DS_DRA_GENERIC = 8436
[Description("An invalid parameter was specified for this replication operation.")] Public Const ERROR_DS_DRA_INVALID_PARAMETER = 8437
[Description("The directory service is too busy to complete the replication operation at this time.")] Public Const ERROR_DS_DRA_BUSY = 8438
[Description("The distinguished name specified for this replication operation is invalid.")] Public Const ERROR_DS_DRA_BAD_DN = 8439
[Description("The naming context specified for this replication operation is invalid.")] Public Const ERROR_DS_DRA_BAD_NC = 8440
[Description("The distinguished name specified for this replication operation already exists.")] Public Const ERROR_DS_DRA_DN_EXISTS = 8441
[Description("The replication system encountered an internal error.")] Public Const ERROR_DS_DRA_INTERNAL_ERROR = 8442
[Description("The replication operation encountered a database inconsistency.")] Public Const ERROR_DS_DRA_INCONSISTENT_DIT = 8443
[Description("The server specified for this replication operation could not be contacted.")] Public Const ERROR_DS_DRA_CONNECTION_FAILED = 8444
[Description("The replication operation encountered an object with an invalid instance type.")] Public Const ERROR_DS_DRA_BAD_INSTANCE_TYPE = 8445
[Description("The replication operation failed to allocate memory.")] Public Const ERROR_DS_DRA_OUT_OF_MEM = 8446
[Description("The replication operation encountered an error with the mail system.")] Public Const ERROR_DS_DRA_MAIL_PROBLEM = 8447
[Description("The replication reference information for the target server already exists.")] Public Const ERROR_DS_DRA_REF_ALREADY_EXISTS = 8448
[Description("The replication reference information for the target server does not exist.")] Public Const ERROR_DS_DRA_REF_NOT_FOUND = 8449
[Description("The naming context cannot be removed because it is replicated to another server.")] Public Const ERROR_DS_DRA_OBJ_IS_REP_SOURCE = 8450
[Description("The replication operation encountered a database error.")] Public Const ERROR_DS_DRA_DB_ERROR = 8451
[Description("The naming context is in the process of being removed or is not replicated from the specified server.")] Public Const ERROR_DS_DRA_NO_REPLICA = 8452
[Description("Replication access was denied.")] Public Const ERROR_DS_DRA_ACCESS_DENIED = 8453
[Description("The requested operation is not supported by this version of the directory service.")] Public Const ERROR_DS_DRA_NOT_SUPPORTED = 8454
[Description("The replication remote procedure call was cancelled.")] Public Const ERROR_DS_DRA_RPC_CANCELLED = 8455
[Description("The source server is currently rejecting replication requests.")] Public Const ERROR_DS_DRA_SOURCE_DISABLED = 8456
[Description("The destination server is currently rejecting replication requests.")] Public Const ERROR_DS_DRA_SINK_DISABLED = 8457
[Description("The replication operation failed due to a collision of object names.")] Public Const ERROR_DS_DRA_NAME_COLLISION = 8458
[Description("The replication source has been reinstalled.")] Public Const ERROR_DS_DRA_SOURCE_REINSTALLED = 8459
[Description("The replication operation failed because a required parent object is missing.")] Public Const ERROR_DS_DRA_MISSING_PARENT = 8460
[Description("The replication operation was preempted.")] Public Const ERROR_DS_DRA_PREEMPTED = 8461
[Description("The replication synchronization attempt was abandoned because of a lack of updates.")] Public Const ERROR_DS_DRA_ABANDON_SYNC = 8462
[Description("The replication operation was terminated because the system is shutting down.")] Public Const ERROR_DS_DRA_SHUTDOWN = 8463
[Description("Synchronization attempt failed because the destination DC is currently waiting to synchronize new partial attributes from source. This condition is normal if a recent schema change modified the partial attribute set. The destination partial attribute set is not a subset of source partial attribute set.")] Public Const ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET = 8464
[Description("The replication synchronization attempt failed because a master replica attempted to sync from a partial replica.")] Public Const ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA = 8465
[Description("The server specified for this replication operation was contacted, but that server was unable to contact an additional server needed to complete the operation.")] Public Const ERROR_DS_DRA_EXTN_CONNECTION_FAILED = 8466
[Description("The version of the directory service schema of the source forest is not compatible with the version of directory service on this computer.")] Public Const ERROR_DS_INSTALL_SCHEMA_MISMATCH = 8467
[Description("Schema update failed: An attribute with the same link identifier already exists.")] Public Const ERROR_DS_DUP_LINK_ID = 8468
[Description("Name translation: Generic processing error.")] Public Const ERROR_DS_NAME_ERROR_RESOLVING = 8469
[Description("Name translation: Could not find the name or insufficient right to see name.")] Public Const ERROR_DS_NAME_ERROR_NOT_FOUND = 8470
[Description("Name translation: Input name mapped to more than one output name.")] Public Const ERROR_DS_NAME_ERROR_NOT_UNIQUE = 8471
[Description("Name translation: Input name found, but not the associated output format.")] Public Const ERROR_DS_NAME_ERROR_NO_MAPPING = 8472
[Description("Name translation: Unable to resolve completely, only the domain was found.")] Public Const ERROR_DS_NAME_ERROR_DOMAIN_ONLY = 8473
[Description("Name translation: Unable to perform purely syntactical mapping at the client without going out to the wire.")] Public Const ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING = 8474
[Description("Modification of a constructed attribute is not allowed.")] Public Const ERROR_DS_CONSTRUCTED_ATT_MOD = 8475
[Description("The OM-Object-Class specified is incorrect for an attribute with the specified syntax.")] Public Const ERROR_DS_WRONG_OM_OBJ_CLASS = 8476
[Description("The replication request has been posted; waiting for reply.")] Public Const ERROR_DS_DRA_REPL_PENDING = 8477
[Description("The requested operation requires a directory service, and none was available.")] Public Const ERROR_DS_DS_REQUIRED = 8478
[Description("The LDAP display name of the class or attribute contains non-ASCII characters.")] Public Const ERROR_DS_INVALID_LDAP_DISPLAY_NAME = 8479
[Description("The requested search operation is only supported for base searches.")] Public Const ERROR_DS_NON_BASE_SEARCH = 8480
[Description("The search failed to retrieve attributes from the database.")] Public Const ERROR_DS_CANT_RETRIEVE_ATTS = 8481
[Description("The schema update operation tried to add a backward link attribute that has no corresponding forward link.")] Public Const ERROR_DS_BACKLINK_WITHOUT_LINK = 8482
[Description("Source and destination of a cross-domain move do not agree on the object's epoch number. Either source or destination does not have the latest version of the object.")] Public Const ERROR_DS_EPOCH_MISMATCH = 8483
[Description("Source and destination of a cross-domain move do not agree on the object's current name. Either source or destination does not have the latest version of the object.")] Public Const ERROR_DS_SRC_NAME_MISMATCH = 8484
[Description("Source and destination for the cross-domain move operation are identical. Caller should use local move operation instead of cross-domain move operation.")] Public Const ERROR_DS_SRC_AND_DST_NC_IDENTICAL = 8485
[Description("Source and destination for a cross-domain move are not in agreement on the naming contexts in the forest. Either source or destination does not have the latest version of the Partitions container.")] Public Const ERROR_DS_DST_NC_MISMATCH = 8486
[Description("Destination of a cross-domain move is not authoritative for the destination naming context.")] Public Const ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC = 8487
[Description("Source and destination of a cross-domain move do not agree on the identity of the source object. Either source or destination does not have the latest version of the source object.")] Public Const ERROR_DS_SRC_GUID_MISMATCH = 8488
[Description("Object being moved across-domains is already known to be deleted by the destination server. The source server does not have the latest version of the source object.")] Public Const ERROR_DS_CANT_MOVE_DELETED_OBJECT = 8489
[Description("Another operation which requires exclusive access to the PDC FSMO is already in progress.")] Public Const ERROR_DS_PDC_OPERATION_IN_PROGRESS = 8490
[Description("A cross-domain move operation failed such that two versions of the moved object exist - one each in the source and destination domains. The destination object needs to be removed to restore the system to a consistent state.")] Public Const ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD = 8491
[Description("This object may not be moved across domain boundaries either because cross-domain moves for this class are disallowed, or the object has some special characteristics, e.g.: trust account or restricted RID, which prevent its move.")] Public Const ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION = 8492
[Description("Can't move objects with memberships across domain boundaries as once moved, this would violate the membership conditions of the account group. Remove the object from any account group memberships and retry.")] Public Const ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS = 8493
[Description("A naming context head must be the immediate child of another naming context head, not of an interior node.")] Public Const ERROR_DS_NC_MUST_HAVE_NC_PARENT = 8494
[Description("The directory cannot validate the proposed naming context name because it does not hold a replica of the naming context above the proposed naming context. Please ensure that the domain naming master role is held by a server that is configured as a global catalog server, and that the server is up to date with its replication partners. (Applies only to Windows 2000 Domain Naming masters)")] Public Const ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE = 8495
[Description("Destination domain must be in native mode.")] Public Const ERROR_DS_DST_DOMAIN_NOT_NATIVE = 8496
[Description("The operation cannot be performed because the server does not have an infrastructure container in the domain of interest.")] Public Const ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER = 8497
[Description("Cross-domain move of non-empty account groups is not allowed.")] Public Const ERROR_DS_CANT_MOVE_ACCOUNT_GROUP = 8498
[Description("Cross-domain move of non-empty resource groups is not allowed.")] Public Const ERROR_DS_CANT_MOVE_RESOURCE_GROUP = 8499
[Description("The search flags for the attribute are invalid. The ANR bit is valid only on attributes of Unicode or Teletex strings.")] Public Const ERROR_DS_INVALID_SEARCH_FLAG = 8500
[Description("Tree deletions starting at an object which has an NC head as a descendant are not allowed.")] Public Const ERROR_DS_NO_TREE_DELETE_ABOVE_NC = 8501
[Description("The directory service failed to lock a tree in preparation for a tree deletion because the tree was in use.")] Public Const ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE = 8502
[Description("The directory service failed to identify the list of objects to delete while attempting a tree deletion.")] Public Const ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE = 8503
[Description("Error Status: 0x%2. Please shutdown this system and reboot into Directory Services Restore Mode, check the event log for more detailed information.")] Public Const ERROR_DS_SAM_INIT_FAILURE = 8504
[Description("Only an administrator can modify the membership list of an administrative group.")] Public Const ERROR_DS_SENSITIVE_GROUP_VIOLATION = 8505
[Description("Cannot change the primary group ID of a domain controller account.")] Public Const ERROR_DS_CANT_MOD_PRIMARYGROUPID = 8506
[Description("An attempt is made to modify the base schema.")] Public Const ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD = 8507
[Description("Adding a new mandatory attribute to an existing class, deleting a mandatory attribute from an existing class, or adding an optional attribute to the special class Top that is not a backlink attribute (directly or through inheritance, for example, by adding or deleting an auxiliary class) is not allowed.")] Public Const ERROR_DS_NONSAFE_SCHEMA_CHANGE = 8508
[Description("Schema update is not allowed on this DC because the DC is not the schema FSMO Role Owner.")] Public Const ERROR_DS_SCHEMA_UPDATE_DISALLOWED = 8509
[Description("An object of this class cannot be created under the schema container. You can only create attribute-schema and class-schema objects under the schema container.")] Public Const ERROR_DS_CANT_CREATE_UNDER_SCHEMA = 8510
[Description("The replica/child install failed to get the objectVersion attribute on the schema container on the source DC. Either the attribute is missing on the schema container or the credentials supplied do not have permission to read it.")] Public Const ERROR_DS_INSTALL_NO_SRC_SCH_VERSION = 8511
[Description("The replica/child install failed to read the objectVersion attribute in the SCHEMA section of the file schema.ini in the system32 directory.")] Public Const ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE = 8512
[Description("The specified group type is invalid.")] Public Const ERROR_DS_INVALID_GROUP_TYPE = 8513
[Description("You cannot nest global groups in a mixed domain if the group is security-enabled.")] Public Const ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN = 8514
[Description("You cannot nest local groups in a mixed domain if the group is security-enabled.")] Public Const ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN = 8515
[Description("A global group cannot have a local group as a member.")] Public Const ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER = 8516
[Description("A global group cannot have a universal group as a member.")] Public Const ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER = 8517
[Description("A universal group cannot have a local group as a member.")] Public Const ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER = 8518
[Description("A global group cannot have a cross-domain member.")] Public Const ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER = 8519
[Description("A local group cannot have another cross domain local group as a member.")] Public Const ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER = 8520
[Description("A group with primary members cannot change to a security-disabled group.")] Public Const ERROR_DS_HAVE_PRIMARY_MEMBERS = 8521
[Description("The schema cache load failed to convert the string default SD on a class-schema object.")] Public Const ERROR_DS_STRING_SD_CONVERSION_FAILED = 8522
[Description("Only DSAs configured to be Global Catalog servers should be allowed to hold the Domain Naming Master FSMO role. (Applies only to Windows 2000 servers)")] Public Const ERROR_DS_NAMING_MASTER_GC = 8523
[Description("The DSA operation is unable to proceed because of a DNS lookup failure.")] Public Const ERROR_DS_DNS_LOOKUP_FAILURE = 8524
[Description("While processing a change to the DNS Host Name for an object, the Service Principal Name values could not be kept in sync.")] Public Const ERROR_DS_COULDNT_UPDATE_SPNS = 8525
[Description("The Security Descriptor attribute could not be read.")] Public Const ERROR_DS_CANT_RETRIEVE_SD = 8526
[Description("The object requested was not found, but an object with that key was found.")] Public Const ERROR_DS_KEY_NOT_UNIQUE = 8527
[Description("The syntax of the linked attribute being added is incorrect. Forward links can only have syntax 2.5.5.1, 2.5.5.7, and 2.5.5.14, and backlinks can only have syntax 2.5.5.1")] Public Const ERROR_DS_WRONG_LINKED_ATT_SYNTAX = 8528
[Description("Security Account Manager needs to get the boot password.")] Public Const ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD = 8529
[Description("Security Account Manager needs to get the boot key from floppy disk.")] Public Const ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY = 8530
[Description("Directory Service cannot start.")] Public Const ERROR_DS_CANT_START = 8531
[Description("Directory Services could not start.")] Public Const ERROR_DS_INIT_FAILURE = 8532
[Description("The connection between client and server requires packet privacy or better.")] Public Const ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION = 8533
[Description("The source domain may not be in the same forest as destination.")] Public Const ERROR_DS_SOURCE_DOMAIN_IN_FOREST = 8534
[Description("The destination domain must be in the forest.")] Public Const ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST = 8535
[Description("The operation requires that destination domain auditing be enabled.")] Public Const ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED = 8536
[Description("The operation couldn't locate a DC for the source domain.")] Public Const ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN = 8537
[Description("The source object must be a group or user.")] Public Const ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER = 8538
[Description("The source object's SID already exists in destination forest.")] Public Const ERROR_DS_SRC_SID_EXISTS_IN_FOREST = 8539
[Description("The source and destination object must be of the same type.")] Public Const ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH = 8540
[Description("Error Status: 0x%2. Click OK to shut down the system and reboot into Safe Mode. Check the event log for detailed information.")] Public Const ERROR_SAM_INIT_FAILURE = 8541
[Description("Schema information could not be included in the replication request.")] Public Const ERROR_DS_DRA_SCHEMA_INFO_SHIP = 8542
[Description("The replication operation could not be completed due to a schema incompatibility.")] Public Const ERROR_DS_DRA_SCHEMA_CONFLICT = 8543
[Description("The replication operation could not be completed due to a previous schema incompatibility.")] Public Const ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT = 8544
[Description("The replication update could not be applied because either the source or the destination has not yet received information regarding a recent cross-domain move operation.")] Public Const ERROR_DS_DRA_OBJ_NC_MISMATCH = 8545
[Description("The requested domain could not be deleted because there exist domain controllers that still host this domain.")] Public Const ERROR_DS_NC_STILL_HAS_DSAS = 8546
[Description("The requested operation can be performed only on a global catalog server.")] Public Const ERROR_DS_GC_REQUIRED = 8547
[Description("A local group can only be a member of other local groups in the same domain.")] Public Const ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY = 8548
[Description("Foreign security principals cannot be members of universal groups.")] Public Const ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS = 8549
[Description("The attribute is not allowed to be replicated to the GC because of security reasons.")] Public Const ERROR_DS_CANT_ADD_TO_GC = 8550
[Description("The checkpoint with the PDC could not be taken because there too many modifications being processed currently.")] Public Const ERROR_DS_NO_CHECKPOINT_WITH_PDC = 8551
[Description("The operation requires that source domain auditing be enabled.")] Public Const ERROR_DS_SOURCE_AUDITING_NOT_ENABLED = 8552
[Description("Security principal objects can only be created inside domain naming contexts.")] Public Const ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC = 8553
[Description("A Service Principal Name (SPN) could not be constructed because the provided hostname is not in the necessary format.")] Public Const ERROR_DS_INVALID_NAME_FOR_SPN = 8554
[Description("A Filter was passed that uses constructed attributes.")] Public Const ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS = 8555
[Description("The unicodePwd attribute value must be enclosed in double quotes.")] Public Const ERROR_DS_UNICODEPWD_NOT_IN_QUOTES = 8556
[Description("Your computer could not be joined to the domain. You have exceeded the maximum number of computer accounts you are allowed to create in this domain. Contact your system administrator to have this limit reset or increased.")] Public Const ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED = 8557
[Description("For security reasons, the operation must be run on the destination DC.")] Public Const ERROR_DS_MUST_BE_RUN_ON_DST_DC = 8558
[Description("For security reasons, the source DC must be NT4SP4 or greater.")] Public Const ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER = 8559
[Description("Critical Directory Service System objects cannot be deleted during tree delete operations. The tree delete may have been partially performed.")] Public Const ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ = 8560
[Description("Error Status: 0x%2. Please click OK to shutdown the system. You can use the recovery console to diagnose the system further.")] Public Const ERROR_DS_INIT_FAILURE_CONSOLE = 8561
[Description("Error Status: 0x%2. Please click OK to shutdown the system. You can use the recovery console to diagnose the system further.")] Public Const ERROR_DS_SAM_INIT_FAILURE_CONSOLE = 8562
[Description("The version of the operating system is incompatible with the current AD DS forest functional level or AD LDS Configuration Set functional level. You must upgrade to a new version of the operating system before this server can become an AD DS Domain Controller or add an AD LDS Instance in this AD DS Forest or AD LDS Configuration Set.")] Public Const ERROR_DS_FOREST_VERSION_TOO_HIGH = 8563
[Description("The version of the operating system installed is incompatible with the current domain functional level. You must upgrade to a new version of the operating system before this server can become a domain controller in this domain.")] Public Const ERROR_DS_DOMAIN_VERSION_TOO_HIGH = 8564
[Description("The version of the operating system installed on this server no longer supports the current AD DS Forest functional level or AD LDS Configuration Set functional level. You must raise the AD DS Forest functional level or AD LDS Configuration Set functional level before this server can become an AD DS Domain Controller or an AD LDS Instance in this Forest or Configuration Set.")] Public Const ERROR_DS_FOREST_VERSION_TOO_LOW = 8565
[Description("The version of the operating system installed on this server no longer supports the current domain functional level. You must raise the domain functional level before this server can become a domain controller in this domain.")] Public Const ERROR_DS_DOMAIN_VERSION_TOO_LOW = 8566
[Description("The version of the operating system installed on this server is incompatible with the functional level of the domain or forest.")] Public Const ERROR_DS_INCOMPATIBLE_VERSION = 8567
[Description("The functional level of the domain (or forest) cannot be raised to the requested value, because there exist one or more domain controllers in the domain (or forest) that are at a lower incompatible functional level.")] Public Const ERROR_DS_LOW_DSA_VERSION = 8568
[Description("The forest functional level cannot be raised to the requested value since one or more domains are still in mixed domain mode. All domains in the forest must be in native mode, for you to raise the forest functional level.")] Public Const ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN = 8569
[Description("The sort order requested is not supported.")] Public Const ERROR_DS_NOT_SUPPORTED_SORT_ORDER = 8570
[Description("The requested name already exists as a unique identifier.")] Public Const ERROR_DS_NAME_NOT_UNIQUE = 8571
[Description("The machine account was created pre-NT4. The account needs to be recreated.")] Public Const ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4 = 8572
[Description("The database is out of version store.")] Public Const ERROR_DS_OUT_OF_VERSION_STORE = 8573
[Description("Unable to continue operation because multiple conflicting controls were used.")] Public Const ERROR_DS_INCOMPATIBLE_CONTROLS_USED = 8574
[Description("Unable to find a valid security descriptor reference domain for this partition.")] Public Const ERROR_DS_NO_REF_DOMAIN = 8575
[Description("Schema update failed: The link identifier is reserved.")] Public Const ERROR_DS_RESERVED_LINK_ID = 8576
[Description("Schema update failed: There are no link identifiers available.")] Public Const ERROR_DS_LINK_ID_NOT_AVAILABLE = 8577
[Description("An account group cannot have a universal group as a member.")] Public Const ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER = 8578
[Description("Rename or move operations on naming context heads or read-only objects are not allowed.")] Public Const ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE = 8579
[Description("Move operations on objects in the schema naming context are not allowed.")] Public Const ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC = 8580
[Description("A system flag has been set on the object and does not allow the object to be moved or renamed.")] Public Const ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG = 8581
[Description("This object is not allowed to change its grandparent container. Moves are not forbidden on this object, but are restricted to sibling containers.")] Public Const ERROR_DS_MODIFYDN_WRONG_GRANDPARENT = 8582
[Description("Unable to resolve completely, a referral to another forest is generated.")] Public Const ERROR_DS_NAME_ERROR_TRUST_REFERRAL = 8583
[Description("The requested action is not supported on standard server.")] Public Const ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER = 8584
[Description("Could not access a partition of the directory service located on a remote server. Make sure at least one server is running for the partition in question.")] Public Const ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD = 8585
[Description("The directory cannot validate the proposed naming context (or partition) name because it does not hold a replica nor can it contact a replica of the naming context above the proposed naming context. Please ensure that the parent naming context is properly registered in DNS, and at least one replica of this naming context is reachable by the Domain Naming master.")] Public Const ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2 = 8586
[Description("The thread limit for this request was exceeded.")] Public Const ERROR_DS_THREAD_LIMIT_EXCEEDED = 8587
[Description("The Global catalog server is not in the closest site.")] Public Const ERROR_DS_NOT_CLOSEST = 8588
[Description("The DS cannot derive a service principal name (SPN) with which to mutually authenticate the target server because the corresponding server object in the local DS database has no serverReference attribute.")] Public Const ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF = 8589
[Description("The Directory Service failed to enter single user mode.")] Public Const ERROR_DS_SINGLE_USER_MODE_FAILED = 8590
[Description("The Directory Service cannot parse the script because of a syntax error.")] Public Const ERROR_DS_NTDSCRIPT_SYNTAX_ERROR = 8591
[Description("The Directory Service cannot process the script because of an error.")] Public Const ERROR_DS_NTDSCRIPT_PROCESS_ERROR = 8592
[Description("The directory service cannot perform the requested operation because the servers involved are of different replication epochs (which is usually related to a domain rename that is in progress).")] Public Const ERROR_DS_DIFFERENT_REPL_EPOCHS = 8593
[Description("The directory service binding must be renegotiated due to a change in the server extensions information.")] Public Const ERROR_DS_DRS_EXTENSIONS_CHANGED = 8594
[Description("Operation not allowed on a disabled cross ref.")] Public Const ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR = 8595
[Description("Schema update failed: No values for msDS-IntId are available.")] Public Const ERROR_DS_NO_MSDS_INTID = 8596
[Description("Schema update failed: Duplicate msDS-INtId. Retry the operation.")] Public Const ERROR_DS_DUP_MSDS_INTID = 8597
[Description("Schema deletion failed: attribute is used in rDNAttID.")] Public Const ERROR_DS_EXISTS_IN_RDNATTID = 8598
[Description("The directory service failed to authorize the request.")] Public Const ERROR_DS_AUTHORIZATION_FAILED = 8599
[Description("The Directory Service cannot process the script because it is invalid.")] Public Const ERROR_DS_INVALID_SCRIPT = 8600
[Description("The remote create cross reference operation failed on the Domain Naming Master FSMO. The operation's error is in the extended data.")] Public Const ERROR_DS_REMOTE_CROSSREF_OP_FAILED = 8601
[Description("A cross reference is in use locally with the same name.")] Public Const ERROR_DS_CROSS_REF_BUSY = 8602
[Description("The DS cannot derive a service principal name (SPN) with which to mutually authenticate the target server because the server's domain has been deleted from the forest.")] Public Const ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN = 8603
[Description("Writeable NCs prevent this DC from demoting.")] Public Const ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC = 8604
[Description("The requested object has a non-unique identifier and cannot be retrieved.")] Public Const ERROR_DS_DUPLICATE_ID_FOUND = 8605
[Description("Insufficient attributes were given to create an object. This object may not exist because it may have been deleted and already garbage collected.")] Public Const ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT = 8606
[Description("The group cannot be converted due to attribute restrictions on the requested group type.")] Public Const ERROR_DS_GROUP_CONVERSION_ERROR = 8607
[Description("Cross-domain move of non-empty basic application groups is not allowed.")] Public Const ERROR_DS_CANT_MOVE_APP_BASIC_GROUP = 8608
[Description("Cross-domain move of non-empty query based application groups is not allowed.")] Public Const ERROR_DS_CANT_MOVE_APP_QUERY_GROUP = 8609
[Description("The FSMO role ownership could not be verified because its directory partition has not replicated successfully with at least one replication partner.")] Public Const ERROR_DS_ROLE_NOT_VERIFIED = 8610
[Description("The target container for a redirection of a well known object container cannot already be a special container.")] Public Const ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL = 8611
[Description("The Directory Service cannot perform the requested operation because a domain rename operation is in progress.")] Public Const ERROR_DS_DOMAIN_RENAME_IN_PROGRESS = 8612
[Description("The directory service detected a child partition below the requested partition name. The partition hierarchy must be created in a top down method.")] Public Const ERROR_DS_EXISTING_AD_CHILD_NC = 8613
[Description("The directory service cannot replicate with this server because the time since the last replication with this server has exceeded the tombstone lifetime.")] Public Const ERROR_DS_REPL_LIFETIME_EXCEEDED = 8614
[Description("The requested operation is not allowed on an object under the system container.")] Public Const ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER = 8615
[Description("The LDAP servers network send queue has filled up because the client is not processing the results of its requests fast enough. No more requests will be processed until the client catches up. If the client does not catch up then it will be disconnected.")] Public Const ERROR_DS_LDAP_SEND_QUEUE_FULL = 8616
[Description("The scheduled replication did not take place because the system was too busy to execute the request within the schedule window. The replication queue is overloaded. Consider reducing the number of partners or decreasing the scheduled replication frequency.")] Public Const ERROR_DS_DRA_OUT_SCHEDULE_WINDOW = 8617
[Description("At this time, it cannot be determined if the branch replication policy is available on the hub domain controller. Please retry at a later time to account for replication latencies.")] Public Const ERROR_DS_POLICY_NOT_KNOWN = 8618
[Description("The site settings object for the specified site does not exist.")] Public Const ERROR_NO_SITE_SETTINGS_OBJECT = 8619
[Description("The local account store does not contain secret material for the specified account.")] Public Const ERROR_NO_SECRETS = 8620
[Description("Could not find a writable domain controller in the domain.")] Public Const ERROR_NO_WRITABLE_DC_FOUND = 8621
[Description("The server object for the domain controller does not exist.")] Public Const ERROR_DS_NO_SERVER_OBJECT = 8622
[Description("The NTDS Settings object for the domain controller does not exist.")] Public Const ERROR_DS_NO_NTDSA_OBJECT = 8623
[Description("The requested search operation is not supported for ASQ searches.")] Public Const ERROR_DS_NON_ASQ_SEARCH = 8624
[Description("A required audit event could not be generated for the operation.")] Public Const ERROR_DS_AUDIT_FAILURE = 8625
[Description("The search flags for the attribute are invalid. The subtree index bit is valid only on single valued attributes.")] Public Const ERROR_DS_INVALID_SEARCH_FLAG_SUBTREE = 8626
[Description("The search flags for the attribute are invalid. The tuple index bit is valid only on attributes of Unicode strings.")] Public Const ERROR_DS_INVALID_SEARCH_FLAG_TUPLE = 8627
[Description("The address books are nested too deeply. Failed to build the hierarchy table.")] Public Const ERROR_DS_HIERARCHY_TABLE_TOO_DEEP = 8628
[Description("The specified up-to-date-ness vector is corrupt.")] Public Const ERROR_DS_DRA_CORRUPT_UTD_VECTOR = 8629
[Description("The request to replicate secrets is denied.")] Public Const ERROR_DS_DRA_SECRETS_DENIED = 8630
[Description("Schema update failed: The MAPI identifier is reserved.")] Public Const ERROR_DS_RESERVED_MAPI_ID = 8631
[Description("Schema update failed: There are no MAPI identifiers available.")] Public Const ERROR_DS_MAPI_ID_NOT_AVAILABLE = 8632
[Description("The replication operation failed because the required attributes of the local krbtgt object are missing.")] Public Const ERROR_DS_DRA_MISSING_KRBTGT_SECRET = 8633
[Description("The domain name of the trusted domain already exists in the forest.")] Public Const ERROR_DS_DOMAIN_NAME_EXISTS_IN_FOREST = 8634
[Description("The flat name of the trusted domain already exists in the forest.")] Public Const ERROR_DS_FLAT_NAME_EXISTS_IN_FOREST = 8635
[Description("The User Principal Name (UPN) is invalid.")] Public Const ERROR_INVALID_USER_PRINCIPAL_NAME = 8636
[Description("OID mapped groups cannot have members.")] Public Const ERROR_DS_OID_MAPPED_GROUP_CANT_HAVE_MEMBERS = 8637
[Description("The specified OID cannot be found.")] Public Const ERROR_DS_OID_NOT_FOUND = 8638
[Description("The replication operation failed because the target object referred by a link value is recycled.")] Public Const ERROR_DS_DRA_RECYCLED_TARGET = 8639
[Description("The redirect operation failed because the target object is in a NC different from the domain NC of the current domain controller.")] Public Const ERROR_DS_DISALLOWED_NC_REDIRECT = 8640
[Description("The functional level of the AD LDS configuration set cannot be lowered to the requested value.")] Public Const ERROR_DS_HIGH_ADLDS_FFL = 8641
[Description("The functional level of the domain (or forest) cannot be lowered to the requested value.")] Public Const ERROR_DS_HIGH_DSA_VERSION = 8642
[Description("The functional level of the AD LDS configuration set cannot be raised to the requested value, because there exist one or more ADLDS instances that are at a lower incompatible functional level.")] Public Const ERROR_DS_LOW_ADLDS_FFL = 8643
[Description("The domain join cannot be completed because the SID of the domain you attempted to join was identical to the SID of this machine. This is a symptom of an improperly cloned operating system install. You should run sysprep on this machine in order to generate a new machine SID. Please see http://go.microsoft.com/fwlink/?LinkId=168895 for more information.")] Public Const ERROR_DOMAIN_SID_SAME_AS_LOCAL_WORKSTATION = 8644
[Description("The undelete operation failed because the Sam Account Name or Additional Sam Account Name of the object being undeleted conflicts with an existing live object.")] Public Const ERROR_DS_UNDELETE_SAM_VALIDATION_FAILED = 8645
[Description("The system is not authoritative for the specified account and therefore cannot complete the operation. Please retry the operation using the provider associated with this account. If this is an online provider please use the provider's online site.")] Public Const ERROR_INCORRECT_ACCOUNT_TYPE = 8646
[Description("The operation failed because SPN value provided for addition/modification is not unique forest-wide.")] Public Const ERROR_DS_SPN_VALUE_NOT_UNIQUE_IN_FOREST = 8647
[Description("The operation failed because UPN value provided for addition/modification is not unique forest-wide.")] Public Const ERROR_DS_UPN_VALUE_NOT_UNIQUE_IN_FOREST = 8648
[Description("The operation failed because the addition/modification referenced an inbound forest-wide trust that is not present.")] Public Const ERROR_DS_MISSING_FOREST_TRUST = 8649
[Description("The link value specified was not found, but a link value with that key was found.")] Public Const ERROR_DS_VALUE_KEY_NOT_UNIQUE = 8650
[Description("The Security Account Manager blocked the use of a weak Windows Hello for Business key.")] Public Const ERROR_WEAK_WHFBKEY_BLOCKED = 8651
[Description("The add object operation failed because the caller was not authorized to add one or more attributes included in the request.")] Public Const ERROR_DS_PER_ATTRIBUTE_AUTHZ_FAILED_DURING_ADD = 8652
[Description("The local account policy modification request was rejected because the policy is controlled by a regional authority.")] Public Const ERROR_LOCAL_POLICY_MODIFICATION_NOT_SUPPORTED = 8653

[ Description("The specified quick mode policy already exists.") ] Public Const ERROR_IPSEC_QM_POLICY_EXISTS =     13000
[ Description("The specified quick mode policy was not found.") ] Public Const ERROR_IPSEC_QM_POLICY_NOT_FOUND =  13001
[ Description("The specified quick mode policy is being used.") ] Public Const ERROR_IPSEC_QM_POLICY_IN_USE =     13002
[ Description("The specified main mode policy already exists.") ] Public Const ERROR_IPSEC_MM_POLICY_EXISTS =     13003
[ Description("The specified main mode policy was not found") ] Public Const ERROR_IPSEC_MM_POLICY_NOT_FOUND =  13004
[ Description("The specified main mode policy is being used.") ] Public Const ERROR_IPSEC_MM_POLICY_IN_USE =     13005
[ Description("The specified main mode filter already exists.") ] Public Const ERROR_IPSEC_MM_FILTER_EXISTS =     13006
[ Description("The specified main mode filter was not found.") ] Public Const ERROR_IPSEC_MM_FILTER_NOT_FOUND =  13007
[ Description("The specified transport mode filter already exists.") ] Public Const ERROR_IPSEC_TRANSPORT_FILTER_EXISTS = 13008
[ Description("The specified transport mode filter does not exist.") ] Public Const ERROR_IPSEC_TRANSPORT_FILTER_NOT_FOUND = 13009
[ Description("The specified main mode authentication list exists.") ] Public Const ERROR_IPSEC_MM_AUTH_EXISTS =       13010
[ Description("The specified main mode authentication list was not found.") ] Public Const ERROR_IPSEC_MM_AUTH_NOT_FOUND =    13011
[ Description("The specified main mode authentication list is being used.") ] Public Const ERROR_IPSEC_MM_AUTH_IN_USE =       13012
[ Description("The specified default main mode policy was not found.") ] Public Const ERROR_IPSEC_DEFAULT_MM_POLICY_NOT_FOUND = 13013
[ Description("The specified default main mode authentication list was not found.") ] Public Const ERROR_IPSEC_DEFAULT_MM_AUTH_NOT_FOUND = 13014
[ Description("The specified default quick mode policy was not found.") ] Public Const ERROR_IPSEC_DEFAULT_QM_POLICY_NOT_FOUND = 13015
[ Description("The specified tunnel mode filter exists.") ] Public Const ERROR_IPSEC_TUNNEL_FILTER_EXISTS = 13016
[ Description("The specified tunnel mode filter was not found.") ] Public Const ERROR_IPSEC_TUNNEL_FILTER_NOT_FOUND = 13017
[ Description("The Main Mode filter is pending deletion.") ] Public Const ERROR_IPSEC_MM_FILTER_PENDING_DELETION = 13018
[ Description("The transport filter is pending deletion.") ] Public Const ERROR_IPSEC_TRANSPORT_FILTER_PENDING_DELETION = 13019
[ Description("The tunnel filter is pending deletion.") ] Public Const ERROR_IPSEC_TUNNEL_FILTER_PENDING_DELETION = 13020
[ Description("The Main Mode policy is pending deletion.") ] Public Const ERROR_IPSEC_MM_POLICY_PENDING_DELETION = 13021
[ Description("The Main Mode authentication bundle is pending deletion.") ] Public Const ERROR_IPSEC_MM_AUTH_PENDING_DELETION = 13022
[ Description("The Quick Mode policy is pending deletion.") ] Public Const ERROR_IPSEC_QM_POLICY_PENDING_DELETION = 13023
[ Description("The Main Mode policy was successfully added, but some of the requested offers are not supported.") ] Public Const WARNING_IPSEC_MM_POLICY_PRUNED =   13024
[ Description("The Quick Mode policy was successfully added, but some of the requested offers are not supported.") ] Public Const WARNING_IPSEC_QM_POLICY_PRUNED =   13025
[ Description(" ERROR_IPSEC_IKE_NEG_STATUS_BEGIN") ] Public Const ERROR_IPSEC_IKE_NEG_STATUS_BEGIN = 13800
[ Description("IKE authentication credentials are unacceptable") ] Public Const ERROR_IPSEC_IKE_AUTH_FAIL =        13801
[ Description("IKE security attributes are unacceptable") ] Public Const ERROR_IPSEC_IKE_ATTRIB_FAIL =      13802
[ Description("IKE Negotiation in progress") ] Public Const ERROR_IPSEC_IKE_NEGOTIATION_PENDING = 13803
[ Description("General processing error") ] Public Const ERROR_IPSEC_IKE_GENERAL_PROCESSING_ERROR = 13804
[ Description("Negotiation timed out") ] Public Const ERROR_IPSEC_IKE_TIMED_OUT =        13805
[ Description("IKE failed to find valid machine certificate. Contact your Network Security Administrator about installing a valid certificate in the appropriate Certificate Store.") ] Public Const ERROR_IPSEC_IKE_NO_CERT =          13806
[ Description("IKE SA deleted by peer before establishment completed") ] Public Const ERROR_IPSEC_IKE_SA_DELETED =       13807
[ Description("IKE SA deleted before establishment completed") ] Public Const ERROR_IPSEC_IKE_SA_REAPED =        13808
[ Description("Negotiation request sat in Queue too long") ] Public Const ERROR_IPSEC_IKE_MM_ACQUIRE_DROP =  13809
[ Description("Negotiation request sat in Queue too long") ] Public Const ERROR_IPSEC_IKE_QM_ACQUIRE_DROP =  13810
[ Description("Negotiation request sat in Queue too long") ] Public Const ERROR_IPSEC_IKE_QUEUE_DROP_MM =    13811
[ Description("Negotiation request sat in Queue too long") ] Public Const ERROR_IPSEC_IKE_QUEUE_DROP_NO_MM = 13812
[ Description("No response from peer") ] Public Const ERROR_IPSEC_IKE_DROP_NO_RESPONSE = 13813
[ Description("Negotiation took too long") ] Public Const ERROR_IPSEC_IKE_MM_DELAY_DROP =    13814
[ Description("Negotiation took too long") ] Public Const ERROR_IPSEC_IKE_QM_DELAY_DROP =    13815
[ Description("Unknown error occurred") ] Public Const ERROR_IPSEC_IKE_ERROR =            13816
[ Description("Certificate Revocation Check failed") ] Public Const ERROR_IPSEC_IKE_CRL_FAILED =       13817
[ Description("Invalid certificate key usage") ] Public Const ERROR_IPSEC_IKE_INVALID_KEY_USAGE = 13818
[ Description("Invalid certificate type") ] Public Const ERROR_IPSEC_IKE_INVALID_CERT_TYPE = 13819
[ Description("IKE negotiation failed because the machine certificate used does not have a private key. IPsec certificates require a private key. Contact your Network Security administrator about replacing with a certificate that has a private key.") ] Public Const ERROR_IPSEC_IKE_NO_PRIVATE_KEY =   13820
[ Description("Simultaneous rekeys were detected.") ] Public Const ERROR_IPSEC_IKE_SIMULTANEOUS_REKEY = 13821
[ Description("Failure in Diffie-Hellman computation") ] Public Const ERROR_IPSEC_IKE_DH_FAIL =          13822
[ Description("Don't know how to process critical payload") ] Public Const ERROR_IPSEC_IKE_CRITICAL_PAYLOAD_NOT_RECOGNIZED = 13823
[ Description("Invalid header") ] Public Const ERROR_IPSEC_IKE_INVALID_HEADER =   13824
[ Description("No policy configured") ] Public Const ERROR_IPSEC_IKE_NO_POLICY =        13825
[ Description("Failed to verify signature") ] Public Const ERROR_IPSEC_IKE_INVALID_SIGNATURE = 13826
[ Description("Failed to authenticate using Kerberos") ] Public Const ERROR_IPSEC_IKE_KERBEROS_ERROR =   13827
[ Description("Peer's certificate did not have a public key") ] Public Const ERROR_IPSEC_IKE_NO_PUBLIC_KEY =    13828
[ Description("Error processing error payload") ] Public Const ERROR_IPSEC_IKE_PROCESS_ERR =      13829
[ Description("Error processing SA payload") ] Public Const ERROR_IPSEC_IKE_PROCESS_ERR_SA =   13830
[ Description("Error processing Proposal payload") ] Public Const ERROR_IPSEC_IKE_PROCESS_ERR_PROP = 13831
[ Description("Error processing Transform payload") ] Public Const ERROR_IPSEC_IKE_PROCESS_ERR_TRANS = 13832
[ Description("Error processing KE payload") ] Public Const ERROR_IPSEC_IKE_PROCESS_ERR_KE =   13833
[ Description("Error processing ID payload") ] Public Const ERROR_IPSEC_IKE_PROCESS_ERR_ID =   13834
[ Description("Error processing Cert payload") ] Public Const ERROR_IPSEC_IKE_PROCESS_ERR_CERT = 13835
[ Description("Error processing Certificate Request payload") ] Public Const ERROR_IPSEC_IKE_PROCESS_ERR_CERT_REQ = 13836
[ Description("Error processing Hash payload") ] Public Const ERROR_IPSEC_IKE_PROCESS_ERR_HASH = 13837
[ Description("Error processing Signature payload") ] Public Const ERROR_IPSEC_IKE_PROCESS_ERR_SIG =  13838
[ Description("Error processing Nonce payload") ] Public Const ERROR_IPSEC_IKE_PROCESS_ERR_NONCE = 13839
[ Description("Error processing Notify payload") ] Public Const ERROR_IPSEC_IKE_PROCESS_ERR_NOTIFY = 13840
[ Description("Error processing Delete Payload") ] Public Const ERROR_IPSEC_IKE_PROCESS_ERR_DELETE = 13841
[ Description("Error processing VendorId payload") ] Public Const ERROR_IPSEC_IKE_PROCESS_ERR_VENDOR = 13842
[ Description("Invalid payload received") ] Public Const ERROR_IPSEC_IKE_INVALID_PAYLOAD =  13843
[ Description("Soft SA loaded") ] Public Const ERROR_IPSEC_IKE_LOAD_SOFT_SA =     13844
[ Description("Soft SA torn down") ] Public Const ERROR_IPSEC_IKE_SOFT_SA_TORN_DOWN = 13845
[ Description("Invalid cookie received.") ] Public Const ERROR_IPSEC_IKE_INVALID_COOKIE =   13846
[ Description("Peer failed to send valid machine certificate") ] Public Const ERROR_IPSEC_IKE_NO_PEER_CERT =     13847
[ Description("Certification Revocation check of peer's certificate failed") ] Public Const ERROR_IPSEC_IKE_PEER_CRL_FAILED =  13848
[ Description("New policy invalidated SAs formed with old policy") ] Public Const ERROR_IPSEC_IKE_POLICY_CHANGE =    13849
[ Description("There is no available Main Mode IKE policy.") ] Public Const ERROR_IPSEC_IKE_NO_MM_POLICY =     13850
[ Description("Failed to enabled TCB privilege.") ] Public Const ERROR_IPSEC_IKE_NOTCBPRIV =        13851
[ Description("Failed to load SECURITY.DLL.") ] Public Const ERROR_IPSEC_IKE_SECLOADFAIL =      13852
[ Description("Failed to obtain security function table dispatch address from SSPI.") ] Public Const ERROR_IPSEC_IKE_FAILSSPINIT =      13853
[ Description("Failed to query Kerberos package to obtain max token size.") ] Public Const ERROR_IPSEC_IKE_FAILQUERYSSP =     13854
[ Description("Failed to obtain Kerberos server credentials for ISAKMP/ERROR_IPSEC_IKE service. Kerberos authentication will not function. The most likely reason for this is lack of domain membership. This is normal if your computer is a member of a workgroup.") ] Public Const ERROR_IPSEC_IKE_SRVACQFAIL =       13855
[ Description("Failed to determine SSPI principal name for ISAKMP/ERROR_IPSEC_IKE service (QueryCredentialsAttributes).") ] Public Const ERROR_IPSEC_IKE_SRVQUERYCRED =     13856
[ Description("Failed to obtain new SPI for the inbound SA from IPsec driver. The most common cause for this is that the driver does not have the correct filter. Check your policy to verify the filters.") ] Public Const ERROR_IPSEC_IKE_GETSPIFAIL =       13857
[ Description("Given filter is invalid") ] Public Const ERROR_IPSEC_IKE_INVALID_FILTER =   13858
[ Description("Memory allocation failed.") ] Public Const ERROR_IPSEC_IKE_OUT_OF_MEMORY =    13859
[ Description("Failed to add Security Association to IPsec Driver. The most common cause for this is if the IKE negotiation took too long to complete. If the problem persists, reduce the load on the faulting machine.") ] Public Const ERROR_IPSEC_IKE_ADD_UPDATE_KEY_FAILED = 13860
[ Description("Invalid policy") ] Public Const ERROR_IPSEC_IKE_INVALID_POLICY =   13861
[ Description("Invalid DOI") ] Public Const ERROR_IPSEC_IKE_UNKNOWN_DOI =      13862
[ Description("Invalid situation") ] Public Const ERROR_IPSEC_IKE_INVALID_SITUATION = 13863
[ Description("Diffie-Hellman failure") ] Public Const ERROR_IPSEC_IKE_DH_FAILURE =       13864
[ Description("Invalid Diffie-Hellman group") ] Public Const ERROR_IPSEC_IKE_INVALID_GROUP =    13865
[ Description("Error encrypting payload") ] Public Const ERROR_IPSEC_IKE_ENCRYPT =          13866
[ Description("Error decrypting payload") ] Public Const ERROR_IPSEC_IKE_DECRYPT =          13867
[ Description("Policy match error") ] Public Const ERROR_IPSEC_IKE_POLICY_MATCH =     13868
[ Description("Unsupported ID") ] Public Const ERROR_IPSEC_IKE_UNSUPPORTED_ID =   13869
[ Description("Hash verification failed") ] Public Const ERROR_IPSEC_IKE_INVALID_HASH =     13870
[ Description("Invalid hash algorithm") ] Public Const ERROR_IPSEC_IKE_INVALID_HASH_ALG = 13871
[ Description("Invalid hash size") ] Public Const ERROR_IPSEC_IKE_INVALID_HASH_SIZE = 13872
[ Description("Invalid encryption algorithm") ] Public Const ERROR_IPSEC_IKE_INVALID_ENCRYPT_ALG = 13873
[ Description("Invalid authentication algorithm") ] Public Const ERROR_IPSEC_IKE_INVALID_AUTH_ALG = 13874
[ Description("Invalid certificate signature") ] Public Const ERROR_IPSEC_IKE_INVALID_SIG =      13875
[ Description("Load failed") ] Public Const ERROR_IPSEC_IKE_LOAD_FAILED =      13876
[ Description("Deleted via RPC call") ] Public Const ERROR_IPSEC_IKE_RPC_DELETE =       13877
[ Description("Temporary state created to perform reinitialization. This is not a real failure.") ] Public Const ERROR_IPSEC_IKE_BENIGN_REINIT =    13878
[ Description("The lifetime value received in the Responder Lifetime Notify is below the Windows 2000 configured minimum value. Please fix the policy on the peer machine.") ] Public Const ERROR_IPSEC_IKE_INVALID_RESPONDER_LIFETIME_NOTIFY = 13879
[ Description("The recipient cannot handle version of IKE specified in the header.") ] Public Const ERROR_IPSEC_IKE_INVALID_MAJOR_VERSION = 13880
[ Description("Key length in certificate is too small for configured security requirements.") ] Public Const ERROR_IPSEC_IKE_INVALID_CERT_KEYLEN = 13881
[ Description("Max number of established MM SAs to peer exceeded.") ] Public Const ERROR_IPSEC_IKE_MM_LIMIT =         13882
[ Description("IKE received a policy that disables negotiation.") ] Public Const ERROR_IPSEC_IKE_NEGOTIATION_DISABLED = 13883
[ Description("Reached maximum quick mode limit for the main mode. New main mode will be started.") ] Public Const ERROR_IPSEC_IKE_QM_LIMIT =         13884
[ Description("Main mode SA lifetime expired or peer sent a main mode delete.") ] Public Const ERROR_IPSEC_IKE_MM_EXPIRED =       13885
[ Description("Main mode SA assumed to be invalid because peer stopped responding.") ] Public Const ERROR_IPSEC_IKE_PEER_MM_ASSUMED_INVALID = 13886
[ Description("Certificate doesn't chain to a trusted root in IPsec policy.") ] Public Const ERROR_IPSEC_IKE_CERT_CHAIN_POLICY_MISMATCH = 13887
[ Description("Received unexpected message ID.") ] Public Const ERROR_IPSEC_IKE_UNEXPECTED_MESSAGE_ID = 13888
[ Description("Received invalid authentication offers.") ] Public Const ERROR_IPSEC_IKE_INVALID_AUTH_PAYLOAD = 13889
[ Description("Sent DoS cookie notify to initiator.") ] Public Const ERROR_IPSEC_IKE_DOS_COOKIE_SENT =  13890
[ Description("IKE service is shutting down.") ] Public Const ERROR_IPSEC_IKE_SHUTTING_DOWN =    13891
[ Description("Could not verify binding between CGA address and certificate.") ] Public Const ERROR_IPSEC_IKE_CGA_AUTH_FAILED =  13892
[ Description("Error processing NatOA payload.") ] Public Const ERROR_IPSEC_IKE_PROCESS_ERR_NATOA = 13893
[ Description("Parameters of the main mode are invalid for this quick mode.") ] Public Const ERROR_IPSEC_IKE_INVALID_MM_FOR_QM = 13894
[ Description("Quick mode SA was expired by IPsec driver.") ] Public Const ERROR_IPSEC_IKE_QM_EXPIRED =       13895
[ Description("Too many dynamically added IKEEXT filters were detected.") ] Public Const ERROR_IPSEC_IKE_TOO_MANY_FILTERS = 13896
[ Description(" ERROR_IPSEC_IKE_NEG_STATUS_END") ] Public Const ERROR_IPSEC_IKE_NEG_STATUS_END =   13897
[ Description("NAP reauth succeeded and must delete the dummy NAP IKEv2 tunnel.") ] Public Const ERROR_IPSEC_IKE_KILL_DUMMY_NAP_TUNNEL = 13898
[ Description("Error in assigning inner IP address to initiator in tunnel mode.") ] Public Const ERROR_IPSEC_IKE_INNER_IP_ASSIGNMENT_FAILURE = 13899
[ Description("Require configuration payload missing.") ] Public Const ERROR_IPSEC_IKE_REQUIRE_CP_PAYLOAD_MISSING = 13900
[ Description("A negotiation running as the security principle who issued the connection is in progress") ] Public Const ERROR_IPSEC_KEY_MODULE_IMPERSONATION_NEGOTIATION_PENDING = 13901
[ Description("SA was deleted due to IKEv1/AuthIP co-existence suppress check.") ] Public Const ERROR_IPSEC_IKE_COEXISTENCE_SUPPRESS = 13902
[ Description("Incoming SA request was dropped due to peer IP address rate limiting.") ] Public Const ERROR_IPSEC_IKE_RATELIMIT_DROP =   13903
[ Description("Peer does not support MOBIKE.") ] Public Const ERROR_IPSEC_IKE_PEER_DOESNT_SUPPORT_MOBIKE = 13904
[ Description("SA establishment is not authorized.") ] Public Const ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE = 13905
[ Description("SA establishment is not authorized because there is not a sufficiently strong PKINIT-based credential.") ] Public Const ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_FAILURE = 13906
[ Description("SA establishment is not authorized.  You may need to enter updated or different credentials such as a smartcard.") ] Public Const ERROR_IPSEC_IKE_AUTHORIZATION_FAILURE_WITH_OPTIONAL_RETRY = 13907
[ Description("SA establishment is not authorized because there is not a sufficiently strong PKINIT-based credential. This might be related to certificate-to-account mapping failure for the SA.") ] Public Const ERROR_IPSEC_IKE_STRONG_CRED_AUTHORIZATION_AND_CERTMAP_FAILURE = 13908
[ Description(" ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END") ] Public Const ERROR_IPSEC_IKE_NEG_STATUS_EXTENDED_END = 13909
[ Description("The SPI in the packet does not match a valid IPsec SA.") ] Public Const ERROR_IPSEC_BAD_SPI =              13910
[ Description("Packet was received on an IPsec SA whose lifetime has expired.") ] Public Const ERROR_IPSEC_SA_LIFETIME_EXPIRED =  13911
[ Description("Packet was received on an IPsec SA that does not match the packet characteristics.") ] Public Const ERROR_IPSEC_WRONG_SA =             13912
[ Description("Packet sequence number replay check failed.") ] Public Const ERROR_IPSEC_REPLAY_CHECK_FAILED =  13913
[ Description("IPsec header and/or trailer in the packet is invalid.") ] Public Const ERROR_IPSEC_INVALID_PACKET =       13914
[ Description("IPsec integrity check failed.") ] Public Const ERROR_IPSEC_INTEGRITY_CHECK_FAILED = 13915
[ Description("IPsec dropped a clear text packet.") ] Public Const ERROR_IPSEC_CLEAR_TEXT_DROP =      13916
[ Description("IPsec dropped an incoming ESP packet in authenticated firewall mode. This drop is benign.") ] Public Const ERROR_IPSEC_AUTH_FIREWALL_DROP =   13917
[ Description("IPsec dropped a packet due to DoS throttling.") ] Public Const ERROR_IPSEC_THROTTLE_DROP =        13918
[ Description("IPsec DoS Protection matched an explicit block rule.") ] Public Const ERROR_IPSEC_DOSP_BLOCK =           13925
[ Description("IPsec DoS Protection received an IPsec specific multicast packet which is not allowed.") ] Public Const ERROR_IPSEC_DOSP_RECEIVED_MULTICAST = 13926
[ Description("IPsec DoS Protection received an incorrectly formatted packet.") ] Public Const ERROR_IPSEC_DOSP_INVALID_PACKET =  13927
[ Description("IPsec DoS Protection failed to look up state.") ] Public Const ERROR_IPSEC_DOSP_STATE_LOOKUP_FAILED = 13928
[ Description("IPsec DoS Protection failed to create state because the maximum number of entries allowed by policy has been reached.") ] Public Const ERROR_IPSEC_DOSP_MAX_ENTRIES =     13929
[ Description("IPsec DoS Protection received an IPsec negotiation packet for a keying module which is not allowed by policy.") ] Public Const ERROR_IPSEC_DOSP_KEYMOD_NOT_ALLOWED = 13930
[ Description("IPsec DoS Protection has not been enabled.") ] Public Const ERROR_IPSEC_DOSP_NOT_INSTALLED =   13931
[ Description("IPsec DoS Protection failed to create a per internal IP rate limit queue because the maximum number of queues allowed by policy has been reached.") ] Public Const ERROR_IPSEC_DOSP_MAX_PER_IP_RATELIMIT_QUEUES = 13932


[Description("The requested section was not present in the activation context.")] Public Const ERROR_SXS_SECTION_NOT_FOUND = 14000
[Description("The application has failed to start because its side-by-side configuration is incorrect. Please see the application event log or use the command-line sxstrace.exe tool for more detail.")] Public Const ERROR_SXS_CANT_GEN_ACTCTX = 14001
[Description("The application binding data format is invalid.")] Public Const ERROR_SXS_INVALID_ACTCTXDATA_FORMAT = 14002
[Description("The referenced assembly is not installed on your system.")] Public Const ERROR_SXS_ASSEMBLY_NOT_FOUND = 14003
[Description("The manifest file does not begin with the required tag and format information.")] Public Const ERROR_SXS_MANIFEST_FORMAT_ERROR = 14004
[Description("The manifest file contains one or more syntax errors.")] Public Const ERROR_SXS_MANIFEST_PARSE_ERROR = 14005
[Description("The application attempted to activate a disabled activation context.")] Public Const ERROR_SXS_ACTIVATION_CONTEXT_DISABLED = 14006
[Description("The requested lookup key was not found in any active activation context.")] Public Const ERROR_SXS_KEY_NOT_FOUND = 14007
[Description("A component version required by the application conflicts with another component version already active.")] Public Const ERROR_SXS_VERSION_CONFLICT = 14008
[Description("The type requested activation context section does not match the query API used.")] Public Const ERROR_SXS_WRONG_SECTION_TYPE = 14009
[Description("Lack of system resources has required isolated activation to be disabled for the current thread of execution.")] Public Const ERROR_SXS_THREAD_QUERIES_DISABLED = 14010
[Description("An attempt to set the process default activation context failed because the process default activation context was already set.")] Public Const ERROR_SXS_PROCESS_DEFAULT_ALREADY_SET = 14011
[Description("The encoding group identifier specified is not recognized.")] Public Const ERROR_SXS_UNKNOWN_ENCODING_GROUP = 14012
[Description("The encoding requested is not recognized.")] Public Const ERROR_SXS_UNKNOWN_ENCODING = 14013
[Description("The manifest contains a reference to an invalid URI.")] Public Const ERROR_SXS_INVALID_XML_NAMESPACE_URI = 14014
[Description("The application manifest contains a reference to a dependent assembly which is not installed")] Public Const ERROR_SXS_ROOT_MANIFEST_DEPENDENCY_NOT_INSTALLED = 14015
[Description("The manifest for an assembly used by the application has a reference to a dependent assembly which is not installed")] Public Const ERROR_SXS_LEAF_MANIFEST_DEPENDENCY_NOT_INSTALLED = 14016
[Description("The manifest contains an attribute for the assembly identity which is not valid.")] Public Const ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE = 14017
[Description("The manifest is missing the required default namespace specification on the assembly element.")] Public Const ERROR_SXS_MANIFEST_MISSING_REQUIRED_DEFAULT_NAMESPACE = 14018
[Description("The manifest has a default namespace specified on the assembly element but its value is not """"urn:schemas-microsoft-com:asm.v1"""".")] Public Const ERROR_SXS_MANIFEST_INVALID_REQUIRED_DEFAULT_NAMESPACE = 14019
[Description("The private manifest probed has crossed a path with an unsupported reparse point.")] Public Const ERROR_SXS_PRIVATE_MANIFEST_CROSS_PATH_WITH_REPARSE_POINT = 14020
[Description("Two or more components referenced directly or indirectly by the application manifest have files by the same name.")] Public Const ERROR_SXS_DUPLICATE_DLL_NAME = 14021
[Description("Two or more components referenced directly or indirectly by the application manifest have window classes with the same name.")] Public Const ERROR_SXS_DUPLICATE_WINDOWCLASS_NAME = 14022
[Description("Two or more components referenced directly or indirectly by the application manifest have the same COM server CLSIDs.")] Public Const ERROR_SXS_DUPLICATE_CLSID = 14023
[Description("Two or more components referenced directly or indirectly by the application manifest have proxies for the same COM interface IIDs.")] Public Const ERROR_SXS_DUPLICATE_IID = 14024
[Description("Two or more components referenced directly or indirectly by the application manifest have the same COM type library TLBIDs.")] Public Const ERROR_SXS_DUPLICATE_TLBID = 14025
[Description("Two or more components referenced directly or indirectly by the application manifest have the same COM ProgIDs.")] Public Const ERROR_SXS_DUPLICATE_PROGID = 14026
[Description("Two or more components referenced directly or indirectly by the application manifest are different versions of the same component which is not permitted.")] Public Const ERROR_SXS_DUPLICATE_ASSEMBLY_NAME = 14027
[Description("A component's file does not match the verification information present in the component manifest.")] Public Const ERROR_SXS_FILE_HASH_MISMATCH = 14028
[Description("The policy manifest contains one or more syntax errors.")] Public Const ERROR_SXS_POLICY_PARSE_ERROR = 14029
[Description("Manifest Parse Error : A string literal was expected, but no opening quote character was found.")] Public Const ERROR_SXS_XML_E_MISSINGQUOTE = 14030
[Description("Manifest Parse Error : Incorrect syntax was used in a comment.")] Public Const ERROR_SXS_XML_E_COMMENTSYNTAX = 14031
[Description("Manifest Parse Error : A name was started with an invalid character.")] Public Const ERROR_SXS_XML_E_BADSTARTNAMECHAR = 14032
[Description("Manifest Parse Error : A name contained an invalid character.")] Public Const ERROR_SXS_XML_E_BADNAMECHAR = 14033
[Description("Manifest Parse Error : A string literal contained an invalid character.")] Public Const ERROR_SXS_XML_E_BADCHARINSTRING = 14034
[Description("Manifest Parse Error : Invalid syntax for an xml declaration.")] Public Const ERROR_SXS_XML_E_XMLDECLSYNTAX = 14035
[Description("Manifest Parse Error : An Invalid character was found in text content.")] Public Const ERROR_SXS_XML_E_BADCHARDATA = 14036
[Description("Manifest Parse Error : Required white space was missing.")] Public Const ERROR_SXS_XML_E_MISSINGWHITESPACE = 14037
[Description("Manifest Parse Error : The character '>' was expected.")] Public Const ERROR_SXS_XML_E_EXPECTINGTAGEND = 14038
[Description("Manifest Parse Error : A semi colon character was expected.")] Public Const ERROR_SXS_XML_E_MISSINGSEMICOLON = 14039
[Description("Manifest Parse Error : Unbalanced parentheses.")] Public Const ERROR_SXS_XML_E_UNBALANCEDPAREN = 14040
[Description("Manifest Parse Error : Internal error.")] Public Const ERROR_SXS_XML_E_INTERNALERROR = 14041
[Description("Manifest Parse Error : Whitespace is not allowed at this location.")] Public Const ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE = 14042
[Description("Manifest Parse Error : End of file reached in invalid state for current encoding.")] Public Const ERROR_SXS_XML_E_INCOMPLETE_ENCODING = 14043
[Description("Manifest Parse Error : Missing parenthesis.")] Public Const ERROR_SXS_XML_E_MISSING_PAREN = 14044
[Description("Manifest Parse Error : A single or double closing quote character (' or """") is missing.")] Public Const ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE = 14045
[Description("Manifest Parse Error : Multiple colons are not allowed in a name.")] Public Const ERROR_SXS_XML_E_MULTIPLE_COLONS = 14046
[Description("Manifest Parse Error : Invalid character for decimal digit.")] Public Const ERROR_SXS_XML_E_INVALID_DECIMAL = 14047
[Description("Manifest Parse Error : Invalid character for hexadecimal digit.")] Public Const ERROR_SXS_XML_E_INVALID_HEXIDECIMAL = 14048
[Description("Manifest Parse Error : Invalid unicode character value for this platform.")] Public Const ERROR_SXS_XML_E_INVALID_UNICODE = 14049
[Description("Manifest Parse Error : Expecting whitespace or '?'.")] Public Const ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK = 14050
[Description("Manifest Parse Error : End tag was not expected at this location.")] Public Const ERROR_SXS_XML_E_UNEXPECTEDENDTAG = 14051
[Description("Manifest Parse Error : The following tags were not closed: %1.")] Public Const ERROR_SXS_XML_E_UNCLOSEDTAG = 14052
[Description("Manifest Parse Error : Duplicate attribute.")] Public Const ERROR_SXS_XML_E_DUPLICATEATTRIBUTE = 14053
[Description("Manifest Parse Error : Only one top level element is allowed in an XML document.")] Public Const ERROR_SXS_XML_E_MULTIPLEROOTS = 14054
[Description("Manifest Parse Error : Invalid at the top level of the document.")] Public Const ERROR_SXS_XML_E_INVALIDATROOTLEVEL = 14055
[Description("Manifest Parse Error : Invalid xml declaration.")] Public Const ERROR_SXS_XML_E_BADXMLDECL = 14056
[Description("Manifest Parse Error : XML document must have a top level element.")] Public Const ERROR_SXS_XML_E_MISSINGROOT = 14057
[Description("Manifest Parse Error : Unexpected end of file.")] Public Const ERROR_SXS_XML_E_UNEXPECTEDEOF = 14058
[Description("Manifest Parse Error : Parameter entities cannot be used inside markup declarations in an internal subset.")] Public Const ERROR_SXS_XML_E_BADPEREFINSUBSET = 14059
[Description("Manifest Parse Error : Element was not closed.")] Public Const ERROR_SXS_XML_E_UNCLOSEDSTARTTAG = 14060
[Description("Manifest Parse Error : End element was missing the character '>'.")] Public Const ERROR_SXS_XML_E_UNCLOSEDENDTAG = 14061
[Description("Manifest Parse Error : A string literal was not closed.")] Public Const ERROR_SXS_XML_E_UNCLOSEDSTRING = 14062
[Description("Manifest Parse Error : A comment was not closed.")] Public Const ERROR_SXS_XML_E_UNCLOSEDCOMMENT = 14063
[Description("Manifest Parse Error : A declaration was not closed.")] Public Const ERROR_SXS_XML_E_UNCLOSEDDECL = 14064
[Description("Manifest Parse Error : A CDATA section was not closed.")] Public Const ERROR_SXS_XML_E_UNCLOSEDCDATA = 14065
[Description("Manifest Parse Error : The namespace prefix is not allowed to start with the reserved string """"xml"""".")] Public Const ERROR_SXS_XML_E_RESERVEDNAMESPACE = 14066
[Description("Manifest Parse Error : System does not support the specified encoding.")] Public Const ERROR_SXS_XML_E_INVALIDENCODING = 14067
[Description("Manifest Parse Error : Switch from current encoding to specified encoding not supported.")] Public Const ERROR_SXS_XML_E_INVALIDSWITCH = 14068
[Description("Manifest Parse Error : The name 'xml' is reserved and must be lower case.")] Public Const ERROR_SXS_XML_E_BADXMLCASE = 14069
[Description("Manifest Parse Error : The standalone attribute must have the value 'yes' or 'no'.")] Public Const ERROR_SXS_XML_E_INVALID_STANDALONE = 14070
[Description("Manifest Parse Error : The standalone attribute cannot be used in external entities.")] Public Const ERROR_SXS_XML_E_UNEXPECTED_STANDALONE = 14071
[Description("Manifest Parse Error : Invalid version number.")] Public Const ERROR_SXS_XML_E_INVALID_VERSION = 14072
[Description("Manifest Parse Error : Missing equals sign between attribute and attribute value.")] Public Const ERROR_SXS_XML_E_MISSINGEQUALS = 14073
[Description("Assembly Protection Error : Unable to recover the specified assembly.")] Public Const ERROR_SXS_PROTECTION_RECOVERY_FAILED = 14074
[Description("Assembly Protection Error : The public key for an assembly was too short to be allowed.")] Public Const ERROR_SXS_PROTECTION_PUBLIC_KEY_TOO_SHORT = 14075
[Description("Assembly Protection Error : The catalog for an assembly is not valid, or does not match the assembly's manifest.")] Public Const ERROR_SXS_PROTECTION_CATALOG_NOT_VALID = 14076
[Description("An HRESULT could not be translated to a corresponding Win32 error code.")] Public Const ERROR_SXS_UNTRANSLATABLE_HRESULT = 14077
[Description("Assembly Protection Error : The catalog for an assembly is missing.")] Public Const ERROR_SXS_PROTECTION_CATALOG_FILE_MISSING = 14078
[Description("The supplied assembly identity is missing one or more attributes which must be present in this context.")] Public Const ERROR_SXS_MISSING_ASSEMBLY_IDENTITY_ATTRIBUTE = 14079
[Description("The supplied assembly identity has one or more attribute names that contain characters not permitted in XML names.")] Public Const ERROR_SXS_INVALID_ASSEMBLY_IDENTITY_ATTRIBUTE_NAME = 14080
[Description("The referenced assembly could not be found.")] Public Const ERROR_SXS_ASSEMBLY_MISSING = 14081
[Description("The activation context activation stack for the running thread of execution is corrupt.")] Public Const ERROR_SXS_CORRUPT_ACTIVATION_STACK = 14082
[Description("The application isolation metadata for this process or thread has become corrupt.")] Public Const ERROR_SXS_CORRUPTION = 14083
[Description("The activation context being deactivated is not the most recently activated one.")] Public Const ERROR_SXS_EARLY_DEACTIVATION = 14084
[Description("The activation context being deactivated is not active for the current thread of execution.")] Public Const ERROR_SXS_INVALID_DEACTIVATION = 14085
[Description("The activation context being deactivated has already been deactivated.")] Public Const ERROR_SXS_MULTIPLE_DEACTIVATION = 14086
[Description("A component used by the isolation facility has requested to terminate the process.")] Public Const ERROR_SXS_PROCESS_TERMINATION_REQUESTED = 14087
[Description("A kernel mode component is releasing a reference on an activation context.")] Public Const ERROR_SXS_RELEASE_ACTIVATION_CONTEXT = 14088
[Description("The activation context of system default assembly could not be generated.")] Public Const ERROR_SXS_SYSTEM_DEFAULT_ACTIVATION_CONTEXT_EMPTY = 14089
[Description("The value of an attribute in an identity is not within the legal range.")] Public Const ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_VALUE = 14090
[Description("The name of an attribute in an identity is not within the legal range.")] Public Const ERROR_SXS_INVALID_IDENTITY_ATTRIBUTE_NAME = 14091
[Description("An identity contains two definitions for the same attribute.")] Public Const ERROR_SXS_IDENTITY_DUPLICATE_ATTRIBUTE = 14092
[Description("The identity string is malformed. This may be due to a trailing comma, more than two unnamed attributes, missing attribute name or missing attribute value.")] Public Const ERROR_SXS_IDENTITY_PARSE_ERROR = 14093
[Description("A string containing localized substitutable content was malformed. Either a dollar sign ($) was followed by something other than a left parenthesis or another dollar sign or an substitution's right parenthesis was not found.")] Public Const ERROR_MALFORMED_SUBSTITUTION_STRING = 14094
[Description("The public key token does not correspond to the public key specified.")] Public Const ERROR_SXS_INCORRECT_PUBLIC_KEY_TOKEN = 14095
[Description("A substitution string had no mapping.")] Public Const ERROR_UNMAPPED_SUBSTITUTION_STRING = 14096
[Description("The component must be locked before making the request.")] Public Const ERROR_SXS_ASSEMBLY_NOT_LOCKED = 14097
[Description("The component store has been corrupted.")] Public Const ERROR_SXS_COMPONENT_STORE_CORRUPT = 14098
[Description("An advanced installer failed during setup or servicing.")] Public Const ERROR_ADVANCED_INSTALLER_FAILED = 14099
[Description("The character encoding in the XML declaration did not match the encoding used in the document.")] Public Const ERROR_XML_ENCODING_MISMATCH = 14100
[Description("The identities of the manifests are identical but their contents are different.")] Public Const ERROR_SXS_MANIFEST_IDENTITY_SAME_BUT_CONTENTS_DIFFERENT = 14101
[Description("The component identities are different.")] Public Const ERROR_SXS_IDENTITIES_DIFFERENT = 14102
[Description("The assembly is not a deployment.")] Public Const ERROR_SXS_ASSEMBLY_IS_NOT_A_DEPLOYMENT = 14103
[Description("The file is not a part of the assembly.")] Public Const ERROR_SXS_FILE_NOT_PART_OF_ASSEMBLY = 14104
[Description("The size of the manifest exceeds the maximum allowed.")] Public Const ERROR_SXS_MANIFEST_TOO_BIG = 14105
[Description("The setting is not registered.")] Public Const ERROR_SXS_SETTING_NOT_REGISTERED = 14106
[Description("One or more required members of the transaction are not present.")] Public Const ERROR_SXS_TRANSACTION_CLOSURE_INCOMPLETE = 14107
[Description("The SMI primitive installer failed during setup or servicing.")] Public Const ERROR_SMI_PRIMITIVE_INSTALLER_FAILED = 14108
[Description("A generic command executable returned a result that indicates failure.")] Public Const ERROR_GENERIC_COMMAND_FAILED = 14109
[Description("A component is missing file verification information in its manifest.")] Public Const ERROR_SXS_FILE_HASH_MISSING = 14110
[Description("Two or more components referenced directly or indirectly by the application manifest have the same WinRT ActivatableClass IDs.")] Public Const ERROR_SXS_DUPLICATE_ACTIVATABLE_CLASS = 14111


[Description("The specified channel path is invalid.")] Public Const ERROR_EVT_INVALID_CHANNEL_PATH = 15000
[Description("The specified query is invalid.")] Public Const ERROR_EVT_INVALID_QUERY = 15001
[Description("The publisher metadata cannot be found in the resource.")] Public Const ERROR_EVT_PUBLISHER_METADATA_NOT_FOUND = 15002
[Description("The template for an event definition cannot be found in the resource (error = %1).")] Public Const ERROR_EVT_EVENT_TEMPLATE_NOT_FOUND = 15003
[Description("The specified publisher name is invalid.")] Public Const ERROR_EVT_INVALID_PUBLISHER_NAME = 15004
[Description("The event data raised by the publisher is not compatible with the event template definition in the publisher's manifest.")] Public Const ERROR_EVT_INVALID_EVENT_DATA = 15005
[Description("The specified channel could not be found.")] Public Const ERROR_EVT_CHANNEL_NOT_FOUND = 15007
[Description("The specified XML text was not well-formed. See Extended Error for more details.")] Public Const ERROR_EVT_MALFORMED_XML_TEXT = 15008
[Description("The events for a direct channel go directly to a log file and cannot be subscribed to.")] Public Const ERROR_EVT_SUBSCRIPTION_TO_DIRECT_CHANNEL = 15009
[Description("Configuration error.")] Public Const ERROR_EVT_CONFIGURATION_ERROR = 15010
[Description("The query result is stale or invalid and must be recreated. This may be due to the log being cleared or rolling over after the query result was created.")] Public Const ERROR_EVT_QUERY_RESULT_STALE = 15011
[Description("The query result is currently at an invalid position.")] Public Const ERROR_EVT_QUERY_RESULT_INVALID_POSITION = 15012
[Description("Registered MSXML doesn't support validation.")] Public Const ERROR_EVT_NON_VALIDATING_MSXML = 15013
[Description("An expression can only be followed by a change-of-scope operation if the expression evaluates to a node set and is not already part of another change-of-scope operation.")] Public Const ERROR_EVT_FILTER_ALREADYSCOPED = 15014
[Description("Cannot perform a step operation from a term that does not represent an element set.")] Public Const ERROR_EVT_FILTER_NOTELTSET = 15015
[Description("Left-hand side arguments to binary operators must be either attributes, nodes or variables. Right-hand side arguments must be constants.")] Public Const ERROR_EVT_FILTER_INVARG = 15016
[Description("A step operation must involve a node test or, in the case of a predicate, an algebraic expression against which to test each node in the preceeding node set.")] Public Const ERROR_EVT_FILTER_INVTEST = 15017
[Description("This data type is currently unsupported.")] Public Const ERROR_EVT_FILTER_INVTYPE = 15018
[Description("A syntax error occurred at position %1!d!")] Public Const ERROR_EVT_FILTER_PARSEERR = 15019
[Description("This operator is unsupported by this implementation of the filter.")] Public Const ERROR_EVT_FILTER_UNSUPPORTEDOP = 15020
[Description("An unexpected token was encountered.")] Public Const ERROR_EVT_FILTER_UNEXPECTEDTOKEN = 15021
[Description("The requested operation cannot be performed over an enabled direct channel. The channel must first be disabled.")] Public Const ERROR_EVT_INVALID_OPERATION_OVER_ENABLED_DIRECT_CHANNEL = 15022
[Description("Channel property %1!s! contains an invalid value. The value has an invalid type, is outside of its valid range, cannot be changed, or is not supported by this type of channel.")] Public Const ERROR_EVT_INVALID_CHANNEL_PROPERTY_VALUE = 15023
[Description("Publisher property %1!s! contains an invalid value. The value has an invalid type, is outside of its valid range, cannot be changed, or is not supported by this type of publisher.")] Public Const ERROR_EVT_INVALID_PUBLISHER_PROPERTY_VALUE = 15024
[Description("The channel failed to activate.")] Public Const ERROR_EVT_CHANNEL_CANNOT_ACTIVATE = 15025
[Description("The XPath expression exceeded the supported complexity. Simplify the expression or split it into multiple expressions.")] Public Const ERROR_EVT_FILTER_TOO_COMPLEX = 15026
[Description("The message resource is present but the message was not found in the message table.")] Public Const ERROR_EVT_MESSAGE_NOT_FOUND = 15027
[Description("The message ID for the desired message could not be found.")] Public Const ERROR_EVT_MESSAGE_ID_NOT_FOUND = 15028
[Description("The substitution string for insert index (%1) could not be found.")] Public Const ERROR_EVT_UNRESOLVED_VALUE_INSERT = 15029
[Description("The description string for parameter reference (%1) could not be found.")] Public Const ERROR_EVT_UNRESOLVED_PARAMETER_INSERT = 15030
[Description("The maximum number of replacements has been reached.")] Public Const ERROR_EVT_MAX_INSERTS_REACHED = 15031
[Description("The event definition could not be found for event ID (%1).")] Public Const ERROR_EVT_EVENT_DEFINITION_NOT_FOUND = 15032
[Description("The locale specific resource for the desired message is not present.")] Public Const ERROR_EVT_MESSAGE_LOCALE_NOT_FOUND = 15033
[Description("The resource is too old and is not supported.")] Public Const ERROR_EVT_VERSION_TOO_OLD = 15034
[Description("The resource is too new and is not supported.")] Public Const ERROR_EVT_VERSION_TOO_NEW = 15035
[Description("The channel at index %1!d! of the query can't be opened.")] Public Const ERROR_EVT_CANNOT_OPEN_CHANNEL_OF_QUERY = 15036
[Description("The publisher has been disabled and its resource is not available. This usually occurs when the publisher is in the process of being uninstalled or upgraded.")] Public Const ERROR_EVT_PUBLISHER_DISABLED = 15037
[Description("Attempted to create a numeric type that is outside of its valid range.")] Public Const ERROR_EVT_FILTER_OUT_OF_RANGE = 15038
[ Description("The subscription fails to activate.") ] Public Const ERROR_EC_SUBSCRIPTION_CANNOT_ACTIVATE = 15080
[ Description("The log of the subscription is in disabled state, and can not be used to forward events to. The log must first be enabled before the subscription can be activated.") ] Public Const ERROR_EC_LOG_DISABLED =            15081
[ Description("When forwarding events from local machine to itself, the query of the subscription can't contain target log of the subscription.") ] Public Const ERROR_EC_CIRCULAR_FORWARDING =     15082
[ Description("The credential store that is used to save credentials is full.") ] Public Const ERROR_EC_CREDSTORE_FULL =          15083
[ Description("The credential used by this subscription can't be found in credential store.") ] Public Const ERROR_EC_CRED_NOT_FOUND =          15084
[ Description("No active channel is found for the query.") ] Public Const ERROR_EC_NO_ACTIVE_CHANNEL =       15085
[ Description("The resource loader failed to find MUI file.") ] Public Const ERROR_MUI_FILE_NOT_FOUND =         15100
[ Description("The resource loader failed to load MUI file because the file fail to pass validation.") ] Public Const ERROR_MUI_INVALID_FILE =           15101
[ Description("The RC Manifest is corrupted with garbage data or unsupported version or missing required item.") ] Public Const ERROR_MUI_INVALID_RC_CONFIG =      15102
[ Description("The RC Manifest has invalid culture name.") ] Public Const ERROR_MUI_INVALID_LOCALE_NAME =    15103
[ Description("The RC Manifest has invalid ultimatefallback name.") ] Public Const ERROR_MUI_INVALID_ULTIMATEFALLBACK_NAME = 15104
[ Description("The resource loader cache doesn't have loaded MUI entry.") ] Public Const ERROR_MUI_FILE_NOT_LOADED =        15105
[ Description("User stopped resource enumeration.") ] Public Const ERROR_RESOURCE_ENUM_USER_STOP =    15106
[ Description("UI language installation failed.") ] Public Const ERROR_MUI_INTLSETTINGS_UILANG_NOT_INSTALLED = 15107
[ Description("Locale installation failed.") ] Public Const ERROR_MUI_INTLSETTINGS_INVALID_LOCALE_NAME = 15108
[ Description("A resource does not have default or neutral value.") ] Public Const ERROR_MRM_RUNTIME_NO_DEFAULT_OR_NEUTRAL_RESOURCE = 15110
[ Description("Invalid PRI config file.") ] Public Const ERROR_MRM_INVALID_PRICONFIG =      15111
[ Description("Invalid file type.") ] Public Const ERROR_MRM_INVALID_FILE_TYPE =      15112
[ Description("Unknown qualifier.") ] Public Const ERROR_MRM_UNKNOWN_QUALIFIER =      15113
[ Description("Invalid qualifier value.") ] Public Const ERROR_MRM_INVALID_QUALIFIER_VALUE = 15114
[ Description("No Candidate found.") ] Public Const ERROR_MRM_NO_CANDIDATE =           15115
[ Description("The ResourceMap or NamedResource has an item that does not have default or neutral resource..") ] Public Const ERROR_MRM_NO_MATCH_OR_DEFAULT_CANDIDATE = 15116
[ Description("Invalid ResourceCandidate type.") ] Public Const ERROR_MRM_RESOURCE_TYPE_MISMATCH = 15117
[ Description("Duplicate Resource Map.") ] Public Const ERROR_MRM_DUPLICATE_MAP_NAME =     15118
[ Description("Duplicate Entry.") ] Public Const ERROR_MRM_DUPLICATE_ENTRY =        15119
[ Description("Invalid Resource Identifier.") ] Public Const ERROR_MRM_INVALID_RESOURCE_IDENTIFIER = 15120
[ Description("Filepath too long.") ] Public Const ERROR_MRM_FILEPATH_TOO_LONG =      15121
[ Description("Unsupported directory type.") ] Public Const ERROR_MRM_UNSUPPORTED_DIRECTORY_TYPE = 15122
[ Description("Invalid PRI File.") ] Public Const ERROR_MRM_INVALID_PRI_FILE =       15126
[ Description("NamedResource Not Found.") ] Public Const ERROR_MRM_NAMED_RESOURCE_NOT_FOUND = 15127
[ Description("ResourceMap Not Found.") ] Public Const ERROR_MRM_MAP_NOT_FOUND =          15135
[ Description("Unsupported MRT profile type.") ] Public Const ERROR_MRM_UNSUPPORTED_PROFILE_TYPE = 15136
[ Description("Invalid qualifier operator.") ] Public Const ERROR_MRM_INVALID_QUALIFIER_OPERATOR = 15137
[ Description("Unable to determine qualifier value or qualifier value has not been set.") ] Public Const ERROR_MRM_INDETERMINATE_QUALIFIER_VALUE = 15138
[ Description("Automerge is enabled in the PRI file.") ] Public Const ERROR_MRM_AUTOMERGE_ENABLED =      15139
[ Description("Too many resources defined for package.") ] Public Const ERROR_MRM_TOO_MANY_RESOURCES =     15140
[ Description("Resource File can not be used for merge operation.") ] Public Const ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_MERGE = 15141
[ Description("Load/UnloadPriFiles cannot be used with resource packages.") ] Public Const ERROR_MRM_UNSUPPORTED_FILE_TYPE_FOR_LOAD_UNLOAD_PRI_FILE = 15142
[ Description("Resource Contexts may not be created on threads that do not have a CoreWindow.") ] Public Const ERROR_MRM_NO_CURRENT_VIEW_ON_THREAD = 15143
[ Description("The singleton Resource Manager with different profile is already created.") ] Public Const ERROR_DIFFERENT_PROFILE_RESOURCE_MANAGER_EXIST = 15144
[ Description("The system component cannot operate given API operation") ] Public Const ERROR_OPERATION_NOT_ALLOWED_FROM_SYSTEM_COMPONENT = 15145
[ Description("The resource is a direct reference to a non-default resource candidate.") ] Public Const ERROR_MRM_DIRECT_REF_TO_NON_DEFAULT_RESOURCE = 15146
[ Description("Resource Map has been re-generated and the query string is not valid anymore.") ] Public Const ERROR_MRM_GENERATION_COUNT_MISMATCH = 15147
[ Description("The PRI files to be merged have incompatible versions.") ] Public Const ERROR_PRI_MERGE_VERSION_MISMATCH = 15148
[ Description("The primary PRI files to be merged does not contain a schema.") ] Public Const ERROR_PRI_MERGE_MISSING_SCHEMA =   15149
[ Description("Unable to load one of the PRI files to be merged.") ] Public Const ERROR_PRI_MERGE_LOAD_FILE_FAILED = 15150
[ Description("Unable to add one of the PRI files to the merged file.") ] Public Const ERROR_PRI_MERGE_ADD_FILE_FAILED =  15151
[ Description("Unable to create the merged PRI file.") ] Public Const ERROR_PRI_MERGE_WRITE_FILE_FAILED = 15152
[ Description("Packages for a PRI file merge must all be from the same package family.") ] Public Const ERROR_PRI_MERGE_MULTIPLE_PACKAGE_FAMILIES_NOT_ALLOWED = 15153
[ Description("Packages for a PRI file merge must not include multiple main packages.") ] Public Const ERROR_PRI_MERGE_MULTIPLE_MAIN_PACKAGES_NOT_ALLOWED = 15154
[ Description("Packages for a PRI file merge must not include bundle packages.") ] Public Const ERROR_PRI_MERGE_BUNDLE_PACKAGES_NOT_ALLOWED = 15155
[ Description("Packages for a PRI file merge must include one main package.") ] Public Const ERROR_PRI_MERGE_MAIN_PACKAGE_REQUIRED = 15156
[ Description("Packages for a PRI file merge must include at least one resource package.") ] Public Const ERROR_PRI_MERGE_RESOURCE_PACKAGE_REQUIRED = 15157
[ Description("Invalid name supplied for a canonical merged PRI file.") ] Public Const ERROR_PRI_MERGE_INVALID_FILE_NAME = 15158
[ Description("Unable to find the specified package.") ] Public Const ERROR_MRM_PACKAGE_NOT_FOUND =      15159
[ Description("No default value for language was specified.") ] Public Const ERROR_MRM_MISSING_DEFAULT_LANGUAGE = 15160
[ Description("An entity was defined as both resource and scope, which is not allowed.") ] Public Const ERROR_MRM_SCOPE_ITEM_CONFLICT = 15161
[Description("The monitor returned a DDC/CI capabilities string that did not comply with the ACCESS.bus 3.0, DDC/CI 1.1 or MCCS 2 Revision 1 specification.")] Public Const ERROR_MCA_INVALID_CAPABILITIES_STRING = 15200
[Description("The monitor's VCP Version (0xDF) VCP code returned an invalid version value.")] Public Const ERROR_MCA_INVALID_VCP_VERSION = 15201
[Description("The monitor does not comply with the MCCS specification it claims to support.")] Public Const ERROR_MCA_MONITOR_VIOLATES_MCCS_SPECIFICATION = 15202
[Description("The MCCS version in a monitor's mccs_ver capability does not match the MCCS version the monitor reports when the VCP Version (0xDF) VCP code is used.")] Public Const ERROR_MCA_MCCS_VERSION_MISMATCH = 15203
[Description("The Monitor Configuration API only works with monitors that support the MCCS 1.0 specification, MCCS 2.0 specification or the MCCS 2.0 Revision 1 specification.")] Public Const ERROR_MCA_UNSUPPORTED_MCCS_VERSION = 15204
[Description("An internal Monitor Configuration API error occurred.")] Public Const ERROR_MCA_INTERNAL_ERROR = 15205
[Description("The monitor returned an invalid monitor technology type. CRT, Plasma and LCD (TFT) are examples of monitor technology types. This error implies that the monitor violated the MCCS 2.0 or MCCS 2.0 Revision 1 specification.")] Public Const ERROR_MCA_INVALID_TECHNOLOGY_TYPE_RETURNED = 15206
[Description("The caller of SetMonitorColorTemperature specified a color temperature that the current monitor did not support. This error implies that the monitor violated the MCCS 2.0 or MCCS 2.0 Revision 1 specification.")] Public Const ERROR_MCA_UNSUPPORTED_COLOR_TEMPERATURE = 15207


[Description("Not enough memory is available to complete this request")] Public Const SEC_E_INSUFFICIENT_MEMORY = &H80090300
[Description("The handle specified is invalid")] Public Const SEC_E_INVALID_HANDLE = &H80090301
[Description("The function requested is not supported")] Public Const SEC_E_UNSUPPORTED_FUNCTION = &H80090302
[Description("The specified target is unknown or unreachable")] Public Const SEC_E_TARGET_UNKNOWN = &H80090303
[Description("The Local Security Authority cannot be contacted")] Public Const SEC_E_INTERNAL_ERROR = &H80090304
[Description("The requested security package does not exist")] Public Const SEC_E_SECPKG_NOT_FOUND = &H80090305
[Description("The caller is not the owner of the desired credentials")] Public Const SEC_E_NOT_OWNER = &H80090306
[Description("The security package failed to initialize, and cannot be installed")] Public Const SEC_E_CANNOT_INSTALL = &H80090307
[Description("The token supplied to the function is invalid")] Public Const SEC_E_INVALID_TOKEN = &H80090308
[Description("The security package is not able to marshall the logon buffer, so the logon attempt has failed")] Public Const SEC_E_CANNOT_PACK = &H80090309
[Description("The per-message Quality of Protection is not supported by the security package")] Public Const SEC_E_QOP_NOT_SUPPORTED = &H8009030A
[Description("The security context does not allow impersonation of the client")] Public Const SEC_E_NO_IMPERSONATION = &H8009030B
[Description("The logon attempt failed")] Public Const SEC_E_LOGON_DENIED = &H8009030C
[Description("The credentials supplied to the package were not recognized")] Public Const SEC_E_UNKNOWN_CREDENTIALS = &H8009030D
[Description("No credentials are available in the security package")] Public Const SEC_E_NO_CREDENTIALS = &H8009030E
[Description("The message or signature supplied for verification has been altered")] Public Const SEC_E_MESSAGE_ALTERED = &H8009030F
[Description("The message supplied for verification is out of sequence")] Public Const SEC_E_OUT_OF_SEQUENCE = &H80090310
[Description("No authority could be contacted for authentication.")] Public Const SEC_E_NO_AUTHENTICATING_AUTHORITY = &H80090311
[Description("The function completed successfully, but must be called again to complete the context")] Public Const SEC_I_CONTINUE_NEEDED = &H00090312
[Description("The function completed successfully, but CompleteToken must be called")] Public Const SEC_I_COMPLETE_NEEDED = &H00090313
[Description("The function completed successfully, but both CompleteToken and this function must be called to complete the context")] Public Const SEC_I_COMPLETE_AND_CONTINUE = &H00090314
[Description("The logon was completed, but no network authority was available. The logon was made using locally known information")] Public Const SEC_I_LOCAL_LOGON = &H00090315
[Description("Call completed successfully.")] Public Const SEC_E_OK = &H00000000
[Description("Schannel has received a TLS extension the SSPI caller subscribed to.")] Public Const SEC_I_GENERIC_EXTENSION_RECEIVED = &H00090316
[Description("The requested security package does not exist")] Public Const SEC_E_BAD_PKGID = &H80090316
[Description("The context has expired and can no longer be used.")] Public Const SEC_E_CONTEXT_EXPIRED = &H80090317
[Description("The context has expired and can no longer be used.")] Public Const SEC_I_CONTEXT_EXPIRED = &H00090317
[Description("The supplied message is incomplete. The signature was not verified.")] Public Const SEC_E_INCOMPLETE_MESSAGE = &H80090318
[Description("The credentials supplied were not complete, and could not be verified. The context could not be initialized.")] Public Const SEC_E_INCOMPLETE_CREDENTIALS = &H80090320
[Description("The buffers supplied to a function was too small.")] Public Const SEC_E_BUFFER_TOO_SMALL = &H80090321
[Description("The credentials supplied were not complete, and could not be verified. Additional information can be returned from the context.")] Public Const SEC_I_INCOMPLETE_CREDENTIALS = &H00090320
[Description("The context data must be renegotiated with the peer.")] Public Const SEC_I_RENEGOTIATE = &H00090321
[Description("The target principal name is incorrect.")] Public Const SEC_E_WRONG_PRINCIPAL = &H80090322
[Description("There is no LSA mode context associated with this context.")] Public Const SEC_I_NO_LSA_CONTEXT = &H00090323
[Description("The clocks on the client and server machines are skewed.")] Public Const SEC_E_TIME_SKEW = &H80090324
[Description("The certificate chain was issued by an authority that is not trusted.")] Public Const SEC_E_UNTRUSTED_ROOT = &H80090325
[Description("The message received was unexpected or badly formatted.")] Public Const SEC_E_ILLEGAL_MESSAGE = &H80090326
[Description("An unknown error occurred while processing the certificate.")] Public Const SEC_E_CERT_UNKNOWN = &H80090327
[Description("The received certificate has expired.")] Public Const SEC_E_CERT_EXPIRED = &H80090328
[Description("The specified data could not be encrypted.")] Public Const SEC_E_ENCRYPT_FAILURE = &H80090329
[Description("")] Public Const SEC_E_DECRYPT_FAILURE = &H80090330
[Description("The client and server cannot communicate, because they do not possess a common algorithm.")] Public Const SEC_E_ALGORITHM_MISMATCH = &H80090331
[Description("The security context could not be established due to a failure in the requested quality of service (e.g. mutual authentication or delegation).")] Public Const SEC_E_SECURITY_QOS_FAILED = &H80090332
[Description("A security context was deleted before the context was completed. This is considered a logon failure.")] Public Const SEC_E_UNFINISHED_CONTEXT_DELETED = &H80090333
[Description("The client is trying to negotiate a context and the server requires user-to-user but didn't send a TGT reply.")] Public Const SEC_E_NO_TGT_REPLY = &H80090334
[Description("Unable to accomplish the requested task because the local machine does not have any IP addresses.")] Public Const SEC_E_NO_IP_ADDRESSES = &H80090335
[Description("The supplied credential handle does not match the credential associated with the security context.")] Public Const SEC_E_WRONG_CREDENTIAL_HANDLE = &H80090336
[Description("The crypto system or checksum function is invalid because a required function is unavailable.")] Public Const SEC_E_CRYPTO_SYSTEM_INVALID = &H80090337
[Description("The number of maximum ticket referrals has been exceeded.")] Public Const SEC_E_MAX_REFERRALS_EXCEEDED = &H80090338
[Description("The local machine must be a Kerberos KDC (domain controller) and it is not.")] Public Const SEC_E_MUST_BE_KDC = &H80090339
[Description("The other end of the security negotiation is requires strong crypto but it is not supported on the local machine.")] Public Const SEC_E_STRONG_CRYPTO_NOT_SUPPORTED = &H8009033A
[Description("The KDC reply contained more than one principal name.")] Public Const SEC_E_TOO_MANY_PRINCIPALS = &H8009033B
[Description("Expected to find PA data for a hint of what etype to use, but it was not found.")] Public Const SEC_E_NO_PA_DATA = &H8009033C
[Description("The client certificate does not contain a valid UPN, or does not match the client name in the logon request. Please contact your administrator.")] Public Const SEC_E_PKINIT_NAME_MISMATCH = &H8009033D
[Description("Smartcard logon is required and was not used.")] Public Const SEC_E_SMARTCARD_LOGON_REQUIRED = &H8009033E
[Description("A system shutdown is in progress.")] Public Const SEC_E_SHUTDOWN_IN_PROGRESS = &H8009033F
[Description("An invalid request was sent to the KDC.")] Public Const SEC_E_KDC_INVALID_REQUEST = &H80090340
[Description("The KDC was unable to generate a referral for the service requested.")] Public Const SEC_E_KDC_UNABLE_TO_REFER = &H80090341
[Description("The encryption type requested is not supported by the KDC.")] Public Const SEC_E_KDC_UNKNOWN_ETYPE = &H80090342
[Description("An unsupported preauthentication mechanism was presented to the Kerberos package.")] Public Const SEC_E_UNSUPPORTED_PREAUTH = &H80090343
[Description("The requested operation cannot be completed. The computer must be trusted for delegation and the current user account must be configured to allow delegation.")] Public Const SEC_E_DELEGATION_REQUIRED = &H80090345
[Description("Client's supplied SSPI channel bindings were incorrect.")] Public Const SEC_E_BAD_BINDINGS = &H80090346
[Description("The received certificate was mapped to multiple accounts.")] Public Const SEC_E_MULTIPLE_ACCOUNTS = &H80090347
[Description(" SEC_E_NO_KERB_KEY")] Public Const SEC_E_NO_KERB_KEY = &H80090348
[Description("The certificate is not valid for the requested usage.")] Public Const SEC_E_CERT_WRONG_USAGE = &H80090349
[Description("The system cannot contact a domain controller to service the authentication request. Please try again later.")] Public Const SEC_E_DOWNGRADE_DETECTED = &H80090350
[Description("The smartcard certificate used for authentication has been revoked. Please contact your system administrator. There may be additional information in the event log.")] Public Const SEC_E_SMARTCARD_CERT_REVOKED = &H80090351
[Description("An untrusted certificate authority was detected while processing the smartcard certificate used for authentication. Please contact your system administrator.")] Public Const SEC_E_ISSUING_CA_UNTRUSTED = &H80090352
[Description("The revocation status of the smartcard certificate used for authentication could not be determined. Please contact your system administrator.")] Public Const SEC_E_REVOCATION_OFFLINE_C = &H80090353
[Description("The smartcard certificate used for authentication was not trusted. Please contact your system administrator.")] Public Const SEC_E_PKINIT_CLIENT_FAILURE = &H80090354
[Description("The smartcard certificate used for authentication has expired. Please contact your system administrator.")] Public Const SEC_E_SMARTCARD_CERT_EXPIRED = &H80090355
[Description("The Kerberos subsystem encountered an error. A service for user protocol request was made against a domain controller which does not support service for user.")] Public Const SEC_E_NO_S4U_PROT_SUPPORT = &H80090356
[Description("An attempt was made by this server to make a Kerberos constrained delegation request for a target outside of the server's realm. This is not supported, and indicates a misconfiguration on this server's allowed to delegate to list. Please contact your administrator.")] Public Const SEC_E_CROSSREALM_DELEGATION_FAILURE = &H80090357
[Description("The revocation status of the domain controller certificate used for smartcard authentication could not be determined. There is additional information in the system event log. Please contact your system administrator.")] Public Const SEC_E_REVOCATION_OFFLINE_KDC = &H80090358
[Description("An untrusted certificate authority was detected while processing the domain controller certificate used for authentication. There is additional information in the system event log. Please contact your system administrator.")] Public Const SEC_E_ISSUING_CA_UNTRUSTED_KDC = &H80090359
[Description("The domain controller certificate used for smartcard logon has expired. Please contact your system administrator with the contents of your system event log.")] Public Const SEC_E_KDC_CERT_EXPIRED = &H8009035A
[Description("The domain controller certificate used for smartcard logon has been revoked. Please contact your system administrator with the contents of your system event log.")] Public Const SEC_E_KDC_CERT_REVOKED = &H8009035B
[Description("A signature operation must be performed before the user can authenticate.")] Public Const SEC_I_SIGNATURE_NEEDED = &H0009035C
[Description("One or more of the parameters passed to the function was invalid.")] Public Const SEC_E_INVALID_PARAMETER = &H8009035D
[Description("Client policy does not allow credential delegation to target server.")] Public Const SEC_E_DELEGATION_POLICY = &H8009035E
[Description("Client policy does not allow credential delegation to target server with NLTM only authentication.")] Public Const SEC_E_POLICY_NLTM_ONLY = &H8009035F
[Description("The recipient rejected the renegotiation request.")] Public Const SEC_I_NO_RENEGOTIATION = &H00090360
[Description("The required security context does not exist.")] Public Const SEC_E_NO_CONTEXT = &H80090361
[Description("The PKU2U protocol encountered an error while attempting to utilize the associated certificates.")] Public Const SEC_E_PKU2U_CERT_FAILURE = &H80090362
[Description("The identity of the server computer could not be verified.")] Public Const SEC_E_MUTUAL_AUTH_FAILED = &H80090363
[Description("The returned buffer is only a fragment of the message. More fragments need to be returned.")] Public Const SEC_I_MESSAGE_FRAGMENT = &H00090364
[Description("Only https scheme is allowed.")] Public Const SEC_E_ONLY_HTTPS_ALLOWED = &H80090365
[Description("The function completed successfully, but must be called again to complete the context. Early start can be used.")] Public Const SEC_I_CONTINUE_NEEDED_MESSAGE_OK = &H00090366
[Description("No common application protocol exists between the client and the server. Application protocol negotiation failed.")] Public Const SEC_E_APPLICATION_PROTOCOL_MISMATCH = &H80090367
[Description("An asynchronous SSPI routine has been called and the work is pending completion.")] Public Const SEC_I_ASYNC_CALL_PENDING = &H00090368
[Description("You can't sign in with a user ID in this format. Try using your email address instead.")] Public Const SEC_E_INVALID_UPN_NAME = &H80090369
[Description("The buffer supplied by the SSPI caller to receive generic extensions is too small.")] Public Const SEC_E_EXT_BUFFER_TOO_SMALL = &H8009036A
[Description("Not enough secbuffers were supplied to generate a token.")] Public Const SEC_E_INSUFFICIENT_BUFFERS = &H8009036B
Public Const SEC_E_NO_SPM = SEC_E_INTERNAL_ERROR
Public Const SEC_E_NOT_SUPPORTED = SEC_E_UNSUPPORTED_FUNCTION


[Description("No more Internet handles can be allocated")] Public Const WININET_E_OUT_OF_HANDLES = &H80072EE1
[Description("The operation timed out")] Public Const WININET_E_TIMEOUT = &H80072EE2
[Description("The server returned extended information")] Public Const WININET_E_EXTENDED_ERROR = &H80072EE3
[Description("An internal error occurred in the Microsoft Internet extensions")] Public Const WININET_E_INTERNAL_ERROR = &H80072EE4
[Description("The URL is invalid")] Public Const WININET_E_INVALID_URL = &H80072EE5
[Description("The URL does not use a recognized protocol")] Public Const WININET_E_UNRECOGNIZED_SCHEME = &H80072EE6
[Description("The server name or address could not be resolved")] Public Const WININET_E_NAME_NOT_RESOLVED = &H80072EE7
[Description("A protocol with the required capabilities was not found")] Public Const WININET_E_PROTOCOL_NOT_FOUND = &H80072EE8
[Description("The option is invalid")] Public Const WININET_E_INVALID_OPTION = &H80072EE9
[Description("The length is incorrect for the option type")] Public Const WININET_E_BAD_OPTION_LENGTH = &H80072EEA
[Description("The option value cannot be set")] Public Const WININET_E_OPTION_NOT_SETTABLE = &H80072EEB
[Description("Microsoft Internet Extension support has been shut down")] Public Const WININET_E_SHUTDOWN = &H80072EEC
[Description("The user name was not allowed")] Public Const WININET_E_INCORRECT_USER_NAME = &H80072EED
[Description("The password was not allowed")] Public Const WININET_E_INCORRECT_PASSWORD = &H80072EEE
[Description("The login request was denied")] Public Const WININET_E_LOGIN_FAILURE = &H80072EEF
[Description("The requested operation is invalid")] Public Const WININET_E_INVALID_OPERATION = &H80072EF0
[Description("The operation has been canceled")] Public Const WININET_E_OPERATION_CANCELLED = &H80072EF1
[Description("The supplied handle is the wrong type for the requested operation")] Public Const WININET_E_INCORRECT_HANDLE_TYPE = &H80072EF2
[Description("The handle is in the wrong state for the requested operation")] Public Const WININET_E_INCORRECT_HANDLE_STATE = &H80072EF3
[Description("The request cannot be made on a Proxy session")] Public Const WININET_E_NOT_PROXY_REQUEST = &H80072EF4
[Description("The registry value could not be found")] Public Const WININET_E_REGISTRY_VALUE_NOT_FOUND = &H80072EF5
[Description("The registry parameter is incorrect")] Public Const WININET_E_BAD_REGISTRY_PARAMETER = &H80072EF6
[Description("Direct Internet access is not available")] Public Const WININET_E_NO_DIRECT_ACCESS = &H80072EF7
[Description("No context value was supplied")] Public Const WININET_E_NO_CONTEXT = &H80072EF8
[Description("No status callback was supplied")] Public Const WININET_E_NO_CALLBACK = &H80072EF9
[Description("There are outstanding requests")] Public Const WININET_E_REQUEST_PENDING = &H80072EFA
[Description("The information format is incorrect")] Public Const WININET_E_INCORRECT_FORMAT = &H80072EFB
[Description("The requested item could not be found")] Public Const WININET_E_ITEM_NOT_FOUND = &H80072EFC
[Description("A connection with the server could not be established")] Public Const WININET_E_CANNOT_CONNECT = &H80072EFD
[Description("The connection with the server was terminated abnormally")] Public Const WININET_E_CONNECTION_ABORTED = &H80072EFE
[Description("The connection with the server was reset")] Public Const WININET_E_CONNECTION_RESET = &H80072EFF
[Description("The action must be retried")] Public Const WININET_E_FORCE_RETRY = &H80072F00
[Description("The proxy request is invalid")] Public Const WININET_E_INVALID_PROXY_REQUEST = &H80072F01
[Description("User interaction is required to complete the operation")] Public Const WININET_E_NEED_UI = &H80072F02
[Description("The handle already exists")] Public Const WININET_E_HANDLE_EXISTS = &H80072F04
[Description("The date in the certificate is invalid or has expired")] Public Const WININET_E_SEC_CERT_DATE_INVALID = &H80072F05
[Description("The host name in the certificate is invalid or does not match")] Public Const WININET_E_SEC_CERT_CN_INVALID = &H80072F06
[Description("A redirect request will change a non-secure to a secure connection")] Public Const WININET_E_HTTP_TO_HTTPS_ON_REDIR = &H80072F07
[Description("A redirect request will change a secure to a non-secure connection")] Public Const WININET_E_HTTPS_TO_HTTP_ON_REDIR = &H80072F08
[Description("Mixed secure and non-secure connections")] Public Const WININET_E_MIXED_SECURITY = &H80072F09
[Description("Changing to non-secure post")] Public Const WININET_E_CHG_POST_IS_NON_SECURE = &H80072F0A
[Description("Data is being posted on a non-secure connection")] Public Const WININET_E_POST_IS_NON_SECURE = &H80072F0B
[Description("A certificate is required to complete client authentication")] Public Const WININET_E_CLIENT_AUTH_CERT_NEEDED = &H80072F0C
[Description("The certificate authority is invalid or incorrect")] Public Const WININET_E_INVALID_CA = &H80072F0D
[Description("Client authentication has not been correctly installed")] Public Const WININET_E_CLIENT_AUTH_NOT_SETUP = &H80072F0E
[Description("An error has occurred in a Wininet asynchronous thread. You may need to restart")] Public Const WININET_E_ASYNC_THREAD_FAILED = &H80072F0F
[Description("The protocol scheme has changed during a redirect operation")] Public Const WININET_E_REDIRECT_SCHEME_CHANGE = &H80072F10
[Description("There are operations awaiting retry")] Public Const WININET_E_DIALOG_PENDING = &H80072F11
[Description("The operation must be retried")] Public Const WININET_E_RETRY_DIALOG = &H80072F12
[Description("There are no new cache containers")] Public Const WININET_E_NO_NEW_CONTAINERS = &H80072F13
[Description("A security zone check indicates the operation must be retried")] Public Const WININET_E_HTTPS_HTTP_SUBMIT_REDIR = &H80072F14
[Description("The SSL certificate contains errors.")] Public Const WININET_E_SEC_CERT_ERRORS = &H80072F17
[Description("It was not possible to connect to the revocation server or a definitive response could not be obtained.")] Public Const WININET_E_SEC_CERT_REV_FAILED = &H80072F19
[Description("The requested header was not found")] Public Const WININET_E_HEADER_NOT_FOUND = &H80072F76
[Description("The server does not support the requested protocol level")] Public Const WININET_E_DOWNLEVEL_SERVER = &H80072F77
[Description("The server returned an invalid or unrecognized response")] Public Const WININET_E_INVALID_SERVER_RESPONSE = &H80072F78
[Description("The supplied HTTP header is invalid")] Public Const WININET_E_INVALID_HEADER = &H80072F79
[Description("The request for a HTTP header is invalid")] Public Const WININET_E_INVALID_QUERY_REQUEST = &H80072F7A
[Description("The HTTP header already exists")] Public Const WININET_E_HEADER_ALREADY_EXISTS = &H80072F7B
[Description("The HTTP redirect request failed")] Public Const WININET_E_REDIRECT_FAILED = &H80072F7C
[Description("An error occurred in the secure channel support")] Public Const WININET_E_SECURITY_CHANNEL_ERROR = &H80072F7D
[Description("The file could not be written to the cache")] Public Const WININET_E_UNABLE_TO_CACHE_FILE = &H80072F7E
[Description("The TCP/IP protocol is not installed properly")] Public Const WININET_E_TCPIP_NOT_INSTALLED = &H80072F7F
[Description("The computer is disconnected from the network")] Public Const WININET_E_DISCONNECTED = &H80072F83
[Description("The server is unreachable")] Public Const WININET_E_SERVER_UNREACHABLE = &H80072F84
[Description("The proxy server is unreachable")] Public Const WININET_E_PROXY_SERVER_UNREACHABLE = &H80072F85
[Description("The proxy auto-configuration script is in error")] Public Const WININET_E_BAD_AUTO_PROXY_SCRIPT = &H80072F86
[Description("Could not download the proxy auto-configuration script file")] Public Const WININET_E_UNABLE_TO_DOWNLOAD_SCRIPT = &H80072F87
[Description("The supplied certificate is invalid")] Public Const WININET_E_SEC_INVALID_CERT = &H80072F89
[Description("The supplied certificate has been revoked")] Public Const WININET_E_SEC_CERT_REVOKED = &H80072F8A
[Description("The Dialup failed because file sharing was turned on and a failure was requested if security check was needed")] Public Const WININET_E_FAILED_DUETOSECURITYCHECK = &H80072F8B
[Description("Initialization of the WinINet API has not occurred")] Public Const WININET_E_NOT_INITIALIZED = &H80072F8C
[Description("Login failed and the client should display the entity body to the user")] Public Const WININET_E_LOGIN_FAILURE_DISPLAY_ENTITY_BODY = &H80072F8E
[Description("Content decoding has failed")] Public Const WININET_E_DECODING_FAILED = &H80072F8F
[Description("The HTTP request was not redirected")] Public Const WININET_E_NOT_REDIRECTED = &H80072F80
[Description("A cookie from the server must be confirmed by the user")] Public Const WININET_E_COOKIE_NEEDS_CONFIRMATION = &H80072F81
[Description("A cookie from the server has been declined acceptance")] Public Const WININET_E_COOKIE_DECLINED = &H80072F82
[Description("The HTTP redirect request must be confirmed by the user")] Public Const WININET_E_REDIRECT_NEEDS_CONFIRMATION = &H80072F88


[Description("Class does not support aggregation (or class object is remote)")] Public Const CLASS_E_NOAGGREGATION = &H80040110
[Description("ClassFactory cannot supply requested class")] Public Const CLASS_E_CLASSNOTAVAILABLE = &H80040111
[Description("Class is not licensed for use")] Public Const CLASS_E_NOTLICENSED = &H80040112


[Description("Unknown interface.")] Public Const DISP_E_UNKNOWNINTERFACE = &H80020001
[Description("Member not found.")] Public Const DISP_E_MEMBERNOTFOUND = &H80020003
[Description("Parameter not found.")] Public Const DISP_E_PARAMNOTFOUND = &H80020004
[Description("Type mismatch.")] Public Const DISP_E_TYPEMISMATCH = &H80020005
[Description("Unknown name.")] Public Const DISP_E_UNKNOWNNAME = &H80020006
[Description("No named arguments.")] Public Const DISP_E_NONAMEDARGS = &H80020007
[Description("Bad variable type.")] Public Const DISP_E_BADVARTYPE = &H80020008
[Description("Exception occurred.")] Public Const DISP_E_EXCEPTION = &H80020009
[Description("Out of present range.")] Public Const DISP_E_OVERFLOW = &H8002000A
[Description("Invalid index.")] Public Const DISP_E_BADINDEX = &H8002000B
[Description("Unknown language.")] Public Const DISP_E_UNKNOWNLCID = &H8002000C
[Description("Memory is locked.")] Public Const DISP_E_ARRAYISLOCKED = &H8002000D
[Description("Invalid number of parameters.")] Public Const DISP_E_BADPARAMCOUNT = &H8002000E
[Description("Parameter not optional.")] Public Const DISP_E_PARAMNOTOPTIONAL = &H8002000F
[Description("Invalid callee.")] Public Const DISP_E_BADCALLEE = &H80020010
[Description("Does not support a collection.")] Public Const DISP_E_NOTACOLLECTION = &H80020011
[Description("Division by zero.")] Public Const DISP_E_DIVBYZERO = &H80020012
[Description("Buffer too small")] Public Const DISP_E_BUFFERTOOSMALL = &H80020013
[Description("Buffer too small.")] Public Const TYPE_E_BUFFERTOOSMALL = &H80028016
[Description("Field name not defined in the record.")] Public Const TYPE_E_FIELDNOTFOUND = &H80028017
[Description("Old format or invalid type library.")] Public Const TYPE_E_INVDATAREAD = &H80028018
[Description("Old format or invalid type library.")] Public Const TYPE_E_UNSUPFORMAT = &H80028019
[Description("Error accessing the OLE registry.")] Public Const TYPE_E_REGISTRYACCESS = &H8002801C
[Description("Library not registered.")] Public Const TYPE_E_LIBNOTREGISTERED = &H8002801D
[Description("Bound to unknown type.")] Public Const TYPE_E_UNDEFINEDTYPE = &H80028027
[Description("Qualified name disallowed.")] Public Const TYPE_E_QUALIFIEDNAMEDISALLOWED = &H80028028
[Description("Invalid forward reference, or reference to uncompiled type.")] Public Const TYPE_E_INVALIDSTATE = &H80028029
[Description("Type mismatch.")] Public Const TYPE_E_WRONGTYPEKIND = &H8002802A
[Description("Element not found.")] Public Const TYPE_E_ELEMENTNOTFOUND = &H8002802B
[Description("Ambiguous name.")] Public Const TYPE_E_AMBIGUOUSNAME = &H8002802C
[Description("Name already exists in the library.")] Public Const TYPE_E_NAMECONFLICT = &H8002802D
[Description("Unknown LCID.")] Public Const TYPE_E_UNKNOWNLCID = &H8002802E
[Description("Function not defined in specified DLL.")] Public Const TYPE_E_DLLFUNCTIONNOTFOUND = &H8002802F
[Description("Wrong module kind for the operation.")] Public Const TYPE_E_BADMODULEKIND = &H800288BD
[Description("Size may not exceed 64K.")] Public Const TYPE_E_SIZETOOBIG = &H800288C5
[Description("Duplicate ID in inheritance hierarchy.")] Public Const TYPE_E_DUPLICATEID = &H800288C6
[Description("Incorrect inheritance depth in standard OLE hmember.")] Public Const TYPE_E_INVALIDID = &H800288CF
[Description("Type mismatch.")] Public Const TYPE_E_TYPEMISMATCH = &H80028CA0
[Description("Invalid number of arguments.")] Public Const TYPE_E_OUTOFBOUNDS = &H80028CA1
[Description("I/O Error.")] Public Const TYPE_E_IOERROR = &H80028CA2
[Description("Error creating unique tmp file.")] Public Const TYPE_E_CANTCREATETMPFILE = &H80028CA3
[Description("Error loading type library/DLL.")] Public Const TYPE_E_CANTLOADLIBRARY = &H80029C4A
[Description("Inconsistent property functions.")] Public Const TYPE_E_INCONSISTENTPROPFUNCS = &H80029C83
[Description("Circular dependency between types/modules.")] Public Const TYPE_E_CIRCULARTYPE = &H80029C84

[Description("Thread local storage failure")] Public Const CO_E_INIT_TLS = &H80004006
[Description("Get shared memory allocator failure")] Public Const CO_E_INIT_SHARED_ALLOCATOR = &H80004007
[Description("Get memory allocator failure")] Public Const CO_E_INIT_MEMORY_ALLOCATOR = &H80004008
[Description("Unable to initialize class cache")] Public Const CO_E_INIT_CLASS_CACHE = &H80004009
[Description("Unable to initialize RPC services")] Public Const CO_E_INIT_RPC_CHANNEL = &H8000400A
[Description("Cannot set thread local storage channel control")] Public Const CO_E_INIT_TLS_SET_CHANNEL_CONTROL = &H8000400B
[Description("Could not allocate thread local storage channel control")] Public Const CO_E_INIT_TLS_CHANNEL_CONTROL = &H8000400C
[Description("The user supplied memory allocator is unacceptable")] Public Const CO_E_INIT_UNACCEPTED_USER_ALLOCATOR = &H8000400D
[Description("The OLE service mutex already exists")] Public Const CO_E_INIT_SCM_MUTEX_EXISTS = &H8000400E
[Description("The OLE service file mapping already exists")] Public Const CO_E_INIT_SCM_FILE_MAPPING_EXISTS = &H8000400F
[Description("Unable to map view of file for OLE service")] Public Const CO_E_INIT_SCM_MAP_VIEW_OF_FILE = &H80004010
[Description("Failure attempting to launch OLE service")] Public Const CO_E_INIT_SCM_EXEC_FAILURE = &H80004011
[Description("There was an attempt to call CoInitialize a second time while single threaded")] Public Const CO_E_INIT_ONLY_SINGLE_THREADED = &H80004012
[Description("A Remote activation was necessary but was not allowed")] Public Const CO_E_CANT_REMOTE = &H80004013
[Description("A Remote activation was necessary but the server name provided was invalid")] Public Const CO_E_BAD_SERVER_NAME = &H80004014
[Description("The class is configured to run as a security id different from the caller")] Public Const CO_E_WRONG_SERVER_IDENTITY = &H80004015
[Description("Use of Ole1 services requiring DDE windows is disabled")] Public Const CO_E_OLE1DDE_DISABLED = &H80004016
[Description("A RunAs specification must be <domain name>\<user name> or simply <user name>")] Public Const CO_E_RUNAS_SYNTAX = &H80004017
[Description("The server process could not be started. The pathname may be incorrect.")] Public Const CO_E_CREATEPROCESS_FAILURE = &H80004018
[Description("The server process could not be started as the configured identity. The pathname may be incorrect or unavailable.")] Public Const CO_E_RUNAS_CREATEPROCESS_FAILURE = &H80004019
[Description("The server process could not be started because the configured identity is incorrect. Check the username and password.")] Public Const CO_E_RUNAS_LOGON_FAILURE = &H8000401A
[Description("The client is not allowed to launch this server.")] Public Const CO_E_LAUNCH_PERMSSION_DENIED = &H8000401B
[Description("The service providing this server could not be started.")] Public Const CO_E_START_SERVICE_FAILURE = &H8000401C
[Description("This computer was unable to communicate with the computer providing the server.")] Public Const CO_E_REMOTE_COMMUNICATION_FAILURE = &H8000401D
[Description("The server did not respond after being launched.")] Public Const CO_E_SERVER_START_TIMEOUT = &H8000401E
[Description("The registration information for this server is inconsistent or incomplete.")] Public Const CO_E_CLSREG_INCONSISTENT = &H8000401F
[Description("The registration information for this interface is inconsistent or incomplete.")] Public Const CO_E_IIDREG_INCONSISTENT = &H80004020
[Description("The operation attempted is not supported.")] Public Const CO_E_NOT_SUPPORTED = &H80004021
[Description("A dll must be loaded.")] Public Const CO_E_RELOAD_DLL = &H80004022
[Description("A Microsoft Software Installer error was encountered.")] Public Const CO_E_MSI_ERROR = &H80004023
[Description("The specified activation could not occur in the client context as specified.")] Public Const CO_E_ATTEMPT_TO_CREATE_OUTSIDE_CLIENT_CONTEXT = &H80004024
[Description("Activations on the server are paused.")] Public Const CO_E_SERVER_PAUSED = &H80004025
[Description("Activations on the server are not paused.")] Public Const CO_E_SERVER_NOT_PAUSED = &H80004026
[Description("The component or application containing the component has been disabled.")] Public Const CO_E_CLASS_DISABLED = &H80004027
[Description("The common language runtime is not available")] Public Const CO_E_CLRNOTAVAILABLE = &H80004028
[Description("The thread-pool rejected the submitted asynchronous work.")] Public Const CO_E_ASYNC_WORK_REJECTED = &H80004029
[Description("The server started, but did not finish initializing in a timely fashion.")] Public Const CO_E_SERVER_INIT_TIMEOUT = &H8000402A
[Description("Unable to complete the call since there is no COM+ security context inside IObjectControl.Activate.")] Public Const CO_E_NO_SECCTX_IN_ACTIVATE = &H8000402B
[Description("The provided tracker configuration is invalid")] Public Const CO_E_TRACKER_CONFIG = &H80004030
[Description("The provided thread pool configuration is invalid")] Public Const CO_E_THREADPOOL_CONFIG = &H80004031
[Description("The provided side-by-side configuration is invalid")] Public Const CO_E_SXS_CONFIG = &H80004032
[Description("The server principal name (SPN) obtained during security negotiation is malformed.")] Public Const CO_E_MALFORMED_SPN = &H80004033
[Description("The caller failed to revoke a per-apartment registration before apartment shutdown.")] Public Const CO_E_UNREVOKED_REGISTRATION_ON_APARTMENT_SHUTDOWN = &H80004034
[Description("The object has been rundown by the stub manager while there are external clients.")] Public Const CO_E_PREMATURE_STUB_RUNDOWN = &H80004035

[Description("A system-level error occurred while verifying trust.")] Public Const TRUST_E_SYSTEM_ERROR = &H80096001
[Description("The certificate for the signer of the message is invalid or not found.")] Public Const TRUST_E_NO_SIGNER_CERT = &H80096002
[Description("One of the counter signatures was invalid.")] Public Const TRUST_E_COUNTER_SIGNER = &H80096003
[Description("The signature of the certificate cannot be verified.")] Public Const TRUST_E_CERT_SIGNATURE = &H80096004
[Description("The timestamp signature and/or certificate could not be verified or is malformed.")] Public Const TRUST_E_TIME_STAMP = &H80096005
[Description("The digital signature of the object did not verify.")] Public Const TRUST_E_BAD_DIGEST = &H80096010
[Description("The digital signature of the object is malformed. For technical detail, see security bulletin MS13-098.")] Public Const TRUST_E_MALFORMED_SIGNATURE = &H80096011
[Description("A certificate's basic constraint extension has not been observed.")] Public Const TRUST_E_BASIC_CONSTRAINTS = &H80096019
[Description("The certificate does not meet or contain the Authenticode(tm) financial extensions.")] Public Const TRUST_E_FINANCIAL_CRITERIA = &H8009601E
[Description("Unknown trust provider.")] Public Const TRUST_E_PROVIDER_UNKNOWN = &H800B0001
[Description("The trust verification action specified is not supported by the specified trust provider.")] Public Const TRUST_E_ACTION_UNKNOWN = &H800B0002
[Description("The form specified for the subject is not one supported or known by the specified trust provider.")] Public Const TRUST_E_SUBJECT_FORM_UNKNOWN = &H800B0003
[Description("The subject is not trusted for the specified action.")] Public Const TRUST_E_SUBJECT_NOT_TRUSTED = &H800B0004
[Description("No signature was present in the subject.")] Public Const TRUST_E_NOSIGNATURE = &H800B0100
[Description("A required certificate is not within its validity period when verifying against the current system clock or the timestamp in the signed file.")] Public Const CERT_E_EXPIRED = &H800B0101
[Description("The validity periods of the certification chain do not nest correctly.")] Public Const CERT_E_VALIDITYPERIODNESTING = &H800B0102
[Description("A certificate that can only be used as an end-entity is being used as a CA or vice versa.")] Public Const CERT_E_ROLE = &H800B0103
[Description("A path length constraint in the certification chain has been violated.")] Public Const CERT_E_PATHLENCONST = &H800B0104
[Description("A certificate contains an unknown extension that is marked 'critical'.")] Public Const CERT_E_CRITICAL = &H800B0105
[Description("A certificate being used for a purpose other than the ones specified by its CA.")] Public Const CERT_E_PURPOSE = &H800B0106
[Description("A parent of a given certificate in fact did not issue that child certificate.")] Public Const CERT_E_ISSUERCHAINING = &H800B0107
[Description("A certificate is missing or has an empty value for an important field, such as a subject or issuer name.")] Public Const CERT_E_MALFORMED = &H800B0108
[Description("A certificate chain processed, but terminated in a root certificate which is not trusted by the trust provider.")] Public Const CERT_E_UNTRUSTEDROOT = &H800B0109
[Description("A certificate chain could not be built to a trusted root authority.")] Public Const CERT_E_CHAINING = &H800B010A
[Description("Generic trust failure.")] Public Const TRUST_E_FAIL = &H800B010B
[Description("A certificate was explicitly revoked by its issuer.")] Public Const CERT_E_REVOKED = &H800B010C
[Description("The certification path terminates with the test root which is not trusted with the current policy settings.")] Public Const CERT_E_UNTRUSTEDTESTROOT = &H800B010D
[Description("The revocation process could not continue - the certificate(s) could not be checked.")] Public Const CERT_E_REVOCATION_FAILURE = &H800B010E
[Description("The certificate's CN name does not match the passed value.")] Public Const CERT_E_CN_NO_MATCH = &H800B010F
[Description("The certificate is not valid for the requested usage.")] Public Const CERT_E_WRONG_USAGE = &H800B0110
[Description("The certificate was explicitly marked as untrusted by the user.")] Public Const TRUST_E_EXPLICIT_DISTRUST = &H800B0111
[Description("A certification chain processed correctly, but one of the CA certificates is not trusted by the policy provider.")] Public Const CERT_E_UNTRUSTEDCA = &H800B0112
[Description("The certificate has invalid policy.")] Public Const CERT_E_INVALID_POLICY = &H800B0113
[Description("The certificate has an invalid name. The name is not included in the permitted list or is explicitly excluded.")] Public Const CERT_E_INVALID_NAME = &H800B0114

[Description("An error occurred while performing an operation on a cryptographic message.")] Public Const CRYPT_E_MSG_ERROR = &H80091001
[Description("Unknown cryptographic algorithm.")] Public Const CRYPT_E_UNKNOWN_ALGO = &H80091002
[Description("The object identifier is poorly formatted.")] Public Const CRYPT_E_OID_FORMAT = &H80091003
[Description("Invalid cryptographic message type.")] Public Const CRYPT_E_INVALID_MSG_TYPE = &H80091004
[Description("Unexpected cryptographic message encoding.")] Public Const CRYPT_E_UNEXPECTED_ENCODING = &H80091005
[Description("The cryptographic message does not contain an expected authenticated attribute.")] Public Const CRYPT_E_AUTH_ATTR_MISSING = &H80091006
[Description("The hash value is not correct.")] Public Const CRYPT_E_HASH_VALUE = &H80091007
[Description("The index value is not valid.")] Public Const CRYPT_E_INVALID_INDEX = &H80091008
[Description("The content of the cryptographic message has already been decrypted.")] Public Const CRYPT_E_ALREADY_DECRYPTED = &H80091009
[Description("The content of the cryptographic message has not been decrypted yet.")] Public Const CRYPT_E_NOT_DECRYPTED = &H8009100A
[Description("The enveloped-data message does not contain the specified recipient.")] Public Const CRYPT_E_RECIPIENT_NOT_FOUND = &H8009100B
[Description("Invalid control type.")] Public Const CRYPT_E_CONTROL_TYPE = &H8009100C
[Description("Invalid issuer and/or serial number.")] Public Const CRYPT_E_ISSUER_SERIALNUMBER = &H8009100D
[Description("Cannot find the original signer.")] Public Const CRYPT_E_SIGNER_NOT_FOUND = &H8009100E
[Description("The cryptographic message does not contain all of the requested attributes.")] Public Const CRYPT_E_ATTRIBUTES_MISSING = &H8009100F
[Description("The streamed cryptographic message is not ready to return data.")] Public Const CRYPT_E_STREAM_MSG_NOT_READY = &H80091010
[Description("The streamed cryptographic message requires more data to complete the decode operation.")] Public Const CRYPT_E_STREAM_INSUFFICIENT_DATA = &H80091011
[Description("The protected data needs to be re-protected.")] Public Const CRYPT_I_NEW_PROTECTION_REQUIRED = &H00091012
[Description("The length specified for the output data was insufficient.")] Public Const CRYPT_E_BAD_LEN = &H80092001
[Description("An error occurred during encode or decode operation.")] Public Const CRYPT_E_BAD_ENCODE = &H80092002
[Description("An error occurred while reading or writing to a file.")] Public Const CRYPT_E_FILE_ERROR = &H80092003
[Description("Cannot find object or property.")] Public Const CRYPT_E_NOT_FOUND = &H80092004
[Description("The object or property already exists.")] Public Const CRYPT_E_EXISTS = &H80092005
[Description("No provider was specified for the store or object.")] Public Const CRYPT_E_NO_PROVIDER = &H80092006
[Description("The specified certificate is self signed.")] Public Const CRYPT_E_SELF_SIGNED = &H80092007
[Description("The previous certificate or CRL context was deleted.")] Public Const CRYPT_E_DELETED_PREV = &H80092008
[Description("Cannot find the requested object.")] Public Const CRYPT_E_NO_MATCH = &H80092009
[Description("The certificate does not have a property that references a private key.")] Public Const CRYPT_E_UNEXPECTED_MSG_TYPE = &H8009200A
[Description("Cannot find the certificate and private key for decryption.")] Public Const CRYPT_E_NO_KEY_PROPERTY = &H8009200B
[Description("Cannot find the certificate and private key to use for decryption.")] Public Const CRYPT_E_NO_DECRYPT_CERT = &H8009200C
[Description("Not a cryptographic message or the cryptographic message is not formatted correctly.")] Public Const CRYPT_E_BAD_MSG = &H8009200D
[Description("The signed cryptographic message does not have a signer for the specified signer index.")] Public Const CRYPT_E_NO_SIGNER = &H8009200E
[Description("Final closure is pending until additional frees or closes.")] Public Const CRYPT_E_PENDING_CLOSE = &H8009200F
[Description("The certificate is revoked.")] Public Const CRYPT_E_REVOKED = &H80092010
[Description("No Dll or exported function was found to verify revocation.")] Public Const CRYPT_E_NO_REVOCATION_DLL = &H80092011
[Description("The revocation function was unable to check revocation for the certificate.")] Public Const CRYPT_E_NO_REVOCATION_CHECK = &H80092012
[Description("The revocation function was unable to check revocation because the revocation server was offline.")] Public Const CRYPT_E_REVOCATION_OFFLINE = &H80092013
[Description("The certificate is not in the revocation server's database.")] Public Const CRYPT_E_NOT_IN_REVOCATION_DATABASE = &H80092014
[Description("The string contains a non-numeric character.")] Public Const CRYPT_E_INVALID_NUMERIC_STRING = &H80092020
[Description("The string contains a non-printable character.")] Public Const CRYPT_E_INVALID_PRINTABLE_STRING = &H80092021
[Description("The string contains a character not in the 7 bit ASCII character set.")] Public Const CRYPT_E_INVALID_IA5_STRING = &H80092022
[Description("The string contains an invalid X500 name attribute key, oid, value or delimiter.")] Public Const CRYPT_E_INVALID_X500_STRING = &H80092023
[Description("The dwValueType for the CERT_NAME_VALUE is not one of the character strings. Most likely it is either a CERT_RDN_ENCODED_BLOB or CERT_RDN_OCTET_STRING.")] Public Const CRYPT_E_NOT_CHAR_STRING = &H80092024
[Description("The Put operation cannot continue. The file needs to be resized. However, there is already a signature present. A complete signing operation must be done.")] Public Const CRYPT_E_FILERESIZED = &H80092025
[Description("The cryptographic operation failed due to a local security option setting.")] Public Const CRYPT_E_SECURITY_SETTINGS = &H80092026
[Description("No DLL or exported function was found to verify subject usage.")] Public Const CRYPT_E_NO_VERIFY_USAGE_DLL = &H80092027
[Description("The called function was unable to do a usage check on the subject.")] Public Const CRYPT_E_NO_VERIFY_USAGE_CHECK = &H80092028
[Description("Since the server was offline, the called function was unable to complete the usage check.")] Public Const CRYPT_E_VERIFY_USAGE_OFFLINE = &H80092029
[Description("The subject was not found in a Certificate Trust List (CTL).")] Public Const CRYPT_E_NOT_IN_CTL = &H8009202A
[Description("None of the signers of the cryptographic message or certificate trust list is trusted.")] Public Const CRYPT_E_NO_TRUSTED_SIGNER = &H8009202B
[Description("The public key's algorithm parameters are missing.")] Public Const CRYPT_E_MISSING_PUBKEY_PARA = &H8009202C
[Description("An object could not be located using the object locator infrastructure with the given name.")] Public Const CRYPT_E_OBJECT_LOCATOR_OBJECT_NOT_FOUND = &H8009202D
[Description("See asn1code.h for a definition of the OSS runtime errors. The OSS error values are offset by CRYPT_E_OSS_ERROR.")] Public Const CRYPT_E_OSS_ERROR = &H80093000

[Description("Bad UID.")] Public Const NTE_BAD_UID = &H80090001
[Description("Bad Hash.")] Public Const NTE_BAD_HASH = &H80090002
[Description("Bad Key.")] Public Const NTE_BAD_KEY = &H80090003
[Description("Bad Length.")] Public Const NTE_BAD_LEN = &H80090004
[Description("Bad Data.")] Public Const NTE_BAD_DATA = &H80090005
[Description("Invalid Signature.")] Public Const NTE_BAD_SIGNATURE = &H80090006
[Description("Bad Version of provider.")] Public Const NTE_BAD_VER = &H80090007
[Description("Invalid algorithm specified.")] Public Const NTE_BAD_ALGID = &H80090008
[Description("Invalid flags specified.")] Public Const NTE_BAD_FLAGS = &H80090009
[Description("Invalid type specified.")] Public Const NTE_BAD_TYPE = &H8009000A
[Description("Key not valid for use in specified state.")] Public Const NTE_BAD_KEY_STATE = &H8009000B
[Description("Hash not valid for use in specified state.")] Public Const NTE_BAD_HASH_STATE = &H8009000C
[Description("Key does not exist.")] Public Const NTE_NO_KEY = &H8009000D
[Description("Insufficient memory available for the operation.")] Public Const NTE_NO_MEMORY = &H8009000E
[Description("Object already exists.")] Public Const NTE_EXISTS = &H8009000F
[Description("Access denied.")] Public Const NTE_PERM = &H80090010
[Description("Object was not found.")] Public Const NTE_NOT_FOUND = &H80090011
[Description("Data already encrypted.")] Public Const NTE_DOUBLE_ENCRYPT = &H80090012
[Description("Invalid provider specified.")] Public Const NTE_BAD_PROVIDER = &H80090013
[Description("Invalid provider type specified.")] Public Const NTE_BAD_PROV_TYPE = &H80090014
[Description("Provider's public key is invalid.")] Public Const NTE_BAD_PUBLIC_KEY = &H80090015
[Description("Keyset does not exist")] Public Const NTE_BAD_KEYSET = &H80090016
[Description("Provider type not defined.")] Public Const NTE_PROV_TYPE_NOT_DEF = &H80090017
[Description("Provider type as registered is invalid.")] Public Const NTE_PROV_TYPE_ENTRY_BAD = &H80090018
[Description("The keyset is not defined.")] Public Const NTE_KEYSET_NOT_DEF = &H80090019
[Description("Keyset as registered is invalid.")] Public Const NTE_KEYSET_ENTRY_BAD = &H8009001A
[Description("Provider type does not match registered value.")] Public Const NTE_PROV_TYPE_NO_MATCH = &H8009001B
[Description("The digital signature file is corrupt.")] Public Const NTE_SIGNATURE_FILE_BAD = &H8009001C
[Description("Provider DLL failed to initialize correctly.")] Public Const NTE_PROVIDER_DLL_FAIL = &H8009001D
[Description("Provider DLL could not be found.")] Public Const NTE_PROV_DLL_NOT_FOUND = &H8009001E
[Description("The Keyset parameter is invalid.")] Public Const NTE_BAD_KEYSET_PARAM = &H8009001F
[Description("An internal error occurred.")] Public Const NTE_FAIL = &H80090020
[Description("A base error occurred.")] Public Const NTE_SYS_ERR = &H80090021
[Description("Provider could not perform the action since the context was acquired as silent.")] Public Const NTE_SILENT_CONTEXT = &H80090022
[Description("The security token does not have storage space available for an additional container.")] Public Const NTE_TOKEN_KEYSET_STORAGE_FULL = &H80090023
[Description("The profile for the user is a temporary profile.")] Public Const NTE_TEMPORARY_PROFILE = &H80090024
[Description("The key parameters could not be set because the CSP uses fixed parameters.")] Public Const NTE_FIXEDPARAMETER = &H80090025
[Description("The supplied handle is invalid.")] Public Const NTE_INVALID_HANDLE = &H80090026
[Description("The parameter is incorrect.")] Public Const NTE_INVALID_PARAMETER = &H80090027
[Description("The buffer supplied to a function was too small.")] Public Const NTE_BUFFER_TOO_SMALL = &H80090028
[Description("The requested operation is not supported.")] Public Const NTE_NOT_SUPPORTED = &H80090029
[Description("No more data is available.")] Public Const NTE_NO_MORE_ITEMS = &H8009002A
[Description("The supplied buffers overlap incorrectly.")] Public Const NTE_BUFFERS_OVERLAP = &H8009002B
[Description("The specified data could not be decrypted.")] Public Const NTE_DECRYPTION_FAILURE = &H8009002C
[Description("An internal consistency check failed.")] Public Const NTE_INTERNAL_ERROR = &H8009002D
[Description("This operation requires input from the user.")] Public Const NTE_UI_REQUIRED = &H8009002E
[Description("The cryptographic provider does not support HMAC.")] Public Const NTE_HMAC_NOT_SUPPORTED = &H8009002F
[Description("The device that is required by this cryptographic provider is not ready for use.")] Public Const NTE_DEVICE_NOT_READY = &H80090030
[Description("The dictionary attack mitigation is triggered and the provided authorization was ignored by the provider.")] Public Const NTE_AUTHENTICATION_IGNORED = &H80090031
[Description("The validation of the provided data failed the integrity or signature validation.")] Public Const NTE_VALIDATION_FAILED = &H80090032
[Description("Incorrect password.")] Public Const NTE_INCORRECT_PASSWORD = &H80090033
[Description("Encryption failed.")] Public Const NTE_ENCRYPTION_FAILURE = &H80090034
[Description("The device that is required by this cryptographic provider is not found on this platform.")] Public Const NTE_DEVICE_NOT_FOUND = &H80090035
[Description("The action was cancelled by the user.")] Public Const NTE_USER_CANCELLED = &H80090036
[Description("The password is no longer valid and must be changed.")] Public Const NTE_PASSWORD_CHANGE_REQUIRED = &H80090037
[Description("The operation cannot be completed from Terminal Server client sessions.")] Public Const NTE_NOT_ACTIVE_CONSOLE = &H80090038


[Description("An invalid media type was specified.%0")] Public Const VFW_E_INVALIDMEDIATYPE = &H80040200
[Description("An invalid media subtype was specified.%0")] Public Const VFW_E_INVALIDSUBTYPE = &H80040201
[Description("This object can only be created as an aggregated object.%0")] Public Const VFW_E_NEED_OWNER = &H80040202
[Description("The enumerator has become invalid.%0")] Public Const VFW_E_ENUM_OUT_OF_SYNC = &H80040203
[Description("At least one of the pins involved in the operation is already connected.%0")] Public Const VFW_E_ALREADY_CONNECTED = &H80040204
[Description("This operation cannot be performed because the filter is active.%0")] Public Const VFW_E_FILTER_ACTIVE = &H80040205
[Description("One of the specified pins supports no media types.%0")] Public Const VFW_E_NO_TYPES = &H80040206
[Description("There is no common media type between these pins.%0")] Public Const VFW_E_NO_ACCEPTABLE_TYPES = &H80040207
[Description("Two pins of the same direction cannot be connected together.%0")] Public Const VFW_E_INVALID_DIRECTION = &H80040208
[Description("The operation cannot be performed because the pins are not connected.%0")] Public Const VFW_E_NOT_CONNECTED = &H80040209
[Description("No sample buffer allocator is available.%0")] Public Const VFW_E_NO_ALLOCATOR = &H8004020A
[Description("A run-time error occurred.%0")] Public Const VFW_E_RUNTIME_ERROR = &H8004020B
[Description("No buffer space has been set.%0")] Public Const VFW_E_BUFFER_NOTSET = &H8004020C
[Description("The buffer is not big enough.%0")] Public Const VFW_E_BUFFER_OVERFLOW = &H8004020D
[Description("An invalid alignment was specified.%0")] Public Const VFW_E_BADALIGN = &H8004020E
[Description("Cannot change allocated memory while the filter is active.%0")] Public Const VFW_E_ALREADY_COMMITTED = &H8004020F
[Description("One or more buffers are still active.%0")] Public Const VFW_E_BUFFERS_OUTSTANDING = &H80040210
[Description("Cannot allocate a sample when the allocator is not active.%0")] Public Const VFW_E_NOT_COMMITTED = &H80040211
[Description("Cannot allocate memory because no size has been set.%0")] Public Const VFW_E_SIZENOTSET = &H80040212
[Description("Cannot lock for synchronization because no clock has been defined.%0")] Public Const VFW_E_NO_CLOCK = &H80040213
[Description("Quality messages could not be sent because no quality sink has been defined.%0")] Public Const VFW_E_NO_SINK = &H80040214
[Description("A required interface has not been implemented.%0")] Public Const VFW_E_NO_INTERFACE = &H80040215
[Description("An object or name was not found.%0")] Public Const VFW_E_NOT_FOUND = &H80040216
[Description("No combination of intermediate filters could be found to make the connection.%0")] Public Const VFW_E_CANNOT_CONNECT = &H80040217
[Description("No combination of filters could be found to render the stream.%0")] Public Const VFW_E_CANNOT_RENDER = &H80040218
[Description("Could not change formats dynamically.%0")] Public Const VFW_E_CHANGING_FORMAT = &H80040219
[Description("No color key has been set.%0")] Public Const VFW_E_NO_COLOR_KEY_SET = &H8004021A
[Description("Current pin connection is not using the IOverlay transport.%0")] Public Const VFW_E_NOT_OVERLAY_CONNECTION = &H8004021B
[Description("Current pin connection is not using the IMemInputPin transport.%0")] Public Const VFW_E_NOT_SAMPLE_CONNECTION = &H8004021C
[Description("Setting a color key would conflict with the palette already set.%0")] Public Const VFW_E_PALETTE_SET = &H8004021D
[Description("Setting a palette would conflict with the color key already set.%0")] Public Const VFW_E_COLOR_KEY_SET = &H8004021E
[Description("No matching color key is available.%0")] Public Const VFW_E_NO_COLOR_KEY_FOUND = &H8004021F
[Description("No palette is available.%0")] Public Const VFW_E_NO_PALETTE_AVAILABLE = &H80040220
[Description("Display does not use a palette.%0")] Public Const VFW_E_NO_DISPLAY_PALETTE = &H80040221
[Description("Too many colors for the current display settings.%0")] Public Const VFW_E_TOO_MANY_COLORS = &H80040222
[Description("The state changed while waiting to process the sample.%0")] Public Const VFW_E_STATE_CHANGED = &H80040223
[Description("The operation could not be performed because the filter is not stopped.%0")] Public Const VFW_E_NOT_STOPPED = &H80040224
[Description("The operation could not be performed because the filter is not paused.%0")] Public Const VFW_E_NOT_PAUSED = &H80040225
[Description("The operation could not be performed because the filter is not running.%0")] Public Const VFW_E_NOT_RUNNING = &H80040226
[Description("The operation could not be performed because the filter is in the wrong state.%0")] Public Const VFW_E_WRONG_STATE = &H80040227
[Description("The sample start time is after the sample end time.%0")] Public Const VFW_E_START_TIME_AFTER_END = &H80040228
[Description("The supplied rectangle is invalid.%0")] Public Const VFW_E_INVALID_RECT = &H80040229
[Description("This pin cannot use the supplied media type.%0")] Public Const VFW_E_TYPE_NOT_ACCEPTED = &H8004022A
[Description("This sample cannot be rendered.%0")] Public Const VFW_E_SAMPLE_REJECTED = &H8004022B
[Description("This sample cannot be rendered because the end of the stream has been reached.%0")] Public Const VFW_E_SAMPLE_REJECTED_EOS = &H8004022C
[Description("An attempt to add a filter with a duplicate name failed.%0")] Public Const VFW_E_DUPLICATE_NAME = &H8004022D
[Description("An attempt to add a filter with a duplicate name succeeded with a modified name.%0")] Public Const VFW_S_DUPLICATE_NAME = &H0004022D
[Description("A time-out has expired.%0")] Public Const VFW_E_TIMEOUT = &H8004022E
[Description("The file format is invalid.%0")] Public Const VFW_E_INVALID_FILE_FORMAT = &H8004022F
[Description("The list has already been exhausted.%0")] Public Const VFW_E_ENUM_OUT_OF_RANGE = &H80040230
[Description("The filter graph is circular.%0")] Public Const VFW_E_CIRCULAR_GRAPH = &H80040231
[Description("Updates are not allowed in this state.%0")] Public Const VFW_E_NOT_ALLOWED_TO_SAVE = &H80040232
[Description("An attempt was made to queue a command for a time in the past.%0")] Public Const VFW_E_TIME_ALREADY_PASSED = &H80040233
[Description("The queued command has already been canceled.%0")] Public Const VFW_E_ALREADY_CANCELLED = &H80040234
[Description("Cannot render the file because it is corrupt.%0")] Public Const VFW_E_CORRUPT_GRAPH_FILE = &H80040235
[Description("An overlay advise link already exists.%0")] Public Const VFW_E_ADVISE_ALREADY_SET = &H80040236
[Description("The state transition has not completed.%0")] Public Const VFW_S_STATE_INTERMEDIATE = &H00040237
[Description("No full-screen modes are available.%0")] Public Const VFW_E_NO_MODEX_AVAILABLE = &H80040238
[Description("This Advise cannot be canceled because it was not successfully set.%0")] Public Const VFW_E_NO_ADVISE_SET = &H80040239
[Description("A full-screen mode is not available.%0")] Public Const VFW_E_NO_FULLSCREEN = &H8004023A
[Description("Cannot call IVideoWindow methods while in full-screen mode.%0")] Public Const VFW_E_IN_FULLSCREEN_MODE = &H8004023B
[Description("The media type of this file is not recognized.%0")] Public Const VFW_E_UNKNOWN_FILE_TYPE = &H80040240
[Description("The source filter for this file could not be loaded.%0")] Public Const VFW_E_CANNOT_LOAD_SOURCE_FILTER = &H80040241
[Description("Some of the streams in this movie are in an unsupported format.%0")] Public Const VFW_S_PARTIAL_RENDER = &H00040242
[Description("A file appeared to be incomplete.%0")] Public Const VFW_E_FILE_TOO_SHORT = &H80040243
[Description("The version number of the file is invalid.%0")] Public Const VFW_E_INVALID_FILE_VERSION = &H80040244
[Description("The file contained some property settings that were not used.%0")] Public Const VFW_S_SOME_DATA_IGNORED = &H00040245
[Description("Some connections have failed and have been deferred.%0")] Public Const VFW_S_CONNECTIONS_DEFERRED = &H00040246
[Description("This file is corrupt: it contains an invalid class identifier.%0")] Public Const VFW_E_INVALID_CLSID = &H80040247
[Description("This file is corrupt: it contains an invalid media type.%0")] Public Const VFW_E_INVALID_MEDIA_TYPE = &H80040248
[Description("A registry entry is corrupt.%0")] Public Const VFW_E_BAD_KEY = &H800403F2
[Description("The end of the list has been reached.%0")] Public Const VFW_S_NO_MORE_ITEMS = &H00040103
[Description("No time stamp has been set for this sample.%0")] Public Const VFW_E_SAMPLE_TIME_NOT_SET = &H80040249
[Description("The resource specified is no longer needed.%0")] Public Const VFW_S_RESOURCE_NOT_NEEDED = &H00040250
[Description("No media time stamp has been set for this sample.%0")] Public Const VFW_E_MEDIA_TIME_NOT_SET = &H80040251
[Description("No media time format has been selected.%0")] Public Const VFW_E_NO_TIME_FORMAT_SET = &H80040252
[Description("Cannot change balance because audio device is mono only.%0")] Public Const VFW_E_MONO_AUDIO_HW = &H80040253
[Description("but has been made with a negotiated media type.%0")] Public Const VFW_S_MEDIA_TYPE_IGNORED = &H00040254
[Description("Cannot play back the video stream: no suitable decompressor could be found.%0")] Public Const VFW_E_NO_DECOMPRESSOR = &H80040255
[Description("Cannot play back the audio stream: no audio hardware is available, or the hardware is not responding.%0")] Public Const VFW_E_NO_AUDIO_HARDWARE = &H80040256
[Description("Cannot play back the video stream: no suitable decompressor could be found.%0")] Public Const VFW_S_VIDEO_NOT_RENDERED = &H00040257
[Description("Cannot play back the audio stream: no audio hardware is available.%0")] Public Const VFW_S_AUDIO_NOT_RENDERED = &H00040258
[Description("Cannot play back the video stream: format 'RPZA' is not supported.%0")] Public Const VFW_E_RPZA = &H80040259
[Description("Cannot play back the video stream: format 'RPZA' is not supported.%0")] Public Const VFW_S_RPZA = &H0004025A
[Description("ActiveMovie cannot play MPEG movies on this processor.%0")] Public Const VFW_E_PROCESSOR_NOT_SUITABLE = &H8004025B
[Description("Cannot play back the audio stream: the audio format is not supported.%0")] Public Const VFW_E_UNSUPPORTED_AUDIO = &H8004025C
[Description("Cannot play back the video stream: the video format is not supported.%0")] Public Const VFW_E_UNSUPPORTED_VIDEO = &H8004025D
[Description("ActiveMovie cannot play this video stream because it falls outside the constrained standard.%0")] Public Const VFW_E_MPEG_NOT_CONSTRAINED = &H8004025E
[Description("Cannot perform the requested function on an object that is not in the filter graph.%0")] Public Const VFW_E_NOT_IN_GRAPH = &H8004025F
[Description("The value returned had to be estimated. It's accuracy can not be guaranteed.%0")] Public Const VFW_S_ESTIMATED = &H00040260
[Description("Cannot get or set time related information on an object that is using a time format of TIME_FORMAT_NONE.%0")] Public Const VFW_E_NO_TIME_FORMAT = &H80040261
[Description("The connection cannot be made because the stream is read only and the filter alters the data.%0")] Public Const VFW_E_READ_ONLY = &H80040262
[Description("This success code is reserved for internal purposes within ActiveMovie.%0")] Public Const VFW_S_RESERVED = &H00040263
[Description("The buffer is not full enough.%0")] Public Const VFW_E_BUFFER_UNDERFLOW = &H80040264
[Description("Cannot play back the file. The format is not supported.%0")] Public Const VFW_E_UNSUPPORTED_STREAM = &H80040265
[Description("Pins cannot connect due to not supporting the same transport.%0")] Public Const VFW_E_NO_TRANSPORT = &H80040266
[Description("The stream has been turned off.%0")] Public Const VFW_S_STREAM_OFF = &H00040267
[Description("The graph can't be cued because of lack of or corrupt data.%0")] Public Const VFW_S_CANT_CUE = &H00040268
[Description("The Video CD can't be read correctly by the device or is the data is corrupt.%0")] Public Const VFW_E_BAD_VIDEOCD = &H80040269
[Description("The stop time for the sample was not set.%0")] Public Const VFW_S_NO_STOP_TIME = &H00040270
[Description("There is not enough Video Memory at this display resolution and number of colors. Reducing resolution might help.%0")] Public Const VFW_E_OUT_OF_VIDEO_MEMORY = &H80040271
[Description("The VideoPort connection negotiation process has failed.%0")] Public Const VFW_E_VP_NEGOTIATION_FAILED = &H80040272
[Description("Either DirectDraw has not been installed or the Video Card capabilities are not suitable. Make sure the display is not in 16 color mode or try changing the graphics mode.%0")] Public Const VFW_E_DDRAW_CAPS_NOT_SUITABLE = &H80040273
[Description("No VideoPort hardware is available, or the hardware is not responding.%0")] Public Const VFW_E_NO_VP_HARDWARE = &H80040274
[Description("No Capture hardware is available, or the hardware is not responding.%0")] Public Const VFW_E_NO_CAPTURE_HARDWARE = &H80040275
[Description("This User Operation is inhibited by DVD Content at this time.%0")] Public Const VFW_E_DVD_OPERATION_INHIBITED = &H80040276
[Description("This Operation is not permitted in the current domain.%0")] Public Const VFW_E_DVD_INVALIDDOMAIN = &H80040277
[Description("The specified button is invalid or is not present at the current time, or there is no button present at the specified location.%0")] Public Const VFW_E_DVD_NO_BUTTON = &H80040278
[Description("DVD-Video playback graph has not been built yet.%0")] Public Const VFW_E_DVD_GRAPHNOTREADY = &H80040279
[Description("DVD-Video playback graph building failed.%0")] Public Const VFW_E_DVD_RENDERFAIL = &H8004027A
[Description("DVD-Video playback graph could not be built due to insufficient decoders.%0")] Public Const VFW_E_DVD_DECNOTENOUGH = &H8004027B
[Description("Version number of DirectDraw not suitable. Make sure to install dx5 or higher version.%0")] Public Const VFW_E_DDRAW_VERSION_NOT_SUITABLE = &H8004027C
[Description("Copy protection cannot be enabled. Please make sure any other copy protected content is not being shown now.%0")] Public Const VFW_E_COPYPROT_FAILED = &H8004027D
[Description("There was no preview pin available, so the capture pin output is being split to provide both capture and preview.%0")] Public Const VFW_S_NOPREVIEWPIN = &H0004027E
[Description("This object cannot be used anymore as its time has expired.%0")] Public Const VFW_E_TIME_EXPIRED = &H8004027F
[Description("The current title was not a sequential set of chapters (PGC), and the returned timing information might not be continuous.%0")] Public Const VFW_S_DVD_NON_ONE_SEQUENTIAL = &H00040280
[Description("The operation cannot be performed at the current playback speed.%0")] Public Const VFW_E_DVD_WRONG_SPEED = &H80040281
[Description("The specified menu doesn't exist.%0")] Public Const VFW_E_DVD_MENU_DOES_NOT_EXIST = &H80040282
[Description("The specified command was either cancelled or no longer exists.%0")] Public Const VFW_E_DVD_CMD_CANCELLED = &H80040283
[Description("The data did not contain a recognized version.%0")] Public Const VFW_E_DVD_STATE_WRONG_VERSION = &H80040284
[Description("The state data was corrupt.%0")] Public Const VFW_E_DVD_STATE_CORRUPT = &H80040285
[Description("The state data is from a different disc.%0")] Public Const VFW_E_DVD_STATE_WRONG_DISC = &H80040286
[Description("The region was not compatible with the current drive.%0")] Public Const VFW_E_DVD_INCOMPATIBLE_REGION = &H80040287
[Description("The requested DVD stream attribute does not exist.%0")] Public Const VFW_E_DVD_NO_ATTRIBUTES = &H80040288
[Description("Currently there is no GoUp (Annex J user function) program chain (PGC).%0")] Public Const VFW_E_DVD_NO_GOUP_PGC = &H80040289
[Description("The current parental level was too low.%0")] Public Const VFW_E_DVD_LOW_PARENTAL_LEVEL = &H8004028A
[Description("The current audio is not karaoke content.%0")] Public Const VFW_E_DVD_NOT_IN_KARAOKE_MODE = &H8004028B
[Description("The audio stream did not contain sufficient information to determine the contents of each channel.%0")] Public Const VFW_S_DVD_CHANNEL_CONTENTS_NOT_AVAILABLE = &H0004028C
[Description("The seek into the movie was not frame accurate.%0")] Public Const VFW_S_DVD_NOT_ACCURATE = &H0004028D
[Description("Frame step is not supported on this configuration.%0")] Public Const VFW_E_FRAME_STEP_UNSUPPORTED = &H8004028E
[Description("The specified stream is disabled and cannot be selected.%0")] Public Const VFW_E_DVD_STREAM_DISABLED = &H8004028F
[Description("so the 'current' title index is unknown.%0")] Public Const VFW_E_DVD_TITLE_UNKNOWN = &H80040290
[Description("The specified path does not point to a valid DVD disc.%0")] Public Const VFW_E_DVD_INVALID_DISC = &H80040291
[Description("There is currently no resume information.%0")] Public Const VFW_E_DVD_NO_RESUME_INFORMATION = &H80040292
[Description("This thread has already blocked this output pin. There is no need to call IPinFlowControl::Block() again.%0")] Public Const VFW_E_PIN_ALREADY_BLOCKED_ON_THIS_THREAD = &H80040293
[Description("IPinFlowControl::Block() has been called on another thread. The current thread cannot make any assumptions about this pin's block state.%0")] Public Const VFW_E_PIN_ALREADY_BLOCKED = &H80040294
[Description("An operation failed due to a certification failure.%0")] Public Const VFW_E_CERTIFICATION_FAILURE = &H80040295
[Description("The VMR has not yet created a mixing component. That is, IVMRFilterConfig::SetNumberofStreams has not yet been called.%0")] Public Const VFW_E_VMR_NOT_IN_MIXER_MODE = &H80040296
[Description("The application has not yet provided the VMR filter with a valid allocator-presenter object.%0")] Public Const VFW_E_VMR_NO_AP_SUPPLIED = &H80040297
[Description("The VMR could not find any de-interlacing hardware on the current display device.%0")] Public Const VFW_E_VMR_NO_DEINTERLACE_HW = &H80040298
[Description("The VMR could not find any ProcAmp hardware on the current display device.%0")] Public Const VFW_E_VMR_NO_PROCAMP_HW = &H80040299
[Description("VMR9 does not work with VPE-based hardware decoders.%0")] Public Const VFW_E_DVD_VMR9_INCOMPATIBLEDEC = &H8004029A
[Description(" The current display device does not support Content Output Protection Protocol (COPP) H/W.%0")] Public Const VFW_E_NO_COPP_HW = &H8004029B
[Description(" Nonblocking APIs are enabled and the nav cannot perform the operation at this time (IDVDControl) or partially incomplete information may be returned (DVDInfo).%0")] Public Const VFW_E_DVD_NONBLOCKING = &H8004029C
[Description("The DVD Graph Builder cannot build a DVD playback filter graph if the EVR and another renderer are in the graph builder's filter graph.")] Public Const VFW_E_DVD_TOO_MANY_RENDERERS_IN_FILTER_GRAPH = &H8004029D
[Description("AM_DVD_EVR_ONLY cannot be passed to RenderDvdVideoVolume if the graph builder's filter graph contains a renderer which is not the EVR.")] Public Const VFW_E_DVD_NON_EVR_RENDERER_IN_FILTER_GRAPH = &H8004029E
[Description("DVD Video Output is not at a proper resolution.")] Public Const VFW_E_DVD_RESOLUTION_ERROR = &H8004029F
[Description("The Specified property set is not supported.%0")] Public Const E_PROP_SET_UNSUPPORTED = &H80070492
[Description("The specified property ID is not supported for the specified property set.%0")] Public Const E_PROP_ID_UNSUPPORTED = &H80070490
[Description("Parameter has linear range.%0")] Public Const VFW_E_CODECAPI_LINEAR_RANGE = &H80040310
[Description("Parameter is enumerated. It has no range.%0")] Public Const VFW_E_CODECAPI_ENUMERATED = &H80040311
[Description("No default value.%0")] Public Const VFW_E_CODECAPI_NO_DEFAULT = &H80040313
[Description("No current value.%0")] Public Const VFW_E_CODECAPI_NO_CURRENT_VALUE = &H80040314
[Description("The operation failed since the chapter does not exist.%0")] Public Const VFW_E_DVD_CHAPTER_DOES_NOT_EXIST = &H80040315
[Description("The operation succeeded but some streams were not rendered.%0")] Public Const VFW_S_DVD_RENDER_STATUS = &H00040320

Public Const DNS_ERROR_RESPONSE_CODES_BASE = 9000
Public Const DNS_ERROR_RCODE_NO_ERROR = NO_ERROR
Public Const DNS_ERROR_MASK = &H00002328 ' 9000 or DNS_ERROR_RESPONSE_CODES_BASE

[ Description("DNS server unable to interpret format.") ] Public Const DNS_ERROR_RCODE_FORMAT_ERROR = 9001
[ Description("DNS server failure.") ] Public Const DNS_ERROR_RCODE_SERVER_FAILURE = 9002
[ Description("DNS name does not exist.") ] Public Const DNS_ERROR_RCODE_NAME_ERROR = 9003
[ Description("DNS request not supported by name server.") ] Public Const DNS_ERROR_RCODE_NOT_IMPLEMENTED = 9004
[ Description("DNS operation refused.") ] Public Const DNS_ERROR_RCODE_REFUSED = 9005
[ Description("DNS name that ought not exist, does exist.") ] Public Const DNS_ERROR_RCODE_YXDOMAIN = 9006
[ Description("DNS RR set that ought not exist, does exist.") ] Public Const DNS_ERROR_RCODE_YXRRSET = 9007
[ Description("DNS RR set that ought to exist, does not exist.") ] Public Const DNS_ERROR_RCODE_NXRRSET = 9008
[ Description("DNS server not authoritative for zone.") ] Public Const DNS_ERROR_RCODE_NOTAUTH = 9009
[ Description("DNS name in update or prereq is not in zone.") ] Public Const DNS_ERROR_RCODE_NOTZONE = 9010
[ Description("DNS signature failed to verify.") ] Public Const DNS_ERROR_RCODE_BADSIG = 9016
[ Description("DNS bad key.") ] Public Const DNS_ERROR_RCODE_BADKEY = 9017
[ Description("DNS signature validity expired.") ] Public Const DNS_ERROR_RCODE_BADTIME = 9018
Public Const DNS_ERROR_RCODE_LAST = DNS_ERROR_RCODE_BADTIME
Public Const DNS_ERROR_DNSSEC_BASE = 910
[ Description("Only the DNS server acting as the key master for the zone may perform this operation.") ] Public Const DNS_ERROR_KEYMASTER_REQUIRED = 9101
[ Description("This operation is not allowed on a zone that is signed or has signing keys.") ] Public Const DNS_ERROR_NOT_ALLOWED_ON_SIGNED_ZONE = 9102
[ Description("NSEC3 is not compatible with the RSA-SHA-1 algorithm. Choose a different algorithm or use NSEC.") ] Public Const DNS_ERROR_NSEC3_INCOMPATIBLE_WITH_RSA_SHA1 = 9103
[ Description("The zone does not have enough signing keys. There must be at least one key signing key (KSK) and at least one zone signing key (ZSK).") ] Public Const DNS_ERROR_NOT_ENOUGH_SIGNING_KEY_DESCRIPTORS = 9104
[ Description("The specified algorithm is not supported.") ] Public Const DNS_ERROR_UNSUPPORTED_ALGORITHM = 9105
[ Description("The specified key size is not supported.") ] Public Const DNS_ERROR_INVALID_KEY_SIZE = 9106
[ Description("One or more of the signing keys for a zone are not accessible to the DNS server. Zone signing will not be operational until this error is resolved.") ] Public Const DNS_ERROR_SIGNING_KEY_NOT_ACCESSIBLE = 9107
[ Description("The specified key storage provider does not support DPAPI++ data protection. Zone signing will not be operational until this error is resolved.") ] Public Const DNS_ERROR_KSP_DOES_NOT_SUPPORT_PROTECTION = 9108
[ Description("An unexpected DPAPI++ error was encountered. Zone signing will not be operational until this error is resolved.") ] Public Const DNS_ERROR_UNEXPECTED_DATA_PROTECTION_ERROR = 9109
[ Description("An unexpected crypto error was encountered. Zone signing may not be operational until this error is resolved.") ] Public Const DNS_ERROR_UNEXPECTED_CNG_ERROR = 9110
[ Description("The DNS server encountered a signing key with an unknown version. Zone signing will not be operational until this error is resolved.") ] Public Const DNS_ERROR_UNKNOWN_SIGNING_PARAMETER_VERSION = 9111
[ Description("The specified key service provider cannot be opened by the DNS server.") ] Public Const DNS_ERROR_KSP_NOT_ACCESSIBLE = 9112
[ Description("The DNS server cannot accept any more signing keys with the specified algorithm and KSK flag value for this zone.") ] Public Const DNS_ERROR_TOO_MANY_SKDS = 9113
[ Description("The specified rollover period is invalid.") ] Public Const DNS_ERROR_INVALID_ROLLOVER_PERIOD = 9114
[ Description("The specified initial rollover offset is invalid.") ] Public Const DNS_ERROR_INVALID_INITIAL_ROLLOVER_OFFSET = 9115
[ Description("The specified signing key is already in process of rolling over keys.") ] Public Const DNS_ERROR_ROLLOVER_IN_PROGRESS = 9116
[ Description("The specified signing key does not have a standby key to revoke.") ] Public Const DNS_ERROR_STANDBY_KEY_NOT_PRESENT = 9117
[ Description("This operation is not allowed on a zone signing key (ZSK).") ] Public Const DNS_ERROR_NOT_ALLOWED_ON_ZSK = 9118
[ Description("This operation is not allowed on an active signing key.") ] Public Const DNS_ERROR_NOT_ALLOWED_ON_ACTIVE_SKD = 9119
[ Description("The specified signing key is already queued for rollover.") ] Public Const DNS_ERROR_ROLLOVER_ALREADY_QUEUED = 9120
[ Description("This operation is not allowed on an unsigned zone.") ] Public Const DNS_ERROR_NOT_ALLOWED_ON_UNSIGNED_ZONE = 9121
[ Description("This operation could not be completed because the DNS server listed as the current key master for this zone is down or misconfigured. Resolve the problem on the current key master for this zone or use another DNS server to seize the key master role.") ] Public Const DNS_ERROR_BAD_KEYMASTER = 9122
[ Description("The specified signature validity period is invalid.") ] Public Const DNS_ERROR_INVALID_SIGNATURE_VALIDITY_PERIOD = 9123
[ Description("The specified NSEC3 iteration count is higher than allowed by the minimum key length used in the zone.") ] Public Const DNS_ERROR_INVALID_NSEC3_ITERATION_COUNT = 9124
[ Description("This operation could not be completed because the DNS server has been configured with DNSSEC features disabled. Enable DNSSEC on the DNS server.") ] Public Const DNS_ERROR_DNSSEC_IS_DISABLED = 9125
[ Description("This operation could not be completed because the XML stream received is empty or syntactically invalid.")] Public Const DNS_ERROR_INVALID_XML = 9126
[ Description("This operation completed, but no trust anchors were added because all of the trust anchors received were either invalid, unsupported, expired, or would not become valid in less than 30 days.") ] Public Const DNS_ERROR_NO_VALID_TRUST_ANCHORS = 9127
[ Description("The specified signing key is not waiting for parental DS update.") ] Public Const DNS_ERROR_ROLLOVER_NOT_POKEABLE = 9128
[ Description("Hash collision detected during NSEC3 signing. Specify a different user-provided salt, or use a randomly generated salt, and attempt to sign the zone again.") ] Public Const DNS_ERROR_NSEC3_NAME_COLLISION = 9129
[ Description("NSEC is not compatible with the NSEC3-RSA-SHA-1 algorithm. Choose a different algorithm or use NSEC3.") ] Public Const DNS_ERROR_NSEC_INCOMPATIBLE_WITH_NSEC3_RSA_SHA1 = 9130
Public Const DNS_ERROR_PACKET_FMT_BASE = 9500
[ Description("No records found for given DNS query.")] Public Const DNS_INFO_NO_RECORDS = 9501
[ Description("Bad DNS packet.") ] Public Const DNS_ERROR_BAD_PACKET = 9502
[ Description("No DNS packet.") ] Public Const DNS_ERROR_NO_PACKET = 9503
[ Description("DNS error, check rcode.")] Public Const DNS_ERROR_RCODE = 9504
[ Description("Unsecured DNS packet.") ] Public Const DNS_ERROR_UNSECURE_PACKET = 9505
Public Const DNS_STATUS_PACKET_UNSECURE = DNS_ERROR_UNSECURE_PACKET
[ Description("DNS query request is pending.") ] Public Const DNS_REQUEST_PENDING = 9506
Public Const DNS_ERROR_NO_MEMORY = ERROR_OUTOFMEMORY
Public Const DNS_ERROR_INVALID_NAME = ERROR_INVALID_NAME
Public Const DNS_ERROR_INVALID_DATA = ERROR_INVALID_DATA
Public Const DNS_ERROR_GENERAL_API_BASE = 9550
[ Description("Invalid DNS type.")] Public Const DNS_ERROR_INVALID_TYPE = 9551
[ Description("Invalid IP address.") ] Public Const DNS_ERROR_INVALID_IP_ADDRESS = 9552
[ Description("Invalid property.") ] Public Const DNS_ERROR_INVALID_PROPERTY = 9553
[ Description("Try DNS operation again later.") ] Public Const DNS_ERROR_TRY_AGAIN_LATER = 9554
[ Description("Record for given name and type is not unique.") ] Public Const DNS_ERROR_NOT_UNIQUE = 9555
[ Description("DNS name does not comply with RFC specifications.") ] Public Const DNS_ERROR_NON_RFC_NAME = 9556
[ Description("DNS name is a fully-qualified DNS name.") ] Public Const DNS_STATUS_FQDN = 9557
[ Description("DNS name is dotted (multi-label).") ] Public Const DNS_STATUS_DOTTED_NAME = 9558
[ Description("DNS name is a single-part name.") ] Public Const DNS_STATUS_SINGLE_PART_NAME = 9559
[ Description("DNS name contains an invalid character.") ] Public Const DNS_ERROR_INVALID_NAME_CHAR = 9560
[ Description("DNS name is entirely numeric.") ] Public Const DNS_ERROR_NUMERIC_NAME = 9561
[ Description("The operation requested is not permitted on a DNS root server.") ] Public Const DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER = 9562
[ Description("The record could not be created because this part of the DNS namespace has been delegated to another server.") ] Public Const DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION = 9563
[ Description("The DNS server could not find a set of root hints.") ] Public Const DNS_ERROR_CANNOT_FIND_ROOT_HINTS = 9564
[ Description("The DNS server found root hints but they were not consistent across all adapters.") ] Public Const DNS_ERROR_INCONSISTENT_ROOT_HINTS = 9565
[ Description("The specified value is too small for this parameter.") ] Public Const DNS_ERROR_DWORD_VALUE_TOO_SMALL = 9566
[ Description("The specified value is too large for this parameter.") ] Public Const DNS_ERROR_DWORD_VALUE_TOO_LARGE = 9567
[ Description("This operation is not allowed while the DNS server is loading zones in the background. Please try again later.") ] Public Const DNS_ERROR_BACKGROUND_LOADING = 9568
[ Description("The operation requested is not permitted on against a DNS server running on a read-only DC.") ] Public Const DNS_ERROR_NOT_ALLOWED_ON_RODC = 9569
[ Description("No data is allowed to exist underneath a DNAME record.") ] Public Const DNS_ERROR_NOT_ALLOWED_UNDER_DNAME = 9570
[ Description("This operation requires credentials delegation.") ] Public Const DNS_ERROR_DELEGATION_REQUIRED = 9571
[ Description("Name resolution policy table has been corrupted. DNS resolution will fail until it is fixed. Contact your network administrator.") ] Public Const DNS_ERROR_INVALID_POLICY_TABLE = 9572
[ Description("Not allowed to remove all addresses.") ] Public Const DNS_ERROR_ADDRESS_REQUIRED = 9573
Public Const DNS_ERROR_ZONE_BASE = 9600
[ Description("DNS zone does not exist.") ] Public Const DNS_ERROR_ZONE_DOES_NOT_EXIST = 9601
[ Description("DNS zone information not available.") ] Public Const DNS_ERROR_NO_ZONE_INFO = 9602
[ Description("Invalid operation for DNS zone.") ] Public Const DNS_ERROR_INVALID_ZONE_OPERATION = 9603
[ Description("Invalid DNS zone configuration.") ] Public Const DNS_ERROR_ZONE_CONFIGURATION_ERROR = 9604
[ Description("DNS zone has no start of authority (SOA) record.") ] Public Const DNS_ERROR_ZONE_HAS_NO_SOA_RECORD = 9605
[ Description("DNS zone has no Name Server (NS) record.") ] Public Const DNS_ERROR_ZONE_HAS_NO_NS_RECORDS = 9606
[ Description("DNS zone is locked.") ] Public Const DNS_ERROR_ZONE_LOCKED = 9607
[ Description("DNS zone creation failed.") ] Public Const DNS_ERROR_ZONE_CREATION_FAILED = 9608
[ Description("DNS zone already exists.") ] Public Const DNS_ERROR_ZONE_ALREADY_EXISTS = 9609
[ Description("DNS automatic zone already exists.") ] Public Const DNS_ERROR_AUTOZONE_ALREADY_EXISTS = 9610
[ Description("Invalid DNS zone type.") ] Public Const DNS_ERROR_INVALID_ZONE_TYPE = 9611
[ Description("Secondary DNS zone requires master IP address.") ] Public Const DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP = 9612
[ Description("DNS zone not secondary.") ] Public Const DNS_ERROR_ZONE_NOT_SECONDARY = 9613
[ Description("Need secondary IP address.") ] Public Const DNS_ERROR_NEED_SECONDARY_ADDRESSES = 9614
[ Description("WINS initialization failed.") ] Public Const DNS_ERROR_WINS_INIT_FAILED = 9615
[ Description("Need WINS servers.") ] Public Const DNS_ERROR_NEED_WINS_SERVERS = 9616
[ Description("NBTSTAT initialization call failed.") ] Public Const DNS_ERROR_NBSTAT_INIT_FAILED = 9617
[ Description("Invalid delete of start of authority (SOA)") ] Public Const DNS_ERROR_SOA_DELETE_INVALID = 9618
[ Description("A conditional forwarding zone already exists for that name.") ] Public Const DNS_ERROR_FORWARDER_ALREADY_EXISTS = 9619
[ Description("This zone must be configured with one or more master DNS server IP addresses.") ] Public Const DNS_ERROR_ZONE_REQUIRES_MASTER_IP = 9620
[ Description("The operation cannot be performed because this zone is shut down.") ] Public Const DNS_ERROR_ZONE_IS_SHUTDOWN = 9621
[ Description("This operation cannot be performed because the zone is currently being signed. Please try again later.") ] Public Const DNS_ERROR_ZONE_LOCKED_FOR_SIGNING = 9622
Public Const DNS_ERROR_DATAFILE_BASE = 9650
[ Description("Primary DNS zone requires datafile.") ] Public Const DNS_ERROR_PRIMARY_REQUIRES_DATAFILE = 9651
[ Description("Invalid datafile name for DNS zone.") ] Public Const DNS_ERROR_INVALID_DATAFILE_NAME = 9652
[ Description("Failed to open datafile for DNS zone.") ] Public Const DNS_ERROR_DATAFILE_OPEN_FAILURE = 9653
[ Description("Failed to write datafile for DNS zone.") ] Public Const DNS_ERROR_FILE_WRITEBACK_FAILED = 9654
[ Description("Failure while reading datafile for DNS zone.") ] Public Const DNS_ERROR_DATAFILE_PARSING = 9655
Public Const DNS_ERROR_DATABASE_BASE = 9700
[ Description("DNS record does not exist.") ] Public Const DNS_ERROR_RECORD_DOES_NOT_EXIST = 9701
[ Description("DNS record format error.")] Public Const DNS_ERROR_RECORD_FORMAT = 9702
[ Description("Node creation failure in DNS.") ] Public Const DNS_ERROR_NODE_CREATION_FAILED = 9703
[ Description("Unknown DNS record type.") ] Public Const DNS_ERROR_UNKNOWN_RECORD_TYPE = 9704
[ Description("DNS record timed out.") ] Public Const DNS_ERROR_RECORD_TIMED_OUT = 9705
[ Description("Name not in DNS zone.") ] Public Const DNS_ERROR_NAME_NOT_IN_ZONE = 9706
[ Description("CNAME loop detected.") ] Public Const DNS_ERROR_CNAME_LOOP = 9707
[ Description("Node is a CNAME DNS record.") ] Public Const DNS_ERROR_NODE_IS_CNAME = 9708
[ Description("A CNAME record already exists for given name.") ] Public Const DNS_ERROR_CNAME_COLLISION = 9709
[ Description("Record only at DNS zone root.") ] Public Const DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT = 9710
[ Description("DNS record already exists.") ] Public Const DNS_ERROR_RECORD_ALREADY_EXISTS = 9711
[ Description("Secondary DNS zone data error.")] Public Const DNS_ERROR_SECONDARY_DATA = 9712
[ Description("Could not create DNS cache data.") ] Public Const DNS_ERROR_NO_CREATE_CACHE_DATA = 9713
[ Description("DNS name does not exist.") ] Public Const DNS_ERROR_NAME_DOES_NOT_EXIST = 9714
[ Description("Could not create pointer (PTR) record.") ] Public Const DNS_WARNING_PTR_CREATE_FAILED = 9715
[ Description("DNS domain was undeleted.") ] Public Const DNS_WARNING_DOMAIN_UNDELETED = 9716
[ Description("The directory service is unavailable.") ] Public Const DNS_ERROR_DS_UNAVAILABLE = 9717
[ Description("DNS zone already exists in the directory service.") ] Public Const DNS_ERROR_DS_ZONE_ALREADY_EXISTS = 9718
[ Description("DNS server not creating or reading the boot file for the directory service integrated DNS zone.") ] Public Const DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE = 9719
[ Description("Node is a DNAME DNS record.") ] Public Const DNS_ERROR_NODE_IS_DNAME = 9720
[ Description("A DNAME record already exists for given name.")] Public Const DNS_ERROR_DNAME_COLLISION = 9721
[ Description("An alias loop has been detected with either CNAME or DNAME records.") ] Public Const DNS_ERROR_ALIAS_LOOP = 9722
Public Const DNS_ERROR_OPERATION_BASE = 9750
[ Description("DNS AXFR (zone transfer) complete.") ] Public Const DNS_INFO_AXFR_COMPLETE = 9751
[ Description("DNS zone transfer failed.") ] Public Const DNS_ERROR_AXFR = 9752
[ Description("Added local WINS server.") ] Public Const DNS_INFO_ADDED_LOCAL_WINS = 9753
Public Const DNS_ERROR_SECURE_BASE = 9800
[ Description("Secure update call needs to continue update request.")] Public Const DNS_STATUS_CONTINUE_NEEDED = 9801
Public Const DNS_ERROR_SETUP_BASE = 9850
[ Description("TCP/IP network protocol not installed.") ] Public Const DNS_ERROR_NO_TCPIP = 9851
[ Description("No DNS servers configured for local system.") ] Public Const DNS_ERROR_NO_DNS_SERVERS = 9852
Public Const DNS_ERROR_DP_BASE = 9900
[ Description("The specified directory partition does not exist.")] Public Const DNS_ERROR_DP_DOES_NOT_EXIST = 9901
[ Description("The specified directory partition already exists.") ] Public Const DNS_ERROR_DP_ALREADY_EXISTS = 9902
[ Description("This DNS server is not enlisted in the specified directory partition.") ] Public Const DNS_ERROR_DP_NOT_ENLISTED = 9903
[ Description("This DNS server is already enlisted in the specified directory partition.") ] Public Const DNS_ERROR_DP_ALREADY_ENLISTED = 9904
[ Description("The directory partition is not available at this time. Please wait a few minutes and try again.") ] Public Const DNS_ERROR_DP_NOT_AVAILABLE = 9905
[ Description("The operation failed because the domain naming master FSMO role could not be reached. The domain controller holding the domain naming master FSMO role is down or unable to service the request or is not running Windows Server 2003 or later.") ] Public Const DNS_ERROR_DP_FSMO_ERROR = 9906
[ Description("The RRL is not enabled.") ] Public Const DNS_ERROR_RRL_NOT_ENABLED = 9911
[ Description("The window size parameter is invalid. It should be greater than or equal to 1.") ] Public Const DNS_ERROR_RRL_INVALID_WINDOW_SIZE = 9912
[ Description("The IPv4 prefix length parameter is invalid. It should be less than or equal to 32.") ] Public Const DNS_ERROR_RRL_INVALID_IPV4_PREFIX = 9913
[ Description("The IPv6 prefix length parameter is invalid. It should be less than or equal to 128.") ] Public Const DNS_ERROR_RRL_INVALID_IPV6_PREFIX = 9914
[ Description("The TC Rate parameter is invalid. It should be less than 10.") ] Public Const DNS_ERROR_RRL_INVALID_TC_RATE = 9915
[ Description("The Leak Rate parameter is invalid. It should be either 0, or between 2 and 10.") ] Public Const DNS_ERROR_RRL_INVALID_LEAK_RATE = 9916
[ Description("The Leak Rate or TC Rate parameter is invalid. Leak Rate should be greater than TC Rate.") ] Public Const DNS_ERROR_RRL_LEAK_RATE_LESSTHAN_TC_RATE = 9917
[ Description("The virtualization instance already exists.") ] Public Const DNS_ERROR_VIRTUALIZATION_INSTANCE_ALREADY_EXISTS = 9921
[ Description("The virtualization instance does not exist.") ] Public Const DNS_ERROR_VIRTUALIZATION_INSTANCE_DOES_NOT_EXIST = 9922
[ Description("The virtualization tree is locked.") ] Public Const DNS_ERROR_VIRTUALIZATION_TREE_LOCKED = 9923
[ Description("Invalid virtualization instance name.") ] Public Const DNS_ERROR_INVAILD_VIRTUALIZATION_INSTANCE_NAME = 9924
[ Description("The default virtualization instance cannot be added, removed or modified.") ] Public Const DNS_ERROR_DEFAULT_VIRTUALIZATION_INSTANCE = 9925
[ Description("The scope already exists for the zone.") ] Public Const DNS_ERROR_ZONESCOPE_ALREADY_EXISTS = 9951
[ Description("The scope does not exist for the zone.") ] Public Const DNS_ERROR_ZONESCOPE_DOES_NOT_EXIST = 9952
[ Description("The scope is the same as the default zone scope.") ] Public Const DNS_ERROR_DEFAULT_ZONESCOPE = 9953
[ Description("The scope name contains invalid characters.") ] Public Const DNS_ERROR_INVALID_ZONESCOPE_NAME = 9954
[ Description("Operation not allowed when the zone has scopes.") ] Public Const DNS_ERROR_NOT_ALLOWED_WITH_ZONESCOPES = 9955
[ Description("Failed to load zone scope.") ] Public Const DNS_ERROR_LOAD_ZONESCOPE_FAILED = 9956
[ Description("Failed to write data file for DNS zone scope. Please verify the file exists and is writable.") ] Public Const DNS_ERROR_ZONESCOPE_FILE_WRITEBACK_FAILED = 9957
[ Description("The scope name contains invalid characters.")] Public Const DNS_ERROR_INVALID_SCOPE_NAME = 9958
[ Description("The scope does not exist.") ] Public Const DNS_ERROR_SCOPE_DOES_NOT_EXIST = 9959
[ Description("The scope is the same as the default scope.") ] Public Const DNS_ERROR_DEFAULT_SCOPE = 9960
[ Description("The operation is invalid on the scope.") ] Public Const DNS_ERROR_INVALID_SCOPE_OPERATION = 9961
[ Description("The scope is locked.") ] Public Const DNS_ERROR_SCOPE_LOCKED = 9962
[ Description("The scope already exists.") ] Public Const DNS_ERROR_SCOPE_ALREADY_EXISTS = 9963
[ Description("A policy with the same name already exists on this level (server level or zone level) on the DNS server.") ] Public Const DNS_ERROR_POLICY_ALREADY_EXISTS = 9971
[ Description("No policy with this name exists on this level (server level or zone level) on the DNS server.") ] Public Const DNS_ERROR_POLICY_DOES_NOT_EXIST = 9972
[ Description("The criteria provided in the policy are invalid.") ] Public Const DNS_ERROR_POLICY_INVALID_CRITERIA = 9973
[ Description("At least one of the settings of this policy is invalid.") ] Public Const DNS_ERROR_POLICY_INVALID_SETTINGS = 9974
[ Description("The client subnet cannot be deleted while it is being accessed by a policy.") ] Public Const DNS_ERROR_CLIENT_SUBNET_IS_ACCESSED = 9975
[ Description("The client subnet does not exist on the DNS server.") ] Public Const DNS_ERROR_CLIENT_SUBNET_DOES_NOT_EXIST = 9976
[ Description("A client subnet with this name already exists on the DNS server.") ] Public Const DNS_ERROR_CLIENT_SUBNET_ALREADY_EXISTS = 9977
[ Description("The IP subnet specified does not exist in the client subnet.") ] Public Const DNS_ERROR_SUBNET_DOES_NOT_EXIST = 9978
[ Description("The IP subnet that is being added, already exists in the client subnet.") ] Public Const DNS_ERROR_SUBNET_ALREADY_EXISTS = 9979
[ Description("The policy is locked.") ] Public Const DNS_ERROR_POLICY_LOCKED = 9980
[ Description("The weight of the scope in the policy is invalid.") ] Public Const DNS_ERROR_POLICY_INVALID_WEIGHT = 9981
[ Description("The DNS policy name is invalid.")] Public Const DNS_ERROR_POLICY_INVALID_NAME = 9982
[ Description("The policy is missing criteria.") ] Public Const DNS_ERROR_POLICY_MISSING_CRITERIA = 9983
[ Description("The name of the the client subnet record is invalid.") ] Public Const DNS_ERROR_INVALID_CLIENT_SUBNET_NAME = 9984
[ Description("Invalid policy processing order.") ] Public Const DNS_ERROR_POLICY_PROCESSING_ORDER_INVALID = 9985
[ Description("The scope information has not been provided for a policy that requires it.")] Public Const DNS_ERROR_POLICY_SCOPE_MISSING = 9986
[ Description("The scope information has been provided for a policy that does not require it.") ] Public Const DNS_ERROR_POLICY_SCOPE_NOT_ALLOWED = 9987
[ Description("The server scope cannot be deleted because it is referenced by a DNS Policy.") ] Public Const DNS_ERROR_SERVERSCOPE_IS_REFERENCED = 9988
[ Description("The zone scope cannot be deleted because it is referenced by a DNS Policy.") ] Public Const DNS_ERROR_ZONESCOPE_IS_REFERENCED = 9989
[ Description("The criterion client subnet provided in the policy is invalid.") ] Public Const DNS_ERROR_POLICY_INVALID_CRITERIA_CLIENT_SUBNET = 9990
[ Description("The criterion transport protocol provided in the policy is invalid.") ] Public Const DNS_ERROR_POLICY_INVALID_CRITERIA_TRANSPORT_PROTOCOL = 9991
[ Description("The criterion network protocol provided in the policy is invalid.") ] Public Const DNS_ERROR_POLICY_INVALID_CRITERIA_NETWORK_PROTOCOL = 9992
[ Description("The criterion interface provided in the policy is invalid.") ] Public Const DNS_ERROR_POLICY_INVALID_CRITERIA_INTERFACE = 9993
[ Description("The criterion FQDN provided in the policy is invalid.") ] Public Const DNS_ERROR_POLICY_INVALID_CRITERIA_FQDN = 9994
[ Description("The criterion query type provided in the policy is invalid.") ] Public Const DNS_ERROR_POLICY_INVALID_CRITERIA_QUERY_TYPE = 9995
[ Description("The criterion time of day provided in the policy is invalid.")] Public Const DNS_ERROR_POLICY_INVALID_CRITERIA_TIME_OF_DAY = 9996

[ Description("The callout does not exist.") ] Public Const FWP_E_CALLOUT_NOT_FOUND = &H80320001
[ Description("The filter condition does not exist.") ] Public Const FWP_E_CONDITION_NOT_FOUND = &H80320002
[ Description("The filter does not exist.") ] Public Const FWP_E_FILTER_NOT_FOUND = &H80320003
[ Description("The layer does not exist.") ] Public Const FWP_E_LAYER_NOT_FOUND = &H80320004
[ Description("The provider does not exist.") ] Public Const FWP_E_PROVIDER_NOT_FOUND = &H80320005
[ Description("The provider context does not exist.") ] Public Const FWP_E_PROVIDER_CONTEXT_NOT_FOUND = &H80320006
[ Description("The sublayer does not exist.") ] Public Const FWP_E_SUBLAYER_NOT_FOUND = &H80320007
[ Description("The object does not exist.") ] Public Const FWP_E_NOT_FOUND = &H80320008
[ Description("An object with that GUID or LUID already exists.") ] Public Const FWP_E_ALREADY_EXISTS = &H80320009
[ Description("The object is referenced by other objects so cannot be deleted.")] Public Const FWP_E_IN_USE = &H8032000A
[ Description("The call is not allowed from within a dynamic session.") ] Public Const FWP_E_DYNAMIC_SESSION_IN_PROGRESS = &H8032000B
[ Description("The call was made from the wrong session so cannot be completed.") ] Public Const FWP_E_WRONG_SESSION = &H8032000C
[ Description("The call must be made from within an explicit transaction.") ] Public Const FWP_E_NO_TXN_IN_PROGRESS = &H8032000D
[ Description("The call is not allowed from within an explicit transaction.") ] Public Const FWP_E_TXN_IN_PROGRESS = &H8032000E
[ Description("The explicit transaction has been forcibly cancelled.")] Public Const FWP_E_TXN_ABORTED = &H8032000F
[ Description("The session has been cancelled.") ] Public Const FWP_E_SESSION_ABORTED = &H80320010
[ Description("The call is not allowed from within a read-only transaction.") ] Public Const FWP_E_INCOMPATIBLE_TXN = &H80320011
[ Description("The call timed out while waiting to acquire the transaction lock.")] Public Const FWP_E_TIMEOUT = &H80320012
[ Description("Collection of network diagnostic events is disabled.") ] Public Const FWP_E_NET_EVENTS_DISABLED = &H80320013
[ Description("The operation is not supported by the specified layer.") ] Public Const FWP_E_INCOMPATIBLE_LAYER = &H80320014
[ Description("The call is allowed for kernel-mode callers only.") ] Public Const FWP_E_KM_CLIENTS_ONLY = &H80320015
[ Description("The call tried to associate two objects with incompatible lifetimes.") ] Public Const FWP_E_LIFETIME_MISMATCH = &H80320016
[ Description("The object is built in so cannot be deleted.") ] Public Const FWP_E_BUILTIN_OBJECT = &H80320017
[ Description("The maximum number of callouts has been reached.") ] Public Const FWP_E_TOO_MANY_CALLOUTS = &H80320018
[ Description("A notification could not be delivered because a message queue is at its maximum capacity.") ] Public Const FWP_E_NOTIFICATION_DROPPED = &H80320019
[ Description("The traffic parameters do not match those for the security association context.") ] Public Const FWP_E_TRAFFIC_MISMATCH = &H8032001A
[ Description("The call is not allowed for the current security association state.") ] Public Const FWP_E_INCOMPATIBLE_SA_STATE = &H8032001B
[ Description("A required pointer is null.")] Public Const FWP_E_NULL_POINTER = &H8032001C
[ Description("An enumerator is not valid.") ] Public Const FWP_E_INVALID_ENUMERATOR = &H8032001D
[ Description("The flags field contains an invalid value.")] Public Const FWP_E_INVALID_FLAGS = &H8032001E
[ Description("A network mask is not valid.") ] Public Const FWP_E_INVALID_NET_MASK = &H8032001F
[ Description("An FWP_RANGE is not valid.") ] Public Const FWP_E_INVALID_RANGE = &H80320020
[ Description("The time interval is not valid.") ] Public Const FWP_E_INVALID_INTERVAL = &H80320021
[ Description("An array that must contain at least one element is zero length.") ] Public Const FWP_E_ZERO_LENGTH_ARRAY = &H80320022
[ Description("The displayData.name field cannot be null.") ] Public Const FWP_E_NULL_DISPLAY_NAME = &H80320023
[ Description("The action type is not one of the allowed action types for a filter.") ] Public Const FWP_E_INVALID_ACTION_TYPE = &H80320024
[ Description("The filter weight is not valid.")] Public Const FWP_E_INVALID_WEIGHT = &H80320025
[ Description("A filter condition contains a match type that is not compatible with the operands.") ] Public Const FWP_E_MATCH_TYPE_MISMATCH = &H80320026
[ Description("An FWP_VALUE or FWPM_CONDITION_VALUE is of the wrong type.") ] Public Const FWP_E_TYPE_MISMATCH = &H80320027
[ Description("An integer value is outside the allowed range.") ] Public Const FWP_E_OUT_OF_BOUNDS = &H80320028
[ Description("A reserved field is non-zero.")] Public Const FWP_E_RESERVED = &H80320029
[ Description("A filter cannot contain multiple conditions operating on a single field.") ] Public Const FWP_E_DUPLICATE_CONDITION = &H8032002A
[ Description("A policy cannot contain the same keying module more than once.")] Public Const FWP_E_DUPLICATE_KEYMOD = &H8032002B
[ Description("The action type is not compatible with the layer.") ] Public Const FWP_E_ACTION_INCOMPATIBLE_WITH_LAYER = &H8032002C
[ Description("The action type is not compatible with the sublayer.")] Public Const FWP_E_ACTION_INCOMPATIBLE_WITH_SUBLAYER = &H8032002D
[ Description("The raw context or the provider context is not compatible with the layer.") ] Public Const FWP_E_CONTEXT_INCOMPATIBLE_WITH_LAYER = &H8032002E
[ Description("The raw context or the provider context is not compatible with the callout.")] Public Const FWP_E_CONTEXT_INCOMPATIBLE_WITH_CALLOUT = &H8032002F
[ Description("The authentication method is not compatible with the policy type.") ] Public Const FWP_E_INCOMPATIBLE_AUTH_METHOD = &H80320030
[ Description("The Diffie-Hellman group is not compatible with the policy type.") ] Public Const FWP_E_INCOMPATIBLE_DH_GROUP = &H80320031
[ Description("An IKE policy cannot contain an Extended Mode policy.") ] Public Const FWP_E_EM_NOT_SUPPORTED = &H80320032
[ Description("The enumeration template or subscription will never match any objects.") ] Public Const FWP_E_NEVER_MATCH = &H80320033
[ Description("The provider context is of the wrong type.")] Public Const FWP_E_PROVIDER_CONTEXT_MISMATCH = &H80320034
[ Description("The parameter is incorrect.") ] Public Const FWP_E_INVALID_PARAMETER = &H80320035
[ Description("The maximum number of sublayers has been reached.") ] Public Const FWP_E_TOO_MANY_SUBLAYERS = &H80320036
[ Description("The notification function for a callout returned an error.") ] Public Const FWP_E_CALLOUT_NOTIFICATION_FAILED = &H80320037
[ Description("The IPsec authentication transform is not valid.") ] Public Const FWP_E_INVALID_AUTH_TRANSFORM = &H80320038
[ Description("The IPsec cipher transform is not valid.") ] Public Const FWP_E_INVALID_CIPHER_TRANSFORM = &H80320039
[ Description("The IPsec cipher transform is not compatible with the policy.") ] Public Const FWP_E_INCOMPATIBLE_CIPHER_TRANSFORM = &H8032003A
[ Description("The combination of IPsec transform types is not valid.") ] Public Const FWP_E_INVALID_TRANSFORM_COMBINATION = &H8032003B
[ Description("A policy cannot contain the same auth method more than once.") ] Public Const FWP_E_DUPLICATE_AUTH_METHOD = &H8032003C
[ Description("A tunnel endpoint configuration is invalid.") ] Public Const FWP_E_INVALID_TUNNEL_ENDPOINT = &H8032003D
[ Description("The WFP MAC Layers are not ready.") ] Public Const FWP_E_L2_DRIVER_NOT_READY = &H8032003E
[ Description("A key manager capable of key dictation is already registered")] Public Const FWP_E_KEY_DICTATOR_ALREADY_REGISTERED = &H8032003F
[ Description("A key manager dictated invalid keys") ] Public Const FWP_E_KEY_DICTATION_INVALID_KEYING_MATERIAL = &H80320040
[ Description("The BFE IPsec Connection Tracking is disabled.") ] Public Const FWP_E_CONNECTIONS_DISABLED = &H80320041
[ Description("The DNS name is invalid.") ] Public Const FWP_E_INVALID_DNS_NAME = &H80320042
[ Description("The engine option is still enabled due to other configuration settings.")] Public Const FWP_E_STILL_ON = &H80320043
[ Description("The IKEEXT service is not running. This service only runs when there is IPsec policy applied to the machine.") ] Public Const FWP_E_IKEEXT_NOT_RUNNING = &H80320044
[ Description("The packet should be dropped, no ICMP should be sent.")] Public Const FWP_E_DROP_NOICMP = &H80320104





#End Region

#Region "DEVPKEY"
Public Function IsEqualDevPropKey(a As PROPERTYKEY, b As PROPERTYKEY) As Boolean
    Return IsEqualPKEY(a, b)
End Function
Public Function DEVPKEY_Device_DeviceDesc() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 2)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DeviceDesc = pkk
End Function
Public Function DEVPKEY_Device_HardwareIds() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 3)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_HardwareIds = pkk
End Function
Public Function DEVPKEY_NAME() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hb725f130, &H47ef, &H101a, &Ha5, &Hf1, &H02, &H60, &H8c, &H9e, &Heb, &Hac, 10)
 'DEVPROP_TYPE_STRING
DEVPKEY_NAME = pkk
End Function
Public Function DEVPKEY_Device_CompatibleIds() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 4)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_CompatibleIds = pkk
End Function
Public Function DEVPKEY_Device_Service() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 6)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_Service = pkk
End Function
Public Function DEVPKEY_Device_Class() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 9)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_Class = pkk
End Function
Public Function DEVPKEY_Device_ClassGuid() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 10)
 'DEVPROP_TYPE_GUID
DEVPKEY_Device_ClassGuid = pkk
End Function
Public Function DEVPKEY_Device_Driver() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 11)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_Driver = pkk
End Function
Public Function DEVPKEY_Device_ConfigFlags() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 12)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_ConfigFlags = pkk
End Function
Public Function DEVPKEY_Device_Manufacturer() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 13)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_Manufacturer = pkk
End Function
Public Function DEVPKEY_Device_FriendlyName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 14)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_FriendlyName = pkk
End Function
Public Function DEVPKEY_Device_LocationInfo() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 15)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_LocationInfo = pkk
End Function
Public Function DEVPKEY_Device_PDOName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 16)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_PDOName = pkk
End Function
Public Function DEVPKEY_Device_Capabilities() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 17)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_Capabilities = pkk
End Function
Public Function DEVPKEY_Device_UINumber() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 18)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_UINumber = pkk
End Function
Public Function DEVPKEY_Device_UpperFilters() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 19)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_UpperFilters = pkk
End Function
Public Function DEVPKEY_Device_LowerFilters() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 20)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_LowerFilters = pkk
End Function
Public Function DEVPKEY_Device_BusTypeGuid() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 21)
 'DEVPROP_TYPE_GUID
DEVPKEY_Device_BusTypeGuid = pkk
End Function
Public Function DEVPKEY_Device_LegacyBusType() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 22)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_LegacyBusType = pkk
End Function
Public Function DEVPKEY_Device_BusNumber() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 23)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_BusNumber = pkk
End Function
Public Function DEVPKEY_Device_EnumeratorName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 24)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_EnumeratorName = pkk
End Function
Public Function DEVPKEY_Device_Security() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 25)
 'DEVPROP_TYPE_SECURITY_DESCRIPTOR
DEVPKEY_Device_Security = pkk
End Function
Public Function DEVPKEY_Device_SecuritySDS() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 26)
 'DEVPROP_TYPE_SECURITY_DESCRIPTOR_STRING
DEVPKEY_Device_SecuritySDS = pkk
End Function
Public Function DEVPKEY_Device_DevType() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 27)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_DevType = pkk
End Function
Public Function DEVPKEY_Device_Exclusive() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 28)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_Exclusive = pkk
End Function
Public Function DEVPKEY_Device_Characteristics() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 29)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_Characteristics = pkk
End Function
Public Function DEVPKEY_Device_Address() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 30)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_Address = pkk
End Function
Public Function DEVPKEY_Device_UINumberDescFormat() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 31)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_UINumberDescFormat = pkk
End Function
Public Function DEVPKEY_Device_PowerData() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 32)
 'DEVPROP_TYPE_BINARY
DEVPKEY_Device_PowerData = pkk
End Function
Public Function DEVPKEY_Device_RemovalPolicy() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 33)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_RemovalPolicy = pkk
End Function
Public Function DEVPKEY_Device_RemovalPolicyDefault() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 34)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_RemovalPolicyDefault = pkk
End Function
Public Function DEVPKEY_Device_RemovalPolicyOverride() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 35)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_RemovalPolicyOverride = pkk
End Function
Public Function DEVPKEY_Device_InstallState() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 36)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_InstallState = pkk
End Function
Public Function DEVPKEY_Device_LocationPaths() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 37)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_LocationPaths = pkk
End Function
Public Function DEVPKEY_Device_BaseContainerId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha45c254e, &Hdf1c, &H4efd, &H80, &H20, &H67, &Hd1, &H46, &Ha8, &H50, &He0, 38)
 'DEVPROP_TYPE_GUID
DEVPKEY_Device_BaseContainerId = pkk
End Function
Public Function DEVPKEY_Device_InstanceId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 256)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_InstanceId = pkk
End Function
Public Function DEVPKEY_Device_DevNodeStatus() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 2)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_DevNodeStatus = pkk
End Function
Public Function DEVPKEY_Device_ProblemCode() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 3)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_ProblemCode = pkk
End Function
Public Function DEVPKEY_Device_EjectionRelations() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 4)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_EjectionRelations = pkk
End Function
Public Function DEVPKEY_Device_RemovalRelations() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 5)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_RemovalRelations = pkk
End Function
Public Function DEVPKEY_Device_PowerRelations() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 6)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_PowerRelations = pkk
End Function
Public Function DEVPKEY_Device_BusRelations() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 7)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_BusRelations = pkk
End Function
Public Function DEVPKEY_Device_Parent() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 8)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_Parent = pkk
End Function
Public Function DEVPKEY_Device_Children() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 9)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_Children = pkk
End Function
Public Function DEVPKEY_Device_Siblings() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 10)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_Siblings = pkk
End Function
Public Function DEVPKEY_Device_TransportRelations() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 11)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_TransportRelations = pkk
End Function
Public Function DEVPKEY_Device_ProblemStatus() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4340a6c5, &H93fa, &H4706, &H97, &H2c, &H7b, &H64, &H80, &H08, &Ha5, &Ha7, 12)
 'DEVPROP_TYPE_NTSTATUS
DEVPKEY_Device_ProblemStatus = pkk
End Function
Public Function DEVPKEY_Device_Reported() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80497100, &H8c73, &H48b9, &Haa, &Hd9, &Hce, &H38, &H7e, &H19, &Hc5, &H6e, 2)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_Reported = pkk
End Function
Public Function DEVPKEY_Device_Legacy() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80497100, &H8c73, &H48b9, &Haa, &Hd9, &Hce, &H38, &H7e, &H19, &Hc5, &H6e, 3)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_Legacy = pkk
End Function
Public Function DEVPKEY_Device_ContainerId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H8c7ed206, &H3f8a, &H4827, &Hb3, &Hab, &Hae, &H9e, &H1f, &Hae, &Hfc, &H6c, 2)
 'DEVPROP_TYPE_GUID
DEVPKEY_Device_ContainerId = pkk
End Function
Public Function DEVPKEY_Device_InLocalMachineContainer() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H8c7ed206, &H3f8a, &H4827, &Hb3, &Hab, &Hae, &H9e, &H1f, &Hae, &Hfc, &H6c, 4)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_InLocalMachineContainer = pkk
End Function
Public Function DEVPKEY_Device_Model() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 39)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_Model = pkk
End Function
Public Function DEVPKEY_Device_ModelId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80d81ea6, &H7473, &H4b0c, &H82, &H16, &Hef, &Hc1, &H1a, &H2c, &H4c, &H8b, 2)
 'DEVPROP_TYPE_GUID
DEVPKEY_Device_ModelId = pkk
End Function
Public Function DEVPKEY_Device_FriendlyNameAttributes() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80d81ea6, &H7473, &H4b0c, &H82, &H16, &Hef, &Hc1, &H1a, &H2c, &H4c, &H8b, 3)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_FriendlyNameAttributes = pkk
End Function
Public Function DEVPKEY_Device_ManufacturerAttributes() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80d81ea6, &H7473, &H4b0c, &H82, &H16, &Hef, &Hc1, &H1a, &H2c, &H4c, &H8b, 4)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_ManufacturerAttributes = pkk
End Function
Public Function DEVPKEY_Device_PresenceNotForDevice() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80d81ea6, &H7473, &H4b0c, &H82, &H16, &Hef, &Hc1, &H1a, &H2c, &H4c, &H8b, 5)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_PresenceNotForDevice = pkk
End Function
Public Function DEVPKEY_Device_SignalStrength() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80d81ea6, &H7473, &H4b0c, &H82, &H16, &Hef, &Hc1, &H1a, &H2c, &H4c, &H8b, 6)
 'DEVPROP_TYPE_INT32
DEVPKEY_Device_SignalStrength = pkk
End Function
Public Function DEVPKEY_Device_IsAssociateableByUserAction() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80d81ea6, &H7473, &H4b0c, &H82, &H16, &Hef, &Hc1, &H1a, &H2c, &H4c, &H8b, 7)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_IsAssociateableByUserAction = pkk
End Function
Public Function DEVPKEY_Device_ShowInUninstallUI() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H80d81ea6, &H7473, &H4b0c, &H82, &H16, &Hef, &Hc1, &H1a, &H2c, &H4c, &H8b, 8)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_ShowInUninstallUI = pkk
End Function
Public Function DEVPKEY_Device_Numa_Proximity_Domain() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 1)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_Numa_Proximity_Domain = pkk
End Function
Public Function DEVPKEY_Device_DHP_Rebalance_Policy() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 2)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_DHP_Rebalance_Policy = pkk
End Function
Public Function DEVPKEY_Device_Numa_Node() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 3)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_Numa_Node = pkk
End Function
Public Function DEVPKEY_Device_BusReportedDeviceDesc() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 4)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_BusReportedDeviceDesc = pkk
End Function
Public Function DEVPKEY_Device_IsPresent() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 5)
 'DEVPROP_TYPE_BOOL
DEVPKEY_Device_IsPresent = pkk
End Function
Public Function DEVPKEY_Device_HasProblem() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 6)
 'DEVPROP_TYPE_BOOL
DEVPKEY_Device_HasProblem = pkk
End Function
Public Function DEVPKEY_Device_ConfigurationId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 7)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_ConfigurationId = pkk
End Function
Public Function DEVPKEY_Device_ReportedDeviceIdsHash() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 8)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_ReportedDeviceIdsHash = pkk
End Function
Public Function DEVPKEY_Device_PhysicalDeviceLocation() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 9)
 'DEVPROP_TYPE_BINARY
DEVPKEY_Device_PhysicalDeviceLocation = pkk
End Function
Public Function DEVPKEY_Device_BiosDeviceName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 10)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_BiosDeviceName = pkk
End Function
Public Function DEVPKEY_Device_DriverProblemDesc() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 11)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DriverProblemDesc = pkk
End Function
Public Function DEVPKEY_Device_DebuggerSafe() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 12)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_DebuggerSafe = pkk
End Function
Public Function DEVPKEY_Device_PostInstallInProgress() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 13)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_PostInstallInProgress = pkk
End Function
Public Function DEVPKEY_Device_Stack() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 14)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_Stack = pkk
End Function
Public Function DEVPKEY_Device_ExtendedConfigurationIds() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 15)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_ExtendedConfigurationIds = pkk
End Function
Public Function DEVPKEY_Device_IsRebootRequired() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 16)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_IsRebootRequired = pkk
End Function
Public Function DEVPKEY_Device_FirmwareDate() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 17)
 'DEVPROP_TYPE_FILETIME
DEVPKEY_Device_FirmwareDate = pkk
End Function
Public Function DEVPKEY_Device_FirmwareVersion() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 18)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_FirmwareVersion = pkk
End Function
Public Function DEVPKEY_Device_FirmwareRevision() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 19)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_FirmwareRevision = pkk
End Function
Public Function DEVPKEY_Device_DependencyProviders() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 20)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_DependencyProviders = pkk
End Function
Public Function DEVPKEY_Device_DependencyDependents() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 21)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_DependencyDependents = pkk
End Function
Public Function DEVPKEY_Device_SoftRestartSupported() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 22)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_SoftRestartSupported = pkk
End Function
Public Function DEVPKEY_Device_ExtendedAddress() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 23)
 'DEVPROP_TYPE_UINT64
DEVPKEY_Device_ExtendedAddress = pkk
End Function
Public Function DEVPKEY_Device_AssignedToGuest() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 24)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_AssignedToGuest = pkk
End Function
Public Function DEVPKEY_Device_CreatorProcessId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 25)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_CreatorProcessId = pkk
End Function
Public Function DEVPKEY_Device_FirmwareVendor() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H540b947e, &H8b40, &H45bc, &Ha8, &Ha2, &H6a, &H0b, &H89, &H4c, &Hbd, &Ha2, 26)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_FirmwareVendor = pkk
End Function
Public Function DEVPKEY_Device_SessionId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H83da6326, &H97a6, &H4088, &H94, &H53, &Ha1, &H92, &H3f, &H57, &H3b, &H29, 6)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_SessionId = pkk
End Function
Public Function DEVPKEY_Device_InstallDate() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H83da6326, &H97a6, &H4088, &H94, &H53, &Ha1, &H92, &H3f, &H57, &H3b, &H29, 100)
 'DEVPROP_TYPE_FILETIME
DEVPKEY_Device_InstallDate = pkk
End Function
Public Function DEVPKEY_Device_FirstInstallDate() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H83da6326, &H97a6, &H4088, &H94, &H53, &Ha1, &H92, &H3f, &H57, &H3b, &H29, 101)
 'DEVPROP_TYPE_FILETIME
DEVPKEY_Device_FirstInstallDate = pkk
End Function
Public Function DEVPKEY_Device_LastArrivalDate() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H83da6326, &H97a6, &H4088, &H94, &H53, &Ha1, &H92, &H3f, &H57, &H3b, &H29, 102)
 'DEVPROP_TYPE_FILETIME
DEVPKEY_Device_LastArrivalDate = pkk
End Function
Public Function DEVPKEY_Device_LastRemovalDate() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H83da6326, &H97a6, &H4088, &H94, &H53, &Ha1, &H92, &H3f, &H57, &H3b, &H29, 103)
 'DEVPROP_TYPE_FILETIME
DEVPKEY_Device_LastRemovalDate = pkk
End Function
Public Function DEVPKEY_Device_DriverDate() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 2)
 'DEVPROP_TYPE_FILETIME
DEVPKEY_Device_DriverDate = pkk
End Function
Public Function DEVPKEY_Device_DriverVersion() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 3)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DriverVersion = pkk
End Function
Public Function DEVPKEY_Device_DriverDesc() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 4)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DriverDesc = pkk
End Function
Public Function DEVPKEY_Device_DriverInfPath() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 5)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DriverInfPath = pkk
End Function
Public Function DEVPKEY_Device_DriverInfSection() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 6)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DriverInfSection = pkk
End Function
Public Function DEVPKEY_Device_DriverInfSectionExt() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 7)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DriverInfSectionExt = pkk
End Function
Public Function DEVPKEY_Device_MatchingDeviceId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 8)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_MatchingDeviceId = pkk
End Function
Public Function DEVPKEY_Device_DriverProvider() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 9)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DriverProvider = pkk
End Function
Public Function DEVPKEY_Device_DriverPropPageProvider() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 10)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_DriverPropPageProvider = pkk
End Function
Public Function DEVPKEY_Device_DriverCoInstallers() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 11)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_Device_DriverCoInstallers = pkk
End Function
Public Function DEVPKEY_Device_ResourcePickerTags() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 12)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_ResourcePickerTags = pkk
End Function
Public Function DEVPKEY_Device_ResourcePickerExceptions() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 13)
 'DEVPROP_TYPE_STRING
DEVPKEY_Device_ResourcePickerExceptions = pkk
End Function
Public Function DEVPKEY_Device_DriverRank() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 14)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_DriverRank = pkk
End Function
Public Function DEVPKEY_Device_DriverLogoLevel() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 15)
 'DEVPROP_TYPE_UINT32
DEVPKEY_Device_DriverLogoLevel = pkk
End Function
Public Function DEVPKEY_Device_NoConnectSound() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 17)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_NoConnectSound = pkk
End Function
Public Function DEVPKEY_Device_GenericDriverInstalled() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 18)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_GenericDriverInstalled = pkk
End Function
Public Function DEVPKEY_Device_AdditionalSoftwareRequested() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Ha8b865dd, &H2e3d, &H4094, &Had, &H97, &He5, &H93, &Ha7, &Hc, &H75, &Hd6, 19)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_AdditionalSoftwareRequested = pkk
End Function
Public Function DEVPKEY_Device_SafeRemovalRequired() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hafd97640, &H86a3, &H4210, &Hb6, &H7c, &H28, &H9c, &H41, &Haa, &Hbe, &H55, 2)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_SafeRemovalRequired = pkk
End Function
Public Function DEVPKEY_Device_SafeRemovalRequiredOverride() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hafd97640, &H86a3, &H4210, &Hb6, &H7c, &H28, &H9c, &H41, &Haa, &Hbe, &H55, 3)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_Device_SafeRemovalRequiredOverride = pkk
End Function
Public Function DEVPKEY_DrvPkg_Model() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hcf73bb51, &H3abf, &H44a2, &H85, &He0, &H9a, &H3d, &Hc7, &Ha1, &H21, &H32, 2)
 'DEVPROP_TYPE_STRING
DEVPKEY_DrvPkg_Model = pkk
End Function
Public Function DEVPKEY_DrvPkg_VendorWebSite() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hcf73bb51, &H3abf, &H44a2, &H85, &He0, &H9a, &H3d, &Hc7, &Ha1, &H21, &H32, 3)
 'DEVPROP_TYPE_STRING
DEVPKEY_DrvPkg_VendorWebSite = pkk
End Function
Public Function DEVPKEY_DrvPkg_DetailedDescription() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hcf73bb51, &H3abf, &H44a2, &H85, &He0, &H9a, &H3d, &Hc7, &Ha1, &H21, &H32, 4)
 'DEVPROP_TYPE_STRING
DEVPKEY_DrvPkg_DetailedDescription = pkk
End Function
Public Function DEVPKEY_DrvPkg_DocumentationLink() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hcf73bb51, &H3abf, &H44a2, &H85, &He0, &H9a, &H3d, &Hc7, &Ha1, &H21, &H32, 5)
 'DEVPROP_TYPE_STRING
DEVPKEY_DrvPkg_DocumentationLink = pkk
End Function
Public Function DEVPKEY_DrvPkg_Icon() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hcf73bb51, &H3abf, &H44a2, &H85, &He0, &H9a, &H3d, &Hc7, &Ha1, &H21, &H32, 6)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DrvPkg_Icon = pkk
End Function
Public Function DEVPKEY_DrvPkg_BrandingIcon() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hcf73bb51, &H3abf, &H44a2, &H85, &He0, &H9a, &H3d, &Hc7, &Ha1, &H21, &H32, 7)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DrvPkg_BrandingIcon = pkk
End Function
Public Function DEVPKEY_DeviceClass_UpperFilters() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4321918b, &Hf69e, &H470d, &Ha5, &Hde, &H4d, &H88, &Hc7, &H5a, &Hd2, &H4b, 19)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceClass_UpperFilters = pkk
End Function
Public Function DEVPKEY_DeviceClass_LowerFilters() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4321918b, &Hf69e, &H470d, &Ha5, &Hde, &H4d, &H88, &Hc7, &H5a, &Hd2, &H4b, 20)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceClass_LowerFilters = pkk
End Function
Public Function DEVPKEY_DeviceClass_Security() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4321918b, &Hf69e, &H470d, &Ha5, &Hde, &H4d, &H88, &Hc7, &H5a, &Hd2, &H4b, 25)
 'DEVPROP_TYPE_SECURITY_DESCRIPTOR
DEVPKEY_DeviceClass_Security = pkk
End Function
Public Function DEVPKEY_DeviceClass_SecuritySDS() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4321918b, &Hf69e, &H470d, &Ha5, &Hde, &H4d, &H88, &Hc7, &H5a, &Hd2, &H4b, 26)
 'DEVPROP_TYPE_SECURITY_DESCRIPTOR_STRING
DEVPKEY_DeviceClass_SecuritySDS = pkk
End Function
Public Function DEVPKEY_DeviceClass_DevType() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4321918b, &Hf69e, &H470d, &Ha5, &Hde, &H4d, &H88, &Hc7, &H5a, &Hd2, &H4b, 27)
 'DEVPROP_TYPE_UINT32
DEVPKEY_DeviceClass_DevType = pkk
End Function
Public Function DEVPKEY_DeviceClass_Exclusive() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4321918b, &Hf69e, &H470d, &Ha5, &Hde, &H4d, &H88, &Hc7, &H5a, &Hd2, &H4b, 28)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceClass_Exclusive = pkk
End Function
Public Function DEVPKEY_DeviceClass_Characteristics() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H4321918b, &Hf69e, &H470d, &Ha5, &Hde, &H4d, &H88, &Hc7, &H5a, &Hd2, &H4b, 29)
 'DEVPROP_TYPE_UINT32
DEVPKEY_DeviceClass_Characteristics = pkk
End Function
Public Function DEVPKEY_DeviceClass_Name() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 2)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceClass_Name = pkk
End Function
Public Function DEVPKEY_DeviceClass_ClassName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 3)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceClass_ClassName = pkk
End Function
Public Function DEVPKEY_DeviceClass_Icon() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 4)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceClass_Icon = pkk
End Function
Public Function DEVPKEY_DeviceClass_ClassInstaller() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 5)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceClass_ClassInstaller = pkk
End Function
Public Function DEVPKEY_DeviceClass_PropPageProvider() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 6)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceClass_PropPageProvider = pkk
End Function
Public Function DEVPKEY_DeviceClass_NoInstallClass() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 7)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceClass_NoInstallClass = pkk
End Function
Public Function DEVPKEY_DeviceClass_NoDisplayClass() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 8)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceClass_NoDisplayClass = pkk
End Function
Public Function DEVPKEY_DeviceClass_SilentInstall() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 9)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceClass_SilentInstall = pkk
End Function
Public Function DEVPKEY_DeviceClass_NoUseClass() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 10)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceClass_NoUseClass = pkk
End Function
Public Function DEVPKEY_DeviceClass_DefaultService() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 11)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceClass_DefaultService = pkk
End Function
Public Function DEVPKEY_DeviceClass_IconPath() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H259abffc, &H50a7, &H47ce, &Haf, &H8, &H68, &Hc9, &Ha7, &Hd7, &H33, &H66, 12)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceClass_IconPath = pkk
End Function
Public Function DEVPKEY_DeviceClass_DHPRebalanceOptOut() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &Hd14d3ef3, &H66cf, &H4ba2, &H9d, &H38, &H0d, &Hdb, &H37, &Hab, &H47, &H01, 2)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceClass_DHPRebalanceOptOut = pkk
End Function
Public Function DEVPKEY_DeviceClass_ClassCoInstallers() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H713d1703, &Ha2e2, &H49f5, &H92, &H14, &H56, &H47, &H2e, &Hf3, &Hda, &H5c, 2)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceClass_ClassCoInstallers = pkk
End Function
Public Function DEVPKEY_DeviceInterface_FriendlyName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H026e516e, &Hb814, &H414b, &H83, &Hcd, &H85, &H6d, &H6f, &Hef, &H48, &H22, 2)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceInterface_FriendlyName = pkk
End Function
Public Function DEVPKEY_DeviceInterface_Enabled() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H026e516e, &Hb814, &H414b, &H83, &Hcd, &H85, &H6d, &H6f, &Hef, &H48, &H22, 3)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceInterface_Enabled = pkk
End Function
Public Function DEVPKEY_DeviceInterface_ClassGuid() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H026e516e, &Hb814, &H414b, &H83, &Hcd, &H85, &H6d, &H6f, &Hef, &H48, &H22, 4)
 'DEVPROP_TYPE_GUID
DEVPKEY_DeviceInterface_ClassGuid = pkk
End Function
Public Function DEVPKEY_DeviceInterface_ReferenceString() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H026e516e, &Hb814, &H414b, &H83, &Hcd, &H85, &H6d, &H6f, &Hef, &H48, &H22, 5)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceInterface_ReferenceString = pkk
End Function
Public Function DEVPKEY_DeviceInterface_Restricted() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H026e516e, &Hb814, &H414b, &H83, &Hcd, &H85, &H6d, &H6f, &Hef, &H48, &H22, 6)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceInterface_Restricted = pkk
End Function
Public Function DEVPKEY_DeviceInterface_UnrestrictedAppCapabilities() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H026e516e, &Hb814, &H414b, &H83, &Hcd, &H85, &H6d, &H6f, &Hef, &H48, &H22, 8)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceInterface_UnrestrictedAppCapabilities = pkk
End Function
Public Function DEVPKEY_DeviceInterface_SchematicName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H026e516e, &Hb814, &H414b, &H83, &Hcd, &H85, &H6d, &H6f, &Hef, &H48, &H22, 9)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceInterface_SchematicName = pkk
End Function
Public Function DEVPKEY_DeviceInterfaceClass_DefaultInterface() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H14c83a99, &H0b3f, &H44b7, &Hbe, &H4c, &Ha1, &H78, &Hd3, &H99, &H05, &H64, 2)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceInterfaceClass_DefaultInterface = pkk
End Function
Public Function DEVPKEY_DeviceInterfaceClass_Name() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H14c83a99, &H0b3f, &H44b7, &Hbe, &H4c, &Ha1, &H78, &Hd3, &H99, &H05, &H64, 3)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceInterfaceClass_Name = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Address() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 51)
 'DEVPROP_TYPE_STRING | DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_Address = pkk
End Function
Public Function DEVPKEY_DeviceContainer_DiscoveryMethod() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 52)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_DiscoveryMethod = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsEncrypted() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 53)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsEncrypted = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsAuthenticated() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 54)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsAuthenticated = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsConnected() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 55)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsConnected = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsPaired() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 56)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsPaired = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Icon() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 57)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_Icon = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Version() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 65)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_Version = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Last_Seen() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 66)
 'DEVPROP_TYPE_FILETIME
DEVPKEY_DeviceContainer_Last_Seen = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Last_Connected() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 67)
 'DEVPROP_TYPE_FILETIME
DEVPKEY_DeviceContainer_Last_Connected = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsShowInDisconnectedState() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 68)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsShowInDisconnectedState = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsLocalMachine() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 70)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsLocalMachine = pkk
End Function
Public Function DEVPKEY_DeviceContainer_MetadataPath() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 71)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_MetadataPath = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsMetadataSearchInProgress() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 72)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsMetadataSearchInProgress = pkk
End Function
Public Function DEVPKEY_DeviceContainer_MetadataChecksum() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 73)
 'DEVPROP_TYPE_BINARY
DEVPKEY_DeviceContainer_MetadataChecksum = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsNotInterestingForDisplay() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 74)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsNotInterestingForDisplay = pkk
End Function
Public Function DEVPKEY_DeviceContainer_LaunchDeviceStageOnDeviceConnect() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 76)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_LaunchDeviceStageOnDeviceConnect = pkk
End Function
Public Function DEVPKEY_DeviceContainer_LaunchDeviceStageFromExplorer() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 77)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_LaunchDeviceStageFromExplorer = pkk
End Function
Public Function DEVPKEY_DeviceContainer_BaselineExperienceId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 78)
 'DEVPROP_TYPE_GUID
DEVPKEY_DeviceContainer_BaselineExperienceId = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsDeviceUniquelyIdentifiable() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 79)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsDeviceUniquelyIdentifiable = pkk
End Function
Public Function DEVPKEY_DeviceContainer_AssociationArray() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 80)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_AssociationArray = pkk
End Function
Public Function DEVPKEY_DeviceContainer_DeviceDescription1() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 81)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_DeviceDescription1 = pkk
End Function
Public Function DEVPKEY_DeviceContainer_DeviceDescription2() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 82)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_DeviceDescription2 = pkk
End Function
Public Function DEVPKEY_DeviceContainer_HasProblem() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 83)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_HasProblem = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsSharedDevice() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 84)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsSharedDevice = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsNetworkDevice() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 85)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsNetworkDevice = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsDefaultDevice() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 86)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsDefaultDevice = pkk
End Function
Public Function DEVPKEY_DeviceContainer_MetadataCabinet() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 87)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_MetadataCabinet = pkk
End Function
Public Function DEVPKEY_DeviceContainer_RequiresPairingElevation() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 88)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_RequiresPairingElevation = pkk
End Function
Public Function DEVPKEY_DeviceContainer_ExperienceId() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 89)
 'DEVPROP_TYPE_GUID
DEVPKEY_DeviceContainer_ExperienceId = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Category() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 90)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_Category = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Category_Desc_Singular() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 91)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_Category_Desc_Singular = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Category_Desc_Plural() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 92)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_Category_Desc_Plural = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Category_Icon() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 93)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_Category_Icon = pkk
End Function
Public Function DEVPKEY_DeviceContainer_CategoryGroup_Desc() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 94)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_CategoryGroup_Desc = pkk
End Function
Public Function DEVPKEY_DeviceContainer_CategoryGroup_Icon() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 95)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_CategoryGroup_Icon = pkk
End Function
Public Function DEVPKEY_DeviceContainer_PrimaryCategory() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 97)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_PrimaryCategory = pkk
End Function
Public Function DEVPKEY_DeviceContainer_UnpairUninstall() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 98)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_UnpairUninstall = pkk
End Function
Public Function DEVPKEY_DeviceContainer_RequiresUninstallElevation() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 99)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_RequiresUninstallElevation = pkk
End Function
Public Function DEVPKEY_DeviceContainer_DeviceFunctionSubRank() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 100)
 'DEVPROP_TYPE_UINT32
DEVPKEY_DeviceContainer_DeviceFunctionSubRank = pkk
End Function
Public Function DEVPKEY_DeviceContainer_AlwaysShowDeviceAsConnected() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 101)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_AlwaysShowDeviceAsConnected = pkk
End Function
Public Function DEVPKEY_DeviceContainer_ConfigFlags() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 105)
 'DEVPROP_TYPE_UINT32
DEVPKEY_DeviceContainer_ConfigFlags = pkk
End Function
Public Function DEVPKEY_DeviceContainer_PrivilegedPackageFamilyNames() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 106)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_PrivilegedPackageFamilyNames = pkk
End Function
Public Function DEVPKEY_DeviceContainer_CustomPrivilegedPackageFamilyNames() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 107)
 'DEVPROP_TYPE_STRING_LIST
DEVPKEY_DeviceContainer_CustomPrivilegedPackageFamilyNames = pkk
End Function
Public Function DEVPKEY_DeviceContainer_IsRebootRequired() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H78c34fc8, &H104a, &H4aca, &H9e, &Ha4, &H52, &H4d, &H52, &H99, &H6e, &H57, 108)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_IsRebootRequired = pkk
End Function
Public Function DEVPKEY_DeviceContainer_FriendlyName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H656A3BB3, &HECC0, &H43FD, &H84, &H77, &H4A, &HE0, &H40, &H4A, &H96, &HCD, 12288)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_FriendlyName = pkk
End Function
Public Function DEVPKEY_DeviceContainer_Manufacturer() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H656A3BB3, &HECC0, &H43FD, &H84, &H77, &H4A, &HE0, &H40, &H4A, &H96, &HCD, 8192)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_Manufacturer = pkk
End Function
Public Function DEVPKEY_DeviceContainer_ModelName() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H656A3BB3, &HECC0, &H43FD, &H84, &H77, &H4A, &HE0, &H40, &H4A, &H96, &HCD, 8194)
 'DEVPROP_TYPE_STRING (localizable)
DEVPKEY_DeviceContainer_ModelName = pkk
End Function
Public Function DEVPKEY_DeviceContainer_ModelNumber() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H656A3BB3, &HECC0, &H43FD, &H84, &H77, &H4A, &HE0, &H40, &H4A, &H96, &HCD, 8195)
 'DEVPROP_TYPE_STRING
DEVPKEY_DeviceContainer_ModelNumber = pkk
End Function
Public Function DEVPKEY_DeviceContainer_InstallInProgress() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H83da6326, &H97a6, &H4088, &H94, &H53, &Ha1, &H92, &H3f, &H57, &H3b, &H29, 9)
 'DEVPROP_TYPE_BOOLEAN
DEVPKEY_DeviceContainer_InstallInProgress = pkk
End Function
Public Function DEVPKEY_DevQuery_ObjectType() As PROPERTYKEY
Static pkk As PROPERTYKEY
 If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H13673f42, &Ha3d6, &H49f6, &Hb4, &Hda, &Hae, &H46, &He0, &Hc5, &H23, &H7c, 2)
 'DEVPROP_TYPE_UINT32
DEVPKEY_DevQuery_ObjectType = pkk
End Function
Public Function DEVPKEY_DeviceDisplay_DiscoveryMethod() As PROPERTYKEY
    Return DEVPKEY_DeviceContainer_DiscoveryMethod
End Function
#End Region

#Region "MiscGUIDs"
Public Function IID_IPropertyFrame() As UUID
'{B196B28B-BAB4-101A-B69C-00AA00341D07}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HB196B28B, CInt(&HBAB4), CInt(&H101A), &HB6, &H9C, &H00, &HAA, &H00, &H34, &H1D, &H07)
 IID_IPropertyFrame = iid
End Function
Public Function CLSID_CFontPropPage() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0be35200,&H8f91,&H11ce,&H9d,&He3,&H00,&Haa,&H00,&H4b,&Hb8,&H51)
CLSID_CFontPropPage = iid
End Function
Public Function CLSID_CColorPropPage() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0be35201,&H8f91,&H11ce,&H9d,&He3,&H00,&Haa,&H00,&H4b,&Hb8,&H51)
CLSID_CColorPropPage = iid
End Function
Public Function CLSID_CPicturePropPage() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0be35202,&H8f91,&H11ce,&H9d,&He3,&H00,&Haa,&H00,&H4b,&Hb8,&H51)
CLSID_CPicturePropPage = iid
End Function
Public Function CLSID_PersistPropset() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hfb8f0821,&H0164,&H101b,&H84,&Hed,&H08,&H00,&H2b,&H2e,&Hc7,&H13)
CLSID_PersistPropset = iid
End Function
Public Function CLSID_ConvertVBX() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hfb8f0822,&H0164,&H101b,&H84,&Hed,&H08,&H00,&H2b,&H2e,&Hc7,&H13)
CLSID_ConvertVBX = iid
End Function
Public Function CLSID_StdFont() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0be35203,&H8f91,&H11ce,&H9d,&He3,&H00,&Haa,&H00,&H4b,&Hb8,&H51)
CLSID_StdFont = iid
End Function
Public Function CLSID_StdPicture() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0be35204,&H8f91,&H11ce,&H9d,&He3,&H00,&Haa,&H00,&H4b,&Hb8,&H51)
CLSID_StdPicture = iid
End Function
Public Function GUID_HIMETRIC() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H66504300,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_HIMETRIC = iid
End Function
Public Function GUID_COLOR() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H66504301,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_COLOR = iid
End Function
Public Function GUID_XPOSPIXEL() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H66504302,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_XPOSPIXEL = iid
End Function
Public Function GUID_YPOSPIXEL() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H66504303,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_YPOSPIXEL = iid
End Function
Public Function GUID_XSIZEPIXEL() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H66504304,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_XSIZEPIXEL = iid
End Function
Public Function GUID_YSIZEPIXEL() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H66504305,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_YSIZEPIXEL = iid
End Function
Public Function GUID_XPOS() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H66504306,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_XPOS = iid
End Function
Public Function GUID_YPOS() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H66504307,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_YPOS = iid
End Function
Public Function GUID_XSIZE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H66504308,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_XSIZE = iid
End Function
Public Function GUID_YSIZE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H66504309,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_YSIZE = iid
End Function
Public Function GUID_TRISTATE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6650430A,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_TRISTATE = iid
End Function
Public Function GUID_OPTIONVALUEEXCLUSIVE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6650430B,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_OPTIONVALUEEXCLUSIVE = iid
End Function
Public Function GUID_CHECKVALUEEXCLUSIVE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6650430C,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_CHECKVALUEEXCLUSIVE = iid
End Function
Public Function GUID_FONTNAME() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6650430D,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_FONTNAME = iid
End Function
Public Function GUID_FONTSIZE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6650430E,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_FONTSIZE = iid
End Function
Public Function GUID_FONTBOLD() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6650430F,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_FONTBOLD = iid
End Function
Public Function GUID_FONTITALIC() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H66504310,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_FONTITALIC = iid
End Function
Public Function GUID_FONTUNDERSCORE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H66504311,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_FONTUNDERSCORE = iid
End Function
Public Function GUID_FONTSTRIKETHROUGH() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H66504312,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_FONTSTRIKETHROUGH = iid
End Function
Public Function GUID_HANDLE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H66504313,&HBE0F,&H101A,&H8B,&HBB,&H00,&HAA,&H00,&H30,&H0C,&HAB)
GUID_HANDLE = iid
End Function


Public Function EventTraceGuid() As UUID
'{68fdd900-4a3e-11d1-84f4-0000f80464e3}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H68FDD900, CInt(&H4A3E), CInt(&H11D1), &H84, &HF4, &H0, &H0, &HF8, &H4, &H64, &HE3)
 EventTraceGuid = iid
End Function
Public Function SystemTraceControlGuid() As UUID
'{9e814aad-3204-11d2-9a82-006008a86939}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9E814AAD, CInt(&H3204), CInt(&H11D2), &H9A, &H82, &H0, &H60, &H8, &HA8, &H69, &H39)
  SystemTraceControlGuid = iid
End Function
Public Function EventTraceConfigGuid() As UUID
'{01853a65-418f-4f36-aefc-dc0f1d2fd235}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1853A65, CInt(&H418F), CInt(&H4F36), &HAE, &HFC, &HDC, &HF, &H1D, &H2F, &HD2, &H35)
 EventTraceConfigGuid = iid
End Function
Public Function DefaultTraceSecurityGuid() As UUID
'{0811c1af-7a07-4a06-82ed-869455cdf713}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H811C1AF, CInt(&H7A07), CInt(&H4A06), &H82, &HED, &H86, &H94, &H55, &HCD, &HF7, &H13)
  DefaultTraceSecurityGuid = iid
End Function
Public Function PrivateLoggerNotificationGuid() As UUID
'{3595ab5c-042a-4c8e-b942-2d059bfeb1b1}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3595AB5C, CInt(&H42A), CInt(&H4C8E), &HB9, &H42, &H2D, &H5, &H9B, &HFE, &HB1, &HB1)
  PrivateLoggerNotificationGuid = iid
End Function
Public Function SystemIoFilterProviderGuid() As UUID
'{fbd09363-9e22-4661-b8bf-e7a34b535b8c}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hfbd09363, CInt(&H9e22), CInt(&H4661), &Hb8, &Hbf, &He7, &Ha3, &H4b, &H53, &H5b, &H8c)
 SystemIoFilterProviderGuid = iid
End Function
Public Function SystemObjectProviderGuid() As UUID
'{febd7460-3d1d-47eb-af49-c9eeb1e146f2}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hfebd7460, CInt(&H3d1d), CInt(&H47eb), &Haf, &H49, &Hc9, &Hee, &Hb1, &He1, &H46, &Hf2)
 SystemObjectProviderGuid = iid
End Function
Public Function SystemPowerProviderGuid() As UUID
'{c134884a-32d5-4488-80e5-14ed7abb8269}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hc134884a, CInt(&H32d5), CInt(&H4488), &H80, &He5, &H14, &Hed, &H7a, &Hbb, &H82, &H69)
 SystemPowerProviderGuid = iid
End Function
Public Function SystemHypervisorProviderGuid() As UUID
'{ bafa072a-918a-4bed-b622-bc152097098f}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hbafa072a, CInt(&H918a), CInt(&H4bed), &Hb6, &H22, &Hbc, &H15, &H20, &H97, &H09, &H8f)
 SystemHypervisorProviderGuid = iid
End Function
Public Function SystemLockProviderGuid() As UUID
'{721ddfd3-dacc-4e1e-b26a-a2cb31d4705a}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H721ddfd3, CInt(&Hdacc), CInt(&H4e1e), &Hb2, &H6a, &Ha2, &Hcb, &H31, &Hd4, &H70, &H5a)
 SystemLockProviderGuid = iid
End Function
Public Function SystemConfigProviderGuid() As UUID
'{fef3a8b6-318d-4b67-a96a-3b0f6b8f18fe}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hfef3a8b6, CInt(&H318d), CInt(&H4b67), &Ha9, &H6a, &H3b, &H0f, &H6b, &H8f, &H18, &Hfe)
 SystemConfigProviderGuid = iid
End Function
Public Function SystemCpuProviderGuid() As UUID
'{c6c5265f-eae8-4650-aae4-9d48603d8510}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hc6c5265f, CInt(&Heae8), CInt(&H4650), &Haa, &He4, &H9d, &H48, &H60, &H3d, &H85, &H10)
 SystemCpuProviderGuid = iid
End Function
Public Function SystemSchedulerProviderGuid() As UUID
'{599a2a76-4d91-4910-9ac7-7d33f2e97a6c}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H599a2a76, CInt(&H4d91), CInt(&H4910), &H9a, &Hc7, &H7d, &H33, &Hf2, &He9, &H7a, &H6c)
 SystemSchedulerProviderGuid = iid
End Function
Public Function SystemProfileProviderGuid() As UUID
'{bfeb0324-1cee-496f-a409-2ac2b48a6322}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hbfeb0324, CInt(&H1cee), CInt(&H496f), &Ha4, &H09, &H2a, &Hc2, &Hb4, &H8a, &H63, &H22)
 SystemProfileProviderGuid = iid
End Function
Public Function SystemIoProviderGuid() As UUID
'{3d5c43e3-0f1c-4202-b817-174c0070dc79}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3d5c43e3, CInt(&H0f1c), CInt(&H4202), &Hb8, &H17, &H17, &H4c, &H00, &H70, &Hdc, &H79)
 SystemIoProviderGuid = iid
End Function
Public Function SystemMemoryProviderGuid() As UUID
'{82958ca9-b6cd-47f8-a3a8-03ae85a4bc24}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H82958ca9, CInt(&Hb6cd), CInt(&H47f8), &Ha3, &Ha8, &H03, &Hae, &H85, &Ha4, &Hbc, &H24)
 SystemMemoryProviderGuid = iid
End Function
Public Function SystemRegistryProviderGuid() As UUID
'{16156bd9-fab4-4cfa-a232-89d1099058e3}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H16156bd9, CInt(&Hfab4), CInt(&H4cfa), &Ha2, &H32, &H89, &Hd1, &H09, &H90, &H58, &He3)
 SystemRegistryProviderGuid = iid
End Function
Public Function SystemProcessProviderGuid() As UUID
'{151f55dc-467d-471f-83b5-5f889d46ff66}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H151f55dc, CInt(&H467d), CInt(&H471f), &H83, &Hb5, &H5f, &H88, &H9d, &H46, &Hff, &H66)
 SystemProcessProviderGuid = iid
End Function
Public Function SystemAlpcProviderGuid() As UUID
'{fcb9baaf-e529-4980-92e9-ced1a6aadfdf}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hfcb9baaf, CInt(&He529), CInt(&H4980), &H92, &He9, &Hce, &Hd1, &Ha6, &Haa, &Hdf, &Hdf)
 SystemAlpcProviderGuid = iid
End Function
Public Function SystemSyscallProviderGuid() As UUID
'{434286f7-6f1b-45bb-b37e-95f623046c7c}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H434286f7, CInt(&H6f1b), CInt(&H45bb), &Hb3, &H7e, &H95, &Hf6, &H23, &H04, &H6c, &H7c)
 SystemSyscallProviderGuid = iid
End Function
Public Function SystemInterruptProviderGuid() As UUID
'{d4bbee17-b545-4888-858b-744169015b25}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hd4bbee17, CInt(&Hb545), CInt(&H4888), &H85, &H8b, &H74, &H41, &H69, &H01, &H5b, &H25)
 SystemInterruptProviderGuid = iid
End Function
Public Function SystemTimerProviderGuid() As UUID
'{4f061568-e215-499f-ab2e-eda0ae890a5b}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4f061568, CInt(&He215), CInt(&H499f), &Hab, &H2e, &Hed, &Ha0, &Hae, &H89, &H0a, &H5b)
 SystemTimerProviderGuid = iid
End Function
Public Function SystemConfigGuid() As UUID
'{01853a65-418f-4f36-aefc-dc0f1d2fd235}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1853A65, CInt(&H418F), CInt(&H4F36), &HAE, &HFC, &HDC, &HF, &H1D, &H2F, &HD2, &H35)
  SystemConfigGuid = iid
End Function
Public Function DiskIoGuid() As UUID
'{3d6fa8d4-fe05-11d0-9dda-00c04fd7ba7c}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3D6FA8D4, CInt(&HFE05), CInt(&H11D0), &H9D, &HDA, &H0, &HC0, &H4F, &HD7, &HBA, &H7C)
  DiskIoGuid = iid
End Function
Public Function FileIoGuid() As UUID
' 0x90cbdc39, 0x4a3e, 0x11d1, { 0x84, 0xf4, 0x00, 0x00, 0xf8, 0x04, 0x64, 0xe3
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H90CBDC39, CInt(&H4A3E), CInt(&H11D1), &H84, &HF4, &H0, &H0, &HF8, &H4, &H64, &HE3)
 FileIoGuid = iid
End Function
Public Function PerfInfoGuid() As UUID
'0xce1dbfb4, 0x137e, 0x4da6, { 0x87, 0xb0, 0x3f, 0x59, 0xaa, 0x10, 0x2c, 0xbc }
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HCE1DBFB4, CInt(&H137E), CInt(&H4DA6), &H87, &HB0, &H3F, &H59, &HAA, &O10, &H2C, &HBC)
 PerfInfoGuid = iid
End Function
Public Function TcpIpGuid() As UUID
'{9a280ac0-c8e0-11d1-84e2-00c04fb998a2}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9A280AC0, CInt(&HC8E0), CInt(&H11D1), &H84, &HE2, &H0, &HC0, &H4F, &HB9, &H98, &HA2)
  TcpIpGuid = iid
End Function
Public Function SplitIoGuid() As UUID
'{d837ca92-12b9-44a5-ad6a-3a65b3578aa8}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HD837CA92, CInt(&H12B9), CInt(&H44A5), &HAD, &H6A, &H3A, &H65, &HB3, &H57, &H8A, &HA8)
  SplitIoGuid = iid
End Function
Public Function RegistryGuid() As UUID
'{ae53722e-c863-11d2-8659-00c04fa321a1}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HAE53722E, CInt(&HC863), CInt(&H11D2), &H86, &H59, &H0, &HC0, &H4F, &HA3, &H21, &HA1)
  RegistryGuid = iid
End Function
Public Function ThreadGuid() As UUID
'{3d6fa8d1-fe05-11d0-9dda-00c04fd7ba7c}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3D6FA8D1, CInt(&HFE05), CInt(&H11D0), &H9D, &HDA, &H0, &HC0, &H4F, &HD7, &HBA, &H7C)
 ThreadGuid = iid
End Function
Public Function ALPCGuid() As UUID
'{45d8cccd-539f-4b72-a8b7-5c683142609a}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H45D8CCCD, CInt(&H539F), CInt(&H4B72), &HA8, &HB7, &H5C, &H68, &H31, &H42, &H60, &H9A)
 ALPCGuid = iid
End Function
Public Function HWConfigGuid() As UUID
'{01853a65-418f-4f36-aefc-dc0f1d2fd235}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1853A65, CInt(&H418F), CInt(&H4F36), &HAE, &HFC, &HDC, &HF, &H1D, &H2F, &HD2, &H35)
 HWConfigGuid = iid
End Function
Public Function ImageGuid() As UUID
'{2cb15d1d-5fc1-11d2-abe1-00a0c911f518}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2CB15D1D, CInt(&H5FC1), CInt(&H11D2), &HAB, &HE1, &H0, &HA0, &HC9, &H11, &HF5, &H18)
 ImageGuid = iid
End Function
Public Function LostEventGuid() As UUID
'{6a399ae0-4bc6-4de9-870b-3657f8947e7e}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6A399AE0, CInt(&H4BC6), CInt(&H4DE9), &H87, &HB, &H36, &H57, &HF8, &H94, &H7E, &H7E)
 LostEventGuid = iid
End Function
Public Function ObTraceGuid() As UUID
'{89497f50-effe-4440-8cf2-ce6b1cdcaca7}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H89497F50, CInt(&HEFFE), CInt(&H4440), &H8C, &HF2, &HCE, &H6B, &H1C, &HDC, &HAC, &HA7)
 ObTraceGuid = iid
End Function
Public Function PageFaultGuid() As UUID
'{3d6fa8d3-fe05-11d0-9dda-00c04fd7ba7c}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3D6FA8D3, CInt(&HFE05), CInt(&H11D0), &H9D, &HDA, &H0, &HC0, &H4F, &HD7, &HBA, &H7C)
 PageFaultGuid = iid
End Function
Public Function ProcessGuid() As UUID
'{3d6fa8d0-fe05-11d0-9dda-00c04fd7ba7c}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3D6FA8D0, CInt(&HFE05), CInt(&H11D0), &H9D, &HDA, &H0, &HC0, &H4F, &HD7, &HBA, &H7C)
 ProcessGuid = iid
End Function
Public Function StackWalkGuid() As UUID
'{def2fe46-7bd6-4b80-bd94-f57fe20d0ce3}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HDEF2FE46, CInt(&H7BD6), CInt(&H4B80), &HBD, &H94, &HF5, &H7F, &HE2, &HD, &HC, &HE3)
 StackWalkGuid = iid
End Function
Public Function UdpIpGuid() As UUID
'{bf3a50c5-a9c9-4988-a005-2df0b7c80f80}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HBF3A50C5, CInt(&HA9C9), CInt(&H4988), &HA0, &H5, &H2D, &HF0, &HB7, &HC8, &HF, &H80)
 UdpIpGuid = iid
End Function
Public Function KernelRundownGuid() As UUID
'{3b9c9951-3480-4220-9377-9c8e5184f5cd}
Static iid As UUID                            '0x3b9c9951,      0x3480,       0x4220, {0x93, 0x77, 0x9c, 0x8e, 0x51, 0x84, 0xf5, 0xcd
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3B9C9951, CInt(&H3480), CInt(&H4220), &H93, &H77, &H9C, &H8E, &H51, &H84, &HF5, &HCD)
  KernelRundownGuid = iid
End Function
Public Function VIRTUAL_STORAGE_TYPE_VENDOR_UNKNOWN() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H00000000, &H0000, &H0000, &H00, &H00, &H00, &H00, &H00, &H00, &H00, &H00)
VIRTUAL_STORAGE_TYPE_VENDOR_UNKNOWN = iid
End Function
Public Function VIRTUAL_STORAGE_TYPE_VENDOR_MICROSOFT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hec984aec, &Ha0f9, &H47e9, &H90, &H1f, &H71, &H41, &H5a, &H66, &H34, &H5b)
VIRTUAL_STORAGE_TYPE_VENDOR_MICROSOFT = iid
End Function
Public Function WINTRUST_ACTION_GENERIC_VERIFY_V2() As UUID
'{00AAC56B-CD44-11d0-8CC2-00C04FC295EE}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H00AAC56B, CInt(&HCD44), CInt(&H11d0), &H8C, &HC2, &H00, &HC0, &H4F, &HC2, &H95, &HEE)
 WINTRUST_ACTION_GENERIC_VERIFY_V2 = iid
End Function
Public Function WINTRUST_ACTION_TRUSTPROVIDER_TEST() As UUID
'{573E31F8-DDBA-11d0-8CCB-00C04FC295EE}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H573E31F8, CInt(&HDDBA), CInt(&H11d0), &H8C, &HCB, &H00, &HC0, &H4F, &HC2, &H95, &HEE)
 WINTRUST_ACTION_TRUSTPROVIDER_TEST = iid
End Function
Public Function WINTRUST_ACTION_GENERIC_CERT_VERIFY() As UUID
'{189A3842-3041-11d1-85E1-00C04FC295EE}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H189A3842, CInt(&H3041), CInt(&H11d1), &H85, &HE1, &H00, &HC0, &H4F, &HC2, &H95, &HEE)
 WINTRUST_ACTION_GENERIC_CERT_VERIFY = iid
End Function
Public Function WINTRUST_ACTION_GENERIC_CHAIN_VERIFY() As UUID
'{fc451c16-ac75-11d1-b4b8-00c04fb66ea0}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hfc451c16, CInt(&Hac75), CInt(&H11d1), &Hb4, &Hb8, &H00, &Hc0, &H4f, &Hb6, &H6e, &Ha0)
 WINTRUST_ACTION_GENERIC_CHAIN_VERIFY = iid
End Function
Public Function HTTPSPROV_ACTION() As UUID
'{573E31F8-AABA-11d0-8CCB-00C04FC295EE}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H573E31F8, CInt(&HAABA), CInt(&H11d0), &H8C, &HCB, &H00, &HC0, &H4F, &HC2, &H95, &HEE)
 HTTPSPROV_ACTION = iid
End Function
Public Function OFFICESIGN_ACTION_VERIFY() As UUID
'{5555C2CD-17FB-11d1-85C4-00C04FC295EE}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H5555C2CD, CInt(&H17FB), CInt(&H11d1), &H85, &HC4, &H00, &HC0, &H4F, &HC2, &H95, &HEE)
 OFFICESIGN_ACTION_VERIFY = iid
End Function
Public Function DRIVER_ACTION_VERIFY() As UUID
'{F750E6C3-38EE-11d1-85E5-00C04FC295EE}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HF750E6C3, CInt(&H38EE), CInt(&H11d1), &H85, &HE5, &H00, &HC0, &H4F, &HC2, &H95, &HEE)
 DRIVER_ACTION_VERIFY = iid
End Function
Public Function  GUID_MAX_POWER_SAVINGS() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HA1841308, &H3541, &H4FAB, &HBC, &H81, &HF7, &H15, &H56, &HF2, &H0B, &H4A )
 GUID_MAX_POWER_SAVINGS = iid
End Function
Public Function  GUID_MIN_POWER_SAVINGS() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H8C5E7FDA, &HE8BF, &H4A96, &H9A, &H85, &HA6, &HE2, &H3A, &H8C, &H63, &H5C )
 GUID_MIN_POWER_SAVINGS = iid
End Function
Public Function  GUID_TYPICAL_POWER_SAVINGS() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H381B4222, &HF694, &H41F0, &H96, &H85, &HFF, &H5B, &HB2, &H60, &HDF, &H2E )
 GUID_TYPICAL_POWER_SAVINGS = iid
End Function
Public Function  NO_SUBGROUP_GUID() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HFEA3413E, &H7E05, &H4911, &H9A, &H71, &H70, &H03, &H31, &HF1, &HC2, &H94 )
 NO_SUBGROUP_GUID = iid
End Function
Public Function  ALL_POWERSCHEMES_GUID() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H68A1E95E, &H13EA, &H41E1, &H80, &H11, &H0C, &H49, &H6C, &HA4, &H90, &HB0 )
 ALL_POWERSCHEMES_GUID = iid
End Function
Public Function  GUID_POWERSCHEME_PERSONALITY() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H245D8541, &H3943, &H4422, &HB0, &H25, &H13, &HA7, &H84, &HF6, &H79, &HB7 )
 GUID_POWERSCHEME_PERSONALITY = iid
End Function
Public Function  GUID_ACTIVE_POWERSCHEME() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H31F9F286, &H5084, &H42FE, &HB7, &H20, &H2B, &H02, &H64, &H99, &H37, &H63 )
 GUID_ACTIVE_POWERSCHEME = iid
End Function
Public Function GUID_IDLE_RESILIENCY_SUBGROUP() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2e601130, &H5351, &H4d9d, &H8e, &H4, &H25, &H29, &H66, &Hba, &Hd0, &H54)
GUID_IDLE_RESILIENCY_SUBGROUP = iid
End Function
Public Function GUID_IDLE_RESILIENCY_PERIOD() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hc42b79aa, &Haa3a, &H484b, &Ha9, &H8f, &H2c, &Hf3, &H2a, &Ha9, &Ha, &H28)
GUID_IDLE_RESILIENCY_PERIOD = iid
End Function
Public Function GUID_DEEP_SLEEP_ENABLED() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hd502f7ee, &H1dc7, &H4efd, &Ha5, &H5d, &Hf0, &H4b, &H6f, &H5c, &H5, &H45)
GUID_DEEP_SLEEP_ENABLED = iid
End Function
Public Function GUID_DEEP_SLEEP_PLATFORM_STATE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hd23f2fb8, &H9536, &H4038, &H9c, &H94, &H1c, &He0, &H2e, &H5c, &H21, &H52)
GUID_DEEP_SLEEP_PLATFORM_STATE = iid
End Function
Public Function GUID_DISK_COALESCING_POWERDOWN_TIMEOUT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hc36f0eb4, &H2988, &H4a70, &H8e, &Hee, &H8, &H84, &Hfc, &H2c, &H24, &H33)
GUID_DISK_COALESCING_POWERDOWN_TIMEOUT = iid
End Function
Public Function GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3166bc41, &H7e98, &H4e03, &Hb3, &H4e, &Hec, &Hf, &H5f, &H2b, &H21, &H8e)
GUID_EXECUTION_REQUIRED_REQUEST_TIMEOUT = iid
End Function
Public Function  GUID_VIDEO_SUBGROUP() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7516B95F, &HF776, &H4464, &H8C, &H53, &H06, &H16, &H7F, &H40, &HCC, &H99 )
 GUID_VIDEO_SUBGROUP = iid
End Function
Public Function  GUID_VIDEO_POWERDOWN_TIMEOUT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3C0BC021, &HC8A8, &H4E07, &HA9, &H73, &H6B, &H14, &HCB, &HCB, &H2B, &H7E )
 GUID_VIDEO_POWERDOWN_TIMEOUT = iid
End Function
Public Function  GUID_VIDEO_ANNOYANCE_TIMEOUT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H82DBCF2D, &HCD67, &H40C5, &HBF, &HDC, &H9F, &H1A, &H5C, &HCD, &H46, &H63 )
 GUID_VIDEO_ANNOYANCE_TIMEOUT = iid
End Function
Public Function  GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HEED904DF, &HB142, &H4183, &HB1, &H0B, &H5A, &H11, &H97, &HA3, &H78, &H64 )
 GUID_VIDEO_ADAPTIVE_PERCENT_INCREASE = iid
End Function
Public Function  GUID_VIDEO_DIM_TIMEOUT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H17aaa29b, &H8b43, &H4b94, &Haa, &Hfe, &H35, &Hf6, &H4d, &Haa, &Hf1, &Hee)
 GUID_VIDEO_DIM_TIMEOUT = iid
End Function
Public Function  GUID_VIDEO_ADAPTIVE_POWERDOWN() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H90959D22, &HD6A1, &H49B9, &HAF, &H93, &HBC, &HE8, &H85, &HAD, &H33, &H5B )
 GUID_VIDEO_ADAPTIVE_POWERDOWN = iid
End Function
Public Function  GUID_MONITOR_POWER_ON() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H02731015, &H4510, &H4526, &H99, &HE6, &HE5, &HA1, &H7E, &HBD, &H1A, &HEA )
 GUID_MONITOR_POWER_ON = iid
End Function
Public Function GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Haded5e82, &Hb909, &H4619, &H99, &H49, &Hf5, &Hd7, &H1d, &Hac, &H0b, &Hcb)
GUID_DEVICE_POWER_POLICY_VIDEO_BRIGHTNESS = iid
End Function
Public Function GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hf1fbfde2, &Ha960, &H4165, &H9f, &H88, &H50, &H66, &H79, &H11, &Hce, &H96)
GUID_DEVICE_POWER_POLICY_VIDEO_DIM_BRIGHTNESS = iid
End Function
Public Function GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H8ffee2c6, &H2d01, &H46be, &Had, &Hb9, &H39, &H8a, &Hdd, &Hc5, &Hb4, &Hff)
GUID_VIDEO_CURRENT_MONITOR_BRIGHTNESS = iid
End Function
Public Function GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HFBD9AA66, &H9553, &H4097, &HBA, &H44, &HED, &H6E, &H9D, &H65, &HEA, &HB8)
GUID_VIDEO_ADAPTIVE_DISPLAY_BRIGHTNESS = iid
End Function
Public Function GUID_CONSOLE_DISPLAY_STATE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6fe69556, &H704a, &H47a0, &H8f, &H24, &Hc2, &H8d, &H93, &H6f, &Hda, &H47)
GUID_CONSOLE_DISPLAY_STATE = iid
End Function
Public Function  GUID_ALLOW_DISPLAY_REQUIRED() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HA9CEB8DA, &HCD46, &H44FB, &HA9, &H8B, &H02, &HAF, &H69, &HDE, &H46, &H23 )
 GUID_ALLOW_DISPLAY_REQUIRED = iid
End Function
Public Function GUID_VIDEO_CONSOLE_LOCK_TIMEOUT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H8ec4b3a5, &H6868, &H48c2, &Hbe, &H75, &H4f, &H30, &H44, &Hbe, &H88, &Ha7)
GUID_VIDEO_CONSOLE_LOCK_TIMEOUT = iid
End Function
Public Function GUID_ADVANCED_COLOR_QUALITY_BIAS() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H684c3e69, &Ha4f7, &H4014, &H87, &H54, &Hd4, &H51, &H79, &Ha5, &H61, &H67)
GUID_ADVANCED_COLOR_QUALITY_BIAS = iid
End Function
Public Function GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H8619b916, &He004, &H4dd8, &H9b, &H66, &Hda, &He8, &H6f, &H80, &H66, &H98)
GUID_ADAPTIVE_POWER_BEHAVIOR_SUBGROUP = iid
End Function
Public Function GUID_NON_ADAPTIVE_INPUT_TIMEOUT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H5adbbfbc, &H74e, &H4da1, &Hba, &H38, &Hdb, &H8b, &H36, &Hb2, &Hc8, &Hf3)
GUID_NON_ADAPTIVE_INPUT_TIMEOUT = iid
End Function
Public Function GUID_ADAPTIVE_INPUT_CONTROLLER_STATE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &He98fae9, &Hf45a, &H4de1, &Ha7, &H57, &H60, &H31, &Hf1, &H97, &Hf6, &Hea)
GUID_ADAPTIVE_INPUT_CONTROLLER_STATE = iid
End Function
Public Function  GUID_DISK_SUBGROUP() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0012EE47, &H9041, &H4B5D, &H9B, &H77, &H53, &H5F, &HBA, &H8B, &H14, &H42 )
 GUID_DISK_SUBGROUP = iid
End Function
Public Function GUID_DISK_MAX_POWER() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H51dea550, &Hbb38, &H4bc4, &H99, &H1b, &Hea, &Hcf, &H37, &Hbe, &H5e, &Hc8)
GUID_DISK_MAX_POWER = iid
End Function
Public Function  GUID_DISK_POWERDOWN_TIMEOUT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6738E2C4, &HE8A5, &H4A42, &HB1, &H6A, &HE0, &H40, &HE7, &H69, &H75, &H6E )
 GUID_DISK_POWERDOWN_TIMEOUT = iid
End Function
Public Function  GUID_DISK_IDLE_TIMEOUT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H58E39BA8, &HB8E6, &H4EF6, &H90, &HD0, &H89, &HAE, &H32, &HB2, &H58, &HD6 )
 GUID_DISK_IDLE_TIMEOUT = iid
End Function
Public Function  GUID_DISK_BURST_IGNORE_THRESHOLD() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H80e3c60e, &Hbb94, &H4ad8, &Hbb, &He0, &H0d, &H31, &H95, &Hef, &Hc6, &H63 )
 GUID_DISK_BURST_IGNORE_THRESHOLD = iid
End Function
Public Function  GUID_DISK_ADAPTIVE_POWERDOWN() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H396A32E1, &H499A, &H40B2, &H91, &H24, &HA9, &H6A, &HFE, &H70, &H76, &H67 )
 GUID_DISK_ADAPTIVE_POWERDOWN = iid
End Function
Public Function GUID_DISK_NVME_NOPPME() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hfc7372b6, &Hab2d, &H43ee, &H87, &H97, &H15, &He9, &H84, &H1f, &H2c, &Hca)
GUID_DISK_NVME_NOPPME = iid
End Function
Public Function  GUID_SLEEP_SUBGROUP() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H238C9FA8, &H0AAD, &H41ED, &H83, &HF4, &H97, &HBE, &H24, &H2C, &H8F, &H20 )
 GUID_SLEEP_SUBGROUP = iid
End Function
Public Function  GUID_SLEEP_IDLE_THRESHOLD() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H81cd32e0, &H7833, &H44f3, &H87, &H37, &H70, &H81, &Hf3, &H8d, &H1f, &H70 )
 GUID_SLEEP_IDLE_THRESHOLD = iid
End Function
Public Function  GUID_STANDBY_TIMEOUT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H29F6C1DB, &H86DA, &H48C5, &H9F, &HDB, &HF2, &HB6, &H7B, &H1F, &H44, &HDA )
 GUID_STANDBY_TIMEOUT = iid
End Function
Public Function  GUID_UNATTEND_SLEEP_TIMEOUT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7bc4a2f9, &Hd8fc, &H4469, &Hb0, &H7b, &H33, &Heb, &H78, &H5a, &Hac, &Ha0 )
 GUID_UNATTEND_SLEEP_TIMEOUT = iid
End Function
Public Function  GUID_HIBERNATE_TIMEOUT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9D7815A6, &H7EE4, &H497E, &H88, &H88, &H51, &H5A, &H05, &HF0, &H23, &H64 )
 GUID_HIBERNATE_TIMEOUT = iid
End Function
Public Function  GUID_HIBERNATE_FASTS4_POLICY() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H94AC6D29, &H73CE, &H41A6, &H80, &H9F, &H63, &H63, &HBA, &H21, &HB4, &H7E )
 GUID_HIBERNATE_FASTS4_POLICY = iid
End Function
Public Function  GUID_CRITICAL_POWER_TRANSITION() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid,  &HB7A27025, &HE569, &H46c2, &HA5, &H04, &H2B, &H96, &HCA, &HD2, &H25, &HA1)
 GUID_CRITICAL_POWER_TRANSITION = iid
End Function
Public Function  GUID_SYSTEM_AWAYMODE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H98A7F580, &H01F7, &H48AA, &H9C, &H0F, &H44, &H35, &H2C, &H29, &HE5, &HC0 )
 GUID_SYSTEM_AWAYMODE = iid
End Function
Public Function  GUID_ALLOW_AWAYMODE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H25dfa149, &H5dd1, &H4736, &Hb5, &Hab, &He8, &Ha3, &H7b, &H5b, &H81, &H87 )
 GUID_ALLOW_AWAYMODE = iid
End Function
Public Function  GUID_USER_PRESENCE_PREDICTION() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H82011705, &Hfb95, &H4d46, &H8d, &H35, &H40, &H42, &Hb1, &Hd2, &Hd, &Hef )
 GUID_USER_PRESENCE_PREDICTION = iid
End Function
Public Function  GUID_STANDBY_BUDGET_GRACE_PERIOD() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H60c07fe1, &H0556, &H45cf, &H99, &H03, &Hd5, &H6e, &H32, &H21, &H2, &H42 )
 GUID_STANDBY_BUDGET_GRACE_PERIOD = iid
End Function
Public Function  GUID_STANDBY_BUDGET_PERCENT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9fe527be, &H1b70, &H48da, &H93, &H0d, &H7b, &Hcf, &H17, &Hb4, &H49, &H90 )
 GUID_STANDBY_BUDGET_PERCENT = iid
End Function
Public Function  GUID_STANDBY_RESERVE_GRACE_PERIOD() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hc763ee92, &H71e8, &H4127, &H84, &Heb, &Hf6, &Hed, &H04, &H3a, &H3e, &H3d )
 GUID_STANDBY_RESERVE_GRACE_PERIOD = iid
End Function
Public Function  GUID_STANDBY_RESERVE_TIME() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H468FE7E5, &H1158, &H46EC, &H88, &Hbc, &H5b, &H96, &Hc9, &He4, &H4f, &Hd0 )
 GUID_STANDBY_RESERVE_TIME = iid
End Function
Public Function GUID_STANDBY_RESET_PERCENT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H49cb11a5, &H56e2, &H4afb, &H9d, &H38, &H3d, &Hf4, &H78, &H72, &He2, &H1b)
GUID_STANDBY_RESET_PERCENT = iid
End Function
Public Function GUID_HUPR_ADAPTIVE_DISPLAY_TIMEOUT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0A7D6AB6, &HAC83, &H4AD1, &H82, &H82, &HEC, &HA5, &HB5, &H83, &H08, &HF3)
GUID_HUPR_ADAPTIVE_DISPLAY_TIMEOUT = iid
End Function
Public Function GUID_HUPR_ADAPTIVE_DIM_TIMEOUT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HCF8C6097, &H12B8, &H4279, &HBB, &HDD, &H44, &H60, &H1E, &HE5, &H20, &H9D)
GUID_HUPR_ADAPTIVE_DIM_TIMEOUT = iid
End Function
Public Function  GUID_ALLOW_STANDBY_STATES() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Habfc2519, &H3608, &H4c2a, &H94, &Hea, &H17, &H1b, &H0e, &Hd5, &H46, &Hab )
 GUID_ALLOW_STANDBY_STATES = iid
End Function
Public Function  GUID_ALLOW_RTC_WAKE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HBD3B718A, &H0680, &H4D9D, &H8A, &HB2, &HE1, &HD2, &HB4, &HAC, &H80, &H6D )
 GUID_ALLOW_RTC_WAKE = iid
End Function
Public Function  GUID_LEGACY_RTC_MITIGATION() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1A34BDC3, &H7E6B, &H442E, &HA9, &HD0, &H64, &HB6, &HEF, &H37, &H8E, &H84 )
 GUID_LEGACY_RTC_MITIGATION = iid
End Function
Public Function  GUID_ALLOW_SYSTEM_REQUIRED() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HA4B195F5, &H8225, &H47D8, &H80, &H12, &H9D, &H41, &H36, &H97, &H86, &HE2 )
 GUID_ALLOW_SYSTEM_REQUIRED = iid
End Function
Public Function  GUID_POWER_SAVING_STATUS() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &He00958c0, &Hc213, &H4ace, &Hac, &H77, &Hfe, &Hcc, &Hed, &H2e, &Hee, &Ha5)
 GUID_POWER_SAVING_STATUS = iid
End Function
Public Function  GUID_ENERGY_SAVER_SUBGROUP() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HDE830923, &HA562, &H41AF, &HA0, &H86, &HE3, &HA2, &HC6, &HBA, &HD2, &HDA )
 GUID_ENERGY_SAVER_SUBGROUP = iid
End Function
Public Function  GUID_ENERGY_SAVER_BATTERY_THRESHOLD() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HE69653CA, &HCF7F, &H4F05, &HAA, &H73, &HCB, &H83, &H3F, &HA9, &H0A, &HD4 )
 GUID_ENERGY_SAVER_BATTERY_THRESHOLD = iid
End Function
Public Function  GUID_ENERGY_SAVER_BRIGHTNESS() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H13D09884, &HF74E, &H474A, &HA8, &H52, &HB6, &HBD, &HE8, &HAD, &H03, &HA8 )
 GUID_ENERGY_SAVER_BRIGHTNESS = iid
End Function
Public Function  GUID_ENERGY_SAVER_POLICY() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H5c5bb349, &Had29, &H4ee2, &H9d, &Hb, &H2b, &H25, &H27, &Hf, &H7a, &H81 )
 GUID_ENERGY_SAVER_POLICY = iid
End Function
Public Function  GUID_SYSTEM_BUTTON_SUBGROUP() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4F971E89, &HEEBD, &H4455, &HA8, &HDE, &H9E, &H59, &H04, &H0E, &H73, &H47 )
 GUID_SYSTEM_BUTTON_SUBGROUP = iid
End Function
Public Function  GUID_POWERBUTTON_ACTION() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7648EFA3, &HDD9C, &H4E3E, &HB5, &H66, &H50, &HF9, &H29, &H38, &H62, &H80 )
 GUID_POWERBUTTON_ACTION = iid
End Function
Public Function  GUID_SLEEPBUTTON_ACTION() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H96996BC0, &HAD50, &H47EC, &H92, &H3B, &H6F, &H41, &H87, &H4D, &HD9, &HEB )
 GUID_SLEEPBUTTON_ACTION = iid
End Function
Public Function  GUID_USERINTERFACEBUTTON_ACTION() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HA7066653, &H8D6C, &H40A8, &H91, &H0E, &HA1, &HF5, &H4B, &H84, &HC7, &HE5 )
 GUID_USERINTERFACEBUTTON_ACTION = iid
End Function
Public Function  GUID_LIDCLOSE_ACTION() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H5CA83367, &H6E45, &H459F, &HA2, &H7B, &H47, &H6B, &H1D, &H01, &HC9, &H36 )
 GUID_LIDCLOSE_ACTION = iid
End Function
Public Function  GUID_LIDOPEN_POWERSTATE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H99FF10E7, &H23B1, &H4C07, &HA9, &HD1, &H5C, &H32, &H06, &HD7, &H41, &HB4 )
 GUID_LIDOPEN_POWERSTATE = iid
End Function
Public Function  GUID_BATTERY_SUBGROUP() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HE73A048D, &HBF27, &H4F12, &H97, &H31, &H8B, &H20, &H76, &HE8, &H89, &H1F )
 GUID_BATTERY_SUBGROUP = iid
End Function
Public Function  GUID_BATTERY_DISCHARGE_ACTION_0() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H637EA02F, &HBBCB, &H4015, &H8E, &H2C, &HA1, &HC7, &HB9, &HC0, &HB5, &H46 )
 GUID_BATTERY_DISCHARGE_ACTION_0 = iid
End Function
Public Function  GUID_BATTERY_DISCHARGE_LEVEL_0() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9A66D8D7, &H4FF7, &H4EF9, &HB5, &HA2, &H5A, &H32, &H6C, &HA2, &HA4, &H69 )
 GUID_BATTERY_DISCHARGE_LEVEL_0 = iid
End Function
Public Function  GUID_BATTERY_DISCHARGE_FLAGS_0() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H5dbb7c9f, &H38e9, &H40d2, &H97, &H49, &H4f, &H8a, &H0e, &H9f, &H64, &H0f )
 GUID_BATTERY_DISCHARGE_FLAGS_0 = iid
End Function
Public Function  GUID_BATTERY_DISCHARGE_ACTION_1() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HD8742DCB, &H3E6A, &H4B3C, &HB3, &HFE, &H37, &H46, &H23, &HCD, &HCF, &H06 )
 GUID_BATTERY_DISCHARGE_ACTION_1 = iid
End Function
Public Function  GUID_BATTERY_DISCHARGE_LEVEL_1() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H8183BA9A, &HE910, &H48DA, &H87, &H69, &H14, &HAE, &H6D, &HC1, &H17, &H0A )
 GUID_BATTERY_DISCHARGE_LEVEL_1 = iid
End Function
Public Function  GUID_BATTERY_DISCHARGE_FLAGS_1() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hbcded951, &H187b, &H4d05, &Hbc, &Hcc, &Hf7, &He5, &H19, &H60, &Hc2, &H58 )
 GUID_BATTERY_DISCHARGE_FLAGS_1 = iid
End Function
Public Function  GUID_BATTERY_DISCHARGE_ACTION_2() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H421CBA38, &H1A8E, &H4881, &HAC, &H89, &HE3, &H3A, &H8B, &H04, &HEC, &HE4 )
 GUID_BATTERY_DISCHARGE_ACTION_2 = iid
End Function
Public Function  GUID_BATTERY_DISCHARGE_LEVEL_2() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H07A07CA2, &HADAF, &H40D7, &HB0, &H77, &H53, &H3A, &HAD, &HED, &H1B, &HFA )
 GUID_BATTERY_DISCHARGE_LEVEL_2 = iid
End Function
Public Function  GUID_BATTERY_DISCHARGE_FLAGS_2() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7fd2f0c4, &Hfeb7, &H4da3, &H81, &H17, &He3, &Hfb, &Hed, &Hc4, &H65, &H82 )
 GUID_BATTERY_DISCHARGE_FLAGS_2 = iid
End Function
Public Function  GUID_BATTERY_DISCHARGE_ACTION_3() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H80472613, &H9780, &H455E, &HB3, &H08, &H72, &HD3, &H00, &H3C, &HF2, &HF8 )
 GUID_BATTERY_DISCHARGE_ACTION_3 = iid
End Function
Public Function  GUID_BATTERY_DISCHARGE_LEVEL_3() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H58AFD5A6, &HC2DD, &H47D2, &H9F, &HBF, &HEF, &H70, &HCC, &H5C, &H59, &H65 )
 GUID_BATTERY_DISCHARGE_LEVEL_3 = iid
End Function
Public Function  GUID_BATTERY_DISCHARGE_FLAGS_3() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H73613ccf, &Hdbfa, &H4279, &H83, &H56, &H49, &H35, &Hf6, &Hbf, &H62, &Hf3 )
 GUID_BATTERY_DISCHARGE_FLAGS_3 = iid
End Function
Public Function  GUID_PROCESSOR_SETTINGS_SUBGROUP() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H54533251, &H82BE, &H4824, &H96, &HC1, &H47, &HB6, &H0B, &H74, &H0D, &H00 )
 GUID_PROCESSOR_SETTINGS_SUBGROUP = iid
End Function
Public Function  GUID_PROCESSOR_THROTTLE_POLICY() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H57027304, &H4AF6, &H4104, &H92, &H60, &HE3, &HD9, &H52, &H48, &HFC, &H36 )
 GUID_PROCESSOR_THROTTLE_POLICY = iid
End Function
Public Function  GUID_PROCESSOR_THROTTLE_MAXIMUM() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HBC5038F7, &H23E0, &H4960, &H96, &HDA, &H33, &HAB, &HAF, &H59, &H35, &HEC )
 GUID_PROCESSOR_THROTTLE_MAXIMUM = iid
End Function
Public Function  GUID_PROCESSOR_THROTTLE_MAXIMUM_1() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HBC5038F7, &H23E0, &H4960, &H96, &HDA, &H33, &HAB, &HAF, &H59, &H35, &HED )
 GUID_PROCESSOR_THROTTLE_MAXIMUM_1 = iid
End Function
Public Function  GUID_PROCESSOR_THROTTLE_MINIMUM() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H893DEE8E, &H2BEF, &H41E0, &H89, &HC6, &HB5, &H5D, &H09, &H29, &H96, &H4C )
 GUID_PROCESSOR_THROTTLE_MINIMUM = iid
End Function
Public Function  GUID_PROCESSOR_THROTTLE_MINIMUM_1() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H893DEE8E, &H2BEF, &H41E0, &H89, &HC6, &HB5, &H5D, &H09, &H29, &H96, &H4D )
 GUID_PROCESSOR_THROTTLE_MINIMUM_1 = iid
End Function
Public Function GUID_PROCESSOR_FREQUENCY_LIMIT() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H75b0ae3f, &Hbce0, &H45a7, &H8c, &H89, &Hc9, &H61, &H1c, &H25, &He1, &H00)
GUID_PROCESSOR_FREQUENCY_LIMIT = iid
End Function
Public Function GUID_PROCESSOR_FREQUENCY_LIMIT_1() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H75b0ae3f, &Hbce0, &H45a7, &H8c, &H89, &Hc9, &H61, &H1c, &H25, &He1, &H01)
GUID_PROCESSOR_FREQUENCY_LIMIT_1 = iid
End Function
Public Function  GUID_PROCESSOR_ALLOW_THROTTLING() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3b04d4fd, &H1cc7, &H4f23, &Hab, &H1c, &Hd1, &H33, &H78, &H19, &Hc4, &Hbb )
 GUID_PROCESSOR_ALLOW_THROTTLING = iid
End Function
Public Function  GUID_ACDC_POWER_SOURCE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H5D3E9A59, &HE9D5, &H4B00, &HA6, &HBD, &HFF, &H34, &HFF, &H51, &H65, &H48 )
 GUID_ACDC_POWER_SOURCE = iid
End Function
Public Function  GUID_BATTERY_PERCENTAGE_REMAINING() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HA7AD8041, &HB45A, &H4CAE, &H87, &HA3, &HEE, &HCB, &HB4, &H68, &HA9, &HE1 )
 GUID_BATTERY_PERCENTAGE_REMAINING = iid
End Function
Public Function  GUID_GLOBAL_USER_PRESENCE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H786e8a1d, &Hb427, &H4344, &H92, &H7, &H9, &He7, &Hb, &Hdc, &Hbe, &Ha9 )
 GUID_GLOBAL_USER_PRESENCE = iid
End Function
Public Function  GUID_SESSION_USER_PRESENCE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3c0f4548, &Hc03f, &H4c4d, &Hb9, &Hf2, &H23, &H7e, &Hde, &H68, &H63, &H76 )
 GUID_SESSION_USER_PRESENCE = iid
End Function
Public Function  GUID_IDLE_BACKGROUND_TASK() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H515C31D8, &HF734, &H163D, &HA0, &HFD, &H11, &HA0, &H8C, &H91, &HE8, &HF1 )
 GUID_IDLE_BACKGROUND_TASK = iid
End Function
Public Function  GUID_SESSION_DISPLAY_STATUS() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2b84c20e, &Had23, &H4ddf, &H93, &Hdb, &H5, &Hff, &Hbd, &H7e, &Hfc, &Ha5 )
 GUID_SESSION_DISPLAY_STATUS = iid
End Function
Public Function  GUID_LIDSWITCH_STATE_CHANGE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid,  &HBA3E0F4D, &HB817, &H4094, &HA2, &HD1, &HD5, &H63, &H79, &HE6, &HA0, &HF3 )
 GUID_LIDSWITCH_STATE_CHANGE = iid
End Function
Public Function  GUID_PCIEXPRESS_SETTINGS_SUBGROUP() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H501a4d13, &H42af,&H4429, &H9f, &Hd1, &Ha8, &H21, &H8c, &H26, &H8e, &H20 )
 GUID_PCIEXPRESS_SETTINGS_SUBGROUP = iid
End Function
Public Function  GUID_PCIEXPRESS_ASPM_POLICY() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hee12f906, &Hd277, &H404b, &Hb6, &Hda, &He5, &Hfa, &H1a, &H57, &H6d, &Hf5 )
 GUID_PCIEXPRESS_ASPM_POLICY = iid
End Function
Public Function  GUID_ENABLE_SWITCH_FORCED_SHUTDOWN() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H833a6b62, &Hdfa4, &H46d1, &H82, &Hf8, &He0, &H9e, &H34, &Hd0, &H29, &Hd6 )
 GUID_ENABLE_SWITCH_FORCED_SHUTDOWN = iid
End Function
Public Function GUID_INTSTEER_SUBGROUP() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H48672f38, &H7a9a, &H4bb2, &H8b, &Hf8, &H3d, &H85, &Hbe, &H19, &Hde, &H4e)
GUID_INTSTEER_SUBGROUP = iid
End Function
Public Function GUID_INTSTEER_MODE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2bfc24f9, &H5ea2, &H4801, &H82, &H13, &H3d, &Hba, &He0, &H1a, &Ha3, &H9d)
GUID_INTSTEER_MODE = iid
End Function
Public Function GUID_INTSTEER_LOAD_PER_PROC_TRIGGER() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H73cde64d, &Hd720, &H4bb2, &Ha8, &H60, &Hc7, &H55, &Haf, &He7, &H7e, &Hf2)
GUID_INTSTEER_LOAD_PER_PROC_TRIGGER = iid
End Function
Public Function GUID_INTSTEER_TIME_UNPARK_TRIGGER() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hd6ba4903, &H386f, &H4c2c, &H8a, &Hdb, &H5c, &H21, &Hb3, &H32, &H8d, &H25)
GUID_INTSTEER_TIME_UNPARK_TRIGGER = iid
End Function
Public Function GUID_GRAPHICS_SUBGROUP() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H5fb4938d, &H1ee8, &H4b0f, &H9a, &H3c, &H50, &H36, &Hb0, &Hab, &H99, &H5c)
GUID_GRAPHICS_SUBGROUP = iid
End Function
Public Function GUID_GPU_PREFERENCE_POLICY() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hdd848b2a, &H8a5d, &H4451, &H9a, &He2, &H39, &Hcd, &H41, &H65, &H8f, &H6c)
GUID_GPU_PREFERENCE_POLICY = iid
End Function
Public Function GUID_MIXED_REALITY_MODE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1e626b4e, &Hcf04, &H4f8d, &H9c, &Hc7, &Hc9, &H7c, &H5b, &Hf, &H23, &H91)
GUID_MIXED_REALITY_MODE = iid
End Function
Public Function GUID_SPR_ACTIVE_SESSION_CHANGE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &He24ce38, &Hc393, &H4742, &Hbd, &Hb1, &H74, &H4f, &H4b, &H9e, &He0, &H8e)
GUID_SPR_ACTIVE_SESSION_CHANGE = iid
End Function
Public Function  GUID_LIDSWITCH_STATE_RELIABILITY() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HAE4C4FF1, &HD361, &H43F4, &H80, &HAA, &HBB, &HB6, &HEB, &H03, &HDE, &H94)
 GUID_LIDSWITCH_STATE_RELIABILITY = iid
End Function
Public Function  GUID_LOCK_CONSOLE_ON_WAKE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0E796BDB, &H100D, &H47D6, &HA2, &HD5, &HF7, &HD2, &HDA, &HA5, &H1F, &H51 )
 GUID_LOCK_CONSOLE_ON_WAKE = iid
End Function
Public Function  GUID_DEVICE_IDLE_POLICY() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4faab71a, &H92e5, &H4726, &Hb5, &H31, &H22, &H45, &H59, &H67, &H2d, &H19 )
 GUID_DEVICE_IDLE_POLICY = iid
End Function
Public Function  GUID_CONNECTIVITY_IN_STANDBY() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HF15576E8, &H98B7, &H4186, &HB9, &H44, &HEA, &HFA, &H66, &H44, &H02, &HD9 )
 GUID_CONNECTIVITY_IN_STANDBY = iid
End Function
Public Function  GUID_DISCONNECTED_STANDBY_MODE() As UUID
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H68AFB2D9, &HEE95, &H47A8, &H8F, &H50, &H41, &H15, &H08, &H80, &H73, &HB1 )
 GUID_DISCONNECTED_STANDBY_MODE = iid
End Function

Public Enum POWER_DEVICE_IDLE_POLICIES
    POWER_DEVICE_IDLE_POLICY_PERFORMANCE  = 0
    POWER_DEVICE_IDLE_POLICY_CONSERVATIVE  = 1
End Enum
Public Enum POWER_CONNECTIVITY_IN_STANDBY_VALUES
    POWER_CONNECTIVITY_IN_STANDBY_DISABLED  = 0
    POWER_CONNECTIVITY_IN_STANDBY_ENABLED  = 1
    POWER_CONNECTIVITY_IN_STANDBY_SYSTEM_MANAGED  = 2
End Enum
Public Enum POWER_DISCONNECTED_STANDBY_MODE_VALUES
    POWER_DISCONNECTED_STANDBY_MODE_NORMAL  = 0
    POWER_DISCONNECTED_STANDBY_MODE_AGGRESSIVE  = 1
End Enum

Public Function POLID_TryHarderPinnedLibrary() As UUID
'{03BB593B-00A5-4BFA-8F4F-4AA9CCA80CBE}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H03BB593B, CInt(&H00A5), CInt(&H4BFA), &H8F, &H4F, &H4A, &HA9, &HCC, &HA8, &H0C, &HBE)
 POLID_TryHarderPinnedLibrary = iid
End Function
Public Function POLID_NoSystraySystemPromotion() As UUID
'{050EFC52-18C2-4903-9A9F-B027F45A1C65}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H050EFC52, CInt(&H18C2), CInt(&H4903), &H9A, &H9F, &HB0, &H27, &HF4, &H5A, &H1C, &H65)
 POLID_NoSystraySystemPromotion = iid
End Function
Public Function POLID_NoInplaceSharing() As UUID
'{05278948-270A-43EC-A3DB-FA984146CCA1}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H05278948, CInt(&H270A), CInt(&H43EC), &HA3, &HDB, &HFA, &H98, &H41, &H46, &HCC, &HA1)
 POLID_NoInplaceSharing = iid
End Function
Public Function POLID_NoPinningToDestinations() As UUID
'{056522BB-B3FA-4B86-9C1D-F2DF3BDDFB07}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H056522BB, CInt(&HB3FA), CInt(&H4B86), &H9C, &H1D, &HF2, &HDF, &H3B, &HDD, &HFB, &H07)
 POLID_NoPinningToDestinations = iid
End Function
Public Function POLID_NoSearchInternetTryHarderButton() As UUID
'{06C87E74-D3A7-4B96-8682-115C5B267660}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H06C87E74, CInt(&HD3A7), CInt(&H4B96), &H86, &H82, &H11, &H5C, &H5B, &H26, &H76, &H60)
 POLID_NoSearchInternetTryHarderButton = iid
End Function
Public Function POLID_HideSCAVolume() As UUID
'{095E1984-0218-4B38-8DAC-5BCFB993C494}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H095E1984, CInt(&H0218), CInt(&H4B38), &H8D, &HAC, &H5B, &HCF, &HB9, &H93, &HC4, &H94)
 POLID_HideSCAVolume = iid
End Function
Public Function POLID_TaskbarNoResize() As UUID
'{0BC4821B-02C8-4C31-9F07-152AC075B0A6}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0BC4821B, CInt(&H02C8), CInt(&H4C31), &H9F, &H07, &H15, &H2A, &HC0, &H75, &HB0, &HA6)
 POLID_TaskbarNoResize = iid
End Function
Public Function POLID_TurnOffSPIAnimations() As UUID
'{0D7AF00A-B468-4A39-B016-333E2277ABED}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0D7AF00A, CInt(&HB468), CInt(&H4A39), &HB0, &H16, &H33, &H3E, &H22, &H77, &HAB, &HED)
 POLID_TurnOffSPIAnimations = iid
End Function
Public Function POLID_DisplayName_OpticalDisk() As UUID
'{0FA45BA3-4046-4396-9CBE-878E1D999D2F}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0FA45BA3, CInt(&H4046), CInt(&H4396), &H9C, &HBE, &H87, &H8E, &H1D, &H99, &H9D, &H2F)
 POLID_DisplayName_OpticalDisk = iid
End Function
Public Function POLID_NoUserFolderInStartMenu() As UUID
'{12BD4381-FDF8-4FDD-B008-A9CFF5BF8F62}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H12BD4381, CInt(&HFDF8), CInt(&H4FDD), &HB0, &H08, &HA9, &HCF, &HF5, &HBF, &H8F, &H62)
 POLID_NoUserFolderInStartMenu = iid
End Function
Public Function POLID_NoHTMLViewForWebDAV() As UUID
'{12E7244E-86FF-4B27-8903-B93BDFC6B0D2}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H12E7244E, CInt(&H86FF), CInt(&H4B27), &H89, &H03, &HB9, &H3B, &HDF, &HC6, &HB0, &HD2)
 POLID_NoHTMLViewForWebDAV = iid
End Function
Public Function POLID_TurnOffSidebar() As UUID
'{13A1260E-41C7-462F-A397-E7FB03BE947F}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H13A1260E, CInt(&H41C7), CInt(&H462F), &HA3, &H97, &HE7, &HFB, &H03, &HBE, &H94, &H7F)
 POLID_TurnOffSidebar = iid
End Function
Public Function POLID_UseDefaultTile() As UUID
'{13F50EBC-4E53-40D3-948E-FDADD769F244}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H13F50EBC, CInt(&H4E53), CInt(&H40D3), &H94, &H8E, &HFD, &HAD, &HD7, &H69, &HF2, &H44)
 POLID_UseDefaultTile = iid
End Function
Public Function POLID_NoNetworkConnections() As UUID
'{16BB8AD2-E780-4D69-9BD7-93FC9BD69318}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H16BB8AD2, CInt(&HE780), CInt(&H4D69), &H9B, &HD7, &H93, &HFC, &H9B, &HD6, &H93, &H18)
 POLID_NoNetworkConnections = iid
End Function
Public Function POLID_TaskbarNoNotification() As UUID
'{16C9508E-7D8B-4972-9DFF-92030609DDCB}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H16C9508E, CInt(&H7D8B), CInt(&H4972), &H9D, &HFF, &H92, &H03, &H06, &H09, &HDD, &HCB)
 POLID_TaskbarNoNotification = iid
End Function
Public Function POLID_NoPreviewPane() As UUID
'{17067F8D-981B-42C5-98F8-5BC016D4B073}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H17067F8D, CInt(&H981B), CInt(&H42C5), &H98, &HF8, &H5B, &HC0, &H16, &HD4, &HB0, &H73)
 POLID_NoPreviewPane = iid
End Function
Public Function POLID_HideContentViewModeSnippets() As UUID
'{198D655E-4F77-44C6-97AB-66DB55D79BDC}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H198D655E, CInt(&H4F77), CInt(&H44C6), &H97, &HAB, &H66, &HDB, &H55, &HD7, &H9B, &HDC)
 POLID_HideContentViewModeSnippets = iid
End Function
Public Function POLID_NoNTSecurity() As UUID
'{1A3B0E60-FAB8-4A1A-98F0-65EECA086025}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1A3B0E60, CInt(&HFAB8), CInt(&H4A1A), &H98, &HF0, &H65, &HEE, &HCA, &H08, &H60, &H25)
 POLID_NoNTSecurity = iid
End Function
Public Function POLID_WPCEnableOnDomain() As UUID
'{1AB732A5-A5CA-43EE-BCEB-7766D6394069}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1AB732A5, CInt(&HA5CA), CInt(&H43EE), &HBC, &HEB, &H77, &H66, &HD6, &H39, &H40, &H69)
 POLID_WPCEnableOnDomain = iid
End Function
Public Function POLID_NoSearchInternetInWordWheel() As UUID
'{1B73D17E-68BD-4412-AEA8-6C238C736CD6}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1B73D17E, CInt(&H68BD), CInt(&H4412), &HAE, &HA8, &H6C, &H23, &H8C, &H73, &H6C, &HD6)
 POLID_NoSearchInternetInWordWheel = iid
End Function
Public Function POLID_DisableBindDirectlyToPropertySetStorage() As UUID
'{1DC7CAC4-5387-482C-B1A5-CBDAD3C85147}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1DC7CAC4, CInt(&H5387), CInt(&H482C), &HB1, &HA5, &HCB, &HDA, &HD3, &HC8, &H51, &H47)
 POLID_DisableBindDirectlyToPropertySetStorage = iid
End Function
Public Function POLID_UsePathEnvVarForCommandTemplates() As UUID
'{1FF8F603-056A-4F52-89CC-82AD1CA1C19A}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1FF8F603, CInt(&H056A), CInt(&H4F52), &H89, &HCC, &H82, &HAD, &H1C, &HA1, &HC1, &H9A)
 POLID_UsePathEnvVarForCommandTemplates = iid
End Function
Public Function POLID_DisplayName_RemovableDisk() As UUID
'{20C9BA21-66EA-4FFF-88D8-F5ACEBC7B79E}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H20C9BA21, CInt(&H66EA), CInt(&H4FFF), &H88, &HD8, &HF5, &HAC, &HEB, &HC7, &HB7, &H9E)
 POLID_DisplayName_RemovableDisk = iid
End Function
Public Function POLID_NoFind() As UUID
'{266518D9-6538-4DF6-A49D-C4A58A812DF3}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H266518D9, CInt(&H6538), CInt(&H4DF6), &HA4, &H9D, &HC4, &HA5, &H8A, &H81, &H2D, &HF3)
 POLID_NoFind = iid
End Function
Public Function POLID_NoPresentationSettings() As UUID
'{27FF6303-3535-4CEB-B81C-9E1C91F797AD}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H27FF6303, CInt(&H3535), CInt(&H4CEB), &HB8, &H1C, &H9E, &H1C, &H91, &HF7, &H97, &HAD)
 POLID_NoPresentationSettings = iid
End Function
Public Function POLID_TurnOffWinCal() As UUID
'{29AE66E8-0315-4BFD-AB2F-93DF05A0B8D1}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H29AE66E8, CInt(&H0315), CInt(&H4BFD), &HAB, &H2F, &H93, &HDF, &H05, &HA0, &HB8, &HD1)
 POLID_TurnOffWinCal = iid
End Function
Public Function POLID_NoClose() As UUID
'{29B0CC43-2F2B-4D0C-A081-A528DD349631}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H29B0CC43, CInt(&H2F2B), CInt(&H4D0C), &HA0, &H81, &HA5, &H28, &HDD, &H34, &H96, &H31)
 POLID_NoClose = iid
End Function
Public Function POLID_UseOEMBackground() As UUID
'{2C34C223-A394-4982-8CDC-9DDEAADEE857}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2C34C223, CInt(&HA394), CInt(&H4982), &H8C, &HDC, &H9D, &HDE, &HAA, &HDE, &HE8, &H57)
 POLID_UseOEMBackground = iid
End Function
Public Function POLID_NoReadingPane() As UUID
'{33DCCE8D-B6F8-4B7A-AC93-45E301F956AA}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H33DCCE8D, CInt(&HB6F8), CInt(&H4B7A), &HAC, &H93, &H45, &HE3, &H01, &HF9, &H56, &HAA)
 POLID_NoReadingPane = iid
End Function
Public Function POLID_DisallowCpl() As UUID
'{348DA10B-67A6-48B3-BF27-EB9BA9945FE3}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H348DA10B, CInt(&H67A6), CInt(&H48B3), &HBF, &H27, &HEB, &H9B, &HA9, &H94, &H5F, &HE3)
 POLID_DisallowCpl = iid
End Function
Public Function POLID_NoChangingMousePointers() As UUID
'{38A8123D-B4E6-4AE3-BF98-9B47A737EB0F}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H38A8123D, CInt(&HB4E6), CInt(&H4AE3), &HBF, &H98, &H9B, &H47, &HA7, &H37, &HEB, &H0F)
 POLID_NoChangingMousePointers = iid
End Function
Public Function POLID_TaskbarNoPinnedList() As UUID
'{397ED7B2-DA45-4811-AD97-F14E87364942}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H397ED7B2, CInt(&HDA45), CInt(&H4811), &HAD, &H97, &HF1, &H4E, &H87, &H36, &H49, &H42)
 POLID_TaskbarNoPinnedList = iid
End Function
Public Function POLID_NoDotBreakInLogicalCompare() As UUID
'{39F4FBF9-6ABF-443F-85D0-BE634A3E1B22}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H39F4FBF9, CInt(&H6ABF), CInt(&H443F), &H85, &HD0, &HBE, &H63, &H4A, &H3E, &H1B, &H22)
 POLID_NoDotBreakInLogicalCompare = iid
End Function
Public Function POLID_PowerButtonAction() As UUID
    
' 0x0001 for “Log off”;
' 0x0002 for Shut Down;
' 0x0004 for Restart;
' 0x0010 for Sleep;
' 0x0040 for Hibernate;
' 0x0100 for Switch User;
' 0x0200 for Lock

'{3B4D4897-96FE-4AAD-AF08-1BC18924DCBC}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3B4D4897, CInt(&H96FE), CInt(&H4AAD), &HAF, &H08, &H1B, &HC1, &H89, &H24, &HDC, &HBC)
 POLID_PowerButtonAction = iid
End Function
Public Function POLID_ReallyEnforceShellExtSecurity() As UUID
'{3E23D4E7-D3FC-43DC-9B24-FD7E3F9A0A06}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3E23D4E7, CInt(&HD3FC), CInt(&H43DC), &H9B, &H24, &HFD, &H7E, &H3F, &H9A, &H0A, &H06)
 POLID_ReallyEnforceShellExtSecurity = iid
End Function
Public Function POLID_RestrictCpl() As UUID
'{3F699C27-9262-4242-BB8A-EE59D9CCDFDF}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H3F699C27, CInt(&H9262), CInt(&H4242), &HBB, &H8A, &HEE, &H59, &HD9, &HCC, &HDF, &HDF)
 POLID_RestrictCpl = iid
End Function
Public Function POLID_NoSendToMenu() As UUID
'{417D1970-8F73-492E-B56C-11A6EAFF8CA1}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H417D1970, CInt(&H8F73), CInt(&H492E), &HB5, &H6C, &H11, &HA6, &HEA, &HFF, &H8C, &HA1)
 POLID_NoSendToMenu = iid
End Function
Public Function POLID_NoBalloonFeatureAdvertisements() As UUID
'{4294A388-F823-4D3A-BB16-39D02371DD19}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4294A388, CInt(&HF823), CInt(&H4D3A), &HBB, &H16, &H39, &HD0, &H23, &H71, &HDD, &H19)
 POLID_NoBalloonFeatureAdvertisements = iid
End Function
Public Function POLID_NoAutoplayfornonVolume() As UUID
'{44780082-F010-45AB-90B9-C2B36EA7DA74}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H44780082, CInt(&HF010), CInt(&H45AB), &H90, &HB9, &HC2, &HB3, &H6E, &HA7, &HDA, &H74)
 POLID_NoAutoplayfornonVolume = iid
End Function
Public Function POLID_NoSetFolders() As UUID
'{47EBDF90-35E4-45BE-8438-D2EFB05B71D6}
Static iid As UUID
 If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H47EBDF90, CInt(&H35E4), CInt(&H45BE), &H84, &H38, &HD2, &HEF, &HB0, &H5B, &H71, &HD6)
 POLID_NoSetFolders = iid
End Function





























#End Region


End Module
#End If
 
#If WINDEVLIB_DLGSH Then
Module wdDLG
    'dlgs.h is part of windows.h, but wo uld cause massive conflicts due to it's short, generic naming.
    'therefore, it is provided, but opt-in.
    
    Public Const ctlFirst  = &H0400
    Public Const ctlLast  = &H04ff

    /*
    //  Push buttons.
    */
    Public Const psh1  = &H0400
    Public Const psh2  = &H0401
    Public Const psh3  = &H0402
    Public Const psh4  = &H0403
    Public Const psh5  = &H0404
    Public Const psh6  = &H0405
    Public Const psh7  = &H0406
    Public Const psh8  = &H0407
    Public Const psh9  = &H0408
    Public Const psh10  = &H0409
    Public Const psh11  = &H040a
    Public Const psh12  = &H040b
    Public Const psh13  = &H040c
    Public Const psh14  = &H040d
    Public Const psh15  = &H040e
    Public Const pshHelp  = psh15
    Public Const psh16  = &H040f
    '   Checkboxes.
    Public Const chx1  = &H0410
    Public Const chx2  = &H0411
    Public Const chx3  = &H0412
    Public Const chx4  = &H0413
    Public Const chx5  = &H0414
    Public Const chx6  = &H0415
    Public Const chx7  = &H0416
    Public Const chx8  = &H0417
    Public Const chx9  = &H0418
    Public Const chx10  = &H0419
    Public Const chx11  = &H041a
    Public Const chx12  = &H041b
    Public Const chx13  = &H041c
    Public Const chx14  = &H041d
    Public Const chx15  = &H041e
    Public Const chx16  = &H041f
    '   Radio buttons.
    Public Const rad1  = &H0420
    Public Const rad2  = &H0421
    Public Const rad3  = &H0422
    Public Const rad4  = &H0423
    Public Const rad5  = &H0424
    Public Const rad6  = &H0425
    Public Const rad7  = &H0426
    Public Const rad8  = &H0427
    Public Const rad9  = &H0428
    Public Const rad10  = &H0429
    Public Const rad11  = &H042a
    Public Const rad12  = &H042b
    Public Const rad13  = &H042c
    Public Const rad14  = &H042d
    Public Const rad15  = &H042e
    Public Const rad16  = &H042f
    '   Groups, frames, rectangles, and icons.
    Public Const grp1  = &H0430
    Public Const grp2  = &H0431
    Public Const grp3  = &H0432
    Public Const grp4  = &H0433
    Public Const frm1  = &H0434
    Public Const frm2  = &H0435
    Public Const frm3  = &H0436
    Public Const frm4  = &H0437
    Public Const rct1  = &H0438
    Public Const rct2  = &H0439
    Public Const rct3  = &H043a
    Public Const rct4  = &H043b
    Public Const ico1  = &H043c
    Public Const ico2  = &H043d
    Public Const ico3  = &H043e
    Public Const ico4  = &H043f
    '   Static text.
    Public Const stc1  = &H0440
    Public Const stc2  = &H0441
    Public Const stc3  = &H0442
    Public Const stc4  = &H0443
    Public Const stc5  = &H0444
    Public Const stc6  = &H0445
    Public Const stc7  = &H0446
    Public Const stc8  = &H0447
    Public Const stc9  = &H0448
    Public Const stc10  = &H0449
    Public Const stc11  = &H044a
    Public Const stc12  = &H044b
    Public Const stc13  = &H044c
    Public Const stc14  = &H044d
    Public Const stc15  = &H044e
    Public Const stc16  = &H044f
    Public Const stc17  = &H0450
    Public Const stc18  = &H0451
    Public Const stc19  = &H0452
    Public Const stc20  = &H0453
    Public Const stc21  = &H0454
    Public Const stc22  = &H0455
    Public Const stc23  = &H0456
    Public Const stc24  = &H0457
    Public Const stc25  = &H0458
    Public Const stc26  = &H0459
    Public Const stc27  = &H045a
    Public Const stc28  = &H045b
    Public Const stc29  = &H045c
    Public Const stc30  = &H045d
    Public Const stc31  = &H045e
    Public Const stc32  = &H045f
    '   Listboxes.
    Public Const lst1  = &H0460
    Public Const lst2  = &H0461
    Public Const lst3  = &H0462
    Public Const lst4  = &H0463
    Public Const lst5  = &H0464
    Public Const lst6  = &H0465
    Public Const lst7  = &H0466
    Public Const lst8  = &H0467
    Public Const lst9  = &H0468
    Public Const lst10  = &H0469
    Public Const lst11  = &H046a
    Public Const lst12  = &H046b
    Public Const lst13  = &H046c
    Public Const lst14  = &H046d
    Public Const lst15  = &H046e
    Public Const lst16  = &H046f
    '   Combo boxes.
    Public Const cmb1  = &H0470
    Public Const cmb2  = &H0471
    Public Const cmb3  = &H0472
    Public Const cmb4  = &H0473
    Public Const cmb5  = &H0474
    Public Const cmb6  = &H0475
    Public Const cmb7  = &H0476
    Public Const cmb8  = &H0477
    Public Const cmb9  = &H0478
    Public Const cmb10  = &H0479
    Public Const cmb11  = &H047a
    Public Const cmb12  = &H047b
    Public Const cmb13  = &H047c
    Public Const cmb14  = &H047d
    Public Const cmb15  = &H047e
    Public Const cmb16  = &H047f
    '   Edit controls.
    Public Const edt1  = &H0480
    Public Const edt2  = &H0481
    Public Const edt3  = &H0482
    Public Const edt4  = &H0483
    Public Const edt5  = &H0484
    Public Const edt6  = &H0485
    Public Const edt7  = &H0486
    Public Const edt8  = &H0487
    Public Const edt9  = &H0488
    Public Const edt10  = &H0489
    Public Const edt11  = &H048a
    Public Const edt12  = &H048b
    Public Const edt13  = &H048c
    Public Const edt14  = &H048d
    Public Const edt15  = &H048e
    Public Const edt16  = &H048f
    '   Scroll bars.
    Public Const scr1  = &H0490
    Public Const scr2  = &H0491
    Public Const scr3  = &H0492
    Public Const scr4  = &H0493
    Public Const scr5  = &H0494
    Public Const scr6  = &H0495
    Public Const scr7  = &H0496
    Public Const scr8  = &H0497
    '   Controls
    Public Const ctl1  = &H04A0
    Public Const FILEOPENORD  = 1536
    Public Const MULTIFILEOPENORD  = 1537
    Public Const PRINTDLGORD  = 1538
    Public Const PRNSETUPDLGORD  = 1539
    Public Const FINDDLGORD  = 1540
    Public Const REPLACEDLGORD  = 1541
    Public Const FONTDLGORD  = 1542
    Public Const FORMATDLGORD31  = 1543
    Public Const FORMATDLGORD30  = 1544
    Public Const RUNDLGORD  = 1545
    Public Const PAGESETUPDLGORD  = 1546
    Public Const NEWFILEOPENORD  = 1547
    Public Const PRINTDLGEXORD  = 1549
    Public Const PAGESETUPDLGORDMOTIF  = 1550
    Public Const COLORMGMTDLGORD  = 1551
    Public Const NEWFILEOPENV2ORD  = 1552
    ' #if (NTDDI_VERSION >= NTDDI_VISTA)
    Public Const NEWFILEOPENV3ORD  = 1553
    ' #endif // NTDDI_VISTA
    '  1591 - 1600
    ' #if (NTDDI_VERSION >= NTDDI_WIN7)
    Public Const NEWFORMATDLGWITHLINK  = 1591
    Public Const IDC_MANAGE_LINK  = 1592
    
    Public Type CRGB
        bRed As BYTE
        bGreen As BYTE
        bBlue As BYTE
        bExtra As BYTE
    End Type	
End Module
#End If