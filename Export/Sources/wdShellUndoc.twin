'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'Undocumented shell interfaces with only partial definitions

[InterfaceId("139275E0-D644-4214-B45E-D9278C4A8501")]
[Description("For Windows 10. Others: ")]
[OleAutomation(False)]
Interface IImmersiveBehavior Extends IUnknown
    Sub OnImmersiveThreadStart()
    Sub OnImmersiveThreadStop()
    Sub GetMaximumComponentCount(ByRef count As Long)
    Sub CreateComponent(ByVal number As Long, ByRef component As IUnknown)
    Sub ShouldCreateComponent(ByVal number As Long, ByRef allowed As Long)
End Interface

[Description("Interface of the controller object that the OS uses to manage the Immersive shell.")]
[InterfaceId("00000000-0000-0000-0000-000000000000")]
[Description("For Windows 10. Others: ")]
[OleAutomation(False)]
Interface IImmersiveShellController Extends IUnknown
    Sub Start()
    Sub Stop()
    Sub SetCreationBehavior(ByVal behavior As IImmersiveBehavior)
End Interface

[Description("Builder interface given by the OS to create an Immersive shell controller.")]
[InterfaceId("1C56B3E4-E6EA-4CED-8A74-73B72C6BD435")]
[Description("For Windows 10. Others: ")]
[OleAutomation(False)]
Interface IImmersiveShellBuilder Extends IUnknown
    Sub CreateImmersiveShellController(ByRef ppControllerOut As IImmersiveShellController)
End Interface

[InterfaceId("914D9B3A-5E53-4E14-BBBA-46062ACB35A4")]
[Description("For Windows 10. Others: ")]
[OleAutomation(False)]
Interface IImmersiveShellHookService Extends IUnknown
    Sub Register(ByRef a1 As LongPtr, ByVal thiss As IImmersiveShellHookService, ByRef prgMessages As Long, ByVal cMessages As Long, ByVal pNotification As IUnknown, ByRef pdwCookie As Long)
    Sub Unregister(ByVal cookie As Long)
    Sub PostShellHookMessage(ByVal wParam As LongPtr, ByVal lParam As LongPtr)
    Sub SetTargetWindowForSerialization(ByVal hwnd As LongPtr)
    Sub PostShellHookMessageWithSerialization(ByVal a1 As BOOL, ByVal a2 As Long, ByVal thiss As IImmersiveShellHookService, ByVal msg As Long, ByVal msgParam As Long)
    Sub UpdateWindowApplicationId(ByVal hwnd As LongPtr, ByVal pszAppID As LongPtr)
    Sub HandleWindowReplacement(ByVal hwndOld As LongPtr, ByVal hwndNew As LongPtr)
    [PreserveSig] Function IsExecutionOnSerializedThread() As BOOL
End Interface

[InterfaceId("880B26F8-9197-43D0-8045-8702D0D72000")]
[Description("For Windows 10. Others: ")]
[OleAutomation(False)]
Interface IImmersiveMonitor Extends IUnknown
    Sub GetIdentity(ByRef pIdentity As Long)
    Sub ConnectObject(ByVal pUnk As IUnknown)
    Sub GetHandle(ByRef hMonitor As LongPtr)
    Sub IsConnected(ByRef pbConnected As BOOL)
    Sub IsPrimary(ByRef pbPrimary As BOOL)
    Sub IsImmersiveDisplayDevice(ByRef pbImmersive As BOOL)
    Sub GetDisplayRect(ByRef pRect As RECT)
    Sub GetOrientation(ByRef pOrientation As Long)
    Sub GetWorkArea(ByRef pWorkArea As RECT)
    Sub IsEqual(ByVal pMonitor As IImmersiveMonitor, ByRef pbEqual As BOOL)
    Sub IsImmersiveCapable(ByRef pbCapable As BOOL)
    Sub GetEffectiveDpi(ByRef pDpiX As Long, ByRef pDpiY As Long)
    Sub GetFilterFlags(flags As IMMERSIVE_MONITOR_FILTER_FLAGS)
End Interface

[InterfaceId("4d4c1e64-e410-4faa-bafa-59ca069bfec2")]
[OleAutomation(False)]
Interface IImmersiveMonitorManager Extends IUnknown
    Sub GetCount(ByRef pcMonitors As Long)
    Sub GetConnectedCount(ByRef pcMonitors As Long)
    Sub GetAt(ByRef idxMonitor As Long, ByRef monitor As IImmersiveMonitor)
    Sub GetFromHandle(ByVal monitor As LongPtr, ByRef monitor2 As IImmersiveMonitor)
    Sub GetFromIdentity(ByVal identity As Long, ByRef monitor As IImmersiveMonitor)
    Sub GetImmersiveProxyMonitor(ByRef monitor As IImmersiveMonitor)
    Sub QueryService(ByVal monit As LongPtr, ByRef guidService As UUID, ByRef riid As UUID, ByRef service As Object)
    Sub QueryServiceByIdentity(ByVal monit As Long, ByRef guidService As UUID, ByRef riid As UUID, ByRef service As Object)
    Sub QueryServiceFromWindow(ByVal hwnd As LongPtr, ByRef guidService As UUID, ByRef riid As UUID, ByRef service As Object)
    Sub QueryServiceFromPoint(ByVal point As LongPtr, ByRef guidService As UUID, ByRef riid As UUID, ByRef service As Object)
    Sub GetNextImmersiveMonitor(ByVal direction As IMMERSIVE_MONITOR_MOVE_DIRECTION, ByVal monitor As IImmersiveMonitor, ByRef monitorout As IImmersiveMonitor)
    Sub GetMonitorArray(ByRef array As any)
    Sub SetFilter(ByVal filter As any)
End Interface

[InterfaceId("372E1D3B-38D3-42E4-A15B-8AB2B178F513")]
  [OleAutomation(False)]
  [Description("For most Windows 10. Some earlier Win10 versions use Others: ")]
  Interface IApplicationView Extends IUnknown
      [PreserveSig]
      Function SetFocus() As Long
      [PreserveSig]
      Function SwitchTo() As Long
      [PreserveSig]
      Function TryInvokeBack(ByVal callback As IUnknown /*IAsyncCallback*/) As Long
      [PreserveSig]
      Function GetThumbnailWindow(phWnd As LongPtr) As Long
      [PreserveSig]
      Function GetMonitor(immersiveMonitor As IImmersiveMonitor) As Long
      [PreserveSig]
      Function GetVisibility(pVisibility As Long) As Long
      [PreserveSig]
      Function SetCloak(ByVal type As APPLICATION_VIEW_CLOAK_TYPE, ByVal unk As Long) As Long
      [PreserveSig]
      Function GetPosition(riid As UUID, ppv As Any /*IApplicationViewPosition*/) As Long
      [PreserveSig]
      Function SetPosition(ByVal position As IUnknown /*IApplicationViewPosition*/) As Long
      [PreserveSig]
      Function InsertAfterWindow(ByVal hWnd As LongPtr) As Long
      [PreserveSig]
      Function GetExtendedFramePosition(ByRef pRect As RECT) As Long
      [PreserveSig]
      Function GetAppUserModelId(ByRef id As LongPtr) As Long
      [PreserveSig]
      Function SetAppUserModelId(ByVal id As String) As Long
      [PreserveSig]
      Function IsEqualByAppUserModelId(ByRef id As String, ByRef isequal As BOOL) As Long
      [PreserveSig]
      Function GetViewState(state As Long) As Long
      [PreserveSig]
      Function SetViewState(ByVal state As Long) As Long
      [PreserveSig]
      Function GetNeediness(neediness As Long) As Long
      [PreserveSig]
      Function GetLastActivationTimestamp(ByRef ptimestamp As LongLong) As Long
      [PreserveSig]
      Function SetLastActivationTimestamp(ByVal timestamp As LongLong) As Long
      [PreserveSig]
      Function GetVirtualDesktopId(ByRef pUUID As UUID) As Long
      [PreserveSig]
      Function SetVirtualDesktopId(ByRef pUUID As UUID) As Long
      [PreserveSig]
      Function GetShowInSwitchers(ByRef pflag As Long) As Long
      [PreserveSig]
      Function SetShowInSwitchers(ByVal flag As Long) As Long
      [PreserveSig]
      Function GetScaleFactor(scaleFactor As Long) As Long
      [PreserveSig]
      Function CanReceiveInput(ByRef pcanReceiveInput As BOOL) As Long
      [PreserveSig]
      Function GetCompatibilityPolicyType(ByRef pflag As APPLICATION_VIEW_COMPATIBILITY_POLICY) As Long
      [PreserveSig]
      Function SetCompatibilityPolicyType(ByVal flag As APPLICATION_VIEW_COMPATIBILITY_POLICY) As Long
      [PreserveSig]
      Function GetSizeConstraints(ByVal monitor As IImmersiveMonitor, size1 As SIZE, size2 As SIZE) As Long
      [PreserveSig]
      Function GetSizeConstraintsForDpi(ByVal dpi As Long, size1 As SIZE, size2 As SIZE) As Long
      [PreserveSig]
      Function SetSizeConstraintsForDpi(dpi As Long, size1 As SIZE, size2 As SIZE) As Long
      [PreserveSig]
      Function OnMinSizePreferencesUpdated(ByVal hwnd As LongPtr) As Long
      [PreserveSig]
      Function ApplyOperation(ByVal operation As IUnknown /* IApplicationViewOperation* */) As Long
      [PreserveSig]
      Function IsTray(isTray As BOOL) As Long
      [PreserveSig]
      Function IsInHighZOrderBand(ByRef pisInHighZOrderBand As BOOL) As Long
      [PreserveSig]
      Function IsSplashScreenPresented(ByRef pisSplashScreenPresented As BOOL) As Long
      [PreserveSig]
      Function Flash() As Long
      [PreserveSig]
      Function GetRootSwitchableOwner(ByVal rootSwitchableOwner As IApplicationView) As Long
      [PreserveSig]
      Function EnumerateOwnershipTree(ByVal IObjectArray As IObjectArray) As Long
      [PreserveSig]
      Function GetEnterpriseId(ByRef id As LongPtr) As Long
      [PreserveSig]
      Function IsMirrored(ByRef pisMirrored As BOOL) As Long
      'additional members all unknown
  End Interface
  [InterfaceId("9AC0B5C8-1484-4C5B-9533-4134A0F97CEA")]
    [OleAutomation(False)]
    [Description("For early Windows 10. ")]
    Interface IApplicationView14393 Extends IUnknown
        [PreserveSig]
        Function SetFocus() As Long
        [PreserveSig]
        Function SwitchTo() As Long
        [PreserveSig]
        Function TryInvokeBack(ByVal callback As IUnknown /*IAsyncCallback*/) As Long
        [PreserveSig]
        Function GetThumbnailWindow(phWnd As LongPtr) As Long
        [PreserveSig]
        Function GetMonitor(immersiveMonitor As IImmersiveMonitor) As Long
        [PreserveSig]
        Function GetVisibility(pVisibility As Long) As Long
        [PreserveSig]
        Function SetCloak(ByVal type As APPLICATION_VIEW_CLOAK_TYPE, ByVal unk As Long) As Long
        [PreserveSig]
        Function GetPosition(riid As UUID, ppv As Any /*IApplicationViewPosition*/) As Long
        [PreserveSig]
        Function SetPosition(ByVal position As IUnknown /*IApplicationViewPosition*/) As Long
        [PreserveSig]
        Function InsertAfterWindow(ByVal hWnd As LongPtr) As Long
        [PreserveSig]
        Function GetExtendedFramePosition(ByRef pRect As RECT) As Long
        [PreserveSig]
        Function GetAppUserModelId(ByRef id As LongPtr) As Long
        [PreserveSig]
        Function SetAppUserModelId(ByVal id As String) As Long
        [PreserveSig]
        Function IsEqualByAppUserModelId(ByRef id As String, ByRef isequal As BOOL) As Long
        [PreserveSig]
        Function GetViewState(state As Long) As Long
        [PreserveSig]
        Function SetViewState(ByVal state As Long) As Long
        [PreserveSig]
        Function GetNeediness(neediness As Long) As Long
        [PreserveSig]
        Function GetLastActivationTimestamp(ByRef ptimestamp As LongLong) As Long
        [PreserveSig]
        Function SetLastActivationTimestamp(ByVal timestamp As LongLong) As Long
        [PreserveSig]
        Function GetVirtualDesktopId(ByRef pUUID As UUID) As Long
        [PreserveSig]
        Function SetVirtualDesktopId(ByRef pUUID As UUID) As Long
        [PreserveSig]
        Function GetShowInSwitchers(ByRef pflag As Long) As Long
        [PreserveSig]
        Function SetShowInSwitchers(ByVal flag As Long) As Long
        [PreserveSig]
        Function GetScaleFactor(scaleFactor As Long) As Long
        [PreserveSig]
        Function CanReceiveInput(ByRef pcanReceiveInput As BOOL) As Long
        [PreserveSig]
        Function GetCompatibilityPolicyType(ByRef pflag As APPLICATION_VIEW_COMPATIBILITY_POLICY) As Long
        [PreserveSig]
        Function SetCompatibilityPolicyType(ByVal flag As APPLICATION_VIEW_COMPATIBILITY_POLICY) As Long
        [PreserveSig]
        Function GetPositionPriority(pPosPriority As Any /* IShellPositionerPriority** */) As Long
        [PreserveSig]
        Function SetPositionPriority(ByVal pPosPriority As Any /* IShellPositionerPriority* */) As Long
        [PreserveSig]
        Function GetSizeConstraints(ByVal monitor As IImmersiveMonitor, size1 As SIZE, size2 As SIZE) As Long
        [PreserveSig]
        Function GetSizeConstraintsForDpi(ByVal dpi As Long, size1 As SIZE, size2 As SIZE) As Long
        [PreserveSig]
        Function SetSizeConstraintsForDpi(dpi As Long, size1 As SIZE, size2 As SIZE) As Long
        [PreserveSig]
        Function OnMinSizePreferencesUpdated(ByVal hwnd As LongPtr) As Long
        [PreserveSig]
        Function ApplyOperation(ByVal operation As IUnknown /* IApplicationViewOperation* */) As Long
        [PreserveSig]
        Function IsTray(isTray As BOOL) As Long
        [PreserveSig]
        Function IsInHighZOrderBand(ByRef pisInHighZOrderBand As BOOL) As Long
        [PreserveSig]
        Function IsSplashScreenPresented(ByRef pisSplashScreenPresented As BOOL) As Long
        [PreserveSig]
        Function Flash() As Long
        [PreserveSig]
        Function GetRootSwitchableOwner(ByVal rootSwitchableOwner As IApplicationView) As Long
        [PreserveSig]
        Function EnumerateOwnershipTree(ByVal IObjectArray As IObjectArray) As Long
        [PreserveSig]
        Function GetEnterpriseId(ByRef id As LongPtr) As Long
        [PreserveSig]
        Function GetEnterpriseChromePreference(pref As Long) As Long
        [PreserveSig]
        Function IsMirrored(ByRef pisMirrored As BOOL) As Long
    End Interface
  [InterfaceId("2C08ADF0-A386-4B35-9250-0FE183476FCC")]
  [OleAutomation(False)]
  [Description(" ")]
  Interface IApplicationViewCollection Extends IUnknown
      [PreserveSig]
      Function GetViews(ByVal pViews As IObjectArray) As Long
      [PreserveSig]
      Function GetViewsByZOrder(ByVal pViews As IObjectArray) As Long
      [PreserveSig]
      Function GetViewsByAppUserModelId(ByRef id As String, ByVal pViews As IObjectArray) As Long
      [PreserveSig]
      Function GetViewForHwnd(ByRef Wnd As Long, ByVal pViewsy As IObjectArray) As Long
      [PreserveSig]
      Function notimpl1() As Long
      [PreserveSig]
      Function GetViewForAppUserModelId(ByRef id As String, ByVal pView As IApplicationView) As Long
      [PreserveSig]
      Function GetViewInFocus(ByVal pView As IApplicationView) As Long
      [PreserveSig]
      Function RefreshCollection() As Long
      [PreserveSig]
      Function notimpl2() As Long
      [PreserveSig]
      Function notimpl3() As Long
      [PreserveSig]
      Function notimpl4() As Long
  End Interface

  [InterfaceId("FF72FFDD-BE7E-43FC-9C03-AD81681E88E4")]
  [OleAutomation(False)]
  [Description("For Windows 10. Others: IVirtualDesktop21H2")]
  Interface IVirtualDesktop Extends IUnknown
      [PreserveSig]
      Function IsViewVisible(ByVal View As IApplicationView, ByRef pfVisible As BOOL) As Long
      [PreserveSig]
      Function GetId(ByRef id As UUID) As Long
  End Interface
  
[InterfaceId("536D3495-B208-4CC9-AE26-DE8111275BF8")]
[OleAutomation(False)]
[Description("For Windows 11. Others: ")]
Interface IVirtualDesktop21H2 Extends IUnknown
    [PreserveSig]
    Function IsViewVisible(ByVal View As IApplicationView, ByRef pfVisible As BOOL) As Long
    [PreserveSig]
    Function GetId(ByRef id As UUID) As Long
    [PreserveSig]
    Function Unknown1(ByRef unk As LongPtr) As Long
    [PreserveSig]
    Function GetName(ByRef pName As LongPtr /*HSTRING*/) As Long
    [PreserveSig]
    Function GetWallpaperPath(ByRef pPath As LongPtr /*HSTRING*/) As Long
End Interface
  

[InterfaceId("F31574D6-B682-4CDC-BD56-1827860ABEC6")]
[OleAutomation(False)]
[Description("For Windows 10, exception very first builds.")]
Interface IVirtualDesktopManagerInternal Extends IUnknown
    [PreserveSig]
    Function GetCount(ByRef pCount As Long) As Long
    [PreserveSig]
    Function MoveViewToDesktop(ByVal View As IApplicationView, ByVal Desktop As IVirtualDesktop) As Long
    [PreserveSig]
    Function CanViewMoveDesktops(ByVal View As IApplicationView, ByRef pfCanViewMoveDesktops As BOOL) As Long
    [PreserveSig]
    Function GetCurrentDesktop(ByRef pVD As IVirtualDesktop) As Long
    [PreserveSig]
    Function GetDesktops(pDesktops As IObjectArray) As Long
    [PreserveSig]
    Function GetAdjacentDesktop(ByVal pDesktopReference As IVirtualDesktop, ByVal AdjacentDesktop As AdjacentDesktop, ppAdjacentDesktop As IVirtualDesktop) As Long
    [PreserveSig]
    Function SwitchDesktop(ByVal Desktop As IVirtualDesktop) As Long
    [PreserveSig]
    Function CreateDesktopW(pNewDesktop As IVirtualDesktop) As Long
    [PreserveSig]
    Function RemoveDesktop(ByVal pDesktop As IVirtualDesktop, ByVal pFallbackDesktop As IVirtualDesktop) As Long
    [PreserveSig]
    Function FindDesktop(ByRef pid As UUID, ppDesktop As IVirtualDesktop) As Long
End Interface
[InterfaceId("af8da486-95bb-4460-b3b7-6e7a6b2962b5")]
[OleAutomation(False)]
[Description("For Windows 10  very first builds.")]
Interface IVirtualDesktopManagerInternal10240 Extends IUnknown
    [PreserveSig]
    Function GetCount(ByRef pCount As Long) As Long
    [PreserveSig]
    Function MoveViewToDesktop(ByVal View As IApplicationView, ByVal Desktop As IVirtualDesktop) As Long
    [PreserveSig]
    Function CanViewMoveDesktops(ByVal View As IApplicationView, ByRef pfCanViewMoveDesktops As BOOL) As Long
    [PreserveSig]
    Function GetCurrentDesktop(ByRef pVD As IVirtualDesktop) As Long
    [PreserveSig]
    Function GetDesktops(pDesktops As IObjectArray) As Long
    [PreserveSig]
    Function GetAdjacentDesktop(ByVal pDesktopReference As IVirtualDesktop, ByVal AdjacentDesktop As AdjacentDesktop, ppAdjacentDesktop As IVirtualDesktop) As Long
    [PreserveSig]
    Function SwitchDesktop(ByVal Desktop As IVirtualDesktop) As Long
    [PreserveSig]
    Function CreateDesktopW(pNewDesktop As IVirtualDesktop) As Long
    [PreserveSig]
    Function RemoveDesktop(ByVal pDesktop As IVirtualDesktop, ByVal pFallbackDesktop As IVirtualDesktop) As Long
    [PreserveSig]
    Function FindDesktop(ByRef pid As UUID, ppDesktop As IVirtualDesktop) As Long
End Interface
[InterfaceId("B2F925B9-5A0F-4D2E-9F4D-2B1507593C10")]
[OleAutomation(False)]
[Description("For Windows 11 22H2.")]
Interface IVirtualDesktopManagerInternal21H2 Extends IUnknown
    [PreserveSig]
    Function GetCount(ByRef pCount As Long) As Long
    [PreserveSig]
    Function MoveViewToDesktop(ByVal View As IApplicationView, ByVal Desktop As IVirtualDesktop) As Long
    [PreserveSig]
    Function CanViewMoveDesktops(ByVal View As IApplicationView, ByRef pfCanViewMoveDesktops As BOOL) As Long
    [PreserveSig]
    Function GetCurrentDesktop(ByRef pVD As IVirtualDesktop) As Long
    [PreserveSig]
    Function GetDesktops(pDesktops As IObjectArray) As Long
    [PreserveSig]
    Function GetAdjacentDesktop(ByVal pDesktopReference As IVirtualDesktop, ByVal AdjacentDesktop As AdjacentDesktop, ppAdjacentDesktop As IVirtualDesktop) As Long
    [PreserveSig]
    Function SwitchDesktop(ByVal Desktop As IVirtualDesktop) As Long
    [PreserveSig]
    Function CreateDesktop(pNewDesktop As IVirtualDesktop) As Long
    [PreserveSig]
    Function MoveDesktop(ByVal Desktop As IVirtualDesktop, ByVal hwnd As LongPtr, ByVal nIndex As Long) As Long
    [PreserveSig]
    Function RemoveDesktop(ByVal pDesktop As IVirtualDesktop, ByVal pFallbackDesktop As IVirtualDesktop) As Long
    [PreserveSig]
    Function FindDesktop(ByRef pid As UUID, ppDesktop As IVirtualDesktop) As Long
    [PreserveSig]
    Function Unknown1(ByVal Desktop As IVirtualDesktop, unk1 As LongPtr, unk2 As LongPtr) As Long
    [PreserveSig]
    Function SetName(ByVal pDesktop As IVirtualDesktop, ByVal pName As LongPtr /* HSTRING */) As Long
    [PreserveSig]
    Function SetWallpaperPath(ByVal pDesktop As IVirtualDesktop, ByVal pPath As LongPtr /* HSTRING */) As Long
    [PreserveSig]
    Function SetAllWallpaperPaths(ByVal pPath As LongPtr /* HSTRING */) As Long
    [PreserveSig]
    Function CopyDesktopState(ByVal pView1 As IApplicationView, ByVal pView2 As IApplicationView) As Long
    [PreserveSig]
    Function GetDesktopIsPerMonitor(pRes As Long) As Long
    [PreserveSig]
    Function RemoveAll(ByVal fRemove As BOOL) As Long 'SetDesktopIsPerMonitor(bool state) in 22H2
End Interface
  
  
  [InterfaceId("C179334C-4295-40D3-BEA1-C654D965605A")]
  [OleAutomation(False)]
  [Description(" ")]
  Interface IVirtualDesktopNotification Extends IUnknown
      Sub VirtualDesktopCreated(ByVal Desktop As IVirtualDesktop)
      Sub VirtualDesktopDestroyBegin(ByVal Desktop As IVirtualDesktop, ByVal DesktopFallback As IVirtualDesktop)
      Sub VirtualDesktopDestroyFailed(ByVal Desktop As IVirtualDesktop, ByVal DesktopFallback As IVirtualDesktop)
      Sub VirtualDesktopDestroyed(ByVal Desktop As IVirtualDesktop, ByVal DesktopFallback As IVirtualDesktop)
      Sub ViewVirtualDesktopChanged(ByVal View As IApplicationView)
      Sub CurrentVirtualDesktopChanged(ByVal DesktopOld As IVirtualDesktop, ByVal DesktopNew As IVirtualDesktop)
  End Interface

  [InterfaceId("0CD45E71-D927-4F15-8B0A-8FEF525337BF")]
  [OleAutomation(False)]
  [Description(" ")]
  Interface IVirtualDesktopNotificationService Extends IUnknown
      [PreserveSig]
      Function Register(ByVal Notification As IVirtualDesktopNotification, ByRef pdwCookie As Long) As Long
      [PreserveSig]
      Function Unregister(ByVal dwCookie As Long) As Long
  End Interface

  [InterfaceId("4CE81583-1E4C-4632-A621-07A53543148F")]
  [OleAutomation(False)]
  [Description(" ")]
  Interface IVirtualDesktopPinnedApps Extends IUnknown
      [PreserveSig]
      Function IsAppIdPinned(ByVal appId As String, ByRef pfPinned As BOOL) As Long
      [PreserveSig]
      Function PinAppID(ByVal appId As String) As Long
      [PreserveSig]
      Function UnPinAppID(ByVal appId As String) As Long
      [PreserveSig]
      Function IsViewPinned(ByVal View As IApplicationView, ByRef pfPinned As BOOL) As Long
      [PreserveSig]
      Function PinView(ByVal View As IApplicationView) As Long
      [PreserveSig]
      Function UnPinView(ByVal View As IApplicationView) As Long
  End Interface


  
  
  
  
  
  
  [InterfaceId("489E9453-869B-4BCC-A1C7-48B5285FD9D8")]
  [OleAutomation(False)]
  Interface IExplorerHost Extends IUnknown
      Sub ShowWindow(ByVal pidlItem As LongPtr, ByVal unknown As Long, ByVal xCurrent As Long, ByVal yCurrent As Long, ByVal nCmdShow As Long)
  End Interface

  [InterfaceId("50A87BAA-5F79-4C31-B6B3-28F6F2D097E6")]
  [OleAutomation(False)]
   Interface IExplorerHost2 Extends IExplorerHost
      Sub ShowWindowAtRect(ByVal pidlItem As LongPtr, ByVal unknown As Long, ByRef lprcRect As RECT, ByVal nCmdShow As Long)
  End Interface
  
  [CoClassId("93A56381-E0CD-485A-B60E-67819E12F81B")]
  [Description("CLSID_CommonExplorerHost")]
  CoClass CommonExplorerHost
      [Default] Interface IExplorerHost2
      Interface IExplorerHost
  End CoClass
  [CoClassId("CEFF45EE-C862-41DE-AEE2-A022C81EDA92")]
  [Description("CLSID_SeparateSingleProcessExplorerHost")]
  CoClass SeparateSingleProcessExplorerHost
      [Default] Interface IExplorerHost2
      Interface IExplorerHost
  End CoClass
  [CoClassId("75DFF2B7-6936-4C06-A8BB-676A7B00B24B")]
  [Description("CLSID_SeparateMultipleProcessExplorerHost")]
  CoClass SeparateMultipleProcessExplorerHost
      [Default] Interface IExplorerHost2
      Interface IExplorerHost
  End CoClass
  
  
  [CoClassId("25585DC7-4DA0-438D-AD04-E42C8D2D64B9")]
  [Description("CLSID_ClientExtractIcon")]
  CoClass ClientExtractIcon
    [Default] Interface IExtractIconW
    Interface IExtractIconA
    Interface IContextMenu
    Interface IPersistPropertyBag
    Interface IServiceProvider
    Interface IShellExtInit
    Interface IShellFolder
  End CoClass
  
  [InterfaceId("52B14A6A-58F1-45BD-B00A-DCE7403D951E")]
  [OleAutomation(False)]
  Interface IRootAndRelativeParsingFolder Extends IUnknown
      Sub GetRoot(ppidl As LongPtr) 'PIDLIST_ABSOLUTE *
  End Interface
  
  
  
  
  [InterfaceId("18455d05-d8f8-47f0-ba4c-c3aaf9c7035f")]
  [OleAutomation(False)]
  Interface ISearchFolderItemFactoryPriv Extends IUnknown
      Sub SetScopeWithDepth(ByVal scope As IShellItemArray, ByVal depth As SCOPE_ITEM_DEPTH)
  End Interface
  [InterfaceId("BD59C2F9-F763-400D-A76E-028C35D047B8")]
  [OleAutomation(False)]
  Interface ISearchFolderItemFactoryPrivEx Extends IUnknown
      Sub SetScopeWithDepth(ByVal scope As IShellItemArray, ByVal depth As SCOPE_ITEM_DEPTH)
      Sub SetScopeDirect(ByVal scope As IScope)
  End Interface
  [InterfaceId("54410B83-6787-4418-9735-5AAAABE83A9A")]
  [OleAutomation(False)]
  Interface IScopeFactory Extends IUnknown
      Sub CreateScope(ByRef riid As UUID, ByRef ppv As Any)
      Sub CreateScopeFromShellItemArray(ByVal si As IShellItemArray, ByRef riid As UUID, ByRef ppv As any)
      Sub CreateScopeFromIDLists(ByVal cidl As Long, apidl As LongPtr, ByVal type As SCOPE_ITEM_TYPE, ByVal depth As SCOPE_ITEM_DEPTH, ByVal flags As SCOPE_ITEM_FLAGS, ByRef riid As UUID, ByRef ppv As any)
      Sub CreateScopeItemFromIDList(ByVal pidl As LongPtr, ByVal type As SCOPE_ITEM_TYPE, ByVal depth As SCOPE_ITEM_DEPTH, ByVal flags As SCOPE_ITEM_FLAGS, ByRef id2 As UUID, ByRef ppv As any)
      Sub CreateScopeItemFromKnownFolder(ByRef id1 As UUID, ByVal type As SCOPE_ITEM_TYPE, ByVal depth As SCOPE_ITEM_DEPTH, ByVal flags As SCOPE_ITEM_FLAGS, ByRef id2 As UUID, ByRef ppv As any)
      Sub CreateScopeItemFromShellItem(ByVal si As IShellItem, ByVal type As SCOPE_ITEM_TYPE, ByVal depth As SCOPE_ITEM_DEPTH, ByVal flags As SCOPE_ITEM_FLAGS, ByRef id2 As UUID, ByRef ppv As any)
  End Interface
  [CoClassId("6746C347-576B-4F73-9012-CDFEEA251BC4")]
  [Description("CLSID_ScopeFactory")]
  CoClass ScopeFactory
      [Default] Interface IScopeFactory
  End CoClass
  
  
  
  
  
  
  
  
  
    [InterfaceId("0000015F-0000-0000-C000-000000000046")]
    [OleAutomation(False)]
    Interface ISecurityOptions Extends IUnknown
        [PreserveSig] Function IsObjectCreationAllowed(ByVal p0 As LongPtr, p1 As UUID, ByVal p2 As Long, ByVal p3 As Long, ByVal p4 As Long, p5 As Long, p6 As Long, p7 As Long) As Long
        [PreserveSig] Function IsMethodInvocationAllowed(ByVal p0 As LongPtr, ByVal p1 As Long, ByVal p2 As Long, p3 As Long, p4 As Long, p5 As Long) As Long
    End Interface
  
    [CoClassId("0000034B-0000-0000-C000-000000000046")]
    [Description("CLSID_GlobalOptions")]
    CoClass GlobalOptions
        [Default] Interface IGlobalOptions
        Interface ISecurityOptions
    End CoClass
    
    
    
    
    [InterfaceId("2E8FCB18-A0EE-41AD-8EF8-77FB3A370CA5")]
    [OleAutomation(False)]
    Interface IShellExperienceManagerFactory Extends IInspectable
        Sub GetExperienceManager(experience As LongPtr /* HSTRING* */, ppvObject As IInspectable)
    End Interface
    
    [InterfaceId("0A73AEDC-1C68-410D-8D53-63AF80951E8F")]
    [Description("Use Windows.Internal.ShellExperience.TrayBatteryFlyout")]
    [OleAutomation(False)]
    Interface IExperienceManager_TrayBatteryFlyout Extends IInspectable
        Sub ShowFlyout(rect As  __x_ABI_CWindows_CFoundation_CRect)
        Sub HideFlyout()
    End Interface
    [InterfaceId("B1604325-6B59-427B-BF1B-80A2DB02D3D8")]
    [Description("Use Windows.Internal.ShellExperience.TrayClockFlyout")]
    [OleAutomation(False)]
    Interface IExperienceManager_TrayClockFlyout Extends IInspectable
        Sub ShowFlyout(rect As  __x_ABI_CWindows_CFoundation_CRect)
        Sub HideFlyout()
    End Interface
    [InterfaceId("7154C95D-C519-49BD-A97E-645BBFABE111")]
    [Description("Use Windows.Internal.ShellExperience.MtcUvc")]
    [OleAutomation(False)]
    Interface IExperienceManager_TrayMtcUvcFlyout Extends IInspectable
        Sub ShowFlyout(rect As  __x_ABI_CWindows_CFoundation_CRect)
        Sub HideFlyout()
    End Interface
    [InterfaceId("C9DDC674-B44B-4C67-9D79-2B237D9BE05A")]
    [Description("Use Windows.Internal.ShellExperience.NetworkFlyout")]
    [OleAutomation(False)]
    Interface IExperienceManager_NetworkFlyout Extends IInspectable
        Sub ShowFlyout(rect As  __x_ABI_CWindows_CFoundation_CRect)
        Sub HideFlyout()
    End Interface
    
    [InterfaceId("DEC04B18-357E-41D8-9B71-B991243BEA34")]
    [OleAutomation(False)]
    Interface IActionCenterExperienceManager Extends IInspectable
        Sub HotKeyInvoked(kind As Any)
        Sub Show(ByVal hstringUnknown As LongPtr /* HSTRING */, bSupressAnimations As Any, dwUnknown_ShouldBeOne As Any)
        Sub Hide(ByVal hstringUnknown As LongPtr /* HSTRING */, bSupressAnimations As Any)
    End Interface
    [InterfaceId("DEC04B18-357E-41D8-9B71-B991243BEA34")]
    [Description("Windows.Internal.ShellExperience.ControlCenter")]
    [OleAutomation(False)]
    Interface IControlCenterExperienceManager Extends IInspectable
        Sub HotKeyInvoked(kind As Any)
        Sub Show(ByVal hstringUnknown As LongPtr /* HSTRING */, bSupressAnimations As Any, dwUnknown_ShouldBeOne As Any)
        Sub Hide(ByVal hstringUnknown As LongPtr /* HSTRING */, bSupressAnimations As Any)
    End Interface
       
Module wdShellUndoc
    Public Function CLSID_ShellExperienceManagerFactory() As UUID
    '{2E8FCB18-A0EE-41AD-8EF8-77FB3A370CA5}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2E8FCB18, &HA0EE, &H41AD, &H8E, &HF8, &H77, &HFB, &H3A, &H37, &H0C, &HA5)
    CLSID_ShellExperienceManagerFactory = iid
    End Function
    Public Function IID_IShellExperienceManagerFactory() As UUID
    IID_IShellExperienceManagerFactory = CLSID_ShellExperienceManagerFactory
    End Function
    Public Function IID_TrayBatteryFlyoutExperienceManager() As UUID
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0a73aedc, &H1c68, &H410d, &H8d, &H53, &H63, &Haf, &H80, &H95, &H1e, &H8f)
    IID_TrayBatteryFlyoutExperienceManager = iid
    End Function
    Public Function IID_TrayClockFlyoutExperienceManager() As UUID
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hb1604325, &H6b59, &H427b, &Hbf, &H1b, &H80, &Ha2, &Hdb, &H02, &Hd3, &Hd8)
    IID_TrayClockFlyoutExperienceManager = iid
    End Function
    Public Function IID_TrayMtcUvcFlyoutExperienceManager() As UUID
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H7154c95d, &Hc519, &H49bd, &Ha9, &H7e, &H64, &H5b, &Hbf, &Hab, &HE1, &H11)
    IID_TrayMtcUvcFlyoutExperienceManager = iid
    End Function
    Public Function IID_NetworkFlyoutExperienceManager() As UUID
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HC9DDC674, &HB44B, &H4C67, &H9D, &H79, &H2B, &H23, &H7D, &H9B, &HE0, &H5A)
    IID_NetworkFlyoutExperienceManager = iid
    End Function
    Public Function IID_ActionCenterExperienceManager() As UUID
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hdec04b18, &H357e, &H41d8, &H9b, &H71, &Hb9, &H91, &H24, &H3b, &Hea, &H34)
    IID_ActionCenterExperienceManager = iid
    End Function
    Public Function IID_ControlCenterExperienceManager() As UUID
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hd669a58e, &H6b18, &H4d1d, &H90, &H04, &Ha8, &H86, &H2a, &Hdb, &H0a, &H20)
    IID_ControlCenterExperienceManager = iid
    End Function
    
    
    
     
    Public Declare PtrSafe Function SHCreateScope Lib "Windows.Storage.Search.dll" (ByRef riid As UUID, ByRef ppv As LongPtr) As Long
    Public Declare PtrSafe Function SHCreateScopeFromShellItemArray Lib "Windows.Storage.Search.dll" (ByVal si As IShellItemArray, ByRef riid As UUID, ByRef ppv As Any) As Long
    Public Declare PtrSafe Function SHCreateScopeFromIDListsEx Lib "Windows.Storage.Search.dll" (ByVal cidl As Long, apidl As LongPtr, ByVal type As SCOPE_ITEM_TYPE, ByVal depth As SCOPE_ITEM_DEPTH, ByVal flags As SCOPE_ITEM_FLAGS, ByRef riid As UUID, ByRef ppv As Any) As Long
    Public Declare PtrSafe Function SHCreateScopeItemFromIDList Lib "Windows.Storage.Search.dll" (ByVal pidl As LongPtr, ByVal type As SCOPE_ITEM_TYPE, ByVal depth As SCOPE_ITEM_DEPTH, ByVal flags As SCOPE_ITEM_FLAGS, ByRef id2 As UUID, ByRef ppv As Any) As Long
    Public Declare PtrSafe Function SHCreateScopeItemFromKnownFolder Lib "Windows.Storage.Search.dll" (ByRef id1 As UUID, ByVal type As SCOPE_ITEM_TYPE, ByVal depth As SCOPE_ITEM_DEPTH, ByVal flags As SCOPE_ITEM_FLAGS, ByRef id2 As UUID, ByRef ppv As Any) As Long
    Public Declare PtrSafe Function SHCreateScopeItemFromShellItem Lib "Windows.Storage.Search.dll" (ByVal si As IShellItem, ByVal type As SCOPE_ITEM_TYPE, ByVal depth As SCOPE_ITEM_DEPTH, ByVal flags As SCOPE_ITEM_FLAGS, ByRef id2 As UUID, ByRef ppv As Any) As Long
    
    
    
    Public Enum SCOPE_ITEM_TYPE
        SI_TYPE_INVALID = 0
        SI_TYPE_INCLUDE = 1
        SI_TYPE_EXCLUDE = 2
    End Enum
    
    Public Enum SCOPE_ITEM_DEPTH
        SI_DEPTH_INVALID = 0
        SI_DEPTH_SHALLOW = 1
        SI_DEPTH_DEEP = 2
    End Enum
    
    Public Enum SCOPE_ITEM_FLAGS
        SI_FLAG_DEFAULT = 0
        SI_FLAG_FORCEEXHAUSTIVE = 1
        SI_FLAG_KNOWNFOLDER = 2
        SI_FLAG_FASTPROPERTIESONLY = 4
        SI_FLAG_FASTITEMSONLY = 8
        SI_FLAG_NOINFOBAR = 16
        SI_FLAG_USECHILDSCOPES = 32
        SI_FLAG_FASTPROVIDERSONLY = 64
        SI_FLAG_OVERRIDE_FOLDER_BEHAVIOR = 128
    End Enum
    
    
    Public Enum AdjacentDesktop
        LeftDirection = 3
        RightDirection = 4
    End Enum
    
    Public Function IID_ISearchFolderItemFactoryPrivEx() As UUID
    '{BD59C2F9-F763-400D-A76E-028C35D047B8}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HBD59C2F9, CInt(&HF763), CInt(&H400D), &HA7, &H6E, &H02, &H8C, &H35, &HD0, &H47, &HB8)
     IID_ISearchFolderItemFactoryPrivEx = iid
    End Function
    Public Function IID_ISearchFolderItemFactoryPriv() As UUID
    '{18455d05-d8f8-47f0-ba4c-c3aaf9c7035f}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H18455d05, CInt(&Hd8f8), CInt(&H47f0), &Hba, &H4c, &Hc3, &Haa, &Hf9, &Hc7, &H03, &H5f)
     IID_ISearchFolderItemFactoryPriv = iid
    End Function
    Public Function CLSID_ScopeFactory() As UUID
    '{6746C347-576B-4F73-9012-CDFEEA251BC4}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H6746C347, CInt(&H576B), CInt(&H4F73), &H90, &H12, &HCD, &HFE, &HEA, &H25, &H1B, &HC4)
     CLSID_ScopeFactory = iid
    End Function
    Public Function IID_IScopeFactory() As UUID
    '{54410B83-6787-4418-9735-5AAAABE83A9A}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H54410B83, CInt(&H6787), CInt(&H4418), &H97, &H35, &H5A, &HAA, &HAB, &HE8, &H3A, &H9A)
     IID_IScopeFactory = iid
    End Function
    Public Function IID_IRootAndRelativeParsingFolder() As UUID
    '{52B14A6A-58F1-45BD-B00A-DCE7403D951E}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H52B14A6A, CInt(&H58F1), CInt(&H45BD), &HB0, &H0A, &HDC, &HE7, &H40, &H3D, &H95, &H1E)
     IID_IRootAndRelativeParsingFolder = iid
    End Function
    Public Function CLSID_ClientExtractIcon() As UUID
    '{25585DC7-4DA0-438D-AD04-E42C8D2D64B9}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H25585DC7, CInt(&H4DA0), CInt(&H438D), &HAD, &H04, &HE4, &H2C, &H8D, &H2D, &H64, &HB9)
     CLSID_ClientExtractIcon = iid
    End Function
    Public Function IID_IExplorerHost() As UUID
    '{489E9453-869B-4BCC-A1C7-48B5285FD9D8}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H489E9453, CInt(&H869B), CInt(&H4BCC), &HA1, &HC7, &H48, &HB5, &H28, &H5F, &HD9, &HD8)
     IID_IExplorerHost = iid
    End Function
    Public Function IID_IExplorerHost2() As UUID
    '{50A87BAA-5F79-4C31-B6B3-28F6F2D097E6}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H50A87BAA, CInt(&H5F79), CInt(&H4C31), &HB6, &HB3, &H28, &HF6, &HF2, &HD0, &H97, &HE6)
     IID_IExplorerHost2 = iid
    End Function
    
    Public Function SID_ImmersiveShellHookService() As UUID
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4624BD39, &H5FC3, &H44A8, &HA8, &H09, &H16, &H3A, &H83, &H6E, &H90, &H31)
    SID_ImmersiveShellHookService = iid
    End Function
    Public Function IID_IImmersiveShellHookService() As UUID
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H914D9B3A, &H5E53, &H4E14, &HBB, &HBA, &H46, &H06, &H2A, &HCB, &H35, &HA4)
    IID_IImmersiveShellHookService = iid
    End Function
    Public Function CLSID_ImmersiveShellBuilder() As UUID
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hc71c41f1, &Hddad, &H42dc, &Ha8, &Hfc, &Hf5, &Hbf, &Hc6, &H1d, &Hf9, &H57)
    CLSID_ImmersiveShellBuilder = iid
    End Function
    Public Function IID_ImmersiveShellBuilder() As UUID
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H1c56b3e4, &He6ea, &H4ced, &H8a, &H74, &H73, &Hb7, &H2c, &H6b, &Hd4, &H35)
    IID_ImmersiveShellBuilder = iid
    End Function
    Public Function IID_ImmersiveBehavior() As UUID
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H139275e0, &Hd644, &H4214, &Hb4, &H5e, &Hd9, &H27, &H8c, &H4a, &H85, &H01)
    IID_ImmersiveBehavior = iid
    End Function
    Public Function CLSID_NowPlayingSessionManager() As UUID
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &Hbcbb9860, &Hc012, &H4ad7, &Ha9, &H38, &H6e, &H33, &H7a, &He6, &Hab, &Ha5)
    CLSID_NowPlayingSessionManager = iid
    End Function
    
    
    Public Enum APPLICATION_VIEW_COMPATIBILITY_POLICY
        AVCP_NONE = 0
        AVCP_SMALL_SCREEN = 1
        AVCP_TABLET_SMALL_SCREEN = 2
        AVCP_VERY_SMALL_SCREEN = 3
        AVCP_HIGH_SCALE_FACTOR = 4
    End Enum
    
    Public Enum APPLICATION_VIEW_CLOAK_TYPE
        AVCT_NONE = 0
        AVCT_DEFAULT = 1
        AVCT_VIRTUAL_DESKTOP = 2
    End Enum
    
    Public Enum IMMERSIVE_MONITOR_FILTER_FLAGS
        IMMERSIVE_MONITOR_FILTER_FLAGS_NONE = &H0
        IMMERSIVE_MONITOR_FILTER_FLAGS_DISABLE_TRAY = &H1
    End Enum
    
    Public Enum IMMERSIVE_MONITOR_MOVE_DIRECTION
        IMMD_PREVIOUS = 0
        IMMD_NEXT = 1
    End Enum
    
    
    Public Function IID_IBrowserProgressConnecion() As UUID
    '{20174539-b2c7-4ec7-970b-04201f9cdbad}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H20174539, CInt(&Hb2c7), CInt(&H4ec7), &H97, &H0b, &H04, &H20, &H1f, &H9c, &Hdb, &Had)
     IID_IBrowserProgressConnecion = iid
    End Function
 
    [Description("For Windows 10.")]
    Public Function CLSID_VirtualDesktopManagerInternal() As UUID
    '{C5E0CDCA-7B6E-41B2-9FC4-D93975CC467B}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HC5E0CDCA, CInt(&H7B6E), CInt(&H41B2), &H9F, &HC4, &HD9, &H39, &H75, &HCC, &H46, &H7B)
     CLSID_VirtualDesktopManagerInternal = iid
    End Function
    [Description("For Windows 10.")]
    Public Function IID_IVirtualDesktop() As UUID
    '{FF72FFDD-BE7E-43FC-9C03-AD81681E88E4}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HFF72FFDD, CInt(&HBE7E), CInt(&H43FC), &H9C, &H03, &HAD, &H81, &H68, &H1E, &H88, &HE4)
     IID_IVirtualDesktop = iid
    End Function
    [Description("For Windows 10.")]
    Public Function IID_IApplicationView() As UUID
    '{372E1D3B-38D3-42E4-A15B-8AB2B178F513}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H372E1D3B, CInt(&H38D3), CInt(&H42E4), &HA1, &H5B, &H8A, &HB2, &HB1, &H78, &HF5, &H13)
     IID_IApplicationView = iid
    End Function
    Public Function IID_IApplicationView1493() As UUID
    '{9AC0B5C8-1484-4C5B-9533-4134A0F97CEA}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9AC0B5C8, CInt(&H1484), CInt(&H4C5B), &H95, &H33, &H41, &H34, &HA0, &HF9, &H7C, &HEA)
     IID_IApplicationView1493 = iid
    End Function
    
    
    Public Function SID_ImmersiveMonitorManager() As UUID
    '{47094E3A-0CF2-430F-806F-CF9E4F0F12DD}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H47094E3A, CInt(&H0CF2), CInt(&H430F), &H80, &H6F, &HCF, &H9E, &H4F, &H0F, &H12, &HDD)
     SID_ImmersiveMonitorManager = iid
    End Function
    [Description("For Windows 10")]
    Public Function IID_IImmersiveMonitor() As UUID
    '{880B26F8-9197-43D0-8045-8702D0D72000}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H880B26F8, CInt(&H9197), CInt(&H43D0), &H80, &H45, &H87, &H02, &HD0, &HD7, &H20, &H00)
     IID_IImmersiveMonitor = iid
    End Function
    Public Function IID_IImmersiveMonitorManager() As UUID
    '{4d4c1e64-e410-4faa-bafa-59ca069bfec2}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H4d4c1e64, CInt(&He410), CInt(&H4faa), &Hba, &Hfa, &H59, &Hca, &H06, &H9b, &Hfe, &Hc2)
     IID_IImmersiveMonitorManager = iid
    End Function
    
    
    
    Public Function IID_IGlobalOptions() As UUID
    '{0000015B-0000-0000-C000-000000000046}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0000015B, CInt(&H0000), CInt(&H0000), &HC0, &H00, &H00, &H00, &H00, &H00, &H00, &H46)
     IID_IGlobalOptions = iid
    End Function
    Public Function IID_ISecurityOptions() As UUID
    '{0000015F-0000-0000-C000-000000000046}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0000015F, CInt(&H0000), CInt(&H0000), &HC0, &H00, &H00, &H00, &H00, &H00, &H00, &H46)
     IID_ISecurityOptions = iid
    End Function
    Public Function CLSID_GlobalOptions() As UUID
    '{0000034B-0000-0000-C000-000000000046}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0000034B, CInt(&H0000), CInt(&H0000), &HC0, &H00, &H00, &H00, &H00, &H00, &H00, &H46)
     CLSID_GlobalOptions = iid
    End Function
End Module