'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'DocumentTarget.h

[InterfaceId("1b8efec4-3019-4c27-964e-367202156906")]
[OleAutomation(False)]
[Description("Document Target IPrintDocumentPackageTarget interface: allows user to enumerate supported package target types and create one with type ID.It also supports tracking package printing progess and cancelling")]
Interface IPrintDocumentPackageTarget Extends IUnknown
    [Description("This method is called for enumerating supported target types. The first GUID is preferred type by target.")]
    Sub GetPackageTargetTypes(targetCount As Long, targetTypes As LongPtr)
    [Description("This method is called for createing a target instance.")]
    Sub GetPackageTarget(guidTargetType As UUID, riid As UUID, ppvTarget As Any)
    Sub Cancel()
End Interface

[InterfaceId("c560298a-535c-48f9-866a-632540660cb4")]
[OleAutomation(False)]
[Description("Document Target IPrintDocumentPackageTarget2 interface: allows users to see if the target printer is an Ipp Printer, and returns IppPrinterDevice if the target is an Ipp Printer.")]
Interface IPrintDocumentPackageTarget2 Extends IUnknown
    [Description("This method returns true if the printer is an IppPrinter")]
    Sub GetIsTargetIppPrinter(isIppPrinter As BOOL)
    [Description("This method returns IppPrinterDevice for the target printer.")]
    Sub GetTargetIppPrintDevice(riid As UUID, ppvTarget As Any)
End Interface
    
[InterfaceId("ed90c8ad-5c34-4d05-a1ec-0e8a9b3ad7af")]
[OleAutomation(False)]
'[Dual]
[COMExtensible(False)]
Interface IPrintDocumentPackageStatusEvent Extends IDispatch
    [DispId(1), Description("This method is called for updating package status when the progressive print job event signals or job completes.")]
    Sub PackageStatusUpdated(packageStatus As PrintDocumentPackageStatus)
End Interface

[InterfaceId("d2959bf7-b31b-4a3d-9600-712eb1335ba4")]
[OleAutomation(False)]
Interface IPrintDocumentPackageTargetFactory Extends IUnknown
    [Description("This method is the entry point for creating IPrintDocumentPackageTarget.")]
    Sub CreateDocumentPackageTargetForPrintJob(ByVal printerName As LongPtr, ByVal jobName As LongPtr, ByVal jobOutputStream As IStream, ByVal jobPrintTicketStatus As IStream, dockPackageTarget As IPrintDocumentPackageTarget)
End Interface
    
[CoClassId("4842669e-9947-46ea-8ba2-d8cce432c2ca")]
[COMCreatable(False)]
CoClass PrintDocumentPackageTarget
    [Default] Interface IPrintDocumentPackageTarget
    [Source] Interface IPrintDocumentPackageStatusEvent
End CoClass
    
[CoClassId("348ef17d-6c81-4982-92b4-ee188a43867a")]
CoClass PrintDocumentPackageTargetFactory
    [Default] Interface IPrintDocumentPackageTargetFactory
End CoClass
    

#If WDL_QUALIFY Then
[MustBeQualified]
#End If
Module wdDocTarget

    Public Enum PrintDocumentPackageCompletion
        PrintDocumentPackageCompletion_InProgress = 0
        PrintDocumentPackageCompletion_Completed
        PrintDocumentPackageCompletion_Canceled
        PrintDocumentPackageCompletion_Failed
    End Enum

    Public Type PrintDocumentPackageStatus
        JobId As Long
        CurrentDocument As Long
        CurrentPage As Long
        CurrentPageTotal As Long
        Completion As PrintDocumentPackageCompletion
        PackageStatus As Long
    End Type
    
    Public Function ID_DOCUMENTPACKAGETARGET_MSXPS() As UUID
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9cae40a8, &Hded1, &H41c9, &Ha9, &Hfd, &Hd7, &H35, &Hef, &H33, &Hae, &Hda)
    ID_DOCUMENTPACKAGETARGET_MSXPS = iid
    End Function
    Public Function ID_DOCUMENTPACKAGETARGET_OPENXPS() As UUID
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0056bb72, &H8c9c, &H4612, &Hbd, &H0f, &H93, &H01, &H2a, &H87, &H09, &H9d)
    ID_DOCUMENTPACKAGETARGET_OPENXPS = iid
    End Function
    
End Module