'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'The Interlocked* functions are not exported on x64; they get special handling here via a static lib.
'See project Interlocked64 for full details and source.
#If (WINDEVLIB_LITE = 0) Then
#If (WINDEVLIB_NOLIBS = 0) Then
#If Win64 Then
Import Library "/StaticLibraries/Interlocked64.obj" As Interlocked
#Else
Import Library "/StaticLibraries/Interlocked32.obj" As Interlocked32
#End If

Module wdAPIInterlocked

	#If Win64 Then
    #If (TWINBASIC_BUILD < 606) Then
    Public Declare PtrSafe Function InterlockedIncrement CDecl Lib Interlocked Alias "x64InterlockedIncrement" (Addend As Long) As Long
    Public Declare PtrSafe Function InterlockedDecrement CDecl Lib Interlocked Alias "x64InterlockedDecrement" (Addend As Long) As Long
    Public Declare PtrSafe Function InterlockedExchange CDecl Lib Interlocked Alias "x64InterlockedExchange" (target As Long, ByVal value As Long) As Long
    #End If
    Public Declare PtrSafe Function InterlockedIncrement16 CDecl Lib Interlocked Alias "x64InterlockedIncrement16" (Addend As Integer) As Integer
    Public Declare PtrSafe Function InterlockedDecrement16 CDecl Lib Interlocked Alias "x64InterlockedDecrement16" (Addend As Integer) As Integer
    Public Declare PtrSafe Function InterlockedIncrement64 CDecl Lib Interlocked Alias "x64InterlockedIncrement64" (Addend As LongLong) As LongLong
    Public Declare PtrSafe Function InterlockedDecrement64 CDecl Lib Interlocked Alias "x64InterlockedDecrement64" (Addend As LongLong) As LongLong
    
    Public Declare PtrSafe Function InterlockedExchangeRef CDecl Lib Interlocked Alias "x64InterlockedExchange64" (target As LongLong, value As Any) As LongLong
    Public Declare PtrSafe Function InterlockedExchange8 CDecl Lib Interlocked Alias "x64InterlockedExchange8" (target As Byte, ByVal value As Byte) As Byte
    Public Declare PtrSafe Function InterlockedExchange16 CDecl Lib Interlocked Alias "x64InterlockedExchange16" (Destination As Integer, ByVal ExChange As Integer) As Integer
    Public Declare PtrSafe Function InterlockedExchange64 CDecl Lib Interlocked Alias "x64InterlockedExchange64" (target As LongLong, ByVal value As LongLong) As LongLong
    
    Public Declare PtrSafe Function InterlockedExchangePointer CDecl Lib Interlocked Alias "x64InterlockedExchangePointer" (target As Any, value As Any) As LongPtr
    
    Public Declare PtrSafe Function InterlockedExchangeAdd CDecl Lib Interlocked Alias "x64InterlockedExchangeAdd" (Addend As Long, ByVal value As Long) As Long
    Public Declare PtrSafe Function InterlockedExchangeAdd64 CDecl Lib Interlocked Alias "x64InterlockedExchangeAdd64" (Addend As LongLong, ByVal value As LongLong) As LongLong
   
    Public Declare PtrSafe Function InterlockedAdd CDecl Lib Interlocked Alias "x64InterlockedAdd" (Addend As Long, ByVal value As Long) As Long
    Public Declare PtrSafe Function InterlockedAdd64 CDecl Lib Interlocked Alias "x64InterlockedAdd64" (Addend As LongLong, ByVal value As LongLong) As LongLong
    
    Public Declare PtrSafe Function InterlockedAnd CDecl Lib Interlocked Alias "x64InterlockedAnd" (Destination As Long, ByVal value As Long) As Long
    Public Declare PtrSafe Function InterlockedAnd8 CDecl Lib Interlocked Alias "x64InterlockedAnd8" (Destination As Byte, ByVal value As Byte) As Byte
    Public Declare PtrSafe Function InterlockedAnd16 CDecl Lib Interlocked Alias "x64InterlockedAnd16" (Destination As Integer, ByVal value As Integer) As Integer
    Public Declare PtrSafe Function InterlockedAnd64 CDecl Lib Interlocked Alias "x64InterlockedAnd64" (Destination As LongLong, ByVal value As LongLong) As LongLong
    
    Public Declare PtrSafe Function InterlockedOr CDecl Lib Interlocked Alias "x64InterlockedOr" (Destination As Long, ByVal value As Long) As Long
    Public Declare PtrSafe Function InterlockedOr8 CDecl Lib Interlocked Alias "x64InterlockedOr8" (Destination As Byte, ByVal value As Byte) As Byte
    Public Declare PtrSafe Function InterlockedOr16 CDecl Lib Interlocked Alias "x64InterlockedOr16" (Destination As Integer, ByVal value As Integer) As Integer
    Public Declare PtrSafe Function InterlockedOr64 CDecl Lib Interlocked Alias "x64InterlockedOr64" (Destination As LongLong, ByVal value As LongLong) As LongLong

    Public Declare PtrSafe Function InterlockedXor CDecl Lib Interlocked Alias "x64InterlockedXor" (Destination As Long, ByVal value As Long) As Long
    Public Declare PtrSafe Function InterlockedXor8 CDecl Lib Interlocked Alias "x64InterlockedXor8" (Destination As Byte, ByVal value As Byte) As Byte
    Public Declare PtrSafe Function InterlockedXor16 CDecl Lib Interlocked Alias "x64InterlockedXor16" (Destination As Integer, ByVal value As Integer) As Integer
    Public Declare PtrSafe Function InterlockedXor64 CDecl Lib Interlocked Alias "x64InterlockedXor64" (Destination As LongLong, ByVal value As LongLong) As LongLong

    Public Declare PtrSafe Function InterlockedCompareExchange CDecl Lib Interlocked Alias "x64InterlockedCompareExchange" (Destination As Long, ByVal Exchange As Long, ByVal Comperand As Long) As Long
    Public Declare PtrSafe Function InterlockedCompareExchange16 CDecl Lib Interlocked Alias "x64InterlockedCompareExchange16" (Destination As Integer, ByVal Exchange As Integer, ByVal Comperand As Integer) As Integer
    Public Declare PtrSafe Function InterlockedCompareExchange64 CDecl Lib Interlocked Alias "x64InterlockedCompareExchange64" (Destination As LongLong, ByVal Exchange As LongLong, ByVal Comperand As LongLong) As LongLong
    'Public Declare PtrSafe Function InterlockedCompareExchange128 CDecl Lib Interlocked Alias "x64InterlockedCompareExchange128" (Destination As LongLong, ByVal ExchangeHigh As LongLong, ByVal ExchangeLow As LongLong, ByVal Comperand As Integer) As Byte
    Public Declare PtrSafe Function InterlockedCompareExchangePointer CDecl Lib Interlocked Alias "x64InterlockedCompareExchangePointer" (Destination As Any, Exchange As Any, Comperand As Any) As LongPtr
    
    #Else
        #If WINDEVLIB_AVOID_INTRINSICS Then
            'Public Declare PtrSafe Function InterlockedIncrement Lib "kernel32" (Addend As Long) As Long
            'Public Declare PtrSafe Function InterlockedDecrement Lib "kernel32" (Addend As Long) As Long
            ' Public Declare PtrSafe Function InterlockedExchange Lib "kernel32" (target As Long, ByVal value As Long) As Long
            Public Declare PtrSafe Function InterlockedExchangeAdd Lib "kernel32" (Addend As Long, ByVal value As Long) As Long
            Public Declare PtrSafe Function InterlockedCompareExchange Lib "kernel32" (Destination As Long, ByVal Exchange As Long, ByVal Comperand As Long) As Long
            Public Declare PtrSafe Function InterlockedCompareExchange64 Lib "kernel32" (Destination As LongLong, ByVal Exchange As LongLong, ByVal Comperand As LongLong) As LongLong
        #Else
            #If (TWINBASIC_BUILD < 606) Then
            Public Declare PtrSafe Function InterlockedIncrement CDecl Lib Interlocked32 Alias "x86InterlockedIncrement" (Addend As Long) As Long
            Public Declare PtrSafe Function InterlockedExchange CDecl Lib Interlocked32 Alias "x86InterlockedExchange" (target As Long, ByVal value As Long) As Long
            Public Declare PtrSafe Function InterlockedDecrement CDecl Lib Interlocked32 Alias "x86InterlockedDecrement" (Addend As Long) As Long
            #End If
            Public Declare PtrSafe Function InterlockedExchangeAdd CDecl Lib Interlocked32 Alias "x86InterlockedExchangeAdd" (Addend As Long, ByVal value As Long) As Long
            Public Declare PtrSafe Function InterlockedCompareExchange CDecl Lib Interlocked32 Alias "x86InterlockedCompareExchange" (Destination As Long, ByVal Exchange As Long, ByVal Comperand As Long) As Long
            Public Declare PtrSafe Function InterlockedCompareExchange64 CDecl Lib Interlocked32 Alias "x86InterlockedCompareExchange64" (Destination As LongLong, ByVal Exchange As LongLong, ByVal Comperand As LongLong) As LongLong
        #End If
    'Unavoidable:
    Public Declare PtrSafe Function InterlockedIncrement16 CDecl Lib Interlocked32 Alias "x86InterlockedIncrement16" (Addend As Integer) As Integer
    Public Declare PtrSafe Function InterlockedDecrement16 CDecl Lib Interlocked32 Alias "x86InterlockedDecrement16" (Addend As Integer) As Integer
    Public Declare PtrSafe Function InterlockedIncrement64 CDecl Lib Interlocked32 Alias "x86InterlockedIncrement64" (Addend As LongLong) As LongLong
    Public Declare PtrSafe Function InterlockedDecrement64 CDecl Lib Interlocked32 Alias "x86InterlockedDecrement64" (Addend As LongLong) As LongLong
    
    Public Declare PtrSafe Function InterlockedExchangeRef CDecl Lib Interlocked32 Alias "x86InterlockedExchange64" (target As LongLong, value As Any) As LongLong
    Public Declare PtrSafe Function InterlockedExchange8 CDecl Lib Interlocked32 Alias "x86InterlockedExchange8" (target As Byte, ByVal value As Byte) As Byte
    Public Declare PtrSafe Function InterlockedExchange16 CDecl Lib Interlocked32 Alias "x86InterlockedExchange16" (Destination As Integer, ByVal ExChange As Integer) As Integer
    Public Declare PtrSafe Function InterlockedExchange64 CDecl Lib Interlocked32 Alias "x86InterlockedExchange64" (target As LongLong, ByVal value As LongLong) As LongLong
    
    Public Declare PtrSafe Function InterlockedExchangePointer CDecl Lib Interlocked32 Alias "x86InterlockedExchangePointer" (target As Any, value As Any) As LongPtr
    
    Public Declare PtrSafe Function InterlockedExchangeAdd64 CDecl Lib Interlocked32 Alias "x86InterlockedExchangeAdd64" (Addend As LongLong, ByVal value As LongLong) As LongLong
   
    Public Declare PtrSafe Function InterlockedAdd CDecl Lib Interlocked32 Alias "x86InterlockedAdd" (Addend As Long, ByVal value As Long) As Long
    Public Declare PtrSafe Function InterlockedAdd64 CDecl Lib Interlocked32 Alias "x86InterlockedAdd64" (Addend As LongLong, ByVal value As LongLong) As LongLong
    
    Public Declare PtrSafe Function InterlockedAnd CDecl Lib Interlocked32 Alias "x86InterlockedAnd" (Destination As Long, ByVal value As Long) As Long
    Public Declare PtrSafe Function InterlockedAnd8 CDecl Lib Interlocked32 Alias "x86InterlockedAnd8" (Destination As Byte, ByVal value As Byte) As Byte
    Public Declare PtrSafe Function InterlockedAnd16 CDecl Lib Interlocked32 Alias "x86InterlockedAnd16" (Destination As Integer, ByVal value As Integer) As Integer
    Public Declare PtrSafe Function InterlockedAnd64 CDecl Lib Interlocked32 Alias "x86InterlockedAnd64" (Destination As LongLong, ByVal value As LongLong) As LongLong
    
    Public Declare PtrSafe Function InterlockedOr CDecl Lib Interlocked32 Alias "x86InterlockedOr" (Destination As Long, ByVal value As Long) As Long
    Public Declare PtrSafe Function InterlockedOr8 CDecl Lib Interlocked32 Alias "x86InterlockedOr8" (Destination As Byte, ByVal value As Byte) As Byte
    Public Declare PtrSafe Function InterlockedOr16 CDecl Lib Interlocked32 Alias "x86InterlockedOr16" (Destination As Integer, ByVal value As Integer) As Integer
    Public Declare PtrSafe Function InterlockedOr64 CDecl Lib Interlocked32 Alias "x86InterlockedOr64" (Destination As LongLong, ByVal value As LongLong) As LongLong

    Public Declare PtrSafe Function InterlockedXor CDecl Lib Interlocked32 Alias "x86InterlockedXor" (Destination As Long, ByVal value As Long) As Long
    Public Declare PtrSafe Function InterlockedXor8 CDecl Lib Interlocked32 Alias "x86InterlockedXor8" (Destination As Byte, ByVal value As Byte) As Byte
    Public Declare PtrSafe Function InterlockedXor16 CDecl Lib Interlocked32 Alias "x86InterlockedXor16" (Destination As Integer, ByVal value As Integer) As Integer
    Public Declare PtrSafe Function InterlockedXor64 CDecl Lib Interlocked32 Alias "x86InterlockedXor64" (Destination As LongLong, ByVal value As LongLong) As LongLong

    Public Declare PtrSafe Function InterlockedCompareExchange16 CDecl Lib Interlocked32 Alias "x86InterlockedCompareExchange16" (Destination As Integer, ByVal Exchange As Integer, ByVal Comperand As Integer) As Integer
    'Public Declare PtrSafe Function InterlockedCompareExchange128 CDecl Lib Interlocked32 Alias "x86InterlockedCompareExchange128" (Destination As LongLong, ByVal ExchangeHigh As LongLong, ByVal ExchangeLow As LongLong, ByVal Comperand As Integer) As Byte
    Public Declare PtrSafe Function InterlockedCompareExchangePointer CDecl Lib Interlocked32 Alias "x86InterlockedCompareExchangePointer" (Destination As Any, Exchange As Any, Comperand As Any) As LongPtr
            
	#End If
    

End Module
#Else
'Version without static lib imports
Module wdAPIInterlocked
    #If (TWINBASIC_BUILD < 606) Then
    #If Win64 Then
    [Unimplemented, Description("Not exported on x64; remove WINDEVLIB_NOLIBS option to use static library containing compiler intrinsic versions from C++.")]
    #End If
    Public Declare PtrSafe Function InterlockedIncrement Lib "kernel32" (Addend As Long) As Long
    #If Win64 Then
    [Unimplemented, Description("Not exported on x64; remove WINDEVLIB_NOLIBS option to use static library containing compiler intrinsic versions from C++.")]
    #End If
    Public Declare PtrSafe Function InterlockedExchange Lib "kernel32" (target As Long, ByVal value As Long) As Long
    #If Win64 Then
    [Unimplemented, Description("Not exported on x64; remove WINDEVLIB_NOLIBS option to use static library containing compiler intrinsic versions from C++.")]
    #End If
    Public Declare PtrSafe Function InterlockedDecrement Lib "kernel32" (Addend As Long) As Long
    #End If
    #If Win64 Then
    [Unimplemented, Description("Not exported on x64; remove WINDEVLIB_NOLIBS option to use static library containing compiler intrinsic versions from C++.")]
    #End If
    Public Declare PtrSafe Function InterlockedDecrement Lib "kernel32" (Addend As Long) As Long
    #If Win64 Then
    [Unimplemented, Description("Not exported on x64; remove WINDEVLIB_NOLIBS option to use static library containing compiler intrinsic versions from C++.")]
    #End If
    Public Declare PtrSafe Function InterlockedExchangeAdd Lib "kernel32" (Addend As Long, ByVal value As Long) As Long
    #If Win64 Then
    [Unimplemented, Description("Not exported on x64; remove WINDEVLIB_NOLIBS option to use static library containing compiler intrinsic versions from C++.")]
    #End If
    Public Declare PtrSafe Function InterlockedCompareExchange Lib "kernel32" (Destination As Long, ByVal Exchange As Long, ByVal Comperand As Long) As Long
    #If Win64 Then
    [Unimplemented, Description("Not exported on x64; remove WINDEVLIB_NOLIBS option to use static library containing compiler intrinsic versions from C++.")]
    #End If
    Public Declare PtrSafe Function InterlockedCompareExchange64 Lib "kernel32" (Destination As LongLong, ByVal Exchange As LongLong, ByVal Comperand As LongLong) As LongLong
End Module
#End If
#End If

#If (TWINBASIC_BUILD >= 606) Then
#If (WINDEVLIB_LITE = 0) Then
Module wdAPIInterlockedInline
    #If WINDEVLIB_AVOID_INTRINSICS Then
        #If Win64 Then
        [Unimplemented, Description("Not exported on x64; remove WINDEVLIB_NOLIBS option to use static library containing compiler intrinsic versions from C++.")]
        #End If
        Public Declare PtrSafe Function InterlockedIncrement Lib "kernel32" (Addend As Long) As Long
        #If Win64 Then
        [Unimplemented, Description("Not exported on x64; remove WINDEVLIB_NOLIBS option to use static library containing compiler intrinsic versions from C++.")]
        #End If
        Public Declare PtrSafe Function InterlockedExchange Lib "kernel32" (target As Long, ByVal value As Long) As Long
        #If Win64 Then
        [Unimplemented, Description("Not exported on x64; remove WINDEVLIB_NOLIBS option to use static library containing compiler intrinsic versions from C++.")]
        #End If
        Public Declare PtrSafe Function InterlockedDecrement Lib "kernel32" (Addend As Long) As Long
    #Else
    [IgnoreWarnings(TB0025)]
    Public Function InterlockedIncrement CDecl Naked(Addend As Long) As Long
    #If Win64 Then
        Emit(&Hb8, &H01, &H00, &H00, &H00)        ' mov    eax,0x1
        Emit(&Hf0, &H0f, &Hc1, &H41, &H00)        ' lock xadd DWORD PTR [rcx+0x4],eax
        Emit(&Hff, &Hc0)                          ' inc    eax
        Emit(&Hc3)                                ' ret 
    #Else
        Emit(&H8b, &H4c, &H24, &H04)       ' mov     ecx, DWORD PTR _Addend$[esp-4]
        Emit(&Hb8, &H01, &H00, &H00, &H00) ' mov     eax, 1
        Emit(&Hf0, &H0f, &Hc1, &H01)       ' lock xadd DWORD PTR [ecx], eax
        Emit(&H40)                         ' inc     eax
        Emit(&Hc3)                         ' ret     0
    #End If
    End Function
    [IgnoreWarnings(TB0025)]
    Public Function InterlockedDecrement CDecl Naked(Addend As Long) As Long
    #If Win64 Then
        Emit(&Hb8, &Hff, &Hff, &Hff, &Hff) 'mov     eax, -1
        Emit(&Hf0, &H0f, &Hc1, &H01)       'lock xadd DWORD PTR [rcx], eax
        Emit(&Hff, &Hc8)                   'dec     eax
        Emit(&Hc3)                         'ret     0
    #Else
        Emit(&H8b, &H4c, &H24, &H04)     'mov     ecx, DWORD PTR [esp-4]
        Emit(&H83, &Hc8, &Hff)           'or      eax, -1
        Emit(&Hf0, &H0f, &Hc1, &H01)     'lock xadd DWORD PTR [ecx], eax
        Emit(&H48)                       'dec     eax
        Emit(&Hc3)                       'ret     0    
    #End If
    End Function
    [IgnoreWarnings(TB0025)]
    Public Function InterlockedExchange CDecl Naked(target As Long, ByVal value As Long) As Long
    #If Win64 Then
        Emit(&H87, &H11)   'xchg    DWORD PTR [rcx], edx
        Emit(&H8b, &Hc2)   'mov     eax, edx
        Emit(&Hc3)         'ret     0 
    #Else
        Emit(&H8b, &H44, &H24, &H08)   'mov     eax, DWORD PTR [esp-4]
        Emit(&H8b, &H4c, &H24, &H04)   'mov     ecx, DWORD PTR  [esp-4]
        Emit(&H87, &H01)               'xchg    DWORD PTR [ecx], eax
        Emit(&Hc3)                     'ret     0    
    #End If
    End Function
 
    #End If
End Module
#End If
#End If