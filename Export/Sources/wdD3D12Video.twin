'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'd3d12video.h

#If WDL_NO_DIRECTX = 0 Then


[InterfaceId("0946B7C9-EBF6-4047-BB73-8683E27DBB1F")]
[OleAutomation(False)]
Interface ID3D12VideoDecoderHeap Extends ID3D12Pageable
    [PreserveSig]
    Function GetDesc() As D3D12_VIDEO_DECODER_HEAP_DESC
End Interface

[InterfaceId("1F052807-0B46-4ACC-8A89-364F793718A4")]
[OleAutomation(False)]
Interface ID3D12VideoDevice Extends stdole.IUnknown
    Sub CheckFeatureSupport(ByVal FeatureVideo As D3D12_FEATURE_VIDEO, ByRef pFeatureSupportData As Any, ByVal FeatureSupportDataSize As Long)
    Sub CreateVideoDecoder(ByRef pDesc As D3D12_VIDEO_DECODER_DESC, ByRef riid As UUID, ByRef ppVideoDecoder As Any)
    Sub CreateVideoDecoderHeap(ByRef pVideoDecoderHeapDesc As D3D12_VIDEO_DECODER_HEAP_DESC, ByRef riid As UUID, ByRef ppVideoDecoderHeap As Any)
    Sub CreateVideoProcessor(ByVal NodeMask As Long, ByRef pOutputStreamDesc As D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC, ByVal NumInputStreamDescs As Long, ByRef pInputStreamDescs As D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC, ByRef riid As UUID, ByRef ppVideoProcessor As Any)
End Interface

[InterfaceId("C59B6BDC-7720-4074-A136-17A156037470")]
[OleAutomation(False)]
Interface ID3D12VideoDecoder Extends ID3D12Pageable
    [PreserveSig]
    Function GetDesc() As D3D12_VIDEO_DECODER_DESC
End Interface

[InterfaceId("304FDB32-BEDE-410A-8545-943AC6A46138")]
[OleAutomation(False)]
Interface ID3D12VideoProcessor Extends ID3D12Pageable
    [PreserveSig]
    Function GetNodeMask() As Long
    [PreserveSig]
    Function GetNumInputStreamDescs() As Long
    Sub GetInputStreamDescs(ByVal NumInputStreamDescs As Long, ByRef pInputStreamDescs As D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC)
    [PreserveSig]
    Function GetOutputStreamDesc() As D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC
End Interface

[InterfaceId("3B60536E-AD29-4E64-A269-F853837E5E53")]
 [OleAutomation(False)]
 Interface ID3D12VideoDecodeCommandList Extends ID3D12CommandList
     Sub Close()
     Sub Reset(ByVal pAllocator As ID3D12CommandAllocator)
     [PreserveSig]
     Sub ClearState()
     [PreserveSig]
     Sub ResourceBarrier(ByVal NumBarriers As Long, ByRef pBarriers As D3D12_RESOURCE_BARRIER)
     [PreserveSig]
     Sub DiscardResource(ByVal pResource As ID3D12Resource, ByRef pRegion As D3D12_DISCARD_REGION)
     [PreserveSig]
     Sub BeginQuery(ByVal pQueryHeap As ID3D12QueryHeap, ByVal type As D3D12_QUERY_TYPE, ByVal index As Long)
     [PreserveSig]
     Sub EndQuery(ByVal pQueryHeap As ID3D12QueryHeap, ByVal type As D3D12_QUERY_TYPE, ByVal index As Long)
     [PreserveSig]
     Sub ResolveQueryData(ByVal pQueryHeap As ID3D12QueryHeap, ByVal type As D3D12_QUERY_TYPE, ByVal StartIndex As Long, ByVal NumQueries As Long, ByVal pDestinationBuffer As ID3D12Resource, ByVal AlignedDestinationBufferOffset As LongLong)
     [PreserveSig]
     Sub SetPredication(ByVal pBuffer As ID3D12Resource, ByVal AlignedBufferOffset As LongLong, ByVal operation As D3D12_PREDICATION_OP)
     [PreserveSig]
     Sub SetMarker(ByVal MetaData As Long, ByRef pData As Any, ByVal Size As Long)
     [PreserveSig]
     Sub BeginEvent(ByVal MetaData As Long, ByRef pData As Any, ByVal Size As Long)
     [PreserveSig]
     Sub EndEvent()
     [PreserveSig]
     Sub DecodeFrame(ByVal pDecoder As ID3D12VideoDecoder, ByRef pOutputArguments As D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS, ByRef pInputArguments As D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS)
     [PreserveSig]
     Sub WriteBufferImmediate(ByVal Count As Long, ByRef pparams As D3D12_WRITEBUFFERIMMEDIATE_PARAMETER, ByRef pModes As D3D12_WRITEBUFFERIMMEDIATE_MODE)
 End Interface

 [InterfaceId("AEB2543A-167F-4682-ACC8-D159ED4A6209")]
 [OleAutomation(False)]
 Interface ID3D12VideoProcessCommandList Extends ID3D12CommandList
     Sub Close()
     Sub Reset(ByVal pAllocator As ID3D12CommandAllocator)
     [PreserveSig]
     Sub ClearState()
     [PreserveSig]
     Sub ResourceBarrier(ByVal NumBarriers As Long, ByRef pBarriers As D3D12_RESOURCE_BARRIER)
     [PreserveSig]
     Sub DiscardResource(ByVal pResource As ID3D12Resource, ByRef pRegion As D3D12_DISCARD_REGION)
     [PreserveSig]
     Sub BeginQuery(ByVal pQueryHeap As ID3D12QueryHeap, ByVal type As D3D12_QUERY_TYPE, ByVal index As Long)
     [PreserveSig]
     Sub EndQuery(ByVal pQueryHeap As ID3D12QueryHeap, ByVal type As D3D12_QUERY_TYPE, ByVal index As Long)
     [PreserveSig]
     Sub ResolveQueryData(ByVal pQueryHeap As ID3D12QueryHeap, ByVal type As D3D12_QUERY_TYPE, ByVal StartIndex As Long, ByVal NumQueries As Long, ByVal pDestinationBuffer As ID3D12Resource, ByVal AlignedDestinationBufferOffset As LongLong)
     [PreserveSig]
     Sub SetPredication(ByVal pBuffer As ID3D12Resource, ByVal AlignedBufferOffset As LongLong, ByVal operation As D3D12_PREDICATION_OP)
     [PreserveSig]
     Sub SetMarker(ByVal MetaData As Long, ByRef pData As Any, ByVal SIZE As Long)
     [PreserveSig]
     Sub BeginEvent(ByVal MetaData As Long, ByRef pData As Any, ByVal SIZE As Long)
     [PreserveSig]
     Sub EndEvent()
     [PreserveSig]
     Sub ProcessFrames(ByVal pVideoProcessor As ID3D12VideoProcessor, ByRef pOutputArguments As D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS, ByVal NumInputStreams As Long, ByRef pInputArguments As D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS)
     [PreserveSig]
     Sub WriteBufferImmediate(ByVal Count As Long, ByRef pparams As D3D12_WRITEBUFFERIMMEDIATE_PARAMETER, ByRef pModes As D3D12_WRITEBUFFERIMMEDIATE_MODE)
 End Interface

 [InterfaceId("D52F011B-B56E-453C-A05A-A7F311C8F472")]
 [OleAutomation(False)]
 Interface ID3D12VideoDecodeCommandList1 Extends ID3D12VideoDecodeCommandList
     [PreserveSig]
     Sub DecodeFrame1(ByVal pDecoder As ID3D12VideoDecoder, ByRef pOutputArguments As D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS1, ByRef pInputArguments As D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS)
 End Interface
 
 [InterfaceId("542C5C4D-7596-434F-8C93-4EFA6766F267")]
 [OleAutomation(False)]
 Interface ID3D12VideoProcessCommandList1 Extends ID3D12VideoProcessCommandList
     [PreserveSig]
     Sub ProcessFrames1(ByVal pVideoProcessor As ID3D12VideoProcessor, ByRef pOutputArguments As D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS, ByVal NumInputStreams As Long, ByRef pInputArguments As D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS1)
 End Interface
 
 [InterfaceId("33FDAE0E-098B-428F-87BB-34B695DE08F8")]
 [OleAutomation(False)]
 Interface ID3D12VideoMotionEstimator Extends ID3D12Pageable
     [PreserveSig]
     Function GetDesc() As D3D12_VIDEO_MOTION_ESTIMATOR_DESC
     Sub GetProtectedResourceSession(ByRef riid As UUID, ByRef ppProtectedSession As Any)
 End Interface

 [InterfaceId("5BE17987-743A-4061-834B-23D22DAEA505")]
 [OleAutomation(False)]
 Interface ID3D12VideoMotionVectorHeap Extends ID3D12Pageable
     [PreserveSig]
     Function GetDesc() As D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC
     Sub GetProtectedResourceSession(ByRef riid As UUID, ByRef ppProtectedSession As Any)
 End Interface

 [InterfaceId("981611AD-A144-4C83-9890-F30E26D658AB")]
 [OleAutomation(False)]
 Interface ID3D12VideoDevice1 Extends ID3D12VideoDevice
     Sub CreateVideoMotionEstimator(ByRef pDesc As D3D12_VIDEO_MOTION_ESTIMATOR_DESC, ByVal pProtectedResourceSession As ID3D12ProtectedResourceSession, ByRef riid As UUID, ByRef ppVideoMotionEstimator As Any)
     Sub CreateVideoMotionVectorHeap(ByRef pDesc As D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC, ByVal pProtectedResourceSession As ID3D12ProtectedResourceSession, ByRef riid As UUID, ByRef ppVideoMotionVectorHeap As Any)
 End Interface
 
 [InterfaceId("8455293A-0CBD-4831-9B39-FBDBAB724723")]
  [OleAutomation(False)]
  Interface ID3D12VideoEncodeCommandList Extends ID3D12CommandList
      Sub Close()
      Sub Reset(ByVal pAllocator As ID3D12CommandAllocator)
      [PreserveSig]
      Sub ClearState()
      [PreserveSig]
      Sub ResourceBarrier(ByVal NumBarriers As Long, ByRef pBarriers As D3D12_RESOURCE_BARRIER)
      [PreserveSig]
      Sub DiscardResource(ByVal pResource As ID3D12Resource, ByRef pRegion As D3D12_DISCARD_REGION)
      [PreserveSig]
      Sub BeginQuery(ByVal pQueryHeap As ID3D12QueryHeap, ByVal type As D3D12_QUERY_TYPE, ByVal index As Long)
      [PreserveSig]
      Sub EndQuery(ByVal pQueryHeap As ID3D12QueryHeap, ByVal type As D3D12_QUERY_TYPE, ByVal index As Long)
      [PreserveSig]
      Sub ResolveQueryData(ByVal pQueryHeap As ID3D12QueryHeap, ByVal type As D3D12_QUERY_TYPE, ByVal StartIndex As Long, ByVal NumQueries As Long, ByVal pDestinationBuffer As ID3D12Resource, ByVal AlignedDestinationBufferOffset As LongLong)
      [PreserveSig]
      Sub SetPredication(ByVal pBuffer As ID3D12Resource, ByVal AlignedBufferOffset As LongLong, ByVal operation As D3D12_PREDICATION_OP)
      [PreserveSig]
      Sub SetMarker(ByVal MetaData As Long, ByRef pData As Any, ByVal SIZE As Long)
      [PreserveSig]
      Sub BeginEvent(ByVal MetaData As Long, ByRef pData As Any, ByVal SIZE As Long)
      [PreserveSig]
      Sub EndEvent()
      [PreserveSig]
      Sub EstimateMotion(ByVal pMotionEstimator As ID3D12VideoMotionEstimator, ByRef pOutputArguments As D3D12_VIDEO_MOTION_ESTIMATOR_OUTPUT, ByRef pInputArguments As D3D12_VIDEO_MOTION_ESTIMATOR_INPUT)
      [PreserveSig]
      Sub ResolveMotionVectorHeap(ByRef pOutputArguments As D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT, ByRef pInputArguments As D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_INPUT)
      [PreserveSig]
      Sub WriteBufferImmediate(ByVal Count As Long, ByRef pparams As D3D12_WRITEBUFFERIMMEDIATE_PARAMETER, ByRef pModes As D3D12_WRITEBUFFERIMMEDIATE_MODE)
      [PreserveSig]
      Sub SetProtectedResourceSession(ByVal pProtectedResourceSession As ID3D12ProtectedResourceSession)
  End Interface
 
  [InterfaceId("79A2E5FB-CCD2-469A-9FDE-195D10951F7E")]
  [OleAutomation(False)]
  Interface ID3D12VideoDecoder1 Extends ID3D12VideoDecoder
      Sub GetProtectedResourceSession(ByRef riid As UUID, ByRef ppProtectedSession As Any)
  End Interface

  [InterfaceId("DA1D98C5-539F-41B2-BF6B-1198A03B6D26")]
  [OleAutomation(False)]
  Interface ID3D12VideoDecoderHeap1 Extends ID3D12VideoDecoderHeap
      Sub GetProtectedResourceSession(ByRef riid As UUID, ByRef ppProtectedSession As Any)
  End Interface

  [InterfaceId("F3CFE615-553F-425C-86D8-EE8C1B1FB01C")]
  [OleAutomation(False)]
  Interface ID3D12VideoProcessor1 Extends ID3D12VideoProcessor
      Sub GetProtectedResourceSession(ByRef riid As UUID, ByRef ppProtectedSession As Any)
  End Interface

  [InterfaceId("554E41E8-AE8E-4A8C-B7D2-5B4F274A30E4")]
  [OleAutomation(False)]
  Interface ID3D12VideoExtensionCommand Extends ID3D12Pageable
      [PreserveSig]
      Function GetDesc() As D3D12_VIDEO_EXTENSION_COMMAND_DESC
      Sub GetProtectedResourceSession(ByRef riid As UUID, ByRef ppProtectedSession As Any)
  End Interface

  [InterfaceId("F019AC49-F838-4A95-9B17-579437C8F513")]
  [OleAutomation(False)]
  Interface ID3D12VideoDevice2 Extends ID3D12VideoDevice1
      Sub CreateVideoDecoder1(ByRef pDesc As D3D12_VIDEO_DECODER_DESC, ByVal pProtectedResourceSession As ID3D12ProtectedResourceSession, ByRef riid As UUID, ByRef ppVideoDecoder As Any)
      Sub CreateVideoDecoderHeap1(ByRef pVideoDecoderHeapDesc As D3D12_VIDEO_DECODER_HEAP_DESC, ByVal pProtectedResourceSession As ID3D12ProtectedResourceSession, ByRef riid As UUID, ByRef ppVideoDecoderHeap As Any)
      Sub CreateVideoProcessor1(ByVal NodeMask As Long, ByRef pOutputStreamDesc As D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC, ByVal NumInputStreamDescs As Long, ByRef pInputStreamDescs As D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC, ByVal pProtectedResourceSession As ID3D12ProtectedResourceSession, ByRef riid As UUID, ByRef ppVideoProcessor As Any)
      Sub CreateVideoExtensionCommand(ByRef pDesc As D3D12_VIDEO_EXTENSION_COMMAND_DESC, ByRef pCreationParameters As Any, ByVal CreationParametersDataSizeInBytes As LongPtr, ByVal pProtectedResourceSession As ID3D12ProtectedResourceSession, ByRef riid As UUID, ByRef ppVideoExtensionCommand As Any)
      Sub ExecuteExtensionCommand(ByVal pExtensionCommand As ID3D12VideoExtensionCommand, ByRef pExecutionParameters As Any, ByVal ExecutionParametersSizeInBytes As LongPtr, ByRef pOutputData As Any, ByVal OutputDataSizeInBytes As LongPtr)
  End Interface

  [InterfaceId("6E120880-C114-4153-8036-D247051E1729")]
  [OleAutomation(False)]
  Interface ID3D12VideoDecodeCommandList2 Extends ID3D12VideoDecodeCommandList1
      [PreserveSig]
      Sub SetProtectedResourceSession(ByVal pProtectedResourceSession As ID3D12ProtectedResourceSession)
      [PreserveSig]
      Sub InitializeExtensionCommand(ByVal pExtensionCommand As ID3D12VideoExtensionCommand, ByRef pInitializationParameters As Any, ByVal InitializationParametersSizeInBytes As LongPtr)
      [PreserveSig]
      Sub ExecuteExtensionCommand(ByVal pExtensionCommand As ID3D12VideoExtensionCommand, ByRef pExecutionParameters As Any, ByVal ExecutionParametersSizeInBytes As LongPtr)
  End Interface

  [InterfaceId("2AEE8C37-9562-42DA-8ABF-61EFEB2E4513")]
  [OleAutomation(False)]
  Interface ID3D12VideoDecodeCommandList3 Extends ID3D12VideoDecodeCommandList2
      [PreserveSig]
      Sub Barrier(ByVal NumBarrierGroups As Long, ByRef pBarrierGroups As D3D12_BARRIER_GROUP)
  End Interface

  [InterfaceId("DB525AE4-6AD6-473C-BAA7-59B2E37082E4")]
  [OleAutomation(False)]
  Interface ID3D12VideoProcessCommandList2 Extends ID3D12VideoProcessCommandList1
      [PreserveSig]
      Sub SetProtectedResourceSession(ByVal pProtectedResourceSession As ID3D12ProtectedResourceSession)
      [PreserveSig]
      Sub InitializeExtensionCommand(ByVal pExtensionCommand As ID3D12VideoExtensionCommand, ByRef pInitializationParameters As Any, ByVal InitializationParametersSizeInBytes As LongPtr)
      [PreserveSig]
      Sub ExecuteExtensionCommand(ByVal pExtensionCommand As ID3D12VideoExtensionCommand, ByRef pExecutionParameters As Any, ByVal ExecutionParametersSizeInBytes As LongPtr)
  End Interface

  [InterfaceId("1A0A4CA4-9F08-40CE-9558-B411FD2666FF")]
  [OleAutomation(False)]
  Interface ID3D12VideoProcessCommandList3 Extends ID3D12VideoProcessCommandList2
      [PreserveSig]
      Sub Barrier(ByVal NumBarrierGroups As Long, ByRef pBarrierGroups As D3D12_BARRIER_GROUP)
  End Interface

  [InterfaceId("94971ECA-2BDB-4769-88CF-3675EA757EBC")]
  [OleAutomation(False)]
  Interface ID3D12VideoEncodeCommandList1 Extends ID3D12VideoEncodeCommandList
      [PreserveSig]
      Sub InitializeExtensionCommand(ByVal pExtensionCommand As ID3D12VideoExtensionCommand, ByRef pInitializationParameters As Any, ByVal InitializationParametersSizeInBytes As LongPtr)
      [PreserveSig]
      Sub ExecuteExtensionCommand(ByVal pExtensionCommand As ID3D12VideoExtensionCommand, ByRef pExecutionParameters As Any, ByVal ExecutionParametersSizeInBytes As LongPtr)
  End Interface
  
  [InterfaceId("2E0D212D-8DF9-44A6-A770-BB289B182737")]
   [OleAutomation(False)]
   Interface ID3D12VideoEncoder Extends ID3D12Pageable
       [PreserveSig]
       Function GetNodeMask() As Long
       [PreserveSig]
       Function GetEncoderFlags() As D3D12_VIDEO_ENCODER_FLAGS
       [PreserveSig]
       Function GetCodec() As D3D12_VIDEO_ENCODER_CODEC
       #If Win64 Then
       Sub GetCodecProfile(dstProfile As D3D12_VIDEO_ENCODER_PROFILE_DESC)
       Sub GetCodecConfiguration(dstCodecConfig As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION)
       #Else
       Sub GetCodecProfile(ByVal dataSize As Long, ByVal pProfile As LongPtr)
       Sub GetCodecConfiguration(ByVal dataSize As Long, ByVal pConfig As LongPtr)
       #End If
       [PreserveSig]
       Function GetInputFormat() As DXGI_FORMAT
       [PreserveSig]
       Function GetMaxMotionEstimationPrecision() As D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE
   End Interface

   [InterfaceId("22B35D96-876A-44C0-B25E-FB8C9C7F1C4A")]
   [OleAutomation(False)]
   Interface ID3D12VideoEncoderHeap Extends ID3D12Pageable
       [PreserveSig]
       Function GetNodeMask() As Long
       [PreserveSig]
       Function GetEncoderHeapFlags() As D3D12_VIDEO_ENCODER_HEAP_FLAGS
       [PreserveSig]
       Function GetCodec() As D3D12_VIDEO_ENCODER_CODEC
       #If Win64 Then
       Sub GetCodecProfile(dstProfile As D3D12_VIDEO_ENCODER_PROFILE_DESC)
       Sub GetCodecLevel(dstLevel As D3D12_VIDEO_ENCODER_LEVEL_SETTING)
       #Else
       Sub GetCodecProfile(ByVal dataSize As Long, ByVal pProfile As LongPtr)
        Sub GetCodecLevel(ByVal dataSize As Long, ByVal pLevelSetting As LongPtr)
       #End If
       [PreserveSig]
       Function GetResolutionListCount() As Long
       Sub GetResolutionList(ByVal ResolutionsListCount As Long, ByRef pResolutionList As D3D12_VIDEO_ENCODER_PICTURE_RESOLUTION_DESC)
   End Interface

   [InterfaceId("4243ADB4-3A32-4666-973C-0CCC5625DC44")]
   [OleAutomation(False)]
   Interface ID3D12VideoDevice3 Extends ID3D12VideoDevice2
       Sub CreateVideoEncoder(ByRef pDesc As D3D12_VIDEO_ENCODER_DESC, ByRef riid As UUID, ByRef ppVideoEncoder As Any)
       Sub CreateVideoEncoderHeap(ByRef pDesc As D3D12_VIDEO_ENCODER_HEAP_DESC, ByRef riid As UUID, ByRef ppVideoEncoderHeap As Any)
   End Interface
  
   [InterfaceId("895491E2-E701-46A9-9A1F-8D3480ED867A")]
    [OleAutomation(False)]
    Interface ID3D12VideoEncodeCommandList2 Extends ID3D12VideoEncodeCommandList1
        [PreserveSig]
        Sub EncodeFrame(ByVal pEncoder As ID3D12VideoEncoder, ByVal pHeap As ID3D12VideoEncoderHeap, ByRef pInputArguments As D3D12_VIDEO_ENCODER_ENCODEFRAME_INPUT_ARGUMENTS, ByRef pOutputArguments As D3D12_VIDEO_ENCODER_ENCODEFRAME_OUTPUT_ARGUMENTS)
        [PreserveSig]
        Sub ResolveEncoderOutputMetadata(ByRef pInputArguments As D3D12_VIDEO_ENCODER_RESOLVE_METADATA_INPUT_ARGUMENTS, ByRef pOutputArguments As D3D12_VIDEO_ENCODER_RESOLVE_METADATA_OUTPUT_ARGUMENTS)
    End Interface

    [InterfaceId("7F027B22-1515-4E85-AA0D-026486580576")]
    [OleAutomation(False)]
    Interface ID3D12VideoEncodeCommandList3 Extends ID3D12VideoEncodeCommandList2
        [PreserveSig]
        Sub Barrier(ByVal NumBarrierGroups As Long, ByRef pBarrierGroups As D3D12_BARRIER_GROUP)
    End Interface
   
Module wdD3D12Video
    
Public Enum D3D12_VIDEO_FIELD_TYPE
    D3D12_VIDEO_FIELD_TYPE_NONE = 0
    D3D12_VIDEO_FIELD_TYPE_INTERLACED_TOP_FIELD_FIRST = 1
    D3D12_VIDEO_FIELD_TYPE_INTERLACED_BOTTOM_FIELD_FIRST = 2
End Enum

Public Enum D3D12_VIDEO_FRAME_STEREO_FORMAT
    D3D12_VIDEO_FRAME_STEREO_FORMAT_NONE = 0
    D3D12_VIDEO_FRAME_STEREO_FORMAT_MONO = 1
    D3D12_VIDEO_FRAME_STEREO_FORMAT_HORIZONTAL = 2
    D3D12_VIDEO_FRAME_STEREO_FORMAT_VERTICAL = 3
    D3D12_VIDEO_FRAME_STEREO_FORMAT_SEPARATE = 4
End Enum

Public Type D3D12_VIDEO_FORMAT
    Format As DXGI_FORMAT
    ColorSpace As DXGI_COLOR_SPACE_TYPE
End Type

Public Type D3D12_VIDEO_SAMPLE
    width As Long
    Height As Long
    Format As D3D12_VIDEO_FORMAT
End Type

Public Enum D3D12_VIDEO_FRAME_CODED_INTERLACE_TYPE
    D3D12_VIDEO_FRAME_CODED_INTERLACE_TYPE_NONE = 0
    D3D12_VIDEO_FRAME_CODED_INTERLACE_TYPE_FIELD_BASED = 1
End Enum

Public Enum D3D12_FEATURE_VIDEO
    D3D12_FEATURE_VIDEO_DECODE_SUPPORT = 0
    D3D12_FEATURE_VIDEO_DECODE_PROFILES = 1
    D3D12_FEATURE_VIDEO_DECODE_FORMATS = 2
    D3D12_FEATURE_VIDEO_DECODE_CONVERSION_SUPPORT = 3
    D3D12_FEATURE_VIDEO_PROCESS_SUPPORT = 5
    D3D12_FEATURE_VIDEO_PROCESS_MAX_INPUT_STREAMS = 6
    D3D12_FEATURE_VIDEO_PROCESS_REFERENCE_INFO = 7
    D3D12_FEATURE_VIDEO_DECODER_HEAP_SIZE = 8
    D3D12_FEATURE_VIDEO_PROCESSOR_SIZE = 9
    D3D12_FEATURE_VIDEO_DECODE_PROFILE_COUNT = 10
    D3D12_FEATURE_VIDEO_DECODE_FORMAT_COUNT = 11
    D3D12_FEATURE_VIDEO_ARCHITECTURE = 17
    D3D12_FEATURE_VIDEO_DECODE_HISTOGRAM = 18
    D3D12_FEATURE_VIDEO_FEATURE_AREA_SUPPORT = 19
    D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR = 20
    D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR_SIZE = 21
    D3D12_FEATURE_VIDEO_EXTENSION_COMMAND_COUNT = 22
    D3D12_FEATURE_VIDEO_EXTENSION_COMMANDS = 23
    D3D12_FEATURE_VIDEO_EXTENSION_COMMAND_PARAMETER_COUNT = 24
    D3D12_FEATURE_VIDEO_EXTENSION_COMMAND_PARAMETERS = 25
    D3D12_FEATURE_VIDEO_EXTENSION_COMMAND_SUPPORT = 26
    D3D12_FEATURE_VIDEO_EXTENSION_COMMAND_SIZE = 27
    D3D12_FEATURE_VIDEO_DECODE_PROTECTED_RESOURCES = 28
    D3D12_FEATURE_VIDEO_PROCESS_PROTECTED_RESOURCES = 29
    D3D12_FEATURE_VIDEO_MOTION_ESTIMATOR_PROTECTED_RESOURCES = 30
    D3D12_FEATURE_VIDEO_DECODER_HEAP_SIZE1 = 31
    D3D12_FEATURE_VIDEO_PROCESSOR_SIZE1 = 32
    D3D12_FEATURE_VIDEO_ENCODER_CODEC = 33
    D3D12_FEATURE_VIDEO_ENCODER_PROFILE_LEVEL = 34
    D3D12_FEATURE_VIDEO_ENCODER_OUTPUT_RESOLUTION_RATIOS_COUNT = 35
    D3D12_FEATURE_VIDEO_ENCODER_OUTPUT_RESOLUTION = 36
    D3D12_FEATURE_VIDEO_ENCODER_INPUT_FORMAT = 37
    D3D12_FEATURE_VIDEO_ENCODER_RATE_CONTROL_MODE = 38
    D3D12_FEATURE_VIDEO_ENCODER_INTRA_REFRESH_MODE = 39
    D3D12_FEATURE_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE = 40
    D3D12_FEATURE_VIDEO_ENCODER_HEAP_SIZE = 41
    D3D12_FEATURE_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT = 42
    D3D12_FEATURE_VIDEO_ENCODER_SUPPORT = 43
    D3D12_FEATURE_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT = 44
    D3D12_FEATURE_VIDEO_ENCODER_RESOURCE_REQUIREMENTS = 45
    D3D12_FEATURE_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_CONFIG = 46
    D3D12_FEATURE_VIDEO_ENCODER_SUPPORT1 = 47
End Enum

Public Enum D3D12_BITSTREAM_ENCRYPTION_TYPE
    D3D12_BITSTREAM_ENCRYPTION_TYPE_NONE = 0
End Enum

Public Type D3D12_VIDEO_DECODE_CONFIGURATION
    DecodeProfile As UUID
    BitstreamEncryption As D3D12_BITSTREAM_ENCRYPTION_TYPE
    InterlaceType As D3D12_VIDEO_FRAME_CODED_INTERLACE_TYPE
End Type

Public Type D3D12_VIDEO_DECODER_DESC
    NodeMask As Long
    configuration As D3D12_VIDEO_DECODE_CONFIGURATION
End Type

Public Type D3D12_VIDEO_DECODER_HEAP_DESC
    NodeMask As Long
    configuration As D3D12_VIDEO_DECODE_CONFIGURATION
    DecodeWidth As Long
    DecodeHeight As Long
    Format As DXGI_FORMAT
    FrameRate As DXGI_RATIONAL
    BitRate As Long
    MaxDecodePictureBufferCount As Long
End Type

Public Type D3D12_VIDEO_SIZE_RANGE
    maxWidth As Long
    maxHeight As Long
    minWidth As Long
    MinHeight As Long
End Type

Public Enum D3D12_VIDEO_PROCESS_FILTER
    D3D12_VIDEO_PROCESS_FILTER_BRIGHTNESS = 0
    D3D12_VIDEO_PROCESS_FILTER_CONTRAST = 1
    D3D12_VIDEO_PROCESS_FILTER_HUE = 2
    D3D12_VIDEO_PROCESS_FILTER_SATURATION = 3
    D3D12_VIDEO_PROCESS_FILTER_NOISE_REDUCTION = 4
    D3D12_VIDEO_PROCESS_FILTER_EDGE_ENHANCEMENT = 5
    D3D12_VIDEO_PROCESS_FILTER_ANAMORPHIC_SCALING = 6
    D3D12_VIDEO_PROCESS_FILTER_STEREO_ADJUSTMENT = 7
End Enum
    
Public Enum D3D12_VIDEO_PROCESS_FILTER_FLAGS
    D3D12_VIDEO_PROCESS_FILTER_FLAG_NONE = &H0
    D3D12_VIDEO_PROCESS_FILTER_FLAG_BRIGHTNESS = (1 << D3D12_VIDEO_PROCESS_FILTER_BRIGHTNESS)
    D3D12_VIDEO_PROCESS_FILTER_FLAG_CONTRAST = (1 << D3D12_VIDEO_PROCESS_FILTER_CONTRAST)
    D3D12_VIDEO_PROCESS_FILTER_FLAG_HUE = (1 << D3D12_VIDEO_PROCESS_FILTER_HUE)
    D3D12_VIDEO_PROCESS_FILTER_FLAG_SATURATION = (1 << D3D12_VIDEO_PROCESS_FILTER_SATURATION)
    D3D12_VIDEO_PROCESS_FILTER_FLAG_NOISE_REDUCTION = (1 << D3D12_VIDEO_PROCESS_FILTER_NOISE_REDUCTION)
    D3D12_VIDEO_PROCESS_FILTER_FLAG_EDGE_ENHANCEMENT = (1 << D3D12_VIDEO_PROCESS_FILTER_EDGE_ENHANCEMENT)
    D3D12_VIDEO_PROCESS_FILTER_FLAG_ANAMORPHIC_SCALING = (1 << D3D12_VIDEO_PROCESS_FILTER_ANAMORPHIC_SCALING)
    D3D12_VIDEO_PROCESS_FILTER_FLAG_STEREO_ADJUSTMENT = (1 << D3D12_VIDEO_PROCESS_FILTER_STEREO_ADJUSTMENT)
End Enum

Public Enum D3D12_VIDEO_PROCESS_DEINTERLACE_FLAGS
    D3D12_VIDEO_PROCESS_DEINTERLACE_FLAG_NONE = &H0
    D3D12_VIDEO_PROCESS_DEINTERLACE_FLAG_BOB = &H1
    D3D12_VIDEO_PROCESS_DEINTERLACE_FLAG_CUSTOM = &H80000000
End Enum

Public Type D3D12_VIDEO_PROCESS_ALPHA_BLENDING
    Enable As BOOL
    Alpha As Single
End Type

Public Type D3D12_VIDEO_PROCESS_LUMA_KEY
    Enable As BOOL
    Lower As Single
    Upper As Single
End Type

Public Type D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC
    Format As DXGI_FORMAT
    ColorSpace As DXGI_COLOR_SPACE_TYPE
    SourceAspectRatio As DXGI_RATIONAL
    DestinationAspectRatio As DXGI_RATIONAL
    FrameRate As DXGI_RATIONAL
    SourceSizeRange As D3D12_VIDEO_SIZE_RANGE
    DestinationSizeRange As D3D12_VIDEO_SIZE_RANGE
    EnableOrientation As BOOL
    FilterFlags As D3D12_VIDEO_PROCESS_FILTER_FLAGS
    StereoFormat As D3D12_VIDEO_FRAME_STEREO_FORMAT
    FieldType As D3D12_VIDEO_FIELD_TYPE
    DeinterlaceMode As D3D12_VIDEO_PROCESS_DEINTERLACE_FLAGS
    EnableAlphaBlending As BOOL
    LumaKey As D3D12_VIDEO_PROCESS_LUMA_KEY
    NumPastFrames As Long
    NumFutureFrames As Long
    EnableAutoProcessing As BOOL
End Type

Public Enum D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE
    D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE_OPAQUE = 0
    D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE_BACKGROUND = 1
    D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE_DESTINATION = 2
    D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE_SOURCE_STREAM = 3
End Enum

Public Type D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC
    Format As DXGI_FORMAT
    ColorSpace As DXGI_COLOR_SPACE_TYPE
    AlphaFillMode As D3D12_VIDEO_PROCESS_ALPHA_FILL_MODE
    AlphaFillModeSourceStreamIndex As Long
    BackgroundColor(0 To 3) As Single
    FrameRate As DXGI_RATIONAL
    EnableStereo As BOOL
End Type

Public Enum D3D12_VIDEO_DECODE_TIER
    D3D12_VIDEO_DECODE_TIER_NOT_SUPPORTED = 0
    D3D12_VIDEO_DECODE_TIER_1 = 1
    D3D12_VIDEO_DECODE_TIER_2 = 2
    D3D12_VIDEO_DECODE_TIER_3 = 3
End Enum

Public Enum D3D12_VIDEO_DECODE_SUPPORT_FLAGS
    D3D12_VIDEO_DECODE_SUPPORT_FLAG_NONE = &H0
    D3D12_VIDEO_DECODE_SUPPORT_FLAG_SUPPORTED = &H1
End Enum

Public Enum D3D12_VIDEO_DECODE_CONFIGURATION_FLAGS
    D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_NONE = &H0
    D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_HEIGHT_ALIGNMENT_MULTIPLE_32_REQUIRED = &H1
    D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_POST_PROCESSING_SUPPORTED = &H2
    D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_REFERENCE_ONLY_ALLOCATIONS_REQUIRED = &H4
    D3D12_VIDEO_DECODE_CONFIGURATION_FLAG_ALLOW_RESOLUTION_CHANGE_ON_NON_KEY_FRAME = &H8
End Enum

Public Enum D3D12_VIDEO_DECODE_STATUS
    D3D12_VIDEO_DECODE_STATUS_OK = 0
    D3D12_VIDEO_DECODE_STATUS_CONTINUE = 1
    D3D12_VIDEO_DECODE_STATUS_CONTINUE_SKIP_DISPLAY = 2
    D3D12_VIDEO_DECODE_STATUS_RESTART = 3
    D3D12_VIDEO_DECODE_STATUS_RATE_EXCEEDED = 4
End Enum

Public Enum D3D12_VIDEO_DECODE_ARGUMENT_TYPE
    D3D12_VIDEO_DECODE_ARGUMENT_TYPE_PICTURE_PARAMETERS = 0
    D3D12_VIDEO_DECODE_ARGUMENT_TYPE_INVERSE_QUANTIZATION_MATRIX = 1
    D3D12_VIDEO_DECODE_ARGUMENT_TYPE_SLICE_CONTROL = 2
    D3D12_VIDEO_DECODE_ARGUMENT_TYPE_MAX_VALID = 3
End Enum

Public Type D3D12_FEATURE_DATA_VIDEO_DECODE_SUPPORT
    NodeIndex As Long ' input
    Configuration As D3D12_VIDEO_DECODE_CONFIGURATION ' input
    Width As Long ' input
    Height As Long ' input
    DecodeFormat As DXGI_FORMAT ' input
    FrameRate As DXGI_RATIONAL ' input
    BitRate As Long ' input
    SupportFlags As D3D12_VIDEO_DECODE_SUPPORT_FLAGS ' output
    ConfigurationFlags As D3D12_VIDEO_DECODE_CONFIGURATION_FLAGS ' output
    DecodeTier As D3D12_VIDEO_DECODE_TIER ' output
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_DECODE_PROFILE_COUNT
    NodeIndex As Long ' input
    ProfileCount As Long ' output
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_DECODE_PROFILES
    NodeIndex As Long ' input
    ProfileCount As Long ' input
    pProfiles As LongPtr 'UUID* output. The list of supported profiles. The caller allocates storage for the profile list before calling CheckFeatureSupport.
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_DECODE_FORMAT_COUNT
    NodeIndex As Long ' input
    Configuration As D3D12_VIDEO_DECODE_CONFIGURATION ' input
    FormatCount As Long ' output
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_DECODE_FORMATS
    NodeIndex As Long ' input
    Configuration As D3D12_VIDEO_DECODE_CONFIGURATION ' input
    FormatCount As Long ' input
    pOutputFormats As LongPtr ' DXGI_FORMAT* output. The list of supported video formats. The caller allocates storage for the format list before calling CheckFeatureSupport.
End Type

Public Enum D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_Y = 0
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_U = 1
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_V = 2
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_R = 0
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_G = 1
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_B = 2
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_A = 3
End Enum
Public Enum D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAGS
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_NONE = &H0
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_Y = (1 << D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_Y)
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_U = (1 << D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_U)
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_V = (1 << D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_V)
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_R = (1 << D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_R)
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_G = (1 << D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_G)
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_B = (1 << D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_B)
    D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAG_A = (1 << D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_A)
End Enum

Public Type D3D12_FEATURE_DATA_VIDEO_DECODE_HISTOGRAM
    NodeIndex As Long ' in
    DecodeProfile As UUID ' in
    Width As Long ' in
    Height As Long ' in
    DecodeFormat As DXGI_FORMAT ' in
    Components As D3D12_VIDEO_DECODE_HISTOGRAM_COMPONENT_FLAGS ' out
    BinCount As Long ' out
    CounterBitDepth As Long ' out
End Type

Public Enum D3D12_VIDEO_DECODE_CONVERSION_SUPPORT_FLAGS
    D3D12_VIDEO_DECODE_CONVERSION_SUPPORT_FLAG_NONE = &H0
    D3D12_VIDEO_DECODE_CONVERSION_SUPPORT_FLAG_SUPPORTED = &H1
End Enum

Public Enum D3D12_VIDEO_SCALE_SUPPORT_FLAGS
    D3D12_VIDEO_SCALE_SUPPORT_FLAG_NONE = &H0
    D3D12_VIDEO_SCALE_SUPPORT_FLAG_POW2_ONLY = &H1
    D3D12_VIDEO_SCALE_SUPPORT_FLAG_EVEN_DIMENSIONS_ONLY = &H2
End Enum

Public Type D3D12_VIDEO_SCALE_SUPPORT
    OutputSizeRange As D3D12_VIDEO_SIZE_RANGE
    Flags As D3D12_VIDEO_SCALE_SUPPORT_FLAGS
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_DECODE_CONVERSION_SUPPORT
    NodeIndex As Long ' input
    Configuration As D3D12_VIDEO_DECODE_CONFIGURATION ' input
    DecodeSample As D3D12_VIDEO_SAMPLE ' input
    OutputFormat As D3D12_VIDEO_FORMAT ' input
    FrameRate As DXGI_RATIONAL ' input
    BitRate As Long ' input
    SupportFlags As D3D12_VIDEO_DECODE_CONVERSION_SUPPORT_FLAGS ' output
    ScaleSupport As D3D12_VIDEO_SCALE_SUPPORT ' output
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_DECODER_HEAP_SIZE
    VideoDecoderHeapDesc As D3D12_VIDEO_DECODER_HEAP_DESC ' input
    MemoryPoolL0Size As LongLong ' output
    MemoryPoolL1Size As LongLong ' output
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_PROCESSOR_SIZE
    NodeMask As Long
    pOutputStreamDesc As LongPtr ' D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC* input
    NumInputStreamDescs As Long ' input
    pInputStreamDescs As LongPtr ' D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC* input
    MemoryPoolL0Size As LongLong ' output
    MemoryPoolL1Size As LongLong ' output
End Type

Public Type D3D12_QUERY_DATA_VIDEO_DECODE_STATISTICS
    Status As LongLong ' see D3D12_VIDEO_DECODE_STATUS 
    NumMacroblocksAffected As LongLong
    FrameRate As DXGI_RATIONAL
    BitRate As Long
End Type

Public Type D3D12_VIDEO_DECODE_FRAME_ARGUMENT
    Type As D3D12_VIDEO_DECODE_ARGUMENT_TYPE
    Size As Long
    pData As LongPtr 'void*
End Type

Public Type D3D12_VIDEO_DECODE_REFERENCE_FRAMES
    NumTexture2Ds As Long
    ppTexture2Ds As LongPtr 'ID3D12Resource**
    pSubresources As LongPtr 'UINT*
    ppHeaps As LongPtr ' ID3D12VideoDecoderHeap** If null, assume single decoder heap from input args.
End Type

Public Type D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM
    pBuffer As ID3D12Resource
    Offset As LongLong
    Size As LongLong
End Type

Public Type D3D12_VIDEO_DECODE_CONVERSION_ARGUMENTS
    Enable As BOOL
    pReferenceTexture2D As ID3D12Resource
    ReferenceSubresource As Long
    OutputColorSpace As DXGI_COLOR_SPACE_TYPE
    DecodeColorSpace As DXGI_COLOR_SPACE_TYPE
End Type

Public Type D3D12_VIDEO_DECODE_INPUT_STREAM_ARGUMENTS
    NumFrameArguments As Long
    FrameArguments(0 To (D3D12_VIDEO_DECODE_MAX_ARGUMENTS - 1)) As D3D12_VIDEO_DECODE_FRAME_ARGUMENT
    ReferenceFrames As D3D12_VIDEO_DECODE_REFERENCE_FRAMES
    CompressedBitstream As D3D12_VIDEO_DECODE_COMPRESSED_BITSTREAM
    pHeap As ID3D12VideoDecoderHeap
End Type

Public Type D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS
    pOutputTexture2D As ID3D12Resource
    OutputSubresource As Long
    ConversionArguments As D3D12_VIDEO_DECODE_CONVERSION_ARGUMENTS
End Type

Public Enum D3D12_VIDEO_PROCESS_FEATURE_FLAGS
    D3D12_VIDEO_PROCESS_FEATURE_FLAG_NONE = &H0
    D3D12_VIDEO_PROCESS_FEATURE_FLAG_ALPHA_FILL = &H1
    D3D12_VIDEO_PROCESS_FEATURE_FLAG_LUMA_KEY = &H2
    D3D12_VIDEO_PROCESS_FEATURE_FLAG_STEREO = &H4
    D3D12_VIDEO_PROCESS_FEATURE_FLAG_ROTATION = &H8
    D3D12_VIDEO_PROCESS_FEATURE_FLAG_FLIP = &H10
    D3D12_VIDEO_PROCESS_FEATURE_FLAG_ALPHA_BLENDING = &H20
    D3D12_VIDEO_PROCESS_FEATURE_FLAG_PIXEL_ASPECT_RATIO = &H40
End Enum

Public Enum D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAGS
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_NONE = &H0
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_DENOISE = &H01
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_DERINGING = &H02
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_EDGE_ENHANCEMENT = &H04
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_COLOR_CORRECTION = &H08
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_FLESH_TONE_MAPPING = &H10
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_IMAGE_STABILIZATION = &H20
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_SUPER_RESOLUTION = &H40
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_ANAMORPHIC_SCALING = &H80
    D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAG_CUSTOM = &H80000000
End Enum

Public Enum D3D12_VIDEO_PROCESS_ORIENTATION
    D3D12_VIDEO_PROCESS_ORIENTATION_DEFAULT = 0
    D3D12_VIDEO_PROCESS_ORIENTATION_FLIP_HORIZONTAL = 1
    D3D12_VIDEO_PROCESS_ORIENTATION_CLOCKWISE_90 = 2
    D3D12_VIDEO_PROCESS_ORIENTATION_CLOCKWISE_90_FLIP_HORIZONTAL = 3
    D3D12_VIDEO_PROCESS_ORIENTATION_CLOCKWISE_180 = 4
    D3D12_VIDEO_PROCESS_ORIENTATION_FLIP_VERTICAL = 5
    D3D12_VIDEO_PROCESS_ORIENTATION_CLOCKWISE_270 = 6
    D3D12_VIDEO_PROCESS_ORIENTATION_CLOCKWISE_270_FLIP_HORIZONTAL = 7
End Enum

Public Enum D3D12_VIDEO_PROCESS_INPUT_STREAM_FLAGS
    D3D12_VIDEO_PROCESS_INPUT_STREAM_FLAG_NONE = &H0
    D3D12_VIDEO_PROCESS_INPUT_STREAM_FLAG_FRAME_DISCONTINUITY = &H1
    D3D12_VIDEO_PROCESS_INPUT_STREAM_FLAG_FRAME_REPEAT = &H2
End Enum

Public Type D3D12_VIDEO_PROCESS_FILTER_RANGE
    Minimum As Long
    Maximum As Long
    Default As Long
    Multiplier As Single
End Type

Public Enum D3D12_VIDEO_PROCESS_SUPPORT_FLAGS
    D3D12_VIDEO_PROCESS_SUPPORT_FLAG_NONE = &H0
    D3D12_VIDEO_PROCESS_SUPPORT_FLAG_SUPPORTED = &H1
End Enum

Public Type D3D12_FEATURE_DATA_VIDEO_PROCESS_SUPPORT
    NodeIndex As Long ' input
    InputSample As D3D12_VIDEO_SAMPLE ' input
    InputFieldType As D3D12_VIDEO_FIELD_TYPE ' input
    InputStereoFormat As D3D12_VIDEO_FRAME_STEREO_FORMAT ' input
    InputFrameRate As DXGI_RATIONAL ' input
    OutputFormat As D3D12_VIDEO_FORMAT ' input
    OutputStereoFormat As D3D12_VIDEO_FRAME_STEREO_FORMAT ' input
    OutputFrameRate As DXGI_RATIONAL ' input
    SupportFlags As D3D12_VIDEO_PROCESS_SUPPORT_FLAGS ' output
    ScaleSupport As D3D12_VIDEO_SCALE_SUPPORT ' output
    FeatureSupport As D3D12_VIDEO_PROCESS_FEATURE_FLAGS ' output
    DeinterlaceSupport As D3D12_VIDEO_PROCESS_DEINTERLACE_FLAGS ' output
    AutoProcessingSupport As D3D12_VIDEO_PROCESS_AUTO_PROCESSING_FLAGS ' output
    FilterSupport As D3D12_VIDEO_PROCESS_FILTER_FLAGS ' output
    FilterRangeSupport(0 To (D3D12_VIDEO_PROCESS_MAX_FILTERS - 1)) As D3D12_VIDEO_PROCESS_FILTER_RANGE ' output 
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_PROCESS_MAX_INPUT_STREAMS
    NodeIndex As Long ' input
    MaxInputStreams As Long ' output
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_PROCESS_REFERENCE_INFO
    NodeIndex As Long ' input
    DeinterlaceMode As D3D12_VIDEO_PROCESS_DEINTERLACE_FLAGS ' input
    Filters As D3D12_VIDEO_PROCESS_FILTER_FLAGS ' input
    FeatureSupport As D3D12_VIDEO_PROCESS_FEATURE_FLAGS ' input
    InputFrameRate As DXGI_RATIONAL ' input
    OutputFrameRate As DXGI_RATIONAL ' input 
    EnableAutoProcessing As BOOL ' input
    PastFrames As Long ' output
    FutureFrames As Long ' output
End Type

Public Type D3D12_VIDEO_PROCESS_REFERENCE_SET
    NumPastFrames As Long
    ppPastFrames As LongPtr 'ID3D12Resource**
    pPastSubresources As LongPtr 'UINT*
    NumFutureFrames As Long
    ppFutureFrames As LongPtr 'ID3D12Resource**
    pFutureSubresources As LongPtr 'UINT*
End Type

Public Type D3D12_VIDEO_PROCESS_TRANSFORM
    SourceRectangle As RECT 'D3D12_RECT
    DestinationRectangle As RECT 'D3D12_RECT
    Orientation As D3D12_VIDEO_PROCESS_ORIENTATION
End Type

Public Type D3D12_VIDEO_PROCESS_INPUT_STREAM_RATE
    OutputIndex As Long
    InputFrameOrField As Long
End Type

Public Type D3D12_VIDEO_PROCESS_INPUT_STREAM
    pTexture2D As ID3D12Resource
    Subresource As Long
    ReferenceSet As D3D12_VIDEO_PROCESS_REFERENCE_SET
End Type

Public Type D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS
    InputStream(0 To (D3D12_VIDEO_PROCESS_STEREO_VIEWS - 1)) As D3D12_VIDEO_PROCESS_INPUT_STREAM
    Transform As D3D12_VIDEO_PROCESS_TRANSFORM
    Flags As D3D12_VIDEO_PROCESS_INPUT_STREAM_FLAGS
    RateInfo As D3D12_VIDEO_PROCESS_INPUT_STREAM_RATE
    FilterLevels(0 To (D3D12_VIDEO_PROCESS_MAX_FILTERS - 1)) As Long
    AlphaBlending As D3D12_VIDEO_PROCESS_ALPHA_BLENDING
End Type

Public Type D3D12_VIDEO_PROCESS_OUTPUT_STREAM
    pTexture2D As ID3D12Resource
    Subresource As Long
End Type

Public Type D3D12_VIDEO_PROCESS_OUTPUT_STREAM_ARGUMENTS
    OutputStream(0 To (D3D12_VIDEO_PROCESS_STEREO_VIEWS - 1)) As D3D12_VIDEO_PROCESS_OUTPUT_STREAM
    TargetRectangle As RECT 'D3D12_RECT
End Type

Public Type D3D12_VIDEO_DECODE_OUTPUT_HISTOGRAM
    Offset As LongLong
    pBuffer As ID3D12Resource
End Type

Public Type D3D12_VIDEO_DECODE_CONVERSION_ARGUMENTS1
    Enable As BOOL
    pReferenceTexture2D As ID3D12Resource
    ReferenceSubresource As Long
    OutputColorSpace As DXGI_COLOR_SPACE_TYPE
    DecodeColorSpace As DXGI_COLOR_SPACE_TYPE
    OutputWidth As Long
    OutputHeight As Long
End Type

Public Type D3D12_VIDEO_DECODE_OUTPUT_STREAM_ARGUMENTS1
    pOutputTexture2D As ID3D12Resource
    OutputSubresource As Long
    ConversionArguments As D3D12_VIDEO_DECODE_CONVERSION_ARGUMENTS1
    Histograms(0 To (D3D12_VIDEO_DECODE_MAX_HISTOGRAM_COMPONENTS - 1)) As D3D12_VIDEO_DECODE_OUTPUT_HISTOGRAM
End Type

Public Type D3D12_VIDEO_PROCESS_INPUT_STREAM_ARGUMENTS1
    InputStream(0 To (D3D12_VIDEO_PROCESS_STEREO_VIEWS - 1)) As D3D12_VIDEO_PROCESS_INPUT_STREAM
    Transform As D3D12_VIDEO_PROCESS_TRANSFORM
    Flags As D3D12_VIDEO_PROCESS_INPUT_STREAM_FLAGS
    RateInfo As D3D12_VIDEO_PROCESS_INPUT_STREAM_RATE
    FilterLevels(0 To (D3D12_VIDEO_PROCESS_MAX_FILTERS - 1)) As Long
    AlphaBlending As D3D12_VIDEO_PROCESS_ALPHA_BLENDING
    FieldType As D3D12_VIDEO_FIELD_TYPE
End Type

Public Enum D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE
    D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_8X8 = 0
    D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_16X16 = 1
End Enum

Public Enum D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_FLAGS
    D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_FLAG_NONE = 0
    D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_FLAG_8X8 = (1 << D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_8X8)
    D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_FLAG_16X16 = (1 << D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_16X16)
End Enum

Public Enum D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION
    D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION_QUARTER_PEL = 0
End Enum

Public Enum D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION_FLAGS
    D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION_FLAG_NONE = 0
    D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION_FLAG_QUARTER_PEL = (1 << D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION_QUARTER_PEL)
End Enum

Public Type D3D12_FEATURE_DATA_VIDEO_FEATURE_AREA_SUPPORT
    NodeIndex As Long
    VideoDecodeSupport As BOOL
    VideoProcessSupport As BOOL
    VideoEncodeSupport As BOOL
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_MOTION_ESTIMATOR
    NodeIndex As Long
    InputFormat As DXGI_FORMAT
    BlockSizeFlags As D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE_FLAGS
    PrecisionFlags As D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION_FLAGS
    SizeRange As D3D12_VIDEO_SIZE_RANGE
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_MOTION_ESTIMATOR_SIZE
    NodeIndex As Long
    InputFormat As DXGI_FORMAT
    BlockSize As D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE
    precision As D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION
    SizeRange As D3D12_VIDEO_SIZE_RANGE
    Protected As BOOL
    MotionVectorHeapMemoryPoolL0Size As LongLong
    MotionVectorHeapMemoryPoolL1Size As LongLong
    MotionEstimatorMemoryPoolL0Size As LongLong
    MotionEstimatorMemoryPoolL1Size As LongLong
End Type

Public Type D3D12_VIDEO_MOTION_ESTIMATOR_DESC
    NodeMask As Long
    InputFormat As DXGI_FORMAT
    BlockSize As D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE
    precision As D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION
    SizeRange As D3D12_VIDEO_SIZE_RANGE
End Type

Public Type D3D12_VIDEO_MOTION_VECTOR_HEAP_DESC
    NodeMask As Long
    InputFormat As DXGI_FORMAT
    BlockSize As D3D12_VIDEO_MOTION_ESTIMATOR_SEARCH_BLOCK_SIZE
    Precision As D3D12_VIDEO_MOTION_ESTIMATOR_VECTOR_PRECISION
    SizeRange As D3D12_VIDEO_SIZE_RANGE
End Type

Public Type D3D12_RESOURCE_COORDINATE
    ' Coordinate values below index pixels.
    X As LongLong ' Used for buffer, 1D, 2D, 3D
    Y As Long ' Used for 2D, 3D
    Z As Long ' Used for 3D
    SubresourceIndex As Long ' indexes into mips, arrays, and planes. Used for 1D, 2D, 3D
End Type

Public Type D3D12_VIDEO_MOTION_ESTIMATOR_OUTPUT
    pMotionVectorHeap As ID3D12VideoMotionVectorHeap
End Type

Public Type D3D12_VIDEO_MOTION_ESTIMATOR_INPUT
    pInputTexture2D As ID3D12Resource
    InputSubresourceIndex As Long
    pReferenceTexture2D As ID3D12Resource
    ReferenceSubresourceIndex As Long
    pHintMotionVectorHeap As ID3D12VideoMotionVectorHeap
End Type

Public Type D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_OUTPUT
    pMotionVectorTexture2D As ID3D12Resource
    MotionVectorCoordinate As D3D12_RESOURCE_COORDINATE
End Type

Public Type D3D12_RESOLVE_VIDEO_MOTION_VECTOR_HEAP_INPUT
    pMotionVectorHeap As ID3D12VideoMotionVectorHeap
    PixelWidth As Long
    PixelHeight As Long
End Type

Public Enum D3D12_VIDEO_PROTECTED_RESOURCE_SUPPORT_FLAGS
    D3D12_VIDEO_PROTECTED_RESOURCE_SUPPORT_FLAG_NONE = &H0
    D3D12_VIDEO_PROTECTED_RESOURCE_SUPPORT_FLAG_SUPPORTED = &H1
End Enum

Public Type D3D12_FEATURE_DATA_VIDEO_DECODE_PROTECTED_RESOURCES
    NodeIndex As Long ' input
    Configuration As D3D12_VIDEO_DECODE_CONFIGURATION ' input
    SupportFlags As D3D12_VIDEO_PROTECTED_RESOURCE_SUPPORT_FLAGS ' output
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_PROCESS_PROTECTED_RESOURCES
    NodeIndex As Long ' input
    SupportFlags As D3D12_VIDEO_PROTECTED_RESOURCE_SUPPORT_FLAGS ' output
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_MOTION_ESTIMATOR_PROTECTED_RESOURCES
    NodeIndex As Long ' input
    SupportFlags As D3D12_VIDEO_PROTECTED_RESOURCE_SUPPORT_FLAGS ' output
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_DECODER_HEAP_SIZE1
    VideoDecoderHeapDesc As D3D12_VIDEO_DECODER_HEAP_DESC ' input
    Protected As BOOL ' input
    MemoryPoolL0Size As LongLong ' output
    MemoryPoolL1Size As LongLong ' output
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_PROCESSOR_SIZE1
    NodeMask As Long
    pOutputStreamDesc As LongPtr ' D3D12_VIDEO_PROCESS_OUTPUT_STREAM_DESC* input
    NumInputStreamDescs As Long ' input
    pInputStreamDescs As LongPtr ' D3D12_VIDEO_PROCESS_INPUT_STREAM_DESC* input
    Protected As BOOL ' input
    MemoryPoolL0Size As LongLong ' output
    MemoryPoolL1Size As LongLong ' output
End Type

Public Enum D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_CREATION = 0
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_INITIALIZATION = 1
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_EXECUTION = 2
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_CAPS_INPUT = 3
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_CAPS_OUTPUT = 4
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_DEVICE_EXECUTE_INPUT = 5
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE_DEVICE_EXECUTE_OUTPUT = 6
End Enum

Public Enum D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_UINT8 = 0
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_UINT16 = 1
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_UINT32 = 2
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_UINT64 = 3
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_SINT8 = 4
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_SINT16 = 5
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_SINT32 = 6
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_SINT64 = 7
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_FLOAT = 8
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_DOUBLE = 9
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE_RESOURCE = 10
End Enum

Public Enum D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_FLAGS
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_FLAG_NONE = &H00000000
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_FLAG_READ = &H00000001
    D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_FLAG_WRITE = &H00000002
End Enum

Public Type D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMAND_COUNT
    NodeIndex As Long ' in
    CommandCount As Long ' out
End Type

Public Type D3D12_VIDEO_EXTENSION_COMMAND_INFO
    CommandId As UUID
    Name As LongPtr
    CommandListSupportFlags As D3D12_COMMAND_LIST_SUPPORT_FLAGS
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMANDS
    NodeIndex As Long
    CommandCount As Long
    pCommandInfos As LongPtr 'D3D12_VIDEO_EXTENSION_COMMAND_INFO*
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMAND_PARAMETER_COUNT
    CommandId As UUID ' in
    Stage As D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE ' in
    ParameterCount As Long ' out
    ParameterPacking As Long ' out
End Type

Public Type D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_INFO
    Name As LongPtr
    Type As D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_TYPE
    Flags As D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_FLAGS
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMAND_PARAMETERS
    CommandId As UUID ' in
    Stage As D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_STAGE ' in
    ParameterCount As Long ' in
    pParameterInfos As LongPtr ' D3D12_VIDEO_EXTENSION_COMMAND_PARAMETER_INFO* out
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMAND_SUPPORT
    NodeIndex As Long
    CommandId As UUID
    pInputData As LongPtr 'void*
    InputDataSizeInBytes As LongPtr
    pOutputData As LongPtr 'void*
    OutputDataSizeInBytes As LongPtr
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_EXTENSION_COMMAND_SIZE
    NodeIndex As Long
    CommandId As UUID
    pCreationParameters As LongPtr 'void*
    CreationParametersSizeInBytes As LongPtr
    MemoryPoolL0Size As LongLong ' output
    MemoryPoolL1Size As LongLong ' output
End Type

Public Enum D3D12_VIDEO_ENCODER_AV1_PROFILE
    D3D12_VIDEO_ENCODER_AV1_PROFILE_MAIN = 0
    D3D12_VIDEO_ENCODER_AV1_PROFILE_HIGH = 1
    D3D12_VIDEO_ENCODER_AV1_PROFILE_PROFESSIONAL = 2
End Enum

Public Enum D3D12_VIDEO_ENCODER_AV1_LEVELS
     ' These values are defined according to the AV1 codec standard spec
    D3D12_VIDEO_ENCODER_AV1_LEVELS_2_0 = 0
    D3D12_VIDEO_ENCODER_AV1_LEVELS_2_1 = 1
    D3D12_VIDEO_ENCODER_AV1_LEVELS_2_2 = 2
    D3D12_VIDEO_ENCODER_AV1_LEVELS_2_3 = 3
    D3D12_VIDEO_ENCODER_AV1_LEVELS_3_0 = 4
    D3D12_VIDEO_ENCODER_AV1_LEVELS_3_1 = 5
    D3D12_VIDEO_ENCODER_AV1_LEVELS_3_2 = 6
    D3D12_VIDEO_ENCODER_AV1_LEVELS_3_3 = 7
    D3D12_VIDEO_ENCODER_AV1_LEVELS_4_0 = 8
    D3D12_VIDEO_ENCODER_AV1_LEVELS_4_1 = 9
    D3D12_VIDEO_ENCODER_AV1_LEVELS_4_2 = 10
    D3D12_VIDEO_ENCODER_AV1_LEVELS_4_3 = 11
    D3D12_VIDEO_ENCODER_AV1_LEVELS_5_0 = 12
    D3D12_VIDEO_ENCODER_AV1_LEVELS_5_1 = 13
    D3D12_VIDEO_ENCODER_AV1_LEVELS_5_2 = 14
    D3D12_VIDEO_ENCODER_AV1_LEVELS_5_3 = 15
    D3D12_VIDEO_ENCODER_AV1_LEVELS_6_0 = 16
    D3D12_VIDEO_ENCODER_AV1_LEVELS_6_1 = 17
    D3D12_VIDEO_ENCODER_AV1_LEVELS_6_2 = 18
    D3D12_VIDEO_ENCODER_AV1_LEVELS_6_3 = 19
    D3D12_VIDEO_ENCODER_AV1_LEVELS_7_0 = 20
    D3D12_VIDEO_ENCODER_AV1_LEVELS_7_1 = 21
    D3D12_VIDEO_ENCODER_AV1_LEVELS_7_2 = 22
    D3D12_VIDEO_ENCODER_AV1_LEVELS_7_3 = 23
End Enum

Public Enum D3D12_VIDEO_ENCODER_AV1_TIER
    D3D12_VIDEO_ENCODER_AV1_TIER_MAIN = 0
    D3D12_VIDEO_ENCODER_AV1_TIER_HIGH = 1
End Enum

Public Type D3D12_VIDEO_ENCODER_AV1_LEVEL_TIER_CONSTRAINTS
    Level As D3D12_VIDEO_ENCODER_AV1_LEVELS
    Tier As D3D12_VIDEO_ENCODER_AV1_TIER
End Type

Public Enum D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAGS
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_128x128_SUPERBLOCK = &H1
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_FILTER_INTRA = &H2
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_INTRA_EDGE_FILTER = &H4
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_INTERINTRA_COMPOUND = &H8
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_MASKED_COMPOUND = &H10
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_WARPED_MOTION = &H20
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_DUAL_FILTER = &H40
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_JNT_COMP = &H80
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_FORCED_INTEGER_MOTION_VECTORS = &H100
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_SUPER_RESOLUTION = &H200
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_LOOP_RESTORATION_FILTER = &H400
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_PALETTE_ENCODING = &H800
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_CDEF_FILTERING = &H1000
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_INTRA_BLOCK_COPY = &H2000
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_FRAME_REFERENCE_MOTION_VECTORS = &H4000
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_ORDER_HINT_TOOLS = &H8000&
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_AUTO_SEGMENTATION = &H10000
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_CUSTOM_SEGMENTATION = &H20000
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_LOOP_FILTER_DELTAS = &H40000
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_QUANTIZATION_DELTAS = &H80000
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_QUANTIZATION_MATRIX = &H100000
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_REDUCED_TX_SET = &H200000
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_MOTION_MODE_SWITCHABLE = &H400000
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_ALLOW_HIGH_PRECISION_MV = &H800000
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_SKIP_MODE_PRESENT = &H1000000
    D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAG_DELTA_LF_PARAMS = &H2000000
End Enum

Public Enum D3D12_VIDEO_ENCODER_AV1_TX_MODE
    D3D12_VIDEO_ENCODER_AV1_TX_MODE_ONLY4x4 = 0
    D3D12_VIDEO_ENCODER_AV1_TX_MODE_LARGEST = 1
    D3D12_VIDEO_ENCODER_AV1_TX_MODE_SELECT = 2
End Enum

Public Enum D3D12_VIDEO_ENCODER_AV1_TX_MODE_FLAGS
    D3D12_VIDEO_ENCODER_AV1_TX_MODE_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_AV1_TX_MODE_FLAG_ONLY4x4 = (1 << D3D12_VIDEO_ENCODER_AV1_TX_MODE_ONLY4x4)
    D3D12_VIDEO_ENCODER_AV1_TX_MODE_FLAG_LARGEST = (1 << D3D12_VIDEO_ENCODER_AV1_TX_MODE_LARGEST)
    D3D12_VIDEO_ENCODER_AV1_TX_MODE_FLAG_SELECT = (1 << D3D12_VIDEO_ENCODER_AV1_TX_MODE_SELECT)
End Enum

Public Enum D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS
    D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_EIGHTTAP = 0
    D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_EIGHTTAP_SMOOTH = 1
    D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_EIGHTTAP_SHARP = 2
    D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_BILINEAR = 3
    D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_SWITCHABLE = 4
End Enum

Public Enum D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_FLAGS
    D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_FLAG_EIGHTTAP = (1 << D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_EIGHTTAP)
    D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_FLAG_EIGHTTAP_SMOOTH = (1 << D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_EIGHTTAP_SMOOTH)
    D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_FLAG_EIGHTTAP_SHARP = (1 << D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_EIGHTTAP_SHARP)
    D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_FLAG_BILINEAR = (1 << D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_BILINEAR)
    D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_FLAG_SWITCHABLE = (1 << D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_SWITCHABLE)
End Enum

Public Enum D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_BLOCK_SIZE
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_BLOCK_SIZE_4x4 = 0
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_BLOCK_SIZE_8x8 = 1
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_BLOCK_SIZE_16x16 = 2
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_BLOCK_SIZE_32x32 = 3
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_BLOCK_SIZE_64x64 = 4
End Enum

Public Enum D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_DISABLED = 0
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_ALT_Q = 1
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_ALT_LF_Y_V = 2
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_ALT_LF_Y_H = 3
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_ALT_LF_U = 4
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_ALT_LF_V = 5
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_ALT_REF_FRAME = 6
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_ALT_SKIP = 7
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_ALT_GLOBALMV = 8
End Enum

Public Enum D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_FLAGS
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_FLAG_NONE = 0
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_FLAG_DISABLED = (1 << D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_DISABLED)
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_FLAG_ALT_Q = (1 << D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_ALT_Q)
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_FLAG_ALT_LF_Y_V = (1 << D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_ALT_LF_Y_V)
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_FLAG_ALT_LF_Y_H = (1 << D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_ALT_LF_Y_H)
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_FLAG_ALT_LF_U = (1 << D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_ALT_LF_U)
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_FLAG_ALT_LF_V = (1 << D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_ALT_LF_V)
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_FLAG_REF_FRAME = (1 << D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_ALT_REF_FRAME)
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_FLAG_ALT_SKIP = (1 << D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_ALT_SKIP)
    D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_FLAG_ALT_GLOBALMV = (1 << D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_ALT_GLOBALMV)
End Enum

Public Enum D3D12_VIDEO_ENCODER_AV1_RESTORATION_TYPE
    D3D12_VIDEO_ENCODER_AV1_RESTORATION_TYPE_DISABLED = 0
    D3D12_VIDEO_ENCODER_AV1_RESTORATION_TYPE_SWITCHABLE = 1
    D3D12_VIDEO_ENCODER_AV1_RESTORATION_TYPE_WIENER = 2
    D3D12_VIDEO_ENCODER_AV1_RESTORATION_TYPE_SGRPROJ = 3
End Enum

Public Enum D3D12_VIDEO_ENCODER_AV1_RESTORATION_TILESIZE
    D3D12_VIDEO_ENCODER_AV1_RESTORATION_TILESIZE_DISABLED = 0
    D3D12_VIDEO_ENCODER_AV1_RESTORATION_TILESIZE_32x32 = 1
    D3D12_VIDEO_ENCODER_AV1_RESTORATION_TILESIZE_64x64 = 2
    D3D12_VIDEO_ENCODER_AV1_RESTORATION_TILESIZE_128x128 = 3
    D3D12_VIDEO_ENCODER_AV1_RESTORATION_TILESIZE_256x256 = 4
End Enum

Public Enum D3D12_VIDEO_ENCODER_AV1_RESTORATION_SUPPORT_FLAGS
    D3D12_VIDEO_ENCODER_AV1_RESTORATION_SUPPORT_FLAG_NOT_SUPPORTED = &H0
    D3D12_VIDEO_ENCODER_AV1_RESTORATION_SUPPORT_FLAG_32x32 = &H1
    D3D12_VIDEO_ENCODER_AV1_RESTORATION_SUPPORT_FLAG_64x64 = &H2
    D3D12_VIDEO_ENCODER_AV1_RESTORATION_SUPPORT_FLAG_128x128 = &H4
    D3D12_VIDEO_ENCODER_AV1_RESTORATION_SUPPORT_FLAG_256x256 = &H8
End Enum

Public Enum D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION
    D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION_IDENTITY = 0
    D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION_TRANSLATION = 1
    D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION_ROTZOOM = 2
    D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION_AFFINE = 3
End Enum

Public Enum D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION_FLAGS
    D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION_FLAG_NONE = 0 ' None is supported, reference warp motion arguments are ignored and is_global syntax is false for all references
    D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION_FLAG_IDENTITY = (1 << D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION_IDENTITY)
    D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION_FLAG_TRANSLATION = (1 << D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION_TRANSLATION)
    D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION_FLAG_ROTZOOM = (1 << D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION_ROTZOOM)
    D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION_FLAG_AFFINE = (1 << D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION_AFFINE)
End Enum

Public Enum D3D12_VIDEO_ENCODER_AV1_POST_ENCODE_VALUES_FLAGS
    D3D12_VIDEO_ENCODER_AV1_POST_ENCODE_VALUES_FLAG_NONE = 0
    D3D12_VIDEO_ENCODER_AV1_POST_ENCODE_VALUES_FLAG_QUANTIZATION = &H1
    D3D12_VIDEO_ENCODER_AV1_POST_ENCODE_VALUES_FLAG_QUANTIZATION_DELTA = &H2
    D3D12_VIDEO_ENCODER_AV1_POST_ENCODE_VALUES_FLAG_LOOP_FILTER = &H4
    D3D12_VIDEO_ENCODER_AV1_POST_ENCODE_VALUES_FLAG_LOOP_FILTER_DELTA = &H8
    D3D12_VIDEO_ENCODER_AV1_POST_ENCODE_VALUES_FLAG_CDEF_DATA = &H10
    D3D12_VIDEO_ENCODER_AV1_POST_ENCODE_VALUES_FLAG_CONTEXT_UPDATE_TILE_ID = &H20
    D3D12_VIDEO_ENCODER_AV1_POST_ENCODE_VALUES_FLAG_COMPOUND_PREDICTION_MODE = &H40
    D3D12_VIDEO_ENCODER_AV1_POST_ENCODE_VALUES_FLAG_PRIMARY_REF_FRAME = &H80
    D3D12_VIDEO_ENCODER_AV1_POST_ENCODE_VALUES_FLAG_REFERENCE_INDICES = &H100
End Enum

[Description(" NOTE: For SupportedRestorationParams, array dimensions are switched vs C++ to match the underlying memory layout.")]
Public Type D3D12_VIDEO_ENCODER_AV1_CODEC_CONFIGURATION_SUPPORT
    SupportedFeatureFlags As D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAGS
    RequiredFeatureFlags As D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAGS
    SupportedInterpolationFilters As D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS_FLAGS
    [Description(" NOTE: Array dimensions are switched vs C++ to match the underlying memory layout.")]
    SupportedRestorationParams(0 To 2, 0 To 2) As D3D12_VIDEO_ENCODER_AV1_RESTORATION_SUPPORT_FLAGS
    SupportedSegmentationModes As D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_FLAGS
    SupportedTxModes(0 To 3) As D3D12_VIDEO_ENCODER_AV1_TX_MODE_FLAGS ' Different for D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE types
    SegmentationBlockSize As D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_BLOCK_SIZE
    PostEncodeValuesFlags As D3D12_VIDEO_ENCODER_AV1_POST_ENCODE_VALUES_FLAGS
    MaxTemporalLayers As Long
    MaxSpatialLayers As Long
End Type

Public Enum D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE
    D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE_KEY_FRAME = 0
    D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE_INTER_FRAME = 1
    D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE_INTRA_ONLY_FRAME = 2
    D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE_SWITCH_FRAME = 3
End Enum

Public Enum D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE_FLAGS
    D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE_FLAG_KEY_FRAME = (1 << D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE_KEY_FRAME)
    D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE_FLAG_INTER_FRAME = (1 << D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE_INTER_FRAME)
    D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE_FLAG_INTRA_ONLY_FRAME = (1 << D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE_INTRA_ONLY_FRAME)
    D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE_FLAG_SWITCH_FRAME = (1 << D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE_SWITCH_FRAME)
End Enum

Public Enum D3D12_VIDEO_ENCODER_AV1_COMP_PREDICTION_TYPE
    D3D12_VIDEO_ENCODER_AV1_COMP_PREDICTION_TYPE_SINGLE_REFERENCE = 0
    D3D12_VIDEO_ENCODER_AV1_COMP_PREDICTION_TYPE_COMPOUND_REFERENCE = 1
End Enum

Public Type D3D12_VIDEO_ENCODER_CODEC_AV1_PICTURE_CONTROL_SUPPORT
    PredictionMode As D3D12_VIDEO_ENCODER_AV1_COMP_PREDICTION_TYPE
    MaxUniqueReferencesPerFrame As Long
    SupportedFrameTypes As D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE_FLAGS
    SupportedReferenceWarpedMotionFlags As D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION_FLAGS
End Type

Public Type D3D12_VIDEO_ENCODER_AV1_CODEC_CONFIGURATION
    FeatureFlags As D3D12_VIDEO_ENCODER_AV1_FEATURE_FLAGS
    OrderHintBitsMinus1 As Long
End Type

Public Type D3D12_VIDEO_ENCODER_AV1_SEQUENCE_STRUCTURE
    IntraDistance As Long
    InterFramePeriod As Long
End Type

Public Type D3D12_VIDEO_ENCODER_AV1_REFERENCE_PICTURE_WARPED_MOTION_INFO
    TransformationType As D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION
    TransformationMatrix(0 To 7) As Long
    InvalidAffineSet As BOOL ' Valid or invalid on affine set
End Type

Public Type D3D12_VIDEO_ENCODER_AV1_REFERENCE_PICTURE_DESCRIPTOR
    ReconstructedPictureResourceIndex As Long
    TemporalLayerIndexPlus1 As Long
    SpatialLayerIndexPlus1 As Long
    FrameType As D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE
    ' Only used if supported in D3D12_VIDEO_ENCODER_AV1_REFERENCE_WARPED_MOTION_TRANSFORMATION_FLAGS, ignored by driver otherwise
    WarpedMotionInfo As D3D12_VIDEO_ENCODER_AV1_REFERENCE_PICTURE_WARPED_MOTION_INFO
    OrderHint As Long
    PictureIndex As Long
End Type

Public Enum D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAGS
    D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAG_ENABLE_ERROR_RESILIENT_MODE = &H1
    D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAG_DISABLE_CDF_UPDATE = &H2
    D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAG_ENABLE_PALETTE_ENCODING = &H4
    D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAG_ENABLE_SKIP_MODE = &H8
    D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAG_FRAME_REFERENCE_MOTION_VECTORS = &H10
    D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAG_FORCE_INTEGER_MOTION_VECTORS = &H20
    D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAG_ALLOW_INTRA_BLOCK_COPY = &H40
    D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAG_USE_SUPER_RESOLUTION = &H80
    D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAG_DISABLE_FRAME_END_UPDATE_CDF = &H100
    D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAG_ENABLE_FRAME_SEGMENTATION_AUTO = &H200
    D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAG_ENABLE_FRAME_SEGMENTATION_CUSTOM = &H400
    D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAG_ENABLE_WARPED_MOTION = &H800
    D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAG_REDUCED_TX_SET = &H1000
    D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAG_MOTION_MODE_SWITCHABLE = &H2000
    D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAG_ALLOW_HIGH_PRECISION_MV = &H4000
End Enum

Public Type D3D12_VIDEO_ENCODER_AV1_RESTORATION_CONFIG
    FrameRestorationType(0 To 2) As D3D12_VIDEO_ENCODER_AV1_RESTORATION_TYPE
    LoopRestorationPixelSize(0 To 2) As D3D12_VIDEO_ENCODER_AV1_RESTORATION_TILESIZE
End Type

Public Type D3D12_VIDEO_ENCODER_AV1_SEGMENT_DATA
    /* [TypeHint(D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE_FLAGS)]*/ EnabledFeatures As LongLong
    ' For the enabled features in EnabledFeatures, the array below
    ' is indexed by D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MODE - 1
    FeatureValue(0 To 7) As LongLong
End Type

Public Type D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_CONFIG
    UpdateMap As LongLong
    TemporalUpdate As LongLong
    UpdateData As LongLong
    NumSegments As LongLong
    SegmentsData(0 To 7) As D3D12_VIDEO_ENCODER_AV1_SEGMENT_DATA
End Type

Public Type D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MAP
    SegmentsMapByteSize As Long
    pSegmentsMap As LongPtr 'UINT8*
End Type

Public Type D3D12_VIDEO_ENCODER_CODEC_AV1_LOOP_FILTER_CONFIG
    LoopFilterLevel(0 To 1) As LongLong
    LoopFilterLevelU As LongLong
    LoopFilterLevelV As LongLong
    LoopFilterSharpnessLevel As LongLong
    LoopFilterDeltaEnabled As LongLong
    ' loop_filter_delta_update = UpdateRefDelta || UpdateModeDelta
    UpdateRefDelta As LongLong
    RefDeltas(0 To 7) As LongLong
    UpdateModeDelta As LongLong
    ModeDeltas(0 To 1) As LongLong
End Type

Public Type D3D12_VIDEO_ENCODER_CODEC_AV1_LOOP_FILTER_DELTA_CONFIG
    DeltaLFPresent As LongLong
    DeltaLFMulti As LongLong
    DeltaLFRes As LongLong
End Type

Public Type D3D12_VIDEO_ENCODER_CODEC_AV1_QUANTIZATION_CONFIG
    BaseQIndex As LongLong
    YDCDeltaQ As LongLong
    UDCDeltaQ As LongLong
    UACDeltaQ As LongLong
    VDCDeltaQ As LongLong
    VACDeltaQ As LongLong
    UsingQMatrix As LongLong
    QMY As LongLong
    QMU As LongLong
    QMV As LongLong
End Type

Public Type D3D12_VIDEO_ENCODER_CODEC_AV1_QUANTIZATION_DELTA_CONFIG
    DeltaQPresent As LongLong
    DeltaQRes As LongLong
End Type

Public Type D3D12_VIDEO_ENCODER_AV1_CDEF_CONFIG
    CdefBits As LongLong
    CdefDampingMinus3 As LongLong
    CdefYPriStrength(0 To 7) As LongLong
    CdefUVPriStrength(0 To 7) As LongLong
    CdefYSecStrength(0 To 7) As LongLong
    CdefUVSecStrength(0 To 7) As LongLong
End Type

Public Type D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_CODEC_DATA
    Flags As D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_FLAGS
    FrameType As D3D12_VIDEO_ENCODER_AV1_FRAME_TYPE
    CompoundPredictionType As D3D12_VIDEO_ENCODER_AV1_COMP_PREDICTION_TYPE
    InterpolationFilter As D3D12_VIDEO_ENCODER_AV1_INTERPOLATION_FILTERS
    FrameRestorationConfig As D3D12_VIDEO_ENCODER_AV1_RESTORATION_CONFIG
    TxMode As D3D12_VIDEO_ENCODER_AV1_TX_MODE
    SuperResDenominator As Long
    OrderHint As Long
    PictureIndex As Long
    TemporalLayerIndexPlus1 As Long
    SpatialLayerIndexPlus1 As Long
    ReferenceFramesReconPictureDescriptors(0 To 7) As D3D12_VIDEO_ENCODER_AV1_REFERENCE_PICTURE_DESCRIPTOR
    ReferenceIndices(0 To 6) As Long
    PrimaryRefFrame As Long
    RefreshFrameFlags As Long
    LoopFilter As D3D12_VIDEO_ENCODER_CODEC_AV1_LOOP_FILTER_CONFIG
    LoopFilterDelta As D3D12_VIDEO_ENCODER_CODEC_AV1_LOOP_FILTER_DELTA_CONFIG
    Quantization As D3D12_VIDEO_ENCODER_CODEC_AV1_QUANTIZATION_CONFIG
    QuantizationDelta As D3D12_VIDEO_ENCODER_CODEC_AV1_QUANTIZATION_DELTA_CONFIG
    CDEF As D3D12_VIDEO_ENCODER_AV1_CDEF_CONFIG
    QPMapValuesCount As Long
    pRateControlQPMap As LongPtr 'INT16*
    CustomSegmentation As D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_CONFIG
    CustomSegmentsMap As D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_MAP
End Type

Public Type D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_SUBREGIONS_LAYOUT_DATA_TILES
    RowCount As LongLong
    ColCount As LongLong
    RowHeights(0 To (D3D12_VIDEO_ENCODER_AV1_MAX_TILE_ROWS - 1)) As LongLong
    ColWidths(0 To (D3D12_VIDEO_ENCODER_AV1_MAX_TILE_COLS - 1)) As LongLong
    ContextUpdateTileId As LongLong
End Type

Public Type D3D12_VIDEO_ENCODER_AV1_POST_ENCODE_VALUES
    CompoundPredictionType As LongLong ' D3D12_VIDEO_ENCODER_AV1_COMP_PREDICTION_TYPE
    LoopFilter As D3D12_VIDEO_ENCODER_CODEC_AV1_LOOP_FILTER_CONFIG
    LoopFilterDelta As D3D12_VIDEO_ENCODER_CODEC_AV1_LOOP_FILTER_DELTA_CONFIG
    Quantization As D3D12_VIDEO_ENCODER_CODEC_AV1_QUANTIZATION_CONFIG
    QuantizationDelta As D3D12_VIDEO_ENCODER_CODEC_AV1_QUANTIZATION_DELTA_CONFIG
    CDEF As D3D12_VIDEO_ENCODER_AV1_CDEF_CONFIG
    SegmentationConfig As D3D12_VIDEO_ENCODER_AV1_SEGMENTATION_CONFIG
    PrimaryRefFrame As LongLong ' Aligned to 64 for use of post encode metadata with predication
    ReferenceIndices(0 To 6) As LongLong ' Aligned to 64 for use of post encode metadata with predication
End Type

Public Type D3D12_VIDEO_EXTENSION_COMMAND_DESC
    NodeMask As Long
    CommandId As UUID
End Type

Public Enum D3D12_VIDEO_ENCODER_RATE_CONTROL_MODE
    D3D12_VIDEO_ENCODER_RATE_CONTROL_MODE_ABSOLUTE_QP_MAP = 0
    D3D12_VIDEO_ENCODER_RATE_CONTROL_MODE_CQP = 1
    D3D12_VIDEO_ENCODER_RATE_CONTROL_MODE_CBR = 2
    D3D12_VIDEO_ENCODER_RATE_CONTROL_MODE_VBR = 3
    D3D12_VIDEO_ENCODER_RATE_CONTROL_MODE_QVBR = 4
End Enum

Public Enum D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAGS
    D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAG_ENABLE_DELTA_QP = &H1
    D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAG_ENABLE_FRAME_ANALYSIS = &H2
    D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAG_ENABLE_QP_RANGE = &H4
    D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAG_ENABLE_INITIAL_QP = &H8
    D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAG_ENABLE_MAX_FRAME_SIZE = &H10
    D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAG_ENABLE_VBV_SIZES = &H20
    D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAG_ENABLE_EXTENSION1_SUPPORT = &H40
    D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAG_ENABLE_QUALITY_VS_SPEED = &H80
End Enum

Public Type D3D12_VIDEO_ENCODER_RATE_CONTROL_CQP
    ConstantQP_FullIntracodedFrame As Long
    ConstantQP_InterPredictedFrame_PrevRefOnly As Long
    ConstantQP_InterPredictedFrame_BiDirectionalRef As Long
End Type

Public Type D3D12_VIDEO_ENCODER_RATE_CONTROL_CQP1
    ConstantQP_FullIntracodedFrame As Long
    ConstantQP_InterPredictedFrame_PrevRefOnly As Long
    ConstantQP_InterPredictedFrame_BiDirectionalRef As Long
    QualityVsSpeed As Long
End Type

Public Type D3D12_VIDEO_ENCODER_RATE_CONTROL_CBR
    InitialQP As Long
    MinQP As Long
    MaxQP As Long
    MaxFrameBitSize As LongLong
    TargetBitRate As LongLong
    VBVCapacity As LongLong
    InitialVBVFullness As LongLong
End Type

Public Type D3D12_VIDEO_ENCODER_RATE_CONTROL_CBR1
    InitialQP As Long
    MinQP As Long
    MaxQP As Long
    MaxFrameBitSize As LongLong
    TargetBitRate As LongLong
    VBVCapacity As LongLong
    InitialVBVFullness As LongLong
    QualityVsSpeed As Long
End Type

Public Type D3D12_VIDEO_ENCODER_RATE_CONTROL_VBR
    InitialQP As Long
    MinQP As Long
    MaxQP As Long
    MaxFrameBitSize As LongLong
    TargetAvgBitRate As LongLong
    PeakBitRate As LongLong
    VBVCapacity As LongLong
    InitialVBVFullness As LongLong
End Type

Public Type D3D12_VIDEO_ENCODER_RATE_CONTROL_VBR1
    InitialQP As Long
    MinQP As Long
    MaxQP As Long
    MaxFrameBitSize As LongLong
    TargetAvgBitRate As LongLong
    PeakBitRate As LongLong
    VBVCapacity As LongLong
    InitialVBVFullness As LongLong
    QualityVsSpeed As Long
End Type

Public Type D3D12_VIDEO_ENCODER_RATE_CONTROL_QVBR
    InitialQP As Long
    MinQP As Long
    MaxQP As Long
    MaxFrameBitSize As LongLong
    TargetAvgBitRate As LongLong
    PeakBitRate As LongLong
    ConstantQualityTarget As Long
End Type

Public Type D3D12_VIDEO_ENCODER_RATE_CONTROL_QVBR1
    InitialQP As Long
    MinQP As Long
    MaxQP As Long
    MaxFrameBitSize As LongLong
    TargetAvgBitRate As LongLong
    PeakBitRate As LongLong
    ConstantQualityTarget As Long
    VBVCapacity As LongLong
    InitialVBVFullness As LongLong
    QualityVsSpeed As Long
End Type
Public Type D3D12_VIDEO_ENCODER_RATE_CONTROL_ABSOLUTE_QP_MAP
    QualityVsSpeed As Long
End Type

Public Type D3D12_VIDEO_ENCODER_RATE_CONTROL_CONFIGURATION_PARAMS
    DataSize As Long
    'union
    '{
    '    const D3D12_VIDEO_ENCODER_RATE_CONTROL_CQP* pConfiguration_CQP;
    '    const D3D12_VIDEO_ENCODER_RATE_CONTROL_CBR* pConfiguration_CBR;
    '    const D3D12_VIDEO_ENCODER_RATE_CONTROL_VBR* pConfiguration_VBR;
    '    const D3D12_VIDEO_ENCODER_RATE_CONTROL_QVBR* pConfiguration_QVBR;
    ' const D3D12_VIDEO_ENCODER_RATE_CONTROL_CQP1* pConfiguration_CQP1;
    ' const D3D12_VIDEO_ENCODER_RATE_CONTROL_CBR1* pConfiguration_CBR1;
    ' const D3D12_VIDEO_ENCODER_RATE_CONTROL_VBR1* pConfiguration_VBR1;
    ' const D3D12_VIDEO_ENCODER_RATE_CONTROL_QVBR1* pConfiguration_QVBR1;
    ' const D3D12_VIDEO_ENCODER_RATE_CONTROL_ABSOLUTE_QP_MAP* pConfiguration_AbsoluteQPMap;
    '};
    pConfiguration As LongPtr
End Type

Public Type D3D12_VIDEO_ENCODER_RATE_CONTROL
    Mode As D3D12_VIDEO_ENCODER_RATE_CONTROL_MODE
    Flags As D3D12_VIDEO_ENCODER_RATE_CONTROL_FLAGS
    ConfigParams As D3D12_VIDEO_ENCODER_RATE_CONTROL_CONFIGURATION_PARAMS
    TargetFrameRate As DXGI_RATIONAL
End Type

Public Enum D3D12_VIDEO_ENCODER_CODEC
    D3D12_VIDEO_ENCODER_CODEC_H264 = 0
    D3D12_VIDEO_ENCODER_CODEC_HEVC = 1
    D3D12_VIDEO_ENCODER_CODEC_AV1 = 2
End Enum

Public Type D3D12_FEATURE_DATA_VIDEO_ENCODER_CODEC
    NodeIndex As Long ' input
    Codec As D3D12_VIDEO_ENCODER_CODEC ' input
    IsSupported As BOOL ' output
End Type

Public Enum D3D12_VIDEO_ENCODER_PROFILE_H264
    D3D12_VIDEO_ENCODER_PROFILE_H264_MAIN = 0
    D3D12_VIDEO_ENCODER_PROFILE_H264_HIGH = 1
    D3D12_VIDEO_ENCODER_PROFILE_H264_HIGH_10 = 2
End Enum

Public Enum D3D12_VIDEO_ENCODER_PROFILE_HEVC
    D3D12_VIDEO_ENCODER_PROFILE_HEVC_MAIN = 0
    D3D12_VIDEO_ENCODER_PROFILE_HEVC_MAIN10 = 1
End Enum

Public Type D3D12_VIDEO_ENCODER_PROFILE_DESC
    DataSize As Long
    'union
    '{
    '    D3D12_VIDEO_ENCODER_PROFILE_H264* pH264Profile;
    '    D3D12_VIDEO_ENCODER_PROFILE_HEVC* pHEVCProfile;
    ' D3D12_VIDEO_ENCODER_AV1_PROFILE* pAV1Profile;
    '};
    pProfile As LongPtr
End Type

Public Enum D3D12_VIDEO_ENCODER_LEVELS_H264
    D3D12_VIDEO_ENCODER_LEVELS_H264_1 = 0
    D3D12_VIDEO_ENCODER_LEVELS_H264_1b = 1
    D3D12_VIDEO_ENCODER_LEVELS_H264_11 = 2
    D3D12_VIDEO_ENCODER_LEVELS_H264_12 = 3
    D3D12_VIDEO_ENCODER_LEVELS_H264_13 = 4
    D3D12_VIDEO_ENCODER_LEVELS_H264_2 = 5
    D3D12_VIDEO_ENCODER_LEVELS_H264_21 = 6
    D3D12_VIDEO_ENCODER_LEVELS_H264_22 = 7
    D3D12_VIDEO_ENCODER_LEVELS_H264_3 = 8
    D3D12_VIDEO_ENCODER_LEVELS_H264_31 = 9
    D3D12_VIDEO_ENCODER_LEVELS_H264_32 = 10
    D3D12_VIDEO_ENCODER_LEVELS_H264_4 = 11
    D3D12_VIDEO_ENCODER_LEVELS_H264_41 = 12
    D3D12_VIDEO_ENCODER_LEVELS_H264_42 = 13
    D3D12_VIDEO_ENCODER_LEVELS_H264_5 = 14
    D3D12_VIDEO_ENCODER_LEVELS_H264_51 = 15
    D3D12_VIDEO_ENCODER_LEVELS_H264_52 = 16
    D3D12_VIDEO_ENCODER_LEVELS_H264_6 = 17
    D3D12_VIDEO_ENCODER_LEVELS_H264_61 = 18
    D3D12_VIDEO_ENCODER_LEVELS_H264_62 = 19
End Enum

Public Enum D3D12_VIDEO_ENCODER_TIER_HEVC
    D3D12_VIDEO_ENCODER_TIER_HEVC_MAIN = 0
    D3D12_VIDEO_ENCODER_TIER_HEVC_HIGH = 1
End Enum

Public Enum D3D12_VIDEO_ENCODER_LEVELS_HEVC
    D3D12_VIDEO_ENCODER_LEVELS_HEVC_1 = 0
    D3D12_VIDEO_ENCODER_LEVELS_HEVC_2 = 1
    D3D12_VIDEO_ENCODER_LEVELS_HEVC_21 = 2
    D3D12_VIDEO_ENCODER_LEVELS_HEVC_3 = 3
    D3D12_VIDEO_ENCODER_LEVELS_HEVC_31 = 4
    D3D12_VIDEO_ENCODER_LEVELS_HEVC_4 = 5
    D3D12_VIDEO_ENCODER_LEVELS_HEVC_41 = 6
    D3D12_VIDEO_ENCODER_LEVELS_HEVC_5 = 7
    D3D12_VIDEO_ENCODER_LEVELS_HEVC_51 = 8
    D3D12_VIDEO_ENCODER_LEVELS_HEVC_52 = 9
    D3D12_VIDEO_ENCODER_LEVELS_HEVC_6 = 10
    D3D12_VIDEO_ENCODER_LEVELS_HEVC_61 = 11
    D3D12_VIDEO_ENCODER_LEVELS_HEVC_62 = 12
End Enum

Public Type D3D12_VIDEO_ENCODER_LEVEL_TIER_CONSTRAINTS_HEVC
    Level As D3D12_VIDEO_ENCODER_LEVELS_HEVC
    Tier As D3D12_VIDEO_ENCODER_TIER_HEVC
End Type

Public Type D3D12_VIDEO_ENCODER_LEVEL_SETTING
    DataSize As Long
    'union
    '{
    '    D3D12_VIDEO_ENCODER_LEVELS_H264* pH264LevelSetting;
    '    D3D12_VIDEO_ENCODER_LEVEL_TIER_CONSTRAINTS_HEVC* pHEVCLevelSetting;
    ' D3D12_VIDEO_ENCODER_AV1_LEVEL_TIER_CONSTRAINTS* pAV1LevelSetting;
    '};
    pLevelSetting As LongPtr
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_ENCODER_PROFILE_LEVEL
    NodeIndex As Long ' input
    Codec As D3D12_VIDEO_ENCODER_CODEC ' input
    Profile As D3D12_VIDEO_ENCODER_PROFILE_DESC ' input
    IsSupported As BOOL ' output
    MinSupportedLevel As D3D12_VIDEO_ENCODER_LEVEL_SETTING ' output
    MaxSupportedLevel As D3D12_VIDEO_ENCODER_LEVEL_SETTING ' output
End Type

Public Type D3D12_VIDEO_ENCODER_PICTURE_RESOLUTION_DESC
    Width As Long
    Height As Long
End Type

Public Type D3D12_VIDEO_ENCODER_PICTURE_RESOLUTION_RATIO_DESC
    WidthRatio As Long
    HeightRatio As Long
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_ENCODER_OUTPUT_RESOLUTION_RATIOS_COUNT
    NodeIndex As Long ' input
    Codec As D3D12_VIDEO_ENCODER_CODEC ' input
    ResolutionRatiosCount As Long ' output
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_ENCODER_OUTPUT_RESOLUTION
    NodeIndex As Long ' input
    Codec As D3D12_VIDEO_ENCODER_CODEC ' input
    ResolutionRatiosCount As Long ' input
    IsSupported As BOOL ' output
    MinResolutionSupported As D3D12_VIDEO_ENCODER_PICTURE_RESOLUTION_DESC ' output
    MaxResolutionSupported As D3D12_VIDEO_ENCODER_PICTURE_RESOLUTION_DESC ' output
    ResolutionWidthMultipleRequirement As Long ' output
    ResolutionHeightMultipleRequirement As Long ' output
    pResolutionRatios As LongPtr 'D3D12_VIDEO_ENCODER_PICTURE_RESOLUTION_RATIO_DESC*
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_ENCODER_INPUT_FORMAT
    NodeIndex As Long ' input
    Codec As D3D12_VIDEO_ENCODER_CODEC ' input
    Profile As D3D12_VIDEO_ENCODER_PROFILE_DESC ' input
    Format As DXGI_FORMAT ' input
    IsSupported As BOOL ' output
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_ENCODER_RATE_CONTROL_MODE
    NodeIndex As Long ' input
    Codec As D3D12_VIDEO_ENCODER_CODEC ' input
    RateControlMode As D3D12_VIDEO_ENCODER_RATE_CONTROL_MODE ' input
    IsSupported As BOOL ' output
End Type

Public Enum D3D12_VIDEO_ENCODER_INTRA_REFRESH_MODE
    D3D12_VIDEO_ENCODER_INTRA_REFRESH_MODE_NONE = 0
    D3D12_VIDEO_ENCODER_INTRA_REFRESH_MODE_ROW_BASED = 1
End Enum

Public Type D3D12_FEATURE_DATA_VIDEO_ENCODER_INTRA_REFRESH_MODE
    NodeIndex As Long ' input
    Codec As D3D12_VIDEO_ENCODER_CODEC ' input
    Profile As D3D12_VIDEO_ENCODER_PROFILE_DESC ' input
    Level As D3D12_VIDEO_ENCODER_LEVEL_SETTING ' input
    IntraRefreshMode As D3D12_VIDEO_ENCODER_INTRA_REFRESH_MODE ' input
    IsSupported As BOOL ' output
End Type

Public Enum D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE
    D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_FULL_FRAME = 0
    D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_BYTES_PER_SUBREGION = 1
    D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_SQUARE_UNITS_PER_SUBREGION_ROW_UNALIGNED = 2
    D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_UNIFORM_PARTITIONING_ROWS_PER_SUBREGION = 3
    D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_UNIFORM_PARTITIONING_SUBREGIONS_PER_FRAME = 4
End Enum

Public Type D3D12_FEATURE_DATA_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE
    NodeIndex As Long ' input
    Codec As D3D12_VIDEO_ENCODER_CODEC ' input
    Profile As D3D12_VIDEO_ENCODER_PROFILE_DESC ' input
    Level As D3D12_VIDEO_ENCODER_LEVEL_SETTING ' input
    SubregionMode As D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE ' input
    IsSupported As BOOL ' output    
End Type

Public Enum D3D12_VIDEO_ENCODER_AV1_FRAME_SUBREGION_LAYOUT_CONFIG_VALIDATION_FLAGS
    D3D12_VIDEO_ENCODER_AV1_FRAME_SUBREGION_LAYOUT_CONFIG_VALIDATION_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_AV1_FRAME_SUBREGION_LAYOUT_CONFIG_VALIDATION_FLAG_NOT_SPECIFIED = &H1
    D3D12_VIDEO_ENCODER_AV1_FRAME_SUBREGION_LAYOUT_CONFIG_VALIDATION_FLAG_CODEC_CONSTRAINT = &H2
    D3D12_VIDEO_ENCODER_AV1_FRAME_SUBREGION_LAYOUT_CONFIG_VALIDATION_FLAG_HARDWARE_CONSTRAINT = &H4
    D3D12_VIDEO_ENCODER_AV1_FRAME_SUBREGION_LAYOUT_CONFIG_VALIDATION_FLAG_ROWS_COUNT = &H8
    D3D12_VIDEO_ENCODER_AV1_FRAME_SUBREGION_LAYOUT_CONFIG_VALIDATION_FLAG_COLS_COUNT = &H10
    D3D12_VIDEO_ENCODER_AV1_FRAME_SUBREGION_LAYOUT_CONFIG_VALIDATION_FLAG_WIDTH = &H20
    D3D12_VIDEO_ENCODER_AV1_FRAME_SUBREGION_LAYOUT_CONFIG_VALIDATION_FLAG_AREA = &H40
    D3D12_VIDEO_ENCODER_AV1_FRAME_SUBREGION_LAYOUT_CONFIG_VALIDATION_FLAG_TOTAL_TILES = &H80
End Enum

Public Type D3D12_VIDEO_ENCODER_AV1_FRAME_SUBREGION_LAYOUT_CONFIG_SUPPORT
    Use128SuperBlocks As BOOL
    TilesConfiguration As D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_SUBREGIONS_LAYOUT_DATA_TILES
    ValidationFlags As D3D12_VIDEO_ENCODER_AV1_FRAME_SUBREGION_LAYOUT_CONFIG_VALIDATION_FLAGS
    MinTileRows As Long
    MaxTileRows As Long
    MinTileCols As Long
    MaxTileCols As Long
    MinTileWidth As Long
    MaxTileWidth As Long
    MinTileArea As Long
    MaxTileArea As Long
    TileSizeBytesMinus1 As Long
End Type
Public Type D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_CONFIG_SUPPORT
    DataSize As Long
    'union
    '{
    pAV1Support As D3D12_VIDEO_ENCODER_AV1_FRAME_SUBREGION_LAYOUT_CONFIG_SUPPORT
    '};
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_CONFIG
    NodeIndex As Long ' input
    Codec As D3D12_VIDEO_ENCODER_CODEC ' input
    Profile As D3D12_VIDEO_ENCODER_PROFILE_DESC ' input
    Level As D3D12_VIDEO_ENCODER_LEVEL_SETTING ' input
    SubregionMode As D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE ' input
    FrameResolution As D3D12_VIDEO_ENCODER_PICTURE_RESOLUTION_DESC ' input
    CodecSupport As D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_CONFIG_SUPPORT ' input/output
    IsSupported As BOOL ' output
End Type
 
Public Enum D3D12_VIDEO_ENCODER_HEAP_FLAGS
    D3D12_VIDEO_ENCODER_HEAP_FLAG_NONE = &H0
End Enum

Public Type D3D12_VIDEO_ENCODER_HEAP_DESC
    NodeMask As Long
    Flags As D3D12_VIDEO_ENCODER_HEAP_FLAGS
    EncodeCodec As D3D12_VIDEO_ENCODER_CODEC
    EncodeProfile As D3D12_VIDEO_ENCODER_PROFILE_DESC
    EncodeLevel As D3D12_VIDEO_ENCODER_LEVEL_SETTING
    ResolutionsListCount As Long
    pResolutionList As LongPtr 'D3D12_VIDEO_ENCODER_PICTURE_RESOLUTION_DESC*
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_ENCODER_HEAP_SIZE
    HeapDesc As D3D12_VIDEO_ENCODER_HEAP_DESC ' input
    IsSupported As BOOL ' output
    MemoryPoolL0Size As LongLong ' output
    MemoryPoolL1Size As LongLong ' output
End Type

Public Enum D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_H264_FLAGS
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_H264_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_H264_FLAG_CABAC_ENCODING_SUPPORT = &H1
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_H264_FLAG_INTRA_SLICE_CONSTRAINED_ENCODING_SUPPORT = &H2
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_H264_FLAG_BFRAME_LTR_COMBINED_SUPPORT = &H4
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_H264_FLAG_ADAPTIVE_8x8_TRANSFORM_ENCODING_SUPPORT = &H8
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_H264_FLAG_DIRECT_SPATIAL_ENCODING_SUPPORT = &H10
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_H264_FLAG_DIRECT_TEMPORAL_ENCODING_SUPPORT = &H20
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_H264_FLAG_CONSTRAINED_INTRAPREDICTION_SUPPORT = &H40
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_H264_FLAG_NUM_REF_IDX_ACTIVE_OVERRIDE_FLAG_SLICE_SUPPORT = &H80
End Enum

Public Enum D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODES
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_0_ALL_LUMA_CHROMA_SLICE_BLOCK_EDGES_ALWAYS_FILTERED = 0
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_1_DISABLE_ALL_SLICE_BLOCK_EDGES = 1
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_2_DISABLE_SLICE_BOUNDARIES_BLOCKS = 2
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_3_USE_TWO_STAGE_DEBLOCKING = 3
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_4_DISABLE_CHROMA_BLOCK_EDGES = 4
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_5_DISABLE_CHROMA_BLOCK_EDGES_AND_LUMA_BOUNDARIES = 5
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_6_DISABLE_CHROMA_BLOCK_EDGES_AND_USE_LUMA_TWO_STAGE_DEBLOCKING = 6
End Enum

Public Enum D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_FLAGS
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_FLAG_0_ALL_LUMA_CHROMA_SLICE_BLOCK_EDGES_ALWAYS_FILTERED = (1 << D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_0_ALL_LUMA_CHROMA_SLICE_BLOCK_EDGES_ALWAYS_FILTERED)
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_FLAG_1_DISABLE_ALL_SLICE_BLOCK_EDGES = (1 << D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_1_DISABLE_ALL_SLICE_BLOCK_EDGES)
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_FLAG_2_DISABLE_SLICE_BOUNDARIES_BLOCKS = (1 << D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_2_DISABLE_SLICE_BOUNDARIES_BLOCKS)
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_FLAG_3_USE_TWO_STAGE_DEBLOCKING = (1 << D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_3_USE_TWO_STAGE_DEBLOCKING)
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_FLAG_4_DISABLE_CHROMA_BLOCK_EDGES = (1 << D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_4_DISABLE_CHROMA_BLOCK_EDGES)
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_FLAG_5_DISABLE_CHROMA_BLOCK_EDGES_AND_LUMA_BOUNDARIES = (1 << D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_5_DISABLE_CHROMA_BLOCK_EDGES_AND_LUMA_BOUNDARIES)
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_FLAG_6_DISABLE_CHROMA_BLOCK_EDGES_AND_USE_LUMA_TWO_STAGE_DEBLOCKING = (1 << D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_6_DISABLE_CHROMA_BLOCK_EDGES_AND_USE_LUMA_TWO_STAGE_DEBLOCKING)
End Enum

Public Type D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_H264
    SupportFlags As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_H264_FLAGS
    DisableDeblockingFilterSupportedModes As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODE_FLAGS
End Type

Public Enum D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_HEVC_FLAGS
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_HEVC_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_HEVC_FLAG_BFRAME_LTR_COMBINED_SUPPORT = &H1
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_HEVC_FLAG_INTRA_SLICE_CONSTRAINED_ENCODING_SUPPORT = &H2
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_HEVC_FLAG_CONSTRAINED_INTRAPREDICTION_SUPPORT = &H4
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_HEVC_FLAG_SAO_FILTER_SUPPORT = &H8
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_HEVC_FLAG_ASYMETRIC_MOTION_PARTITION_SUPPORT = &H10
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_HEVC_FLAG_ASYMETRIC_MOTION_PARTITION_REQUIRED = &H20
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_HEVC_FLAG_TRANSFORM_SKIP_SUPPORT = &H40
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_HEVC_FLAG_DISABLING_LOOP_FILTER_ACROSS_SLICES_SUPPORT = &H80
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_HEVC_FLAG_P_FRAMES_IMPLEMENTED_AS_LOW_DELAY_B_FRAMES = &H100
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_HEVC_FLAG_NUM_REF_IDX_ACTIVE_OVERRIDE_FLAG_SLICE_SUPPORT = &H200
End Enum

Public Enum D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_CUSIZE
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_CUSIZE_8x8 = 0
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_CUSIZE_16x16 = 1
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_CUSIZE_32x32 = 2
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_CUSIZE_64x64 = 3
End Enum

Public Enum D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_TUSIZE
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_TUSIZE_4x4 = 0
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_TUSIZE_8x8 = 1
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_TUSIZE_16x16 = 2
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_TUSIZE_32x32 = 3
End Enum

Public Type D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_HEVC
    SupportFlags As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_HEVC_FLAGS
    MinLumaCodingUnitSize As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_CUSIZE
    MaxLumaCodingUnitSize As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_CUSIZE
    MinLumaTransformUnitSize As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_TUSIZE
    MaxLumaTransformUnitSize As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_TUSIZE
    max_transform_hierarchy_depth_inter As Byte
    max_transform_hierarchy_depth_intra As Byte
End Type

Public Type D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT
    DataSize As Long
    'union
    '{
    '    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_H264* pH264Support;
    '    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT_HEVC* pHEVCSupport;
    ' D3D12_VIDEO_ENCODER_AV1_CODEC_CONFIGURATION_SUPPORT* pAV1Support;
    '};
    pSupport As LongPtr
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT
    NodeIndex As Long ' input
    Codec As D3D12_VIDEO_ENCODER_CODEC ' input
    Profile As D3D12_VIDEO_ENCODER_PROFILE_DESC ' input
    IsSupported As BOOL ' output
    CodecSupportLimits As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_SUPPORT ' input/output
End Type

Public Type D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_H264
    MaxL0ReferencesForP As Long
    MaxL0ReferencesForB As Long
    MaxL1ReferencesForB As Long
    MaxLongTermReferences As Long
    MaxDPBCapacity As Long
End Type

Public Type D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_HEVC
    MaxL0ReferencesForP As Long
    MaxL0ReferencesForB As Long
    MaxL1ReferencesForB As Long
    MaxLongTermReferences As Long
    MaxDPBCapacity As Long
End Type

Public Type D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT
    DataSize As Long
    'union
    '{
    '    D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_H264* pH264Support;
    '    D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT_HEVC* pHEVCSupport;
    ' D3D12_VIDEO_ENCODER_CODEC_AV1_PICTURE_CONTROL_SUPPORT* pAV1Support;
    '};
    pSupport As LongPtr
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT
    NodeIndex As Long ' input
    Codec As D3D12_VIDEO_ENCODER_CODEC ' input
    Profile As D3D12_VIDEO_ENCODER_PROFILE_DESC ' input
    IsSupported As BOOL ' output
    PictureSupport As D3D12_VIDEO_ENCODER_CODEC_PICTURE_CONTROL_SUPPORT ' output
End Type

Public Enum D3D12_VIDEO_ENCODER_SUPPORT_FLAGS
    D3D12_VIDEO_ENCODER_SUPPORT_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_SUPPORT_FLAG_GENERAL_SUPPORT_OK = &H1
    D3D12_VIDEO_ENCODER_SUPPORT_FLAG_RATE_CONTROL_RECONFIGURATION_AVAILABLE = &H2
    D3D12_VIDEO_ENCODER_SUPPORT_FLAG_RESOLUTION_RECONFIGURATION_AVAILABLE = &H4
    D3D12_VIDEO_ENCODER_SUPPORT_FLAG_RATE_CONTROL_VBV_SIZE_CONFIG_AVAILABLE = &H8
    D3D12_VIDEO_ENCODER_SUPPORT_FLAG_RATE_CONTROL_FRAME_ANALYSIS_AVAILABLE = &H10
    D3D12_VIDEO_ENCODER_SUPPORT_FLAG_RECONSTRUCTED_FRAMES_REQUIRE_TEXTURE_ARRAYS = &H20
    D3D12_VIDEO_ENCODER_SUPPORT_FLAG_RATE_CONTROL_DELTA_QP_AVAILABLE = &H40
    D3D12_VIDEO_ENCODER_SUPPORT_FLAG_SUBREGION_LAYOUT_RECONFIGURATION_AVAILABLE = &H80
    D3D12_VIDEO_ENCODER_SUPPORT_FLAG_RATE_CONTROL_ADJUSTABLE_QP_RANGE_AVAILABLE = &H100
    D3D12_VIDEO_ENCODER_SUPPORT_FLAG_RATE_CONTROL_INITIAL_QP_AVAILABLE = &H200
    D3D12_VIDEO_ENCODER_SUPPORT_FLAG_RATE_CONTROL_MAX_FRAME_SIZE_AVAILABLE = &H400
    D3D12_VIDEO_ENCODER_SUPPORT_FLAG_SEQUENCE_GOP_RECONFIGURATION_AVAILABLE = &H800
    D3D12_VIDEO_ENCODER_SUPPORT_FLAG_MOTION_ESTIMATION_PRECISION_MODE_LIMIT_AVAILABLE = &H1000
    D3D12_VIDEO_ENCODER_SUPPORT_FLAG_RATE_CONTROL_EXTENSION1_SUPPORT = &H2000
    D3D12_VIDEO_ENCODER_SUPPORT_FLAG_RATE_CONTROL_QUALITY_VS_SPEED_AVAILABLE = &H4000
End Enum

Public Enum D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_FLAGS
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_FLAG_USE_CONSTRAINED_INTRAPREDICTION = &H1
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_FLAG_USE_ADAPTIVE_8x8_TRANSFORM = &H2
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_FLAG_ENABLE_CABAC_ENCODING = &H4
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_FLAG_ALLOW_REQUEST_INTRA_CONSTRAINED_SLICES = &H8
End Enum

Public Enum D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_DIRECT_MODES
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_DIRECT_MODES_DISABLED = 0
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_DIRECT_MODES_TEMPORAL = 1
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_DIRECT_MODES_SPATIAL = 2
End Enum

Public Type D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264
    ConfigurationFlags As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_FLAGS
    DirectModeConfig As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_DIRECT_MODES
    DisableDeblockingFilterConfig As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264_SLICES_DEBLOCKING_MODES
End Type

Public Enum D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_FLAGS
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_FLAG_DISABLE_LOOP_FILTER_ACROSS_SLICES = &H1
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_FLAG_ALLOW_REQUEST_INTRA_CONSTRAINED_SLICES = &H2
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_FLAG_ENABLE_SAO_FILTER = &H4
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_FLAG_ENABLE_LONG_TERM_REFERENCES = &H8
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_FLAG_USE_ASYMETRIC_MOTION_PARTITION = &H10
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_FLAG_ENABLE_TRANSFORM_SKIPPING = &H20
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_FLAG_USE_CONSTRAINED_INTRAPREDICTION = &H40
End Enum

Public Type D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC
    ConfigurationFlags As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_FLAGS
    MinLumaCodingUnitSize As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_CUSIZE
    MaxLumaCodingUnitSize As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_CUSIZE
    MinLumaTransformUnitSize As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_TUSIZE
    MaxLumaTransformUnitSize As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_TUSIZE
    max_transform_hierarchy_depth_inter As Byte
    max_transform_hierarchy_depth_intra As Byte
End Type

Public Type D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION
    DataSize As Long
    'union
    '{
    '    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_H264* pH264Config;
    '    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC* pHEVCConfig;
    ' D3D12_VIDEO_ENCODER_AV1_CODEC_CONFIGURATION* pAV1Config;
    '};
    pConfig As LongPtr
End Type

Public Type D3D12_VIDEO_ENCODER_INTRA_REFRESH
    Mode As D3D12_VIDEO_ENCODER_INTRA_REFRESH_MODE
    IntraRefreshDuration As Long
End Type

Public Enum D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE
    D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE_MAXIMUM = 0
    D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE_FULL_PIXEL = 1
    D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE_HALF_PIXEL = 2
    D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE_QUARTER_PIXEL = 3
    D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE_EIGHTH_PIXEL = 4
End Enum

Public Type D3D12_FEATURE_DATA_VIDEO_ENCODER_RESOLUTION_SUPPORT_LIMITS
    MaxSubregionsNumber As Long
    MaxIntraRefreshFrameDuration As Long
    SubregionBlockPixelsSize As Long
    QPMapRegionPixelsSize As Long
End Type

Public Enum D3D12_VIDEO_ENCODER_VALIDATION_FLAGS
    D3D12_VIDEO_ENCODER_VALIDATION_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_VALIDATION_FLAG_CODEC_NOT_SUPPORTED = &H1
    D3D12_VIDEO_ENCODER_VALIDATION_FLAG_INPUT_FORMAT_NOT_SUPPORTED = &H8
    D3D12_VIDEO_ENCODER_VALIDATION_FLAG_CODEC_CONFIGURATION_NOT_SUPPORTED = &H10
    D3D12_VIDEO_ENCODER_VALIDATION_FLAG_RATE_CONTROL_MODE_NOT_SUPPORTED = &H20
    D3D12_VIDEO_ENCODER_VALIDATION_FLAG_RATE_CONTROL_CONFIGURATION_NOT_SUPPORTED = &H40
    D3D12_VIDEO_ENCODER_VALIDATION_FLAG_INTRA_REFRESH_MODE_NOT_SUPPORTED = &H80
    D3D12_VIDEO_ENCODER_VALIDATION_FLAG_SUBREGION_LAYOUT_MODE_NOT_SUPPORTED = &H100
    D3D12_VIDEO_ENCODER_VALIDATION_FLAG_RESOLUTION_NOT_SUPPORTED_IN_LIST = &H200
    D3D12_VIDEO_ENCODER_VALIDATION_FLAG_GOP_STRUCTURE_NOT_SUPPORTED = &H800
    D3D12_VIDEO_ENCODER_VALIDATION_FLAG_SUBREGION_LAYOUT_DATA_NOT_SUPPORTED = &H1000
End Enum

Public Type D3D12_VIDEO_ENCODER_SEQUENCE_GOP_STRUCTURE_H264
    GOPLength As Long
    PPicturePeriod As Long
    pic_order_cnt_type As Byte
    log2_max_frame_num_minus4 As Byte
    log2_max_pic_order_cnt_lsb_minus4 As Byte
End Type

Public Type D3D12_VIDEO_ENCODER_SEQUENCE_GOP_STRUCTURE_HEVC
    GOPLength As Long
    PPicturePeriod As Long
    log2_max_pic_order_cnt_lsb_minus4 As Byte
End Type

Public Type D3D12_VIDEO_ENCODER_SEQUENCE_GOP_STRUCTURE
    DataSize As Long
    'union
    '{
    '    D3D12_VIDEO_ENCODER_SEQUENCE_GOP_STRUCTURE_H264* pH264GroupOfPictures;
    '    D3D12_VIDEO_ENCODER_SEQUENCE_GOP_STRUCTURE_HEVC* pHEVCGroupOfPictures;
    ' D3D12_VIDEO_ENCODER_AV1_SEQUENCE_STRUCTURE* pAV1SequenceStructure;
    '};
    pGroupOfPictures As LongPtr
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_ENCODER_SUPPORT
    ' input
    NodeIndex As Long
    Codec As D3D12_VIDEO_ENCODER_CODEC
    InputFormat As DXGI_FORMAT
    CodecConfiguration As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION
    CodecGopSequence As D3D12_VIDEO_ENCODER_SEQUENCE_GOP_STRUCTURE
    RateControl As D3D12_VIDEO_ENCODER_RATE_CONTROL
    IntraRefresh As D3D12_VIDEO_ENCODER_INTRA_REFRESH_MODE
    SubregionFrameEncoding As D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE
    ResolutionsListCount As Long
    pResolutionList As LongPtr 'D3D12_VIDEO_ENCODER_PICTURE_RESOLUTION_DESC*
    MaxReferenceFramesInDPB As Long
    ' single value output
    ValidationFlags As D3D12_VIDEO_ENCODER_VALIDATION_FLAGS
    SupportFlags As D3D12_VIDEO_ENCODER_SUPPORT_FLAGS
    SuggestedProfile As D3D12_VIDEO_ENCODER_PROFILE_DESC
    SuggestedLevel As D3D12_VIDEO_ENCODER_LEVEL_SETTING ' assuming max resolution from input list
    ' resolution dependent output
    pResolutionDependentSupport As LongPtr 'D3D12_FEATURE_DATA_VIDEO_ENCODER_RESOLUTION_SUPPORT_LIMITS*
End Type
Public Type D3D12_FEATURE_DATA_VIDEO_ENCODER_SUPPORT1
    ' input
    NodeIndex As Long
    Codec As D3D12_VIDEO_ENCODER_CODEC
    InputFormat As DXGI_FORMAT
    CodecConfiguration As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION
    CodecGopSequence As D3D12_VIDEO_ENCODER_SEQUENCE_GOP_STRUCTURE
    RateControl As D3D12_VIDEO_ENCODER_RATE_CONTROL
    IntraRefresh As D3D12_VIDEO_ENCODER_INTRA_REFRESH_MODE
    SubregionFrameEncoding As D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE
    ResolutionsListCount As Long
    pResolutionList As LongPtr 'D3D12_VIDEO_ENCODER_PICTURE_RESOLUTION_DESC*
    MaxReferenceFramesInDPB As Long
    ' single value output
    ValidationFlags As D3D12_VIDEO_ENCODER_VALIDATION_FLAGS
    SupportFlags As D3D12_VIDEO_ENCODER_SUPPORT_FLAGS
    SuggestedProfile As D3D12_VIDEO_ENCODER_PROFILE_DESC
    SuggestedLevel As D3D12_VIDEO_ENCODER_LEVEL_SETTING ' assuming max resolution from input list
    ' resolution dependent output
    pResolutionDependentSupport As LongPtr 'D3D12_FEATURE_DATA_VIDEO_ENCODER_RESOLUTION_SUPPORT_LIMITS*
    /* Below are new arguments for D3D12_FEATURE_DATA_VIDEO_ENCODER_SUPPORT1 */
    SubregionFrameEncodingData As D3D12_VIDEO_ENCODER_PICTURE_CONTROL_SUBREGIONS_LAYOUT_DATA ' input
    MaxQualityVsSpeed As Long
End Type

Public Type D3D12_FEATURE_DATA_VIDEO_ENCODER_RESOURCE_REQUIREMENTS
    NodeIndex As Long ' input
    Codec As D3D12_VIDEO_ENCODER_CODEC ' input
    Profile As D3D12_VIDEO_ENCODER_PROFILE_DESC ' input     
    InputFormat As DXGI_FORMAT ' input
    PictureTargetResolution As D3D12_VIDEO_ENCODER_PICTURE_RESOLUTION_DESC ' input
    IsSupported As BOOL ' output   
    CompressedBitstreamBufferAccessAlignment As Long ' output
    EncoderMetadataBufferAccessAlignment As Long ' output
    MaxEncoderOutputMetadataBufferSize As Long ' output
End Type

Public Enum D3D12_VIDEO_ENCODER_FLAGS
    D3D12_VIDEO_ENCODER_FLAG_NONE = &H0
End Enum

Public Type D3D12_VIDEO_ENCODER_DESC
    NodeMask As Long
    Flags As D3D12_VIDEO_ENCODER_FLAGS
    EncodeCodec As D3D12_VIDEO_ENCODER_CODEC
    EncodeProfile As D3D12_VIDEO_ENCODER_PROFILE_DESC
    InputFormat As DXGI_FORMAT
    CodecConfiguration As D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION
    MaxMotionEstimationPrecision As D3D12_VIDEO_ENCODER_MOTION_ESTIMATION_PRECISION_MODE
End Type

Public Enum D3D12_VIDEO_ENCODER_FRAME_TYPE_H264
    D3D12_VIDEO_ENCODER_FRAME_TYPE_H264_I_FRAME = 0
    D3D12_VIDEO_ENCODER_FRAME_TYPE_H264_P_FRAME = 1
    D3D12_VIDEO_ENCODER_FRAME_TYPE_H264_B_FRAME = 2
    D3D12_VIDEO_ENCODER_FRAME_TYPE_H264_IDR_FRAME = 3
End Enum

Public Type D3D12_VIDEO_ENCODER_REFERENCE_PICTURE_DESCRIPTOR_H264
    ReconstructedPictureResourceIndex As Long
    IsLongTermReference As BOOL
    LongTermPictureIdx As Long
    PictureOrderCountNumber As Long
    FrameDecodingOrderNumber As Long
    TemporalLayerIndex As Long
End Type

Public Enum D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_H264_FLAGS
    D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_H264_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_H264_FLAG_REQUEST_INTRA_CONSTRAINED_SLICES = &H1
    D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_H264_FLAG_REQUEST_NUM_REF_IDX_ACTIVE_OVERRIDE_FLAG_SLICE = &H2
End Enum

Public Type D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_H264_REFERENCE_PICTURE_MARKING_OPERATION
    memory_management_control_operation As Byte
    difference_of_pic_nums_minus1 As Long
    long_term_pic_num As Long
    long_term_frame_idx As Long
    max_long_term_frame_idx_plus1 As Long
End Type

Public Type D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_H264_REFERENCE_PICTURE_LIST_MODIFICATION_OPERATION
    modification_of_pic_nums_idc As Byte
    abs_diff_pic_num_minus1 As Long
    long_term_pic_num As Long
End Type

Public Type D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_H264
    Flags As D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_H264_FLAGS
    FrameType As D3D12_VIDEO_ENCODER_FRAME_TYPE_H264
    pic_parameter_set_id As Long
    idr_pic_id As Long
    PictureOrderCountNumber As Long
    FrameDecodingOrderNumber As Long
    TemporalLayerIndex As Long
    List0ReferenceFramesCount As Long
    pList0ReferenceFrames As LongPtr 'UINT*
    List1ReferenceFramesCount As Long
    pList1ReferenceFrames As LongPtr 'UINT*
    ReferenceFramesReconPictureDescriptorsCount As Long
    pReferenceFramesReconPictureDescriptors As LongPtr 'D3D12_VIDEO_ENCODER_REFERENCE_PICTURE_DESCRIPTOR_H264*
    adaptive_ref_pic_marking_mode_flag As Byte
    RefPicMarkingOperationsCommandsCount As Long
    pRefPicMarkingOperationsCommands As LongPtr 'D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_H264_REFERENCE_PICTURE_MARKING_OPERATION*
    List0RefPicModificationsCount As Long
    pList0RefPicModifications As LongPtr 'D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_H264_REFERENCE_PICTURE_LIST_MODIFICATION_OPERATION*
    List1RefPicModificationsCount As Long
    pList1RefPicModifications As LongPtr 'D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_H264_REFERENCE_PICTURE_LIST_MODIFICATION_OPERATION*
    QPMapValuesCount As Long
    pRateControlQPMap As LongPtr 'INT8*
End Type

Public Enum D3D12_VIDEO_ENCODER_FRAME_TYPE_HEVC
    D3D12_VIDEO_ENCODER_FRAME_TYPE_HEVC_I_FRAME = 0
    D3D12_VIDEO_ENCODER_FRAME_TYPE_HEVC_P_FRAME = 1
    D3D12_VIDEO_ENCODER_FRAME_TYPE_HEVC_B_FRAME = 2
    D3D12_VIDEO_ENCODER_FRAME_TYPE_HEVC_IDR_FRAME = 3
End Enum

Public Type D3D12_VIDEO_ENCODER_REFERENCE_PICTURE_DESCRIPTOR_HEVC
    ReconstructedPictureResourceIndex As Long
    IsRefUsedByCurrentPic As BOOL
    IsLongTermReference As BOOL
    PictureOrderCountNumber As Long
    TemporalLayerIndex As Long
End Type

Public Enum D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_HEVC_FLAGS
    D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_HEVC_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_HEVC_FLAG_REQUEST_INTRA_CONSTRAINED_SLICES = &H1
    D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_HEVC_FLAG_REQUEST_NUM_REF_IDX_ACTIVE_OVERRIDE_FLAG_SLICE = &H2
End Enum

Public Type D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_HEVC
    Flags As D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_HEVC_FLAGS
    FrameType As D3D12_VIDEO_ENCODER_FRAME_TYPE_HEVC
    slice_pic_parameter_set_id As Long
    PictureOrderCountNumber As Long
    TemporalLayerIndex As Long
    List0ReferenceFramesCount As Long
    pList0ReferenceFrames As LongPtr 'UINT*
    List1ReferenceFramesCount As Long
    pList1ReferenceFrames As LongPtr 'UINT*
    ReferenceFramesReconPictureDescriptorsCount As Long
    pReferenceFramesReconPictureDescriptors As LongPtr 'D3D12_VIDEO_ENCODER_REFERENCE_PICTURE_DESCRIPTOR_HEVC*
    List0RefPicModificationsCount As Long
    pList0RefPicModifications As LongPtr 'UINT*
    List1RefPicModificationsCount As Long
    pList1RefPicModifications As LongPtr 'UINT*
    QPMapValuesCount As Long
    pRateControlQPMap As LongPtr 'INT8*
End Type

Public Type D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA
    DataSize As Long
    'union
    '{
    '    D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_H264* pH264PicData;
    '    D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA_HEVC* pHEVCPicData;
    ' D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_CODEC_DATA* pAV1PicData;
    '};
    pPicData As LongPtr
End Type

Public Type D3D12_VIDEO_ENCODE_REFERENCE_FRAMES
    NumTexture2Ds As Long
    ppTexture2Ds As LongPtr 'ID3D12Resource**
    pSubresources As LongPtr 'UINT*
End Type

Public Enum D3D12_VIDEO_ENCODER_PICTURE_CONTROL_FLAGS
    D3D12_VIDEO_ENCODER_PICTURE_CONTROL_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_PICTURE_CONTROL_FLAG_USED_AS_REFERENCE_PICTURE = &H1
End Enum

Public Type D3D12_VIDEO_ENCODER_PICTURE_CONTROL_DESC
    IntraRefreshFrameIndex As Long
    Flags As D3D12_VIDEO_ENCODER_PICTURE_CONTROL_FLAGS
    PictureControlCodecData As D3D12_VIDEO_ENCODER_PICTURE_CONTROL_CODEC_DATA
    ReferenceFrames As D3D12_VIDEO_ENCODE_REFERENCE_FRAMES
End Type

Public Enum D3D12_VIDEO_ENCODER_SEQUENCE_CONTROL_FLAGS
    D3D12_VIDEO_ENCODER_SEQUENCE_CONTROL_FLAG_NONE = &H0
    D3D12_VIDEO_ENCODER_SEQUENCE_CONTROL_FLAG_RESOLUTION_CHANGE = &H1
    D3D12_VIDEO_ENCODER_SEQUENCE_CONTROL_FLAG_RATE_CONTROL_CHANGE = &H2
    D3D12_VIDEO_ENCODER_SEQUENCE_CONTROL_FLAG_SUBREGION_LAYOUT_CHANGE = &H4
    D3D12_VIDEO_ENCODER_SEQUENCE_CONTROL_FLAG_REQUEST_INTRA_REFRESH = &H8
    D3D12_VIDEO_ENCODER_SEQUENCE_CONTROL_FLAG_GOP_SEQUENCE_CHANGE = &H10
End Enum

Public Type D3D12_VIDEO_ENCODER_PICTURE_CONTROL_SUBREGIONS_LAYOUT_DATA_SLICES
    ' Mutually exclusive options according to selected mode
    'union
    '{
    '    // Use with mode: D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_BYTES_PER_SUBREGION
    '    UINT MaxBytesPerSlice;
    '    // Use with mode: D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_SQUARE_UNITS_PER_SUBREGION_ROW_UNALIGNED
    '    UINT NumberOfCodingUnitsPerSlice;
    '    // Use with mode: D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_UNIFORM_PARTITIONING_ROWS_PER_SUBREGION
    '    UINT NumberOfRowsPerSlice;
    '    // Use with mode: D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE_UNIFORM_PARTITIONING_SUBREGIONS_PER_FRAME
    '    UINT NumberOfSlicesPerFrame;
    '};
    PerSliceInfo As Long
End Type

Public Type D3D12_VIDEO_ENCODER_PICTURE_CONTROL_SUBREGIONS_LAYOUT_DATA
    DataSize As Long
    'union
    '{
    '    const D3D12_VIDEO_ENCODER_PICTURE_CONTROL_SUBREGIONS_LAYOUT_DATA_SLICES* pSlicesPartition_H264;
    '    const D3D12_VIDEO_ENCODER_PICTURE_CONTROL_SUBREGIONS_LAYOUT_DATA_SLICES* pSlicesPartition_HEVC;
    ' const D3D12_VIDEO_ENCODER_AV1_PICTURE_CONTROL_SUBREGIONS_LAYOUT_DATA_TILES* pTilesPartition_AV1;
    '};
    pSlicesPartition As LongPtr
End Type

Public Type D3D12_VIDEO_ENCODER_SEQUENCE_CONTROL_DESC
    Flags As D3D12_VIDEO_ENCODER_SEQUENCE_CONTROL_FLAGS
    IntraRefreshConfig As D3D12_VIDEO_ENCODER_INTRA_REFRESH
    RateControl As D3D12_VIDEO_ENCODER_RATE_CONTROL
    PictureTargetResolution As D3D12_VIDEO_ENCODER_PICTURE_RESOLUTION_DESC
    SelectedLayoutMode As D3D12_VIDEO_ENCODER_FRAME_SUBREGION_LAYOUT_MODE
    FrameSubregionsLayoutData As D3D12_VIDEO_ENCODER_PICTURE_CONTROL_SUBREGIONS_LAYOUT_DATA
    CodecGopSequence As D3D12_VIDEO_ENCODER_SEQUENCE_GOP_STRUCTURE
End Type

Public Type D3D12_VIDEO_ENCODER_ENCODEFRAME_INPUT_ARGUMENTS
    SequenceControlDesc As D3D12_VIDEO_ENCODER_SEQUENCE_CONTROL_DESC
    PictureControlDesc As D3D12_VIDEO_ENCODER_PICTURE_CONTROL_DESC
    pInputFrame As ID3D12Resource
    InputFrameSubresource As Long
    CurrentFrameBitstreamMetadataSize As Long
End Type

Public Type D3D12_VIDEO_ENCODER_COMPRESSED_BITSTREAM
    pBuffer As ID3D12Resource
    FrameStartOffset As LongLong
End Type

Public Type D3D12_VIDEO_ENCODER_RECONSTRUCTED_PICTURE
    pReconstructedPicture As ID3D12Resource
    ReconstructedPictureSubresource As Long
End Type

Public Type D3D12_VIDEO_ENCODER_FRAME_SUBREGION_METADATA
    bSize As LongLong
    bStartOffset As LongLong
    bHeaderSize As LongLong
End Type

Public Enum D3D12_VIDEO_ENCODER_ENCODE_ERROR_FLAGS
    D3D12_VIDEO_ENCODER_ENCODE_ERROR_FLAG_NO_ERROR = &H0
    D3D12_VIDEO_ENCODER_ENCODE_ERROR_FLAG_CODEC_PICTURE_CONTROL_NOT_SUPPORTED = &H1
    D3D12_VIDEO_ENCODER_ENCODE_ERROR_FLAG_SUBREGION_LAYOUT_CONFIGURATION_NOT_SUPPORTED = &H2
    D3D12_VIDEO_ENCODER_ENCODE_ERROR_FLAG_INVALID_REFERENCE_PICTURES = &H4
    D3D12_VIDEO_ENCODER_ENCODE_ERROR_FLAG_RECONFIGURATION_REQUEST_NOT_SUPPORTED = &H8
    D3D12_VIDEO_ENCODER_ENCODE_ERROR_FLAG_INVALID_METADATA_BUFFER_SOURCE = &H10
End Enum

Public Type D3D12_VIDEO_ENCODER_OUTPUT_METADATA_STATISTICS
    AverageQP As LongLong
    IntraCodingUnitsCount As LongLong
    InterCodingUnitsCount As LongLong
    SkipCodingUnitsCount As LongLong
    AverageMotionEstimationXDirection As LongLong
    AverageMotionEstimationYDirection As LongLong
End Type

Public Type D3D12_VIDEO_ENCODER_OUTPUT_METADATA
    EncodeErrorFlags As LongLong
    EncodeStats As D3D12_VIDEO_ENCODER_OUTPUT_METADATA_STATISTICS
    EncodedBitstreamWrittenBytesCount As LongLong
    WrittenSubregionsCount As LongLong
End Type

Public Type D3D12_VIDEO_ENCODER_ENCODE_OPERATION_METADATA_BUFFER
    pBuffer As ID3D12Resource
    Offset As LongLong
End Type

Public Type D3D12_VIDEO_ENCODER_RESOLVE_METADATA_INPUT_ARGUMENTS
    EncoderCodec As D3D12_VIDEO_ENCODER_CODEC
    EncoderProfile As D3D12_VIDEO_ENCODER_PROFILE_DESC
    EncoderInputFormat As DXGI_FORMAT
    EncodedPictureEffectiveResolution As D3D12_VIDEO_ENCODER_PICTURE_RESOLUTION_DESC
    HWLayoutMetadata As D3D12_VIDEO_ENCODER_ENCODE_OPERATION_METADATA_BUFFER
End Type

Public Type D3D12_VIDEO_ENCODER_RESOLVE_METADATA_OUTPUT_ARGUMENTS
    ResolvedLayoutMetadata As D3D12_VIDEO_ENCODER_ENCODE_OPERATION_METADATA_BUFFER
End Type

Public Type D3D12_VIDEO_ENCODER_ENCODEFRAME_OUTPUT_ARGUMENTS
    Bitstream As D3D12_VIDEO_ENCODER_COMPRESSED_BITSTREAM
    ReconstructedPicture As D3D12_VIDEO_ENCODER_RECONSTRUCTED_PICTURE
    EncoderOutputMetadata As D3D12_VIDEO_ENCODER_ENCODE_OPERATION_METADATA_BUFFER
End Type











End Module

#End If