
'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'WinDevLib - OLE
'OLE interfaces for use with InPlaceActiveObject hooking
'Note: These conform with tlb definitions 
'DEPENDENCIES: wdShellCore


[InterfaceId("00000115-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleInPlaceUIWindow Extends IOleWindow
    Sub GetBorder(ByVal lpRectBorder As LongPtr)
    Sub RequestBorderSpace(ByVal pBorderWidths As LongPtr)
    Sub SetBorderSpace(ByVal pBorderWidths As LongPtr)
    Sub SetActiveObject(ByVal pActiveObject As IOleInPlaceActiveObject, ByVal pszObjectName As String)
End Interface
[InterfaceId("00000117-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleInPlaceActiveObject Extends IUnknownUnrestricted 'Impl
    Sub GetWindow(phWnd As LongPtr)
    Sub ContextSensitiveHelp(ByVal fEnterMode As BOOL)
    Sub TranslateAccelerator(ByVal lpMsg As LongPtr)
    Sub OnFrameWindowActivate(ByVal fActivate As BOOL)
    Sub OnDocWindowActivate(ByVal fActivate As BOOL)
    Sub ResizeBorder(ByVal lpRectBorder As LongPtr, ByVal pUIWindow As IOleInPlaceUIWindow, ByVal fFrameWindow As BOOL)
    Sub EnableModeless(ByVal fEnable As BOOL)
End Interface
[InterfaceId("38584260-0CFB-45E7-8FBB-5D20B311F5B8")]
[OleAutomation(True)]
'[DualInterface]
Interface IOleInPlaceActiveObjectVB Extends IDispatch
    [DispId(1)] Sub TranslateAccelerator(Handled As Boolean, RetVal As Long, ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr, ByVal Shift As Long)
End Interface

[InterfaceId("0000011a-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IParseDisplayName Extends stdole.IUnknown
    Sub ParseDisplayName(ByVal pbc As IBindCtx, ByVal pszDisplayName As LongPtr, pchEaten As Long, ppmkOut As IMoniker)
End Interface

[InterfaceId("0000011b-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleContainer Extends IParseDisplayName
    [PreserveSig] Function EnumObjects(ByVal grfFlags As Long, ppenum As IEnumUnknown) As Long
    Sub LockContainer(ByVal fLock As Long)
End Interface

[InterfaceId("0000011E-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleCache Extends stdole.IUnknown
    Function Cache(ByRef pformatetc As FORMATETC, ByVal ADVF As ADVF) As Long
    Sub Uncache(ByVal dwConnection As Long)
    Function EnumCache() As IEnumSTATDATA
    Sub InitCache(ByVal pDataObject As IDataObject)
    Sub SetData(ByRef pformatetc As FORMATETC, ByRef pmedium As STGMEDIUM, ByVal fRelease As Long)
End Interface

[InterfaceId("B722BCCB-4E68-101B-A2BC-00AA00404770")]
[OleAutomation(False)]
Interface IOleCommandTarget Extends stdole.IUnknown
    Sub QueryStatus(ByRef pguidCmdGroup As Any, ByVal cCmds As Long, ByRef prgCmds As OLECMD, ByRef pCmdText As OLECMDTEXT)
    Sub Exec(ByRef pguidCmdGroup As Any, ByVal nCmdID As Long, Optional ByVal nCmdexecopt As OLECMDEXECOPT = 0, Optional ByRef pvaIn As Variant = 0, Optional ByRef pvaOut As Variant = 0)
End Interface

[InterfaceId("B196B28B-BAB4-101A-B69C-00AA00341D07")]
[OleAutomation(False)]
Interface ISpecifyPropertyPages Extends stdole.IUnknown
    Sub GetPages(ByRef pPages As CAUUID)
End Interface

[InterfaceId("0000011D-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleLink Extends stdole.IUnknown
    Sub SetUpdateOptions(ByVal dwUpdateOpt As OLEUPDATE)
    Function GetUpdateOptions() As OLEUPDATE
    Sub SetSourceMoniker(ByVal pmk As IMoniker, ByRef rclsid As UUID)
    Function GetSourceMoniker() As IMoniker
    Sub SetSourceDisplayName(ByVal pszStatusText As String)
    Function GetSourceDisplayName() As LongPtr
    Sub BindToSource(ByVal bindflags As OLELINKBIND, ByVal pbc As IBindCtx)
    [PreserveSig]
    Function BindIfRunning() As Long
    Function GetBoundSource() As stdole.IUnknown
    [PreserveSig]
    Function UnbindSource() As Long
    Sub Update(ByVal pbc As IBindCtx)
End Interface

[InterfaceId("B196B28C-BAB4-101A-B69C-00AA00341D07")]
[OleAutomation(False)]
Interface IPropertyPageSite Extends stdole.IUnknown
    Sub OnStatusChange(ByVal dwFlags As PROPPAGESTATUS)
    Sub GetLocaleID(pLocaleID As Long)
    Sub GetPageContainer(ppUnk As IUnknown)
    Sub TranslateAccelerator(pMsg As MSG)
End Interface
[InterfaceId("B196B28D-BAB4-101A-B69C-00AA00341D07")]
[OleAutomation(False)]
Interface IPropertyPage Extends stdole.IUnknown
    Sub SetPageSite(ByVal pPageSite As IPropertyPageSite)
    Sub Activate(ByVal hwndParent As LongPtr, pRect As RECT, ByVal bModal As BOOL)
    Sub Deactivate()
    Sub GetPageInfo(pPageInfo As PROPPAGEINFO)
    Sub SetObjects(ByVal cObjects As Long, ppunk As IUnknown)
End Interface
[InterfaceId("01E44665-24AC-101B-84ED-08002B2EC713")]
[OleAutomation(False)]
Interface IPropertyPage2 Extends IPropertyPage
    Sub EditProperty(ByVal dispID As Long)
End Interface

[InterfaceId("742B0E01-14E6-101B-914E-00AA00300CAB")]
[OleAutomation(False)]
Interface ISimpleFrameSite Extends stdole.IUnknown
    Sub PreMessageFilter(ByVal hwnd As LongPtr, ByVal msg As Long, ByVal wp As LongPtr, ByVal lp As LongPtr, plResult As LongPtr, pdwCookie As Long)
    Sub PostMessageFilter(ByVal hwnd As LongPtr, ByVal msg As Long, ByVal wp As LongPtr, ByVal lp As LongPtr, plResult As LongPtr, ByVal dwCookie As Long)
End Interface

[InterfaceId("0000012a-0000-0000-C000-000000000046")]
Interface IContinue Extends stdole.IUnknown
    Sub FContinue()
End Interface

[InterfaceId("390E3878-FD55-4E18-819D-4682081C0CFD")]
Interface IEnterpriseDropTarget Extends stdole.IUnknown
    Sub SetDropSourceEnterpriseId(ByVal identity As LongPtr)
    Function IsEvaluatingEdpPolicy() As BOOL
End Interface

[InterfaceId("00000111-0000-0000-C000-000000000046")]
Interface IOleAdviseHolder Extends stdole.IUnknown
    Sub Advise(ByVal pAdvise As IAdviseSink, pdwConnection As Long)
    Sub Unadvise(ByVal dwConnection As Long)
    Sub EnumAdvise(ppenumAdvise As IEnumSTATDATA)
    Sub SendOnRename(ByVal pmk As IMoniker)
    Sub SendOnSave()
    Sub SendOnClose()
End Interface

[InterfaceId("00000110-0000-0000-C000-000000000046")]
Interface IDataAdviseHolder Extends stdole.IUnknown
    Sub Advise(ByVal pDataObject As IDataObject, pFetc As FORMATETC, ByVal advf As ADVF, ByVal pAdvise As IAdviseSink, pdwConnection As Long)
    Sub Unadvise(ByVal dwConnection As Long)
    Sub EnumAdvise(ppenumAdvise As IEnumSTATDATA)
    Sub SendOnDataChange(ByVal pDataObject As IDataObject, ByVal dwReserved As Long, ByVal advf As ADVF)
End Interface


[InterfaceId("00000104-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IEnumOLEVERB Extends stdole.IUnknown
    [PreserveSig] Function Next(ByVal celt As Long, rgelt As LongPtr, pceltFetched As Long) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Sub Clone(ppEnum As IEnumOLEVERB)
End Interface


[InterfaceId("00000118-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleClientSite Extends stdole.IUnknown
    Sub SaveObject()
    Sub GetMoniker(ByVal dwAssign As OLEGETMONIKER, ByVal dwWhichMoniker As OLEWHICHMK, ppmk As IMoniker)
    Sub GetContainer(ppContainer As IOleContainer)
    Sub ShowObject()
    Sub OnShowWindow(ByVal fShow As Long)
    Sub RequestNewObjectLayout()
End Interface

[InterfaceId("00000112-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleObject Extends stdole.IUnknown
    Sub SetClientSite(ByVal pClientSite As IOleClientSite)
    Function GetClientSite() As IOleClientSite
    Sub SetHostNames(ByVal szContainerApp As LongPtr, ByVal szContainerObj As LongPtr)
    Sub Close(ByVal dwSaveOption As Long)
    Sub SetMoniker(ByVal dwWhichMoniker As OLEWHICHMK, ByVal pmk As IMoniker)
    Sub GetMoniker(ByVal dwAssign As OLEGETMONIKER, ByVal dwWhichMoniker As OLEWHICHMK, ppmk As IMoniker)
    Sub InitFromData(ByVal pDataObject As IDataObject, ByVal fCreation As Long, ByVal dwReserved As Long)
    Sub GetClipboardData(ByVal dwReserved As Long, ppDataObject As IDataObject)
    Sub DoVerb(ByVal iVerb As Long, lpmsg As MSG, ByVal pActiveSite As IOleClientSite, ByVal lindex As Long, ByVal hwndParent As LongPtr, lprcPosRect As RECT)
    [PreserveSig] Function EnumVerbs(ppEnumOleVerb As IEnumOLEVERB) As Long
    Sub Update()
    [PreserveSig] Function IsUpToDate() As Long
    Sub GetUserClassID(pClsid As UUID)
    Sub GetUserType(ByVal dwFormOfType As USERCLASSTYPE, pszUserType As LongPtr)
    Sub SetExtent(ByVal dwDrawAspect As Long, psizel As SIZE)
    Sub GetExtent(ByVal dwDrawAspect As Long, psizel As SIZE)
    Sub Advise(ByVal pAdvSink As IAdviseSink, pdwConnection As Long)
    Sub Unadvise(ByVal dwConnection As Long)
    Sub EnumAdvise(ppenumAdvise As IEnumSTATDATA)
    Sub GetMiscStatus(ByVal dwAspect As DVASPECT, pdwStatus As OLEMISC)
    Sub SetColorScheme(pLogpal As Any)
End Interface

[InterfaceId("00000116-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleInPlaceFrame Extends IOleInPlaceUIWindow
    Sub InsertMenus(ByVal hMenuShared As LongPtr, lpMenuWidths As OLEMENUGROUPWIDTHS)
    Sub SetMenu(ByVal hMenuShared As LongPtr, ByVal holeMenu As LongPtr, ByVal hwndActiveObject As LongPtr)
    Sub RemoveMenus(ByVal hMenuShared As LongPtr)
    Sub SetStatusText(ByVal pszStatusText As LongPtr)
    Sub EnableModeless(ByVal fEnable As Long)
    Sub TranslateAccelerator(lpmsg As MSG, ByVal wID As Integer)
End Interface

[InterfaceId("00000113-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleInPlaceObject Extends IOleWindow
    Sub InPlaceDeactivate()
    Sub UIDeactivate()
    Sub SetObjectRects(ByVal lprcPosRect As LongPtr, ByVal lprcClipRect As LongPtr)
    Sub ReactivateAndUndo()
End Interface

[InterfaceId("B196B288-BAB4-101A-B69C-00AA00341D07")]
[OleAutomation(False)]
Interface IOleControl Extends stdole.IUnknown
    [PreserveSig]
    Function GetControlInfo(ByRef pCI As CONTROLINFO) As Long
    [PreserveSig]
    Function OnMnemonic(ByRef pMsg As MSG) As Long
    Sub OnAmbientPropertyChange(ByVal DispID As Long)
    Sub FreezeEvents(ByVal bFreeze As Long)
End Interface
[InterfaceId("C895C8F9-6564-4123-8760-529F72AB9322")]
[OleAutomation(True)]
'[ DualInterface]
Interface IOleControlVB Extends IDispatchUnrestricted2
    [DispId(1)]
    Sub GetControlInfo(ByRef Handled As Boolean, ByRef AccelCount As Integer, ByRef AccelTable As LongPtr, ByRef Flags As Long)
    [DispId(2)]
    Sub OnMnemonic(ByRef Handled As Boolean, ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr, ByVal Shift As Long)
End Interface
    
    
[InterfaceId("00000119-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleInPlaceSite Extends IOleWindow
    Sub CanInPlaceActivate()
    Sub OnInPlaceActivate()
    Sub OnUIActivate()
    Sub GetWindowContext(ppFrame As IOleInPlaceFrame, ppDoc As IOleInPlaceUIWindow, ByVal lprcPosRect As LongPtr, ByVal lprcClipRect As LongPtr, ByVal lpFrameInfo As LongPtr)
    Sub Scroll(ByVal scrollExtant As LongLong)
    Sub OnUIDeactivate(ByVal fUndoable As Long)
    Sub OnInPlaceDeactivate()
    Sub DiscardUndoState()
    Sub DeactivateAndUndo()
    Sub OnPosRectChange(lprcPosRect As RECT)
End Interface

[InterfaceId("376BD3AA-3845-101B-84ED-08002B2EC713")]
[OleAutomation(False)]
Interface IPerPropertyBrowsing Extends stdole.IUnknown
    [PreserveSig]
        Function GetDisplayString(ByVal DispID As Long, ByRef pDisplayName As LongPtr) As Long
    [PreserveSig]
        Function MapPropertyToPage(ByVal DispID As Long, ByRef pCLSID As UUID) As Long
    [PreserveSig]
        Function GetPredefinedStrings(ByVal DispID As Long, ByRef pCaStringsOut As CALPOLESTR, ByRef pCaCookiesOut As CADWORD) As Long
    [PreserveSig]
        Function GetPredefinedValue(ByVal DispID As Long, ByVal dwCookie As Long, ByRef pVarOut As Variant) As Long
End Interface
[InterfaceId("D5D3BBE3-DB60-4522-AF5B-D767FE736DDB")]
[OleAutomation(True)]
'[ DualInterface]
Interface IPerPropertyBrowsingVB Extends IDispatchUnrestricted2
    [DispId(1)]
        Sub GetDisplayString(ByRef Handled As Boolean, ByVal DispID As Long, ByRef DisplayName As String)
    [DispId(2)]
        Sub GetPredefinedStrings(ByRef Handled As Boolean, ByVal DispID As Long, ByRef StringsOut As String(), ByRef CookiesOut As Long())
    [DispId(3)]
        Sub GetPredefinedValue(ByRef Handled As Boolean, ByVal DispID As Long, ByVal Cookie As Long, ByRef Value As Variant)
End Interface




[InterfaceId("B196B289-BAB4-101A-B69C-00AA00341D07")]
[OleAutomation(False)]
Interface IOleControlSite Extends stdole.IUnknown
    Sub OnControlInfoChanged()
    Sub LockInPlaceActive(ByVal fLock As Long)
    Function GetExtendedControl() As Object
    Sub TransformCoords(ByRef pPtlHimetric As POINT, ByRef pPtfContainer As POINTF, ByVal dwFlags As XFORMCOORDS)
    Sub TranslateAccelerator(ByRef pMsg As MSG, ByVal grfModifiers As KEYMODIFIERS)
    Sub OnFocus(ByVal fGotFocus As Long)
    Sub ShowPropertyFrame()
End Interface

    
[InterfaceId("1C2056CC-5EF4-101B-8BC8-00AA003E3B29")]
[OleAutomation(False)]
Interface IOleInPlaceObjectWindowless Extends IOleInPlaceObject
    Sub OnWindowMessage(ByVal msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr, plResult As LongPtr)
    Sub GetDropTarget(ppDropTarget As IDropTarget)
End Interface

[InterfaceId("9C2CAD80-3424-11CF-B670-00AA004CD6D8")]
[OleAutomation(False)]
Interface IOleInPlaceSiteEx Extends IOleInPlaceSite
    Sub OnInPlaceActivateEx(pfNoRedraw As BOOL, ByVal dwFlags As ACTIVATEFLAGS)
    Sub OnInPlaceDeactivateEx(ByVal fNoRedraw As BOOL)
    Sub RequestUIActivate()
End Interface

[InterfaceId("922EADA0-3424-11CF-B670-00AA004CD6D8")]
[OleAutomation(False)]
Interface IOleInPlaceSiteWindowless Extends IOleInPlaceSiteEx
    Sub CanWindowlessActivate()
    Sub GetCapture()
    Sub SetCapture(ByVal fCapture As BOOL)
    Sub GetFocus()
    Sub SetFocus(ByVal fFocus As BOOL)
    Sub GetDC(pRect As RECT, ByVal grfFlags As OLEDCFLAGS, phDC As LongPtr)
    Sub ReleaseDC(ByVal hDC As LongPtr)
    Sub InvalidateRect(pRect As RECT, ByVal fErase As BOOL)
    Sub ScrollRect(ByVal dx As Long, ByVal dy As Long, pRectScroll As RECT, pRectClip As RECT)
    Sub AdjustRect(prc As RECT)
    Sub OnDefWindowMessage(ByVal msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr, plResult As LongPtr)
End Interface

[InterfaceId("894AD3B0-EF97-11CE-9BC9-00AA00608E01")]
[OleAutomation(False)]
Interface IOleUndoUnit Extends stdole.IUnknown
    Sub Do(ByVal pUndoManager As IOleUndoManager)
    Sub GetDescription(pBstr As String)
    Sub GetUnitType(pClsid As UUID, plID As Long)
    Sub OnNextAdd()
End Interface
[InterfaceId("A1FAF330-EF97-11CE-9BC9-00AA00608E01")]
[OleAutomation(False)]
Interface IOleParentUndoUnit Extends IOleUndoUnit
    Sub Open(ByVal pPUU As IOleParentUndoUnit)
    Sub Close(ByVal pUU As IOleParentUndoUnit, ByVal fCommit As BOOL)
    Sub Add(ByVal pUU As IOleUndoUnit)
    Sub FindUnit(ByVal pUU As IOleUndoUnit)
    Sub GetParentState(pdwState As UASFLAGS)
End Interface

[InterfaceId("B3E7C340-EF97-11CE-9BC9-00AA00608E01")]
[OleAutomation(False)]
Interface IEnumOleUndoUnits Extends stdole.IUnknown
    Sub Next(ByVal cElt As Long, rgElt As IOleUndoUnit, pcEltFetched As Long)
    Sub Skip(ByVal cElt As Long)
    Sub Reset()
    Sub Clone(ppEnum As IEnumOleUndoUnits)
End Interface

[InterfaceId("D001F200-EF97-11CE-9BC9-00AA00608E01")]
[OleAutomation(False)]
Interface IOleUndoManager Extends stdole.IUnknown
    Sub Open(ByVal pPUU As IOleParentUndoUnit)
    Sub Close(ByVal pUU As IOleParentUndoUnit, ByVal fCommit As BOOL)
    Sub Add(ByVal pUU As IOleUndoUnit)
    Sub GetOpenParentState(pdwState As UASFLAGS)
    Sub DiscardFrom(ByVal pPUU As IOleParentUndoUnit)
    Sub UndoTo(ByVal pPUU As IOleParentUndoUnit)
    Sub RedoTo(ByVal pPUU As IOleParentUndoUnit)
    Sub EnumUndoable(ppEnum As IEnumOleUndoUnits)
    Sub EnumRedoable(ppEnum As IEnumOleUndoUnits)
    Sub GetLastUndoDescription(pBstr As String)
    Sub GetLastRedoDescription(pBstr As String)
    Sub Enable(ByVal fEnable As BOOL)
End Interface

[InterfaceId("55980BA0-35AA-11CF-B671-00AA004CD6D8")]
[OleAutomation(False)]
Interface IPointerInactive Extends stdole.IUnknown
    Sub GetActivationPolicy(pdwPolicy As POINTERINACTIVE)
    Sub OnInactiveMouseMove(pRectBounds As RECT, ByVal x As Long, ByVal y As Long, ByVal grfKeyState As KeyStateMouse)
    Sub OnInactiveSetCursor(pRectBounds As RECT, ByVal x As Long, ByVal y As Long, ByVal dwMouseMsg As Long, ByVal fSetAlways As BOOL)
End Interface

[InterfaceId("CF51ED10-62FE-11CF-BF86-00A0C9034836")]
[OleAutomation(False)]
Interface IQuickActivate Extends stdole.IUnknown
    Sub QuickActivate(pQaContainer As QACONTAINER, pQaControl As QACONTROL)
    Sub SetContentExtent(pSizel As SIZE)
    Sub GetContentExtent(pSizel As SIZE)
End Interface



[InterfaceId("B722BCC5-4E68-101B-A2BC-00AA00404770")]
[OleAutomation(False)]
Interface IOleDocument Extends stdole.IUnknown
    Function CreateView(ByVal pIPSite As IOleInPlaceSite, ByVal pStm As IStream, ByVal dwReserved As Long) As IOleDocumentView
    Function GetDocMiscStatus() As Long
    Sub EnumViews(ByRef ppenum As IEnumOleDocumentViews, ByRef ppView As IOleDocumentView)
End Interface

[InterfaceId("B722BCC7-4E68-101B-A2BC-00AA00404770")]
[OleAutomation(False)]
Interface IOleDocumentSite Extends stdole.IUnknown
    Sub ActivateMe(ByVal pViewToActivate As IOleDocumentView)
End Interface

[InterfaceId("B722BCC6-4E68-101B-A2BC-00AA00404770")]
[OleAutomation(False)]
Interface IOleDocumentView Extends stdole.IUnknown
    Sub SetInPlaceSite(ByVal pIPSite As IOleInPlaceSite)
    Function GetInPlaceSite() As IOleInPlaceSite
    Function GetDocument() As stdole.IUnknown
    Sub SetRect(ByRef prcView As RECT)
    Sub GetRect(ByRef prcView As RECT)
    Sub SetRectComplex(ByRef prcView As RECT, ByRef prcHScroll As RECT, ByRef prcVScroll As RECT, ByRef prcSizeBox As RECT)
    Sub Show(ByVal fShow As Long)
    Sub UIActivate(ByVal fUIActivate As Long)
    Sub Open()
    Sub CloseView(Optional ByVal dwReserved As Long = 0)
    Sub SaveViewState(ByVal pStm As IStream)
    Sub ApplyViewState(ByVal pStm As IStream)
    Function Clone(ByVal pIPSiteNew As IOleInPlaceSite) As IOleDocumentView
End Interface

[InterfaceId("B722BCC8-4E68-101B-A2BC-00AA00404770")]
[OleAutomation(False)]
Interface IEnumOleDocumentViews Extends stdole.IUnknown
    [PreserveSig]
    Function Next(ByVal cViews As Long, ByRef rgpView As IOleDocumentView, Optional ByRef pcFetched As Long = 0) As Long
    Sub Skip(ByVal cViews As Long)
    Sub Reset()
    Function Clone() As IEnumOleDocumentViews
End Interface

[InterfaceId("B722BCCA-4E68-101B-A2BC-00AA00404770")]
[OleAutomation(False)]
Interface IContinueCallback Extends stdole.IUnknown
    Sub FContinue()
    Sub FContinuePrinting(ByVal nCntPrinted As Long, ByVal nCurPage As Long, ByVal pwszPrintStatus As LongPtr)
End Interface

[InterfaceId("B722BCC9-4E68-101B-A2BC-00AA00404770")]
[OleAutomation(False)]
Interface IPrint Extends stdole.IUnknown
    Sub SetInitialPageNum(ByVal nFirstPage As Long)
    Sub GetPageInfo(ByRef pnFirstPage As Long, ByRef pcPages As Long)
    Sub Print(ByVal grfFlags As PRINTFLAG, ByRef pptd As DVTARGETDEVICE, ByRef ppPageSet As PAGESET, ByRef pstgmOptions As STGMEDIUM, ByVal pCallback As IContinueCallback, ByVal nFirstPage As Long, ByRef pcPagesPrinted As Long, ByRef pnLastPage As Long)
End Interface

    [InterfaceId("68284FAA-6A48-11D0-8C78-00C04FD918B4")]
[OleAutomation(False)]
Interface IInputObject Extends stdole.IUnknown
    [Description("Activates or deactivates the object.  lpMsg may be NULL. Returns S_OK if the activation succeeded.")]
    Sub UIActivateIO(ByVal fActivate As Long, ByRef lpmsg As MSG)
    [Description("Returns S_OK if the object has the focus, S_FALSE if not")]
    Sub HasFocusIO()
    [Description("Allow the object to process the message. Returns S_OK if the message was processed (eaten).")]
    Sub TranslateAcceleratorIO(ByRef lpmsg As MSG)
End Interface

[InterfaceId("F1DB8392-7331-11D0-8C99-00A0C92DBFE8")]
[OleAutomation(False)]
Interface IInputObjectSite Extends stdole.IUnknown
    Sub OnFocusChangeIS(ByVal punkObj As stdole.IUnknown, ByVal fSetFocus As Long)
End Interface

    
Module wdOLE

Public Enum USERCLASSTYPE
    USERCLASSTYPE_FULL = 1
    USERCLASSTYPE_SHORT = 2
    USERCLASSTYPE_APPNAME = 3
End Enum


Public Enum KeyStateMouse
	MK_LBUTTON = &H0001
	MK_RBUTTON = &H0002
	MK_SHIFT = &H0004
	MK_CONTROL = &H0008
	MK_MBUTTON = &H0010
	MK_XBUTTON1 = &H0020
    MK_ALT = &H0020
	MK_XBUTTON2 = &H0040
End Enum

Public Enum OLEMISC
	OLEMISC_RECOMPOSEONRESIZE = &H1
	OLEMISC_ONLYICONIC = &H2
	OLEMISC_INSERTNOTREPLACE = &H4
	OLEMISC_STATIC = &H8
	OLEMISC_CANTLINKINSIDE = &H10
	OLEMISC_CANLINKBYOLE1 = &H20
	OLEMISC_ISLINKOBJECT = &H40
	OLEMISC_INSIDEOUT = &H80
	OLEMISC_ACTIVATEWHENVISIBLE = &H100
	OLEMISC_RENDERINGISDEVICEINDEPENDENT = &H200
	OLEMISC_INVISIBLEATRUNTIME = &H400
	OLEMISC_ALWAYSRUN = &H800
	OLEMISC_ACTSLIKEBUTTON = &H1000
	OLEMISC_ACTSLIKELABEL = &H2000
	OLEMISC_NOUIACTIVATE = &H4000
	OLEMISC_ALIGNABLE = &H8000&
	OLEMISC_SIMPLEFRAME = &H10000
	OLEMISC_SETCLIENTSITEFIRST = &H20000
	OLEMISC_IMEMODE = &H40000
	OLEMISC_IGNOREACTIVATEWHENVISIBLE = &H80000
	OLEMISC_WANTSTOMENUMERGE = &H100000
	OLEMISC_SUPPORTSMULTILEVELUNDO = &H200000
End Enum

Public Enum QACONTAINERFLAGS
	QACONTAINER_SHOWHATCHING = &H0001
	QACONTAINER_SHOWGRABHANDLES = &H0002
	QACONTAINER_USERMODE = &H0004
	QACONTAINER_DISPLAYASDEFAULT = &H0008
	QACONTAINER_UIDEAD = &H0010
	QACONTAINER_AUTOCLIP = &H0020
	QACONTAINER_MESSAGEREFLECT = &H0040
	QACONTAINER_SUPPORTSMNEMONICS = &H0080
End Enum

Public Type QACONTAINER
	cbSize As Long
	pClientSite As IOleClientSite
	pAdviseSink As IAdviseSinkEx
	pPropertyNotifySink As IPropertyNotifySink
	pUnkEventSink As IUnknown
	dwAmbientFlags As QACONTAINERFLAGS
	colorFore As OLE_COLOR
	colorBack As OLE_COLOR
	pFont As IFont
	pUndoMgr As IOleUndoManager
	dwAppearance As Long
	lcid As Long
	hpal As LongPtr
	pBindHost As IBindHost
	pOleControlSite As IOleControlSite
	pServiceProvider As IServiceProvider
End Type

Public Type QACONTROL
	cbSize As Long
	dwMiscStatus As OLEMISC
	dwViewStatus As VIEWSTATUS
	dwEventCookie As Long
	dwPropNotifyCookie As Long
	dwPointerActivationPolicy As POINTERINACTIVE
End Type


Public Enum POINTERINACTIVE
	POINTERINACTIVE_ACTIVATEONENTRY = 1
	POINTERINACTIVE_DEACTIVATEONLEAVE = 2
	POINTERINACTIVE_ACTIVATEONDRAG = 4
End Enum

Public Enum OLEDCFLAGS
	OLEDC_NODRAW = &H01
	OLEDC_PAINTBKGND = &H02
	OLEDC_OFFSCREEN = &H04
End Enum

Public Enum ACTIVATEFLAGS
	ACTIVATE_WINDOWLESS = 1
End Enum

Public Enum UASFLAGS
	UAS_NORMAL = 0
	UAS_BLOCKED = &H1
	UAS_NOPARENTENABLE = &H2
	UAS_MASK = &H3
End Enum


Public Enum PROPPAGESTATUS
	PROPPAGESTATUS_DIRTY = &H1
	PROPPAGESTATUS_VALIDATE = &H2
	PROPPAGESTATUS_CLEAN = &H4
End Enum
Public Type PROPPAGEINFO
	cb As Long
	pszTitle As LongPtr
	size As SIZE
	pszDocString As LongPtr
	pszHelpFile As LongPtr
	dwHelpContext As Long
End Type

Public Enum DOCMISC
	DOCMISC_CANCREATEMULTIPLEVIEWS = 1
	DOCMISC_SUPPORTCOMPLEXRECTANGLES = 2
	DOCMISC_CANTOPENEDIT = 4 ' fails the IOleDocumentView::Open  method
	DOCMISC_NOFILESUPPORT = 8 '  does not support read/writing to a file
End Enum

Public Enum PRINTFLAG
	PRINTFLAG_MAYBOTHERUSER = 1
	PRINTFLAG_PROMPTUSER = 2
	PRINTFLAG_USERMAYCHANGEPRINTER = 4
	PRINTFLAG_RECOMPOSETODEVICE = 8
	PRINTFLAG_DONTACTUALLYPRINT = 16
	PRINTFLAG_FORCEPROPERTIES = 32
	PRINTFLAG_PRINTTOFILE = 64
End Enum

Public Type PAGERANGE
	nFromPage As Long
	nToPage As Long
End Type

Public Type PAGESET
	cbStruct As Long
	fOddPages As Long
	fEvenPages As Long
	cPageRange As Long
	rgPages(0 To 0) As PAGERANGE
End Type

Public Enum OLECMDF
	OLECMDF_SUPPORTED = &H00000001
	OLECMDF_ENABLED = &H00000002
	OLECMDF_LATCHED = &H00000004
	OLECMDF_NINCHED = &H00000008
	OLECMDF_INVISIBLE = &H00000010
	OLECMDF_DEFHIDEONCTXTMENU = &H00000020
End Enum

Public Type OLECMD
	cmdID As Long
	cmdf As OLECMDF
End Type

Public Enum OLECMDTEXTF
	OLECMDTEXTF_NONE = 0
	OLECMDTEXTF_NAME = 1
	OLECMDTEXTF_STATUS = 2
End Enum

Public Type OLECMDTEXT
	cmdtextf As OLECMDTEXTF
	cwActual As Long
	cwBuf As Long ' size in wide chars of the buffer for text
	rgwz(0 To 511) As Byte ' Array into which callee writes the text
End Type

Public Enum OLECMDEXECOPT
	OLECMDEXECOPT_DODEFAULT = 0
	OLECMDEXECOPT_PROMPTUSER = 1
	OLECMDEXECOPT_DONTPROMPTUSER = 2
	OLECMDEXECOPT_SHOWHELP = 3
End Enum

Public Enum OLECMDID
	OLECMDID_OPEN = 1
	OLECMDID_NEW = 2
	OLECMDID_SAVE = 3
	OLECMDID_SAVEAS = 4
	OLECMDID_SAVECOPYAS = 5
	OLECMDID_PRINT = 6
	OLECMDID_PRINTPREVIEW = 7
	OLECMDID_PAGESETUP = 8
	OLECMDID_SPELL = 9
	OLECMDID_PROPERTIES = 10
	OLECMDID_CUT = 11
	OLECMDID_COPY = 12
	OLECMDID_PASTE = 13
	OLECMDID_PASTESPECIAL = 14
	OLECMDID_UNDO = 15
	OLECMDID_REDO = 16
	OLECMDID_SELECTALL = 17
	OLECMDID_CLEARSELECTION = 18
	OLECMDID_ZOOM = 19
	OLECMDID_GETZOOMRANGE = 20
	OLECMDID_UPDATECOMMANDS = 21
	OLECMDID_REFRESH = 22
	OLECMDID_STOP = 23
	OLECMDID_HIDETOOLBARS = 24
	OLECMDID_SETPROGRESSMAX = 25
	OLECMDID_SETPROGRESSPOS = 26
	OLECMDID_SETPROGRESSTEXT = 27
	OLECMDID_SETTITLE = 28
	OLECMDID_SETDOWNLOADSTATE = 29
	OLECMDID_STOPDOWNLOAD = 30
	OLECMDID_ONTOOLBARACTIVATED = 31
	OLECMDID_FIND = 32
	OLECMDID_DELETE = 33
	OLECMDID_HTTPEQUIV = 34
	OLECMDID_HTTPEQUIV_DONE = 35
	OLECMDID_ENABLE_INTERACTION = 36
	OLECMDID_ONUNLOAD = 37
	OLECMDID_PROPERTYBAG2 = 38
	OLECMDID_PREREFRESH = 39
	OLECMDID_SHOWSCRIPTERROR = 40
	OLECMDID_SHOWMESSAGE = 41
	OLECMDID_SHOWFIND = 42
	OLECMDID_SHOWPAGESETUP = 43
	OLECMDID_SHOWPRINT = 44
	OLECMDID_CLOSE = 45
	OLECMDID_ALLOWUILESSSAVEAS = 46
	OLECMDID_DONTDOWNLOADCSS = 47
	OLECMDID_UPDATEPAGESTATUS = 48
	OLECMDID_PRINT2 = 49
	OLECMDID_PRINTPREVIEW2 = 50
	OLECMDID_SETPRINTTEMPLATE = 51
	OLECMDID_GETPRINTTEMPLATE = 52
	OLECMDID_PAGEACTIONBLOCKED = 55
	OLECMDID_PAGEACTIONUIQUERY = 56
	OLECMDID_FOCUSVIEWCONTROLS = 57
	OLECMDID_FOCUSVIEWCONTROLSQUERY = 58
	OLECMDID_SHOWPAGEACTIONMENU = 59
	OLECMDID_ADDTRAVELENTRY = 60
	OLECMDID_UPDATETRAVELENTRY = 61
	OLECMDID_UPDATEBACKFORWARDSTATE = 62
	OLECMDID_OPTICAL_ZOOM = 63
	OLECMDID_OPTICAL_GETZOOMRANGE = 64
	OLECMDID_WINDOWSTATECHANGED = 65
	OLECMDID_ACTIVEXINSTALLSCOPE = 66
	OLECMDID_UPDATETRAVELENTRY_DATARECOVERY = 67
End Enum

Public Enum OLECMDERR
	OLECMDERR_E_FIRST = &H80040100
	OLECMDERR_E_NOTSUPPORTED = &H80040100
	OLECMDERR_E_DISABLED = &H80040101
	OLECMDERR_E_NOHELP = &H80040102
	OLECMDERR_E_CANCELED = &H80040103
	OLECMDERR_E_UNKNOWNGROUP = &H80040104
End Enum

Public Enum OLEUPDATE
	OLEUPDATE_ALWAYS = 1
	OLEUPDATE_ONCALL = 3
End Enum

Public Enum OLELINKBIND
	OLELINKBIND_EVENIFCLASSDIFF = 1 ' for IOleLink::BindToSource
End Enum


Public Enum XFORMCOORDS
	XFORMCOORDS_POSITION = &H1
	XFORMCOORDS_SIZE = &H2
	XFORMCOORDS_HIMETRICTOCONTAINER = &H4
	XFORMCOORDS_CONTAINERTOHIMETRIC = &H8
	XFORMCOORDS_EVENTCOMPAT = &H10
End Enum

Public Enum KEYMODIFIERS
	KEYMOD_SHIFT = &H00000001
	KEYMOD_CONTROL = &H00000002
	KEYMOD_ALT = &H00000004
End Enum

Public Type PALETTEENTRY
	peRed As Byte
	peGreen As Byte
	peBlue As Byte
	peFlags As Byte
End Type
Public Type LOGPALETTE
	palVersion As Integer
	palNumEntries As Integer
	palPalEntry(0) As PALETTEENTRY
End Type

Public Type OLEINPLACEFRAMEINFO
	cb As Long
	fMDIApp As Long
	hwndFrame As LongPtr
	hAccel As LongPtr
	cAccelEntries As Long
End Type
Public Type OLERECT
	Left As Long
	Top As Long
	Right As Long
	Bottom As Long
End Type

Public Type OLECLSID
	Data1 As Long
	Data2 As Integer
	Data3 As Integer
	Data4(0 To 7) As Byte
End Type

Public Type OLEPOINT
    x As Long
    y As Long
End Type

Public Type CAUUID
    cElems As Long
    pElems As LongPtr
End Type

Public Type CALPOLESTR
    cElems As Long
    pElems As LongPtr
End Type
'Public Alias OLECALPOLESTR As CALPOLESTR

Public Type CADWORD
    cElems As Long
    pElems As LongPtr
End Type
'Public Alias OLECADWORD As CADWORD

Public Type CONTROLINFO
    cb As Long
    hAccel As LongPtr
    cAccel As Integer
    dwFlags As Long
End Type

Public Enum OLEGETMONIKER
        OLEGETMONIKER_ONLYIFTHERE = 1                        ' &H00000001&
        OLEGETMONIKER_FORCEASSIGN = 2                        ' &H00000002&
        OLEGETMONIKER_UNASSIGN = 3                           ' &H00000003&
        OLEGETMONIKER_TEMPFORUSER = 4                        ' &H00000004&
    End Enum

Public Enum OLEWHICHMK
        OLEWHICHMK_CONTAINER = 1                             ' &H00000001&
        OLEWHICHMK_OBJREL = 2                                ' &H00000002&
        OLEWHICHMK_OBJFULL = 3                               ' &H00000003&
    End Enum
    
    
'Public Alias OLECONTROLINFO As CONTROLINFO
'Public Alias OLEACCELMSG As MSG
End Module