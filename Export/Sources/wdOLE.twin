'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'WinDevLib - OLE
'OLE interfaces for use with InPlaceActiveObject hooking
'Note: These conform with tlb definitions 
'DEPENDENCIES: wdShellCore


[InterfaceId("00000115-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleInPlaceUIWindow Extends IOleWindow
    Sub GetBorder(ByVal lpRectBorder As LongPtr)
    Sub RequestBorderSpace(ByVal pBorderWidths As LongPtr)
    Sub SetBorderSpace(ByVal pBorderWidths As LongPtr)
    Sub SetActiveObject(ByVal pActiveObject As IOleInPlaceActiveObject, ByVal pszObjectName As LongPtr)
End Interface
[InterfaceId("00000117-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleInPlaceActiveObject Extends IUnknownUnrestricted 'Impl
    [PreserveSig]
    Function GetWindow(ByRef phWnd As LongPtr) As Long
    [PreserveSig]
    Function ContextSensitiveHelp(ByVal fEnterMode As BOOL) As Long
    [PreserveSig]
    Function TranslateAccelerator(ByVal lpMsg As LongPtr) As Long
    [PreserveSig]
    Function OnFrameWindowActivate(ByVal fActivate As BOOL) As Long
    [PreserveSig]
    Function OnDocWindowActivate(ByVal fActivate As BOOL) As Long
    [PreserveSig]
    Function ResizeBorder(ByVal prcBorder As LongPtr, ByVal pUIWindow As IOleInPlaceUIWindow, ByVal fFrameWindow As BOOL) As Long
    [PreserveSig]
    Function EnableModeless(ByVal fEnable As BOOL) As Long
End Interface
[InterfaceId("38584260-0CFB-45E7-8FBB-5D20B311F5B8")]
[OleAutomation(True)]
'[DualInterface]
Interface IOleInPlaceActiveObjectVB Extends IDispatch
    [DispId(1)] Sub TranslateAccelerator(Handled As Boolean, RetVal As Long, ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr, ByVal Shift As Long)
End Interface

[InterfaceId("0000011a-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IParseDisplayName Extends stdole.IUnknown
    Sub ParseDisplayName(ByVal pbc As IBindCtx, ByVal pszDisplayName As LongPtr, pchEaten As Long, ppmkOut As IMoniker)
End Interface

[InterfaceId("0000011b-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleContainer Extends IParseDisplayName
    [PreserveSig] Function EnumObjects(ByVal grfFlags As Long, ppenum As IEnumUnknown) As Long
    Sub LockContainer(ByVal fLock As Long)
End Interface

[InterfaceId("0000011E-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleCache Extends stdole.IUnknown
    Function Cache(ByRef pformatetc As FORMATETC, ByVal ADVF As ADVF) As Long
    Sub Uncache(ByVal dwConnection As Long)
    Function EnumCache() As IEnumSTATDATA
    Sub InitCache(ByVal pDataObject As IDataObject)
    Sub SetData(ByRef pformatetc As FORMATETC, ByRef pmedium As STGMEDIUM, ByVal fRelease As Long)
End Interface

[InterfaceId("B722BCCB-4E68-101B-A2BC-00AA00404770")]
[OleAutomation(False)]
Interface IOleCommandTarget Extends stdole.IUnknown
    Sub QueryStatus(ByRef pguidCmdGroup As Any, ByVal cCmds As Long, ByRef prgCmds As OLECMD, ByRef pCmdText As OLECMDTEXT)
    Sub Exec(ByRef pguidCmdGroup As Any, ByVal nCmdID As Long, Optional ByVal nCmdexecopt As OLECMDEXECOPT = 0, Optional ByRef pvaIn As Variant = 0, Optional ByRef pvaOut As Variant = 0)
End Interface

[InterfaceId("B196B28B-BAB4-101A-B69C-00AA00341D07")]
[OleAutomation(False)]
Interface ISpecifyPropertyPages Extends stdole.IUnknown
    Sub GetPages(ByRef pPages As CAUUID)
End Interface

[InterfaceId("0000011D-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleLink Extends stdole.IUnknown
    Sub SetUpdateOptions(ByVal dwUpdateOpt As OLEUPDATE)
    Function GetUpdateOptions() As OLEUPDATE
    Sub SetSourceMoniker(ByVal pmk As IMoniker, ByRef rclsid As UUID)
    Function GetSourceMoniker() As IMoniker
    Sub SetSourceDisplayName(ByVal pszStatusText As String)
    Function GetSourceDisplayName() As LongPtr
    Sub BindToSource(ByVal bindflags As OLELINKBIND, ByVal pbc As IBindCtx)
    [PreserveSig]
    Function BindIfRunning() As Long
    Function GetBoundSource() As stdole.IUnknown
    [PreserveSig]
    Function UnbindSource() As Long
    Sub Update(ByVal pbc As IBindCtx)
End Interface

[InterfaceId("B196B28C-BAB4-101A-B69C-00AA00341D07")]
[OleAutomation(False)]
Interface IPropertyPageSite Extends stdole.IUnknown
    Sub OnStatusChange(ByVal dwFlags As PROPPAGESTATUS)
    Sub GetLocaleID(pLocaleID As Long)
    Sub GetPageContainer(ppUnk As IUnknown)
    Sub TranslateAccelerator(pMsg As MSG)
End Interface
[InterfaceId("B196B28D-BAB4-101A-B69C-00AA00341D07")]
[OleAutomation(False)]
Interface IPropertyPage Extends stdole.IUnknown
    Sub SetPageSite(ByVal pPageSite As IPropertyPageSite)
    Sub Activate(ByVal hwndParent As LongPtr, pRect As RECT, ByVal bModal As BOOL)
    Sub Deactivate()
    Sub GetPageInfo(pPageInfo As PROPPAGEINFO)
    Sub SetObjects(ByVal cObjects As Long, ppunk As IUnknown)
End Interface
[InterfaceId("01E44665-24AC-101B-84ED-08002B2EC713")]
[OleAutomation(False)]
Interface IPropertyPage2 Extends IPropertyPage
    Sub EditProperty(ByVal dispID As Long)
End Interface

[InterfaceId("742B0E01-14E6-101B-914E-00AA00300CAB")]
[OleAutomation(False)]
Interface ISimpleFrameSite Extends stdole.IUnknown
    Sub PreMessageFilter(ByVal hwnd As LongPtr, ByVal msg As Long, ByVal wp As LongPtr, ByVal lp As LongPtr, plResult As LongPtr, pdwCookie As Long)
    Sub PostMessageFilter(ByVal hwnd As LongPtr, ByVal msg As Long, ByVal wp As LongPtr, ByVal lp As LongPtr, plResult As LongPtr, ByVal dwCookie As Long)
End Interface

[InterfaceId("0000012a-0000-0000-C000-000000000046")]
Interface IContinue Extends stdole.IUnknown
    Sub FContinue()
End Interface

[InterfaceId("390E3878-FD55-4E18-819D-4682081C0CFD")]
Interface IEnterpriseDropTarget Extends stdole.IUnknown
    Sub SetDropSourceEnterpriseId(ByVal identity As LongPtr)
    Function IsEvaluatingEdpPolicy() As BOOL
End Interface

[InterfaceId("00000111-0000-0000-C000-000000000046")]
Interface IOleAdviseHolder Extends stdole.IUnknown
    Sub Advise(ByVal pAdvise As IAdviseSink, pdwConnection As Long)
    Sub Unadvise(ByVal dwConnection As Long)
    Sub EnumAdvise(ppenumAdvise As IEnumSTATDATA)
    Sub SendOnRename(ByVal pmk As IMoniker)
    Sub SendOnSave()
    Sub SendOnClose()
End Interface

[InterfaceId("00000110-0000-0000-C000-000000000046")]
Interface IDataAdviseHolder Extends stdole.IUnknown
    Sub Advise(ByVal pDataObject As IDataObject, pFetc As FORMATETC, ByVal advf As ADVF, ByVal pAdvise As IAdviseSink, pdwConnection As Long)
    Sub Unadvise(ByVal dwConnection As Long)
    Sub EnumAdvise(ppenumAdvise As IEnumSTATDATA)
    Sub SendOnDataChange(ByVal pDataObject As IDataObject, ByVal dwReserved As Long, ByVal advf As ADVF)
End Interface


[InterfaceId("00000104-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IEnumOLEVERB Extends stdole.IUnknown
    [PreserveSig] Function Next(ByVal celt As Long, rgelt As LongPtr, pceltFetched As Long) As Long
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Sub Clone(ppEnum As IEnumOLEVERB)
End Interface


[InterfaceId("00000118-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleClientSite Extends stdole.IUnknown
    Sub SaveObject()
    Sub GetMoniker(ByVal dwAssign As OLEGETMONIKER, ByVal dwWhichMoniker As OLEWHICHMK, ppmk As IMoniker)
    Sub GetContainer(ppContainer As IOleContainer)
    Sub ShowObject()
    Sub OnShowWindow(ByVal fShow As Long)
    Sub RequestNewObjectLayout()
End Interface

[InterfaceId("00000112-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleObject Extends stdole.IUnknown
    Sub SetClientSite(ByVal pClientSite As IOleClientSite)
    Function GetClientSite() As IOleClientSite
    Sub SetHostNames(ByVal szContainerApp As LongPtr, ByVal szContainerObj As LongPtr)
    Sub Close(ByVal dwSaveOption As Long)
    Sub SetMoniker(ByVal dwWhichMoniker As OLEWHICHMK, ByVal pmk As IMoniker)
    Sub GetMoniker(ByVal dwAssign As OLEGETMONIKER, ByVal dwWhichMoniker As OLEWHICHMK, ppmk As IMoniker)
    Sub InitFromData(ByVal pDataObject As IDataObject, ByVal fCreation As Long, ByVal dwReserved As Long)
    Sub GetClipboardData(ByVal dwReserved As Long, ppDataObject As IDataObject)
    Sub DoVerb(ByVal iVerb As Long, lpmsg As MSG, ByVal pActiveSite As IOleClientSite, ByVal lindex As Long, ByVal hwndParent As LongPtr, lprcPosRect As RECT)
    [PreserveSig] Function EnumVerbs(ppEnumOleVerb As IEnumOLEVERB) As Long
    Sub Update()
    [PreserveSig] Function IsUpToDate() As Long
    Sub GetUserClassID(pClsid As UUID)
    Sub GetUserType(ByVal dwFormOfType As USERCLASSTYPE, pszUserType As LongPtr)
    Sub SetExtent(ByVal dwDrawAspect As Long, psizel As SIZE)
    Sub GetExtent(ByVal dwDrawAspect As Long, psizel As SIZE)
    Sub Advise(ByVal pAdvSink As IAdviseSink, pdwConnection As Long)
    Sub Unadvise(ByVal dwConnection As Long)
    Sub EnumAdvise(ppenumAdvise As IEnumSTATDATA)
    Sub GetMiscStatus(ByVal dwAspect As DVASPECT, pdwStatus As OLEMISC)
    Sub SetColorScheme(pLogpal As Any)
End Interface

[InterfaceId("00000116-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleInPlaceFrame Extends IOleInPlaceUIWindow
    Sub InsertMenus(ByVal hMenuShared As LongPtr, lpMenuWidths As OLEMENUGROUPWIDTHS)
    Sub SetMenu(ByVal hMenuShared As LongPtr, ByVal holeMenu As LongPtr, ByVal hwndActiveObject As LongPtr)
    Sub RemoveMenus(ByVal hMenuShared As LongPtr)
    Sub SetStatusText(ByVal pszStatusText As LongPtr)
    Sub EnableModeless(ByVal fEnable As Long)
    Sub TranslateAccelerator(lpmsg As MSG, ByVal wID As Integer)
End Interface

[InterfaceId("00000113-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleInPlaceObject Extends IOleWindow
    Sub InPlaceDeactivate()
    Sub UIDeactivate()
    Sub SetObjectRects(ByVal lprcPosRect As LongPtr, ByVal lprcClipRect As LongPtr)
    Sub ReactivateAndUndo()
End Interface

[InterfaceId("B196B288-BAB4-101A-B69C-00AA00341D07")]
[OleAutomation(False)]
Interface IOleControl Extends stdole.IUnknown
    [PreserveSig]
    Function GetControlInfo(ByRef pCI As CONTROLINFO) As Long
    [PreserveSig]
    Function OnMnemonic(ByRef pMsg As MSG) As Long
    Sub OnAmbientPropertyChange(ByVal DispID As Long)
    Sub FreezeEvents(ByVal bFreeze As Long)
End Interface
[InterfaceId("C895C8F9-6564-4123-8760-529F72AB9322")]
[OleAutomation(True)]
'[ DualInterface]
Interface IOleControlVB Extends IDispatchUnrestricted2
    [DispId(1)]
    Sub GetControlInfo(ByRef Handled As Boolean, ByRef AccelCount As Integer, ByRef AccelTable As LongPtr, ByRef Flags As Long)
    [DispId(2)]
    Sub OnMnemonic(ByRef Handled As Boolean, ByVal hWnd As LongPtr, ByVal wMsg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr, ByVal Shift As Long)
End Interface
    
    
[InterfaceId("00000119-0000-0000-C000-000000000046")]
[OleAutomation(False)]
Interface IOleInPlaceSite Extends IOleWindow
    Sub CanInPlaceActivate()
    Sub OnInPlaceActivate()
    Sub OnUIActivate()
    Sub GetWindowContext(ppFrame As IOleInPlaceFrame, ppDoc As IOleInPlaceUIWindow, ByVal lprcPosRect As LongPtr, ByVal lprcClipRect As LongPtr, ByVal lpFrameInfo As LongPtr)
    Sub Scroll(ByVal scrollExtant As LongLong)
    Sub OnUIDeactivate(ByVal fUndoable As Long)
    Sub OnInPlaceDeactivate()
    Sub DiscardUndoState()
    Sub DeactivateAndUndo()
    Sub OnPosRectChange(lprcPosRect As RECT)
End Interface

[InterfaceId("376BD3AA-3845-101B-84ED-08002B2EC713")]
[OleAutomation(False)]
Interface IPerPropertyBrowsing Extends stdole.IUnknown
    [PreserveSig]
        Function GetDisplayString(ByVal DispID As Long, ByRef pDisplayName As LongPtr) As Long
    [PreserveSig]
        Function MapPropertyToPage(ByVal DispID As Long, ByRef pCLSID As UUID) As Long
    [PreserveSig]
        Function GetPredefinedStrings(ByVal DispID As Long, ByRef pCaStringsOut As CALPOLESTR, ByRef pCaCookiesOut As CADWORD) As Long
    [PreserveSig]
        Function GetPredefinedValue(ByVal DispID As Long, ByVal dwCookie As Long, ByRef pVarOut As Variant) As Long
End Interface
[InterfaceId("D5D3BBE3-DB60-4522-AF5B-D767FE736DDB")]
[OleAutomation(True)]
'[ DualInterface]
Interface IPerPropertyBrowsingVB Extends IDispatchUnrestricted2
    [DispId(1)]
        Sub GetDisplayString(ByRef Handled As Boolean, ByVal DispID As Long, ByRef DisplayName As String)
    [DispId(2)]
        Sub GetPredefinedStrings(ByRef Handled As Boolean, ByVal DispID As Long, ByRef StringsOut As String(), ByRef CookiesOut As Long())
    [DispId(3)]
        Sub GetPredefinedValue(ByRef Handled As Boolean, ByVal DispID As Long, ByVal Cookie As Long, ByRef Value As Variant)
End Interface




[InterfaceId("B196B289-BAB4-101A-B69C-00AA00341D07")]
[OleAutomation(False)]
Interface IOleControlSite Extends stdole.IUnknown
    Sub OnControlInfoChanged()
    Sub LockInPlaceActive(ByVal fLock As Long)
    Function GetExtendedControl() As Object
    Sub TransformCoords(ByRef pPtlHimetric As POINT, ByRef pPtfContainer As POINTF, ByVal dwFlags As XFORMCOORDS)
    Sub TranslateAccelerator(ByRef pMsg As MSG, ByVal grfModifiers As KEYMODIFIERS)
    Sub OnFocus(ByVal fGotFocus As Long)
    Sub ShowPropertyFrame()
End Interface

    
[InterfaceId("1C2056CC-5EF4-101B-8BC8-00AA003E3B29")]
[OleAutomation(False)]
Interface IOleInPlaceObjectWindowless Extends IOleInPlaceObject
    Sub OnWindowMessage(ByVal msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr, plResult As LongPtr)
    Sub GetDropTarget(ppDropTarget As IDropTarget)
End Interface

[InterfaceId("9C2CAD80-3424-11CF-B670-00AA004CD6D8")]
[OleAutomation(False)]
Interface IOleInPlaceSiteEx Extends IOleInPlaceSite
    Sub OnInPlaceActivateEx(pfNoRedraw As BOOL, ByVal dwFlags As ACTIVATEFLAGS)
    Sub OnInPlaceDeactivateEx(ByVal fNoRedraw As BOOL)
    Sub RequestUIActivate()
End Interface

[InterfaceId("922EADA0-3424-11CF-B670-00AA004CD6D8")]
[OleAutomation(False)]
Interface IOleInPlaceSiteWindowless Extends IOleInPlaceSiteEx
    Sub CanWindowlessActivate()
    Sub GetCapture()
    Sub SetCapture(ByVal fCapture As BOOL)
    Sub GetFocus()
    Sub SetFocus(ByVal fFocus As BOOL)
    Sub GetDC(pRect As RECT, ByVal grfFlags As OLEDCFLAGS, phDC As LongPtr)
    Sub ReleaseDC(ByVal hDC As LongPtr)
    Sub InvalidateRect(pRect As RECT, ByVal fErase As BOOL)
    Sub ScrollRect(ByVal dx As Long, ByVal dy As Long, pRectScroll As RECT, pRectClip As RECT)
    Sub AdjustRect(prc As RECT)
    Sub OnDefWindowMessage(ByVal msg As Long, ByVal wParam As LongPtr, ByVal lParam As LongPtr, plResult As LongPtr)
End Interface

[InterfaceId("894AD3B0-EF97-11CE-9BC9-00AA00608E01")]
[OleAutomation(False)]
Interface IOleUndoUnit Extends stdole.IUnknown
    Sub Do(ByVal pUndoManager As IOleUndoManager)
    Sub GetDescription(pBstr As String)
    Sub GetUnitType(pClsid As UUID, plID As Long)
    Sub OnNextAdd()
End Interface
[InterfaceId("A1FAF330-EF97-11CE-9BC9-00AA00608E01")]
[OleAutomation(False)]
Interface IOleParentUndoUnit Extends IOleUndoUnit
    Sub Open(ByVal pPUU As IOleParentUndoUnit)
    Sub Close(ByVal pUU As IOleParentUndoUnit, ByVal fCommit As BOOL)
    Sub Add(ByVal pUU As IOleUndoUnit)
    Sub FindUnit(ByVal pUU As IOleUndoUnit)
    Sub GetParentState(pdwState As UASFLAGS)
End Interface

[InterfaceId("B3E7C340-EF97-11CE-9BC9-00AA00608E01")]
[OleAutomation(False)]
Interface IEnumOleUndoUnits Extends stdole.IUnknown
    Sub Next(ByVal cElt As Long, rgElt As IOleUndoUnit, pcEltFetched As Long)
    Sub Skip(ByVal cElt As Long)
    Sub Reset()
    Sub Clone(ppEnum As IEnumOleUndoUnits)
End Interface

[InterfaceId("D001F200-EF97-11CE-9BC9-00AA00608E01")]
[OleAutomation(False)]
Interface IOleUndoManager Extends stdole.IUnknown
    Sub Open(ByVal pPUU As IOleParentUndoUnit)
    Sub Close(ByVal pUU As IOleParentUndoUnit, ByVal fCommit As BOOL)
    Sub Add(ByVal pUU As IOleUndoUnit)
    Sub GetOpenParentState(pdwState As UASFLAGS)
    Sub DiscardFrom(ByVal pPUU As IOleParentUndoUnit)
    Sub UndoTo(ByVal pPUU As IOleParentUndoUnit)
    Sub RedoTo(ByVal pPUU As IOleParentUndoUnit)
    Sub EnumUndoable(ppEnum As IEnumOleUndoUnits)
    Sub EnumRedoable(ppEnum As IEnumOleUndoUnits)
    Sub GetLastUndoDescription(pBstr As String)
    Sub GetLastRedoDescription(pBstr As String)
    Sub Enable(ByVal fEnable As BOOL)
End Interface

[InterfaceId("55980BA0-35AA-11CF-B671-00AA004CD6D8")]
[OleAutomation(False)]
Interface IPointerInactive Extends stdole.IUnknown
    Sub GetActivationPolicy(pdwPolicy As POINTERINACTIVE)
    Sub OnInactiveMouseMove(pRectBounds As RECT, ByVal x As Long, ByVal y As Long, ByVal grfKeyState As KeyStateMouse)
    Sub OnInactiveSetCursor(pRectBounds As RECT, ByVal x As Long, ByVal y As Long, ByVal dwMouseMsg As Long, ByVal fSetAlways As BOOL)
End Interface

[InterfaceId("CF51ED10-62FE-11CF-BF86-00A0C9034836")]
[OleAutomation(False)]
Interface IQuickActivate Extends stdole.IUnknown
    Sub QuickActivate(pQaContainer As QACONTAINER, pQaControl As QACONTROL)
    Sub SetContentExtent(pSizel As SIZE)
    Sub GetContentExtent(pSizel As SIZE)
End Interface



[InterfaceId("B722BCC5-4E68-101B-A2BC-00AA00404770")]
[OleAutomation(False)]
Interface IOleDocument Extends stdole.IUnknown
    Function CreateView(ByVal pIPSite As IOleInPlaceSite, ByVal pStm As IStream, ByVal dwReserved As Long) As IOleDocumentView
    Function GetDocMiscStatus() As Long
    Sub EnumViews(ByRef ppenum As IEnumOleDocumentViews, ByRef ppView As IOleDocumentView)
End Interface

[InterfaceId("B722BCC7-4E68-101B-A2BC-00AA00404770")]
[OleAutomation(False)]
Interface IOleDocumentSite Extends stdole.IUnknown
    Sub ActivateMe(ByVal pViewToActivate As IOleDocumentView)
End Interface

[InterfaceId("B722BCC6-4E68-101B-A2BC-00AA00404770")]
[OleAutomation(False)]
Interface IOleDocumentView Extends stdole.IUnknown
    Sub SetInPlaceSite(ByVal pIPSite As IOleInPlaceSite)
    Function GetInPlaceSite() As IOleInPlaceSite
    Function GetDocument() As stdole.IUnknown
    Sub SetRect(ByRef prcView As RECT)
    Sub GetRect(ByRef prcView As RECT)
    Sub SetRectComplex(ByRef prcView As RECT, ByRef prcHScroll As RECT, ByRef prcVScroll As RECT, ByRef prcSizeBox As RECT)
    Sub Show(ByVal fShow As Long)
    Sub UIActivate(ByVal fUIActivate As Long)
    Sub Open()
    Sub CloseView(Optional ByVal dwReserved As Long = 0)
    Sub SaveViewState(ByVal pStm As IStream)
    Sub ApplyViewState(ByVal pStm As IStream)
    Function Clone(ByVal pIPSiteNew As IOleInPlaceSite) As IOleDocumentView
End Interface

[InterfaceId("B722BCC8-4E68-101B-A2BC-00AA00404770")]
[OleAutomation(False)]
Interface IEnumOleDocumentViews Extends stdole.IUnknown
    [PreserveSig]
    Function Next(ByVal cViews As Long, ByRef rgpView As IOleDocumentView, Optional ByRef pcFetched As Long = 0) As Long
    Sub Skip(ByVal cViews As Long)
    Sub Reset()
    Function Clone() As IEnumOleDocumentViews
End Interface

[InterfaceId("B722BCCA-4E68-101B-A2BC-00AA00404770")]
[OleAutomation(False)]
Interface IContinueCallback Extends stdole.IUnknown
    Sub FContinue()
    Sub FContinuePrinting(ByVal nCntPrinted As Long, ByVal nCurPage As Long, ByVal pwszPrintStatus As LongPtr)
End Interface

[InterfaceId("B722BCC9-4E68-101B-A2BC-00AA00404770")]
[OleAutomation(False)]
Interface IPrint Extends stdole.IUnknown
    Sub SetInitialPageNum(ByVal nFirstPage As Long)
    Sub GetPageInfo(ByRef pnFirstPage As Long, ByRef pcPages As Long)
    Sub Print(ByVal grfFlags As PRINTFLAG, ByRef pptd As DVTARGETDEVICE, ByRef ppPageSet As PAGESET, ByRef pstgmOptions As STGMEDIUM, ByVal pCallback As IContinueCallback, ByVal nFirstPage As Long, ByRef pcPagesPrinted As Long, ByRef pnLastPage As Long)
End Interface

    [InterfaceId("68284FAA-6A48-11D0-8C78-00C04FD918B4")]
[OleAutomation(False)]
Interface IInputObject Extends stdole.IUnknown
    [Description("Activates or deactivates the object.  lpMsg may be NULL. Returns S_OK if the activation succeeded.")]
    Sub UIActivateIO(ByVal fActivate As Long, ByRef lpmsg As MSG)
    [Description("Returns S_OK if the object has the focus, S_FALSE if not")]
    Sub HasFocusIO()
    [Description("Allow the object to process the message. Returns S_OK if the message was processed (eaten).")]
    Sub TranslateAcceleratorIO(ByRef lpmsg As MSG)
End Interface

[InterfaceId("F1DB8392-7331-11D0-8C99-00A0C92DBFE8")]
[OleAutomation(False)]
Interface IInputObjectSite Extends stdole.IUnknown
    Sub OnFocusChangeIS(ByVal punkObj As stdole.IUnknown, ByVal fSetFocus As Long)
End Interface


'[InterfaceId("UNKNOWN")]
[OleAutomation(False)]
Interface IOleUILinkContainerA Extends IUnknown
    [PreserveSig] Function GetNextLink(ByVal dwLink As Long) As Long
    Sub SetLinkUpdateOptions(ByVal dwLink As Long, ByVal dwUpdateOpt As Long)
    Sub GetLinkUpdateOptions(ByVal dwLink As Long, lpdwUpdateOpt As Long)
    Sub SetLinkSource(ByVal dwLink As Long, ByVal lpszDisplayName As LongPtr, ByVal lenFileName As Long, pchEaten As Long, ByVal fValidateSource As BOOL)
    Sub GetLinkSource(ByVal dwLink As Long, lplpszDisplayName As LongPtr, lplenFileName As Long, lplpszFullLinkType As LongPtr, lplpszShortLinkType As LongPtr, lpfSourceAvailable As BOOL, lpfIsSelected As BOOL)
    Sub OpenLinkSource(ByVal dwLink As Long)
    Sub UpdateLink(ByVal dwLink As Long, ByVal fErrorMessage As BOOL, ByVal fReserved As BOOL)
    Sub CancelLink(ByVal dwLink As Long)
End Interface
[InterfaceId("000004ff-0000-0000-c000-000000000046")]
[OleAutomation(False)]
Interface IOleUILinkContainerW Extends IUnknown
    [PreserveSig] Function GetNextLink(ByVal dwLink As Long) As Long
    Sub SetLinkUpdateOptions(ByVal dwLink As Long, ByVal dwUpdateOpt As Long)
    Sub GetLinkUpdateOptions(ByVal dwLink As Long, lpdwUpdateOpt As Long)
    Sub SetLinkSource(ByVal dwLink As Long, ByVal lpszDisplayName As LongPtr, ByVal lenFileName As Long, pchEaten As Long, ByVal fValidateSource As BOOL)
    Sub GetLinkSource(ByVal dwLink As Long, lplpszDisplayName As LongPtr, lplenFileName As Long, lplpszFullLinkType As LongPtr, lplpszShortLinkType As LongPtr, lpfSourceAvailable As BOOL, lpfIsSelected As BOOL)
    Sub OpenLinkSource(ByVal dwLink As Long)
    Sub UpdateLink(ByVal dwLink As Long, ByVal fErrorMessage As BOOL, ByVal fReserved As BOOL)
    Sub CancelLink(ByVal dwLink As Long)
End Interface
[InterfaceId("000004ff-0000-0000-c000-000000000046")]
[OleAutomation(False)]
Interface IOleUILinkContainer Extends IUnknown
    [PreserveSig] Function GetNextLink(ByVal dwLink As Long) As Long
    Sub SetLinkUpdateOptions(ByVal dwLink As Long, ByVal dwUpdateOpt As Long)
    Sub GetLinkUpdateOptions(ByVal dwLink As Long, lpdwUpdateOpt As Long)
    Sub SetLinkSource(ByVal dwLink As Long, ByVal lpszDisplayName As LongPtr, ByVal lenFileName As Long, pchEaten As Long, ByVal fValidateSource As BOOL)
    Sub GetLinkSource(ByVal dwLink As Long, lplpszDisplayName As LongPtr, lplenFileName As Long, lplpszFullLinkType As LongPtr, lplpszShortLinkType As LongPtr, lpfSourceAvailable As BOOL, lpfIsSelected As BOOL)
    Sub OpenLinkSource(ByVal dwLink As Long)
    Sub UpdateLink(ByVal dwLink As Long, ByVal fErrorMessage As BOOL, ByVal fReserved As BOOL)
    Sub CancelLink(ByVal dwLink As Long)
End Interface

'UNKNOWN GUID
Interface IOleUIObjInfoA Extends IUnknown
    Sub GetObjectInfo(ByVal dwObject As Long, lpdwObjSize As Long, lplpszLabel As LongPtr, lplpszType As LongPtr, lplpszShortType As LongPtr, lplpszLocation As LongPtr)
    Sub GetConvertInfo(ByVal dwObject As Long, lpClassID As UUID, lpwFormat As Integer, lpConvertDefaultClassID As UUID, lplpClsidExclude As LongPtr, lpcClsidExclude As Long)
    Sub ConvertObject(ByVal dwObject As Long, clsidNew As UUID)
    Sub GetViewInfo(ByVal dwObject As Long, phMetaPict As LongPtr, pdvAspect As DVASPECT, Optional pnCurrentScale As Long)
    Sub SetViewInfo(ByVal dwObject As Long, ByVal hMetaPict As LongPtr, ByVal dvAspect As DVASPECT, ByVal nCurrentScale As Long, ByVal bRelativeToOrig As BOOL)
End Interface
Interface IOleUIObjInfoW Extends IUnknown
    Sub GetObjectInfo(ByVal dwObject As Long, lpdwObjSize As Long, lplpszLabel As LongPtr, lplpszType As LongPtr, lplpszShortType As LongPtr, lplpszLocation As LongPtr)
    Sub GetConvertInfo(ByVal dwObject As Long, lpClassID As UUID, lpwFormat As Integer, lpConvertDefaultClassID As UUID, lplpClsidExclude As LongPtr, lpcClsidExclude As Long)
    Sub ConvertObject(ByVal dwObject As Long, clsidNew As UUID)
    Sub GetViewInfo(ByVal dwObject As Long, phMetaPict As LongPtr, pdvAspect As DVASPECT, Optional pnCurrentScale As Long)
    Sub SetViewInfo(ByVal dwObject As Long, ByVal hMetaPict As LongPtr, ByVal dvAspect As DVASPECT, ByVal nCurrentScale As Long, ByVal bRelativeToOrig As BOOL)
End Interface
Interface IOleUIObjInfo Extends IUnknown
    Sub GetObjectInfo(ByVal dwObject As Long, lpdwObjSize As Long, lplpszLabel As LongPtr, lplpszType As LongPtr, lplpszShortType As LongPtr, lplpszLocation As LongPtr)
    Sub GetConvertInfo(ByVal dwObject As Long, lpClassID As UUID, lpwFormat As Integer, lpConvertDefaultClassID As UUID, lplpClsidExclude As LongPtr, lpcClsidExclude As Long)
    Sub ConvertObject(ByVal dwObject As Long, clsidNew As UUID)
    Sub GetViewInfo(ByVal dwObject As Long, phMetaPict As LongPtr, pdvAspect As DVASPECT, Optional pnCurrentScale As Long)
    Sub SetViewInfo(ByVal dwObject As Long, ByVal hMetaPict As LongPtr, ByVal dvAspect As DVASPECT, ByVal nCurrentScale As Long, ByVal bRelativeToOrig As BOOL)
End Interface

Interface IOleUILinkInfoW Extends IOleUILinkContainerW
    Sub GetLastUpdate(ByVal dwLink As Long, lpLastUpdate As FILETIME)
End Interface
Interface IOleUILinkInfoA Extends IOleUILinkContainerA
    Sub GetLastUpdate(ByVal dwLink As Long, lpLastUpdate As FILETIME)
End Interface
Interface IOleUILinkInfo Extends IOleUILinkContainer
    Sub GetLastUpdate(ByVal dwLink As Long, lpLastUpdate As FILETIME)
End Interface



Module wdOLE
    
Public Enum OleObjectTypes
    OT_LINK = 1
    OT_EMBEDDED = 2
    OT_STATIC = 3
End Enum

[Description("**HEADER ONLY** otdData is a variable C-style array.")]
Public Type OLETARGETDEVICE
    otdDeviceNameOffset As Integer
    otdDriverNameOffset As Integer
    otdPortNameOffset As Integer
    otdExtDevmodeOffset As Integer
    otdExtDevmodeSize As Integer
    otdEnvironmentOffset As Integer
    otdEnvironmentSize As Integer
    otdData(0 To 0) As Byte
End Type

Public Const OF_SET  = &H0001
Public Const OF_GET  = &H0002
Public Const OF_HANDLER  = &H0004

Public Enum OLESTATUS
    OLE_OK /* 0   Function operated correctly             */

    OLE_WAIT_FOR_RELEASE /* 1   Command has been initiated, client      */
                                /*     must wait for release. keep dispatching */
                                /*     messages till OLE_RELESE in callback    */

    OLE_BUSY /* 2   Tried to execute a method while another */
                                /*     method is in progress.                  */

    OLE_ERROR_PROTECT_ONLY /* 3   Ole APIs are called in real mode        */
    OLE_ERROR_MEMORY /* 4   Could not alloc or lock memory          */
    OLE_ERROR_STREAM /* 5  (OLESTREAM) stream error                 */
    OLE_ERROR_STATIC /* 6   Non static object expected              */
    OLE_ERROR_BLANK /* 7   Critical data missing                   */
    OLE_ERROR_DRAW /* 8   Error while drawing                     */
    OLE_ERROR_METAFILE /* 9   Invalid metafile                        */
    OLE_ERROR_ABORT /* 10  Client chose to abort metafile drawing  */
    OLE_ERROR_CLIPBOARD /* 11  Failed to get/set clipboard data        */
    OLE_ERROR_FORMAT /* 12  Requested format is not available       */
    OLE_ERROR_OBJECT /* 13  Not a valid object                      */
    OLE_ERROR_OPTION /* 14  Invalid option(link update / render)    */
    OLE_ERROR_PROTOCOL /* 15  Invalid protocol                        */
    OLE_ERROR_ADDRESS /* 16  One of the pointers is invalid          */
    OLE_ERROR_NOT_EQUAL /* 17  Objects are not equal                   */
    OLE_ERROR_HANDLE /* 18  Invalid handle encountered              */
    OLE_ERROR_GENERIC /* 19  Some general error                      */
    OLE_ERROR_CLASS /* 20  Invalid class                           */
    OLE_ERROR_SYNTAX /* 21  Command syntax is invalid               */
    OLE_ERROR_DATATYPE /* 22  Data format is not supported            */
    OLE_ERROR_PALETTE /* 23  Invalid color palette                   */
    OLE_ERROR_NOT_LINK /* 24  Not a linked object                     */
    OLE_ERROR_NOT_EMPTY /* 25  Client doc contains objects.            */
    OLE_ERROR_SIZE /* 26  Incorrect buffer size passed to the api */
                                /*     that places some string in caller's     */
                                /*     buffer                                  */

    OLE_ERROR_DRIVE /* 27  Drive letter in doc name is invalid     */
    OLE_ERROR_NETWORK /* 28  Failed to establish connection to a     */
                                /*     network share on which the document     */
                                /*     is located                              */

    OLE_ERROR_NAME /* 29  Invalid name(doc name  object name)     */
                                /*     etc.. passed to the APIs                */

    OLE_ERROR_TEMPLATE /* 30  Server failed to load template          */
    OLE_ERROR_NEW /* 31  Server failed to create new doc         */
    OLE_ERROR_EDIT /* 32  Server failed to create embedded        */
                                /*     instance                                */
    OLE_ERROR_OPEN /* 33  Server failed to open document          */
                                /*     possible invalid link                   */

    OLE_ERROR_NOT_OPEN /* 34  Object is not open for editing          */
    OLE_ERROR_LAUNCH /* 35  Failed to launch server                 */
    OLE_ERROR_COMM /* 36  Failed to communicate with server       */
    OLE_ERROR_TERMINATE /* 37  Error in termination                    */
    OLE_ERROR_COMMAND /* 38  Error in execute                        */
    OLE_ERROR_SHOW /* 39  Error in show                           */
    OLE_ERROR_DOVERB /* 40  Error in sending do verb  or invalid    */
                                /*     verb                                    */
    OLE_ERROR_ADVISE_NATIVE /* 41  Item could be missing                   */
    OLE_ERROR_ADVISE_PICT /* 42  Item could be missing or server doesn't */
                                /*     this format.                            */

    OLE_ERROR_ADVISE_RENAME /* 43  Server doesn't support rename           */
    OLE_ERROR_POKE_NATIVE /* 44  Failure of poking native data to server */
    OLE_ERROR_REQUEST_NATIVE /* 45  Server failed to render native data     */
    OLE_ERROR_REQUEST_PICT /* 46  Server failed to render presentation    */
                                /*     data                                    */
    OLE_ERROR_SERVER_BLOCKED /* 47  Trying to block a blocked server or     */
                                /*     trying to revoke a blocked server       */
                                /*     or document                             */

    OLE_ERROR_REGISTRATION /* 48  Server is not registered in regestation */
                                /*     data base                               */
    OLE_ERROR_ALREADY_REGISTERED /*49  Trying to register same doc multiple    */
                                 /*    times                                   */
    OLE_ERROR_TASK /* 50  Server or client task is invalid        */
    OLE_ERROR_OUTOFDATE /* 51  Object is out of date                   */
    OLE_ERROR_CANT_UPDATE_CLIENT /* 52 Embed doc's client doesn't accept       */
                                /*     updates                                 */
    OLE_ERROR_UPDATE /* 53  erorr while trying to update            */
    OLE_ERROR_SETDATA_FORMAT /* 54  Server app doesn't understand the       */
                                /*     format given to its SetData method      */
    OLE_ERROR_STATIC_FROM_OTHER_OS /* 55 trying to load a static object created */
                                   /*    on another Operating System           */
    OLE_ERROR_FILE_VER

    /*  Following are warnings */
    OLE_WARN_DELETE_DATA = 1000 /*     Caller must delete the data when he is  */
                                /*     done with it.                           */
End Enum

Public Enum OLE_NOTIFICATION
    OLE_CHANGED  ' 0                                             */
    OLE_SAVED   ' 1                                             */
    OLE_CLOSED   ' 2                                             */
    OLE_RENAMED   ' 3                                             */
    OLE_QUERY_PAINT    ' 4  Interruptible paint support                */
    OLE_RELEASE   ' 5  Object is released(asynchronous operation  */
    OLE_QUERY_RETRY   ' 6  Query for retry when server sends busy ACK */
End Enum

Public Enum OLE_RELEASE_METHOD
    OLE_NONE /* 0  no method active                           */
    OLE_DELETE /* 1  object delete                              */
    OLE_LNKPASTE /* 2  PasteLink(auto reconnect)                  */
    OLE_EMBPASTE /* 3  paste(and update)                          */
    OLE_SHOW /* 4  Show                                       */
    OLE_RUN /* 5  Run                                        */
    OLE_ACTIVATE /* 6  Activate                                   */
    OLE_UPDATE /* 7  Update                                     */
    OLE_CLOSE /* 8  Close                                      */
    OLE_RECONNECT /* 9  Reconnect                                  */
    OLE_SETUPDATEOPTIONS /* 10 setting update options                     */
    OLE_SERVERUNLAUNCH /* 11 server is being unlaunched                 */
    OLE_LOADFROMSTREAM /* 12 LoadFromStream(auto reconnect)             */
    OLE_SETDATA /* 13 OleSetData                                 */
    OLE_REQUESTDATA /* 14 OleRequestData                             */
    OLE_OTHER /* 15 other misc async operations                */
    OLE_CREATE /* 16 create                                     */
    OLE_CREATEFROMTEMPLATE /* 17 CreatefromTemplate                         */
    OLE_CREATELINKFROMFILE /* 18 CreateLinkFromFile                         */
    OLE_COPYFROMLNK /* 19 CopyFromLink(auto reconnect)               */
    OLE_CREATEFROMFILE /* 20 CreateFromFile                             */
    OLE_CREATEINVISIBLE /* 21 CreateInvisible                            */
End Enum
   


Public Enum USERCLASSTYPE
    USERCLASSTYPE_FULL = 1
    USERCLASSTYPE_SHORT = 2
    USERCLASSTYPE_APPNAME = 3
End Enum


Public Enum KeyStateMouse
	MK_LBUTTON = &H0001
	MK_RBUTTON = &H0002
	MK_SHIFT = &H0004
	MK_CONTROL = &H0008
	MK_MBUTTON = &H0010
	MK_XBUTTON1 = &H0020
    MK_ALT = &H0020
	MK_XBUTTON2 = &H0040
End Enum

Public Enum OLEMISC
	OLEMISC_RECOMPOSEONRESIZE = &H1
	OLEMISC_ONLYICONIC = &H2
	OLEMISC_INSERTNOTREPLACE = &H4
	OLEMISC_STATIC = &H8
	OLEMISC_CANTLINKINSIDE = &H10
	OLEMISC_CANLINKBYOLE1 = &H20
	OLEMISC_ISLINKOBJECT = &H40
	OLEMISC_INSIDEOUT = &H80
	OLEMISC_ACTIVATEWHENVISIBLE = &H100
	OLEMISC_RENDERINGISDEVICEINDEPENDENT = &H200
	OLEMISC_INVISIBLEATRUNTIME = &H400
	OLEMISC_ALWAYSRUN = &H800
	OLEMISC_ACTSLIKEBUTTON = &H1000
	OLEMISC_ACTSLIKELABEL = &H2000
	OLEMISC_NOUIACTIVATE = &H4000
	OLEMISC_ALIGNABLE = &H8000&
	OLEMISC_SIMPLEFRAME = &H10000
	OLEMISC_SETCLIENTSITEFIRST = &H20000
	OLEMISC_IMEMODE = &H40000
	OLEMISC_IGNOREACTIVATEWHENVISIBLE = &H80000
	OLEMISC_WANTSTOMENUMERGE = &H100000
	OLEMISC_SUPPORTSMULTILEVELUNDO = &H200000
End Enum

Public Enum QACONTAINERFLAGS
	QACONTAINER_SHOWHATCHING = &H0001
	QACONTAINER_SHOWGRABHANDLES = &H0002
	QACONTAINER_USERMODE = &H0004
	QACONTAINER_DISPLAYASDEFAULT = &H0008
	QACONTAINER_UIDEAD = &H0010
	QACONTAINER_AUTOCLIP = &H0020
	QACONTAINER_MESSAGEREFLECT = &H0040
	QACONTAINER_SUPPORTSMNEMONICS = &H0080
End Enum

Public Type QACONTAINER
	cbSize As Long
	pClientSite As IOleClientSite
	pAdviseSink As IAdviseSinkEx
	pPropertyNotifySink As IPropertyNotifySink
	pUnkEventSink As IUnknown
	dwAmbientFlags As QACONTAINERFLAGS
	colorFore As OLE_COLOR
	colorBack As OLE_COLOR
	pFont As IFont
	pUndoMgr As IOleUndoManager
	dwAppearance As Long
	lcid As Long
	hpal As LongPtr
	pBindHost As IBindHost
	pOleControlSite As IOleControlSite
	pServiceProvider As IServiceProvider
End Type

Public Type QACONTROL
	cbSize As Long
	dwMiscStatus As OLEMISC
	dwViewStatus As VIEWSTATUS
	dwEventCookie As Long
	dwPropNotifyCookie As Long
	dwPointerActivationPolicy As POINTERINACTIVE
End Type


Public Enum POINTERINACTIVE
	POINTERINACTIVE_ACTIVATEONENTRY = 1
	POINTERINACTIVE_DEACTIVATEONLEAVE = 2
	POINTERINACTIVE_ACTIVATEONDRAG = 4
End Enum

Public Enum OLEDCFLAGS
	OLEDC_NODRAW = &H01
	OLEDC_PAINTBKGND = &H02
	OLEDC_OFFSCREEN = &H04
End Enum

Public Enum ACTIVATEFLAGS
	ACTIVATE_WINDOWLESS = 1
End Enum

Public Enum UASFLAGS
	UAS_NORMAL = 0
	UAS_BLOCKED = &H1
	UAS_NOPARENTENABLE = &H2
	UAS_MASK = &H3
End Enum


Public Enum PROPPAGESTATUS
	PROPPAGESTATUS_DIRTY = &H1
	PROPPAGESTATUS_VALIDATE = &H2
	PROPPAGESTATUS_CLEAN = &H4
End Enum
Public Type PROPPAGEINFO
	cb As Long
	pszTitle As LongPtr
	size As SIZE
	pszDocString As LongPtr
	pszHelpFile As LongPtr
	dwHelpContext As Long
End Type

Public Enum DOCMISC
	DOCMISC_CANCREATEMULTIPLEVIEWS = 1
	DOCMISC_SUPPORTCOMPLEXRECTANGLES = 2
	DOCMISC_CANTOPENEDIT = 4 ' fails the IOleDocumentView::Open  method
	DOCMISC_NOFILESUPPORT = 8 '  does not support read/writing to a file
End Enum

Public Enum PRINTFLAG
	PRINTFLAG_MAYBOTHERUSER = 1
	PRINTFLAG_PROMPTUSER = 2
	PRINTFLAG_USERMAYCHANGEPRINTER = 4
	PRINTFLAG_RECOMPOSETODEVICE = 8
	PRINTFLAG_DONTACTUALLYPRINT = 16
	PRINTFLAG_FORCEPROPERTIES = 32
	PRINTFLAG_PRINTTOFILE = 64
End Enum

Public Type PAGERANGE
	nFromPage As Long
	nToPage As Long
End Type

Public Type PAGESET
	cbStruct As Long
	fOddPages As Long
	fEvenPages As Long
	cPageRange As Long
	rgPages(0 To 0) As PAGERANGE
End Type

Public Enum OLECMDF
	OLECMDF_SUPPORTED = &H00000001
	OLECMDF_ENABLED = &H00000002
	OLECMDF_LATCHED = &H00000004
	OLECMDF_NINCHED = &H00000008
	OLECMDF_INVISIBLE = &H00000010
	OLECMDF_DEFHIDEONCTXTMENU = &H00000020
End Enum

Public Type OLECMD
	cmdID As Long
	cmdf As OLECMDF
End Type

Public Enum OLECMDTEXTF
	OLECMDTEXTF_NONE = 0
	OLECMDTEXTF_NAME = 1
	OLECMDTEXTF_STATUS = 2
End Enum

Public Type OLECMDTEXT
	cmdtextf As OLECMDTEXTF
	cwActual As Long
	cwBuf As Long ' size in wide chars of the buffer for text
	rgwz(0 To 511) As Byte ' Array into which callee writes the text
End Type

Public Enum OLECMDEXECOPT
	OLECMDEXECOPT_DODEFAULT = 0
	OLECMDEXECOPT_PROMPTUSER = 1
	OLECMDEXECOPT_DONTPROMPTUSER = 2
	OLECMDEXECOPT_SHOWHELP = 3
End Enum

Public Enum OLECMDID
	OLECMDID_OPEN = 1
	OLECMDID_NEW = 2
	OLECMDID_SAVE = 3
	OLECMDID_SAVEAS = 4
	OLECMDID_SAVECOPYAS = 5
	OLECMDID_PRINT = 6
	OLECMDID_PRINTPREVIEW = 7
	OLECMDID_PAGESETUP = 8
	OLECMDID_SPELL = 9
	OLECMDID_PROPERTIES = 10
	OLECMDID_CUT = 11
	OLECMDID_COPY = 12
	OLECMDID_PASTE = 13
	OLECMDID_PASTESPECIAL = 14
	OLECMDID_UNDO = 15
	OLECMDID_REDO = 16
	OLECMDID_SELECTALL = 17
	OLECMDID_CLEARSELECTION = 18
	OLECMDID_ZOOM = 19
	OLECMDID_GETZOOMRANGE = 20
	OLECMDID_UPDATECOMMANDS = 21
	OLECMDID_REFRESH = 22
	OLECMDID_STOP = 23
	OLECMDID_HIDETOOLBARS = 24
	OLECMDID_SETPROGRESSMAX = 25
	OLECMDID_SETPROGRESSPOS = 26
	OLECMDID_SETPROGRESSTEXT = 27
	OLECMDID_SETTITLE = 28
	OLECMDID_SETDOWNLOADSTATE = 29
	OLECMDID_STOPDOWNLOAD = 30
	OLECMDID_ONTOOLBARACTIVATED = 31
	OLECMDID_FIND = 32
	OLECMDID_DELETE = 33
	OLECMDID_HTTPEQUIV = 34
	OLECMDID_HTTPEQUIV_DONE = 35
	OLECMDID_ENABLE_INTERACTION = 36
	OLECMDID_ONUNLOAD = 37
	OLECMDID_PROPERTYBAG2 = 38
	OLECMDID_PREREFRESH = 39
	OLECMDID_SHOWSCRIPTERROR = 40
	OLECMDID_SHOWMESSAGE = 41
	OLECMDID_SHOWFIND = 42
	OLECMDID_SHOWPAGESETUP = 43
	OLECMDID_SHOWPRINT = 44
	OLECMDID_CLOSE = 45
	OLECMDID_ALLOWUILESSSAVEAS = 46
	OLECMDID_DONTDOWNLOADCSS = 47
	OLECMDID_UPDATEPAGESTATUS = 48
	OLECMDID_PRINT2 = 49
	OLECMDID_PRINTPREVIEW2 = 50
	OLECMDID_SETPRINTTEMPLATE = 51
	OLECMDID_GETPRINTTEMPLATE = 52
	OLECMDID_PAGEACTIONBLOCKED = 55
	OLECMDID_PAGEACTIONUIQUERY = 56
	OLECMDID_FOCUSVIEWCONTROLS = 57
	OLECMDID_FOCUSVIEWCONTROLSQUERY = 58
	OLECMDID_SHOWPAGEACTIONMENU = 59
	OLECMDID_ADDTRAVELENTRY = 60
	OLECMDID_UPDATETRAVELENTRY = 61
	OLECMDID_UPDATEBACKFORWARDSTATE = 62
	OLECMDID_OPTICAL_ZOOM = 63
	OLECMDID_OPTICAL_GETZOOMRANGE = 64
	OLECMDID_WINDOWSTATECHANGED = 65
	OLECMDID_ACTIVEXINSTALLSCOPE = 66
	OLECMDID_UPDATETRAVELENTRY_DATARECOVERY = 67
End Enum

Public Enum OLECMDERR
	OLECMDERR_E_FIRST = &H80040100
	OLECMDERR_E_NOTSUPPORTED = &H80040100
	OLECMDERR_E_DISABLED = &H80040101
	OLECMDERR_E_NOHELP = &H80040102
	OLECMDERR_E_CANCELED = &H80040103
	OLECMDERR_E_UNKNOWNGROUP = &H80040104
End Enum

[Description("WARNING: In C/C++, oleidl.h defines these while ole.h defines lowercase variants *with differenct values*. Those can be found in the OLEOPT_UPDATE enum with an ole_ prefix.")]
Public Enum OLEUPDATE
	OLEUPDATE_ALWAYS = 1
	OLEUPDATE_ONCALL = 3
End Enum

[Description("WARNING: In C/C++, ole.h defines these while oleidl.h defines uppercase variants *with differenct values*. Those can be found in the OLEUPDATE enum without an ole_ prefix.")]
Public Enum OLEOPT_UPDATE
    ole_oleupdate_always
    ole_oleupdate_onsave
    ' #ifdef OLE_INTERNAL
    ole_oleupdate_oncall
    ole_oleupdate_onclose
    ' #else
    ' oleupdate_oncall
End Enum

Public Enum OLELINKBIND
	OLELINKBIND_EVENIFCLASSDIFF = 1 ' for IOleLink::BindToSource
End Enum


Public Enum XFORMCOORDS
	XFORMCOORDS_POSITION = &H1
	XFORMCOORDS_SIZE = &H2
	XFORMCOORDS_HIMETRICTOCONTAINER = &H4
	XFORMCOORDS_CONTAINERTOHIMETRIC = &H8
	XFORMCOORDS_EVENTCOMPAT = &H10
End Enum

Public Enum KEYMODIFIERS
	KEYMOD_SHIFT = &H00000001
	KEYMOD_CONTROL = &H00000002
	KEYMOD_ALT = &H00000004
End Enum

Public Type PALETTEENTRY
	peRed As Byte
	peGreen As Byte
	peBlue As Byte
	peFlags As Byte
End Type
[Description("⚠️ **WARNING:** Buffered fixed array substituted for variable C style array. SAFEARRAY version also available: LOGPALETTE_sa")]
Public Type LOGPALETTE
	palVersion As Integer
	palNumEntries As Integer
	palPalEntry(255) As PALETTEENTRY
End Type
[Description("⚠️ **WARNING:** Cannot be used as-is. For receipt of data only. Copy numEntries then redim and fill.")]
Public Type LOGPALETTE_sa
    palVersion As Integer
    palNumEntries As Integer
    palPalEntry() As PALETTEENTRY
End Type

Public Type OLEINPLACEFRAMEINFO
	cb As Long
	fMDIApp As Long
	hwndFrame As LongPtr
	hAccel As LongPtr
	cAccelEntries As Long
End Type
Public Type OLERECT
	Left As Long
	Top As Long
	Right As Long
	Bottom As Long
End Type

Public Type OLECLSID
	Data1 As Long
	Data2 As Integer
	Data3 As Integer
	Data4(0 To 7) As Byte
End Type

Public Type OLEPOINT
    x As Long
    y As Long
End Type

Public Type CAUUID
    cElems As Long
    pElems As LongPtr
End Type

Public Type CALPOLESTR
    cElems As Long
    pElems As LongPtr
End Type
'Public Alias OLECALPOLESTR As CALPOLESTR

Public Type CADWORD
    cElems As Long
    pElems As LongPtr
End Type
'Public Alias OLECADWORD As CADWORD

Public Enum CTRLINFO
    CTRLINFO_EATS_RETURN = 1
    CTRLINFO_EATS_ESCAPE = 2
End Enum
Public Type CONTROLINFO
    cb As Long
    hAccel As LongPtr
    cAccel As Integer
    dwFlags As CTRLINFO
End Type

Public Enum OLEGETMONIKER
        OLEGETMONIKER_ONLYIFTHERE = 1                        ' &H00000001&
        OLEGETMONIKER_FORCEASSIGN = 2                        ' &H00000002&
        OLEGETMONIKER_UNASSIGN = 3                           ' &H00000003&
        OLEGETMONIKER_TEMPFORUSER = 4                        ' &H00000004&
    End Enum

Public Enum OLEWHICHMK
        OLEWHICHMK_CONTAINER = 1                             ' &H00000001&
        OLEWHICHMK_OBJREL = 2                                ' &H00000002&
        OLEWHICHMK_OBJFULL = 3                               ' &H00000003&
    End Enum
    
    
'Public Alias OLECONTROLINFO As CONTROLINFO
'Public Alias OLEACCELMSG As MSG

'oledlg.h

Public Const IDC_OLEUIHELP  = 99
'  Insert Object Dialog identifiers
Public Const IDC_IO_CREATENEW  = 2100
Public Const IDC_IO_CREATEFROMFILE  = 2101
Public Const IDC_IO_LINKFILE  = 2102
Public Const IDC_IO_OBJECTTYPELIST  = 2103
Public Const IDC_IO_DISPLAYASICON  = 2104
Public Const IDC_IO_CHANGEICON  = 2105
Public Const IDC_IO_FILE  = 2106
Public Const IDC_IO_FILEDISPLAY  = 2107
Public Const IDC_IO_RESULTIMAGE  = 2108
Public Const IDC_IO_RESULTTEXT  = 2109
Public Const IDC_IO_ICONDISPLAY  = 2110
Public Const IDC_IO_OBJECTTYPETEXT  = 2111  '{{NOHELP}}
Public Const IDC_IO_FILETEXT  = 2112  '{{NOHELP}}
Public Const IDC_IO_FILETYPE  = 2113
Public Const IDC_IO_INSERTCONTROL  = 2114
Public Const IDC_IO_ADDCONTROL  = 2115
Public Const IDC_IO_CONTROLTYPELIST  = 2116
'  Paste Special Dialog identifiers
Public Const IDC_PS_PASTE  = 500
Public Const IDC_PS_PASTELINK  = 501
Public Const IDC_PS_SOURCETEXT  = 502
Public Const IDC_PS_PASTELIST  = 503  '{{NOHELP}}
Public Const IDC_PS_PASTELINKLIST  = 504  '{{NOHELP}}
Public Const IDC_PS_DISPLAYLIST  = 505
Public Const IDC_PS_DISPLAYASICON  = 506
Public Const IDC_PS_ICONDISPLAY  = 507
Public Const IDC_PS_CHANGEICON  = 508
Public Const IDC_PS_RESULTIMAGE  = 509
Public Const IDC_PS_RESULTTEXT  = 510
'  Change Icon Dialog identifiers
Public Const IDC_CI_GROUP  = 120  '{{NOHELP}}
Public Const IDC_CI_CURRENT  = 121
Public Const IDC_CI_CURRENTICON  = 122
Public Const IDC_CI_DEFAULT  = 123
Public Const IDC_CI_DEFAULTICON  = 124
Public Const IDC_CI_FROMFILE  = 125
Public Const IDC_CI_FROMFILEEDIT  = 126
Public Const IDC_CI_ICONLIST  = 127
Public Const IDC_CI_LABEL  = 128  '{{NOHELP}
Public Const IDC_CI_LABELEDIT  = 129
Public Const IDC_CI_BROWSE  = 130
Public Const IDC_CI_ICONDISPLAY  = 131
'  Convert Dialog identifiers
Public Const IDC_CV_OBJECTTYPE  = 150
Public Const IDC_CV_DISPLAYASICON  = 152
Public Const IDC_CV_CHANGEICON  = 153
Public Const IDC_CV_ACTIVATELIST  = 154
Public Const IDC_CV_CONVERTTO  = 155
Public Const IDC_CV_ACTIVATEAS  = 156
Public Const IDC_CV_RESULTTEXT  = 157
Public Const IDC_CV_CONVERTLIST  = 158
Public Const IDC_CV_ICONDISPLAY  = 165
'  Edit Links Dialog identifiers
Public Const IDC_EL_CHANGESOURCE  = 201
Public Const IDC_EL_AUTOMATIC  = 202
Public Const IDC_EL_CANCELLINK  = 209
Public Const IDC_EL_UPDATENOW  = 210
Public Const IDC_EL_OPENSOURCE  = 211
Public Const IDC_EL_MANUAL  = 212
Public Const IDC_EL_LINKSOURCE  = 216
Public Const IDC_EL_LINKTYPE  = 217
Public Const IDC_EL_LINKSLISTBOX  = 206
Public Const IDC_EL_COL1  = 220  '{{NOHELP}}
Public Const IDC_EL_COL2  = 221  '{{NOHELP}}
Public Const IDC_EL_COL3  = 222  '{{NOHELP}}
'  Busy dialog identifiers
Public Const IDC_BZ_RETRY  = 600
Public Const IDC_BZ_ICON  = 601
Public Const IDC_BZ_MESSAGE1  = 602  '{{NOHELP}}
Public Const IDC_BZ_SWITCHTO  = 604
'  Update Links dialog identifiers
Public Const IDC_UL_METER  = 1029  '{{NOHELP}}
Public Const IDC_UL_STOP  = 1030  '{{NOHELP}}
Public Const IDC_UL_PERCENT  = 1031  '{{NOHELP}}
Public Const IDC_UL_PROGRESS  = 1032  '{{NOHELP}}
'  User Prompt dialog identifiers
Public Const IDC_PU_LINKS  = 900  '{{NOHELP}}
Public Const IDC_PU_TEXT  = 901  '{{NOHELP}}
Public Const IDC_PU_CONVERT  = 902  '{{NOHELP}}
Public Const IDC_PU_ICON  = 908  '{{NOHELP}}
'  General Properties identifiers
Public Const IDC_GP_OBJECTNAME  = 1009
Public Const IDC_GP_OBJECTTYPE  = 1010
Public Const IDC_GP_OBJECTSIZE  = 1011
Public Const IDC_GP_CONVERT  = 1013
Public Const IDC_GP_OBJECTICON  = 1014  '{{NOHELP}}
Public Const IDC_GP_OBJECTLOCATION  = 1022
'  View Properties identifiers
Public Const IDC_VP_PERCENT  = 1000
Public Const IDC_VP_CHANGEICON  = 1001
Public Const IDC_VP_EDITABLE  = 1002
Public Const IDC_VP_ASICON  = 1003
Public Const IDC_VP_RELATIVE  = 1005
Public Const IDC_VP_SPIN  = 1006
Public Const IDC_VP_SCALETXT  = 1034
Public Const IDC_VP_ICONDISPLAY  = 1021
Public Const IDC_VP_RESULTIMAGE  = 1033
'  Link Properties identifiers
Public Const IDC_LP_OPENSOURCE  = 1006
Public Const IDC_LP_UPDATENOW  = 1007
Public Const IDC_LP_BREAKLINK  = 1008
Public Const IDC_LP_LINKSOURCE  = 1012
Public Const IDC_LP_CHANGESOURCE  = 1015
Public Const IDC_LP_AUTOMATIC  = 1016
Public Const IDC_LP_MANUAL  = 1017
Public Const IDC_LP_DATE  = 1018
Public Const IDC_LP_TIME  = 1019
'  Dialog Identifiers as passed in Help messages to identify the source.
Public Const IDD_INSERTOBJECT  = 1000
Public Const IDD_CHANGEICON  = 1001
Public Const IDD_CONVERT  = 1002
Public Const IDD_PASTESPECIAL  = 1003
Public Const IDD_EDITLINKS  = 1004
Public Const IDD_BUSY  = 1006
Public Const IDD_UPDATELINKS  = 1007
Public Const IDD_CHANGESOURCE  = 1009
Public Const IDD_INSERTFILEBROWSE  = 1010
Public Const IDD_CHANGEICONBROWSE  = 1011
Public Const IDD_CONVERTONLY  = 1012
Public Const IDD_CHANGESOURCE4  = 1013
Public Const IDD_GNRLPROPS  = 1100
Public Const IDD_VIEWPROPS  = 1101
Public Const IDD_LINKPROPS  = 1102
Public Const IDD_CONVERT4  = 1103
Public Const IDD_CONVERTONLY4  = 1104
Public Const IDD_EDITLINKS4  = 1105
Public Const IDD_GNRLPROPS4  = 1106
Public Const IDD_LINKPROPS4  = 1107
Public Const IDD_PASTESPECIAL4  = 1108
'  The following Dialogs are message dialogs used by OleUIPromptUser API
Public Const IDD_CANNOTUPDATELINK  = 1008
Public Const IDD_LINKSOURCEUNAVAILABLE  = 1020
Public Const IDD_SERVERNOTFOUND  = 1023
Public Const IDD_OUTOFMEMORY  = 1024
Public Const IDD_SERVERNOTREGW  = 1021
Public Const IDD_LINKTYPECHANGEDW  = 1022
Public Const IDD_SERVERNOTREGA  = 1025
Public Const IDD_LINKTYPECHANGEDA  = 1026
' #ifdef UNICODE
Public Const IDD_SERVERNOTREG  = IDD_SERVERNOTREGW
Public Const IDD_LINKTYPECHANGED  = IDD_LINKTYPECHANGEDW



Public Const OLESTDDELIM As String = "\"
Public Const SZOLEUI_MSG_HELP As String = "OLEUI_MSG_HELP"
Public Const SZOLEUI_MSG_ENDDIALOG As String = "OLEUI_MSG_ENDDIALOG"
Public Const SZOLEUI_MSG_BROWSE As String = "OLEUI_MSG_BROWSE"
Public Const SZOLEUI_MSG_CHANGEICON As String = "OLEUI_MSG_CHANGEICON"
Public Const SZOLEUI_MSG_CLOSEBUSYDIALOG As String = "OLEUI_MSG_CLOSEBUSYDIALOG"
Public Const SZOLEUI_MSG_CONVERT As String = "OLEUI_MSG_CONVERT"
Public Const SZOLEUI_MSG_CHANGESOURCE As String = "OLEUI_MSG_CHANGESOURCE"
Public Const SZOLEUI_MSG_ADDCONTROL As String = "OLEUI_MSG_ADDCONTROL"
Public Const SZOLEUI_MSG_BROWSE_OFN As String = "OLEUI_MSG_BROWSE_OFN"
Public Const ID_BROWSE_CHANGEICON As Long = 1
Public Const ID_BROWSE_INSERTFILE As Long = 2
Public Const ID_BROWSE_ADDCONTROL As Long = 3
Public Const ID_BROWSE_CHANGESOURCE As Long = 4
Public Const OLEUI_FALSE  = 0
Public Const OLEUI_SUCCESS  = 1  ' No error, same as OLEUI_OK
Public Const OLEUI_OK  = 1  ' OK button pressed
Public Const OLEUI_CANCEL  = 2  ' Cancel button pressed
Public Const OLEUI_ERR_STANDARDMIN  = 100
Public Const OLEUI_ERR_OLEMEMALLOC  = 100
Public Const OLEUI_ERR_STRUCTURENULL  = 101  ' Standard field validation
Public Const OLEUI_ERR_STRUCTUREINVALID  = 102
Public Const OLEUI_ERR_CBSTRUCTINCORRECT  = 103
Public Const OLEUI_ERR_HWNDOWNERINVALID  = 104
Public Const OLEUI_ERR_LPSZCAPTIONINVALID  = 105
Public Const OLEUI_ERR_LPFNHOOKINVALID  = 106
Public Const OLEUI_ERR_HINSTANCEINVALID  = 107
Public Const OLEUI_ERR_LPSZTEMPLATEINVALID  = 108
Public Const OLEUI_ERR_HRESOURCEINVALID  = 109
Public Const OLEUI_ERR_FINDTEMPLATEFAILURE  = 110  ' Initialization errors
Public Const OLEUI_ERR_LOADTEMPLATEFAILURE  = 111
Public Const OLEUI_ERR_DIALOGFAILURE  = 112
Public Const OLEUI_ERR_LOCALMEMALLOC  = 113
Public Const OLEUI_ERR_GLOBALMEMALLOC  = 114
Public Const OLEUI_ERR_LOADSTRING  = 115
Public Const OLEUI_ERR_STANDARDMAX  = 116  ' Start here for specific errors.

    
Public Declare PtrSafe Function OleUIAddVerbMenuA Lib "OLEDLG.DLL" (ByVal lpoleobj As IOleObject, ByVal lpszShortType As String, ByVal hMenu As LongPtr, ByVal uPos As Long, ByVal uIDVerbMin As Long, ByVal uIDVerbMax As Long, ByVal bAddConvert As BOOL, ByVal idConvert As Long, ByRef lphmenu As LongPtr) As BOOL
Public Declare PtrSafe Function OleUIAddVerbMenuW Lib "OLEDLG.DLL" (ByVal lpoleobj As IOleObject, ByVal lpszShortType As LongPtr, ByVal hMenu As LongPtr, ByVal uPos As Long, ByVal uIDVerbMin As Long, ByVal uIDVerbMax As Long, ByVal bAddConvert As BOOL, ByVal idConvert As Long, ByRef lphmenu As LongPtr) As BOOL
Public DeclareWide PtrSafe Function OleUIAddVerbMenu Lib "OLEDLG.DLL" Alias "OleUIAddVerbMenuA" (ByVal lpoleobj As IOleObject, ByVal lpszShortType As String, ByVal hMenu As LongPtr, ByVal uPos As Long, ByVal uIDVerbMin As Long, ByVal uIDVerbMax As Long, ByVal bAddConvert As BOOL, ByVal idConvert As Long, ByRef lphmenu As LongPtr) As BOOL
    
Public Type OLEUIINSERTOBJECTA
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As OleInsertObjectFlags ' IN-OUT:  Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As String ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As String ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUIINSERTOBJECT.
    clsid As UUID ' OUT: Return space for class ID
    lpszFile As String ' IN-OUT: Filename for inserts or links
    cchFile As Long ' IN: Size of lpszFile buffer: MAX_PATH
    cClsidExclude As Long ' IN: CLSIDs in lpClsidExclude
    lpClsidExclude As LongPtr 'LPUUID ' IN: List of CLSIDs to exclude from listing.
    ' Specific to create objects if flags say so
    iid As UUID ' IN: Requested interface on creation.
    oleRender As Long ' IN: Rendering option
    lpFormatEtc As LongPtr 'LPFORMATETC ' IN: Desired format
    lpIOleClientSite As IOleClientSite ' IN: Site to be use for the object.
    lpIStorage As IStorage ' IN: Storage used for the object
    ppvObj As LongPtr ' OUT: Where the object is returned.
    sc As Long 'SCODE ' OUT: Result of creation calls.
    hMetaPict As LongPtr ' OUT: metafile aspect (METAFILEPICT)
End Type
Public Type OLEUIINSERTOBJECTW
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As OleInsertObjectFlags ' IN-OUT:  Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As LongPtr ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As LongPtr ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUIINSERTOBJECT.
    clsid As UUID ' OUT: Return space for class ID
    lpszFile As LongPtr ' IN-OUT: Filename for inserts or links
    cchFile As Long ' IN: Size of lpszFile buffer: MAX_PATH
    cClsidExclude As Long ' IN: CLSIDs in lpClsidExclude
    lpClsidExclude As LongPtr 'LPUUID ' IN: List of CLSIDs to exclude from listing.
    ' Specific to create objects if flags say so
    iid As UUID ' IN: Requested interface on creation.
    oleRender As Long ' IN: Rendering option
    lpFormatEtc As LongPtr 'LPFORMATETC ' IN: Desired format
    lpIOleClientSite As IOleClientSite ' IN: Site to be use for the object.
    lpIStorage As IStorage ' IN: Storage used for the object
    ppvObj As LongPtr ' OUT: Where the object is returned.
    sc As Long 'SCODE ' OUT: Result of creation calls.
    hMetaPict As LongPtr ' OUT: metafile aspect (METAFILEPICT)
End Type
'Alias OLEUIINSERTOBJECT As OLEUIINSERTOBJECTW
Public Type OLEUIINSERTOBJECT
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As OleInsertObjectFlags ' IN-OUT:  Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As LongPtr ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As LongPtr ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUIINSERTOBJECT.
    clsid As UUID ' OUT: Return space for class ID
    lpszFile As LongPtr ' IN-OUT: Filename for inserts or links
    cchFile As Long ' IN: Size of lpszFile buffer: MAX_PATH
    cClsidExclude As Long ' IN: CLSIDs in lpClsidExclude
    lpClsidExclude As LongPtr 'LPUUID ' IN: List of CLSIDs to exclude from listing.
    ' Specific to create objects if flags say so
    iid As UUID ' IN: Requested interface on creation.
    oleRender As Long ' IN: Rendering option
    lpFormatEtc As LongPtr 'LPFORMATETC ' IN: Desired format
    lpIOleClientSite As IOleClientSite ' IN: Site to be use for the object.
    lpIStorage As IStorage ' IN: Storage used for the object
    ppvObj As LongPtr ' OUT: Where the object is returned.
    sc As Long 'SCODE ' OUT: Result of creation calls.
    hMetaPict As LongPtr ' OUT: metafile aspect (METAFILEPICT)
End Type

Public Declare PtrSafe Function OleUIInsertObjectA Lib "OLEDLG.DLL" (ByRef any As OLEUIINSERTOBJECTA) As Long
Public Declare PtrSafe Function OleUIInsertObjectW Lib "OLEDLG.DLL" (ByRef any As OLEUIINSERTOBJECTW) As Long
Public DeclareWide PtrSafe Function OleUIInsertObject Lib "OLEDLG.DLL" Alias "OleUIInsertObjectW" (ByRef any As OLEUIINSERTOBJECT) As Long


Public Enum OleInsertObjectFlags
    IOF_SHOWHELP = &H00000001
    IOF_SELECTCREATENEW = &H00000002
    IOF_SELECTCREATEFROMFILE = &H00000004
    IOF_CHECKLINK = &H00000008
    IOF_CHECKDISPLAYASICON = &H00000010
    IOF_CREATENEWOBJECT = &H00000020
    IOF_CREATEFILEOBJECT = &H00000040
    IOF_CREATELINKOBJECT = &H00000080
    IOF_DISABLELINK = &H00000100
    IOF_VERIFYSERVERSEXIST = &H00000200
    IOF_DISABLEDISPLAYASICON = &H00000400
    IOF_HIDECHANGEICON = &H00000800
    IOF_SHOWINSERTCONTROL = &H00001000
    IOF_SELECTCREATECONTROL = &H00002000
End Enum

Public Const OLEUI_IOERR_LPSZFILEINVALID  = (OLEUI_ERR_STANDARDMAX + 0)
Public Const OLEUI_IOERR_LPSZLABELINVALID  = (OLEUI_ERR_STANDARDMAX + 1)
Public Const OLEUI_IOERR_HICONINVALID  = (OLEUI_ERR_STANDARDMAX + 2)
Public Const OLEUI_IOERR_LPFORMATETCINVALID  = (OLEUI_ERR_STANDARDMAX + 3)
Public Const OLEUI_IOERR_PPVOBJINVALID  = (OLEUI_ERR_STANDARDMAX + 4)
Public Const OLEUI_IOERR_LPIOLECLIENTSITEINVALID  = (OLEUI_ERR_STANDARDMAX + 5)
Public Const OLEUI_IOERR_LPISTORAGEINVALID  = (OLEUI_ERR_STANDARDMAX + 6)
Public Const OLEUI_IOERR_SCODEHASERROR  = (OLEUI_ERR_STANDARDMAX + 7)
Public Const OLEUI_IOERR_LPCLSIDEXCLUDEINVALID  = (OLEUI_ERR_STANDARDMAX + 8)
Public Const OLEUI_IOERR_CCHFILEINVALID  = (OLEUI_ERR_STANDARDMAX + 9)

Public Enum OLEUIPASTEFLAG
    OLEUIPASTE_ENABLEICON = 2048 ' enable display as icon
    OLEUIPASTE_PASTEONLY = 0
    OLEUIPASTE_PASTE = 512
    OLEUIPASTE_LINKANYTYPE = 1024
    OLEUIPASTE_LINKTYPE1 = 1
    OLEUIPASTE_LINKTYPE2 = 2
    OLEUIPASTE_LINKTYPE3 = 4
    OLEUIPASTE_LINKTYPE4 = 8
    OLEUIPASTE_LINKTYPE5 = 16
    OLEUIPASTE_LINKTYPE6 = 32
    OLEUIPASTE_LINKTYPE7 = 64
    OLEUIPASTE_LINKTYPE8 = 128
End Enum

Public Type OLEUIPASTEENTRYA
    fmtetc As FORMATETC ' Format that is acceptable.
    lpstrFormatName As String ' String that represents the format
    ' to the user. %s is replaced by the
    ' full user type name of the object.
    lpstrResultText As String ' String to customize the result text
    ' of the dialog when the user
    ' selects the format correspoding to
    ' this entry. Any %s in this string
    ' is replaced by the the application
    ' name or FullUserTypeName of the
    ' object on the clipboard.
    dwFlags As OLEUIPASTEFLAG ' Values from OLEUIPASTEFLAG enum
    dwScratchSpace As Long ' Scratch space used internally.
End Type
Public Type OLEUIPASTEENTRYW
    fmtetc As FORMATETC ' Format that is acceptable.
    lpstrFormatName As LongPtr ' String that represents the format
    ' to the user. %s is replaced by the
    ' full user type name of the object.
    lpstrResultText As LongPtr ' String to customize the result text
    ' of the dialog when the user
    ' selects the format correspoding to
    ' this entry. Any %s in this string
    ' is replaced by the the application
    ' name or FullUserTypeName of the
    ' object on the clipboard.
    dwFlags As OLEUIPASTEFLAG ' Values from OLEUIPASTEFLAG enum
    dwScratchSpace As Long ' Scratch space used internally.
End Type
'Alias OLEUIPASTEENTRY As OLEUIPASTEENTRYW
Public Type OLEUIPASTEENTRY
    fmtetc As FORMATETC ' Format that is acceptable.
    lpstrFormatName As LongPtr ' String that represents the format
    ' to the user. %s is replaced by the
    ' full user type name of the object.
    lpstrResultText As LongPtr ' String to customize the result text
    ' of the dialog when the user
    ' selects the format correspoding to
    ' this entry. Any %s in this string
    ' is replaced by the the application
    ' name or FullUserTypeName of the
    ' object on the clipboard.
    dwFlags As OLEUIPASTEFLAG ' Values from OLEUIPASTEFLAG enum
    dwScratchSpace As Long ' Scratch space used internally.
End Type

Public Const PS_MAXLINKTYPES = 8

Public Type OLEUIPASTESPECIALA
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As PASTESPECIALFLAGS ' IN-OUT:  Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As String ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As String ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUIPASTESPECIAL.
    lpSrcDataObj As IDataObject ' IN-OUT: Source IDataObject* on the clipboard
    ' If lpSrcDataObj is NULL when OleUIPasteSpecial is called, then
    ' OleUIPasteSpecial will attempt to retrieve a pointer to an
    ' IDataObject from the clipboard.  If OleUIPasteSpecial succeeds
    ' then it is the caller's responsibility to free the IDataObject
    ' returned in lpSrcDataObj.
    arrPasteEntries As LongPtr 'LPOLEUIPASTEENTRYW ' IN: Array of acceptable formats
    cPasteEntries As Long ' IN: No. of OLEUIPASTEENTRY array entries
    arrLinkTypes As LongPtr 'Long FAR ' IN: List of acceptable link types
    cLinkTypes As Long ' IN: Number of link types
    cClsidExclude As Long ' IN: Number of CLSIDs in lpClsidExclude
    lpClsidExclude As LongPtr 'LPUUID ' IN: List of CLSIDs to exclude from list.
    nSelectedIndex As Long ' OUT: Index that the user selected
    fLink As BOOL ' OUT: Indicates if Paste or PasteLink
    hMetaPict As LongPtr ' OUT: Handle to Metafile containing icon
    sizel As SIZEL ' OUT: size of object/link in its source
    '  may be 0,0 if different display
    '  aspect is chosen.
End Type
Public Type OLEUIPASTESPECIALW
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As PASTESPECIALFLAGS ' IN-OUT:  Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As LongPtr ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As LongPtr ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUIPASTESPECIAL.
    lpSrcDataObj As IDataObject ' IN-OUT: Source IDataObject* on the clipboard
    ' If lpSrcDataObj is NULL when OleUIPasteSpecial is called, then
    ' OleUIPasteSpecial will attempt to retrieve a pointer to an
    ' IDataObject from the clipboard.  If OleUIPasteSpecial succeeds
    ' then it is the caller's responsibility to free the IDataObject
    ' returned in lpSrcDataObj.
    arrPasteEntries As LongPtr 'LPOLEUIPASTEENTRYW ' IN: Array of acceptable formats
    cPasteEntries As Long ' IN: No. of OLEUIPASTEENTRY array entries
    arrLinkTypes As LongPtr 'Long FAR ' IN: List of acceptable link types
    cLinkTypes As Long ' IN: Number of link types
    cClsidExclude As Long ' IN: Number of CLSIDs in lpClsidExclude
    lpClsidExclude As LongPtr 'LPUUID ' IN: List of CLSIDs to exclude from list.
    nSelectedIndex As Long ' OUT: Index that the user selected
    fLink As BOOL ' OUT: Indicates if Paste or PasteLink
    hMetaPict As LongPtr ' OUT: Handle to Metafile containing icon
    sizel As SIZEL ' OUT: size of object/link in its source
    '  may be 0,0 if different display
    '  aspect is chosen.
End Type
'Alias OLEUIPASTESPECIAL As OLEUIPASTESPECIALW
Public Type OLEUIPASTESPECIAL
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As PASTESPECIALFLAGS ' IN-OUT:  Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As LongPtr ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As LongPtr ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUIPASTESPECIAL.
    lpSrcDataObj As IDataObject ' IN-OUT: Source IDataObject* on the clipboard
    ' If lpSrcDataObj is NULL when OleUIPasteSpecial is called, then
    ' OleUIPasteSpecial will attempt to retrieve a pointer to an
    ' IDataObject from the clipboard.  If OleUIPasteSpecial succeeds
    ' then it is the caller's responsibility to free the IDataObject
    ' returned in lpSrcDataObj.
    arrPasteEntries As LongPtr 'LPOLEUIPASTEENTRYW ' IN: Array of acceptable formats
    cPasteEntries As Long ' IN: No. of OLEUIPASTEENTRY array entries
    arrLinkTypes As LongPtr 'Long FAR ' IN: List of acceptable link types
    cLinkTypes As Long ' IN: Number of link types
    cClsidExclude As Long ' IN: Number of CLSIDs in lpClsidExclude
    lpClsidExclude As LongPtr 'LPUUID ' IN: List of CLSIDs to exclude from list.
    nSelectedIndex As Long ' OUT: Index that the user selected
    fLink As BOOL ' OUT: Indicates if Paste or PasteLink
    hMetaPict As LongPtr ' OUT: Handle to Metafile containing icon
    sizel As SIZEL ' OUT: size of object/link in its source
    '  may be 0,0 if different display
    '  aspect is chosen.
End Type

Public Declare PtrSafe Function OleUIPasteSpecialA Lib "OLEDLG.DLL" (ByRef any As OLEUIPASTESPECIALA) As Long
Public Declare PtrSafe Function OleUIPasteSpecialW Lib "OLEDLG.DLL" (ByRef any As OLEUIPASTESPECIALW) As Long
Public DeclareWide PtrSafe Function OleUIPasteSpecial Lib "OLEDLG.DLL" Alias "OleUIPasteSpecialW" (ByRef any As OLEUIPASTESPECIAL) As Long


Public Enum PASTESPECIALFLAGS
    PSF_SHOWHELP = &H00000001
    PSF_SELECTPASTE = &H00000002
    PSF_SELECTPASTELINK = &H00000004
'  NOTE: PSF_CHECKDISPLAYASICON is strictly an output flag.
'        It is ignored if set when calling OleUIPasteSpecial.
    PSF_CHECKDISPLAYASICON = &H00000008
    PSF_DISABLEDISPLAYASICON = &H00000010
    PSF_HIDECHANGEICON = &H00000020
    PSF_STAYONCLIPBOARDCHANGE = &H00000040
    PSF_NOREFRESHDATAOBJECT = &H00000080
End Enum

Public Const OLEUI_IOERR_SRCDATAOBJECTINVALID  = (OLEUI_ERR_STANDARDMAX + 0)
Public Const OLEUI_IOERR_ARRPASTEENTRIESINVALID  = (OLEUI_ERR_STANDARDMAX + 1)
Public Const OLEUI_IOERR_ARRLINKTYPESINVALID  = (OLEUI_ERR_STANDARDMAX + 2)
Public Const OLEUI_PSERR_CLIPBOARDCHANGED  = (OLEUI_ERR_STANDARDMAX + 3)
Public Const OLEUI_PSERR_GETCLIPBOARDFAILED  = (OLEUI_ERR_STANDARDMAX + 4)

Public Type OLEUIEDITLINKSA
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As EDITLINKSFLAGS ' IN-OUT: Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As String ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As String ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUIEDITLINKS.
    lpOleUILinkContainer As IOleUILinkContainerA ' IN: Interface to manipulate
    ' links in the container
End Type
Public Type OLEUIEDITLINKS
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As EDITLINKSFLAGS ' IN-OUT: Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As LongPtr ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As LongPtr ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUIEDITLINKS.
    lpOleUILinkContainer As IOleUILinkContainer  ' IN: Interface to manipulate
    ' links in the container
End Type
Public Type OLEUIEDITLINKSW
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As EDITLINKSFLAGS ' IN-OUT: Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As LongPtr ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As LongPtr ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUIEDITLINKS.
    lpOleUILinkContainer As IOleUILinkContainerW ' IN: Interface to manipulate
    ' links in the container
End Type

Public Const OLEUI_ELERR_LINKCNTRNULL  = (OLEUI_ERR_STANDARDMAX + 0)
Public Const OLEUI_ELERR_LINKCNTRINVALID  = (OLEUI_ERR_STANDARDMAX + 1)


Public Enum EDITLINKSFLAGS
    ELF_SHOWHELP = &H00000001
    ELF_DISABLEUPDATENOW = &H00000002
    ELF_DISABLEOPENSOURCE = &H00000004
    ELF_DISABLECHANGESOURCE = &H00000008
    ELF_DISABLECANCELLINK = &H00000010
End Enum


Public Declare PtrSafe Function OleUIEditLinksA Lib "OLEDLG.DLL" (ByRef any As OLEUIEDITLINKSA) As Long
Public Declare PtrSafe Function OleUIEditLinksW Lib "OLEDLG.DLL" (ByRef any As OLEUIEDITLINKSW) As Long
Public DeclareWide PtrSafe Function OleUIEditLinks Lib "OLEDLG.DLL" Alias "OleUIEditLinksW" (ByRef any As OLEUIEDITLINKS) As Long

Public Type OLEUICHANGEICONA
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As CHANGEICONFLAGS ' IN-OUT:  Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As String ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As String ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUICHANGEICON.
    hMetaPict As LongPtr ' IN-OUT: Current and final image.
    '  Source of the icon is embedded in
    '  the metafile itself.
    clsid As UUID ' IN: class used to get Default icon
    szIconExe(0 To (MAX_PATH - 1)) As Byte ' IN: explicit icon source path
    cchIconExe As Long ' IN: number of characters in szIconExe
End Type
Public Type OLEUICHANGEICONW
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As CHANGEICONFLAGS ' IN-OUT:  Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As LongPtr ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As LongPtr ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUICHANGEICON.
    hMetaPict As LongPtr ' IN-OUT: Current and final image.
    '  Source of the icon is embedded in
    '  the metafile itself.
    clsid As UUID ' IN: class used to get Default icon
    szIconExe(0 To (MAX_PATH - 1)) As Integer ' IN: explicit icon source path
    cchIconExe As Long ' IN: number of characters in szIconExe
End Type
'Alias OLEUICHANGEICON As OLEUICHANGEICONW
Public Type OLEUICHANGEICON
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As CHANGEICONFLAGS ' IN-OUT:  Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As LongPtr ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As LongPtr ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUICHANGEICON.
    hMetaPict As LongPtr ' IN-OUT: Current and final image.
    '  Source of the icon is embedded in
    '  the metafile itself.
    clsid As UUID ' IN: class used to get Default icon
    szIconExe(0 To (MAX_PATH - 1)) As Integer ' IN: explicit icon source path
    cchIconExe As Long ' IN: number of characters in szIconExe
End Type

Public Enum CHANGEICONFLAGS
    CIF_SHOWHELP = &H00000001
    CIF_SELECTCURRENT = &H00000002
    CIF_SELECTDEFAULT = &H00000004
    CIF_SELECTFROMFILE = &H00000008
    CIF_USEICONEXE = &H00000010
End Enum

Public Const OLEUI_CIERR_MUSTHAVECLSID  = (OLEUI_ERR_STANDARDMAX + 0)
Public Const OLEUI_CIERR_MUSTHAVECURRENTMETAFILE  = (OLEUI_ERR_STANDARDMAX + 1)
Public Const OLEUI_CIERR_SZICONEXEINVALID  = (OLEUI_ERR_STANDARDMAX + 2)

    
Public Declare PtrSafe Function OleUIChangeIconA Lib "OLEDLG.DLL" (ByRef any As OLEUICHANGEICONA) As Long
Public Declare PtrSafe Function OleUIChangeIconW Lib "OLEDLG.DLL" (ByRef any As OLEUICHANGEICONW) As Long
Public DeclareWide PtrSafe Function OleUIChangeIcon Lib "OLEDLG.DLL" Alias "OleUIChangeIconW" (ByRef any As OLEUICHANGEICON) As Long

Public Const PROP_HWND_CHGICONDLG = "HWND_CIDLG"

Public Type OLEUICONVERTA
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As CONVERTFLAGS ' IN-OUT:  Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As String ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As String ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUICONVERT.
    clsid As UUID ' IN: Class ID sent in to dialog: IN only
    clsidConvertDefault As UUID ' IN: use as convert default: IN only
    clsidActivateDefault As UUID ' IN: use as activate default: IN only
    clsidNew As UUID ' OUT: Selected Class ID
    dvAspect As Long ' IN-OUT: either DVASPECT_CONTENT or
    '  DVASPECT_ICON
    wFormat As Integer ' IN" Original data format
    fIsLinkedObject As BOOL ' IN: true if object is linked
    hMetaPict As LongPtr ' IN-OUT: metafile icon image
    lpszUserType As String ' IN-OUT: user type name of original class.
    '      We'll do lookup if NULL.
    '      This gets freed on exit.
    fObjectsIconChanged As BOOL ' OUT: TRUE == ChangeIcon was called
    lpszDefLabel As String 'IN-OUT: default label to use for icon.
    '  if NULL, the short user type name
    '  will be used. if the object is a
    '  link, the caller should pass the
    '  DisplayName of the link source
    '  This gets freed on exit.
    cClsidExclude As Long 'IN: No. of CLSIDs in lpClsidExclude
    lpClsidExclude As LongPtr 'LPUUID 'IN: List of CLSIDs to exclude from list
End Type

Public Type OLEUICONVERTW
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As CONVERTFLAGS ' IN-OUT:  Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As LongPtr ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As LongPtr ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUICONVERT.
    clsid As UUID ' IN: Class ID sent in to dialog: IN only
    clsidConvertDefault As UUID ' IN: use as convert default: IN only
    clsidActivateDefault As UUID ' IN: use as activate default: IN only
    clsidNew As UUID ' OUT: Selected Class ID
    dvAspect As Long ' IN-OUT: either DVASPECT_CONTENT or
    '  DVASPECT_ICON
    wFormat As Integer ' IN" Original data format
    fIsLinkedObject As BOOL ' IN: true if object is linked
    hMetaPict As LongPtr ' IN-OUT: metafile icon image
    lpszUserType As LongPtr ' IN-OUT: user type name of original class.
    '      We'll do lookup if NULL.
    '      This gets freed on exit.
    fObjectsIconChanged As BOOL ' OUT: TRUE == ChangeIcon was called
    lpszDefLabel As LongPtr 'IN-OUT: default label to use for icon.
    '  if NULL, the short user type name
    '  will be used. if the object is a
    '  link, the caller should pass the
    '  DisplayName of the link source
    '  This gets freed on exit.
    cClsidExclude As Long 'IN: No. of CLSIDs in lpClsidExclude
    lpClsidExclude As LongPtr 'LPUUID 'IN: List of CLSIDs to exclude from list
End Type
'Alias OLEUICONVERT As OLEUICONVERTW
Public Type OLEUICONVERT
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As CONVERTFLAGS ' IN-OUT:  Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As LongPtr ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As LongPtr ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUICONVERT.
    clsid As UUID ' IN: Class ID sent in to dialog: IN only
    clsidConvertDefault As UUID ' IN: use as convert default: IN only
    clsidActivateDefault As UUID ' IN: use as activate default: IN only
    clsidNew As UUID ' OUT: Selected Class ID
    dvAspect As Long ' IN-OUT: either DVASPECT_CONTENT or
    '  DVASPECT_ICON
    wFormat As Integer ' IN" Original data format
    fIsLinkedObject As BOOL ' IN: true if object is linked
    hMetaPict As LongPtr ' IN-OUT: metafile icon image
    lpszUserType As LongPtr ' IN-OUT: user type name of original class.
    '      We'll do lookup if NULL.
    '      This gets freed on exit.
    fObjectsIconChanged As BOOL ' OUT: TRUE == ChangeIcon was called
    lpszDefLabel As LongPtr 'IN-OUT: default label to use for icon.
    '  if NULL, the short user type name
    '  will be used. if the object is a
    '  link, the caller should pass the
    '  DisplayName of the link source
    '  This gets freed on exit.
    cClsidExclude As Long 'IN: No. of CLSIDs in lpClsidExclude
    lpClsidExclude As LongPtr 'LPUUID 'IN: List of CLSIDs to exclude from list
End Type

Public Enum CONVERTFLAGS
    CF_SHOWHELPBUTTON = &H00000001
    CF_SETCONVERTDEFAULT = &H00000002
    CF_SETACTIVATEDEFAULT = &H00000004
    CF_SELECTCONVERTTO = &H00000008
    CF_SELECTACTIVATEAS = &H00000010
    CF_DISABLEDISPLAYASICON = &H00000020
    CF_DISABLEACTIVATEAS = &H00000040
    CF_HIDECHANGEICON = &H00000080
    CF_CONVERTONLY = &H00000100
End Enum

Public Const OLEUI_CTERR_CLASSIDINVALID  = (OLEUI_ERR_STANDARDMAX + 1)
Public Const OLEUI_CTERR_DVASPECTINVALID  = (OLEUI_ERR_STANDARDMAX + 2)
Public Const OLEUI_CTERR_CBFORMATINVALID  = (OLEUI_ERR_STANDARDMAX + 3)
Public Const OLEUI_CTERR_HMETAPICTINVALID  = (OLEUI_ERR_STANDARDMAX + 4)
Public Const OLEUI_CTERR_STRINGINVALID  = (OLEUI_ERR_STANDARDMAX + 5)


Public Declare PtrSafe Function OleUIConvertA Lib "OLEDLG.DLL" (ByRef any As Any) As Long
Public Declare PtrSafe Function OleUIConvertW Lib "OLEDLG.DLL" (ByRef any As Any) As Long
Public Declare PtrSafe Function OleUIConvert Lib "OLEDLG.DLL" Alias "OleUIConvertW" (ByRef any As Any) As Long

Public Declare PtrSafe Function OleUICanConvertOrActivateAs Lib "OLEDLG.DLL" (rclsid As UUID, ByVal fIsLinkedObject As BOOL, ByVal wFormat As Integer) As BOOL

Public Type OLEUIBUSYA
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As BUSYFLAGS ' IN-OUT: see below
    hWndOwner As LongPtr ' Owning window
    lpszCaption As String ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As String ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUIBUSY.
    hTask As LongPtr 'HTASK ' IN: HTask which is blocking
    lphWndDialog As LongPtr  ' OUT: Dialog's HWND is placed here
End Type

Public Type OLEUIBUSYW
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As BUSYFLAGS ' IN-OUT: see below
    hWndOwner As LongPtr ' Owning window
    lpszCaption As LongPtr ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As LongPtr ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUIBUSY.
    hTask As LongPtr 'HTASK ' IN: HTask which is blocking
    lphWndDialog As LongPtr  ' OUT: Dialog's HWND is placed here
End Type
'Alias OLEUIBUSY As OLEUIBUSYW
Public Type OLEUIBUSY
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As BUSYFLAGS ' IN-OUT: see below
    hWndOwner As LongPtr ' Owning window
    lpszCaption As LongPtr ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As LongPtr ' Customized template name
    hResource As LongPtr ' Customized template handle
    ' Specifics for OLEUIBUSY.
    hTask As LongPtr 'HTASK ' IN: HTask which is blocking
    lphWndDialog As LongPtr  ' OUT: Dialog's HWND is placed here
End Type
    
Public Enum BUSYFLAGS
    BZ_DISABLECANCELBUTTON = &H00000001
    BZ_DISABLESWITCHTOBUTTON = &H00000002
    BZ_DISABLERETRYBUTTON = &H00000004
    BZ_NOTRESPONDINGDIALOG = &H00000008
End Enum

Public Const OLEUI_BZERR_HTASKINVALID  = (OLEUI_ERR_STANDARDMAX + 0)
Public Const OLEUI_BZ_SWITCHTOSELECTED  = (OLEUI_ERR_STANDARDMAX + 1)
Public Const OLEUI_BZ_RETRYSELECTED  = (OLEUI_ERR_STANDARDMAX + 2)
Public Const OLEUI_BZ_CALLUNBLOCKED  = (OLEUI_ERR_STANDARDMAX + 3)

Public Declare PtrSafe Function OleUIBusyA Lib "OLEDLG.DLL" (ByRef any As OLEUIBUSYA) As Long
Public Declare PtrSafe Function OleUIBusyW Lib "OLEDLG.DLL" (ByRef any As OLEUIBUSYW) As Long
Public DeclareWide PtrSafe Function OleUIBusy Lib "OLEDLG.DLL" Alias "OleUIBusyW" (ByRef any As OLEUIBUSY) As Long

Public Type OLEUICHANGESOURCEA
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As CHANGESOURCEFLAGS ' IN-OUT:  Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As String ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As String ' Customized template name
    hResource As LongPtr 'HRSRC ' Customized template handle
    ' INTERNAL ONLY: do not modify these members
    lpOFN As LongPtr 'OPENFILENAMEA* ' pointer OPENFILENAME struct
    dwReserved1(0 To 3) As Long ' (reserved for future use)
    ' Specifics for OLEUICHANGESOURCE.
    lpOleUILinkContainer As IOleUILinkContainerA ' IN: used to validate link sources
    dwLink As Long ' IN: magic# for lpOleUILinkContainer
    lpszDisplayName As String ' IN-OUT: complete source display name
    nFileLength As Long ' IN-OUT: file moniker part of lpszDisplayName
    lpszFrom As String ' OUT: prefix of source changed from
    lpszTo As String ' OUT: prefix of source changed to
End Type

Public Type OLEUICHANGESOURCEW
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As CHANGESOURCEFLAGS ' IN-OUT:  Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As LongPtr ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As LongPtr ' Customized template name
    hResource As LongPtr 'HRSRC ' Customized template handle
    ' INTERNAL ONLY: do not modify these members
    lpOFN As LongPtr 'OPENFILENAMEW ' pointer OPENFILENAME struct
    dwReserved1(0 To 3) As Long ' (reserved for future use)
    ' Specifics for OLEUICHANGESOURCE.
    lpOleUILinkContainer As IOleUILinkContainerW ' IN: used to validate link sources
    dwLink As Long ' IN: magic# for lpOleUILinkContainer
    lpszDisplayName As LongPtr ' IN-OUT: complete source display name
    nFileLength As Long ' IN-OUT: file moniker part of lpszDisplayName
    lpszFrom As LongPtr ' OUT: prefix of source changed from
    lpszTo As LongPtr ' OUT: prefix of source changed to
End Type
'Alias OLEUICHANGESOURCE As OLEUICHANGESOURCEW
Public Type OLEUICHANGESOURCE
    ' These IN fields are standard across all OLEUI dialog functions.
    cbStruct As Long ' Structure Size
    dwFlags As CHANGESOURCEFLAGS ' IN-OUT:  Flags
    hWndOwner As LongPtr ' Owning window
    lpszCaption As LongPtr ' Dialog caption bar contents
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    hInstance As LongPtr ' Instance for customized template name
    lpszTemplate As LongPtr ' Customized template name
    hResource As LongPtr 'HRSRC ' Customized template handle
    ' INTERNAL ONLY: do not modify these members
    lpOFN As LongPtr 'OPENFILENAME* ' pointer OPENFILENAME struct
    dwReserved1(0 To 3) As Long ' (reserved for future use)
    ' Specifics for OLEUICHANGESOURCE.
    lpOleUILinkContainer As IOleUILinkContainerW ' IN: used to validate link sources
    dwLink As Long ' IN: magic# for lpOleUILinkContainer
    lpszDisplayName As LongPtr ' IN-OUT: complete source display name
    nFileLength As Long ' IN-OUT: file moniker part of lpszDisplayName
    lpszFrom As LongPtr ' OUT: prefix of source changed from
    lpszTo As LongPtr ' OUT: prefix of source changed to
End Type

Public Enum CHANGESOURCEFLAGS
    CSF_SHOWHELP = &H00000001  ' IN: enable/show help button
    CSF_VALIDSOURCE = &H00000002  ' OUT: link was validated
    CSF_ONLYGETSOURCE = &H00000004  ' IN: disables validation of source
    CSF_EXPLORER = &H0000000
End Enum
    
Public Const OLEUI_CSERR_LINKCNTRNULL  = (OLEUI_ERR_STANDARDMAX + 0)
Public Const OLEUI_CSERR_LINKCNTRINVALID  = (OLEUI_ERR_STANDARDMAX + 1)
Public Const OLEUI_CSERR_FROMNOTNULL  = (OLEUI_ERR_STANDARDMAX + 2)
Public Const OLEUI_CSERR_TONOTNULL  = (OLEUI_ERR_STANDARDMAX + 3)
Public Const OLEUI_CSERR_SOURCENULL  = (OLEUI_ERR_STANDARDMAX + 4)
Public Const OLEUI_CSERR_SOURCEINVALID  = (OLEUI_ERR_STANDARDMAX + 5)
Public Const OLEUI_CSERR_SOURCEPARSERROR  = (OLEUI_ERR_STANDARDMAX + 6)
Public Const OLEUI_CSERR_SOURCEPARSEERROR  = (OLEUI_ERR_STANDARDMAX + 6)

Public Declare PtrSafe Function OleUIChangeSourceA Lib "OLEDLG.DLL" (ByRef any As OLEUICHANGESOURCEA) As Long
Public Declare PtrSafe Function OleUIChangeSourceW Lib "OLEDLG.DLL" (ByRef any As OLEUICHANGESOURCEW) As Long
Public DeclareWide PtrSafe Function OleUIChangeSource Lib "OLEDLG.DLL" Alias "OleUIChangeSourceW" (ByRef any As OLEUICHANGESOURCE) As Long


Public Type OLEUIGNRLPROPSA
    ' These IN fields are standard across all OLEUI property pages.
    cbStruct As Long ' Structure Size
    dwFlags As Long ' IN-OUT: flags specific to general page
    dwReserved1(0 To 1) As Long
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    dwReserved2(0 To 2) As Long
    lpOP As LongPtr 'struct tagOLEUIOBJECTPROPSW ' (used internally)
End Type
Public Type OLEUIGNRLPROPSW
    ' These IN fields are standard across all OLEUI property pages.
    cbStruct As Long ' Structure Size
    dwFlags As Long ' IN-OUT: flags specific to general page
    dwReserved1(0 To 1) As Long
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    dwReserved2(0 To 2) As Long
    lpOP As LongPtr 'struct tagOLEUIOBJECTPROPSW ' (used internally)
End Type
'Alias OLEUIGNRLPROPS As OLEUIGNRLPROPSW
Public Type OLEUIGNRLPROPS
    ' These IN fields are standard across all OLEUI property pages.
    cbStruct As Long ' Structure Size
    dwFlags As Long ' IN-OUT: flags specific to general page
    dwReserved1(0 To 1) As Long
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback
    lCustData As LongPtr ' Custom data to pass to hook
    dwReserved2(0 To 2) As Long
    lpOP As LongPtr 'struct tagOLEUIOBJECTPROPSW ' (used internally)
End Type

Public Enum OleViewPropsFlags
    VPF_SELECTRELATIVE = &H00000001   ' IN: relative to orig
    VPF_DISABLERELATIVE = &H00000002   ' IN: disable relative to orig
    VPF_DISABLESCALE = &H00000004
End Enum

Public Type OLEUIVIEWPROPSA
    ' These IN fields are standard across all OLEUI property pages.
    cbStruct As Long ' Structure Size
    dwFlags As OleViewPropsFlags ' IN-OUT: flags specific to view page
    dwReserved1(0 To 1) As Long
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback (not used in this dialog)
    lCustData As LongPtr ' Custom data to pass to hook
    dwReserved2(0 To 2) As Long
    lpOP As LongPtr 'struct tagOLEUIOBJECTPROPSA ' (used internally)
    nScaleMin As Long ' scale range
    nScaleMax As Long
End Type
Public Type OLEUIVIEWPROPSW
    ' These IN fields are standard across all OLEUI property pages.
    cbStruct As Long ' Structure Size
    dwFlags As OleViewPropsFlags ' IN-OUT: flags specific to view page
    dwReserved1(0 To 1) As Long
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback (not used in this dialog)
    lCustData As LongPtr ' Custom data to pass to hook
    dwReserved2(0 To 2) As Long
    lpOP As LongPtr 'struct tagOLEUIOBJECTPROPSW ' (used internally)
    nScaleMin As Long ' scale range
    nScaleMax As Long
End Type
'Alias OLEUIVIEWPROPS As OLEUIVIEWPROPSW
Public Type OLEUIVIEWPROPS
    ' These IN fields are standard across all OLEUI property pages.
    cbStruct As Long ' Structure Size
    dwFlags As OleViewPropsFlags ' IN-OUT: flags specific to view page
    dwReserved1(0 To 1) As Long
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback (not used in this dialog)
    lCustData As LongPtr ' Custom data to pass to hook
    dwReserved2(0 To 2) As Long
    lpOP As LongPtr 'struct tagOLEUIOBJECTPROPS  ' (used internally)
    nScaleMin As Long ' scale range
    nScaleMax As Long
End Type

Public Type OLEUILINKPROPSA
    ' These IN fields are standard across all OLEUI property pages.
    cbStruct As Long ' Structure Size
    dwFlags As Long ' IN-OUT: flags specific to links page
    dwReserved1(0 To 1) As Long
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback (not used in this dialog)
    lCustData As LongPtr ' Custom data to pass to hook
    dwReserved2(0 To 2) As Long
    lpOP As LongPtr 'struct tagOLEUIOBJECTPROPSW ' (used internally)
End Type
Public Type OLEUILINKPROPSW
    ' These IN fields are standard across all OLEUI property pages.
    cbStruct As Long ' Structure Size
    dwFlags As Long ' IN-OUT: flags specific to links page
    dwReserved1(0 To 1) As Long
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback (not used in this dialog)
    lCustData As LongPtr ' Custom data to pass to hook
    dwReserved2(0 To 2) As Long
    lpOP As LongPtr 'struct tagOLEUIOBJECTPROPSW ' (used internally)
End Type
'Alias OLEUILINKPROPS As OLEUILINKPROPSW
Public Type OLEUILINKPROPS
    ' These IN fields are standard across all OLEUI property pages.
    cbStruct As Long ' Structure Size
    dwFlags As Long ' IN-OUT: flags specific to links page
    dwReserved1(0 To 1) As Long
    lpfnHook As LongPtr 'LPFNOLEUIHOOK ' Hook callback (not used in this dialog)
    lCustData As LongPtr ' Custom data to pass to hook
    dwReserved2(0 To 2) As Long
    lpOP As LongPtr 'struct tagOLEUIOBJECTPROPSW ' (used internally)
End Type

Public Enum OleObjectPropsFlags
    OPF_OBJECTISLINK = &H00000001
    OPF_NOFILLDEFAULT = &H00000002
    OPF_SHOWHELP = &H00000004
    OPF_DISABLECONVERT = &H00000008
End Enum
Public Type OLEUIOBJECTPROPSA
    ' These IN fields are standard across all OLEUI property sheets.
    cbStruct As Long ' Structure Size
    dwFlags As OleObjectPropsFlags ' IN-OUT: global flags for the sheet
    ' Standard PROPSHEETHEADER used for extensibility
    lpPS As LongPtr 'LPPROPSHEETHEADERA ' IN: property sheet header
    ' Data which allows manipulation of the object
    dwObject As Long ' IN: identifier for the object
    lpObjInfo As IOleUIObjInfoA ' IN: interface to manipulate object
    ' Data which allows manipulation of the link
    dwLink As Long ' IN: identifier for the link
    lpLinkInfo As IOleUILinkInfoA ' IN: interface to manipulate link
    ' Data specfic to each page
    lpGP As LongPtr 'LPOLEUIGNRLPROPSA ' IN: general page
    lpVP As LongPtr 'LPOLEUIVIEWPROPSA ' IN: view page
    lpLP As LongPtr 'LPOLEUILINKPROPSA ' IN: link page
End Type
Public Type OLEUIOBJECTPROPSW
    ' These IN fields are standard across all OLEUI property sheets.
    cbStruct As Long ' Structure Size
    dwFlags As OleObjectPropsFlags ' IN-OUT: global flags for the sheet
    ' Standard PROPSHEETHEADER used for extensibility
    lpPS As LongPtr 'LPPROPSHEETHEADERW ' IN: property sheet header
    ' Data which allows manipulation of the object
    dwObject As Long ' IN: identifier for the object
    lpObjInfo As IOleUIObjInfoW ' IN: interface to manipulate object
    ' Data which allows manipulation of the link
    dwLink As Long ' IN: identifier for the link
    lpLinkInfo As IOleUILinkInfoW ' IN: interface to manipulate link
    ' Data specfic to each page
    lpGP As LongPtr 'LPOLEUIGNRLPROPSW ' IN: general page
    lpVP As LongPtr 'LPOLEUIVIEWPROPSW ' IN: view page
    lpLP As LongPtr 'LPOLEUILINKPROPSW ' IN: link page
End Type
Public Type OLEUIOBJECTPROPS
    ' These IN fields are standard across all OLEUI property sheets.
    cbStruct As Long ' Structure Size
    dwFlags As OleObjectPropsFlags ' IN-OUT: global flags for the sheet
    ' Standard PROPSHEETHEADER used for extensibility
    lpPS As LongPtr 'LPPROPSHEETHEADER  the object
    dwObject As Long ' IN: identifier for the object
    lpObjInfo As IOleUIObjInfo  ' IN: interface to manipulate object
    ' Data which allows manipulation of the link
    dwLink As Long ' IN: identifier for the link
    lpLinkInfo As IOleUILinkInfo  ' IN: interface to manipulate link
    ' Data specfic to each page
    lpGP As LongPtr 'LPOLEUIGNRLPROPS ' IN: general page
    lpVP As LongPtr 'LPOLEUIVIEWPROPS  ' IN: view page
    lpLP As LongPtr 'LPOLEUILINKPROPS  ' IN: link page
End Type

Public Const OLEUI_OPERR_SUBPROPNULL  = (OLEUI_ERR_STANDARDMAX + 0)
Public Const OLEUI_OPERR_SUBPROPINVALID  = (OLEUI_ERR_STANDARDMAX + 1)
Public Const OLEUI_OPERR_PROPSHEETNULL  = (OLEUI_ERR_STANDARDMAX + 2)
Public Const OLEUI_OPERR_PROPSHEETINVALID  = (OLEUI_ERR_STANDARDMAX + 3)
Public Const OLEUI_OPERR_SUPPROP  = (OLEUI_ERR_STANDARDMAX + 4)
Public Const OLEUI_OPERR_PROPSINVALID  = (OLEUI_ERR_STANDARDMAX + 5)
Public Const OLEUI_OPERR_PAGESINCORRECT  = (OLEUI_ERR_STANDARDMAX + 6)
Public Const OLEUI_OPERR_INVALIDPAGES  = (OLEUI_ERR_STANDARDMAX + 7)
Public Const OLEUI_OPERR_NOTSUPPORTED  = (OLEUI_ERR_STANDARDMAX + 8)
Public Const OLEUI_OPERR_DLGPROCNOTNULL  = (OLEUI_ERR_STANDARDMAX + 9)
Public Const OLEUI_OPERR_LPARAMNOTZERO  = (OLEUI_ERR_STANDARDMAX + 10)
Public Const OLEUI_GPERR_STRINGINVALID  = (OLEUI_ERR_STANDARDMAX + 11)
Public Const OLEUI_GPERR_CLASSIDINVALID  = (OLEUI_ERR_STANDARDMAX + 12)
Public Const OLEUI_GPERR_LPCLSIDEXCLUDEINVALID  = (OLEUI_ERR_STANDARDMAX + 13)
Public Const OLEUI_GPERR_CBFORMATINVALID  = (OLEUI_ERR_STANDARDMAX + 14)
Public Const OLEUI_VPERR_METAPICTINVALID  = (OLEUI_ERR_STANDARDMAX + 15)
Public Const OLEUI_VPERR_DVASPECTINVALID  = (OLEUI_ERR_STANDARDMAX + 16)
Public Const OLEUI_LPERR_LINKCNTRNULL  = (OLEUI_ERR_STANDARDMAX + 17)
Public Const OLEUI_LPERR_LINKCNTRINVALID  = (OLEUI_ERR_STANDARDMAX + 18)
Public Const OLEUI_OPERR_PROPERTYSHEET  = (OLEUI_ERR_STANDARDMAX + 19)
Public Const OLEUI_OPERR_OBJINFOINVALID  = (OLEUI_ERR_STANDARDMAX + 20)
Public Const OLEUI_OPERR_LINKINFOINVALID  = (OLEUI_ERR_STANDARDMAX + 21)
'  wParam used by PSM_QUERYSIBLINGS
Public Const OLEUI_QUERY_GETCLASSID  = &HFF00  ' override class id for icon
Public Const OLEUI_QUERY_LINKBROKEN  = &HFF01  ' after link broken

Public Declare PtrSafe Function OleUIObjectPropertiesA Lib "OLEDLG.DLL" (arg As OLEUIOBJECTPROPSA) As Long
Public Declare PtrSafe Function OleUIObjectPropertiesW Lib "OLEDLG.DLL" (arg As OLEUIOBJECTPROPSW) As Long
Public DeclareWide PtrSafe Function OleUIObjectProperties Lib "OLEDLG.DLL" Alias "OleUIObjectPropertiesW" (arg As OLEUIOBJECTPROPS) As Long
 
Public Declare PtrSafe Function OleUIPromptUserA CDecl Lib "OLEDLG.DLL" (ByVal nTemplate As Long, ByVal hwndParent As LongPtr, ByVal ParamArray args As Any()) As BOOL
Public Declare PtrSafe Function OleUIPromptUserW CDecl Lib "OLEDLG.DLL" (ByVal nTemplate As Long, ByVal hwndParent As LongPtr, ByVal ParamArray args As Any()) As BOOL
Public DeclareWide PtrSafe Function OleUIPromptUser CDecl Lib "OLEDLG.DLL" Alias "OleUIPromptUserW" (ByVal nTemplate As Long, ByVal hwndParent As LongPtr, ByVal ParamArray args As Any()) As BOOL

Public Declare PtrSafe Function OleUIUpdateLinksA Lib "OLEDLG.DLL" (ByVal lpOleUILinkCntr As IOleUILinkContainerA, ByVal hwndParent As LongPtr, ByVal lpszTitle As String, ByVal cLinks As Long) As BOOL
Public Declare PtrSafe Function OleUIUpdateLinksW Lib "OLEDLG.DLL" (ByVal lpOleUILinkCntr As IOleUILinkContainerW, ByVal hwndParent As Long, ByVal lpszTitle As LongPtr, ByVal cLinks As Long) As BOOL
Public DeclareWide PtrSafe Function OleUIUpdateLinks Lib "OLEDLG.DLL" Alias "OleUIUpdateLinksW" (ByVal lpOleUILinkCntr As IOleUILinkContainer, ByVal hwndParent As LongPtr, ByVal lpszTitle As String, ByVal cLinks As Long) As BOOL

Public Type OBJECTDESCRIPTOR
    cbSize As Long ' Size of structure in bytes
    clsid As UUID ' CLSID of data being transferred
    dwDrawAspect As DVASPECT ' Display aspect of the object
    '     normally DVASPECT_CONTENT or ICON.
    '     dwDrawAspect will be 0 (which is NOT
    '     DVASPECT_CONTENT) if the copier or
    '     dragsource didn't draw the object to
    '     begin with.
    sizel As SIZE ' size of the object in HIMETRIC
    '    sizel is opt.: will be (0,0) for apps
    '    which don't draw the object being
    '    transferred
    pointl As POINT ' Offset in HIMETRIC units from the
    '    upper-left corner of the obj where the
    '    mouse went down for the drag.
    '    NOTE: y coordinates increase downward.
    '          x coordinates increase to right
    '    pointl is opt.; it is only meaningful
    '    if object is transfered via drag/drop.
    '    (0, 0) if mouse position is unspecified
    '    (eg. when obj transfered via clipboard)
    dwStatus As OLEMISC ' Misc. status flags for object. Flags are
    '    defined by OLEMISC enum. these flags
    '    are as would be returned
    '    by IOleObject::GetMiscStatus.
    dwFullUserTypeName As Long ' Offset from beginning of structure to
    '    null-terminated string that specifies
    '    Full User Type Name of the object.
    '    0 indicates string not present.
    dwSrcOfCopy As Long ' Offset from beginning of structure to
    '    null-terminated string that specifies
    '    source of the transfer.
    '    dwSrcOfCOpy is normally implemented as
    '    the display name of the temp-for-user
    '    moniker which identifies the source of
    '    the data.
    '    0 indicates string not present.
    '    NOTE: moniker assignment is NOT forced.
    '    see IOleObject::GetMoniker(
    '                OLEGETMONIKER_TEMPFORUSER)
End Type

Public Enum OLEVERBS
    OLEIVERB_PRIMARY = 0
    OLEIVERB_SHOW = -1
    OLEIVERB_OPEN = -2
    OLEIVERB_HIDE = -3
    OLEIVERB_UIACTIVATE = -4
    OLEIVERB_INPLACEACTIVATE = -5
    OLEIVERB_DISCARDUNDOSTATE = -6
    OLEIVERB_PROPERTIES = -7
End Enum

End Module