'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'WinDevLib - wdShellObj :: Shell32 Objects

'Contains shell32/shdocvw shell automation interfaces
[InterfaceId("EAB22AC1-30C1-11CF-A7EB-0000C05BAE0B")]
'[ DualInterface ]
[OleAutomation(True)]
Interface IWebBrowser Extends stdole.IDispatch
    Sub GoBack()
    Sub GoForward()
    Sub GoHome()
    Sub GoSearch()
    Sub Navigate(ByVal url As String, Optional flags As Variant, Optional TargetFrameName As Variant, Optional PostData As Variant, Optional Headers As Variant)
    Sub Refresh()
    Sub Refresh2(Optional level As Variant)
    Sub Stop()
    Function Application() As IDispatch
    Function Parent() As IDispatch
    Function Container() As IDispatch
    Function Document() As IDispatch
    Function TopLevelContainer() As Boolean
    Function Type() As String
    Property Get Left() As Long
    Property Let Left(ByVal Left As Long)
    Property Get Top() As Long
    Property Let Top(ByVal Top As Long)
    Property Get Width() As Long
    Property Let Width(ByVal Width As Long)
    Property Get Height() As Long
    Property Let Height(ByVal Height As Long)
    Function LocationName() As String
    Function LocationURL() As String
    Function Busy() As Boolean
End Interface
 [InterfaceId("D30C1661-CDAF-11D0-8A3E-00C04FC9E26E")]
 '[ DualInterface, COMExtensible]
 [Description("Web Browser Interface for IE4")]
 [OleAutomation(True)]
 Interface IWebBrowser2 Extends IWebBrowserApp
    [DispId(500)]
    [Description("Navigates to a URL or file or pidl.")]
    Sub Navigate2(ByRef URL As Variant, Optional ByRef flags As Variant, Optional ByRef TargetFrameName As Variant, Optional ByRef PostData As Variant, Optional ByRef Headers As Variant)
    [DispId(501)]
    [Description("IOleCommandTarget::QueryStatus")]
    Function QueryStatusWB(ByVal cmdID As OLECMDID) As OLECMDF
    [DispId(502)]
    [Description("IOleCommandTarget::Exec")]
    Sub ExecWB(ByVal cmdID As OLECMDID, ByVal cmdexecopt As OLECMDEXECOPT, Optional ByRef pvaIn As Variant, Optional ByRef pvaOut As Variant)
    [DispId(503)]
    [Description("Set BrowserBar to Clsid")]
    Sub ShowBrowserBar(ByRef pvaClsid As Variant, Optional ByRef pvarShow As Variant, Optional ByRef pvarSize As Variant)
    [DispId(-525)]
    Property Get READYSTATE() As READYSTATE
    [DispId(550)]
    [Description("Controls if the frame is offline (read from cache)")]
    Property Get Offline() As Boolean
    [DispId(550)]
    [Description("Controls if the frame is offline (read from cache)")]
    Property Let Offline(ByVal pbOffline As Boolean)
    [DispId(551)]
    [Description("Controls if any dialog boxes can be shown")]
    Property Get Silent() As Boolean
    [DispId(551)]
    [Description("Controls if any dialog boxes can be shown")]
    Property Let Silent(ByVal pbSilent As Boolean)
    [DispId(552)]
    [Description("Registers OC as a top-level browser (for target name resolution)")]
    Property Get RegisterAsBrowser() As Boolean
    [DispId(552)]
    [Description("Registers OC as a top-level browser (for target name resolution)")]
    Property Let RegisterAsBrowser(ByVal pbRegister As Boolean)
    [DispId(553)]
    [Description("Registers OC as a drop target for navigation")]
    Property Get RegisterAsDropTarget() As Boolean
    [DispId(553)]
    [Description("Registers OC as a drop target for navigation")]
    Property Let RegisterAsDropTarget(ByVal pbRegister As Boolean)
    [DispId(554)]
    [Description("Controls if the browser is in theater mode")]
    Property Get TheaterMode() As Boolean
    [DispId(554)]
    [Description("Controls if the browser is in theater mode")]
    Property Let TheaterMode(ByVal pbRegister As Boolean)
    [DispId(555)]
    [Description("Controls whether address bar is shown")]
    Property Get AddressBar() As Boolean
    [DispId(555)]
    [Description("Controls whether address bar is shown")]
    Property Let AddressBar(ByVal Value As Boolean)
    [DispId(556)]
    [Description("Controls whether the window is resizable")]
    Property Get Resizable() As Boolean
    [DispId(556)]
    [Description("Controls whether the window is resizable")]
    Property Let Resizable(ByVal Value As Boolean)
 End Interface
[InterfaceId("0002DF05-0000-0000-C000-000000000046")]
'[ DualInterface ]
[OleAutomation(True)]
Interface IWebBrowserApp Extends IWebBrowser
    Sub Quit()
    Sub ClientToWindow(pcx As Long, pcy As Long)
    Sub PutProperty(ByVal Property As String, ByVal vtValue As Variant)
    Function GetProperty(ByVal Property As String) As Variant
    Property Get Name() As String
    Property Get hWnd() As LongPtr
    Property Get FullName() As String
    Property Get Path() As String
    Property Get Visible() As Boolean
    Property Let Visible(ByVal value As Boolean)
    Property Get StatusBar() As Boolean
    Property Let StatusBar(ByVal value As Boolean)
    Property Get StatusText() As String
    Property Let StatusText(ByVal StatusText As String)
    Property Get Toolbar() As Long
    Property Let Toolbar(ByVal Value As Long)
    Property Get MenuBar() As Boolean
    Property Let MenuBar(ByVal value As Boolean)
    Property Get Fullscreen() As Boolean
    Property Let Fullscreen(ByVal value As Boolean)
End Interface

[InterfaceId("54A8F188-9EBD-4795-AD16-9B4945119636")]
[Description("Web Browser Interface for firing web browser navigation events.")]
[OleAutomation(False)]
Interface IWebBrowserEventsService Extends IUnknown
    [Description("Fires the BeforeNavigate2 webbrowser event and returns a bool to indicate if the navigation was cancelled.")]
    Function FireBeforeNavigate2Event() As Boolean
    [Description("Fires the NavigateComplete2 webbrowser event. This causes the address bar to be updated to the current Url")]
    Sub FireNavigateComplete2Event()
    [Description("Fires the DownloadBegin webbrowser event.")]
    Sub FireDownloadBeginEvent()
    [Description("Fires the NavigateComplete2 webbrowser event.")]
    Sub FireDownloadCompleteEvent()
    [Description("Fires the NavigateComplete2 webbrowser event.")]
    Sub FireDocumentCompleteEvent()
End Interface

[InterfaceId("87CC5D04-EAFA-4833-9820-8F986530CC00")]
[Description("Used to provide the current Url to fire web browser Navigation events")]
Interface IWebBrowserEventsUrlService Extends IUnknown
    [Description("Called to retrieve the current Url to fire the web browser navigation events.")]
    Function GetUrlForEvents() As String
End Interface
    

[InterfaceId("E7A1AF80-4D96-11CF-960C-0080C7F4EE85")]
'[ DualInterface ]
[OleAutomation(True)]
Interface IShellFolderViewDual Extends IDispatch
    Property Get Application() As IDispatch
    Property Get Parent() As IDispatch
    Property Get Folder() As Folder
    Function SelectedItems() As FolderItems
    Property Get FocusedItem() As FolderItem
    Sub SelectItem(pvfi As Variant, ByVal dwFlags As Long)
    Function PopupItemMenu(ByVal pfi As FolderItem, Optional ByVal vx As Variant, Optional ByVal vy As Variant) As String
    Property Get Script() As IDispatch
    Property Get ViewOptions() As Long
End Interface
[InterfaceId("31C147b6-0ADE-4A3C-B514-DDF932EF6D17")]
'[ DualInterface ]
[OleAutomation(True)]
Interface IShellFolderViewDual2 Extends IShellFolderViewDual
    Property Get CurrentViewMode() As Long
    Property Let CurrentViewMode(ByVal ViewMode As Long)
    Sub SelectItemRelative(ByVal iRelative As Long)
End Interface
[InterfaceId("29EC8E6C-46D3-411f-BAAA-611A6C9CAC66")]
'[ DualInterface ]
[OleAutomation(True)]
Interface IShellFolderViewDual3 Extends IShellFolderViewDual2
    Property Get GroupBy() As String
    Property Let GroupBy(ByVal bstrGroupBy As String)
    Property Get FolderFlags() As Long
    Property Let FolderFlags(ByVal dwFlags As Long)
    Property Get SortColumns() As String
    Property Let SortColumns(ByVal bstrSortColumns As String)
    Property Let IconSize(ByVal iIconSize As Long)
    Property Get IconSize() As Long
    Sub FilterView(ByVal bstrFilterText As String)
End Interface

[InterfaceId("88A05C00-F000-11CE-8350-444553540000")]
'[ DualInterface ]
[OleAutomation(True)]
Interface IShellLinkDual Extends IDispatch
    Property Get Path() As String
    Property Let Path(ByVal bs As String)
    Property Get Description() As String
    Property Let Description(ByVal bs As String)
    Property Get WorkingDirectory() As String
    Property Let WorkingDirectory(ByVal bs As String)
    Property Get Arguments() As String
    Property Let Arguments(ByVal bs As String)
    Property Get HotKey() As Long
    Property Let HotKey(ByVal iHK As Long)
    Property Get ShowCommand() As Long
    Property Let ShowCommand(ByVal iHK As Long)
    Sub Resolve(ByVal fFlags As Long)
    Function GetIconLocation(pbs As String) As Long
    Sub SetIconLocation(ByVal bs As String, ByVal iIcon As Long)
    Sub Save(ByVal vWhere As Variant)
End Interface
[InterfaceId("317EE249-F12E-11d2-B1E4-00C04F8EEB3E")]
'[ DualInterface ]
[OleAutomation(True)]
Interface IShellLinkDual2 Extends IShellLinkDual
    Property Get Target() As FolderItem
End Interface

[InterfaceId("D8F015C0-C278-11CE-A49E-444553540000")]
'[ DualInterface ]
[OleAutomation(True)]
Interface IShellDispatch Extends IDispatch
    Property Get Application() As IDispatch
    Property Get Parent() As IDispatch
    Function Namespace(ByVal vDir As Variant) As Folder
    Function BrowseForFolder(ByVal hwnd As Long, ByVal Title As String, ByVal options As Long, Optional ByVal RootFolder As Variant) As Folder
    Function Windows() As IDispatch
    Sub Open(ByVal vDir As Variant)
    Sub Explore(ByVal vDir As Variant)
    Sub MinimizeAll()
    Sub UndoMinimizeAll()
    Sub FileRun()
    Sub CascadeWindows()
    Sub TileVertically()
    Sub TileHorizontally()
    Sub ShutdownWindows()
    Sub Suspend()
    Sub EjectPC()
    Sub SetTime()
    Sub TrayProperties()
    Sub Help()
    Sub FindFiles()
    Sub FindComputer()
    Sub RefreshMenu()
    Sub ControlPanelItem(ByVal bstrDir As String)
End Interface
[InterfaceId("A4C6892C-3BA9-11d2-9DEA-00C04FB16162")]
'[ DualInterface ]
[OleAutomation(True)]
Interface IShellDispatch2 Extends IShellDispatch
    Function IsRestricted(ByVal Group As String, ByVal Restriction As String) As Long
    Sub ShellExecute(ByVal File As String, Optional ByVal vArgs As Variant, Optional ByVal vDir As Variant, Optional ByVal vOperation As Variant, Optional ByVal vShow As Variant)
    Sub FindPrinter(Optional ByVal name As String, Optional ByVal location As String, Optional ByVal model As String)
    Function GetSystemInformation(ByVal name As String) As Variant
    Function ServiceStart(ByVal serviceName As String, ByVal Persistent As Variant) As Variant
    Function ServiceStop(ByVal serviceName As String, ByVal Persistent As Variant) As Variant
    Function IsServiceRunning(ByVal ServiceName As String) As Variant
    Function CanStartStopService(ByVal ServiceName As String) As Variant
    Function ShowBrowserBar(ByVal bstrClsid As String, ByVal bShow As Variant) As Variant
End Interface
[InterfaceId("177160ca-bb5a-411c-841d-bd38facdeaa0")]
'[ DualInterface ]
[OleAutomation(True)]
Interface IShellDispatch3 Extends IShellDispatch2
    Sub AddToRecent(ByVal varFile As Variant, Optional ByVal bstrCategory As String)
End Interface
[InterfaceId("efd84b2d-4bcf-4298-be25-eb542a59fbda")]
'[ DualInterface ]
[OleAutomation(True)]
Interface IShellDispatch4 Extends IShellDispatch3
    Sub WindowsSecurity()
    Sub ToggleDesktop()
    Function ExplorerPolicy(ByVal bstrPolicyName As String) As Variant
    Function GetSetting(ByVal lSetting As Long) As Boolean
End Interface
[InterfaceId("866738b9-6cf2-4de8-8767-f794ebe74f4e")]
'[ DualInterface ]
[OleAutomation(True)]
Interface IShellDispatch5 Extends IShellDispatch4
    Sub WindowSwitcher()
End Interface
[InterfaceId("286e6f1b-7113-4355-9562-96b7e9d64c54")]
'[ DualInterface ]
[OleAutomation(True)]
Interface IShellDispatch6 Extends IShellDispatch5
    Sub SearchCommand()
End Interface

[InterfaceId("FAC32C80-CBE4-11CE-8350-444553540000")]
'[ DualInterface ]
[OleAutomation(True)]
Interface FolderItem Extends IDispatch
    Property Get Application() As IDispatch
    Property Get Parent() As IDispatch
    Property Get Name() As String
    Property Let Name(ByVal bs As String)
    Property Get Path() As String
    Property Get GetLink() As IDispatch
    Property Get GetFolder() As IDispatch
    Property Get IsLink() As Boolean
    Property Get IsFolder() As Boolean
    Property Get IsFileSystem() As Boolean
    Property Get IsBrowsable() As Boolean
    Property Get ModifyDate() As Date
    Property Let ModifyDate(ByVal dt As Date)
    Property Get Size() As Long
    Property Get Type() As String
    Function Verbs() As FolderItemVerbs
    Sub InvokeVerb(Optional ByVal vVerb As Variant)
End Interface
[InterfaceId("edc817aa-92b8-11d1-b075-00c04fc33aa5")]
[OleAutomation(True)]
Interface FolderItem2 Extends FolderItem
    Sub InvokeVerbEx(Optional ByVal vVerb As Variant, Optional ByVal vArgs As Variant)
    Function ExtendedProperty(ByVal bstrPropName As String) As Variant
End Interface

[InterfaceId("744129E0-CBE5-11CE-8350-444553540000")]
'[ DualInterface ]
[OleAutomation(True)]
Interface FolderItems Extends IDispatch
    Property Get Count() As Long
    Property Get Application() As IDispatch
    Property Get Parent() As IDispatch
    Function Item(Optional ByVal index As Variant) As FolderItem
    Function _NewEnum() As stdole.IUnknown
End Interface
[InterfaceId("C94F0AD0-F363-11d2-A327-00C04F8EEC7F")]
'[ DualInterface ]
[OleAutomation(True)]
Interface FolderItems2 Extends FolderItems
    Sub InvokeVerbEx(Optional ByVal vVerb As Variant, Optional ByVal vArgs As Variant)
End Interface
[InterfaceId("eaa7c309-bbec-49d5-821d-64d966cb667f")]
'[ DualInterface ]
[OleAutomation(True)]
Interface FolderItems3 Extends FolderItems2
    Sub Filter(ByVal grfFlags As Long, ByVal bstrFileSpec As String)
    Function Verbs() As FolderItemVerbs
End Interface

[InterfaceId("BBCBDE60-C3FF-11CE-8350-444553540000")]
'[ DualInterface ]
[OleAutomation(True)]
Interface Folder Extends IDispatch
    Property Get Title() As String
    Property Get Application() As IDispatch
    Property Get Parent() As IDispatch
    Property Get ParentFolder() As Folder
    Function Items() As FolderItems
    Function ParseName(ByVal bName As String) As FolderItem
    Sub NewFolder(ByVal bName As String, Optional ByVal vOptions As Variant)
    Sub MoveHere(ByVal vItem As Variant, Optional ByVal vOptions As Variant)
    Sub CopyHere(ByVal vItem As Variant, Optional ByVal vOptions As Variant)
    Function GetDetailsOf(ByVal vItem As Variant, ByVal iColumn As Long) As String
End Interface
[InterfaceId("f0d2d8ef-3890-11d2-bf8b-00c04fb93661")]
'[ DualInterface ]
[OleAutomation(True)]
Interface Folder2 Extends Folder
    Function Self() As FolderItem
    Function OfflineStatus() As Long
    Sub Synchronize()
    Function HaveToShowWebViewBarricade() As Boolean
    Sub DismissedWebViewBarricade()
End Interface
[InterfaceId("A7AE5F64-C4D7-4d7f-9307-4D24EE54B841")]
'[ DualInterface ]
[OleAutomation(True)]
Interface Folder3 Extends Folder2
    Property Get ShowWebViewBarricade() As Boolean
    Property Let ShowWebViewBarricade(ByVal bShowWebViewBarricade As Boolean)
End Interface

[InterfaceId("08EC3E00-50B0-11CF-960C-0080C7F4EE85")]
'[ DualInterface ]
[OleAutomation(True)]
Interface FolderItemVerb Extends IDispatch
    Property Get Application() As IDispatch
    Property Get Parent() As IDispatch
    Property Get Name() As String
    Sub DoIt()
End Interface
[InterfaceId("1F8352C0-50B0-11CF-960C-0080C7F4EE85")]
'[ DualInterface ]
[OleAutomation(True)]
Interface FolderItemVerbs Extends IDispatch
    Property Get Count() As Long
    Property Get Application() As IDispatch
    Property Get Parent() As IDispatch
    Function Item(ByVal index As Variant) As FolderItemVerb
    Function _NewEnum() As stdole.IUnknown
End Interface

[InterfaceId("4a3df050-23bd-11d2-939f-00a0c91eedba")]
[OleAutomation(True)]
Interface DFConstraint Extends IDispatch
    Function Name() As String
    Function Value() As Variant
End Interface

[InterfaceId("62112AA2-EBE4-11cf-A5FB-0020AFE7292D")]
[OleAutomation(True)]
Interface DShellFolderViewEvents Extends stdole.IDispatch
    Sub SelectionChanged()
    Sub EnumDone()
    Function VerbInvoked() As Boolean
    Function DefaultVerbInvoked() As Boolean
    Function BeginDrag() As Boolean
End Interface

[InterfaceId("9BA05970-F6A8-11CF-A442-00A0C90A8F39")]
[OleAutomation(True)]
Interface IFolderViewOC Extends IDispatch
    Sub SetFolderView(ByVal pdisp As IDispatch)
End Interface


    [InterfaceId("729FE2F8-1EA8-11D1-8F85-00C04FC2FBE1")]
   ' [ DualInterface, COMExtensible]
    [Description("Shell UI Helper Control Interface")]
    [OleAutomation(True)]
    Interface IShellUIHelper Extends IDispatch
        [DispId(1), Hidden]
        Sub ResetFirstBootMode()
        [DispId(2), Hidden]
        Sub ResetSafeMode()
        [DispId(3), Hidden]
        Sub RefreshOfflineDesktop()
        [DispId(4)]
        Sub AddFavorite(ByVal URL As String, Optional ByRef Title As Variant)
        [DispId(5)]
        Sub AddChannel(ByVal URL As String)
        [DispId(6)]
        Sub AddDesktopComponent(ByVal URL As String, ByVal type As String, Optional ByRef Left As Variant, Optional ByRef Top As Variant, Optional ByRef width As Variant, Optional ByRef Height As Variant)
        [DispId(7)]
        Function IsSubscribed(ByVal URL As String) As Boolean
        [DispId(8)]
        Sub NavigateAndFind(ByVal URL As String, ByVal strQuery As String, ByRef varTargetFrame As Variant)
        [DispId(9)]
        Sub ImportExportFavorites(ByVal fImport As Boolean, ByVal strImpExpPath As String)
        [DispId(10)]
        Sub AutoCompleteSaveForm(Optional ByRef Form As Variant)
        [DispId(11)]
        Sub AutoScan(ByVal strSearch As String, ByVal strFailureUrl As String, Optional ByRef pvarTargetFrame As Variant)
        [DispId(12), Hidden]
        Sub AutoCompleteAttach(Optional ByRef reserved As Variant)
        [DispId(13)]
        Function ShowBrowserUI(ByVal bstrName As String, ByRef pvarIn As Variant) As Variant
    End Interface

    [InterfaceId("A7FE6EDA-1932-4281-B881-87B31B8BC52C")]
   ' [ DualInterface, COMExtensible]
    [Description("Shell UI Helper Control Interface 2")]
    [OleAutomation(True)]
    Interface IShellUIHelper2 Extends IShellUIHelper
        [DispId(14)]
        Sub AddSearchProvider(ByVal URL As String)
        [DispId(15)]
        Sub RunOnceShown()
        [DispId(16)]
        Sub SkipRunOnce()
        [DispId(17)]
        Sub CustomizeSettings(ByVal fSQM As Boolean, ByVal fPhishing As Boolean, ByVal bstrLocale As String)
        [DispId(18)]
        Function SqmEnabled() As Boolean
        [DispId(19)]
        Function PhishingEnabled() As Boolean
        [DispId(20)]
        Function BrandImageUri() As String
        [DispId(21)]
        Sub SkipTabsWelcome()
        [DispId(22)]
        Sub DiagnoseConnection()
        [DispId(23)]
        Sub CustomizeClearType(ByVal fSet As Boolean)
        [DispId(24)]
        Function IsSearchProviderInstalled(ByVal URL As String) As Long
        [DispId(25)]
        Function IsSearchMigrated() As Boolean
        [DispId(26)]
        Function DefaultSearchProvider() As String
        [DispId(27)]
        Sub RunOnceRequiredSettingsComplete(ByVal fComplete As Boolean)
        [DispId(28)]
        Function RunOnceHasShown() As Boolean
        [DispId(29)]
        Function SearchGuideUrl() As String
    End Interface

    [InterfaceId("528DF2EC-D419-40BC-9B6D-DCDBF9C1B25D")]
    '[ DualInterface, COMExtensible]
    [Description("Shell UI Helper Control Interface 3")]
    [OleAutomation(True)]
    Interface IShellUIHelper3 Extends IShellUIHelper2
        [DispId(30)]
        Sub AddService(ByVal URL As String)
        [DispId(31)]
        Function IsServiceInstalled(ByVal URL As String, ByVal Verb As String) As Long
        [DispId(37)]
        Function InPrivateFilteringEnabled() As Boolean
        [DispId(32)]
        Sub AddToFavoritesBar(ByVal URL As String, ByVal Title As String, Optional ByRef type As Variant)
        [DispId(33)]
        Sub BuildNewTabPage()
        [DispId(34)]
        Sub SetRecentlyClosedVisible(ByVal fVisible As Boolean)
        [DispId(35)]
        Sub SetActivitiesVisible(ByVal fVisible As Boolean)
        [DispId(36)]
        Sub ContentDiscoveryReset()
        [DispId(38)]
        Function IsSuggestedSitesEnabled() As Boolean
        [DispId(39)]
        Sub EnableSuggestedSites(ByVal fEnable As Boolean)
        [DispId(40)]
        Sub NavigateToSuggestedSites(ByVal bstrRelativeUrl As String)
        [DispId(41)]
        Sub ShowTabsHelp()
        [DispId(42)]
        Sub ShowInPrivateHelp()
    End Interface

    [InterfaceId("B36E6A53-8073-499E-824C-D776330A333E")]
    '[ DualInterface, COMExtensible]
    [Description("Shell UI Helper Control Interface 4")]
    [OleAutomation(True)]
    Interface IShellUIHelper4 Extends IShellUIHelper3
        [DispId(43)]
        Function msIsSiteMode() As Boolean
        [DispId(47)]
        Sub msSiteModeShowThumbBar()
        [DispId(48)]
        Function msSiteModeAddThumbBarButton(ByVal bstrIconURL As String, ByVal bstrTooltip As String) As Variant
        [DispId(46)]
        Sub msSiteModeUpdateThumbBarButton(ByVal ButtonID As Variant, ByVal fEnabled As Boolean, ByVal fVisible As Boolean)
        [DispId(44)]
        Sub msSiteModeSetIconOverlay(ByVal IconUrl As String, Optional ByRef pvarDescription As Variant)
        [DispId(45)]
        Sub msSiteModeClearIconOverlay()
        [DispId(49)]
        Sub msAddSiteMode()
        [DispId(51)]
        Sub msSiteModeCreateJumpList(ByVal bstrHeader As String)
        [DispId(52)]
        Sub msSiteModeAddJumpListItem(ByVal bstrName As String, ByVal bstrActionUri As String, ByVal bstrIconUri As String, Optional ByRef pvarWindowType As Variant)
        [DispId(53)]
        Sub msSiteModeClearJumpList()
        [DispId(56)]
        Sub msSiteModeShowJumpList()
        [DispId(54)]
        Function msSiteModeAddButtonStyle(ByVal uiButtonID As Variant, ByVal bstrIconURL As String, ByVal bstrTooltip As String) As Variant
        [DispId(55)]
        Sub msSiteModeShowButtonStyle(ByVal uiButtonID As Variant, ByVal uiStyleID As Variant)
        [DispId(58)]
        Sub msSiteModeActivate()
        [DispId(59)]
        Function msIsSiteModeFirstRun(ByVal fPreserveState As Boolean) As Variant
        [DispId(57)]
        Sub msAddTrackingProtectionList(ByVal URL As String, ByVal bstrFilterName As String)
        [DispId(60)]
        Function msTrackingProtectionEnabled() As Boolean
        [DispId(61)]
        Function msActiveXFilteringEnabled() As Boolean
    End Interface

    [InterfaceId("A2A08B09-103D-4D3F-B91C-EA455CA82EFA")]
    '[ DualInterface, COMExtensible]
    [Description("Shell UI Helper Control Interface 5")]
    [OleAutomation(True)]
    Interface IShellUIHelper5 Extends IShellUIHelper4
        [DispId(62)]
        Function msProvisionNetworks(ByVal bstrProvisioningXml As String) As Variant
        [DispId(63)]
        Sub msReportSafeUrl()
        [DispId(64)]
        Sub msSiteModeRefreshBadge()
        [DispId(65)]
        Sub msSiteModeClearBadge()
        [DispId(66)]
        Sub msDiagnoseConnectionUILess()
        [DispId(67)]
        Sub msLaunchNetworkClientHelp()
        [DispId(68)]
        Sub msChangeDefaultBrowser(ByVal fChange As Boolean)
    End Interface

    [InterfaceId("987A573E-46EE-4E89-96AB-DDF7F8FDC98C")]
    '[ DualInterface, COMExtensible]
    [Description("Shell UI Helper Control Interface 6")]
    [OleAutomation(True)]
    Interface IShellUIHelper6 Extends IShellUIHelper5
        [DispId(69)]
        Sub msStopPeriodicTileUpdate()
        [DispId(70)]
        Sub msStartPeriodicTileUpdate(ByVal pollingUris As Variant, Optional ByVal startTime As Variant, Optional ByVal uiUpdateRecurrence As Variant)
        [DispId(75)]
        Sub msStartPeriodicTileUpdateBatch(ByVal pollingUris As Variant, Optional ByVal startTime As Variant, Optional ByVal uiUpdateRecurrence As Variant)
        [DispId(71)]
        Sub msClearTile()
        [DispId(72)]
        Sub msEnableTileNotificationQueue(ByVal fChange As Boolean)
        [DispId(73)]
        Function msPinnedSiteState() As Variant
        [DispId(76)]
        Sub msEnableTileNotificationQueueForSquare150x150(ByVal fChange As Boolean)
        [DispId(77)]
        Sub msEnableTileNotificationQueueForWide310x150(ByVal fChange As Boolean)
        [DispId(78)]
        Sub msEnableTileNotificationQueueForSquare310x310(ByVal fChange As Boolean)
        [DispId(79)]
        Sub msScheduledTileNotification(ByVal bstrNotificationXml As String, ByVal bstrNotificationId As String, ByVal bstrNotificationTag As String, Optional ByVal startTime As Variant, Optional ByVal expirationTime As Variant)
        [DispId(80)]
        Sub msRemoveScheduledTileNotification(ByVal bstrNotificationId As String)
        [DispId(81)]
        Sub msStartPeriodicBadgeUpdate(ByVal pollingUri As String, Optional ByVal startTime As Variant, Optional ByVal uiUpdateRecurrence As Variant)
        [DispId(82)]
        Sub msStopPeriodicBadgeUpdate()
        [DispId(74)]
        Sub msLaunchInternetOptions()
    End Interface

    [InterfaceId("60E567C8-9573-4AB2-A264-637C6C161CB1")]
   ' [ DualInterface, COMExtensible]
    [Description("Shell UI Helper Control Interface 7")]
    [OleAutomation(True)]
    Interface IShellUIHelper7 Extends IShellUIHelper6
        [DispId(85)]
        Sub SetExperimentalFlag(ByVal bstrFlagString As String, ByVal vfFlag As Boolean)
        [DispId(84)]
        Function GetExperimentalFlag(ByVal bstrFlagString As String) As Boolean
        [DispId(86)]
        Sub SetExperimentalValue(ByVal bstrValueString As String, ByVal dwValue As Long)
        [DispId(87)]
        Function GetExperimentalValue(ByVal bstrValueString As String) As Long
        [DispId(92)]
        Sub ResetAllExperimentalFlagsAndValues()
        [DispId(89)]
        Function GetNeedIEAutoLaunchFlag(ByVal bstrUrl As String) As Boolean
        [DispId(90)]
        Sub SetNeedIEAutoLaunchFlag(ByVal bstrUrl As String, ByVal Flag As Boolean)
        [DispId(88)]
        Function HasNeedIEAutoLaunchFlag(ByVal bstrUrl As String) As Boolean
        [DispId(91)]
        Sub LaunchIE(ByVal bstrUrl As String, ByVal automated As Boolean)
    End Interface

    [InterfaceId("66DEBCF2-05B0-4F07-B49B-B96241A65DB2")]
   ' [ DualInterface, COMExtensible]
    [Description("Shell UI Helper Control Interface 8")]
    [OleAutomation(True)]
    Interface IShellUIHelper8 Extends IShellUIHelper7
        [DispId(93)]
        Function GetCVListData() As String
        [DispId(94)]
        Function GetCVListLocalData() As String
        [DispId(95)]
        Function GetEMIEListData() As String
        [DispId(96)]
        Function GetEMIEListLocalData() As String
        [DispId(97)]
        Sub OpenFavoritesPane()
        [DispId(98)]
        Sub OpenFavoritesSettings()
        [DispId(99)]
        Sub LaunchInHVSI(ByVal bstrUrl As String)
    End Interface

    [InterfaceId("6CDF73B0-7F2F-451F-BC0F-63E0F3284E54")]
   '[ DualInterface, COMExtensible]
    [Description("Shell UI Helper Control Interface 9")]
    [OleAutomation(True)]
    Interface IShellUIHelper9 Extends IShellUIHelper8
        [DispId(103)]
        Function GetOSSku() As Long
    End Interface

    [InterfaceId("55136804-B2DE-11D1-B9F2-00A0C98BC547")]
   '[ DualInterface, COMExtensible]
    [Description("IShellFavoritesNameSpace Interface")]
    [OleAutomation(True)]
    Interface IShellFavoritesNameSpace Extends IDispatch
        [DispId(1)]
        [Description("method MoveSelectionUp")]
        Sub MoveSelectionUp()
        [DispId(2)]
        [Description("method MoveSelectionDown")]
        Sub MoveSelectionDown()
        [DispId(3)]
        [Description("method ResetSort")]
        Sub ResetSort()
        [DispId(4)]
        [Description("method NewFolder")]
        Sub NewFolder()
        [DispId(5)]
        [Description("method Synchronize")]
        Sub Synchronize()
        [DispId(6)]
        [Description("method Import")]
        Sub Import()
        [DispId(7)]
        [Description("method Export")]
        Sub Export()
        [DispId(8)]
        [Description("method InvokeContextMenuCommand")]
        Sub InvokeContextMenuCommand(ByVal strCommand As String)
        [DispId(9)]
        [Description("method MoveSelectionTo")]
        Sub MoveSelectionTo()
        [DispId(10)]
        [Description("Query to see if subscriptions are enabled")]
        Property Get SubscriptionsEnabled() As Boolean
        [DispId(11)]
        [Description("method CreateSubscriptionForSelection")]
        Function CreateSubscriptionForSelection() As Boolean
        [DispId(12)]
        [Description("method DeleteSubscriptionForSelection")]
        Function DeleteSubscriptionForSelection() As Boolean
        [DispId(13)]
        [Description("old, use put_Root() instead")]
        Sub SetRoot(ByVal bstrFullPath As String)
    End Interface

    [InterfaceId("E572D3C9-37BE-4AE2-825D-D521763E3108")]
   ' [ DualInterface, COMExtensible]
    [Description("IShellNameSpace Interface")]
    [OleAutomation(True)]
    Interface IShellNameSpace Extends IShellFavoritesNameSpace
        [DispId(14)]
        [Description("options ")]
        Property Get EnumOptions() As Long
        [DispId(14)]
        [Description("options ")]
        Property Let EnumOptions(ByVal pgrfEnumFlags As Long)
        [DispId(15)]
        [Description("get the selected item")]
        Property Get SelectedItem() As Object
        [DispId(15)]
        [Description("get the selected item")]
        Property Let SelectedItem(ByVal pitem As Object)
        [DispId(16)]
        [Description("get the root item")]
        Property Get Root() As Variant
        [DispId(16)]
        [Description("get the root item")]
        Property Let Root(ByVal pVar As Variant)
        [DispId(17)]
        Property Get Depth() As Long
        [DispId(17)]
        Property Let Depth(ByVal piDepth As Long)
        [DispId(18)]
        Property Get mode() As Long
        [DispId(18)]
        Property Let mode(ByVal puMode As Long)
        [DispId(19)]
        Property Get flags() As Long
        [DispId(19)]
        Property Let flags(ByVal pdwFlags As Long)
        [DispId(20)]
        Property Let TVFlags(ByVal dwFlags As Long)
        [DispId(20)]
        Property Get TVFlags() As Long
        [DispId(21)]
        Property Get Columns() As String
        [DispId(21)]
        Property Let Columns(ByVal bstrColumns As String)
        [DispId(22)]
        [Description("number of view types")]
        Property Get CountViewTypes() As Long
        [DispId(23)]
        [Description("set view type")]
        Sub SetViewType(ByVal itype As Long)
        [DispId(24)]
        [Description("collection of selected items")]
        Function SelectedItems() As Object
        [DispId(25)]
        [Description("expands item specified depth")]
        Sub Expand(ByVal var As Variant, ByVal iDepth As Long)
        [DispId(26)]
        [Description("unselects all items")]
        Sub UnselectAll()
    End Interface

    [InterfaceId("F3470F24-15FD-11D2-BB2E-00805FF7EFCA")]
    '[ DualInterface, COMExtensible]
    [Description("Script Error List Interface")]
    [OleAutomation(True)]
    Interface IScriptErrorList Extends IDispatch
        [DispId(10)]
        Sub advanceError()
        [DispId(11)]
        Sub retreatError()
        [DispId(12)]
        Function canAdvanceError() As Long
        [DispId(13)]
        Function canRetreatError() As Long
        [DispId(14)]
        Function getErrorLine() As Long
        [DispId(15)]
        Function getErrorChar() As Long
        [DispId(16)]
        Function getErrorCode() As Long
        [DispId(17)]
        Function getErrorMsg() As String
        [DispId(18)]
        Function getErrorUrl() As String
        [DispId(23)]
        Function getAlwaysShowLockState() As Long
        [DispId(19)]
        Function getDetailsPaneOpen() As Long
        [DispId(20)]
        Sub setDetailsPaneOpen(ByVal fDetailsPaneOpen As Long)
        [DispId(21)]
        Function getPerErrorDisplay() As Long
        [DispId(22)]
        Sub setPerErrorDisplay(ByVal fPerErrorDisplay As Long)
    End Interface

[InterfaceId("2D91EEA1-9932-11d2-BE86-00A0C9A83DA1")]
[OleAutomation(True)]
'[ DualInterface ]
Interface IFileSearchBand Extends IDispatch
    [DispId(1)] Sub SetFocus()
    [DispId(2)] Sub SetSearchParameters(ByVal pbstrSearch As String, ByVal bNavToResults As Boolean, Optional pvarScope As Variant, Optional pvarQueryFile As Variant)
    [DispId(3)] Property Get SearchID() As String
    [DispId(4)] Property Get Scope() As Variant
    [DispId(5)] Property Get QueryFile() As Variant
End Interface

[CoClassId("C4EE31F3-4768-11D2-BE5C-00A0C9A83DA1")]
CoClass FileSearchBand
[Default] Interface IFileSearchBand
End CoClass

[CoClassId("64AB4BB7-111E-11D1-8F79-00C04FC2FBE1")]
[COMCreatable]
CoClass ShellUIHelper
    [Default] Interface IShellUIHelper9
End CoClass

[CoClassId("55136805-B2DE-11D1-B9F2-00A0C98BC547")]
[COMCreatable]
CoClass ShellNameSpace
    [Default] Interface IShellNameSpace
    '[ Default, Source ] Interface DShellNameSpaceEvents
End CoClass

[CoClassId("EFD01300-160F-11D2-BB2E-00805FF7EFCA")]
CoClass CScriptErrorList
    [Default] Interface IScriptErrorList
End CoClass
    
'CLSID_ShellFolderViewOC 
[CoClassId("9BA05971-F6A8-11CF-A442-00A0C90A8F39")]
[COMCreatable]
CoClass ShellFolderViewOC
	 [Default] Interface IFolderViewOC
     [Default, Source] Interface DShellFolderViewEvents
End CoClass
'CLSID_ShellFolderItem 
[CoClassId("2fe352ea-fd1f-11d2-b1f4-00c04f8eeb3e")]
CoClass ShellFolderItem
	 [Default] Interface FolderItem2
End CoClass
'CLSID_ShellLinkObject 
[CoClassId("11219420-1768-11d1-95BE-00609797EA4F")]
CoClass ShellLinkObject
	 [Default] Interface IShellLinkDual2
End CoClass
'CLSID_ShellFolderView 
[CoClassId("62112AA1-EBE4-11cf-A5FB-0020AFE7292D")]
CoClass ShellFolderView
        [Default] Interface IShellFolderViewDual3
        [Default, Source] Interface DShellFolderViewEvents
End CoClass
'CLSID_Shell 
[CoClassId("13709620-C279-11CE-A49E-444553540000")]
CoClass Shell
	 [Default] Interface IShellDispatch6
End CoClass
'CLSID_ShellDispatchInproc 
[CoClassId("0A89A860-D7B1-11CE-8350-444553540000")]
CoClass ShellDispatchInproc
	 [Default] Interface stdole.IUnknown
End CoClass


Module wdShellObj

[EnumId("14EE5380-A378-11cf-A731-00A0C9082637")]
Public Enum BrowserNavConstants
	navOpenInNewWindow = &H0001 'helpstring("Open in new window")] 
	navNoHistory = &H0002 'helpstring("Exclude from history list")] 
	navNoReadFromCache = &H0004 'helpstring("Don't read from cache")] 
	navNoWriteToCache = &H0008 'helpstring("Don't write from cache")] 
	navAllowAutosearch = &H0010 'helpstring("Try other sites on failure")] 
	navBrowserBar = &H0020 'helpstring("OpenBrowserBar")] 
	navHyperlink = &H0040 'helpstring("Hyperlink")] 
	navEnforceRestricted = &H0080 'helpstring("Enforce restricted zone")] 
	navNewWindowsManaged = &H0100 'helpstring("Apply new window management")] 
	navUntrustedForDownload = &H0200 'helpstring("Untrusted download")] 
	navTrustedForActiveX = &H0400 'helpstring("Trusted for ActiveX prompt")] 
	navOpenInNewTab = &H0800 'helpstring("Open in new tab")] 
	navOpenInBackgroundTab = &H1000 'helpstring("Open in a background tab")] 
	navKeepWordWheelText = &H2000 'helpstring("Maintain the wordwheel text")] 
	navVirtualTab = &H4000 'helpstring("Virtual tab across MIC levels")] 
	navBlockRedirectsXDomain = &H8000& 'helpstring("Block x-domain redirects")] 
	navOpenNewForegroundTab = &H10000 'helpstring("Force open in foreground tab")] 
	navTravelLogScreenshot = &H20000 'helpstring("Travel Log nav with screenshot")] 
	navDeferUnload = &H40000 'helpstring("Defer unload of virtual tab")] 
	navSpeculative = &H80000 'helpstring("Speculative navigate")] 
	navSuggestNewWindow = &H100000 'helpstring("Suggest open in new window")] 
	navSuggestNewTab = &H200000 'helpstring("Suggest open in new tab")] 
	navReserved1 = &H400000 'helpstring("Reserved")] 
	navHomepageNavigate = &H800000 'helpstring("HP navigation")] 
	navRefresh = &H1000000 'helpstring("Treat nav as refresh")] 
	navHostNavigation = &H2000000 'helpstring("Host initiated navigation")] 
	navReserved2 = &H4000000 'helpstring("Reserved")] 
	navReserved3 = &H8000000 'helpstring("Reserved")] 
	navReserved4 = &H10000000 'helpstring("Reserved")] 
	navReserved5 = &H20000000 'helpstring("Reserved")] 
	navReserved6 = &H40000000 'helpstring("Reserved")] 
    navReserved7 = &H80000000
    navUserInitiatedAction = navReserved1
    navDisableDownloadSave = navReserved2
    navServerRedirectedVtabSwitch = navReserved3
    navVtabSwitchNotUserInitiatedAction = navReserved4
    navCheckDontShowNeedIE = navReserved5
    navCheckDontShowNeedHVSI = navReserved6
    navCheckDontShowHVSINeedHost = navReserved7
End Enum

[EnumId("C317C261-A991-11cf-A731-00A0C9082637")]
Public Enum RefreshConstants' // must map to these in sdk\inc\docobj.h
	REFRESH_NORMAL = 0 '[ helpstring("Refresh normal")]  ,  //== OLECMDIDF_REFRESH_NORMAL
	REFRESH_IFEXPIRED = 1 '[ helpstring("Refresh if expired")] ,  //== OLECMDIDF_REFRESH_IFEXPIRED
	REFRESH_COMPLETELY = 3 ' helpstring("Refresh completely")]    //== OLECMDIDF_REFRESH_COMPLETELY
End Enum

[EnumId("34A226E0-DF30-11CF-89A9-00A0C9054129")]
Public Enum CommandStateChangeConstants
	CSC_UPDATECOMMANDS = &HFFFFFFFF '[helpstring("Command Change")] ,
	CSC_NAVIGATEFORWARD = &H00000001'[helpstring("Navigate Forward")] ,
	CSC_NAVIGATEBACK = &H00000002 '[helpstring("Navigate Back")] ,
End Enum

[EnumId("35f1a0d0-3e9a-11d2-8499-005345000000")]
Public Enum OfflineFolderStatus
    OFS_INACTIVE = -1 '   [helpstring("Offline caching not available for this folder")] ,
    OFS_ONLINE '   [helpstring("Server is online")] ,
    OFS_OFFLINE '   [helpstring("Server is offline")] ,
    OFS_SERVERBACK '    [helpstring("Server is offline but is reachable")] ,
    OFS_DIRTYCACHE '    [helpstring("Server is online with unmerged changes")],
End Enum

[EnumId("742A99A0-C77E-11D0-A32C-00A0C91EEDBA")]
Public Enum ShellFolderViewOptions
    SFVVO_SHOWALLOBJECTS = &H00000001 '[helpstring("Show All Objects")] ,
    SFVVO_SHOWEXTENSIONS = &H00000002',    [helpstring("Show File Extensions")] 
    SFVVO_SHOWCOMPCOLOR = &H00000008 '[helpstring("Color encode Compressed files")] ,
    SFVVO_SHOWSYSFILES = &H00000020 '[helpstring("Show System Files")] ,
    SFVVO_WIN95CLASSIC = &H00000040'[helpstring("Use Windows 95 UI settings")] ,
    SFVVO_DOUBLECLICKINWEBVIEW = &H00000080 '[helpstring("User needs to double click in web View")] ,
    SFVVO_DESKTOPHTML = &H00000200 '[helpstring("Is Desktop HTML enabled")] ,
End Enum

[EnumId("CA31EA20-48D0-11CF-8350-444553540000")]
Public Enum ShellSpecialFolderConstants
	ssfDESKTOP = 0
	ssfPROGRAMS = &H2
	ssfCONTROLS = &H3
	ssfPRINTERS = &H4
	ssfPERSONAL = &H5
	ssfFAVORITES = &H6
	ssfSTARTUP = &H7
	ssfRECENT = &H8
	ssfSENDTO = &H9
	ssfBITBUCKET = &Ha
	ssfSTARTMENU = &Hb
	ssfDESKTOPDIRECTORY = &H10
	ssfDRIVES = &H11
	ssfNETWORK = &H12
	ssfNETHOOD = &H13
	ssfFONTS = &H14
	ssfTEMPLATES = &H15
	ssfCOMMONSTARTMENU = &H16
	ssfCOMMONPROGRAMS = &H17
	ssfCOMMONSTARTUP = &H18
	ssfCOMMONDESKTOPDIR = &H19
	ssfAPPDATA = &H1a
	ssfPRINTHOOD = &H1b
	ssfLOCALAPPDATA = &H1c
	ssfALTSTARTUP = &H1d
	ssfCOMMONALTSTARTUP = &H1e
	ssfCOMMONFAVORITES = &H1f
	ssfINTERNETCACHE = &H20
	ssfCOOKIES = &H21
	ssfHISTORY = &H22
	ssfCOMMONAPPDATA = &H23
	ssfWINDOWS = &H24
	ssfSYSTEM = &H25
	ssfPROGRAMFILES = &H26
	ssfMYPICTURES = &H27
	ssfPROFILE = &H28
	ssfSYSTEMx86 = &H29
	ssfPROGRAMFILESx86 = &H30
End Enum

Public Enum READYSTATE
    READYSTATE_UNINITIALIZED = 0                         ' &H00000000&
    READYSTATE_LOADING = 1                               ' &H00000001&
    READYSTATE_LOADED = 2                                ' &H00000002&
    READYSTATE_INTERACTIVE = 3                           ' &H00000003&
    READYSTATE_COMPLETE = 4                              ' &H00000004&
End Enum
    
    
Public Const sCLSID_ShellFolderViewOC = "new: {9BA05971-F6A8-11CF-A442-00A0C90A8F39}"
Public Const sCLSID_ShellFolderItem = "new: {2fe352ea-fd1f-11d2-b1f4-00c04f8eeb3e}"
Public Const sCLSID_ShellLinkObject = "new: {11219420-1768-11d1-95BE-00609797EA4F}"
Public Const sCLSID_ShellFolderView = "new: {62112AA1-EBE4-11cf-A5FB-0020AFE7292D}"
Public Const sCLSID_Shell = "new: {13709620-C279-11CE-A49E-444553540000}"
Public Const sCLSID_ShellDispatchInproc = "new: {0A89A860-D7B1-11CE-8350-444553540000}"
    Public Function CLSID_ShellFolderViewOC() As UUID
    '{9BA05971-F6A8-11CF-A442-00A0C90A8F39}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H9BA05971, CInt(&HF6A8), CInt(&H11CF), &HA4, &H42, &H00, &HA0, &HC9, &H0A, &H8F, &H39)
     CLSID_ShellFolderViewOC = iid
    End Function
    Public Function CLSID_ShellFolderItem() As UUID
    '{2fe352ea-fd1f-11d2-b1f4-00c04f8eeb3e}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H2fe352ea, CInt(&Hfd1f), CInt(&H11d2), &Hb1, &Hf4, &H00, &Hc0, &H4f, &H8e, &Heb, &H3e)
     CLSID_ShellFolderItem = iid
    End Function
    Public Function CLSID_ShellLinkObject() As UUID
    '{11219420-1768-11d1-95BE-00609797EA4F}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H11219420, CInt(&H1768), CInt(&H11d1), &H95, &HBE, &H00, &H60, &H97, &H97, &HEA, &H4F)
     CLSID_ShellLinkObject = iid
    End Function
    Public Function CLSID_ShellFolderView() As UUID
    '{62112AA1-EBE4-11cf-A5FB-0020AFE7292D}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H62112AA1, CInt(&HEBE4), CInt(&H11cf), &HA5, &HFB, &H00, &H20, &HAF, &HE7, &H29, &H2D)
     CLSID_ShellFolderView = iid
    End Function
    Public Function CLSID_Shell() As UUID
    '{13709620-C279-11CE-A49E-444553540000}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H13709620, CInt(&HC279), CInt(&H11CE), &HA4, &H9E, &H44, &H45, &H53, &H54, &H00, &H00)
     CLSID_Shell = iid
    End Function
    Public Function CLSID_ShellDispatchInproc() As UUID
    '{0A89A860-D7B1-11CE-8350-444553540000}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &H0A89A860, CInt(&HD7B1), CInt(&H11CE), &H83, &H50, &H44, &H45, &H53, &H54, &H00, &H00)
     CLSID_ShellDispatchInproc = iid
    End Function
End Module