'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'Windows Remote Management

'wsman.h - 100% coverage
'wsmandisp.h  **NOT INCLUDED: System has tB-compatible typelib "Microsoft WSMAN Automation V1.0 Library"




#If WDL_QUALIFY Then
[MustBeQualified]
#End If
Module wdWsMan

Public Enum WsManApiVersions
    WSMAN_FLAG_REQUESTED_API_VERSION_1_0 = &H0
    WSMAN_FLAG_REQUESTED_API_VERSION_1_1 = &H1
End Enum

Public Type WSMAN_DATA_TEXT
    bufferLength As Long
    buffer As LongPtr
End Type

Public Type WSMAN_DATA_BINARY
    dataLength As Long
    data As LongPtr
End Type

Public Enum WSManDataType
    WSMAN_DATA_NONE = 0
    WSMAN_DATA_TYPE_TEXT = 1
    WSMAN_DATA_TYPE_BINARY = 2
    WSMAN_DATA_TYPE_DWORD = 4
End Enum

Public Type WSMAN_DATA
    type As WSManDataType
    ' union
    ' {
        ' WSMAN_DATA_TEXT text;
        ' WSMAN_DATA_BINARY binaryData;
        ' DWORD number;
    ' };
    lengthOrNumber As Long
    ptr As LongPtr
 
        
End Type

Public Type WSMAN_ERROR
    code As Long
    ' extended error information
    errorDetail As LongPtr ' extended error description from the fault; 
    ' it can be NULL, for example in out of memory conditions
    language As LongPtr ' language for error description (RFC 3066 language code); it can be NULL
    machineName As LongPtr ' machine id; it can be NULL
    pluginName As LongPtr ' Plug-in name for errors generated by plug-ins. Otherwise NULL.
End Type

Public Type WSMAN_USERNAME_PASSWORD_CREDS
    username As LongPtr
    password As LongPtr
End Type

Public Enum WSManAuthenticationFlags
    WSMAN_FLAG_DEFAULT_AUTHENTICATION = &H0 'Use the default authentication
    WSMAN_FLAG_NO_AUTHENTICATION = &H1 'Use no authentication for a remote operation
    WSMAN_FLAG_AUTH_DIGEST = &H2 'Use digest authentication for a remote operation
    WSMAN_FLAG_AUTH_NEGOTIATE = &H4 'Use negotiate authentication for a remote operation (may use kerberos or ntlm)
    WSMAN_FLAG_AUTH_BASIC = &H8 'Use basic authentication for a remote operation
    WSMAN_FLAG_AUTH_KERBEROS = &H10 'Use kerberos authentication for a remote operation
    ' #if (WINVER >= 0x600)
    WSMAN_FLAG_AUTH_CREDSSP = &H80 'Use CredSSP authentication for a remote operation
    ' #endif
    WSMAN_FLAG_AUTH_CLIENT_CERTIFICATE = &H20 'Use client certificate authentication for a remote operation
End Enum

Public Type WSMAN_AUTHENTICATION_CREDENTIALS
    authenticationMechanism As Long ' can be 0 (the user did not specify an
                                    ' authentication mechanism, WSMan client
                                    ' will choose between Kerberos and Negotiate only);
                                    ' if it is not 0, it must be one of the
                                    ' values from WSManAuthenticationFlags
                                    ' enumeration

' union 
' {
    ' WSMAN_USERNAME_PASSWORD_CREDS userAccount;
    ' PCWSTR certificateThumbprint; 
' };                                    
  userNameOrCertThumb As LongPtr
  password As LongPtr
End Type

Public Type WSMAN_OPTION
    name As LongPtr
    value As LongPtr
    mustComply As BOOL
End Type

Public Type WSMAN_OPTION_SET
    optionsCount As Long
    options As LongPtr 'WSMAN_OPTION*
    optionsMustUnderstand As BOOL
End Type
Public Type WSMAN_OPTION_SETEX
    optionsCount As Long
    options As LongPtr 'WSMAN_OPTION*
    optionsMustUnderstand As BOOL
    optionTypes As LongPtr 'PCWSTR *
End Type

Public Type WSMAN_KEY
    key As LongPtr
    value As LongPtr
End Type

Public Type WSMAN_SELECTOR_SET
    numberKeys As Long ' Number of keys (selectors)
    keys As LongPtr 'WSMAN_KEY* ' Array of key names and values
End Type

Public Type WSMAN_FRAGMENT
    path As LongPtr ' fragment path - WS-Transfer
    dialect As LongPtr ' dialect for Fragment path 
End Type

Public Type WSMAN_FILTER
    filter As LongPtr ' filter enumeration/subscription - allows ad-hoc queries using quey languages like SQL
    dialect As LongPtr ' dialect for filter predicate
End Type

Public Enum WsManOpVersions
    WSMAN_OPERATION_INFOV1 = &H00000000
    WSMAN_OPERATION_INFOV2 = &Haabbccdd
End Enum
Public Type WSMAN_OPERATION_INFO
    fragment As WSMAN_FRAGMENT ' optional element to support Fragment transfer or
    filter As WSMAN_FILTER ' optional Filter WS-Enumerate/WS-Eventing
    selectorSet As WSMAN_SELECTOR_SET
    optionSet As WSMAN_OPTION_SET
    reserved As LongPtr 'void*
    version As WsManOpVersions
End Type
Public Type WSMAN_OPERATION_INFOEX
    fragment As WSMAN_FRAGMENT ' optional element to support Fragment transfer or
    filter As WSMAN_FILTER ' optional Filter WS-Enumerate/WS-Eventing
    selectorSet As WSMAN_SELECTOR_SET
    optionSet As WSMAN_OPTION_SETEX
    version As WsManOpVersions
    uiLocale As LongPtr
    dataLocale As LongPtr
End Type

Public Declare PtrSafe Function WSManInitialize Lib "WsmSvc.dll" (ByVal flags As WsManApiVersions, apiHandle As LongPtr) As Long
Public Declare PtrSafe Function WSManDeinitialize Lib "WsmSvc.dll" (ByVal apiHandle As LongPtr, ByVal flags As Long) As Long
Public Declare PtrSafe Function WSManGetErrorMessage Lib "WsmSvc.dll" (ByVal apiHandle As LongPtr, ByVal flags As Long, ByVal languageCode As LongPtr, ByVal errorCode As Long, ByVal messageLength As Long, ByVal message As LongPtr, messageLengthUsed As Long) As Long
Public DeclareWide PtrSafe Function WSManGetErrorMessage Lib "WsmSvc.dll" (ByVal apiHandle As LongPtr, ByVal flags As Long, ByVal languageCode As String, ByVal errorCode As Long, ByVal messageLength As Long, ByVal message As String, messageLengthUsed As Long) As Long

Public Enum WSManProxyAccessType
    WSMAN_OPTION_PROXY_IE_PROXY_CONFIG = 1 ' use the Internet Explorer proxy configuration for the current user
    WSMAN_OPTION_PROXY_WINHTTP_PROXY_CONFIG = 2 ' default: proxy settings configured for WinHTTP, using the ProxyCfg.exe utility
    WSMAN_OPTION_PROXY_AUTO_DETECT = 4 ' Force autodetection of proxy
    WSMAN_OPTION_PROXY_NO_PROXY_SERVER = 8 ' do not use a proxy server - resolves all host names locally
End Enum

Public Type WSMAN_PROXY_INFO
    accessType As WSManProxyAccessType
    authenticationCredentials As WSMAN_AUTHENTICATION_CREDENTIALS ' credentials and authentication scheme used for proxy
End Type

Public Declare PtrSafe Function WSManCreateSession Lib "WsmSvc.dll" (ByVal apiHandle As LongPtr, ByVal connection As LongPtr, ByVal flags As Long, serverAuthenticationCredentials As WSMAN_AUTHENTICATION_CREDENTIALS, proxyInfo As WSMAN_PROXY_INFO, session As LongPtr) As Long
Public Declare PtrSafe Function WSManCloseSession Lib "WsmSvc.dll" (ByVal session As LongPtr, ByVal flags As Long) As Long

Public Const WSMAN_DEFAULT_TIMEOUT_MS = 60000

Public Enum WSManSessionOption
    ' 
    ' Timeouts
    ' 
    WSMAN_OPTION_DEFAULT_OPERATION_TIMEOUTMS = 1 ' DWORD - default timeout in ms that applies to all operations on the client side
    WSMAN_OPTION_MAX_RETRY_TIME = 11 ' DWORD (read only) - maximum time for Robust connection retries
    WSMAN_OPTION_TIMEOUTMS_CREATE_SHELL = 12 ' DWORD - timeout in ms for WSManCreateShell operations
    WSMAN_OPTION_TIMEOUTMS_RUN_SHELL_COMMAND = 13 ' DWORD - timeout in ms for WSManRunShellCommand operations
    WSMAN_OPTION_TIMEOUTMS_RECEIVE_SHELL_OUTPUT = 14 ' DWORD - timeout in ms for WSManReceiveShellOutput operations
    WSMAN_OPTION_TIMEOUTMS_SEND_SHELL_INPUT = 15 ' DWORD - timeout in ms for WSManSendShellInput operations
    WSMAN_OPTION_TIMEOUTMS_SIGNAL_SHELL = 16 ' DWORD - timeout in ms for WSManSignalShell and WSManCloseCommand operations
    WSMAN_OPTION_TIMEOUTMS_CLOSE_SHELL = 17 ' DWORD - timeout in ms for WSManCloseShell operations
    ' 
    '  connection options
    ' 
    WSMAN_OPTION_SKIP_CA_CHECK = 18 ' DWORD  - 1 to not validate the CA on the server certificate; 0 - default
    WSMAN_OPTION_SKIP_CN_CHECK = 19 ' DWORD  - 1 to not validate the CN on the server certificate; 0 - default
    WSMAN_OPTION_UNENCRYPTED_MESSAGES = 20 ' DWORD  - 1 to not encrypt the messages; 0 - default
    WSMAN_OPTION_UTF16 = 21 ' DWORD  - 1 Send all network packets for remote operatons in UTF16; 0 - default is UTF8
    WSMAN_OPTION_ENABLE_SPN_SERVER_PORT = 22 ' DWORD  - 1 When using negotiate, include port number in the connection SPN; 0 - default
    '  Used when not talking to the main OS on a machine but, for instance, a BMC
    WSMAN_OPTION_MACHINE_ID = 23 ' DWORD  - 1 Identify this machine to the server by including the MachineID header; 0 - default
                                    ' 
                                    '  other options
                                    ' 
    WSMAN_OPTION_LOCALE = 25 ' string - RFC 3066 language code
    WSMAN_OPTION_UI_LANGUAGE = 26 ' string - RFC 3066 language code
    WSMAN_OPTION_MAX_ENVELOPE_SIZE_KB = 28  ' DWORD - max SOAP envelope size (kb) - default 150kb from winrm config
                                            '  (see 'winrm help config' for more details); the client SOAP packet size cannot surpass
                                            '   this value; this value will be also sent to the server in the SOAP request as a
                                            '   MaxEnvelopeSize header; the server will use min(MaxEnvelopeSizeKb from server configuration,
                                            '   MaxEnvelopeSize value from SOAP).
    WSMAN_OPTION_SHELL_MAX_DATA_SIZE_PER_MESSAGE_KB = 29 ' DWORD (read only) - max data size (kb) provided by the client, guaranteed by
                                                            '   the winrm client implementation to fit into one SOAP packet; this is an
                                                            '  approximate value calculated based on the WSMAN_OPTION_MAX_ENVELOPE_SIZE_KB (default 500kb),
                                                            '  the maximum possible size of the SOAP headers and the overhead of the base64
                                                            '  encoding which is specific to WSManSendShellInput API; this option can be used
                                                            '  with WSManGetSessionOptionAsDword API; it cannot be used with WSManSetSessionOption API.
    WSMAN_OPTION_REDIRECT_LOCATION = 30 ' string - read-only, cannot set
    WSMAN_OPTION_SKIP_REVOCATION_CHECK = 31 ' DWORD  - 1 to not validate the revocation status on the server certificate; 0 - default
    WSMAN_OPTION_ALLOW_NEGOTIATE_IMPLICIT_CREDENTIALS = 32 ' DWORD  - 1 to allow default credentials for Negotiate (this is for SSL only); 0 - default
    WSMAN_OPTION_USE_SSL = 33 ' DWORD - When using just a machine name in the connection string use an SSL connection. 0 means HTTP, 1 means HTTPS.  Default is 0.
    WSMAN_OPTION_USE_INTEARACTIVE_TOKEN = 34 ' DWORD - When creating connection on local machine, use interactive token feature. 1 - default
End Enum

Public Declare PtrSafe Function WSManSetSessionOption Lib "WsmSvc.dll" (ByVal session As LongPtr, ByVal option As WSManSessionOption, data As WSMAN_DATA) As Long
Public Declare PtrSafe Function WSManGetSessionOptionAsDword Lib "WsmSvc.dll" (ByVal session As LongPtr, ByVal option As WSManSessionOption, value As Long) As Long
Public Declare PtrSafe Function WSManGetSessionOptionAsString Lib "WsmSvc.dll" (ByVal session As LongPtr, ByVal option As WSManSessionOption, ByVal stringLength As Long, ByVal str As LongPtr, stringLengthUsed As Long) As Long
Public DeclareWide PtrSafe Function WSManGetSessionOptionAsString Lib "WsmSvc.dll" (ByVal session As LongPtr, ByVal option As WSManSessionOption, ByVal stringLength As Long, ByVal str As String, stringLengthUsed As Long) As Long

Public Enum WSManCallbackFlags
    ' 
    '  Flag that marks the end of any single step of multistep operation
    ' 
    WSMAN_FLAG_CALLBACK_END_OF_OPERATION = &H1
    ' 
    '  WSMAN_SHELL_COMPLETION_FUNCTION API specific flags
    '   end of a particular stream; it is used for optimization purposes if the shell
    '   knows that no more output will occur for this stream; in some conditions this
    '   cannot be determined.
    ' 
    WSMAN_FLAG_CALLBACK_END_OF_STREAM = &H8
    '  Flag that if present on CreateShell callback indicates that it supports disconnect
    WSMAN_FLAG_CALLBACK_SHELL_SUPPORTS_DISCONNECT = &H20
    '  Flag that indicates that the shell got disconnected due to netowrk failure
    WSMAN_FLAG_CALLBACK_SHELL_AUTODISCONNECTED = &H40
    '  Flag indicates that the client shell detected a network failure
    WSMAN_FLAG_CALLBACK_NETWORK_FAILURE_DETECTED = &H100
    '  Flag indicates that client shell is retrying to establish network connection with the server
    WSMAN_FLAG_CALLBACK_RETRYING_AFTER_NETWORK_FAILURE = &H200
    '  Flag indicates that client shell successfully reconnected with the server after attempting to reconnect to the server
    WSMAN_FLAG_CALLBACK_RECONNECTED_AFTER_NETWORK_FAILURE = &H400
    '  Flag indicates that the client shell attempts to reconnect to the server failed and hence it is AutoDisconnecting
    WSMAN_FLAG_CALLBACK_SHELL_AUTODISCONNECTING = &H800
    '  Flag indicates that the client shell got into broken state in the middle of retry notification sequence due to some internal error at wsman layer
    WSMAN_FLAG_CALLBACK_RETRY_ABORTED_DUE_TO_INTERNAL_ERROR = &H1000
    '  Flag that indicates for a receive operation that a delay stream request has been processed
    WSMAN_FLAG_CALLBACK_RECEIVE_DELAY_STREAM_REQUEST_PROCESSED = &H2000
End Enum

Public Declare PtrSafe Function WSManCloseOperation Lib "WsmSvc.dll" (ByVal operationHandle As LongPtr, ByVal flags As Long) As Long

Public Const WSMAN_STREAM_ID_STDIN  = "stdin"
Public Const WSMAN_STREAM_ID_STDOUT  = "stdout"
Public Const WSMAN_STREAM_ID_STDERR  = "stderr"

Public Type WSMAN_STREAM_ID_SET
    streamIDsCount As Long
    streamIDs As LongPtr 'PCWSTR *
End Type

Public Type WSMAN_ENVIRONMENT_VARIABLE
    name As LongPtr
    value As LongPtr
End Type

Public Type WSMAN_ENVIRONMENT_VARIABLE_SET
    varsCount As Long
    vars As LongPtr 'WSMAN_ENVIRONMENT_VARIABLE*
End Type

Public Type WSMAN_SHELL_STARTUP_INFO_V10
    inputStreamSet As LongPtr 'WSMAN_STREAM_ID_SET*
    outputStreamSet As LongPtr 'WSMAN_STREAM_ID_SET*
    idleTimeoutMs As Long
    workingDirectory As LongPtr
    variableSet As LongPtr 'WSMAN_ENVIRONMENT_VARIABLE_SET*
End Type

Public Type WSMAN_SHELL_STARTUP_INFO_V11
    inputStreamSet As LongPtr 'WSMAN_STREAM_ID_SET*
    outputStreamSet As LongPtr 'WSMAN_STREAM_ID_SET*
    idleTimeoutMs As Long
    workingDirectory As LongPtr
    variableSet As LongPtr 'WSMAN_ENVIRONMENT_VARIABLE_SET*
    name As LongPtr
End Type

[Description("NOTE: For WSMAN_API_VERSION_1_1 only. For 1.0, use WSMAN_SHELL_STARTUP_INFO_V10")]
Public Type WSMAN_SHELL_STARTUP_INFO
    inputStreamSet As LongPtr 'WSMAN_STREAM_ID_SET*
    outputStreamSet As LongPtr 'WSMAN_STREAM_ID_SET*
    idleTimeoutMs As Long
    workingDirectory As LongPtr
    variableSet As LongPtr 'WSMAN_ENVIRONMENT_VARIABLE_SET*
    name As LongPtr
End Type

Public Type WSMAN_SHELL_DISCONNECT_INFO
    idleTimeoutMs As Long
End Type

Public Const WSMAN_SHELL_NS  = "http://schemas.microsoft.com/wbem/wsman/1/windows/shell"
Public Const WSMAN_SHELL_NS_LEN  = (LenB(WSMAN_SHELL_NS) / LenB(Of Integer) - 1)

Public Const WSMAN_CMDSHELL_URI  = "http://schemas.microsoft.com/wbem/wsman/1/windows/shell/cmd"
 
Public Enum WSManShellFlag
    ' Turn off compression for Send/Receive operations.  By default compression is
    ' turned on, but if communicating with a down-level box it may be necessary to
    ' do this.  Other reasons for turning it off is due to the extra memory consumption
    ' and CPU utilization that is used as a result of compression.
    WSMAN_FLAG_NO_COMPRESSION = &H1
    WSMAN_FLAG_DELETE_SERVER_SESSION = &H2
    ' Enable the service to drop operation output when running disconnected
    WSMAN_FLAG_SERVER_BUFFERING_MODE_DROP = &H4
    ' Enable the service to block operation progress when output buffers are full
    WSMAN_FLAG_SERVER_BUFFERING_MODE_BLOCK = &H8
    ' Enable receive call to not immediately retrieve results. Only applicable for Receive calls on commands
    WSMAN_FLAG_RECEIVE_DELAY_OUTPUT_STREAM = &H10
End Enum

Public Const WSMAN_CMDSHELL_OPTION_CODEPAGE  = "WINRS_CODEPAGE"
Public Const WSMAN_SHELL_OPTION_NOPROFILE  = "WINRS_NOPROFILE"
Public Const WSMAN_CMDSHELL_OPTION_CONSOLEMODE_STDIN  = "WINRS_CONSOLEMODE_STDIN"
Public Const WSMAN_CMDSHELL_OPTION_SKIP_CMD_SHELL  = "WINRS_SKIP_CMD_SHELL"
Public Const WSMAN_COMMAND_STATE_DONE  = WSMAN_SHELL_NS & "/CommandState/Done"
Public Const WSMAN_COMMAND_STATE_PENDING  = WSMAN_SHELL_NS & "/CommandState/Pending"
Public Const WSMAN_COMMAND_STATE_RUNNING  = WSMAN_SHELL_NS & "/CommandState/Running"

Public Type WSMAN_RECEIVE_DATA_RESULT
    streamId As LongPtr
    streamData As WSMAN_DATA
    commandState As LongPtr
    exitCode As Long
End Type

Public Type WSMAN_CONNECT_DATA
    data As WSMAN_DATA
End Type

Public Type WSMAN_CREATE_SHELL_DATA
    data As WSMAN_DATA
End Type

' typedef union _WSMAN_RESPONSE_DATA
' {
    ' WSMAN_RECEIVE_DATA_RESULT receiveData;
    ' WSMAN_CONNECT_DATA connectData;
    ' WSMAN_CREATE_SHELL_DATA createData;
' } WSMAN_RESPONSE_DATA;
Public Type WSMAN_RESPONSE_DATA
    #If Win64 Then
    u(39) As Byte
    #Else
    u(23) As Byte
    #End If
End Type

[Description("For API version 1.0, use WSMAN_SHELL_COMPLETION_FUNCTION_1_0")]
Public Delegate Sub WSMAN_SHELL_COMPLETION_FUNCTION (ByVal operationContext As LongPtr, ByVal flags As WSManCallbackFlags, error As WSMAN_ERROR, ByVal shell As LongPtr, ByVal command As LongPtr, ByVal operationHandle As LongPtr, data As WSMAN_RESPONSE_DATA)
Public Delegate Sub WSMAN_SHELL_COMPLETION_FUNCTION_1_0 (ByVal operationContext As LongPtr, ByVal flags As WSManCallbackFlags, error As WSMAN_ERROR, ByVal shell As LongPtr, ByVal command As LongPtr, ByVal operationHandle As LongPtr, data As WSMAN_RECEIVE_DATA_RESULT)
 
' Public Type WSMAN_SHELL_ASYNC
'     operationContext As LongPtr
'     completionFunction As WSMAN_SHELL_COMPLETION_FUNCTION
' End Type
Public Type WSMAN_SHELL_ASYNC
    operationContext As LongPtr
    completionFunction As LongPtr
End Type

Public Declare PtrSafe Sub WSManCreateShell Lib "WsmSvc.dll" (ByVal session As LongPtr, ByVal flags As Long, ByVal resourceUri As LongPtr, startupInfo As WSMAN_SHELL_STARTUP_INFO, options As WSMAN_OPTION_SET, createXml As WSMAN_DATA, async As WSMAN_SHELL_ASYNC, shell As LongPtr)

Public Type WSMAN_COMMAND_ARG_SET
    argsCount As Long
    args As LongPtr 'PCWSTR *
End Type

Public Declare PtrSafe Sub WSManRunShellCommand Lib "WsmSvc.dll" (ByVal shell As LongPtr, ByVal flags As Long, ByVal commandLine As LongPtr, args As WSMAN_COMMAND_ARG_SET, options As WSMAN_OPTION_SET, async As WSMAN_SHELL_ASYNC, command As LongPtr)

Public Const WSMAN_SIGNAL_SHELL_CODE_TERMINATE  = WSMAN_SHELL_NS & "/signal/terminate"
Public Const WSMAN_SIGNAL_SHELL_CODE_CTRL_C  = WSMAN_SHELL_NS & "/signal/ctrl_c"
Public Const WSMAN_SIGNAL_SHELL_CODE_CTRL_BREAK  = WSMAN_SHELL_NS & "/signal/ctrl_break"

Public Declare PtrSafe Sub WSManSignalShell Lib "WsmSvc.dll" (ByVal shell As LongPtr, ByVal command As LongPtr, ByVal flags As Long, ByVal code As LongPtr, async As WSMAN_SHELL_ASYNC, signalOperation As LongPtr)
Public Declare PtrSafe Sub WSManReceiveShellOutput Lib "WsmSvc.dll" (ByVal shell As LongPtr, ByVal command As LongPtr, ByVal flags As Long, desiredStreamSet As WSMAN_STREAM_ID_SET, async As WSMAN_SHELL_ASYNC, receiveOperation As LongPtr)
Public Declare PtrSafe Sub WSManSendShellInput Lib "WsmSvc.dll" (ByVal shell As LongPtr, ByVal command As LongPtr, ByVal flags As Long, ByVal streamId As LongPtr, streamData As WSMAN_DATA, ByVal endOfStream As BOOL, async As WSMAN_SHELL_ASYNC, sendOperation As LongPtr)
Public Declare PtrSafe Sub WSManCloseCommand Lib "WsmSvc.dll" (ByVal commandHandle As LongPtr, ByVal flags As Long, async As WSMAN_SHELL_ASYNC)
Public Declare PtrSafe Sub WSManCloseShell Lib "WsmSvc.dll" (ByVal shellHandle As LongPtr, ByVal flags As Long, async As WSMAN_SHELL_ASYNC)

Public Declare PtrSafe Sub WSManCreateShellEx Lib "WsmSvc.dll" (ByVal session As LongPtr, ByVal flags As Long, ByVal resourceUri As LongPtr, ByVal shellId As LongPtr, startupInfo As WSMAN_SHELL_STARTUP_INFO, options As WSMAN_OPTION_SET, createXml As WSMAN_DATA, async As WSMAN_SHELL_ASYNC, shell As LongPtr)
Public Declare PtrSafe Sub WSManRunShellCommandEx Lib "WsmSvc.dll" (ByVal shell As LongPtr, ByVal flags As Long, ByVal commandId As LongPtr, ByVal commandLine As LongPtr, args As WSMAN_COMMAND_ARG_SET, options As WSMAN_OPTION_SET, async As WSMAN_SHELL_ASYNC, command As LongPtr)
Public Declare PtrSafe Sub WSManDisconnectShell Lib "WsmSvc.dll" (ByVal shell As LongPtr, ByVal flags As Long, disconnectInfo As WSMAN_SHELL_DISCONNECT_INFO, async As WSMAN_SHELL_ASYNC)
Public Declare PtrSafe Sub WSManReconnectShell Lib "WsmSvc.dll" (ByVal shell As LongPtr, ByVal flags As Long, async As WSMAN_SHELL_ASYNC)
Public Declare PtrSafe Sub WSManReconnectShellCommand Lib "WsmSvc.dll" (ByVal commandHandle As LongPtr, ByVal flags As Long, async As WSMAN_SHELL_ASYNC)
Public Declare PtrSafe Sub WSManConnectShell Lib "WsmSvc.dll" (ByVal session As LongPtr, ByVal flags As Long, ByVal resourceUri As LongPtr, ByVal shellID As LongPtr, options As WSMAN_OPTION_SET, connectXml As WSMAN_DATA, async As WSMAN_SHELL_ASYNC, shell As LongPtr)
Public Declare PtrSafe Sub WSManConnectShellCommand Lib "WsmSvc.dll" (ByVal shell As LongPtr, ByVal flags As Long, ByVal commandId As LongPtr, options As WSMAN_OPTION_SET, connectXml As WSMAN_DATA, async As WSMAN_SHELL_ASYNC, command As LongPtr)

Public Type WSMAN_CERTIFICATE_DETAILS
    subject As LongPtr ' Certificate subject in distinguished form
                        ' Ex: "CN=xyz.com, OU=xyz management, O=Microsoft, L=Redmond, S=Washington, C=US"
    issuerName As LongPtr ' Certificate issuer in distinguished form
                    ' Ex: "CN=Microsoft Secure Server Authority, DC=redmond, DC=corp, DC=microsoft, DC=com"
    issuerThumbprint As LongPtr ' Thumbprint of Certificate issuer
    subjectName As LongPtr ' Certificate Subject Alternative Name (SAN) if available or subject Common Name (CN)
                          ' Ex: "xyz.com"
End Type

Public Type WSMAN_SENDER_DETAILS
    senderName As LongPtr ' Username of the sender 
    authenticationMechanism As LongPtr ' 
    certificateDetails As LongPtr 'WSMAN_CERTIFICATE_DETAILS* ' valid only if the authentication is client certificates
    clientToken As LongPtr
    httpURL As LongPtr
End Type

Public Type WSMAN_PLUGIN_REQUEST
    senderDetails As LongPtr 'WSMAN_SENDER_DETAILS*
    locale As LongPtr
    resourceUri As LongPtr
    operationInfo As LongPtr 'WSMAN_OPERATION_INFO*
    shutdownNotification As BOOL
    shutdownNotificationHandle As LongPtr
    dataLocale As LongPtr
End Type

Public Declare PtrSafe Function WSManPluginReportContext Lib "WsmSvc.dll" (requestDetails As WSMAN_PLUGIN_REQUEST, ByVal flags As Long, ByVal context As LongPtr) As Long

Public Delegate Sub WSMAN_PLUGIN_RELEASE_SHELL_CONTEXT (ByVal shellContext As LongPtr)
Public Delegate Sub WSMAN_PLUGIN_RELEASE_COMMAND_CONTEXT (ByVal shellContext As LongPtr, ByVal commandContext As LongPtr)
    
Public Enum WsManPluginRcvFlags
    WSMAN_FLAG_RECEIVE_RESULT_NO_MORE_DATA = 1
    WSMAN_FLAG_RECEIVE_FLUSH = 2
    WSMAN_FLAG_RECEIVE_RESULT_DATA_BOUNDARY = 4
End Enum

Public Declare PtrSafe Function WSManPluginReceiveResult Lib "WsmSvc.dll" (requestDetails As WSMAN_PLUGIN_REQUEST, ByVal flags As WsManPluginRcvFlags, ByVal stream As LongPtr, streamResult As WSMAN_DATA, ByVal commandState As LongPtr, ByVal exitCode As Long) As Long
Public Declare PtrSafe Function WSManPluginOperationComplete Lib "WsmSvc.dll" (requestDetails As WSMAN_PLUGIN_REQUEST, ByVal flags As Long, ByVal exitCode As Long, Optional ByVal extendedInformation As LongPtr) As Long

Public Enum WsManPluginOpParams
    WSMAN_PLUGIN_PARAMS_MAX_ENVELOPE_SIZE = 1
    WSMAN_PLUGIN_PARAMS_TIMEOUT = 2
    WSMAN_PLUGIN_PARAMS_REMAINING_RESULT_SIZE = 3
    WSMAN_PLUGIN_PARAMS_LARGEST_RESULT_SIZE = 4
    WSMAN_PLUGIN_PARAMS_GET_REQUESTED_LOCALE = 5 /* Returns WSMAN_DATA_TEXT */
    WSMAN_PLUGIN_PARAMS_GET_REQUESTED_DATA_LOCALE = 6 /* Returns WSMAN_DATA_TEXT */
End Enum
Public Declare PtrSafe Function WSManPluginGetOperationParameters Lib "WsmSvc.dll" (requestDetails As WSMAN_PLUGIN_REQUEST, ByVal flags As WsManPluginOpParams, data As WSMAN_DATA) As Long

Public Enum WsManPluginCfgParams
    WSMAN_PLUGIN_PARAMS_SHAREDHOST = 1
    WSMAN_PLUGIN_PARAMS_RUNAS_USER = 2
    WSMAN_PLUGIN_PARAMS_AUTORESTART = 3
    WSMAN_PLUGIN_PARAMS_HOSTIDLETIMEOUTSECONDS = 4
    WSMAN_PLUGIN_PARAMS_NAME = 5
End Enum
Public Declare PtrSafe Function WSManPluginGetConfiguration Lib "WsmSvc.dll" (ByVal pluginContext As LongPtr, ByVal flags As WsManPluginCfgParams, data As WSMAN_DATA) As Long

Public Declare PtrSafe Function WSManPluginReportCompletion Lib "WsmSvc.dll" (ByVal pluginContext As LongPtr, ByVal flags As Long) As Long

Public Declare PtrSafe Function WSManPluginFreeRequestDetails Lib "WsmSvc.dll" (requestDetails As WSMAN_PLUGIN_REQUEST) As Long

Public Enum WsManPluginStartupFlags
    WSMAN_PLUGIN_STARTUP_REQUEST_RECEIVED = &H0
    WSMAN_PLUGIN_STARTUP_AUTORESTARTED_REBOOT = &H1
    WSMAN_PLUGIN_STARTUP_AUTORESTARTED_CRASH = &H2
End Enum
Public Delegate Function WSMAN_PLUGIN_STARTUP (ByVal flags As WsManPluginStartupFlags, ByVal applicationIdentification As LongPtr, ByVal extraInfo As LongPtr, pluginContext As LongPtr) As Long

Public Enum WsManPluginShutdownFlags
    WSMAN_PLUGIN_SHUTDOWN_SYSTEM = 1
    WSMAN_PLUGIN_SHUTDOWN_SERVICE = 2
    WSMAN_PLUGIN_SHUTDOWN_IISHOST = 3
    WSMAN_PLUGIN_SHUTDOWN_IDLETIMEOUT_ELAPSED = 4
End Enum
Public Delegate Function WSMAN_PLUGIN_SHUTDOWN (ByVal pluginContext As LongPtr, ByVal flags As Long, ByVal reason As WsManPluginShutdownFlags) As Long

Public Delegate Sub WSMAN_PLUGIN_SHELL (ByVal pluginContext As LongPtr, requestDetails As WSMAN_PLUGIN_REQUEST, ByVal flags As Long, startupInfo As WSMAN_SHELL_STARTUP_INFO, inboundShellInformation As WSMAN_DATA)

Public Delegate Sub WSMAN_PLUGIN_COMMAND (requestDetails As WSMAN_PLUGIN_REQUEST, ByVal flags As Long, ByVal shellContext As LongPtr, ByVal commandLine As LongPtr, arguments As WSMAN_COMMAND_ARG_SET)

Public Enum WsManPluginSendFlags
    WSMAN_FLAG_SEND_NO_MORE_DATA = 1
End Enum
Public Delegate Sub WSMAN_PLUGIN_SEND (requestDetails As WSMAN_PLUGIN_REQUEST, ByVal flags As WsManPluginSendFlags, ByVal shellContext As LongPtr, ByVal commandContext As LongPtr, ByVal stream As LongPtr, inboundData As WSMAN_DATA)

Public Delegate Sub WSMAN_PLUGIN_RECEIVE (requestDetails As WSMAN_PLUGIN_REQUEST, ByVal flags As Long, ByVal shellContext As LongPtr, ByVal commandContext As LongPtr, streamSet As WSMAN_STREAM_ID_SET)

Public Delegate Sub WSMAN_PLUGIN_SIGNAL (requestDetails As WSMAN_PLUGIN_REQUEST, ByVal flags As Long, ByVal shellContext As LongPtr, ByVal commandContext As LongPtr, ByVal code As Long)

Public Delegate Sub WSMAN_PLUGIN_CONNECT (requestDetails As WSMAN_PLUGIN_REQUEST, ByVal flags As Long, ByVal shellContext As LongPtr, ByVal commandContext As LongPtr, inboundConnectInformation As WSMAN_DATA)
    
Public Type WSMAN_AUTHZ_QUOTA
    maxAllowedConcurrentShells As Long
    maxAllowedConcurrentOperations As Long
    timeslotSize As Long
    maxAllowedOperationsPerTimeslot As Long
End Type

Public Delegate Sub WSMAN_PLUGIN_AUTHORIZE_USER (ByVal pluginContext As LongPtr, senderDetails As WSMAN_SENDER_DETAILS, ByVal flags As Long)

Public Delegate Sub WSMAN_PLUGIN_AUTHORIZE_OPERATION (ByVal pluginContext As LongPtr, senderDetails As WSMAN_SENDER_DETAILS, ByVal flags As Long, ByVal operation As Long, ByVal action As LongPtr, ByVal resourceUri As LongPtr)
    
Public Delegate Sub WSMAN_PLUGIN_AUTHORIZE_QUERY_QUOTA (ByVal pluginContext As LongPtr, senderDetails As WSMAN_SENDER_DETAILS, ByVal flags As Long)

Public Delegate Sub WSMAN_PLUGIN_AUTHORIZE_RELEASE_CONTEXT (ByVal userAuthorizationContext As LongPtr)

Public Declare PtrSafe Function WSManPluginAuthzUserComplete Lib "WsmSvc.dll" (senderDetails As WSMAN_SENDER_DETAILS, ByVal flags As Long, ByVal userAuthorizationContext As LongPtr, ByVal impersonationToken As LongPtr, ByVal userIsAdministrator As BOOL, ByVal errorCode As Long, Optional ByVal extendedErrorInformation As LongPtr) As Long
Public Declare PtrSafe Function WSManPluginAuthzOperationComplete Lib "WsmSvc.dll" (senderDetails As WSMAN_SENDER_DETAILS, ByVal flags As Long, ByVal userAuthorizationContext As LongPtr, ByVal errorCode As Long, Optional ByVal extendedErrorInformation As LongPtr) As Long
Public Declare PtrSafe Function WSManPluginAuthzQueryQuotaComplete Lib "WsmSvc.dll" (senderDetails As WSMAN_SENDER_DETAILS, ByVal flags As Long, quota As WSMAN_AUTHZ_QUOTA, ByVal errorCode As Long, Optional ByVal extendedErrorInformation As LongPtr) As Long



End Module