'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'Windows Connect Now
'WcnApi.h - 100%
'WcnTypes.h - 100%
'WcnDevice.h - 100%
'WcnFunctionDiscoveryKeys.h - 100%


[InterfaceId("C100BE9C-D33A-4a4b-BF23-BBEF4663D017")]
[OleAutomation(False)]
Interface IWCNDevice Extends IUnknown
    Sub SetPassword(ByVal Type As WCN_PASSWORD_TYPE, ByVal dwPasswordLength As Long, pbPassword As Any)
    Sub Connect(ByVal pNotify As IWCNConnectNotify)
    Sub GetAttribute(ByVal AttributeType As WCN_ATTRIBUTE_TYPE, ByVal dwMaxBufferSize As Long, pbBuffer As Any, pdwBufferUsed As Long)
    Sub GetIntegerAttribute(ByVal AttributeType As WCN_ATTRIBUTE_TYPE, puInteger As Long)
    Sub GetStringAttribute(ByVal AttributeType As WCN_ATTRIBUTE_TYPE, ByVal cchMaxString As Long, ByVal wszString As String)
    Sub GetNetworkProfile(ByVal cchMaxStringLength As Long, ByVal wszProfile As String)
    Sub SetNetworkProfile(ByVal pszProfileXml As String)
    Sub GetVendorExtension(pVendorExtSpec As WCN_VENDOR_EXTENSION_SPEC, ByVal dwMaxBufferSize As Long, pbBuffer As Any, pdwBufferUsed As Long)
    Sub SetVendorExtension(pVendorExtSpec As WCN_VENDOR_EXTENSION_SPEC, ByVal cbBuffer As Long, pbBuffer As Any)
    Sub Unadvise()
    Sub SetNFCPasswordParams(ByVal Type As WCN_PASSWORD_TYPE, ByVal dwOOBPasswordID As Long, ByVal dwPasswordLength As Long, pbPassword As Any, ByVal dwRemotePublicKeyHashLength As Long, pbRemotePublicKeyHash As Any, ByVal dwDHKeyBlobLength As Long, pbDHKeyBlob As Any)
End Interface

[InterfaceId("C100BE9F-D33A-4a4b-BF23-BBEF4663D017")]
[OleAutomation(False)]
Interface IWCNConnectNotify Extends IUnknown
    Sub ConnectSucceeded()
    Sub ConnectFailed(ByVal hrFailure As Long)
End Interface

'CLSID_WCNDeviceObject
[CoClassId("C100BEA7-D33A-4a4b-BF23-BBEF4663D017")]
CoClass WCNDeviceObject
    [Default] Interface IWCNDevice
End CoClass



Module wdWCN

    Public Const WCN_E_PEER_NOT_FOUND = &H80043c01
    Public Const WCN_E_AUTHENTICATION_FAILED = &H80043c02
    Public Const WCN_E_CONNECTION_REJECTED = &H80043c03
    Public Const WCN_E_SESSION_TIMEDOUT = &H80043c04
    Public Const WCN_E_PROTOCOL_ERROR = &H80043c05

    Public Const WCN_QUERY_CONSTRAINT_USE_SOFTAP = "WCN.Discovery.SoftAP"
    
    Public Enum WCN_ATTRIBUTE_TYPE
        WCN_TYPE_AP_CHANNEL = 0
        WCN_TYPE_ASSOCIATION_STATE = (WCN_TYPE_AP_CHANNEL + 1)
        WCN_TYPE_AUTHENTICATION_TYPE = (WCN_TYPE_ASSOCIATION_STATE + 1)
        WCN_TYPE_AUTHENTICATION_TYPE_FLAGS = (WCN_TYPE_AUTHENTICATION_TYPE + 1)
        WCN_TYPE_AUTHENTICATOR = (WCN_TYPE_AUTHENTICATION_TYPE_FLAGS + 1)
        WCN_TYPE_CONFIG_METHODS = (WCN_TYPE_AUTHENTICATOR + 1)
        WCN_TYPE_CONFIGURATION_ERROR = (WCN_TYPE_CONFIG_METHODS + 1)
        WCN_TYPE_CONFIRMATION_URL4 = (WCN_TYPE_CONFIGURATION_ERROR + 1)
        WCN_TYPE_CONFIRMATION_URL6 = (WCN_TYPE_CONFIRMATION_URL4 + 1)
        WCN_TYPE_CONNECTION_TYPE = (WCN_TYPE_CONFIRMATION_URL6 + 1)
        WCN_TYPE_CONNECTION_TYPE_FLAGS = (WCN_TYPE_CONNECTION_TYPE + 1)
        WCN_TYPE_CREDENTIAL = (WCN_TYPE_CONNECTION_TYPE_FLAGS + 1)
        WCN_TYPE_DEVICE_NAME = (WCN_TYPE_CREDENTIAL + 1)
        WCN_TYPE_DEVICE_PASSWORD_ID = (WCN_TYPE_DEVICE_NAME + 1)
        WCN_TYPE_E_HASH1 = (WCN_TYPE_DEVICE_PASSWORD_ID + 1)
        WCN_TYPE_E_HASH2 = (WCN_TYPE_E_HASH1 + 1)
        WCN_TYPE_E_SNONCE1 = (WCN_TYPE_E_HASH2 + 1)
        WCN_TYPE_E_SNONCE2 = (WCN_TYPE_E_SNONCE1 + 1)
        WCN_TYPE_ENCRYPTED_SETTINGS = (WCN_TYPE_E_SNONCE2 + 1)
        WCN_TYPE_ENCRYPTION_TYPE = (WCN_TYPE_ENCRYPTED_SETTINGS + 1)
        WCN_TYPE_ENCRYPTION_TYPE_FLAGS = (WCN_TYPE_ENCRYPTION_TYPE + 1)
        WCN_TYPE_ENROLLEE_NONCE = (WCN_TYPE_ENCRYPTION_TYPE_FLAGS + 1)
        WCN_TYPE_FEATURE_ID = (WCN_TYPE_ENROLLEE_NONCE + 1)
        WCN_TYPE_IDENTITY = (WCN_TYPE_FEATURE_ID + 1)
        WCN_TYPE_IDENTITY_PROOF = (WCN_TYPE_IDENTITY + 1)
        WCN_TYPE_KEY_WRAP_AUTHENTICATOR = (WCN_TYPE_IDENTITY_PROOF + 1)
        WCN_TYPE_KEY_IDENTIFIER = (WCN_TYPE_KEY_WRAP_AUTHENTICATOR + 1)
        WCN_TYPE_MAC_ADDRESS = (WCN_TYPE_KEY_IDENTIFIER + 1)
        WCN_TYPE_MANUFACTURER = (WCN_TYPE_MAC_ADDRESS + 1)
        WCN_TYPE_MESSAGE_TYPE = (WCN_TYPE_MANUFACTURER + 1)
        WCN_TYPE_MODEL_NAME = (WCN_TYPE_MESSAGE_TYPE + 1)
        WCN_TYPE_MODEL_NUMBER = (WCN_TYPE_MODEL_NAME + 1)
        WCN_TYPE_NETWORK_INDEX = (WCN_TYPE_MODEL_NUMBER + 1)
        WCN_TYPE_NETWORK_KEY = (WCN_TYPE_NETWORK_INDEX + 1)
        WCN_TYPE_NETWORK_KEY_INDEX = (WCN_TYPE_NETWORK_KEY + 1)
        WCN_TYPE_NEW_DEVICE_NAME = (WCN_TYPE_NETWORK_KEY_INDEX + 1)
        WCN_TYPE_NEW_PASSWORD = (WCN_TYPE_NEW_DEVICE_NAME + 1)
        WCN_TYPE_OOB_DEVICE_PASSWORD = (WCN_TYPE_NEW_PASSWORD + 1)
        WCN_TYPE_OS_VERSION = (WCN_TYPE_OOB_DEVICE_PASSWORD + 1)
        WCN_TYPE_POWER_LEVEL = (WCN_TYPE_OS_VERSION + 1)
        WCN_TYPE_PSK_CURRENT = (WCN_TYPE_POWER_LEVEL + 1)
        WCN_TYPE_PSK_MAX = (WCN_TYPE_PSK_CURRENT + 1)
        WCN_TYPE_PUBLIC_KEY = (WCN_TYPE_PSK_MAX + 1)
        WCN_TYPE_RADIO_ENABLED = (WCN_TYPE_PUBLIC_KEY + 1)
        WCN_TYPE_REBOOT = (WCN_TYPE_RADIO_ENABLED + 1)
        WCN_TYPE_REGISTRAR_CURRENT = (WCN_TYPE_REBOOT + 1)
        WCN_TYPE_REGISTRAR_ESTABLISHED = (WCN_TYPE_REGISTRAR_CURRENT + 1)
        WCN_TYPE_REGISTRAR_LIST = (WCN_TYPE_REGISTRAR_ESTABLISHED + 1)
        WCN_TYPE_REGISTRAR_MAX = (WCN_TYPE_REGISTRAR_LIST + 1)
        WCN_TYPE_REGISTRAR_NONCE = (WCN_TYPE_REGISTRAR_MAX + 1)
        WCN_TYPE_REQUEST_TYPE = (WCN_TYPE_REGISTRAR_NONCE + 1)
        WCN_TYPE_RESPONSE_TYPE = (WCN_TYPE_REQUEST_TYPE + 1)
        WCN_TYPE_RF_BANDS = (WCN_TYPE_RESPONSE_TYPE + 1)
        WCN_TYPE_R_HASH1 = (WCN_TYPE_RF_BANDS + 1)
        WCN_TYPE_R_HASH2 = (WCN_TYPE_R_HASH1 + 1)
        WCN_TYPE_R_SNONCE1 = (WCN_TYPE_R_HASH2 + 1)
        WCN_TYPE_R_SNONCE2 = (WCN_TYPE_R_SNONCE1 + 1)
        WCN_TYPE_SELECTED_REGISTRAR = (WCN_TYPE_R_SNONCE2 + 1)
        WCN_TYPE_SERIAL_NUMBER = (WCN_TYPE_SELECTED_REGISTRAR + 1)
        WCN_TYPE_WI_FI_PROTECTED_SETUP_STATE = (WCN_TYPE_SERIAL_NUMBER + 1)
        WCN_TYPE_SSID = (WCN_TYPE_WI_FI_PROTECTED_SETUP_STATE + 1)
        WCN_TYPE_TOTAL_NETWORKS = (WCN_TYPE_SSID + 1)
        WCN_TYPE_UUID_E = (WCN_TYPE_TOTAL_NETWORKS + 1)
        WCN_TYPE_UUID_R = (WCN_TYPE_UUID_E + 1)
        WCN_TYPE_VENDOR_EXTENSION = (WCN_TYPE_UUID_R + 1)
        WCN_TYPE_VERSION = (WCN_TYPE_VENDOR_EXTENSION + 1)
        WCN_TYPE_X_509_CERTIFICATE_REQUEST = (WCN_TYPE_VERSION + 1)
        WCN_TYPE_X_509_CERTIFICATE = (WCN_TYPE_X_509_CERTIFICATE_REQUEST + 1)
        WCN_TYPE_EAP_IDENTITY = (WCN_TYPE_X_509_CERTIFICATE + 1)
        WCN_TYPE_MESSAGE_COUNTER = (WCN_TYPE_EAP_IDENTITY + 1)
        WCN_TYPE_PUBLIC_KEY_HASH = (WCN_TYPE_MESSAGE_COUNTER + 1)
        WCN_TYPE_REKEY_KEY = (WCN_TYPE_PUBLIC_KEY_HASH + 1)
        WCN_TYPE_KEY_LIFETIME = (WCN_TYPE_REKEY_KEY + 1)
        WCN_TYPE_PERMITTED_CONFIG_METHODS = (WCN_TYPE_KEY_LIFETIME + 1)
        WCN_TYPE_SELECTED_REGISTRAR_CONFIG_METHODS = (WCN_TYPE_PERMITTED_CONFIG_METHODS + 1)
        WCN_TYPE_PRIMARY_DEVICE_TYPE = (WCN_TYPE_SELECTED_REGISTRAR_CONFIG_METHODS + 1)
        WCN_TYPE_SECONDARY_DEVICE_TYPE_LIST = (WCN_TYPE_PRIMARY_DEVICE_TYPE + 1)
        WCN_TYPE_PORTABLE_DEVICE = (WCN_TYPE_SECONDARY_DEVICE_TYPE_LIST + 1)
        WCN_TYPE_AP_SETUP_LOCKED = (WCN_TYPE_PORTABLE_DEVICE + 1)
        WCN_TYPE_APPLICATION_EXTENSION = (WCN_TYPE_AP_SETUP_LOCKED + 1)
        WCN_TYPE_EAP_TYPE = (WCN_TYPE_APPLICATION_EXTENSION + 1)
        WCN_TYPE_INITIALIZATION_VECTOR = (WCN_TYPE_EAP_TYPE + 1)
        WCN_TYPE_KEY_PROVIDED_AUTOMATICALLY = (WCN_TYPE_INITIALIZATION_VECTOR + 1)
        WCN_TYPE_802_1X_ENABLED = (WCN_TYPE_KEY_PROVIDED_AUTOMATICALLY + 1)
        WCN_TYPE_APPSESSIONKEY = (WCN_TYPE_802_1X_ENABLED + 1)
        WCN_TYPE_WEPTRANSMITKEY = (WCN_TYPE_APPSESSIONKEY + 1)
        WCN_TYPE_UUID = (WCN_TYPE_WEPTRANSMITKEY + 1)
        WCN_TYPE_PRIMARY_DEVICE_TYPE_CATEGORY = (WCN_TYPE_UUID + 1)
        WCN_TYPE_PRIMARY_DEVICE_TYPE_SUBCATEGORY_OUI = (WCN_TYPE_PRIMARY_DEVICE_TYPE_CATEGORY + 1)
        WCN_TYPE_PRIMARY_DEVICE_TYPE_SUBCATEGORY = (WCN_TYPE_PRIMARY_DEVICE_TYPE_SUBCATEGORY_OUI + 1)
        WCN_TYPE_CURRENT_SSID = (WCN_TYPE_PRIMARY_DEVICE_TYPE_SUBCATEGORY + 1)
        WCN_TYPE_BSSID = (WCN_TYPE_CURRENT_SSID + 1)
        WCN_TYPE_DOT11_MAC_ADDRESS = (WCN_TYPE_BSSID + 1)
        WCN_TYPE_AUTHORIZED_MACS = (WCN_TYPE_DOT11_MAC_ADDRESS + 1)
        WCN_TYPE_NETWORK_KEY_SHAREABLE = (WCN_TYPE_AUTHORIZED_MACS + 1)
        WCN_TYPE_REQUEST_TO_ENROLL = (WCN_TYPE_NETWORK_KEY_SHAREABLE + 1)
        WCN_TYPE_REQUESTED_DEVICE_TYPE = (WCN_TYPE_REQUEST_TO_ENROLL + 1)
        WCN_TYPE_SETTINGS_DELAY_TIME = (WCN_TYPE_REQUESTED_DEVICE_TYPE + 1)
        WCN_TYPE_VERSION2 = (WCN_TYPE_SETTINGS_DELAY_TIME + 1)
        WCN_TYPE_VENDOR_EXTENSION_WFA = (WCN_TYPE_VERSION2 + 1)
        WCN_NUM_ATTRIBUTE_TYPES = (WCN_TYPE_VENDOR_EXTENSION_WFA + 1)
    End Enum
    
    Public Enum WCN_VALUE_TYPE_VERSION
        WCN_VALUE_VERSION_1_0 = &H10
        WCN_VALUE_VERSION_2_0 = &H20
    End Enum
    
    Public Enum WCN_VALUE_TYPE_BOOLEAN
        WCN_VALUE_FALSE = 0
        WCN_VALUE_TRUE = 1
    End Enum
    
    Public Enum WCN_VALUE_TYPE_ASSOCIATION_STATE
        WCN_VALUE_AS_NOT_ASSOCIATED = 0
        WCN_VALUE_AS_CONNECTION_SUCCESS = 1
        WCN_VALUE_AS_CONFIGURATION_FAILURE = 2
        WCN_VALUE_AS_ASSOCIATION_FAILURE = 3
        WCN_VALUE_AS_IP_FAILURE = 4
    End Enum
    
    Public Enum WCN_VALUE_TYPE_AUTHENTICATION_TYPE
        WCN_VALUE_AT_OPEN = &H1
        WCN_VALUE_AT_WPAPSK = &H2
        WCN_VALUE_AT_SHARED = &H4
        WCN_VALUE_AT_WPA = &H8
        WCN_VALUE_AT_WPA2 = &H10
        WCN_VALUE_AT_WPA2PSK = &H20
        WCN_VALUE_AT_WPAWPA2PSK_MIXED = &H22
    End Enum
    
    Public Enum WCN_VALUE_TYPE_CONFIG_METHODS
        WCN_VALUE_CM_USBA = &H1
        WCN_VALUE_CM_ETHERNET = &H2
        WCN_VALUE_CM_LABEL = &H4
        WCN_VALUE_CM_DISPLAY = &H8
        WCN_VALUE_CM_EXTERNAL_NFC = &H10
        WCN_VALUE_CM_INTEGRATED_NFC = &H20
        WCN_VALUE_CM_NFC_INTERFACE = &H40
        WCN_VALUE_CM_PUSHBUTTON = &H80
        WCN_VALUE_CM_KEYPAD = &H100
        WCN_VALUE_CM_VIRT_PUSHBUTTON = &H280
        WCN_VALUE_CM_PHYS_PUSHBUTTON = &H480
        WCN_VALUE_CM_VIRT_DISPLAY = &H2008
        WCN_VALUE_CM_PHYS_DISPLAY = &H4008
    End Enum
    
    Public Enum WCN_VALUE_TYPE_CONFIGURATION_ERROR
        WCN_VALUE_CE_NO_ERROR = 0
        WCN_VALUE_CE_OOB_INTERFACE_READ_ERROR = 1
        WCN_VALUE_CE_DECRYPTION_CRC_FAILURE = 2
        WCN_VALUE_CE_2_4_CHANNEL_NOT_SUPPORTED = 3
        WCN_VALUE_CE_5_0_CHANNEL_NOT_SUPPORTED = 4
        WCN_VALUE_CE_SIGNAL_TOO_WEAK = 5
        WCN_VALUE_CE_NETWORK_AUTHENTICATION_FAILURE = 6
        WCN_VALUE_CE_NETWORK_ASSOCIATION_FAILURE = 7
        WCN_VALUE_CE_NO_DHCP_RESPONSE = 8
        WCN_VALUE_CE_FAILED_DHCP_CONFIG = 9
        WCN_VALUE_CE_IP_ADDRESS_CONFLICT = 10
        WCN_VALUE_CE_COULD_NOT_CONNECT_TO_REGISTRAR = 11
        WCN_VALUE_CE_MULTIPLE_PBC_SESSIONS_DETECTED = 12
        WCN_VALUE_CE_ROGUE_ACTIVITY_SUSPECTED = 13
        WCN_VALUE_CE_DEVICE_BUSY = 14
        WCN_VALUE_CE_SETUP_LOCKED = 15
        WCN_VALUE_CE_MESSAGE_TIMEOUT = 16
        WCN_VALUE_CE_REGISTRATION_SESSION_TIMEOUT = 17
        WCN_VALUE_CE_DEVICE_PASSWORD_AUTH_FAILURE = 18
    End Enum
    
    Public Enum WCN_VALUE_TYPE_CONNECTION_TYPE
        WCN_VALUE_CT_ESS = 1
        WCN_VALUE_CT_IBSS = 2
    End Enum
    
    Public Enum WCN_VALUE_TYPE_DEVICE_PASSWORD_ID
        WCN_VALUE_DP_DEFAULT = 0
        WCN_VALUE_DP_USER_SPECIFIED = &H1
        WCN_VALUE_DP_MACHINE_SPECIFIED = &H2
        WCN_VALUE_DP_REKEY = &H3
        WCN_VALUE_DP_PUSHBUTTON = &H4
        WCN_VALUE_DP_REGISTRAR_SPECIFIED = &H5
        WCN_VALUE_DP_NFC_CONNECTION_HANDOVER = &H7
        WCN_VALUE_DP_WFD_SERVICES = &H8
        WCN_VALUE_DP_OUTOFBAND_MIN = &H10
        WCN_VALUE_DP_OUTOFBAND_MAX = &Hffff&
    End Enum
    
    Public Enum WCN_VALUE_TYPE_ENCRYPTION_TYPE
        WCN_VALUE_ET_NONE = &H1
        WCN_VALUE_ET_WEP = &H2
        WCN_VALUE_ET_TKIP = &H4
        WCN_VALUE_ET_AES = &H8
        WCN_VALUE_ET_TKIP_AES_MIXED = &Hc
    End Enum
    
    Public Enum WCN_VALUE_TYPE_MESSAGE_TYPE
        WCN_VALUE_MT_BEACON = &H1
        WCN_VALUE_MT_PROBE_REQUEST = &H2
        WCN_VALUE_MT_PROBE_RESPONSE = &H3
        WCN_VALUE_MT_M1 = &H4
        WCN_VALUE_MT_M2 = &H5
        WCN_VALUE_MT_M2D = &H6
        WCN_VALUE_MT_M3 = &H7
        WCN_VALUE_MT_M4 = &H8
        WCN_VALUE_MT_M5 = &H9
        WCN_VALUE_MT_M6 = &Ha
        WCN_VALUE_MT_M7 = &Hb
        WCN_VALUE_MT_M8 = &Hc
        WCN_VALUE_MT_ACK = &Hd
        WCN_VALUE_MT_NACK = &He
        WCN_VALUE_MT_DONE = &Hf
    End Enum
    
    Public Enum WCN_VALUE_TYPE_REQUEST_TYPE
        WCN_VALUE_ReqT_ENROLLEE_INFO = 0
        WCN_VALUE_ReqT_ENROLLEE_OPEN_1X = &H1
        WCN_VALUE_ReqT_REGISTRAR = &H2
        WCN_VALUE_ReqT_MANAGER_REGISTRAR = &H3
    End Enum
    
    Public Enum WCN_VALUE_TYPE_RESPONSE_TYPE
        WCN_VALUE_RspT_ENROLLEE_INFO = 0
        WCN_VALUE_RspT_ENROLLEE_OPEN_1X = &H1
        WCN_VALUE_RspT_REGISTRAR = &H2
        WCN_VALUE_RspT_AP = &H3
    End Enum
    
    Public Enum WCN_VALUE_TYPE_RF_BANDS
        WCN_VALUE_RB_24GHZ = &H1
        WCN_VALUE_RB_50GHZ = &H2
    End Enum
    
    Public Enum WCN_VALUE_TYPE_WI_FI_PROTECTED_SETUP_STATE
        WCN_VALUE_SS_RESERVED00 = 0
        WCN_VALUE_SS_NOT_CONFIGURED = &H1
        WCN_VALUE_SS_CONFIGURED = &H2
    End Enum
    
    Public Enum WCN_VALUE_TYPE_DEVICE_TYPE_CATEGORY
        WCN_VALUE_DT_CATEGORY_COMPUTER = (&H1)
        WCN_VALUE_DT_CATEGORY_INPUT_DEVICE = (&H2)
        WCN_VALUE_DT_CATEGORY_PRINTER = (&H3)
        WCN_VALUE_DT_CATEGORY_CAMERA = (&H4)
        WCN_VALUE_DT_CATEGORY_STORAGE = (&H5)
        WCN_VALUE_DT_CATEGORY_NETWORK_INFRASTRUCTURE = (&H6)
        WCN_VALUE_DT_CATEGORY_DISPLAY = (&H7)
        WCN_VALUE_DT_CATEGORY_MULTIMEDIA_DEVICE = (&H8)
        WCN_VALUE_DT_CATEGORY_GAMING_DEVICE = (&H9)
        WCN_VALUE_DT_CATEGORY_TELEPHONE = (&Ha)
        WCN_VALUE_DT_CATEGORY_AUDIO_DEVICE = (&Hb)
        WCN_VALUE_DT_CATEGORY_OTHER = (&Hff)
    End Enum
    
    Public Enum WCN_VALUE_TYPE_DEVICE_TYPE_SUBCATEGORY_OUI
        WCN_VALUE_DT_SUBTYPE_WIFI_OUI = &H50f204
    End Enum
    
    Public Enum WCN_VALUE_TYPE_DEVICE_TYPE_SUBCATEGORY
        WCN_VALUE_DT_SUBTYPE_COMPUTER__PC = (&H1)
        WCN_VALUE_DT_SUBTYPE_COMPUTER__SERVER = (&H2)
        WCN_VALUE_DT_SUBTYPE_COMPUTER__MEDIACENTER = (&H3)
        WCN_VALUE_DT_SUBTYPE_COMPUTER__ULTRAMOBILEPC = (&H4)
        WCN_VALUE_DT_SUBTYPE_COMPUTER__NOTEBOOK = (&H5)
        WCN_VALUE_DT_SUBTYPE_COMPUTER__DESKTOP = (&H6)
        WCN_VALUE_DT_SUBTYPE_COMPUTER__MID = (&H7)
        WCN_VALUE_DT_SUBTYPE_COMPUTER__NETBOOK = (&H8)
    End Enum
    
    Public Enum WCN_VALUE_DT_CATEGORY_INPUT_DEVICE_Values
        WCN_VALUE_DT_SUBTYPE_INPUT_DEVICE__KEYBOARD = (&H1)
        WCN_VALUE_DT_SUBTYPE_INPUT_DEVICE__MOUSE = (&H2)
        WCN_VALUE_DT_SUBTYPE_INPUT_DEVICE__JOYSTICK = (&H3)
        WCN_VALUE_DT_SUBTYPE_INPUT_DEVICE__TRACKBALL = (&H4)
        WCN_VALUE_DT_SUBTYPE_INPUT_DEVICE__GAMECONTROLLER = (&H5)
        WCN_VALUE_DT_SUBTYPE_INPUT_DEVICE__REMOTE = (&H6)
        WCN_VALUE_DT_SUBTYPE_INPUT_DEVICE__TOUCHSCREEN = (&H7)
        WCN_VALUE_DT_SUBTYPE_INPUT_DEVICE__BIOMETRICREADER = (&H8)
        WCN_VALUE_DT_SUBTYPE_INPUT_DEVICE__BARCODEREADER = (&H9)
    End Enum
    
    Public Enum WCN_VALUE_DT_CATEGORY_PRINTER_Values
        WCN_VALUE_DT_SUBTYPE_PRINTER__PRINTER = (&H1)
        WCN_VALUE_DT_SUBTYPE_PRINTER__SCANNER = (&H2)
        WCN_VALUE_DT_SUBTYPE_PRINTER__FAX = (&H3)
        WCN_VALUE_DT_SUBTYPE_PRINTER__COPIER = (&H4)
        WCN_VALUE_DT_SUBTYPE_PRINTER__ALLINONE = (&H5)
    End Enum
    
    Public Enum WCN_VALUE_DT_CATEGORY_CAMERA_Values
        WCN_VALUE_DT_SUBTYPE_CAMERA__STILL_CAMERA = (&H1)
        WCN_VALUE_DT_SUBTYPE_CAMERA__VIDEO_CAMERA = (&H2)
        WCN_VALUE_DT_SUBTYPE_CAMERA__WEB_CAMERA = (&H3)
        WCN_VALUE_DT_SUBTYPE_CAMERA__SECURITY_CAMERA = (&H4)
    End Enum
    
    Public Enum WCN_VALUE_DT_CATEGORY_STORAGE_Values
        WCN_VALUE_DT_SUBTYPE_STORAGE__NAS = &H1
    End Enum
    
    Public Enum WCN_VALUE_DT_CATEGORY_NETWORK_INFRASTRUCTURE_Values
        WCN_VALUE_DT_SUBTYPE_NETWORK_INFRASTRUCUTURE__AP = (&H1)
        WCN_VALUE_DT_SUBTYPE_NETWORK_INFRASTRUCUTURE__ROUTER = (&H2)
        WCN_VALUE_DT_SUBTYPE_NETWORK_INFRASTRUCUTURE__SWITCH = (&H3)
        WCN_VALUE_DT_SUBTYPE_NETWORK_INFRASTRUCUTURE__GATEWAY = (&H4)
        WCN_VALUE_DT_SUBTYPE_NETWORK_INFRASTRUCUTURE__BRIDGE = (&H5)
    End Enum
    
    Public Enum WCN_VALUE_DT_CATEGORY_DISPLAY_Values
        WCN_VALUE_DT_SUBTYPE_DISPLAY__TELEVISION = (&H1)
        WCN_VALUE_DT_SUBTYPE_DISPLAY__PICTURE_FRAME = (&H2)
        WCN_VALUE_DT_SUBTYPE_DISPLAY__PROJECTOR = (&H3)
        WCN_VALUE_DT_SUBTYPE_DISPLAY__MONITOR = (&H4)
    End Enum
    
    Public Enum WCN_VALUE_DT_CATEGORY_MULTIMEDIA_DEVICE_Values
        WCN_VALUE_DT_SUBTYPE_MULTIMEDIA_DEVICE__DAR = (&H1)
        WCN_VALUE_DT_SUBTYPE_MULTIMEDIA_DEVICE__PVR = (&H2)
        WCN_VALUE_DT_SUBTYPE_MULTIMEDIA_DEVICE__MCX = (&H3)
        WCN_VALUE_DT_SUBTYPE_MULTIMEDIA_DEVICE__SETTOPBOX = (&H4)
        WCN_VALUE_DT_SUBTYPE_MULTIMEDIA_DEVICE__MEDIA_SERVER_ADAPT_EXT = (&H5)
        WCN_VALUE_DT_SUBTYPE_MULTIMEDIA_DEVICE__PVP = (&H6)
    End Enum
    
    Public Enum WCN_VALUE_DT_CATEGORY_GAMING_DEVICE_Values
        WCN_VALUE_DT_SUBTYPE_GAMING_DEVICE__XBOX = (&H1)
        WCN_VALUE_DT_SUBTYPE_GAMING_DEVICE__XBOX360 = (&H2)
        WCN_VALUE_DT_SUBTYPE_GAMING_DEVICE__PLAYSTATION = (&H3)
        WCN_VALUE_DT_SUBTYPE_GAMING_DEVICE__CONSOLE_ADAPT = (&H4)
        WCN_VALUE_DT_SUBTYPE_GAMING_DEVICE__PORTABLE = (&H5)
    End Enum
    
    Public Enum WCN_VALUE_DT_CATEGORY_TELEPHONE_Values
        WCN_VALUE_DT_SUBTYPE_TELEPHONE__WINDOWS_MOBILE = (&H1)
        WCN_VALUE_DT_SUBTYPE_TELEPHONE__PHONE_SINGLEMODE = (&H2)
        WCN_VALUE_DT_SUBTYPE_TELEPHONE__PHONE_DUALMODE = (&H3)
        WCN_VALUE_DT_SUBTYPE_TELEPHONE__SMARTPHONE_SINGLEMODE = (&H4)
        WCN_VALUE_DT_SUBTYPE_TELEPHONE__SMARTPHONE_DUALMODE = (&H5)
    End Enum
    
    Public Enum WCN_VALUE_DT_CATEGORY_AUDIO_DEVICE_Values
        WCN_VALUE_DT_SUBTYPE_AUDIO_DEVICE__TUNER_RECEIVER = (&H1)
        WCN_VALUE_DT_SUBTYPE_AUDIO_DEVICE__SPEAKERS = (&H2)
        WCN_VALUE_DT_SUBTYPE_AUDIO_DEVICE__PMP = (&H3)
        WCN_VALUE_DT_SUBTYPE_AUDIO_DEVICE__HEADSET = (&H4)
        WCN_VALUE_DT_SUBTYPE_AUDIO_DEVICE__HEADPHONES = (&H5)
        WCN_VALUE_DT_SUBTYPE_AUDIO_DEVICE__MICROPHONE = (&H6)
        WCN_VALUE_DT_SUBTYPE_AUDIO_DEVICE__HOMETHEATER = (&H7)
    End Enum
    
    [PackingAlignment(1)]
    Public Type WCN_VALUE_TYPE_PRIMARY_DEVICE_TYPE
        Category As WCN_VALUE_TYPE_DEVICE_TYPE_CATEGORY
        SubCategoryOUI As WCN_VALUE_TYPE_DEVICE_TYPE_SUBCATEGORY_OUI
        SubCategory As WCN_VALUE_TYPE_DEVICE_TYPE_SUBCATEGORY
    End Type
    
    
    'WcnDevice.h
    
    Public Enum WCN_PASSWORD_TYPE
        WCN_PASSWORD_TYPE_PUSH_BUTTON = 0
        WCN_PASSWORD_TYPE_PIN = (WCN_PASSWORD_TYPE_PUSH_BUTTON + 1)
        WCN_PASSWORD_TYPE_PIN_REGISTRAR_SPECIFIED = (WCN_PASSWORD_TYPE_PIN + 1)
        WCN_PASSWORD_TYPE_OOB_SPECIFIED = (WCN_PASSWORD_TYPE_PIN_REGISTRAR_SPECIFIED + 1)
        WCN_PASSWORD_TYPE_WFDS = (WCN_PASSWORD_TYPE_OOB_SPECIFIED + 1)
    End Enum
    
    Public Enum WCN_SESSION_STATUS
        WCN_SESSION_STATUS_SUCCESS = 0
        WCN_SESSION_STATUS_FAILURE_GENERIC = (WCN_SESSION_STATUS_SUCCESS + 1)
        WCN_SESSION_STATUS_FAILURE_TIMEOUT = (WCN_SESSION_STATUS_FAILURE_GENERIC + 1)
    End Enum
    
    Public Type WCN_VENDOR_EXTENSION_SPEC
        VendorId As Long
        SubType As Long
        Index As Long
        Flags As WcnVendorExtensionFlags
    End Type
    
    Public Const WCN_MICROSOFT_VENDOR_ID  = (311)
    Public Const WCN_NO_SUBTYPE  = (&Hfffffffe)
    Public Enum WcnVendorExtensionFlags
        WCN_FLAG_DISCOVERY_VE = (&H1)
        WCN_FLAG_AUTHENTICATED_VE = (&H2)
        WCN_FLAG_ENCRYPTED_VE = (&H4)
    End Enum
    
    
    
    Public Function CLSID_WCNDeviceObject() As UUID
    '{C100BEA7-D33A-4a4b-BF23-BBEF4663D017}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HC100BEA7, CInt(&HD33A), CInt(&H4a4b), &HBF, &H23, &HBB, &HEF, &H46, &H63, &HD0, &H17)
     CLSID_WCNDeviceObject = iid
    End Function
    Public Function IID_IWCNDevice() As UUID
    '{C100BE9C-D33A-4a4b-BF23-BBEF4663D017}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HC100BE9C, CInt(&HD33A), CInt(&H4a4b), &HBF, &H23, &HBB, &HEF, &H46, &H63, &HD0, &H17)
     IID_IWCNDevice = iid
    End Function
    Public Function IID_IWCNConnectNotify() As UUID
    '{C100BE9F-D33A-4a4b-BF23-BBEF4663D017}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HC100BE9F, CInt(&HD33A), CInt(&H4a4b), &HBF, &H23, &HBB, &HEF, &H46, &H63, &HD0, &H17)
     IID_IWCNConnectNotify = iid
    End Function
    
    
    Public Function SID_WcnProvider() As UUID
    '{C100BECA-D33A-4a4b-BF23-BBEF4663D017}
    Static iid As UUID
     If (iid.Data1 = 0) Then Call DEFINE_UUID(iid, &HC100BECA, CInt(&HD33A), CInt(&H4a4b), &HBF, &H23, &HBB, &HEF, &H46, &H63, &HD0, &H17)
     SID_WcnProvider = iid
    End Function
    Public Function PKEY_WCN_DeviceType_Category() As PROPERTYKEY
    Static pkk As PROPERTYKEY
     If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H88190b8b, &H4684, &H11da, &Ha2, &H6a, &H00, &H02, &Hb3, &H98, &H8e, &H81, &H00000010)
     'VT_UINT
    PKEY_WCN_DeviceType_Category = pkk
    End Function
    Public Function PKEY_WCN_DeviceType_SubCategoryOUI() As PROPERTYKEY
    Static pkk As PROPERTYKEY
     If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H88190b8b, &H4684, &H11da, &Ha2, &H6a, &H00, &H02, &Hb3, &H98, &H8e, &H81, &H00000011)
     'VT_UINT
    PKEY_WCN_DeviceType_SubCategoryOUI = pkk
    End Function
    Public Function PKEY_WCN_DeviceType_SubCategory() As PROPERTYKEY
    Static pkk As PROPERTYKEY
     If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H88190b8b, &H4684, &H11da, &Ha2, &H6a, &H00, &H02, &Hb3, &H98, &H8e, &H81, &H00000012)
     'VT_UINT
    PKEY_WCN_DeviceType_SubCategory = pkk
    End Function
    Public Function PKEY_WCN_SSID() As PROPERTYKEY
    Static pkk As PROPERTYKEY
     If (pkk.fmtid.Data1 = 0&) Then Call DEFINE_PROPERTYKEY(pkk, &H88190b8b, &H4684, &H11da, &Ha2, &H6a, &H00, &H02, &Hb3, &H98, &H8e, &H81, &H00000020)
     'VT_LPWSTR (should be VT_UI1|VT_VECTOR, but that's not supported by IFunctionInstanceCollectionQuery::AddPropertyConstraint)
    PKEY_WCN_SSID = pkk
    End Function
    
End Module