'*****************************************************************************************
'This file is a part of WinDevLib - Windows Development Library for twinBASIC
'https://github.com/fafalone/WinDevLib
'Code ported by Jon Johnson. 
'"Windows" is a trademark of the Microsoft Corporation.
'Certain Description attributes (c) Microsoft, taken from SDK headers and official docs.
'Licensed under Creative Commons CC0 1.0 Universal
'*****************************************************************************************

'WinDevLib::wdBITS - Background Intelligent Transfer Service
'bits.h - bits10_3.h, bitscfg.h, qmgr.h

[InterfaceId("01B7BD23-FB88-4A77-8490-5891D3E4653A")]
[OleAutomation(False)]
Interface IBackgroundCopyFile Extends stdole.IUnknown
    Sub GetRemoteName(ByRef pVal As LongPtr)
    Sub GetLocalName(ByRef pVal As LongPtr)
    Sub GetProgress(ByRef pVal As BG_FILE_PROGRESS)
End Interface

[InterfaceId("CA51E165-C365-424C-8D41-24AAA4FF3C40")]
[OleAutomation(False)]
[Description("IEnumBackgroundCopyFiles Interface")]
Interface IEnumBackgroundCopyFiles Extends stdole.IUnknown
    Sub Next(ByVal celt As Long, ByRef rgelt As IBackgroundCopyFile, ByRef pceltFetched As Long)
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Sub Clone(ByRef ppenum As IEnumBackgroundCopyFiles)
    Sub GetCount(ByRef puCount As Long)
End Interface


[InterfaceId("19C613A0-FCB8-4F28-81AE-897C3D078F81")]
[OleAutomation(False)]
[Description("error object for IBackgroundCopyJob")]
Interface IBackgroundCopyError Extends stdole.IUnknown
    Sub GetError(ByRef pContext As BG_ERROR_CONTEXT, ByRef pCode As Long /* HRESULT */)
    Sub GetFile(ByRef pVal As IBackgroundCopyFile)
    Sub GetErrorDescription(ByVal LanguageID As Long, ByRef pErrorDescription As LongPtr)
    Sub GetErrorContextDescription(ByVal LanguageID As Long, ByRef pContextDescription As LongPtr)
    Sub GetProtocol(ByRef pProtocol As LongPtr)
End Interface


[InterfaceId("37668D37-507E-4160-9316-26306D150B12")]
[OleAutomation(False)]
[Description("IBackgroundCopyJob Interface")]
Interface IBackgroundCopyJob Extends stdole.IUnknown
    Sub AddFileSet(ByVal cFileCount As Long, ByRef pFileSet As BG_FILE_INFO)
    Sub AddFile(ByVal RemoteUrl As LongPtr, ByVal LocalName As LongPtr)
    Sub EnumFiles(ByRef pEnum As IEnumBackgroundCopyFiles)
    Sub Suspend()
    Sub Resume()
    Sub Cancel()
    Sub Complete()
    Sub GetId(ByRef pVal As UUID)
    Sub GetType(ByRef pVal As BG_JOB_TYPE)
    Sub GetProgress(ByRef pVal As BG_JOB_PROGRESS)
    Sub GetTimes(ByRef pVal As BG_JOB_TIMES)
    Sub GetState(ByRef pVal As BG_JOB_STATE)
    Sub GetError(ByRef ppError As IBackgroundCopyError)
    Sub GetOwner(ByRef pVal As LongPtr)
    Sub SetDisplayName(ByVal val As LongPtr)
    Sub GetDisplayName(ByRef pVal As LongPtr)
    Sub SetDescription(ByVal val As LongPtr)
    Sub GetDescription(ByRef pVal As LongPtr)
    Sub SetPriority(ByVal val As BG_JOB_PRIORITY)
    Sub GetPriority(ByRef pVal As BG_JOB_PRIORITY)
    Sub SetNotifyFlags(ByVal val As BITSNotifyFlags)
    Sub GetNotifyFlags(ByRef pVal As BITSNotifyFlags)
    Sub SetNotifyInterface(ByVal val As IUnknown)
    Sub GetNotifyInterface(ByRef pVal As IUnknown)
    Sub SetMinimumRetryDelay(ByVal seconds As Long)
    Sub GetMinimumRetryDelay(ByRef seconds As Long)
    Sub SetNoProgressTimeout(ByVal seconds As Long)
    Sub GetNoProgressTimeout(ByRef seconds As Long)
    Sub GetErrorCount(ByRef Errors As Long)
    Sub SetProxySettings(ByVal ProxyUsage As BG_JOB_PROXY_USAGE, ByVal ProxyList As LongPtr, ByVal ProxyBypassList As LongPtr)
    Sub GetProxySettings(ByRef pProxyUsage As BG_JOB_PROXY_USAGE, ByRef pProxyList As LongPtr, ByRef pProxyBypassList As LongPtr)
    Sub TakeOwnership()
End Interface

[InterfaceId("1AF4F612-3B71-466F-8F58-7B6F73AC57AD")]
[OleAutomation(False)]
[Description("IEnumBackgroundCopyJobs2 Interface")]
Interface IEnumBackgroundCopyJobs Extends stdole.IUnknown
    Sub Next(ByVal celt As Long, ByRef rgelt As IBackgroundCopyJob, ByRef pceltFetched As Long)
    Sub Skip(ByVal celt As Long)
    Sub Reset()
    Sub Clone(ByRef ppenum As IEnumBackgroundCopyJobs)
    Sub GetCount(ByRef puCount As Long)
End Interface

[InterfaceId("97EA99C7-0186-4AD4-8DF9-C5B4E0ED6B22")]
[OleAutomation(False)]
[Description("IBackgroundCopyCallback Interface")]
Interface IBackgroundCopyCallback Extends stdole.IUnknown
    Sub JobTransferred(ByVal pJob As IBackgroundCopyJob)
    Sub JobError(ByVal pJob As IBackgroundCopyJob, ByVal pError As IBackgroundCopyError)
    Sub JobModification(ByVal pJob As IBackgroundCopyJob, ByVal dwReserved As Long)
End Interface


[InterfaceId("5CE34C0D-0DC9-4C1F-897C-DAA1B78CEE7C")]
[OleAutomation(False)]
[Description("Background Copy interface")]
Interface IBackgroundCopyManager Extends stdole.IUnknown
    Sub CreateJob(ByVal DisplayName As LongPtr, ByVal type As BG_JOB_TYPE, ByRef pJobId As UUID, ByRef ppJob As IBackgroundCopyJob)
    Sub GetJob(ByRef JobId As UUID, ByRef ppJob As IBackgroundCopyJob)
    Sub EnumJobs(ByVal dwFlags As BITSJobEnumFlags, ByRef ppenum As IEnumBackgroundCopyJobs)
    Sub GetErrorDescription(ByVal hresult As Long /* HRESULT */, ByVal LanguageID As Long, ByRef pErrorDescription As LongPtr)
End Interface

[CoClassId("4991D34B-80A1-4291-83B6-3328366B9097")]
[COMCreatable]
[Description("Background copy control class")]
CoClass BackgroundCopyManager
    [Default] Interface IBackgroundCopyManager
End CoClass

[InterfaceId("54B50739-686F-45EB-9DFF-D6A9A0FAA9AF")]
 [OleAutomation(False)]
 [Description("IBackgroundCopyJob2 Interface")]
 Interface IBackgroundCopyJob2 Extends IBackgroundCopyJob
     Sub SetNotifyCmdLine(ByVal Program As LongPtr, ByVal Parameters As LongPtr)
     Sub GetNotifyCmdLine(ByRef pProgram As LongPtr, ByRef pParameters As LongPtr)
     Sub GetReplyProgress(ByRef pProgress As BG_JOB_REPLY_PROGRESS)
     Sub GetReplyData(ByRef ppBuffer As LongPtr, ByRef pLength As LongLong)
     Sub SetReplyFileName(ByVal ReplyFileName As LongPtr)
     Sub GetReplyFileName(ByRef pReplyFileName As LongPtr)
     Sub SetCredentials(ByRef credentials As BG_AUTH_CREDENTIALS)
     Sub RemoveCredentials(ByVal target As BG_AUTH_TARGET, ByVal Scheme As BG_AUTH_SCHEME)
 End Interface

 [CoClassId("F087771F-D74F-4C1A-BB8A-E16ACA9124EA")]
 [COMCreatable]
 [Description("Background copy job 2")]
 CoClass BackgroundCopyManager1_5
     [Default] Interface IBackgroundCopyManager
 End CoClass

 [InterfaceId("443C8934-90FF-48ED-BCDE-26F5C7450042")]
 [OleAutomation(False)]
 [Description("IBackgroundCopyJob3 Interface")]
 Interface IBackgroundCopyJob3 Extends IBackgroundCopyJob2
     Sub ReplaceRemotePrefix(ByVal OldPrefix As LongPtr, ByVal NewPrefix As LongPtr)
     Sub AddFileWithRanges(ByVal RemoteUrl As LongPtr, ByVal LocalName As LongPtr, ByVal RangeCount As Long, ByRef ranges As BG_FILE_RANGE)
     Sub SetFileACLFlags(ByVal flags As BITSCopyAclFlags)
     Sub GetFileACLFlags(ByRef flags As BITSCopyAclFlags)
 End Interface

 [InterfaceId("83E81B93-0873-474D-8A8C-F2018B1A939C")]
 [OleAutomation(False)]
 [Description("IBackgroundCopyFile2")]
 Interface IBackgroundCopyFile2 Extends IBackgroundCopyFile
     Sub GetFileRanges(ByRef RangeCount As Long, ByRef ranges As LongPtr)
     Sub SetRemoteName(ByVal val As LongPtr)
 End Interface

 [CoClassId("6D18AD12-BDE3-4393-B311-099C346E6DF9")]
 [COMCreatable]
 [Description("Background copy manager 2.0")]
 CoClass BackgroundCopyManager2_0
     [Default] Interface IBackgroundCopyManager
 End CoClass
 
 [InterfaceId("F1BD1079-9F01-4BDC-8036-F09B70095066")]
  [OleAutomation(False)]
  [Description("IBackgroundCopyJobHttpOptions Interface")]
  Interface IBackgroundCopyJobHttpOptions Extends stdole.IUnknown
      Sub SetClientCertificateByID(ByVal StoreLocation As BG_CERT_STORE_LOCATION, ByVal StoreName As LongPtr, ByRef pCertHashBlob As Any)
      Sub SetClientCertificateByName(ByVal StoreLocation As BG_CERT_STORE_LOCATION, ByVal StoreName As LongPtr, ByVal SubjectName As LongPtr)
      Sub RemoveClientCertificate()
      Sub GetClientCertificate(ByRef pStoreLocation As BG_CERT_STORE_LOCATION, ByRef pStoreName As LongPtr, ByRef ppCertHashBlob As LongPtr, ByRef pSubjectName As LongPtr)
      Sub SetCustomHeaders(ByVal RequestHeaders As LongPtr)
      Sub GetCustomHeaders(ByRef pRequestHeaders As LongPtr)
      Sub SetSecurityFlags([TypeHint(BITSRedirectFlags, BITSSSLFlags)] ByVal flags As Long)
      Sub GetSecurityFlags([TypeHint(BITSRedirectFlags, BITSSSLFlags)] ByRef pFlags As Long)
  End Interface

  [CoClassId("03CA98D6-FF5D-49B8-ABC6-03DD84127020")]
  [COMCreatable]
  [Description("Background copy manager 2.5")]
  CoClass BackgroundCopyManager2_5
      [Default] Interface IBackgroundCopyManager
  End CoClass
 
  [InterfaceId("659CDEAF-489E-11D9-A9CD-000D56965251")]
  [OleAutomation(False)]
  [Description("IBitsPeerCacheRecord")]
  Interface IBitsPeerCacheRecord Extends stdole.IUnknown
      Sub GetId(ByRef pVal As UUID)
      Sub GetOriginUrl(ByRef pVal As LongPtr)
      Sub GetFileSize(ByRef pVal As LongLong)
      Sub GetFileModificationTime(ByRef pVal As FILETIME)
      Sub GetLastAccessTime(ByRef pVal As FILETIME)
      Sub IsFileValidated()
      Sub GetFileRanges(ByRef pRangeCount As Long, ByRef ppRanges As LongPtr)
  End Interface

  [InterfaceId("659CDEA4-489E-11D9-A9CD-000D56965251")]
  [OleAutomation(False)]
  [Description("IEnumBitsPeerCacheRecords")]
  Interface IEnumBitsPeerCacheRecords Extends stdole.IUnknown
      Sub Next(ByVal celt As Long, ByRef rgelt As IBitsPeerCacheRecord, ByRef pceltFetched As Long)
      Sub Skip(ByVal celt As Long)
      Sub Reset()
      Sub Clone(ByRef ppenum As IEnumBitsPeerCacheRecords)
      Sub GetCount(ByRef puCount As Long)
  End Interface

  [InterfaceId("659CDEA2-489E-11D9-A9CD-000D56965251")]
  [OleAutomation(False)]
  [Description("IBitsPeer")]
  Interface IBitsPeer Extends stdole.IUnknown
      Sub GetPeerName(ByRef pName As LongPtr)
      Sub IsAuthenticated(ByRef pAuth As BOOL)
      Sub IsAvailable(ByRef pOnline As BOOL)
  End Interface

  [InterfaceId("659CDEA5-489E-11D9-A9CD-000D56965251")]
  [OleAutomation(False)]
  [Description("IEnumBitsPeers")]
  Interface IEnumBitsPeers Extends stdole.IUnknown
      Sub Next(ByVal celt As Long, ByRef rgelt As IBitsPeer, ByRef pceltFetched As Long)
      Sub Skip(ByVal celt As Long)
      Sub Reset()
      Sub Clone(ByRef ppenum As IEnumBitsPeers)
      Sub GetCount(ByRef puCount As Long)
  End Interface

  [InterfaceId("659CDEAD-489E-11D9-A9CD-000D56965251")]
  [OleAutomation(False)]
  [Description("IBitsPeerCacheAdministration")]
  Interface IBitsPeerCacheAdministration Extends stdole.IUnknown
      Sub GetMaximumCacheSize(ByRef pBytes As Long)
      Sub SetMaximumCacheSize(ByVal Bytes As Long)
      Sub GetMaximumContentAge(ByRef pSeconds As Long)
      Sub SetMaximumContentAge(ByVal seconds As Long)
      Sub GetConfigurationFlags(ByRef pFlags As BITSPeerCachineFlags)
      Sub SetConfigurationFlags(ByVal flags As BITSPeerCachineFlags)
      Sub EnumRecords(ByRef ppenum As IEnumBitsPeerCacheRecords)
      Sub GetRecord(ByRef id As UUID, ByRef ppRecord As IBitsPeerCacheRecord)
      Sub ClearRecords()
      Sub DeleteRecord(ByRef id As UUID)
      Sub DeleteUrl(ByVal URL As LongPtr)
      Sub EnumPeers(ByRef ppenum As IEnumBitsPeers)
      Sub ClearPeers()
      Sub DiscoverPeers()
  End Interface

  [InterfaceId("659CDEAE-489E-11D9-A9CD-000D56965251")]
  [OleAutomation(False)]
  [Description("IBackgroundCopyJob4 Interface")]
  Interface IBackgroundCopyJob4 Extends IBackgroundCopyJob3
      Sub SetPeerCachingFlags(ByVal flags As BITSJobPeerCachingFlags)
      Sub GetPeerCachingFlags(ByRef pFlags As BITSJobPeerCachingFlags)
      Sub GetOwnerIntegrityLevel(ByRef pLevel As Long)
      Sub GetOwnerElevationState(ByRef pElevated As BOOL)
      Sub SetMaximumDownloadTime(ByVal timeout As Long)
      Sub GetMaximumDownloadTime(ByRef pTimeout As Long)
  End Interface

  [InterfaceId("659CDEAA-489E-11D9-A9CD-000D56965251")]
  [OleAutomation(False)]
  [Description("IBackgroundCopyFile3 interface")]
  Interface IBackgroundCopyFile3 Extends IBackgroundCopyFile2
      Sub GetTemporaryName(ByRef pFilename As LongPtr)
      Sub SetValidationState(ByVal State As BOOL)
      Sub GetValidationState(ByRef pState As BOOL)
      Sub IsDownloadedFromPeer(ByRef pVal As BOOL)
  End Interface

  [InterfaceId("659CDEAC-489E-11D9-A9CD-000D56965251")]
  [OleAutomation(False)]
  [Description("IBackgroundCopyCallback2 Interface")]
  Interface IBackgroundCopyCallback2 Extends IBackgroundCopyCallback
      Sub FileTransferred(ByVal pJob As IBackgroundCopyJob, ByVal pFile As IBackgroundCopyFile)
  End Interface

  [CoClassId("659CDEA7-489E-11D9-A9CD-000D56965251")]
  [COMCreatable]
  [Description("Background copy manager 3.0")]
  CoClass BackgroundCopyManager3_0
      [Default] Interface IBackgroundCopyManager
  End CoClass

  [InterfaceId("9A2584C3-F7D2-457A-9A5E-22B67BFFC7D2")]
  [OleAutomation(False)]
  [Description("IBitsTokenOptions")]
  Interface IBitsTokenOptions Extends stdole.IUnknown
      Sub SetHelperTokenFlags(ByVal UsageFlags As BITSHelperTokenFlags)
      Sub GetHelperTokenFlags(ByRef pFlags As BITSHelperTokenFlags)
      Sub SetHelperToken()
      Sub ClearHelperToken()
      Sub GetHelperTokenSid(ByRef pSid As LongPtr)
  End Interface

  [InterfaceId("EF7E0655-7888-4960-B0E5-730846E03492")]
  [OleAutomation(False)]
  [Description("IBackgroundCopyFile4 interface")]
  Interface IBackgroundCopyFile4 Extends IBackgroundCopyFile3
      Sub GetPeerDownloadStats(ByRef pFromOrigin As LongLong, ByRef pFromPeers As LongLong)
  End Interface

  [CoClassId("BB6DF56B-CACE-11DC-9992-0019B93A3A84")]
  [COMCreatable]
  [Description("Background copy manager 3.0")]
  CoClass BackgroundCopyManager4_0
      [Default] Interface IBackgroundCopyManager
  End CoClass
  
  [InterfaceId("E847030C-BBBA-4657-AF6D-484AA42BF1FE")]
  [OleAutomation(False)]
  [Description("IBackgroundCopyJob5 interface")]
  Interface IBackgroundCopyJob5 Extends IBackgroundCopyJob4
      #If Win64 Then
      Sub SetProperty(ByVal propertyId As BITS_JOB_PROPERTY_ID, propertyValue As UUID)
      #Else
      Sub SetProperty(ByVal propertyId As BITS_JOB_PROPERTY_ID, ByVal PropertyValue1 As Long, ByVal PropertyValue2 As Long, ByVal PropertyValue3 As Long, ByVal PropertyValue4 As Long)
      #End If
      Sub GetProperty(ByVal propertyId As BITS_JOB_PROPERTY_ID, ByRef PropertyValue As BITS_JOB_PROPERTY_VALUE)
  End Interface

  [InterfaceId("85C1657F-DAFC-40E8-8834-DF18EA25717E")]
  [OleAutomation(False)]
  [Description("IBackgroundCopyFile5 interface")]
  Interface IBackgroundCopyFile5 Extends IBackgroundCopyFile4
      Sub SetProperty(ByVal propertyId As BITS_FILE_PROPERTY_ID, ByVal PropertyValue As LongPtr)
      Sub GetProperty(ByVal propertyId As BITS_FILE_PROPERTY_ID, ByRef PropertyValue As BITS_FILE_PROPERTY_VALUE)
  End Interface

  [CoClassId("1ECCA34C-E88A-44E3-8D6A-8921BDE9E452")]
  [COMCreatable]
  [Description("Background copy manager 5.0")]
  CoClass BackgroundCopyManager5_0
      [Default] Interface IBackgroundCopyManager
  End CoClass

  [InterfaceId("98C97BD2-E32B-4AD8-A528-95FD8B16BD42")]
  [OleAutomation(False)]
  Interface IBackgroundCopyCallback3 Extends IBackgroundCopyCallback2
      Sub FileRangesTransferred(ByVal job As IBackgroundCopyJob, ByVal File As IBackgroundCopyFile, ByVal RangeCount As Long, ByRef ranges As BG_FILE_RANGE)
  End Interface

  [InterfaceId("CF6784F7-D677-49FD-9368-CB47AEE9D1AD")]
  [OleAutomation(False)]
  Interface IBackgroundCopyFile6 Extends IBackgroundCopyFile5
      Sub UpdateDownloadPosition(ByVal Offset As LongLong)
      Sub RequestFileRanges(ByVal RangeCount As Long, ByRef ranges As BG_FILE_RANGE)
      Sub GetFilledFileRanges(ByRef RangeCount As Long, ByRef ranges As BG_FILE_RANGE)
  End Interface

  [CoClassId("4BD3E4E1-7BD4-4A2B-9964-496400DE5193")]
  [COMCreatable]
  CoClass BackgroundCopyManager10_1
      [Default] Interface IBackgroundCopyManager
  End CoClass

  [InterfaceId("B591A192-A405-4FC3-8323-4C5C542578FC")]
  [OleAutomation(False)]
  Interface IBackgroundCopyJobHttpOptions2 Extends IBackgroundCopyJobHttpOptions
      Sub SetHttpMethod(ByVal Method As LongPtr)
      Sub GetHttpMethod(ByRef Method As LongPtr)
  End Interface

  [CoClassId("4575438F-A6C8-4976-B0FE-2F26B80D959E")]
  [COMCreatable]
  CoClass BackgroundCopyManager10_2
      [Default] Interface IBackgroundCopyManager
  End CoClass

  [InterfaceId("4CEC0D02-DEF7-4158-813A-C32A46945FF7")]
  [OleAutomation(False)]
  Interface IBackgroundCopyServerCertificateValidationCallback Extends stdole.IUnknown
      Sub ValidateServerCertificate(ByVal job As IBackgroundCopyJob, ByVal File As IBackgroundCopyFile, ByVal certLength As Long, ByRef certData As Any, ByVal certEncodingType As Long, ByVal certStoreLength As Long, ByRef certStoreData As Any)
  End Interface

  [InterfaceId("8A9263D3-FD4C-4EDA-9B28-30132A4D4E3C")]
  [OleAutomation(False)]
  Interface IBackgroundCopyJobHttpOptions3 Extends IBackgroundCopyJobHttpOptions2
      Sub SetServerCertificateValidationInterface(ByVal certValidationCallback As IUnknown)
      Sub MakeCustomHeadersWriteOnly()
  End Interface

  [CoClassId("5FD42AD5-C04E-4D36-ADC7-E08FF15737AD")]
  [COMCreatable]
  CoClass BackgroundCopyManager10_3
      [Default] Interface IBackgroundCopyManager
  End CoClass

  [InterfaceId("29CFBBF7-09E4-4B97-B0BC-F2287E3D8EB3")]
  '[DualInterface, DispInterface, COMExtensible ]
  Interface IBITSExtensionSetup Extends IDispatch
      [DispId(1)]
      Sub EnableBITSUploads()
      [DispId(2)]
      Sub DisableBITSUploads()
      [DispId(3)]
      Function GetCleanupTaskName() As String
      [DispId(4)]
      Function GetCleanupTask(ByRef riid As UUID) As IUnknown
  End Interface

  [InterfaceId("D5D2D542-5503-4E64-8B48-72EF91A32EE1")]
  '[DualInterface, DispInterface, COMExtensible ]
  Interface IBITSExtensionSetupFactory Extends IDispatch
      [DispId(1)]
      Function GetObject(ByVal Path As String) As IBITSExtensionSetup
  End Interface

  [CoClassId("EFBBAB68-7286-4783-94BF-9461D8B7E7E9")]
  [COMCreatable]
  [Description("BITS Server Extensions Setup Factory")]
  CoClass BITSExtensionSetupFactory
      [Default] Interface IBITSExtensionSetupFactory
  End CoClass
  
  [InterfaceId("59F5553C-2031-4629-BB18-2645A6970947")]
  [OleAutomation(False)]
  [Description("IBackgroundCopyJob Interface")]
  Interface IBackgroundCopyJob1 Extends stdole.IUnknown
      Sub CancelJob()
      Sub GetProgress(ByVal dwFlags As QMgrProgressFlags, ByRef pdwProgress As Long)
      Sub GetStatus(ByRef pdwStatus As QMgrStatusFlags, ByRef pdwWin32Result As Long, ByRef pdwTransportResult As Long, ByRef pdwNumOfRetries As Long)
      Sub AddFiles(ByVal cFileCount As Long, ByRef ppFileSet As FILESETINFO)
      Sub GetFile(ByVal cFileIndex As Long, ByRef pFileInfo As FILESETINFO)
      Sub GetFileCount(ByRef pdwFileCount As Long)
      Sub SwitchToForeground()
      Sub get_JobID(ByRef pguidJobID As UUID)
      Sub GetTimes(ByRef pTimes As BACKGROUND_COPY_TIMES)
  End Interface

  [InterfaceId("8BAEBA9D-8F1C-42C4-B82C-09AE79980D25")]
  [OleAutomation(False)]
  [Description("IEnumBackgroundCopyJobs Interface")]
  Interface IEnumBackgroundCopyJobs1 Extends stdole.IUnknown
      Sub Next(ByVal celt As Long, ByRef rgelt As UUID, ByRef pceltFetched As Long)
      Sub Skip(ByVal celt As Long)
      Sub Reset()
      Sub Clone(ByRef ppenum As IEnumBackgroundCopyJobs1)
      Sub GetCount(ByRef puCount As Long)
  End Interface


  [InterfaceId("1DED80A7-53EA-424F-8A04-17FEA9ADC4F5")]
  [OleAutomation(False)]
  [Description("IBackgroundCopyGroup Interface")]
  Interface IBackgroundCopyGroup Extends stdole.IUnknown
      Sub GetProp(ByVal propid As GROUPPROP, ByRef pVarVal As Variant)
      Sub SetProp(ByVal propid As GROUPPROP, ByRef pVarVal As Variant)
      Sub GetProgress(ByVal dwFlags As QMgrProgressFlags, ByRef pdwProgress As Long)
      Sub GetStatus(ByRef pdwStatus As QMgrStatusFlags, ByRef pdwJobIndex As Long)
      #If Win64 Then
      Sub GetJob(guidJobID As UUID, ByRef ppJob As IBackgroundCopyJob1)    
      #Else
      Sub GetJob(ByVal guidJobID1 As Long, ByVal guidJobID2 As Long, ByVal guidJobID3 As Long, ByVal guidJobID4 As Long, ByRef ppJob As IBackgroundCopyJob1)
      #End If
      Sub SuspendGroup()
      Sub ResumeGroup()
      Sub CancelGroup()
      Sub get_Size(ByRef pdwSize As Long)
      Sub get_GroupID(ByRef pguidGroupID As UUID)
      #If Win64 Then
      Sub CreateJob(guidJobID As UUID, ByRef ppJob As IBackgroundCopyJob1)
      #Else
      Sub CreateJob(ByVal guidJobID1 As Long, ByVal guidJobID2 As Long, ByVal guidJobID3 As Long, ByVal guidJobID4 As Long, ByRef ppJob As IBackgroundCopyJob1)
      #End If
      Sub EnumJobs(ByVal dwFlags As Long, ByRef ppEnumJobs As IEnumBackgroundCopyJobs1)
      Sub SwitchToForeground()
      Sub QueryNewJobInterface(ByRef iid As UUID, ByRef pUnk As IUnknown)
      Sub SetNotificationPointer(ByRef iid As UUID, ByVal pUnk As IUnknown)
  End Interface

  [InterfaceId("D993E603-4AA4-47C5-8665-C20D39C2BA4F")]
  [OleAutomation(False)]
  [Description("IEnumBackgroundCopyGroups Interface")]
  Interface IEnumBackgroundCopyGroups Extends stdole.IUnknown
      Sub Next(ByVal celt As Long, ByRef rgelt As UUID, ByRef pceltFetched As Long)
      Sub Skip(ByVal celt As Long)
      Sub Reset()
      Sub Clone(ByRef ppenum As IEnumBackgroundCopyGroups)
      Sub GetCount(ByRef puCount As Long)
  End Interface

  [InterfaceId("084F6593-3800-4E08-9B59-99FA59ADDF82")]
  [OleAutomation(False)]
  [Description("IBackgroundCopyCallback Interface")]
  Interface IBackgroundCopyCallback1 Extends stdole.IUnknown
      Sub OnStatus(ByVal pGroup As IBackgroundCopyGroup, ByVal pJob As IBackgroundCopyJob1, ByVal dwFileIndex As Long, ByVal dwStatus As QMgrStatusFlags, ByVal dwNumOfRetries As Long, ByVal dwWin32Result As Long, ByVal dwTransportResult As Long)
      Sub OnProgress(ByVal ProgressType As QMgrProgressFlags, ByVal pGroup As IBackgroundCopyGroup, ByVal pJob As IBackgroundCopyJob1, ByVal dwFileIndex As Long, ByVal dwProgressValue As Long)
      Sub OnProgressEx(ByVal ProgressType As QMgrProgressFlags, ByVal pGroup As IBackgroundCopyGroup, ByVal pJob As IBackgroundCopyJob1, ByVal dwFileIndex As Long, ByVal dwProgressValue As Long, ByVal dwByteArraySize As Long, ByRef pByte As Any)
  End Interface

  [InterfaceId("16F41C69-09F5-41D2-8CD8-3C08C47BC8A8")]
  [OleAutomation(False)]
  [Description("Background Copy QMgr interface")]
  Interface IBackgroundCopyQMgr Extends stdole.IUnknown
      #If Win64 Then
      Sub CreateGroup(guidGroupID As UUID, ByRef ppGroup As IBackgroundCopyGroup)
      Sub GetGroup(groupID As UUID, ByRef ppGroup As IBackgroundCopyGroup)
      #Else
      Sub CreateGroup(ByVal guidGroupID1 As Long, ByVal guidGroupID2 As Long, ByVal guidGroupID3 As Long, ByVal guidGroupID4 As Long, ByRef ppGroup As IBackgroundCopyGroup)
      Sub GetGroup(ByVal groupID1 As Long, ByVal groupID2 As Long, ByVal groupID3 As Long, ByVal groupID4 As Long, ByRef ppGroup As IBackgroundCopyGroup)
      #End If
      Sub EnumGroups(ByVal dwFlags As Long, ByRef ppEnumGroups As IEnumBackgroundCopyGroups)
  End Interface

  [CoClassId("69AD4AEE-51BE-439B-A92C-86AE490E8B30")]
  [COMCreatable]
  [Description("Background Copy QMgr Class")]
  CoClass BackgroundCopyQMgr
      [Default] Interface IBackgroundCopyQMgr
  End CoClass
  

Module wdBITS

    [Description("The requested job was not found.")] Public Const BG_E_NOT_FOUND = &H80200001
    [Description("The requested action is not allowed in the current job state. The job might have been canceled or completed transferring. It is in a read-only state now.")] Public Const BG_E_INVALID_STATE = &H80200002
    [Description("There are no files attached to this job. Attach files to the job, and then try again.")] Public Const BG_E_EMPTY = &H80200003
    [Description("No file is available because no URL generated an error.")] Public Const BG_E_FILE_NOT_AVAILABLE = &H80200004
    [Description("No protocol is available because no URL generated an error.")] Public Const BG_E_PROTOCOL_NOT_AVAILABLE = &H80200005
    [Description("No errors have occurred.")] Public Const BG_S_ERROR_CONTEXT_NONE = &H00200006
    [Description("The error occurred in an unknown location.")] Public Const BG_E_ERROR_CONTEXT_UNKNOWN = &H80200007
    [Description("The error occurred in the Background Intelligent Transfer Service (BITS) queue manager.")] Public Const BG_E_ERROR_CONTEXT_GENERAL_QUEUE_MANAGER = &H80200008
    [Description("The error occurred while the local file was being processed. Verify that the file is not in use, and then try again.")] Public Const BG_E_ERROR_CONTEXT_LOCAL_FILE = &H80200009
    [Description("The error occurred while the remote file was being processed.")] Public Const BG_E_ERROR_CONTEXT_REMOTE_FILE = &H8020000A
    [Description("The error occurred in the transport layer. The client could not connect to the server.")] Public Const BG_E_ERROR_CONTEXT_GENERAL_TRANSPORT = &H8020000B
    [Description("The error occurred while the notification callback was being processed. Background Intelligent Transfer Service (BITS) will try again later.")] Public Const BG_E_ERROR_CONTEXT_QUEUE_MANAGER_NOTIFICATION = &H8020000C
    [Description("The destination file system volume is not available. Verify that another program, such as CheckDisk, is not running, which would lock the volume. When the volume is available, Background Intelligent Transfer Service (BITS) will try again.")] Public Const BG_E_DESTINATION_LOCKED = &H8020000D
    [Description("The destination volume has changed. If the disk is removable, it might have been replaced with a different disk. Reinsert the original disk and resume the job.")] Public Const BG_E_VOLUME_CHANGED = &H8020000E
    [Description("No errors have occurred.")] Public Const BG_E_ERROR_INFORMATION_UNAVAILABLE = &H8020000F
    [Description("There are currently no active network connections. Background Intelligent Transfer Service (BITS) will try again when an adapter is connected.")] Public Const BG_E_NETWORK_DISCONNECTED = &H80200010
    [Description("The server did not return the file size. The URL might point to dynamic content. The Content-Length header is not available in the server's HTTP reply.")] Public Const BG_E_MISSING_FILE_SIZE = &H80200011
    [Description("The server does not support HTTP 1.1.")] Public Const BG_E_INSUFFICIENT_HTTP_SUPPORT = &H80200012
    [Description("The server does not support the necessary HTTP protocol. Background Intelligent Transfer Service (BITS) requires that the server support the Range protocol header.")] Public Const BG_E_INSUFFICIENT_RANGE_SUPPORT = &H80200013
    [Description("Background Intelligent Transfer Service (BITS) cannot be used remotely.")] Public Const BG_E_REMOTE_NOT_SUPPORTED = &H80200014
    [Description("The drive mapping for the job is different for the current owner than for the previous owner. Use a UNC path instead.")] Public Const BG_E_NEW_OWNER_DIFF_MAPPING = &H80200015
    [Description("The new owner has insufficient access to the local files for the job. The new owner might not have permissions to access the job files. Verify that the new owner has sufficient permissions, and then try again.")] Public Const BG_E_NEW_OWNER_NO_FILE_ACCESS = &H80200016
    [Description("Some of the transferred files were deleted because they were incomplete.")] Public Const BG_S_PARTIAL_COMPLETE = &H00200017
    [Description("The HTTP proxy list cannot be longer than 32,000 characters. Try again with a shorter proxy list.")] Public Const BG_E_PROXY_LIST_TOO_LARGE = &H80200018
    [Description("The HTTP proxy bypass list cannot be longer than 32,000 characters. Try again with a shorter bypass proxy list.")] Public Const BG_E_PROXY_BYPASS_LIST_TOO_LARGE = &H80200019
    [Description("Some of the temporary files could not be deleted. Check the system event log for the complete list of files that could not be deleted.")] Public Const BG_S_UNABLE_TO_DELETE_FILES = &H0020001A
    [Description("The server's response was not valid. The server was not following the defined protocol. Resume the job, and then Background Intelligent Transfer Service (BITS) will try again.")] Public Const BG_E_INVALID_SERVER_RESPONSE = &H8020001B
    [Description("No more files can be added to this job.")] Public Const BG_E_TOO_MANY_FILES = &H8020001C
    [Description("The local file was changed during the transfer. Recreate the job, and then try to transfer it again.")] Public Const BG_E_LOCAL_FILE_CHANGED = &H8020001D
    [Description("The program on the remote server reported the error.")] Public Const BG_E_ERROR_CONTEXT_REMOTE_APPLICATION = &H8020001E
    [Description("The specified session could not be found on the server. Background Intelligent Transfer Service (BITS) will try again.")] Public Const BG_E_SESSION_NOT_FOUND = &H8020001F
    [Description("The job is too large for the server to accept. This job might exceed a job size limit set by the server administrator. Reduce the size of the job, and then try again.")] Public Const BG_E_TOO_LARGE = &H80200020
    [Description("The specified string is too long.")] Public Const BG_E_STRING_TOO_LONG = &H80200021
    [Description("The client and server versions of Background Intelligent Transfer Service (BITS) are incompatible.")] Public Const BG_E_CLIENT_SERVER_PROTOCOL_MISMATCH = &H80200022
    [Description("Scripting OR execute permissions are enabled on the IIS virtual directory associated with the job. To upload files to the virtual directory, disable the scripting and execute permissions on the virtual directory.")] Public Const BG_E_SERVER_EXECUTE_ENABLE = &H80200023
    [Description("The job is not making headway.  The server may be misconfigured.  Background Intelligent Transfer Service (BITS) will try again later.")] Public Const BG_E_NO_PROGRESS = &H80200024
    [Description("The user name cannot be longer than 300 characters. Try again with a shorter name.")] Public Const BG_E_USERNAME_TOO_LARGE = &H80200025
    [Description("The password cannot be longer than 65536 characters. Try again with a shorter password.")] Public Const BG_E_PASSWORD_TOO_LARGE = &H80200026
    [Description("The authentication target specified in the credentials is not defined.")] Public Const BG_E_INVALID_AUTH_TARGET = &H80200027
    [Description("The authentication scheme specified in the credentials is not defined.")] Public Const BG_E_INVALID_AUTH_SCHEME = &H80200028
    [Description("The specified file name does not match any of the files in the job.")] Public Const BG_E_FILE_NOT_FOUND = &H80200029
    [Description("The proxy server was changed.")] Public Const BG_S_PROXY_CHANGED = &H0020002A
    [Description("The requested byte range extends beyond the end of the web page.  Use byte ranges that are wholly within the page.")] Public Const BG_E_INVALID_RANGE = &H8020002B
    [Description("The list of byte ranges contains some overlapping ranges, which are not supported.")] Public Const BG_E_OVERLAPPING_RANGES = &H8020002C
    [Description("A connection could not be established.")] Public Const BG_E_CONNECT_FAILURE = &H8020002D
    [Description("The connection was closed prematurely.")] Public Const BG_E_CONNECTION_CLOSED = &H8020002E
    [Description("Group Policy settings prevent background jobs from running at this time.")] Public Const BG_E_BLOCKED_BY_POLICY = &H8020003E
    [Description("The supplied proxy server or bypass list is invalid.")] Public Const BG_E_INVALID_PROXY_INFO = &H8020003F
    [Description("The format of the supplied security credentials is invalid.")] Public Const BG_E_INVALID_CREDENTIALS = &H80200040
    [Description("The application chose an unsupported hashing algorithm.")] Public Const BG_E_INVALID_HASH_ALGORITHM = &H80200041
    [Description("The chosen cache record has been deleted.  The attempt to update it has been abandoned.")] Public Const BG_E_RECORD_DELETED = &H80200042
    [Description("Another application thread is already updating the cache record.  ")] Public Const BG_E_COMMIT_IN_PROGRESS = &H80200043
    [Description("The system is already searching for neighbors.  Retry the operation after a few seconds.")] Public Const BG_E_DISCOVERY_IN_PROGRESS = &H80200044
    [Description("A Universal Plug and Play (UPnP) error has occured.  Please check your Internet Gateway Device.")] Public Const BG_E_UPNP_ERROR = &H80200045
    [Description("The test option is blocking the download after the search completed.")] Public Const BG_E_TEST_OPTION_BLOCKED_DOWNLOAD = &H80200046
    [Description("Peer-caching is disabled.")] Public Const BG_E_PEERCACHING_DISABLED = &H80200047
    [Description("The cache record is in use and can not be changed or deleted at this time.  Try again after a few seconds.")] Public Const BG_E_BUSYCACHERECORD = &H80200048
    [Description("Job count for the current user has exceeded the per user job limit.")] Public Const BG_E_TOO_MANY_JOBS_PER_USER = &H80200049
    [Description("Job count for the current machine has exceeded the per machine job limit.")] Public Const BG_E_TOO_MANY_JOBS_PER_MACHINE = &H80200050
    [Description("File count for the current job has exceeded the per job file limit.")] Public Const BG_E_TOO_MANY_FILES_IN_JOB = &H80200051
    [Description("Range count for the current file has exceeded the per file Range limit.")] Public Const BG_E_TOO_MANY_RANGES_IN_FILE = &H80200052
    [Description("The application requested data from a web site, but the response was invalid. Using Event Viewer, check the log 'Application Logs \ Microsoft \ Windows \ Bits-client \ Operational' for more details.")] Public Const BG_E_VALIDATION_FAILED = &H80200053
    [Description("BITS timed out downloading the job. The download did not complete within the maximum download time set on the job.")] Public Const BG_E_MAXDOWNLOAD_TIMEOUT = &H80200054
    [Description("The configuration preferences have been saved successfully, but one or more of them are overridden by Group Policy.")] Public Const BG_S_OVERRIDDEN_BY_POLICY = &H00200055
    [Description("The job is configured to use a different security token for some operations, but the token is not currently available.  The application must provide a token and then resume the job.")] Public Const BG_E_TOKEN_REQUIRED = &H80200056
    [Description("SetProperty() or GetProperty() called with an unknown property ID.")] Public Const BG_E_UNKNOWN_PROPERTY_ID = &H80200057
    [Description("Unable to call SetProperty() on a read-only property.")] Public Const BG_E_READ_ONLY_PROPERTY = &H80200058
    [Description("The job's cost transfer policy settings prevent the job from transferring at this time.")] Public Const BG_E_BLOCKED_BY_COST_TRANSFER_POLICY = &H80200059
    [Description("The property is supported for download jobs only.")] Public Const BG_E_PROPERTY_SUPPORTED_FOR_DOWNLOAD_JOBS_ONLY = &H80200060
    [Description("The property cannot be changed after adding a file to job.")] Public Const BG_E_READ_ONLY_PROPERTY_AFTER_ADDFILE = &H80200061
    [Description("The property cannot be changed after Resuming the job.")] Public Const BG_E_READ_ONLY_PROPERTY_AFTER_RESUME = &H80200062
    [Description("The value provided for BITS_JOB_PROPERTY_MAX_DOWNLOAD_SIZE property is invalid. Please provide value between 1 and UINT64_MAX.")] Public Const BG_E_MAX_DOWNLOAD_SIZE_INVALID_VALUE = &H80200063
    [Description("BITS cannot continue downloading the job. The download reached the maximum download size limit set on the job.")] Public Const BG_E_MAX_DOWNLOAD_SIZE_LIMIT_REACHED = &H80200064
    [Description("The transfer was paused because the computer is in power-saving mode. The transfer will resume when the computer wakes up.")] Public Const BG_E_STANDBY_MODE = &H80200065
    [Description("The value provided for BITS_JOB_PROPERTY_USE_STORED_CREDENTIALS property is invalid. The property is only supported for Proxy (BG_AUTH_TARGET_PROXY) targets.")] Public Const BG_E_USE_STORED_CREDENTIALS_NOT_SUPPORTED = &H80200066
    [Description("The transfer was paused because the computer is running on battery power. The transfer will resume when the system is reconnected to A/C power.")] Public Const BG_E_BLOCKED_BY_BATTERY_POLICY = &H80200067
    [Description("The transfer was paused because the computer is in Battery Saver mode. The transfer will resume when the system is reconnected to A/C power or no longer in Battery Saver mode.")] Public Const BG_E_BLOCKED_BY_BATTERY_SAVER = &H80200068
    [Description("An operation did not complete within the expected time interval.")] Public Const BG_E_WATCHDOG_TIMEOUT = &H80200069
    [Description("An app package matching the job owner or COM caller was not found.")] Public Const BG_E_APP_PACKAGE_NOT_FOUND = &H8020006A
    [Description("BITS usage by app packages cannot be supported on this device because one or more dependencies are missing.")] Public Const BG_E_APP_PACKAGE_SCENARIO_NOT_SUPPORTED = &H8020006B
    [Description("BITS persistent state corruption was detected. The necessary steps will be taken to fix this issue once BITS is restarted. BITS will now shutdown.")] Public Const BG_E_DATABASE_CORRUPT = &H8020006C
    [Description("BITS IBackgroundCopyFile6 methods are not supported in SMB, dynamic content, multirange, upload, or upload-reply transfers.")] Public Const BG_E_RANDOM_ACCESS_NOT_SUPPORTED = &H8020006D
    [Description("The background access settings of the job's owner app prevent the job from transferring at this time.")] Public Const BG_E_BLOCKED_BY_BACKGROUND_ACCESS_POLICY = &H8020006E
    [Description("The job was paused because there is an active Game Mode recipient that isn't the job's owner. The job will resume once the Game Mode recipient loses input focus or is closed.")] Public Const BG_E_BLOCKED_BY_GAME_MODE = &H8020006F
    [Description("The job was paused due to system resource constraints. The job will automatically resume once system conditions change.")] Public Const BG_E_BLOCKED_BY_SYSTEM_POLICY = &H80200070
    [Description("The requested action is not supported by jobs configured with a custom HTTP method.")] Public Const BG_E_NOT_SUPPORTED_WITH_CUSTOM_HTTP_METHOD = &H80200071
    [Description("The current job configuration is not compatible with the requested action.")] Public Const BG_E_UNSUPPORTED_JOB_CONFIGURATION = &H80200072
    [Description("The remote file was changed during the transfer. If this is expected, call Resume on the job to initiate a retry.")] Public Const BG_E_REMOTE_FILE_CHANGED = &H80200073
    [Description("The job is configured to raise a certificate validation callback, but the callback object is not currently available. The job owner must provide a new callback object and then resume the job.")] Public Const BG_E_SERVER_CERT_VALIDATION_INTERFACE_REQUIRED = &H80200074
    [Description("This method should only be called when the job is in a paused state (SUSPENDED/ERROR/TRANSFERRED).")] Public Const BG_E_READ_ONLY_WHEN_JOB_ACTIVE = &H80200075
    [Description("The error occurred while the user-provided server certificate validation callback was being processed.")] Public Const BG_E_ERROR_CONTEXT_SERVER_CERTIFICATE_CALLBACK = &H80200076
    [Description("HTTP status 100: The request can be continued.")] Public Const BG_E_HTTP_ERROR_100 = &H80190064
    [Description("HTTP status 101: The server switched protocols in an upgrade header.")] Public Const BG_E_HTTP_ERROR_101 = &H80190065
    [Description("HTTP status 200: The server's response was not valid. The server was not following the defined protocol. Resume the job, and then Background Intelligent Transfer Service (BITS) will try again.")] Public Const BG_E_HTTP_ERROR_200 = &H801900C8
    [Description("HTTP status 201: The request was fulfilled and resulted in the creation of a new resource.")] Public Const BG_E_HTTP_ERROR_201 = &H801900C9
    [Description("HTTP status 202: The request was accepted for processing, but the processing has not been completed yet.")] Public Const BG_E_HTTP_ERROR_202 = &H801900CA
    [Description("HTTP status 203: The returned metadata in the entity-header is not the definitive set available from the server of origin.")] Public Const BG_E_HTTP_ERROR_203 = &H801900CB
    [Description("HTTP status 204: The server has fulfilled the request, but there is no new information to send back.")] Public Const BG_E_HTTP_ERROR_204 = &H801900CC
    [Description("HTTP status 205: The server's response was not valid. The server was not following the defined protocol. Resume the job, and then Background Intelligent Transfer Service (BITS) will try again.")] Public Const BG_E_HTTP_ERROR_205 = &H801900CD
    [Description("HTTP status 206: The server fulfilled the partial GET request for the resource.")] Public Const BG_E_HTTP_ERROR_206 = &H801900CE
    [Description("HTTP status 300: The server could not return the requested data.")] Public Const BG_E_HTTP_ERROR_300 = &H8019012C
    [Description("HTTP status 301: The requested resource was assigned to a new permanent Uniform Resource Identifier (URI), and any future references to this resource should use one of the returned URIs.")] Public Const BG_E_HTTP_ERROR_301 = &H8019012D
    [Description("HTTP status 302: The requested resource was assigned a different Uniform Resource Identifier (URI). This change is temporary.")] Public Const BG_E_HTTP_ERROR_302 = &H8019012E
    [Description("HTTP status 303: The response to the request is under a different Uniform Resource Identifier (URI) and must be retrieved using a GET method on that resource.")] Public Const BG_E_HTTP_ERROR_303 = &H8019012F
    [Description("HTTP status 304: The server's response was not valid. The server was not following the defined protocol. Resume the job, and then Background Intelligent Transfer Service (BITS) will try again.")] Public Const BG_E_HTTP_ERROR_304 = &H80190130
    [Description("HTTP status 305: The requested resource must be accessed through the proxy given by the location field.")] Public Const BG_E_HTTP_ERROR_305 = &H80190131
    [Description("HTTP status 307: The URL has been temporarily relocated. Try again later.")] Public Const BG_E_HTTP_ERROR_307 = &H80190133
    [Description("HTTP status 400: The server cannot process the request because the syntax is not valid.")] Public Const BG_E_HTTP_ERROR_400 = &H80190190
    [Description("HTTP status 401: The requested resource requires user authentication.")] Public Const BG_E_HTTP_ERROR_401 = &H80190191
    [Description("HTTP status 402: The server's response was not valid. The server was not following the defined protocol. Resume the job, and then Background Intelligent Transfer Service (BITS) will try again.")] Public Const BG_E_HTTP_ERROR_402 = &H80190192
    [Description("HTTP status 403: The client does not have sufficient access rights to the requested server object.")] Public Const BG_E_HTTP_ERROR_403 = &H80190193
    [Description("HTTP status 404: The requested URL does not exist on the server.")] Public Const BG_E_HTTP_ERROR_404 = &H80190194
    [Description("HTTP status 405: The method used is not allowed.")] Public Const BG_E_HTTP_ERROR_405 = &H80190195
    [Description("HTTP status 406: No responses acceptable to the client were found.")] Public Const BG_E_HTTP_ERROR_406 = &H80190196
    [Description("HTTP status 407: Proxy authentication is required.")] Public Const BG_E_HTTP_ERROR_407 = &H80190197
    [Description("HTTP status 408: The server timed out waiting for the request.")] Public Const BG_E_HTTP_ERROR_408 = &H80190198
    [Description("HTTP status 409: The request could not be completed because of a conflict with the current state of the resource. The user should resubmit the request with more information.")] Public Const BG_E_HTTP_ERROR_409 = &H80190199
    [Description("HTTP status 410: The requested resource is not currently available at the server, and no forwarding address is known.")] Public Const BG_E_HTTP_ERROR_410 = &H8019019A
    [Description("HTTP status 411: The server cannot accept the request without a defined content length.")] Public Const BG_E_HTTP_ERROR_411 = &H8019019B
    [Description("HTTP status 412: The precondition given in one or more of the request header fields evaluated to false when it was tested on the server.")] Public Const BG_E_HTTP_ERROR_412 = &H8019019C
    [Description("HTTP status 413: The server cannot process the request because the request entity is too large.")] Public Const BG_E_HTTP_ERROR_413 = &H8019019D
    [Description("HTTP status 414: The server cannot process the request because the request Uniform Resource Identifier (URI) is longer than the server can interpret.")] Public Const BG_E_HTTP_ERROR_414 = &H8019019E
    [Description("HTTP status 415: The server's response was not valid. The server was not following the defined protocol. Resume the job, and then Background Intelligent Transfer Service (BITS) will try again.")] Public Const BG_E_HTTP_ERROR_415 = &H8019019F
    [Description("HTTP status 416: The server could not satisfy the range request.")] Public Const BG_E_HTTP_ERROR_416 = &H801901A0
    [Description("HTTP status 417: The server could not meet the expectation given in an Expect request-header field.")] Public Const BG_E_HTTP_ERROR_417 = &H801901A1
    [Description("HTTP status 449: The server's response was not valid. The server was not following the defined protocol. Resume the job, and then Background Intelligent Transfer Service (BITS) will try again.")] Public Const BG_E_HTTP_ERROR_449 = &H801901C1
    [Description("HTTP status 500: An unexpected condition prevented the server from fulfilling the request.")] Public Const BG_E_HTTP_ERROR_500 = &H801901F4
    [Description("HTTP status 501: The server does not support the functionality required to fulfill the request.")] Public Const BG_E_HTTP_ERROR_501 = &H801901F5
    [Description("HTTP status 502: The server, while acting as a gateway or proxy to fulfill the request, received an invalid response from the upstream server it accessed.")] Public Const BG_E_HTTP_ERROR_502 = &H801901F6
    [Description("HTTP status 503: The service is temporarily overloaded.")] Public Const BG_E_HTTP_ERROR_503 = &H801901F7
    [Description("HTTP status 504: The request was timed out waiting for a gateway.")] Public Const BG_E_HTTP_ERROR_504 = &H801901F8
    [Description("HTTP status 505: The server does not support the HTTP protocol version that was used in the request message.")] Public Const BG_E_HTTP_ERROR_505 = &H801901F9
    [Description("The administrator %4 canceled job ' %2' on behalf of %3.  The job ID was %1.")] Public Const BITS_MC_JOB_CANCELLED = &H80194000
    [Description("%3")] Public Const BITS_MC_FILE_DELETION_FAILED = &H80194001
    [Description("Due to space limitations, not all files are listed here.  Check for additional files of the form BITxxx.TMP in the same directory.")] Public Const BITS_MC_FILE_DELETION_FAILED_MORE = &H80194002
    [Description("The administrator %3 modified the %4 property of job ' %2'.  The job ID was %1.")] Public Const BITS_MC_JOB_PROPERTY_CHANGE = &H80194003
    [Description("The administrator %4 took ownership of job ' %2' from %3.  The job ID was %1.")] Public Const BITS_MC_JOB_TAKE_OWNERSHIP = &H80194004
    [Description("Job ' %2' owned by %3 was canceled after being inactive for more than %4 days.  The job ID was %1.")] Public Const BITS_MC_JOB_SCAVENGED = &H80194005
    [Description("Job ' %2' owned by %3 failed to notify its associated application.  BITS will retry in %4 minutes.  The job ID was %1.")] Public Const BITS_MC_JOB_NOTIFICATION_FAILURE = &H80194006
    [Description("The BITS job list is not in a recognized format.  It may have been created by a different version of BITS.  The job list has been cleared.")] Public Const BITS_MC_STATE_FILE_CORRUPT = &H80194007
    [Description("The BITS service failed to start. Try restarting the service at a later time.")] Public Const BITS_MC_FAILED_TO_START = &H80194008
    [Description("BITS has hit a fatal error communicating with an Internet Gateway Device.  Please check that the device is functioning properly. BITS will not attempt to use this device until the next system reboot.")] Public Const BITS_MC_FATAL_IGD_ERROR = &H80194009
    [Description("BITS Peer-caching protocol")] Public Const BITS_MC_PEERCACHING_PORT = &H8019400A
    [Description("Web Services-Discovery protocol")] Public Const BITS_MC_WSD_PORT = &H8019400B

    Public Const BG_SIZE_UNKNOWN As LongLong = -1
    
Public Type BG_FILE_PROGRESS
    BytesTotal As LongLong
    BytesTransferred As LongLong
    completed As BOOL
End Type

Public Enum BG_ERROR_CONTEXT
    BG_ERROR_CONTEXT_NONE = 0
    BG_ERROR_CONTEXT_UNKNOWN = 1
    BG_ERROR_CONTEXT_GENERAL_QUEUE_MANAGER = 2
    BG_ERROR_CONTEXT_QUEUE_MANAGER_NOTIFICATION = 3
    BG_ERROR_CONTEXT_LOCAL_FILE = 4
    BG_ERROR_CONTEXT_REMOTE_FILE = 5
    BG_ERROR_CONTEXT_GENERAL_TRANSPORT = 6
    BG_ERROR_CONTEXT_REMOTE_APPLICATION = 7
    BG_ERROR_CONTEXT_SERVER_CERTIFICATE_CALLBACK = 8
End Enum

Public Type BG_FILE_INFO
    RemoteName As LongPtr
    LocalName As LongPtr
End Type

Public Type BG_JOB_PROGRESS
    BytesTotal As LongLong
    BytesTransferred As LongLong
    FilesTotal As Long
    FilesTransferred As Long
End Type

Public Type BG_JOB_TIMES
    CreationTime As FILETIME
    ModificationTime As FILETIME
    TransferCompletionTime As FILETIME
End Type

Public Enum BG_JOB_PRIORITY
    BG_JOB_PRIORITY_FOREGROUND = 0
    BG_JOB_PRIORITY_HIGH = 1
    BG_JOB_PRIORITY_NORMAL = 2
    BG_JOB_PRIORITY_LOW = 3
End Enum

Public Enum BG_JOB_STATE
    BG_JOB_STATE_QUEUED = 0
    BG_JOB_STATE_CONNECTING = 1
    BG_JOB_STATE_TRANSFERRING = 2
    BG_JOB_STATE_SUSPENDED = 3
    BG_JOB_STATE_ERROR = 4
    BG_JOB_STATE_TRANSIENT_ERROR = 5
    BG_JOB_STATE_TRANSFERRED = 6
    BG_JOB_STATE_ACKNOWLEDGED = 7
    BG_JOB_STATE_CANCELLED = 8
End Enum

Public Enum BG_JOB_TYPE
    BG_JOB_TYPE_DOWNLOAD = 0
    BG_JOB_TYPE_UPLOAD = 1
    BG_JOB_TYPE_UPLOAD_REPLY = 2
End Enum

Public Enum BG_JOB_PROXY_USAGE
    BG_JOB_PROXY_USAGE_PRECONFIG = 0
    BG_JOB_PROXY_USAGE_NO_PROXY = 1
    BG_JOB_PROXY_USAGE_OVERRIDE = 2
    BG_JOB_PROXY_USAGE_AUTODETECT = 3
End Enum

Public Enum BITSNotifyFlags
    BG_NOTIFY_JOB_TRANSFERRED = &H0001
    BG_NOTIFY_JOB_ERROR = &H0002
    BG_NOTIFY_DISABLE = &H0004
    BG_NOTIFY_JOB_MODIFICATION = &H0008
    BG_NOTIFY_FILE_TRANSFERRED = &H0010
    BG_NOTIFY_FILE_RANGES_TRANSFERRED = &H0020
End Enum

Public Enum BITSJobEnumFlags
    BG_JOB_ENUM_ALL_USERS = 1
End Enum

Public Type BG_JOB_REPLY_PROGRESS
    BytesTotal As LongLong
    BytesTransferred As LongLong
End Type

Public Enum BG_AUTH_TARGET
    BG_AUTH_TARGET_SERVER = 1
    BG_AUTH_TARGET_PROXY = 2
End Enum

Public Enum BG_AUTH_SCHEME
    BG_AUTH_SCHEME_BASIC = 1
    BG_AUTH_SCHEME_DIGEST = 2
    BG_AUTH_SCHEME_NTLM = 3
    BG_AUTH_SCHEME_NEGOTIATE = 4
    BG_AUTH_SCHEME_PASSPORT = 5
End Enum

Public Type BG_BASIC_CREDENTIALS
    UserName As LongPtr
    password As LongPtr
End Type

Public Type BG_AUTH_CREDENTIALS
    target As BG_AUTH_TARGET
    Scheme As BG_AUTH_SCHEME
End Type

Public Type BG_FILE_RANGE
    InitialOffset As LongLong
    Length As LongLong
End Type

Public Enum BITSCopyAclFlags
    BG_COPY_FILE_OWNER = 1
    BG_COPY_FILE_GROUP = 2
    BG_COPY_FILE_DACL = 4
    BG_COPY_FILE_SACL = 8
    BG_COPY_FILE_ALL = 15
End Enum

Public Enum BG_CERT_STORE_LOCATION
    BG_CERT_STORE_LOCATION_CURRENT_USER = 0
    BG_CERT_STORE_LOCATION_LOCAL_MACHINE = 1
    BG_CERT_STORE_LOCATION_CURRENT_SERVICE = 2
    BG_CERT_STORE_LOCATION_SERVICES = 3
    BG_CERT_STORE_LOCATION_USERS = 4
    BG_CERT_STORE_LOCATION_CURRENT_USER_GROUP_POLICY = 5
    BG_CERT_STORE_LOCATION_LOCAL_MACHINE_GROUP_POLICY = 6
    BG_CERT_STORE_LOCATION_LOCAL_MACHINE_ENTERPRISE = 7
End Enum

Public Enum BITSSSLFlags
    BG_SSL_ENABLE_CRL_CHECK = &H0001
    BG_SSL_IGNORE_CERT_CN_INVALID = &H0002
    BG_SSL_IGNORE_CERT_DATE_INVALID = &H0004
    BG_SSL_IGNORE_UNKNOWN_CA = &H0008
    BG_SSL_IGNORE_CERT_WRONG_USAGE = &H0010
End Enum

Public Enum BITSRedirectFlags
    ' 
    '  Main redirection policy: defines how BITS treats HTTP redirects
    '  - default = BG_HTTP_REDIRECT_POLICY_SILENT; for any other value
    '    BITS will update IBackgroundCopyFile's RemoteName with the final URL
    '  - DISALLOW will cause bits to enter error state when a redirect occurs
    ' 
    '  ALLOW_SILENT and ALLOW_REPORT may be combined with
    '  BG_HTTP_REDIRECT_POLICY_ALLOW_HTTPS_TO_HTTP (see below)
    ' 
    BG_HTTP_REDIRECT_POLICY_MASK = &H0700
    BG_HTTP_REDIRECT_POLICY_ALLOW_SILENT = &H0000
    BG_HTTP_REDIRECT_POLICY_ALLOW_REPORT = &H0100
    BG_HTTP_REDIRECT_POLICY_DISALLOW = &H0200
    ' 
    '  Supplemental redirection policy:
    '      By default, redirection from HTTPS to HTTP is not allowed.
    '      Set this flag to allow it.
    ' 
    BG_HTTP_REDIRECT_POLICY_ALLOW_HTTPS_TO_HTTP = &H0800
End Enum

Public Enum BITSPeerCachineFlags
    BG_ENABLE_PEERCACHING_CLIENT = &H0001
    BG_ENABLE_PEERCACHING_SERVER = &H0002
    BG_DISABLE_BRANCH_CACHE = &H0004
End Enum

Public Enum BITSJobPeerCachingFlags
    BG_JOB_ENABLE_PEERCACHING_CLIENT = &H0001
    BG_JOB_ENABLE_PEERCACHING_SERVER = &H0002
    BG_JOB_DISABLE_BRANCH_CACHE = &H0004
End Enum

Public Enum BITSHelperTokenFlags
    BG_TOKEN_LOCAL_FILE = &H0001
    BG_TOKEN_NETWORK = &H0002
End Enum

Public Const BG_LENGTH_TO_EOF As LongLong = -1

Public Enum BITSCostStateFlags
    '  OR'able Cost Flags constants
    BITS_COST_STATE_UNRESTRICTED = &H1
    BITS_COST_STATE_CAPPED_USAGE_UNKNOWN = &H2
    BITS_COST_STATE_BELOW_CAP = &H4
    BITS_COST_STATE_NEAR_CAP = &H8
    BITS_COST_STATE_OVERCAP_CHARGED = &H10
    BITS_COST_STATE_OVERCAP_THROTTLED = &H20
    BITS_COST_STATE_USAGE_BASED = &H40
    BITS_COST_STATE_ROAMING = &H80
    BITS_COST_OPTION_IGNORE_CONGESTION = &H80000000
    '  placeholder -  for internal use
    BITS_COST_STATE_RESERVED = &H40000000
    BITS_COST_STATE_TRANSFER_NOT_ROAMING = (BITS_COST_OPTION_IGNORE_CONGESTION Or BITS_COST_STATE_USAGE_BASED Or BITS_COST_STATE_OVERCAP_THROTTLED Or BITS_COST_STATE_OVERCAP_CHARGED Or BITS_COST_STATE_NEAR_CAP Or BITS_COST_STATE_BELOW_CAP Or BITS_COST_STATE_CAPPED_USAGE_UNKNOWN Or BITS_COST_STATE_UNRESTRICTED)
    BITS_COST_STATE_TRANSFER_NO_SURCHARGE = (BITS_COST_OPTION_IGNORE_CONGESTION Or BITS_COST_STATE_USAGE_BASED Or BITS_COST_STATE_OVERCAP_THROTTLED Or BITS_COST_STATE_NEAR_CAP Or BITS_COST_STATE_BELOW_CAP Or BITS_COST_STATE_CAPPED_USAGE_UNKNOWN Or BITS_COST_STATE_UNRESTRICTED)
    BITS_COST_STATE_TRANSFER_STANDARD = (BITS_COST_OPTION_IGNORE_CONGESTION Or BITS_COST_STATE_USAGE_BASED Or BITS_COST_STATE_OVERCAP_THROTTLED Or BITS_COST_STATE_BELOW_CAP Or BITS_COST_STATE_CAPPED_USAGE_UNKNOWN Or BITS_COST_STATE_UNRESTRICTED)
    BITS_COST_STATE_TRANSFER_UNRESTRICTED = (BITS_COST_OPTION_IGNORE_CONGESTION Or BITS_COST_STATE_OVERCAP_THROTTLED Or BITS_COST_STATE_UNRESTRICTED)
    BITS_COST_STATE_TRANSFER_ALWAYS = (BITS_COST_OPTION_IGNORE_CONGESTION Or BITS_COST_STATE_ROAMING Or BITS_COST_STATE_USAGE_BASED Or BITS_COST_STATE_OVERCAP_THROTTLED Or BITS_COST_STATE_OVERCAP_CHARGED Or BITS_COST_STATE_NEAR_CAP Or BITS_COST_STATE_BELOW_CAP Or BITS_COST_STATE_CAPPED_USAGE_UNKNOWN Or BITS_COST_STATE_UNRESTRICTED)
End Enum
            
Public Enum BITS_JOB_TRANSFER_POLICY
    BITS_JOB_TRANSFER_POLICY_ALWAYS = &H800000FF ' BITS_COST_STATE_TRANSFER_ALWAYS
    BITS_JOB_TRANSFER_POLICY_NOT_ROAMING = &H8000007F ' BITS_COST_STATE_TRANSFER_NOT_ROAMING
    BITS_JOB_TRANSFER_POLICY_NO_SURCHARGE = &H8000006F ' BITS_COST_STATE_TRANSFER_NO_SURCHARGE
    BITS_JOB_TRANSFER_POLICY_STANDARD = &H80000067 ' BITS_COST_STATE_TRANSFER_STANDARD
    BITS_JOB_TRANSFER_POLICY_UNRESTRICTED = &H80000021 ' BITS_COST_STATE_TRANSFER_UNRESTRICTED
End Enum

Public Enum BITS_JOB_PROPERTY_ID
    '  ID for the 'CostFlags' property (read-write) used to control transfer behavior over cellular and similar networks
    BITS_JOB_PROPERTY_ID_COST_FLAGS = 1
    '  ID for the CLSID notification for BITS (read-write).
    BITS_JOB_PROPERTY_NOTIFICATION_CLSID = 2
    '  ID for marking the BITS job adaptive to dynamic contents.
    BITS_JOB_PROPERTY_DYNAMIC_CONTENT = 3
    '  ID for marking the BITS job as optimized download.
    BITS_JOB_PROPERTY_HIGH_PERFORMANCE = 4
    '  ID for marking the BITS job as optimized download.
    BITS_JOB_PROPERTY_MAX_DOWNLOAD_SIZE = 5
    '  ID for marking the BITS job to use stored or automatic credentials.
    BITS_JOB_PROPERTY_USE_STORED_CREDENTIALS = 7
    '  ID for setting the minimum notification interval for job modifications (in milliseconds).
    BITS_JOB_PROPERTY_MINIMUM_NOTIFICATION_INTERVAL_MS = 9
    '  ID for configuring the BITS job to transfer data only when the application explicitly asks for it.
    BITS_JOB_PROPERTY_ON_DEMAND_MODE = 10
End Enum

Public Type BITS_JOB_PROPERTY_VALUE
    'typedef [switch_type(BITS_JOB_PROPERTY_ID)] union
    '{
    '    [case(BITS_JOB_PROPERTY_ID_COST_FLAGS, 6, 8, BITS_JOB_PROPERTY_MINIMUM_NOTIFICATION_INTERVAL_MS)]
    '        DWORD Dword;
    '    [case(BITS_JOB_PROPERTY_NOTIFICATION_CLSID)]
    '        GUID ClsID;
    '    [case(BITS_JOB_PROPERTY_DYNAMIC_CONTENT, BITS_JOB_PROPERTY_HIGH_PERFORMANCE, BITS_JOB_PROPERTY_ON_DEMAND_MODE)]
    '        BOOL Enable;
    '    [case(BITS_JOB_PROPERTY_MAX_DOWNLOAD_SIZE)]
    '        UINT64 Uint64;
    '    [case(BITS_JOB_PROPERTY_USE_STORED_CREDENTIALS)]
    '        BG_AUTH_TARGET Target;
    '}
    'BITS_JOB_PROPERTY_VALUE;
    u(0 To 3) As Long
End Type

Public Enum BITS_FILE_PROPERTY_ID
    '  ID for the 'HttpResponseHeaders' property (read-write) used for CDN identification.
    BITS_FILE_PROPERTY_ID_HTTP_RESPONSE_HEADERS = 1
End Enum

Public Type BITS_FILE_PROPERTY_VALUE
    'typedef [switch_type(BITS_FILE_PROPERTY_ID)] union
    '{
    '    [case(BITS_FILE_PROPERTY_ID_HTTP_RESPONSE_HEADERS)]
    '        LPWSTR String;
    '}
    'BITS_FILE_PROPERTY_VALUE;
    pString As LongPtr
End Type

Public Enum QMgrNotifyFlags
    QM_NOTIFY_FILE_DONE = &H00000001
    QM_NOTIFY_JOB_DONE = &H00000002
    QM_NOTIFY_GROUP_DONE = &H00000004
    QM_NOTIFY_DISABLE_NOTIFY = &H00000040
    QM_NOTIFY_USE_PROGRESSEX = &H00000080
End Enum

Public Enum QMgrStatusFlags
    QM_STATUS_FILE_COMPLETE = &H00000001
    QM_STATUS_FILE_INCOMPLETE = &H00000002
    QM_STATUS_JOB_COMPLETE = &H00000004
    QM_STATUS_JOB_INCOMPLETE = &H00000008
    QM_STATUS_JOB_ERROR = &H00000010
    QM_STATUS_JOB_FOREGROUND = &H00000020
    QM_STATUS_GROUP_COMPLETE = &H00000040
    QM_STATUS_GROUP_INCOMPLETE = &H00000080
    QM_STATUS_GROUP_SUSPENDED = &H00000100
    QM_STATUS_GROUP_ERROR = &H00000200
    QM_STATUS_GROUP_FOREGROUND = &H00000400
End Enum
            
Public Enum QMgrProtocolFlags
    QM_PROTOCOL_HTTP = 1
    QM_PROTOCOL_FTP = 2
    QM_PROTOCOL_SMB = 3
    QM_PROTOCOL_CUSTOM = 4
End Enum
            
Public Enum QMgrProgressFlags
    QM_PROGRESS_PERCENT_DONE = 1
    QM_PROGRESS_TIME_DONE = 2
    QM_PROGRESS_SIZE_DONE = 3
End Enum

Public Enum QMgrErrorCodes
    QM_E_INVALID_STATE = &H81001001
    QM_E_SERVICE_UNAVAILABLE = &H81001002
    QM_E_DOWNLOADER_UNAVAILABLE = &H81001003
    QM_E_ITEM_NOT_FOUND = &H81001004
End Enum

Public Type BACKGROUND_COPY_TIMES
    ftCreationTime As FILETIME
    ftModificationTime As FILETIME
    ftCompletionTime As FILETIME
End Type

Public Type FILESETINFO
    bstrRemoteFile As String
    bstrLocalFile As String
    dwSizeHint As Long
End Type

Public Enum GROUPPROP
    GROUPPROP_PRIORITY = 0
    GROUPPROP_REMOTEUSERID = 1
    GROUPPROP_REMOTEUSERPWD = 2
    GROUPPROP_LOCALUSERID = 3
    GROUPPROP_LOCALUSERPWD = 4
    GROUPPROP_PROTOCOLFLAGS = 5
    GROUPPROP_NOTIFYFLAGS = 6
    GROUPPROP_NOTIFYCLSID = 7
    GROUPPROP_PROGRESSSIZE = 8
    GROUPPROP_PROGRESSPERCENT = 9
    GROUPPROP_PROGRESSTIME = 10
    GROUPPROP_DISPLAYNAME = 11
    GROUPPROP_DESCRIPTION = 12
End Enum

End Module